begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.rest
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|rest
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|FooBar
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|JndiRegistry
import|;
end_import

begin_class
DECL|class|FromRestConfigurationTest
specifier|public
class|class
name|FromRestConfigurationTest
extends|extends
name|FromRestGetTest
block|{
DECL|field|myDummy
specifier|private
name|Object
name|myDummy
init|=
operator|new
name|FooBar
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|createRegistry ()
specifier|protected
name|JndiRegistry
name|createRegistry
parameter_list|()
throws|throws
name|Exception
block|{
name|JndiRegistry
name|jndi
init|=
name|super
operator|.
name|createRegistry
argument_list|()
decl_stmt|;
name|jndi
operator|.
name|bind
argument_list|(
literal|"myDummy"
argument_list|,
name|myDummy
argument_list|)
expr_stmt|;
return|return
name|jndi
return|;
block|}
annotation|@
name|Override
DECL|method|testFromRestModel ()
specifier|public
name|void
name|testFromRestModel
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|testFromRestModel
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"dummy-rest"
argument_list|,
name|context
operator|.
name|getRestConfiguration
argument_list|()
operator|.
name|getComponent
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"localhost"
argument_list|,
name|context
operator|.
name|getRestConfiguration
argument_list|()
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9090
argument_list|,
name|context
operator|.
name|getRestConfiguration
argument_list|()
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bar"
argument_list|,
name|context
operator|.
name|getRestConfiguration
argument_list|()
operator|.
name|getComponentProperties
argument_list|()
operator|.
name|get
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"stuff"
argument_list|,
name|context
operator|.
name|getRestConfiguration
argument_list|()
operator|.
name|getComponentProperties
argument_list|()
operator|.
name|get
argument_list|(
literal|"other"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"200"
argument_list|,
name|context
operator|.
name|getRestConfiguration
argument_list|()
operator|.
name|getEndpointProperties
argument_list|()
operator|.
name|get
argument_list|(
literal|"size"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1000"
argument_list|,
name|context
operator|.
name|getRestConfiguration
argument_list|()
operator|.
name|getConsumerProperties
argument_list|()
operator|.
name|get
argument_list|(
literal|"pollTimeout"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"#myDummy"
argument_list|,
name|context
operator|.
name|getRestConfiguration
argument_list|()
operator|.
name|getConsumerProperties
argument_list|()
operator|.
name|get
argument_list|(
literal|"dummy"
argument_list|)
argument_list|)
expr_stmt|;
name|DummyRestConsumerFactory
name|factory
init|=
operator|(
name|DummyRestConsumerFactory
operator|)
name|context
operator|.
name|getRegistry
argument_list|()
operator|.
name|lookupByName
argument_list|(
literal|"dummy-rest"
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|myDummy
argument_list|,
name|factory
operator|.
name|getDummy
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|RouteBuilder
name|lowerR
init|=
name|super
operator|.
name|createRouteBuilder
argument_list|()
decl_stmt|;
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|restConfiguration
argument_list|()
operator|.
name|component
argument_list|(
literal|"dummy-rest"
argument_list|)
operator|.
name|host
argument_list|(
literal|"localhost"
argument_list|)
operator|.
name|port
argument_list|(
literal|9090
argument_list|)
operator|.
name|componentProperty
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
operator|.
name|componentProperty
argument_list|(
literal|"other"
argument_list|,
literal|"stuff"
argument_list|)
operator|.
name|endpointProperty
argument_list|(
literal|"size"
argument_list|,
literal|"200"
argument_list|)
operator|.
name|consumerProperty
argument_list|(
literal|"pollTimeout"
argument_list|,
literal|"1000"
argument_list|)
operator|.
name|consumerProperty
argument_list|(
literal|"dummy"
argument_list|,
literal|"#myDummy"
argument_list|)
expr_stmt|;
name|includeRoutes
argument_list|(
name|lowerR
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

