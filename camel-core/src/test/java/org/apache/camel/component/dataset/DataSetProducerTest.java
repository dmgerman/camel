begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.dataset
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|dataset
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ContextTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_comment
comment|/**  * @version   */
end_comment

begin_class
DECL|class|DataSetProducerTest
specifier|public
class|class
name|DataSetProducerTest
extends|extends
name|ContextTestSupport
block|{
DECL|field|dataSetName
specifier|static
specifier|final
name|String
name|dataSetName
init|=
literal|"foo"
decl_stmt|;
DECL|field|dataSetUri
specifier|static
specifier|final
name|String
name|dataSetUri
init|=
literal|"dataset://"
operator|+
name|dataSetName
decl_stmt|;
DECL|field|resultUri
specifier|static
specifier|final
name|String
name|resultUri
init|=
literal|"mock://result"
decl_stmt|;
DECL|field|dataSet
specifier|protected
name|SimpleDataSet
name|dataSet
init|=
operator|new
name|SimpleDataSet
argument_list|(
literal|20
argument_list|)
decl_stmt|;
annotation|@
name|Override
DECL|method|createJndiContext ()
specifier|protected
name|Context
name|createJndiContext
parameter_list|()
throws|throws
name|Exception
block|{
name|Context
name|context
init|=
name|super
operator|.
name|createJndiContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|bind
argument_list|(
name|dataSetName
argument_list|,
name|dataSet
argument_list|)
expr_stmt|;
return|return
name|context
return|;
block|}
DECL|method|testSendingMessagesExplicitlyToDataSetEndpoint ()
specifier|public
name|void
name|testSendingMessagesExplicitlyToDataSetEndpoint
parameter_list|()
throws|throws
name|Exception
block|{
name|long
name|size
init|=
name|dataSet
operator|.
name|getSize
argument_list|()
decl_stmt|;
for|for
control|(
name|long
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|template
operator|.
name|sendBodyAndHeader
argument_list|(
name|dataSetUri
argument_list|,
literal|"<hello>world!</hello>"
argument_list|,
name|Exchange
operator|.
name|DATASET_INDEX
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

