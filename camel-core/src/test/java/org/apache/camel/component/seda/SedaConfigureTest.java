begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.seda
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|seda
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|BlockingQueue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|LinkedBlockingQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ContextTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_comment
comment|/**  * @version   */
end_comment

begin_class
DECL|class|SedaConfigureTest
specifier|public
class|class
name|SedaConfigureTest
extends|extends
name|ContextTestSupport
block|{
DECL|method|testBlockingQueueConfigured ()
specifier|public
name|void
name|testBlockingQueueConfigured
parameter_list|()
throws|throws
name|Exception
block|{
name|SedaEndpoint
name|endpoint
init|=
name|resolveMandatoryEndpoint
argument_list|(
literal|"seda:foo?size=2000"
argument_list|,
name|SedaEndpoint
operator|.
name|class
argument_list|)
decl_stmt|;
name|BlockingQueue
argument_list|<
name|Exchange
argument_list|>
name|queue
init|=
name|endpoint
operator|.
name|getQueue
argument_list|()
decl_stmt|;
name|LinkedBlockingQueue
name|blockingQueue
init|=
name|assertIsInstanceOf
argument_list|(
name|LinkedBlockingQueue
operator|.
name|class
argument_list|,
name|queue
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"remainingCapacity"
argument_list|,
literal|2000
argument_list|,
name|blockingQueue
operator|.
name|remainingCapacity
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testConcurrentConsumersConfigured ()
specifier|public
name|void
name|testConcurrentConsumersConfigured
parameter_list|()
block|{
name|SedaEndpoint
name|endpoint
init|=
name|resolveMandatoryEndpoint
argument_list|(
literal|"seda:foo?concurrentConsumers=5"
argument_list|,
name|SedaEndpoint
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"concurrentConsumers"
argument_list|,
literal|5
argument_list|,
name|endpoint
operator|.
name|getConcurrentConsumers
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

