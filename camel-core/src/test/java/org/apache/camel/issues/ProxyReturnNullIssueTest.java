begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.issues
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|issues
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ContextTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|bean
operator|.
name|ProxyHelper
import|;
end_import

begin_comment
comment|/**  * @version   */
end_comment

begin_class
DECL|class|ProxyReturnNullIssueTest
specifier|public
class|class
name|ProxyReturnNullIssueTest
extends|extends
name|ContextTestSupport
block|{
DECL|method|testEcho ()
specifier|public
name|void
name|testEcho
parameter_list|()
throws|throws
name|Exception
block|{
name|Echo
name|service
init|=
name|ProxyHelper
operator|.
name|createProxy
argument_list|(
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"direct:echo"
argument_list|)
argument_list|,
name|Echo
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Hello World"
argument_list|,
name|service
operator|.
name|echo
argument_list|(
literal|"Hello World"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testEchoNull ()
specifier|public
name|void
name|testEchoNull
parameter_list|()
throws|throws
name|Exception
block|{
name|Echo
name|service
init|=
name|ProxyHelper
operator|.
name|createProxy
argument_list|(
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"direct:echo"
argument_list|)
argument_list|,
name|Echo
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|service
operator|.
name|echo
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
literal|"direct:echo"
argument_list|)
operator|.
name|bean
argument_list|(
operator|new
name|MyEchoBean
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
DECL|interface|Echo
specifier|public
specifier|static
interface|interface
name|Echo
block|{
DECL|method|echo (String text)
name|String
name|echo
parameter_list|(
name|String
name|text
parameter_list|)
function_decl|;
block|}
DECL|class|MyEchoBean
specifier|public
specifier|static
class|class
name|MyEchoBean
implements|implements
name|Echo
block|{
DECL|method|echo (String text)
specifier|public
name|String
name|echo
parameter_list|(
name|String
name|text
parameter_list|)
block|{
return|return
name|text
return|;
block|}
block|}
block|}
end_class

end_unit

