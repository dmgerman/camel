begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.util.jsse
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|jsse
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyStore
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|NoSuchAlgorithmException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|SecureRandom
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|KeyManagerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|SSLContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|SSLSocket
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|TrustManagerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|TestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|properties
operator|.
name|PropertiesComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_class
DECL|class|AbstractJsseParametersTest
specifier|public
specifier|abstract
class|class
name|AbstractJsseParametersTest
extends|extends
name|TestSupport
block|{
DECL|method|createPropertiesPlaceholderAwareContext ()
specifier|protected
name|CamelContext
name|createPropertiesPlaceholderAwareContext
parameter_list|()
throws|throws
name|Exception
block|{
name|Properties
name|supplementalProperties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|KeyStore
name|ks
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
name|KeyStore
operator|.
name|getDefaultType
argument_list|()
argument_list|)
decl_stmt|;
name|KeyManagerFactory
name|kmf
init|=
name|KeyManagerFactory
operator|.
name|getInstance
argument_list|(
name|KeyManagerFactory
operator|.
name|getDefaultAlgorithm
argument_list|()
argument_list|)
decl_stmt|;
name|TrustManagerFactory
name|tmf
init|=
name|TrustManagerFactory
operator|.
name|getInstance
argument_list|(
name|TrustManagerFactory
operator|.
name|getDefaultAlgorithm
argument_list|()
argument_list|)
decl_stmt|;
name|SecureRandom
name|sr
init|=
literal|null
decl_stmt|;
try|try
block|{
name|sr
operator|=
name|SecureRandom
operator|.
name|getInstance
argument_list|(
literal|"SHA1PRNG"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchAlgorithmException
name|e
parameter_list|)
block|{
comment|// Ignore
block|}
name|SSLContext
name|sslc
init|=
name|SSLContext
operator|.
name|getInstance
argument_list|(
literal|"TLS"
argument_list|)
decl_stmt|;
name|sslc
operator|.
name|init
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|SSLSocket
name|socket
init|=
operator|(
name|SSLSocket
operator|)
name|sslc
operator|.
name|getSocketFactory
argument_list|()
operator|.
name|createSocket
argument_list|()
decl_stmt|;
name|supplementalProperties
operator|.
name|setProperty
argument_list|(
literal|"keyStoreParameters.type"
argument_list|,
name|KeyStore
operator|.
name|getDefaultType
argument_list|()
argument_list|)
expr_stmt|;
name|supplementalProperties
operator|.
name|setProperty
argument_list|(
literal|"keyStoreParameters.provider"
argument_list|,
name|ks
operator|.
name|getProvider
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|supplementalProperties
operator|.
name|setProperty
argument_list|(
literal|"keyManagersParameters.algorithm"
argument_list|,
name|KeyManagerFactory
operator|.
name|getDefaultAlgorithm
argument_list|()
argument_list|)
expr_stmt|;
name|supplementalProperties
operator|.
name|setProperty
argument_list|(
literal|"keyManagersParameters.provider"
argument_list|,
name|kmf
operator|.
name|getProvider
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|supplementalProperties
operator|.
name|setProperty
argument_list|(
literal|"trustManagersParameters.algorithm"
argument_list|,
name|TrustManagerFactory
operator|.
name|getDefaultAlgorithm
argument_list|()
argument_list|)
expr_stmt|;
name|supplementalProperties
operator|.
name|setProperty
argument_list|(
literal|"trustManagersParameters.provider"
argument_list|,
name|tmf
operator|.
name|getProvider
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|sr
operator|!=
literal|null
condition|)
block|{
name|supplementalProperties
operator|.
name|setProperty
argument_list|(
literal|"secureRandomParameters.algorithm"
argument_list|,
literal|"SHA1PRNG"
argument_list|)
expr_stmt|;
name|supplementalProperties
operator|.
name|setProperty
argument_list|(
literal|"secureRandomParameters.provider"
argument_list|,
name|sr
operator|.
name|getProvider
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|supplementalProperties
operator|.
name|setProperty
argument_list|(
literal|"sslContextParameters.provider"
argument_list|,
name|sslc
operator|.
name|getProvider
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|supplementalProperties
operator|.
name|setProperty
argument_list|(
literal|"cipherSuite.0"
argument_list|,
name|socket
operator|.
name|getSupportedCipherSuites
argument_list|()
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
comment|// Have to skip this guy because he doesn't work with TLS as the SSLContext protocol
name|String
name|ssp
init|=
literal|""
decl_stmt|;
for|for
control|(
name|String
name|protocol
range|:
name|socket
operator|.
name|getSupportedProtocols
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
literal|"SSLv2Hello"
operator|.
name|equals
argument_list|(
name|protocol
argument_list|)
condition|)
block|{
name|ssp
operator|=
name|protocol
expr_stmt|;
break|break;
block|}
block|}
name|supplementalProperties
operator|.
name|setProperty
argument_list|(
literal|"secureSocketProtocol.0"
argument_list|,
name|ssp
argument_list|)
expr_stmt|;
return|return
name|this
operator|.
name|createPropertiesPlaceholderAwareContext
argument_list|(
name|supplementalProperties
argument_list|)
return|;
block|}
DECL|method|createPropertiesPlaceholderAwareContext (Properties supplementalProperties)
specifier|protected
name|CamelContext
name|createPropertiesPlaceholderAwareContext
parameter_list|(
name|Properties
name|supplementalProperties
parameter_list|)
throws|throws
name|IOException
block|{
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|(
name|supplementalProperties
argument_list|)
decl_stmt|;
name|properties
operator|.
name|load
argument_list|(
name|AbstractJsseParametersTest
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"test.properties"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|supplementalProperties
operator|!=
literal|null
condition|)
block|{
name|Properties
name|mergedProps
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|keys
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|keys
operator|.
name|addAll
argument_list|(
name|properties
operator|.
name|stringPropertyNames
argument_list|()
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addAll
argument_list|(
name|supplementalProperties
operator|.
name|stringPropertyNames
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|key
range|:
name|keys
control|)
block|{
name|mergedProps
operator|.
name|setProperty
argument_list|(
name|key
argument_list|,
name|properties
operator|.
name|getProperty
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|properties
operator|=
name|mergedProps
expr_stmt|;
block|}
name|properties
operator|.
name|store
argument_list|(
operator|new
name|FileOutputStream
argument_list|(
literal|"target/jsse-test.properties"
argument_list|)
argument_list|,
literal|"Generated by "
operator|+
name|AbstractJsseParametersTest
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|PropertiesComponent
name|pc
init|=
operator|new
name|PropertiesComponent
argument_list|()
decl_stmt|;
name|pc
operator|.
name|setLocation
argument_list|(
literal|"file:./target/jsse-test.properties"
argument_list|)
expr_stmt|;
name|CamelContext
name|context
init|=
operator|new
name|DefaultCamelContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
literal|"properties"
argument_list|,
name|pc
argument_list|)
expr_stmt|;
return|return
name|context
return|;
block|}
block|}
end_class

end_unit

