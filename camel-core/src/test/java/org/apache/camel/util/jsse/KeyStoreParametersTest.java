begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.util.jsse
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|jsse
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|GeneralSecurityException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyStore
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyStoreException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|NoSuchProviderException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|KeyStoreParametersTest
specifier|public
class|class
name|KeyStoreParametersTest
extends|extends
name|AbstractJsseParametersTest
block|{
DECL|method|createMinimalKeyStoreParameters ()
specifier|protected
name|KeyStoreParameters
name|createMinimalKeyStoreParameters
parameter_list|()
block|{
name|KeyStoreParameters
name|ksp
init|=
operator|new
name|KeyStoreParameters
argument_list|()
decl_stmt|;
name|ksp
operator|.
name|setResource
argument_list|(
literal|"org/apache/camel/util/jsse/localhost.ks"
argument_list|)
expr_stmt|;
name|ksp
operator|.
name|setPassword
argument_list|(
literal|"changeit"
argument_list|)
expr_stmt|;
return|return
name|ksp
return|;
block|}
annotation|@
name|Test
DECL|method|testPropertyPlaceholders ()
specifier|public
name|void
name|testPropertyPlaceholders
parameter_list|()
throws|throws
name|Exception
block|{
name|CamelContext
name|context
init|=
name|this
operator|.
name|createPropertiesPlaceholderAwareContext
argument_list|()
decl_stmt|;
name|KeyStoreParameters
name|ksp
init|=
operator|new
name|KeyStoreParameters
argument_list|()
decl_stmt|;
name|ksp
operator|.
name|setCamelContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|ksp
operator|.
name|setType
argument_list|(
literal|"{{keyStoreParameters.type}}"
argument_list|)
expr_stmt|;
name|ksp
operator|.
name|setProvider
argument_list|(
literal|"{{keyStoreParameters.provider}}"
argument_list|)
expr_stmt|;
name|ksp
operator|.
name|setResource
argument_list|(
literal|"{{keyStoreParameters.resource}}"
argument_list|)
expr_stmt|;
name|ksp
operator|.
name|setPassword
argument_list|(
literal|"{{keyStoreParamerers.password}}"
argument_list|)
expr_stmt|;
name|KeyStore
name|ks
init|=
name|ksp
operator|.
name|createKeyStore
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|ks
operator|.
name|getCertificate
argument_list|(
literal|"server"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testValidParameters ()
specifier|public
name|void
name|testValidParameters
parameter_list|()
throws|throws
name|GeneralSecurityException
throws|,
name|IOException
throws|,
name|URISyntaxException
block|{
name|KeyStoreParameters
name|ksp
init|=
name|this
operator|.
name|createMinimalKeyStoreParameters
argument_list|()
decl_stmt|;
name|KeyStore
name|ks
init|=
name|ksp
operator|.
name|createKeyStore
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|ks
operator|.
name|getCertificate
argument_list|(
literal|"server"
argument_list|)
argument_list|)
expr_stmt|;
name|URL
name|resourceUrl
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/org/apache/camel/util/jsse/localhost.ks"
argument_list|)
decl_stmt|;
name|ksp
operator|.
name|setResource
argument_list|(
name|resourceUrl
operator|.
name|toExternalForm
argument_list|()
argument_list|)
expr_stmt|;
name|ks
operator|=
name|ksp
operator|.
name|createKeyStore
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|ks
operator|.
name|getCertificate
argument_list|(
literal|"server"
argument_list|)
argument_list|)
expr_stmt|;
name|resourceUrl
operator|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/org/apache/camel/util/jsse/localhost.ks"
argument_list|)
expr_stmt|;
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|resourceUrl
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|ksp
operator|.
name|setResource
argument_list|(
name|file
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|ks
operator|=
name|ksp
operator|.
name|createKeyStore
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|ks
operator|.
name|getCertificate
argument_list|(
literal|"server"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testExplicitType ()
specifier|public
name|void
name|testExplicitType
parameter_list|()
throws|throws
name|Exception
block|{
name|KeyStoreParameters
name|ksp
init|=
name|this
operator|.
name|createMinimalKeyStoreParameters
argument_list|()
decl_stmt|;
name|ksp
operator|.
name|setType
argument_list|(
literal|"jks"
argument_list|)
expr_stmt|;
name|KeyStore
name|ks
init|=
name|ksp
operator|.
name|createKeyStore
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|ks
operator|.
name|getCertificate
argument_list|(
literal|"server"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testExplicitProvider ()
specifier|public
name|void
name|testExplicitProvider
parameter_list|()
throws|throws
name|Exception
block|{
name|KeyStoreParameters
name|ksp
init|=
name|this
operator|.
name|createMinimalKeyStoreParameters
argument_list|()
decl_stmt|;
name|ksp
operator|.
name|setProvider
argument_list|(
name|ksp
operator|.
name|createKeyStore
argument_list|()
operator|.
name|getProvider
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|KeyStore
name|ks
init|=
name|ksp
operator|.
name|createKeyStore
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|ks
operator|.
name|getCertificate
argument_list|(
literal|"server"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testExplicitInvalidProvider ()
specifier|public
name|void
name|testExplicitInvalidProvider
parameter_list|()
throws|throws
name|Exception
block|{
name|KeyStoreParameters
name|ksp
init|=
name|this
operator|.
name|createMinimalKeyStoreParameters
argument_list|()
decl_stmt|;
name|ksp
operator|.
name|setProvider
argument_list|(
literal|"sdfdsfgfdsgdsfg"
argument_list|)
expr_stmt|;
try|try
block|{
name|ksp
operator|.
name|createKeyStore
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchProviderException
name|e
parameter_list|)
block|{
comment|// expected
block|}
block|}
annotation|@
name|Test
DECL|method|testExplicitInvalidType ()
specifier|public
name|void
name|testExplicitInvalidType
parameter_list|()
throws|throws
name|Exception
block|{
name|KeyStoreParameters
name|ksp
init|=
name|this
operator|.
name|createMinimalKeyStoreParameters
argument_list|()
decl_stmt|;
name|ksp
operator|.
name|setType
argument_list|(
literal|"1234"
argument_list|)
expr_stmt|;
try|try
block|{
name|ksp
operator|.
name|createKeyStore
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|KeyStoreException
name|e
parameter_list|)
block|{
comment|// expected
block|}
if|if
condition|(
name|getJavaMajorVersion
argument_list|()
operator|>=
literal|9
condition|)
block|{
comment|//checkout http://openjdk.java.net/jeps/229
return|return;
block|}
name|ksp
operator|=
name|this
operator|.
name|createMinimalKeyStoreParameters
argument_list|()
expr_stmt|;
name|ksp
operator|.
name|setType
argument_list|(
literal|"pkcs12"
argument_list|)
expr_stmt|;
try|try
block|{
name|ksp
operator|.
name|createKeyStore
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// expected
block|}
block|}
annotation|@
name|Test
DECL|method|testIncorrectPassword ()
specifier|public
name|void
name|testIncorrectPassword
parameter_list|()
throws|throws
name|Exception
block|{
name|KeyStoreParameters
name|ksp
init|=
name|this
operator|.
name|createMinimalKeyStoreParameters
argument_list|()
decl_stmt|;
name|ksp
operator|.
name|setPassword
argument_list|(
literal|""
argument_list|)
expr_stmt|;
try|try
block|{
name|ksp
operator|.
name|createKeyStore
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// expected
block|}
block|}
annotation|@
name|Test
DECL|method|testIncorrectResource ()
specifier|public
name|void
name|testIncorrectResource
parameter_list|()
throws|throws
name|Exception
block|{
name|KeyStoreParameters
name|ksp
init|=
name|this
operator|.
name|createMinimalKeyStoreParameters
argument_list|()
decl_stmt|;
name|ksp
operator|.
name|setResource
argument_list|(
literal|""
argument_list|)
expr_stmt|;
try|try
block|{
name|ksp
operator|.
name|createKeyStore
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// expected
block|}
block|}
block|}
end_class

end_unit

