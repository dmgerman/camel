begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.util.jsse
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|jsse
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|NoSuchAlgorithmException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|NoSuchProviderException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|KeyManagerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|TrustManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|X509TrustManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_class
DECL|class|TrustManagersParametersTest
specifier|public
class|class
name|TrustManagersParametersTest
extends|extends
name|AbstractJsseParametersTest
block|{
DECL|method|createMinimalKeyStoreParameters ()
specifier|protected
name|KeyStoreParameters
name|createMinimalKeyStoreParameters
parameter_list|()
block|{
name|KeyStoreParameters
name|ksp
init|=
operator|new
name|KeyStoreParameters
argument_list|()
decl_stmt|;
name|ksp
operator|.
name|setResource
argument_list|(
literal|"org/apache/camel/util/jsse/localhost.ks"
argument_list|)
expr_stmt|;
name|ksp
operator|.
name|setPassword
argument_list|(
literal|"changeit"
argument_list|)
expr_stmt|;
return|return
name|ksp
return|;
block|}
DECL|method|createMinimalTrustManagersParameters ()
specifier|protected
name|TrustManagersParameters
name|createMinimalTrustManagersParameters
parameter_list|()
block|{
name|TrustManagersParameters
name|tmp
init|=
operator|new
name|TrustManagersParameters
argument_list|()
decl_stmt|;
name|tmp
operator|.
name|setKeyStore
argument_list|(
name|this
operator|.
name|createMinimalKeyStoreParameters
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|tmp
return|;
block|}
DECL|method|testPropertyPlaceholders ()
specifier|public
name|void
name|testPropertyPlaceholders
parameter_list|()
throws|throws
name|Exception
block|{
name|CamelContext
name|context
init|=
name|this
operator|.
name|createPropertiesPlaceholderAwareContext
argument_list|()
decl_stmt|;
name|KeyStoreParameters
name|ksp
init|=
operator|new
name|KeyStoreParameters
argument_list|()
decl_stmt|;
name|ksp
operator|.
name|setCamelContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|ksp
operator|.
name|setType
argument_list|(
literal|"{{keyStoreParameters.type}}"
argument_list|)
expr_stmt|;
name|ksp
operator|.
name|setProvider
argument_list|(
literal|"{{keyStoreParameters.provider}}"
argument_list|)
expr_stmt|;
name|ksp
operator|.
name|setResource
argument_list|(
literal|"{{keyStoreParameters.resource}}"
argument_list|)
expr_stmt|;
name|ksp
operator|.
name|setPassword
argument_list|(
literal|"{{keyStoreParamerers.password}}"
argument_list|)
expr_stmt|;
name|TrustManagersParameters
name|tmp
init|=
operator|new
name|TrustManagersParameters
argument_list|()
decl_stmt|;
name|tmp
operator|.
name|setCamelContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|tmp
operator|.
name|setKeyStore
argument_list|(
name|ksp
argument_list|)
expr_stmt|;
name|tmp
operator|.
name|setAlgorithm
argument_list|(
literal|"{{trustManagersParameters.algorithm}}"
argument_list|)
expr_stmt|;
name|tmp
operator|.
name|setProvider
argument_list|(
literal|"{{trustManagersParameters.provider}}"
argument_list|)
expr_stmt|;
name|TrustManager
index|[]
name|tms
init|=
name|tmp
operator|.
name|createTrustManagers
argument_list|()
decl_stmt|;
name|validateTrustManagers
argument_list|(
name|tms
argument_list|)
expr_stmt|;
block|}
DECL|method|testCustomTrustManager ()
specifier|public
name|void
name|testCustomTrustManager
parameter_list|()
throws|throws
name|Exception
block|{
name|TrustManager
name|myTm
init|=
operator|new
name|TrustManager
argument_list|()
block|{
comment|// noop
block|}
decl_stmt|;
name|TrustManagersParameters
name|tmp
init|=
operator|new
name|TrustManagersParameters
argument_list|()
decl_stmt|;
name|tmp
operator|.
name|setTrustManager
argument_list|(
name|myTm
argument_list|)
expr_stmt|;
name|TrustManager
index|[]
name|tms
init|=
name|tmp
operator|.
name|createTrustManagers
argument_list|()
decl_stmt|;
name|assertSame
argument_list|(
name|myTm
argument_list|,
name|tms
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
DECL|method|testCreateTrustManagers ()
specifier|public
name|void
name|testCreateTrustManagers
parameter_list|()
throws|throws
name|Exception
block|{
name|TrustManagersParameters
name|tmp
init|=
name|this
operator|.
name|createMinimalTrustManagersParameters
argument_list|()
decl_stmt|;
name|TrustManager
index|[]
name|tms
init|=
name|tmp
operator|.
name|createTrustManagers
argument_list|()
decl_stmt|;
name|validateTrustManagers
argument_list|(
name|tms
argument_list|)
expr_stmt|;
block|}
DECL|method|testExplicitAlgorithm ()
specifier|public
name|void
name|testExplicitAlgorithm
parameter_list|()
throws|throws
name|Exception
block|{
name|TrustManagersParameters
name|tmp
init|=
name|this
operator|.
name|createMinimalTrustManagersParameters
argument_list|()
decl_stmt|;
name|tmp
operator|.
name|setAlgorithm
argument_list|(
name|KeyManagerFactory
operator|.
name|getDefaultAlgorithm
argument_list|()
argument_list|)
expr_stmt|;
name|TrustManager
index|[]
name|tms
init|=
name|tmp
operator|.
name|createTrustManagers
argument_list|()
decl_stmt|;
name|validateTrustManagers
argument_list|(
name|tms
argument_list|)
expr_stmt|;
block|}
DECL|method|testExplicitProvider ()
specifier|public
name|void
name|testExplicitProvider
parameter_list|()
throws|throws
name|Exception
block|{
name|TrustManagersParameters
name|tmp
init|=
name|this
operator|.
name|createMinimalTrustManagersParameters
argument_list|()
decl_stmt|;
name|tmp
operator|.
name|setProvider
argument_list|(
name|KeyManagerFactory
operator|.
name|getInstance
argument_list|(
name|KeyManagerFactory
operator|.
name|getDefaultAlgorithm
argument_list|()
argument_list|)
operator|.
name|getProvider
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|TrustManager
index|[]
name|tms
init|=
name|tmp
operator|.
name|createTrustManagers
argument_list|()
decl_stmt|;
name|validateTrustManagers
argument_list|(
name|tms
argument_list|)
expr_stmt|;
block|}
DECL|method|testInvalidExplicitAlgorithm ()
specifier|public
name|void
name|testInvalidExplicitAlgorithm
parameter_list|()
throws|throws
name|Exception
block|{
name|TrustManagersParameters
name|tmp
init|=
name|this
operator|.
name|createMinimalTrustManagersParameters
argument_list|()
decl_stmt|;
name|tmp
operator|.
name|setAlgorithm
argument_list|(
literal|"dsfsdfsdfdsfdsF"
argument_list|)
expr_stmt|;
try|try
block|{
name|tmp
operator|.
name|createTrustManagers
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchAlgorithmException
name|e
parameter_list|)
block|{
comment|// expected
block|}
block|}
DECL|method|testInvalidExplicitProvider ()
specifier|public
name|void
name|testInvalidExplicitProvider
parameter_list|()
throws|throws
name|Exception
block|{
name|TrustManagersParameters
name|tmp
init|=
name|this
operator|.
name|createMinimalTrustManagersParameters
argument_list|()
decl_stmt|;
name|tmp
operator|.
name|setProvider
argument_list|(
literal|"dsfsdfsdfdsfdsF"
argument_list|)
expr_stmt|;
try|try
block|{
name|tmp
operator|.
name|createTrustManagers
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchProviderException
name|e
parameter_list|)
block|{
comment|// expected
block|}
block|}
DECL|method|validateTrustManagers (TrustManager[] tms)
specifier|protected
name|void
name|validateTrustManagers
parameter_list|(
name|TrustManager
index|[]
name|tms
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|tms
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|tms
index|[
literal|0
index|]
operator|instanceof
name|X509TrustManager
argument_list|)
expr_stmt|;
name|X509TrustManager
name|tm
init|=
operator|(
name|X509TrustManager
operator|)
name|tms
index|[
literal|0
index|]
decl_stmt|;
name|assertNotNull
argument_list|(
name|tm
operator|.
name|getAcceptedIssuers
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

