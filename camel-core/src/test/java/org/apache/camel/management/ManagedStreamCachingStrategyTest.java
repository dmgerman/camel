begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.management
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|management
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanServer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|StreamCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|IOHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|FileUtil
operator|.
name|normalizePath
import|;
end_import

begin_comment
comment|/**  * @version   */
end_comment

begin_class
DECL|class|ManagedStreamCachingStrategyTest
specifier|public
class|class
name|ManagedStreamCachingStrategyTest
extends|extends
name|ManagementTestSupport
block|{
annotation|@
name|Test
DECL|method|testStreamCachingStrategy ()
specifier|public
name|void
name|testStreamCachingStrategy
parameter_list|()
throws|throws
name|Exception
block|{
comment|// JMX tests dont work well on AIX CI servers (hangs them)
if|if
condition|(
name|isPlatform
argument_list|(
literal|"aix"
argument_list|)
condition|)
block|{
return|return;
block|}
name|MBeanServer
name|mbeanServer
init|=
name|getMBeanServer
argument_list|()
decl_stmt|;
name|ObjectName
name|on
init|=
name|ObjectName
operator|.
name|getInstance
argument_list|(
literal|"org.apache.camel:context=myCamel,type=services,*"
argument_list|)
decl_stmt|;
comment|// number of services
name|Set
argument_list|<
name|ObjectName
argument_list|>
name|names
init|=
name|mbeanServer
operator|.
name|queryNames
argument_list|(
name|on
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|ObjectName
name|name
init|=
literal|null
decl_stmt|;
for|for
control|(
name|ObjectName
name|service
range|:
name|names
control|)
block|{
if|if
condition|(
name|service
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"DefaultStreamCachingStrategy"
argument_list|)
condition|)
block|{
name|name
operator|=
name|service
expr_stmt|;
break|break;
block|}
block|}
name|assertNotNull
argument_list|(
literal|"Cannot find DefaultStreamCachingStrategy"
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|Boolean
name|enabled
init|=
operator|(
name|Boolean
operator|)
name|mbeanServer
operator|.
name|getAttribute
argument_list|(
name|name
argument_list|,
literal|"Enabled"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|,
name|enabled
argument_list|)
expr_stmt|;
name|String
name|dir
init|=
operator|(
name|String
operator|)
name|mbeanServer
operator|.
name|getAttribute
argument_list|(
name|name
argument_list|,
literal|"SpoolDirectory"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|normalizePath
argument_list|(
literal|"target/cachedir/myCamel"
argument_list|)
argument_list|,
name|normalizePath
argument_list|(
name|dir
argument_list|)
argument_list|)
expr_stmt|;
name|Long
name|threshold
init|=
operator|(
name|Long
operator|)
name|mbeanServer
operator|.
name|getAttribute
argument_list|(
name|name
argument_list|,
literal|"SpoolThreshold"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|StreamCache
operator|.
name|DEFAULT_SPOOL_THRESHOLD
argument_list|,
name|threshold
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|Integer
name|size
init|=
operator|(
name|Integer
operator|)
name|mbeanServer
operator|.
name|getAttribute
argument_list|(
name|name
argument_list|,
literal|"BufferSize"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|IOHelper
operator|.
name|DEFAULT_BUFFER_SIZE
argument_list|,
name|size
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|Long
name|counter
init|=
operator|(
name|Long
operator|)
name|mbeanServer
operator|.
name|getAttribute
argument_list|(
name|name
argument_list|,
literal|"CacheMemoryCounter"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|counter
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|counter
operator|=
operator|(
name|Long
operator|)
name|mbeanServer
operator|.
name|getAttribute
argument_list|(
name|name
argument_list|,
literal|"CacheSpoolCounter"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|counter
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|Long
name|cacheSize
init|=
operator|(
name|Long
operator|)
name|mbeanServer
operator|.
name|getAttribute
argument_list|(
name|name
argument_list|,
literal|"CacheMemorySize"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|cacheSize
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|cacheSize
operator|=
operator|(
name|Long
operator|)
name|mbeanServer
operator|.
name|getAttribute
argument_list|(
name|name
argument_list|,
literal|"CacheSpoolSize"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|cacheSize
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|chiper
init|=
operator|(
name|String
operator|)
name|mbeanServer
operator|.
name|getAttribute
argument_list|(
name|name
argument_list|,
literal|"SpoolChiper"
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|chiper
argument_list|)
expr_stmt|;
name|Boolean
name|remove
init|=
operator|(
name|Boolean
operator|)
name|mbeanServer
operator|.
name|getAttribute
argument_list|(
name|name
argument_list|,
literal|"RemoveSpoolDirectoryWhenStopping"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|,
name|remove
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|DefaultCamelContext
name|dcc
init|=
operator|(
name|DefaultCamelContext
operator|)
name|context
decl_stmt|;
name|dcc
operator|.
name|setName
argument_list|(
literal|"myCamel"
argument_list|)
expr_stmt|;
name|context
operator|.
name|setStreamCaching
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|context
operator|.
name|getStreamCachingStrategy
argument_list|()
operator|.
name|setSpoolDirectory
argument_list|(
literal|"target/cachedir/#name#/"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:start"
argument_list|)
operator|.
name|routeId
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|convertBodyTo
argument_list|(
name|int
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:a"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

