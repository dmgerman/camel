begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.converter
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|converter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_comment
comment|/**  * Test cases for {@link CollectionConverter}  */
end_comment

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|class|CollectionConverterTest
specifier|public
class|class
name|CollectionConverterTest
extends|extends
name|TestCase
block|{
DECL|field|SMURFS
specifier|private
specifier|static
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|SMURFS
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"Papa smurf"
argument_list|,
literal|"Smurfette"
argument_list|,
literal|"Hefty smurf"
argument_list|,
literal|"Jokey smurf"
argument_list|)
decl_stmt|;
DECL|method|testIteratorToList ()
specifier|public
name|void
name|testIteratorToList
parameter_list|()
throws|throws
name|Exception
block|{
name|assertSmurfs
argument_list|(
name|CollectionConverter
operator|.
name|toArrayList
argument_list|(
name|SMURFS
operator|.
name|iterator
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|assertSmurfs (Collection<String> result)
specifier|private
name|void
name|assertSmurfs
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|result
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|SMURFS
operator|.
name|size
argument_list|()
argument_list|,
name|result
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|key
range|:
name|result
control|)
block|{
name|assertTrue
argument_list|(
name|SMURFS
operator|.
name|contains
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

