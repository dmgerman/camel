begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.converter
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|converter
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ContextTestSupport
import|;
end_import

begin_class
DECL|class|TimePatternTypeConversionTest
specifier|public
class|class
name|TimePatternTypeConversionTest
extends|extends
name|ContextTestSupport
block|{
DECL|method|testForNoSideEffects ()
specifier|public
name|void
name|testForNoSideEffects
parameter_list|()
throws|throws
name|Exception
block|{
name|long
name|milliseconds
init|=
name|context
operator|.
name|getTypeConverter
argument_list|()
operator|.
name|convertTo
argument_list|(
name|long
operator|.
name|class
argument_list|,
literal|"444"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
literal|"444"
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
name|milliseconds
argument_list|)
expr_stmt|;
block|}
DECL|method|testForNoSideEffects2 ()
specifier|public
name|void
name|testForNoSideEffects2
parameter_list|()
throws|throws
name|Exception
block|{
name|long
name|milliseconds
init|=
name|context
operator|.
name|getTypeConverter
argument_list|()
operator|.
name|convertTo
argument_list|(
name|long
operator|.
name|class
argument_list|,
literal|"-72"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
literal|"-72"
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
name|milliseconds
argument_list|)
expr_stmt|;
block|}
DECL|method|testHMSTimePattern ()
specifier|public
name|void
name|testHMSTimePattern
parameter_list|()
throws|throws
name|Exception
block|{
name|long
name|milliseconds
init|=
name|context
operator|.
name|getTypeConverter
argument_list|()
operator|.
name|convertTo
argument_list|(
name|long
operator|.
name|class
argument_list|,
literal|"1hours30m1s"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|5401000
argument_list|,
name|milliseconds
argument_list|)
expr_stmt|;
block|}
DECL|method|testMTimePattern ()
specifier|public
name|void
name|testMTimePattern
parameter_list|()
throws|throws
name|Exception
block|{
name|long
name|milliseconds
init|=
name|context
operator|.
name|getTypeConverter
argument_list|()
operator|.
name|convertTo
argument_list|(
name|long
operator|.
name|class
argument_list|,
literal|"30m55s"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1855000
argument_list|,
name|milliseconds
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

