begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.impl
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|jndi
operator|.
name|JndiTest
import|;
end_import

begin_comment
comment|/**  * @version   */
end_comment

begin_class
DECL|class|RegistryTest
specifier|public
class|class
name|RegistryTest
extends|extends
name|TestCase
block|{
DECL|field|registry
specifier|protected
name|JndiRegistry
name|registry
decl_stmt|;
DECL|method|testBind ()
specifier|public
name|void
name|testBind
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|?
argument_list|>
name|foo
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|)
decl_stmt|;
name|registry
operator|.
name|bind
argument_list|(
literal|"foo"
argument_list|,
name|foo
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|list
init|=
name|registry
operator|.
name|lookup
argument_list|(
literal|"foo"
argument_list|,
name|List
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Should be same!"
argument_list|,
name|foo
argument_list|,
name|list
argument_list|)
expr_stmt|;
block|}
DECL|method|testDefaultProviderAllowsValuesToBeCreatedInThePropertiesFile ()
specifier|public
name|void
name|testDefaultProviderAllowsValuesToBeCreatedInThePropertiesFile
parameter_list|()
throws|throws
name|Exception
block|{
name|Object
name|value
init|=
name|registry
operator|.
name|lookup
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"lookup of foo"
argument_list|,
literal|"bar"
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|testLookupOfUnknownName ()
specifier|public
name|void
name|testLookupOfUnknownName
parameter_list|()
throws|throws
name|Exception
block|{
name|Object
name|value
init|=
name|registry
operator|.
name|lookup
argument_list|(
literal|"No such entry!"
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
literal|"Should not find anything!"
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|setUp ()
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|registry
operator|=
operator|new
name|JndiRegistry
argument_list|(
name|JndiTest
operator|.
name|createInitialContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

