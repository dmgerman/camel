begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.impl.cloud
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|cloud
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ContextTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|cloud
operator|.
name|CachingServiceCallServiceDiscoveryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|cloud
operator|.
name|StaticServiceCallServiceDiscoveryConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|CachingServiceDiscoveryTest
specifier|public
class|class
name|CachingServiceDiscoveryTest
extends|extends
name|ContextTestSupport
block|{
annotation|@
name|Test
DECL|method|testCachingServiceDiscovery ()
specifier|public
name|void
name|testCachingServiceDiscovery
parameter_list|()
throws|throws
name|Exception
block|{
name|StaticServiceDiscovery
name|discovery
init|=
operator|new
name|StaticServiceDiscovery
argument_list|()
decl_stmt|;
name|CachingServiceDiscovery
name|caching
init|=
name|CachingServiceDiscovery
operator|.
name|wrap
argument_list|(
name|discovery
argument_list|,
literal|1
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
decl_stmt|;
name|discovery
operator|.
name|addServer
argument_list|(
operator|new
name|DefaultServiceDefinition
argument_list|(
literal|"noname"
argument_list|,
literal|"localhost"
argument_list|,
literal|1111
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|caching
operator|.
name|getServices
argument_list|(
literal|"noname"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|discovery
operator|.
name|addServer
argument_list|(
operator|new
name|DefaultServiceDefinition
argument_list|(
literal|"noname"
argument_list|,
literal|"localhost"
argument_list|,
literal|1112
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|caching
operator|.
name|getServices
argument_list|(
literal|"noname"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Let the cache expire
name|Thread
operator|.
name|sleep
argument_list|(
literal|1100
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|caching
operator|.
name|getServices
argument_list|(
literal|"noname"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCachingServiceDiscoveryConfiguration ()
specifier|public
name|void
name|testCachingServiceDiscoveryConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|StaticServiceCallServiceDiscoveryConfiguration
name|staticConf
init|=
operator|new
name|StaticServiceCallServiceDiscoveryConfiguration
argument_list|()
decl_stmt|;
name|staticConf
operator|.
name|setServers
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"no-name@localhost:1111"
argument_list|)
argument_list|)
expr_stmt|;
name|CachingServiceCallServiceDiscoveryConfiguration
name|cachingConf
init|=
operator|new
name|CachingServiceCallServiceDiscoveryConfiguration
argument_list|()
decl_stmt|;
name|cachingConf
operator|.
name|setServiceDiscoveryConfiguration
argument_list|(
name|staticConf
argument_list|)
expr_stmt|;
name|cachingConf
operator|.
name|setTimeout
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|cachingConf
operator|.
name|setUnits
argument_list|(
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
name|CachingServiceDiscovery
name|caching
init|=
operator|(
name|CachingServiceDiscovery
operator|)
name|cachingConf
operator|.
name|newInstance
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|StaticServiceDiscovery
name|delegate
init|=
operator|(
name|StaticServiceDiscovery
operator|)
name|caching
operator|.
name|getDelegate
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|caching
operator|.
name|getServices
argument_list|(
literal|"no-name"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|delegate
operator|.
name|addServer
argument_list|(
literal|"no-name@localhost:1112"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|caching
operator|.
name|getServices
argument_list|(
literal|"no-name"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Let the cache expire
name|Thread
operator|.
name|sleep
argument_list|(
literal|1100
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|caching
operator|.
name|getServices
argument_list|(
literal|"no-name"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

