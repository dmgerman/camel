begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.impl.cloud
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|cloud
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ContextTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|cloud
operator|.
name|ServiceDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|RouteDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|ServiceRegistryTest
specifier|public
class|class
name|ServiceRegistryTest
extends|extends
name|ContextTestSupport
block|{
comment|// *********************
comment|// Set up
comment|// *********************
annotation|@
name|Override
DECL|method|isUseRouteBuilder ()
specifier|public
name|boolean
name|isUseRouteBuilder
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
comment|// *********************
comment|// Tests
comment|// *********************
annotation|@
name|Test
DECL|method|testServiceRegistrationWithRouteIdAndGroup ()
specifier|public
name|void
name|testServiceRegistrationWithRouteIdAndGroup
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|serviceName
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
specifier|final
name|String
name|serviceId
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
specifier|final
name|int
name|port
init|=
literal|9090
decl_stmt|;
name|context
operator|.
name|addRouteDefinition
argument_list|(
operator|new
name|RouteDefinition
argument_list|()
operator|.
name|from
argument_list|(
literal|"direct:start"
argument_list|)
operator|.
name|routeGroup
argument_list|(
name|serviceName
argument_list|)
operator|.
name|routeId
argument_list|(
name|serviceId
argument_list|)
operator|.
name|routeProperty
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_HOST
argument_list|,
literal|"localhost"
argument_list|)
operator|.
name|routeProperty
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_PORT
argument_list|,
literal|""
operator|+
name|port
argument_list|)
operator|.
name|routeProperty
argument_list|(
literal|"service.meta1"
argument_list|,
literal|"meta1"
argument_list|)
operator|.
name|routeProperty
argument_list|(
literal|"meta2"
argument_list|,
literal|"meta2"
argument_list|)
operator|.
name|routePolicy
argument_list|(
operator|new
name|ServiceRegistrationRoutePolicy
argument_list|()
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:end"
argument_list|)
argument_list|)
expr_stmt|;
name|InMemoryServiceRegistry
name|sr
init|=
operator|new
name|InMemoryServiceRegistry
argument_list|()
decl_stmt|;
name|context
operator|.
name|addService
argument_list|(
name|sr
argument_list|)
expr_stmt|;
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|ServiceDefinition
argument_list|>
name|defs
init|=
name|sr
operator|.
name|getDefinitions
argument_list|()
decl_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
comment|// basic properties
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|first
argument_list|()
operator|.
name|hasFieldOrPropertyWithValue
argument_list|(
literal|"name"
argument_list|,
name|serviceName
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|first
argument_list|()
operator|.
name|hasFieldOrPropertyWithValue
argument_list|(
literal|"id"
argument_list|,
name|serviceId
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|first
argument_list|()
operator|.
name|hasFieldOrPropertyWithValue
argument_list|(
literal|"host"
argument_list|,
literal|"localhost"
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|first
argument_list|()
operator|.
name|hasFieldOrPropertyWithValue
argument_list|(
literal|"port"
argument_list|,
name|port
argument_list|)
expr_stmt|;
comment|// metadata
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|get
argument_list|(
name|serviceId
argument_list|)
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|containsEntry
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_NAME
argument_list|,
name|serviceName
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|get
argument_list|(
name|serviceId
argument_list|)
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|containsEntry
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_ID
argument_list|,
name|serviceId
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|get
argument_list|(
name|serviceId
argument_list|)
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|containsEntry
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_HOST
argument_list|,
literal|"localhost"
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|get
argument_list|(
name|serviceId
argument_list|)
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|containsEntry
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_PORT
argument_list|,
literal|""
operator|+
name|port
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|get
argument_list|(
name|serviceId
argument_list|)
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|containsEntry
argument_list|(
literal|"service.meta1"
argument_list|,
literal|"meta1"
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|get
argument_list|(
name|serviceId
argument_list|)
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|doesNotContainKeys
argument_list|(
literal|"meta2"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testServiceRegistrationWithRouteIdAndGroupOverride ()
specifier|public
name|void
name|testServiceRegistrationWithRouteIdAndGroupOverride
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|serviceName
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
specifier|final
name|String
name|serviceId
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
specifier|final
name|int
name|port
init|=
literal|9090
decl_stmt|;
name|context
operator|.
name|addRouteDefinition
argument_list|(
operator|new
name|RouteDefinition
argument_list|()
operator|.
name|from
argument_list|(
literal|"direct:start"
argument_list|)
operator|.
name|routeGroup
argument_list|(
literal|"service-name"
argument_list|)
operator|.
name|routeId
argument_list|(
literal|"service-id"
argument_list|)
operator|.
name|routeProperty
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_NAME
argument_list|,
name|serviceName
argument_list|)
operator|.
name|routeProperty
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_ID
argument_list|,
name|serviceId
argument_list|)
operator|.
name|routeProperty
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_HOST
argument_list|,
literal|"localhost"
argument_list|)
operator|.
name|routeProperty
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_PORT
argument_list|,
literal|""
operator|+
name|port
argument_list|)
operator|.
name|routeProperty
argument_list|(
literal|"service.meta1"
argument_list|,
literal|"meta1"
argument_list|)
operator|.
name|routeProperty
argument_list|(
literal|"meta2"
argument_list|,
literal|"meta2"
argument_list|)
operator|.
name|routePolicy
argument_list|(
operator|new
name|ServiceRegistrationRoutePolicy
argument_list|()
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:end"
argument_list|)
argument_list|)
expr_stmt|;
name|InMemoryServiceRegistry
name|sr
init|=
operator|new
name|InMemoryServiceRegistry
argument_list|()
decl_stmt|;
name|context
operator|.
name|addService
argument_list|(
name|sr
argument_list|)
expr_stmt|;
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|ServiceDefinition
argument_list|>
name|defs
init|=
name|sr
operator|.
name|getDefinitions
argument_list|()
decl_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
comment|// basic properties
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|first
argument_list|()
operator|.
name|hasFieldOrPropertyWithValue
argument_list|(
literal|"name"
argument_list|,
name|serviceName
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|first
argument_list|()
operator|.
name|hasFieldOrPropertyWithValue
argument_list|(
literal|"id"
argument_list|,
name|serviceId
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|first
argument_list|()
operator|.
name|hasFieldOrPropertyWithValue
argument_list|(
literal|"host"
argument_list|,
literal|"localhost"
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|first
argument_list|()
operator|.
name|hasFieldOrPropertyWithValue
argument_list|(
literal|"port"
argument_list|,
name|port
argument_list|)
expr_stmt|;
comment|// metadata
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|get
argument_list|(
name|serviceId
argument_list|)
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|containsEntry
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_NAME
argument_list|,
name|serviceName
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|get
argument_list|(
name|serviceId
argument_list|)
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|containsEntry
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_ID
argument_list|,
name|serviceId
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|get
argument_list|(
name|serviceId
argument_list|)
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|containsEntry
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_HOST
argument_list|,
literal|"localhost"
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|get
argument_list|(
name|serviceId
argument_list|)
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|containsEntry
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_PORT
argument_list|,
literal|""
operator|+
name|port
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|get
argument_list|(
name|serviceId
argument_list|)
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|containsEntry
argument_list|(
literal|"service.meta1"
argument_list|,
literal|"meta1"
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|get
argument_list|(
name|serviceId
argument_list|)
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|doesNotContainKeys
argument_list|(
literal|"meta2"
argument_list|)
expr_stmt|;
block|}
comment|// *********************
comment|// Tests
comment|// *********************
annotation|@
name|Test
DECL|method|testServiceRegistrationWithRouteProperties ()
specifier|public
name|void
name|testServiceRegistrationWithRouteProperties
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|serviceName
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
specifier|final
name|String
name|serviceId
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
specifier|final
name|int
name|port
init|=
literal|9090
decl_stmt|;
name|context
operator|.
name|addRouteDefinition
argument_list|(
operator|new
name|RouteDefinition
argument_list|()
operator|.
name|from
argument_list|(
literal|"direct:start"
argument_list|)
operator|.
name|routeProperty
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_NAME
argument_list|,
name|serviceName
argument_list|)
operator|.
name|routeProperty
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_ID
argument_list|,
name|serviceId
argument_list|)
operator|.
name|routeProperty
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_HOST
argument_list|,
literal|"localhost"
argument_list|)
operator|.
name|routeProperty
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_PORT
argument_list|,
literal|""
operator|+
name|port
argument_list|)
operator|.
name|routeProperty
argument_list|(
literal|"service.meta1"
argument_list|,
literal|"meta1"
argument_list|)
operator|.
name|routeProperty
argument_list|(
literal|"meta2"
argument_list|,
literal|"meta2"
argument_list|)
operator|.
name|routePolicy
argument_list|(
operator|new
name|ServiceRegistrationRoutePolicy
argument_list|()
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:end"
argument_list|)
argument_list|)
expr_stmt|;
name|InMemoryServiceRegistry
name|sr
init|=
operator|new
name|InMemoryServiceRegistry
argument_list|()
decl_stmt|;
name|context
operator|.
name|addService
argument_list|(
name|sr
argument_list|)
expr_stmt|;
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|ServiceDefinition
argument_list|>
name|defs
init|=
name|sr
operator|.
name|getDefinitions
argument_list|()
decl_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
comment|// basic properties
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|first
argument_list|()
operator|.
name|hasFieldOrPropertyWithValue
argument_list|(
literal|"name"
argument_list|,
name|serviceName
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|first
argument_list|()
operator|.
name|hasFieldOrPropertyWithValue
argument_list|(
literal|"id"
argument_list|,
name|serviceId
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|first
argument_list|()
operator|.
name|hasFieldOrPropertyWithValue
argument_list|(
literal|"host"
argument_list|,
literal|"localhost"
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|first
argument_list|()
operator|.
name|hasFieldOrPropertyWithValue
argument_list|(
literal|"port"
argument_list|,
name|port
argument_list|)
expr_stmt|;
comment|// metadata
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|get
argument_list|(
name|serviceId
argument_list|)
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|containsEntry
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_NAME
argument_list|,
name|serviceName
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|get
argument_list|(
name|serviceId
argument_list|)
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|containsEntry
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_ID
argument_list|,
name|serviceId
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|get
argument_list|(
name|serviceId
argument_list|)
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|containsEntry
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_HOST
argument_list|,
literal|"localhost"
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|get
argument_list|(
name|serviceId
argument_list|)
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|containsEntry
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_PORT
argument_list|,
literal|""
operator|+
name|port
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|get
argument_list|(
name|serviceId
argument_list|)
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|containsEntry
argument_list|(
literal|"service.meta1"
argument_list|,
literal|"meta1"
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|defs
operator|.
name|get
argument_list|(
name|serviceId
argument_list|)
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|doesNotContainKeys
argument_list|(
literal|"meta2"
argument_list|)
expr_stmt|;
block|}
comment|// *********************
comment|// Helpers
comment|// *********************
DECL|class|InMemoryServiceRegistry
specifier|private
specifier|static
class|class
name|InMemoryServiceRegistry
extends|extends
name|AbstractServiceRegistry
block|{
DECL|field|definitions
specifier|private
specifier|final
name|ConcurrentMap
argument_list|<
name|String
argument_list|,
name|ServiceDefinition
argument_list|>
name|definitions
decl_stmt|;
DECL|method|InMemoryServiceRegistry ()
specifier|public
name|InMemoryServiceRegistry
parameter_list|()
block|{
name|super
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|definitions
operator|=
operator|new
name|ConcurrentHashMap
argument_list|<>
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|register (ServiceDefinition definition)
specifier|public
name|void
name|register
parameter_list|(
name|ServiceDefinition
name|definition
parameter_list|)
block|{
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|definition
operator|.
name|getId
argument_list|()
argument_list|,
literal|"ServiceDefinition ID"
argument_list|)
expr_stmt|;
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|definition
operator|.
name|getName
argument_list|()
argument_list|,
literal|"ServiceDefinition Name"
argument_list|)
expr_stmt|;
name|definitions
operator|.
name|put
argument_list|(
name|definition
operator|.
name|getId
argument_list|()
argument_list|,
name|definition
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|deregister (ServiceDefinition definition)
specifier|public
name|void
name|deregister
parameter_list|(
name|ServiceDefinition
name|definition
parameter_list|)
block|{
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|definition
operator|.
name|getId
argument_list|()
argument_list|,
literal|"ServiceDefinition ID"
argument_list|)
expr_stmt|;
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|definition
operator|.
name|getName
argument_list|()
argument_list|,
literal|"ServiceDefinition Name"
argument_list|)
expr_stmt|;
name|definitions
operator|.
name|remove
argument_list|(
name|definition
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doStart ()
specifier|protected
name|void
name|doStart
parameter_list|()
throws|throws
name|Exception
block|{         }
annotation|@
name|Override
DECL|method|doStop ()
specifier|protected
name|void
name|doStop
parameter_list|()
throws|throws
name|Exception
block|{
name|definitions
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
DECL|method|getDefinitions ()
name|Map
argument_list|<
name|String
argument_list|,
name|ServiceDefinition
argument_list|>
name|getDefinitions
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableMap
argument_list|(
name|definitions
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

