begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.processor.interceptor
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|interceptor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_class
annotation|@
name|Deprecated
annotation|@
name|Ignore
DECL|class|TraceInterceptorCustomJpaMessageTest
specifier|public
class|class
name|TraceInterceptorCustomJpaMessageTest
extends|extends
name|TracingTestBase
block|{
annotation|@
name|Override
DECL|method|createCamelContext ()
specifier|protected
name|CamelContext
name|createCamelContext
parameter_list|()
throws|throws
name|Exception
block|{
name|CamelContext
name|contextLocal
init|=
name|super
operator|.
name|createCamelContext
argument_list|()
decl_stmt|;
name|Tracer
name|tracer
init|=
operator|(
name|Tracer
operator|)
name|contextLocal
operator|.
name|getDefaultTracer
argument_list|()
decl_stmt|;
name|tracer
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|tracer
operator|.
name|setTraceExceptions
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|tracer
operator|.
name|setUseJpa
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|tracer
operator|.
name|setDestinationUri
argument_list|(
literal|"mock:jpa-trace"
argument_list|)
expr_stmt|;
name|tracer
operator|.
name|setJpaTraceEventMessageClassName
argument_list|(
literal|"org.apache.camel.processor.interceptor.TraceInterceptorCustomJpaMessage"
argument_list|)
expr_stmt|;
return|return
name|contextLocal
return|;
block|}
annotation|@
name|Override
DECL|method|prepareTestTracerInOnly ()
specifier|protected
name|void
name|prepareTestTracerInOnly
parameter_list|()
block|{
name|MockEndpoint
name|traces
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:jpa-trace"
argument_list|)
decl_stmt|;
name|traces
operator|.
name|expectedMessageCount
argument_list|(
literal|6
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|prepareTestTracerInOut ()
specifier|protected
name|void
name|prepareTestTracerInOut
parameter_list|()
block|{
name|MockEndpoint
name|traces
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:jpa-trace"
argument_list|)
decl_stmt|;
name|traces
operator|.
name|expectedMessageCount
argument_list|(
literal|12
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|prepareTestTracerExceptionInOut ()
specifier|protected
name|void
name|prepareTestTracerExceptionInOut
parameter_list|()
block|{
name|MockEndpoint
name|traces
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:jpa-trace"
argument_list|)
decl_stmt|;
name|traces
operator|.
name|expectedMessageCount
argument_list|(
literal|10
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|validateTestTracerInOnly ()
specifier|protected
name|void
name|validateTestTracerInOnly
parameter_list|()
block|{
name|MockEndpoint
name|traces
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:jpa-trace"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|traces
operator|.
name|getExchanges
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Exchange
name|exchange
range|:
name|traces
operator|.
name|getExchanges
argument_list|()
control|)
block|{
name|assertEquals
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|,
name|TraceInterceptorCustomJpaMessage
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|validateTestTracerInOut ()
specifier|protected
name|void
name|validateTestTracerInOut
parameter_list|()
block|{
name|MockEndpoint
name|traces
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:jpa-trace"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|12
argument_list|,
name|traces
operator|.
name|getExchanges
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Exchange
name|exchange
range|:
name|traces
operator|.
name|getExchanges
argument_list|()
control|)
block|{
name|assertEquals
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|,
name|TraceInterceptorCustomJpaMessage
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|validateTestTracerExceptionInOut ()
specifier|protected
name|void
name|validateTestTracerExceptionInOut
parameter_list|()
block|{
name|MockEndpoint
name|traces
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:jpa-trace"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|traces
operator|.
name|getExchanges
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Exchange
name|exchange
range|:
name|traces
operator|.
name|getExchanges
argument_list|()
control|)
block|{
name|assertEquals
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|,
name|TraceInterceptorCustomJpaMessage
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|getMessageCount ()
specifier|protected
name|int
name|getMessageCount
parameter_list|()
block|{
name|MockEndpoint
name|traces
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:jpa-trace"
argument_list|)
decl_stmt|;
return|return
name|traces
operator|.
name|getExchanges
argument_list|()
operator|.
name|size
argument_list|()
return|;
block|}
block|}
end_class

end_unit

