begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.processor.aggregator
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|aggregator
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelExchangeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ContextTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Expression
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Predicate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultExchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|BodyInAggregatingStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|SendProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|aggregate
operator|.
name|AggregateProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|aggregate
operator|.
name|AggregationStrategy
import|;
end_import

begin_comment
comment|/**  * @version $Revision$  */
end_comment

begin_class
DECL|class|AggregateProcessorTest
specifier|public
class|class
name|AggregateProcessorTest
extends|extends
name|ContextTestSupport
block|{
annotation|@
name|Override
DECL|method|isUseRouteBuilder ()
specifier|public
name|boolean
name|isUseRouteBuilder
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
DECL|method|testAggregateProcessorCompletionPredicate ()
specifier|public
name|void
name|testAggregateProcessorCompletionPredicate
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedBodiesReceived
argument_list|(
literal|"A+B+END"
argument_list|)
expr_stmt|;
name|Processor
name|done
init|=
operator|new
name|SendProcessor
argument_list|(
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
argument_list|)
decl_stmt|;
name|Expression
name|corr
init|=
name|header
argument_list|(
literal|"id"
argument_list|)
decl_stmt|;
name|AggregationStrategy
name|as
init|=
operator|new
name|BodyInAggregatingStrategy
argument_list|()
decl_stmt|;
name|Predicate
name|complete
init|=
name|body
argument_list|()
operator|.
name|contains
argument_list|(
literal|"END"
argument_list|)
decl_stmt|;
name|AggregateProcessor
name|ap
init|=
operator|new
name|AggregateProcessor
argument_list|(
name|done
argument_list|,
name|corr
argument_list|,
name|as
argument_list|)
decl_stmt|;
name|ap
operator|.
name|setCompletionPredicate
argument_list|(
name|complete
argument_list|)
expr_stmt|;
name|ap
operator|.
name|setEagerCheckCompletion
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|ap
operator|.
name|start
argument_list|()
expr_stmt|;
name|Exchange
name|e1
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e1
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"A"
argument_list|)
expr_stmt|;
name|e1
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Exchange
name|e2
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e2
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"B"
argument_list|)
expr_stmt|;
name|e2
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Exchange
name|e3
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e3
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"END"
argument_list|)
expr_stmt|;
name|e3
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Exchange
name|e4
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e4
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"D"
argument_list|)
expr_stmt|;
name|e4
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e1
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e2
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e3
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e4
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
name|ap
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|method|testAggregateProcessorCompletionPredicateEager ()
specifier|public
name|void
name|testAggregateProcessorCompletionPredicateEager
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedBodiesReceived
argument_list|(
literal|"A+B+END"
argument_list|)
expr_stmt|;
name|Processor
name|done
init|=
operator|new
name|SendProcessor
argument_list|(
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
argument_list|)
decl_stmt|;
name|Expression
name|corr
init|=
name|header
argument_list|(
literal|"id"
argument_list|)
decl_stmt|;
name|AggregationStrategy
name|as
init|=
operator|new
name|BodyInAggregatingStrategy
argument_list|()
decl_stmt|;
name|Predicate
name|complete
init|=
name|body
argument_list|()
operator|.
name|isEqualTo
argument_list|(
literal|"END"
argument_list|)
decl_stmt|;
name|AggregateProcessor
name|ap
init|=
operator|new
name|AggregateProcessor
argument_list|(
name|done
argument_list|,
name|corr
argument_list|,
name|as
argument_list|)
decl_stmt|;
name|ap
operator|.
name|setCompletionPredicate
argument_list|(
name|complete
argument_list|)
expr_stmt|;
name|ap
operator|.
name|setEagerCheckCompletion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|ap
operator|.
name|start
argument_list|()
expr_stmt|;
name|Exchange
name|e1
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e1
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"A"
argument_list|)
expr_stmt|;
name|e1
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Exchange
name|e2
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e2
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"B"
argument_list|)
expr_stmt|;
name|e2
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Exchange
name|e3
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e3
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"END"
argument_list|)
expr_stmt|;
name|e3
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Exchange
name|e4
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e4
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"D"
argument_list|)
expr_stmt|;
name|e4
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e1
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e2
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e3
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e4
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
name|ap
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|method|testAggregateProcessorCompletionAggregatedSize ()
specifier|public
name|void
name|testAggregateProcessorCompletionAggregatedSize
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestAggregateProcessorCompletionAggregatedSize
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|testAggregateProcessorCompletionAggregatedSizeEager ()
specifier|public
name|void
name|testAggregateProcessorCompletionAggregatedSizeEager
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestAggregateProcessorCompletionAggregatedSize
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|doTestAggregateProcessorCompletionAggregatedSize (boolean eager)
specifier|private
name|void
name|doTestAggregateProcessorCompletionAggregatedSize
parameter_list|(
name|boolean
name|eager
parameter_list|)
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedBodiesReceived
argument_list|(
literal|"A+B+C"
argument_list|)
expr_stmt|;
name|Processor
name|done
init|=
operator|new
name|SendProcessor
argument_list|(
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
argument_list|)
decl_stmt|;
name|Expression
name|corr
init|=
name|header
argument_list|(
literal|"id"
argument_list|)
decl_stmt|;
name|AggregationStrategy
name|as
init|=
operator|new
name|BodyInAggregatingStrategy
argument_list|()
decl_stmt|;
name|AggregateProcessor
name|ap
init|=
operator|new
name|AggregateProcessor
argument_list|(
name|done
argument_list|,
name|corr
argument_list|,
name|as
argument_list|)
decl_stmt|;
name|ap
operator|.
name|setCompletionAggregatedSize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|ap
operator|.
name|setEagerCheckCompletion
argument_list|(
name|eager
argument_list|)
expr_stmt|;
name|ap
operator|.
name|start
argument_list|()
expr_stmt|;
name|Exchange
name|e1
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e1
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"A"
argument_list|)
expr_stmt|;
name|e1
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Exchange
name|e2
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e2
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"B"
argument_list|)
expr_stmt|;
name|e2
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Exchange
name|e3
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e3
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"C"
argument_list|)
expr_stmt|;
name|e3
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Exchange
name|e4
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e4
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"D"
argument_list|)
expr_stmt|;
name|e4
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e1
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e2
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e3
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e4
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
name|ap
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|method|testAggregateProcessorCompletionTimeout ()
specifier|public
name|void
name|testAggregateProcessorCompletionTimeout
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestAggregateProcessorCompletionTimeout
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|testAggregateProcessorCompletionTimeoutEager ()
specifier|public
name|void
name|testAggregateProcessorCompletionTimeoutEager
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestAggregateProcessorCompletionTimeout
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|doTestAggregateProcessorCompletionTimeout (boolean eager)
specifier|private
name|void
name|doTestAggregateProcessorCompletionTimeout
parameter_list|(
name|boolean
name|eager
parameter_list|)
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedBodiesReceived
argument_list|(
literal|"A+B+C"
argument_list|)
expr_stmt|;
name|Processor
name|done
init|=
operator|new
name|SendProcessor
argument_list|(
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
argument_list|)
decl_stmt|;
name|Expression
name|corr
init|=
name|header
argument_list|(
literal|"id"
argument_list|)
decl_stmt|;
name|AggregationStrategy
name|as
init|=
operator|new
name|BodyInAggregatingStrategy
argument_list|()
decl_stmt|;
name|AggregateProcessor
name|ap
init|=
operator|new
name|AggregateProcessor
argument_list|(
name|done
argument_list|,
name|corr
argument_list|,
name|as
argument_list|)
decl_stmt|;
name|ap
operator|.
name|setCompletionTimeout
argument_list|(
literal|3000
argument_list|)
expr_stmt|;
name|ap
operator|.
name|setEagerCheckCompletion
argument_list|(
name|eager
argument_list|)
expr_stmt|;
name|ap
operator|.
name|start
argument_list|()
expr_stmt|;
name|Exchange
name|e1
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e1
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"A"
argument_list|)
expr_stmt|;
name|e1
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Exchange
name|e2
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e2
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"B"
argument_list|)
expr_stmt|;
name|e2
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Exchange
name|e3
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e3
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"C"
argument_list|)
expr_stmt|;
name|e3
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Exchange
name|e4
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e4
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"D"
argument_list|)
expr_stmt|;
name|e4
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e1
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e2
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e3
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e4
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
name|ap
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|method|testAggregateIgnoreBadCorrelationKey ()
specifier|public
name|void
name|testAggregateIgnoreBadCorrelationKey
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedBodiesReceived
argument_list|(
literal|"A+C+END"
argument_list|)
expr_stmt|;
name|Processor
name|done
init|=
operator|new
name|SendProcessor
argument_list|(
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
argument_list|)
decl_stmt|;
name|Expression
name|corr
init|=
name|header
argument_list|(
literal|"id"
argument_list|)
decl_stmt|;
name|AggregationStrategy
name|as
init|=
operator|new
name|BodyInAggregatingStrategy
argument_list|()
decl_stmt|;
name|Predicate
name|complete
init|=
name|body
argument_list|()
operator|.
name|contains
argument_list|(
literal|"END"
argument_list|)
decl_stmt|;
name|AggregateProcessor
name|ap
init|=
operator|new
name|AggregateProcessor
argument_list|(
name|done
argument_list|,
name|corr
argument_list|,
name|as
argument_list|)
decl_stmt|;
name|ap
operator|.
name|setCompletionPredicate
argument_list|(
name|complete
argument_list|)
expr_stmt|;
name|ap
operator|.
name|setIgnoreBadCorrelationKeys
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|ap
operator|.
name|start
argument_list|()
expr_stmt|;
name|Exchange
name|e1
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e1
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"A"
argument_list|)
expr_stmt|;
name|e1
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Exchange
name|e2
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e2
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"B"
argument_list|)
expr_stmt|;
name|Exchange
name|e3
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e3
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"C"
argument_list|)
expr_stmt|;
name|e3
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Exchange
name|e4
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e4
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"END"
argument_list|)
expr_stmt|;
name|e4
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e1
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e2
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e3
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e4
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
name|ap
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|method|testAggregateBadCorrelationKey ()
specifier|public
name|void
name|testAggregateBadCorrelationKey
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedBodiesReceived
argument_list|(
literal|"A+C+END"
argument_list|)
expr_stmt|;
name|Processor
name|done
init|=
operator|new
name|SendProcessor
argument_list|(
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
argument_list|)
decl_stmt|;
name|Expression
name|corr
init|=
name|header
argument_list|(
literal|"id"
argument_list|)
decl_stmt|;
name|AggregationStrategy
name|as
init|=
operator|new
name|BodyInAggregatingStrategy
argument_list|()
decl_stmt|;
name|Predicate
name|complete
init|=
name|body
argument_list|()
operator|.
name|contains
argument_list|(
literal|"END"
argument_list|)
decl_stmt|;
name|AggregateProcessor
name|ap
init|=
operator|new
name|AggregateProcessor
argument_list|(
name|done
argument_list|,
name|corr
argument_list|,
name|as
argument_list|)
decl_stmt|;
name|ap
operator|.
name|setCompletionPredicate
argument_list|(
name|complete
argument_list|)
expr_stmt|;
name|ap
operator|.
name|start
argument_list|()
expr_stmt|;
name|Exchange
name|e1
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e1
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"A"
argument_list|)
expr_stmt|;
name|e1
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Exchange
name|e2
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e2
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"B"
argument_list|)
expr_stmt|;
name|Exchange
name|e3
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e3
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"C"
argument_list|)
expr_stmt|;
name|e3
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Exchange
name|e4
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e4
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"END"
argument_list|)
expr_stmt|;
name|e4
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e1
argument_list|)
expr_stmt|;
try|try
block|{
name|ap
operator|.
name|process
argument_list|(
name|e2
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CamelExchangeException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"Correlation key could not be evaluated to a value. Exchange[Message: B]"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ap
operator|.
name|process
argument_list|(
name|e3
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e4
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
name|ap
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|method|testAggregateCloseCorrelationKeyOnCompletion ()
specifier|public
name|void
name|testAggregateCloseCorrelationKeyOnCompletion
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedBodiesReceived
argument_list|(
literal|"A+B+END"
argument_list|)
expr_stmt|;
name|Processor
name|done
init|=
operator|new
name|SendProcessor
argument_list|(
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
argument_list|)
decl_stmt|;
name|Expression
name|corr
init|=
name|header
argument_list|(
literal|"id"
argument_list|)
decl_stmt|;
name|AggregationStrategy
name|as
init|=
operator|new
name|BodyInAggregatingStrategy
argument_list|()
decl_stmt|;
name|Predicate
name|complete
init|=
name|body
argument_list|()
operator|.
name|contains
argument_list|(
literal|"END"
argument_list|)
decl_stmt|;
name|AggregateProcessor
name|ap
init|=
operator|new
name|AggregateProcessor
argument_list|(
name|done
argument_list|,
name|corr
argument_list|,
name|as
argument_list|)
decl_stmt|;
name|ap
operator|.
name|setCompletionPredicate
argument_list|(
name|complete
argument_list|)
expr_stmt|;
name|ap
operator|.
name|setCloseCorrelationKeyOnCompletion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|ap
operator|.
name|start
argument_list|()
expr_stmt|;
name|Exchange
name|e1
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e1
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"A"
argument_list|)
expr_stmt|;
name|e1
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Exchange
name|e2
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e2
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"B"
argument_list|)
expr_stmt|;
name|e2
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Exchange
name|e3
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e3
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"END"
argument_list|)
expr_stmt|;
name|e3
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|Exchange
name|e4
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|e4
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"C"
argument_list|)
expr_stmt|;
name|e4
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"id"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e1
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e2
argument_list|)
expr_stmt|;
name|ap
operator|.
name|process
argument_list|(
name|e3
argument_list|)
expr_stmt|;
try|try
block|{
name|ap
operator|.
name|process
argument_list|(
name|e4
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CamelExchangeException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"Correlation key has been closed. Exchange[Message: C]"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
name|ap
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

