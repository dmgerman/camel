begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.impl.cloud
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|cloud
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Stream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|cloud
operator|.
name|ServiceDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|cloud
operator|.
name|ServiceHealth
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|CollectionHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|StringHelper
import|;
end_import

begin_class
DECL|class|DefaultServiceDefinition
specifier|public
class|class
name|DefaultServiceDefinition
implements|implements
name|ServiceDefinition
block|{
DECL|field|DEFAULT_SERVICE_HEALTH
specifier|private
specifier|static
specifier|final
name|ServiceHealth
name|DEFAULT_SERVICE_HEALTH
init|=
operator|new
name|DefaultServiceHealth
argument_list|()
decl_stmt|;
DECL|field|id
specifier|private
specifier|final
name|String
name|id
decl_stmt|;
DECL|field|name
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
DECL|field|host
specifier|private
specifier|final
name|String
name|host
decl_stmt|;
DECL|field|port
specifier|private
specifier|final
name|int
name|port
decl_stmt|;
DECL|field|meta
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|meta
decl_stmt|;
DECL|field|health
specifier|private
specifier|final
name|ServiceHealth
name|health
decl_stmt|;
DECL|method|DefaultServiceDefinition (String name, String host, int port)
specifier|public
name|DefaultServiceDefinition
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|)
block|{
name|this
argument_list|(
literal|null
argument_list|,
name|name
argument_list|,
name|host
argument_list|,
name|port
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|DEFAULT_SERVICE_HEALTH
argument_list|)
expr_stmt|;
block|}
DECL|method|DefaultServiceDefinition (String id, String name, String host, int port)
specifier|public
name|DefaultServiceDefinition
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|)
block|{
name|this
argument_list|(
name|id
argument_list|,
name|name
argument_list|,
name|host
argument_list|,
name|port
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|DEFAULT_SERVICE_HEALTH
argument_list|)
expr_stmt|;
block|}
DECL|method|DefaultServiceDefinition (String name, String host, int port, ServiceHealth health)
specifier|public
name|DefaultServiceDefinition
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|,
name|ServiceHealth
name|health
parameter_list|)
block|{
name|this
argument_list|(
literal|null
argument_list|,
name|name
argument_list|,
name|host
argument_list|,
name|port
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|health
argument_list|)
expr_stmt|;
block|}
DECL|method|DefaultServiceDefinition (String id, String name, String host, int port, ServiceHealth health)
specifier|public
name|DefaultServiceDefinition
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|,
name|ServiceHealth
name|health
parameter_list|)
block|{
name|this
argument_list|(
name|id
argument_list|,
name|name
argument_list|,
name|host
argument_list|,
name|port
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|,
name|health
argument_list|)
expr_stmt|;
block|}
DECL|method|DefaultServiceDefinition (String name, String host, int port, Map<String, String> meta)
specifier|public
name|DefaultServiceDefinition
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|meta
parameter_list|)
block|{
name|this
argument_list|(
literal|null
argument_list|,
name|name
argument_list|,
name|host
argument_list|,
name|port
argument_list|,
name|meta
argument_list|,
name|DEFAULT_SERVICE_HEALTH
argument_list|)
expr_stmt|;
block|}
DECL|method|DefaultServiceDefinition (String id, String name, String host, int port, Map<String, String> meta)
specifier|public
name|DefaultServiceDefinition
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|meta
parameter_list|)
block|{
name|this
argument_list|(
name|id
argument_list|,
name|name
argument_list|,
name|host
argument_list|,
name|port
argument_list|,
name|meta
argument_list|,
name|DEFAULT_SERVICE_HEALTH
argument_list|)
expr_stmt|;
block|}
DECL|method|DefaultServiceDefinition (String name, String host, int port, Map<String, String> meta, ServiceHealth health)
specifier|public
name|DefaultServiceDefinition
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|meta
parameter_list|,
name|ServiceHealth
name|health
parameter_list|)
block|{
name|this
argument_list|(
literal|null
argument_list|,
name|name
argument_list|,
name|host
argument_list|,
name|port
argument_list|,
name|meta
argument_list|,
name|health
argument_list|)
expr_stmt|;
block|}
DECL|method|DefaultServiceDefinition (String id, String name, String host, int port, Map<String, String> meta, ServiceHealth health)
specifier|public
name|DefaultServiceDefinition
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|meta
parameter_list|,
name|ServiceHealth
name|health
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|host
operator|=
name|host
expr_stmt|;
name|this
operator|.
name|port
operator|=
name|port
expr_stmt|;
name|this
operator|.
name|meta
operator|=
name|CollectionHelper
operator|.
name|unmodifiableMap
argument_list|(
name|meta
argument_list|)
expr_stmt|;
name|this
operator|.
name|health
operator|=
name|ObjectHelper
operator|.
name|supplyIfEmpty
argument_list|(
name|health
argument_list|,
parameter_list|()
lambda|->
name|DEFAULT_SERVICE_HEALTH
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getId ()
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
annotation|@
name|Override
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
annotation|@
name|Override
DECL|method|getHost ()
specifier|public
name|String
name|getHost
parameter_list|()
block|{
return|return
name|host
return|;
block|}
annotation|@
name|Override
DECL|method|getPort ()
specifier|public
name|int
name|getPort
parameter_list|()
block|{
return|return
name|port
return|;
block|}
annotation|@
name|Override
DECL|method|getHealth ()
specifier|public
name|ServiceHealth
name|getHealth
parameter_list|()
block|{
return|return
name|health
return|;
block|}
annotation|@
name|Override
DECL|method|getMetadata ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getMetadata
parameter_list|()
block|{
return|return
name|this
operator|.
name|meta
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"DefaultServiceDefinition["
operator|+
name|id
operator|+
literal|"]"
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object o)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|DefaultServiceDefinition
name|that
init|=
operator|(
name|DefaultServiceDefinition
operator|)
name|o
decl_stmt|;
return|return
name|getPort
argument_list|()
operator|==
name|that
operator|.
name|getPort
argument_list|()
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|getId
argument_list|()
argument_list|,
name|that
operator|.
name|getId
argument_list|()
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|getName
argument_list|()
argument_list|,
name|that
operator|.
name|getName
argument_list|()
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|getHost
argument_list|()
argument_list|,
name|that
operator|.
name|getHost
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hash
argument_list|(
name|getId
argument_list|()
argument_list|,
name|getName
argument_list|()
argument_list|,
name|getHost
argument_list|()
argument_list|,
name|getPort
argument_list|()
argument_list|)
return|;
block|}
comment|// ***************************
comment|// Builder
comment|// ***************************
DECL|method|parse (String serverString)
specifier|public
specifier|static
name|Stream
argument_list|<
name|?
extends|extends
name|ServiceDefinition
argument_list|>
name|parse
parameter_list|(
name|String
name|serverString
parameter_list|)
block|{
return|return
name|Stream
operator|.
name|of
argument_list|(
name|serverString
operator|.
name|split
argument_list|(
literal|","
argument_list|)
argument_list|)
operator|.
name|map
argument_list|(
name|part
lambda|->
block|{
name|String
name|serviceId
init|=
literal|null
decl_stmt|;
name|String
name|serviceName
init|=
name|StringHelper
operator|.
name|before
argument_list|(
name|part
argument_list|,
literal|"@"
argument_list|)
decl_stmt|;
if|if
condition|(
name|serviceName
operator|!=
literal|null
condition|)
block|{
name|serviceId
operator|=
name|StringHelper
operator|.
name|before
argument_list|(
name|serviceName
argument_list|,
literal|"/"
argument_list|)
expr_stmt|;
name|serviceName
operator|=
name|StringHelper
operator|.
name|after
argument_list|(
name|serviceName
argument_list|,
literal|"/"
argument_list|)
expr_stmt|;
if|if
condition|(
name|serviceName
operator|==
literal|null
condition|)
block|{
name|serviceName
operator|=
name|StringHelper
operator|.
name|before
argument_list|(
name|part
argument_list|,
literal|"@"
argument_list|)
expr_stmt|;
block|}
name|part
operator|=
name|StringHelper
operator|.
name|after
argument_list|(
name|part
argument_list|,
literal|"@"
argument_list|)
expr_stmt|;
block|}
name|String
name|serviceHost
init|=
name|StringHelper
operator|.
name|before
argument_list|(
name|part
argument_list|,
literal|":"
argument_list|)
decl_stmt|;
name|String
name|servicePort
init|=
name|StringHelper
operator|.
name|after
argument_list|(
name|part
argument_list|,
literal|":"
argument_list|)
decl_stmt|;
if|if
condition|(
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|serviceHost
argument_list|)
operator|&&
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|servicePort
argument_list|)
condition|)
block|{
return|return
operator|new
name|DefaultServiceDefinition
argument_list|(
name|serviceId
argument_list|,
name|serviceName
argument_list|,
name|serviceHost
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
name|servicePort
argument_list|)
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
argument_list|)
operator|.
name|filter
argument_list|(
name|Objects
operator|::
name|nonNull
argument_list|)
return|;
block|}
DECL|method|builder ()
specifier|public
specifier|static
name|Builder
name|builder
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
comment|/**      * Fluent builder to contruct ServiceDefinition.      */
DECL|class|Builder
specifier|public
specifier|static
class|class
name|Builder
block|{
DECL|field|id
specifier|private
name|String
name|id
decl_stmt|;
DECL|field|name
specifier|private
name|String
name|name
decl_stmt|;
DECL|field|host
specifier|private
name|String
name|host
decl_stmt|;
DECL|field|port
specifier|private
name|Integer
name|port
decl_stmt|;
DECL|field|meta
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|meta
decl_stmt|;
DECL|field|health
specifier|private
name|ServiceHealth
name|health
decl_stmt|;
DECL|method|from (ServiceDefinition source)
specifier|public
name|Builder
name|from
parameter_list|(
name|ServiceDefinition
name|source
parameter_list|)
block|{
name|withId
argument_list|(
name|source
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|withName
argument_list|(
name|source
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|withHost
argument_list|(
name|source
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|withPort
argument_list|(
name|source
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|withMeta
argument_list|(
name|source
operator|.
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
name|withHealth
argument_list|(
name|source
operator|.
name|getHealth
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|from (Map<String, Object> properties)
specifier|public
name|Builder
name|from
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|options
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|(
name|properties
argument_list|)
decl_stmt|;
name|Object
name|val
init|=
literal|null
decl_stmt|;
name|val
operator|=
name|options
operator|.
name|remove
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_ID
argument_list|)
expr_stmt|;
if|if
condition|(
name|val
operator|!=
literal|null
operator|&&
name|val
operator|instanceof
name|String
condition|)
block|{
name|withId
argument_list|(
operator|(
name|String
operator|)
name|val
argument_list|)
expr_stmt|;
block|}
name|val
operator|=
name|options
operator|.
name|remove
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_NAME
argument_list|)
expr_stmt|;
if|if
condition|(
name|val
operator|!=
literal|null
operator|&&
name|val
operator|instanceof
name|String
condition|)
block|{
name|withName
argument_list|(
operator|(
name|String
operator|)
name|val
argument_list|)
expr_stmt|;
block|}
name|val
operator|=
name|options
operator|.
name|remove
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_HOST
argument_list|)
expr_stmt|;
if|if
condition|(
name|val
operator|!=
literal|null
operator|&&
name|val
operator|instanceof
name|String
condition|)
block|{
name|withHost
argument_list|(
operator|(
name|String
operator|)
name|val
argument_list|)
expr_stmt|;
block|}
name|val
operator|=
name|options
operator|.
name|remove
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_PORT
argument_list|)
expr_stmt|;
if|if
condition|(
name|val
operator|!=
literal|null
operator|&&
name|val
operator|instanceof
name|String
condition|)
block|{
name|withPort
argument_list|(
operator|(
name|String
operator|)
name|val
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|val
operator|!=
literal|null
operator|&&
name|val
operator|instanceof
name|Integer
condition|)
block|{
name|withPort
argument_list|(
operator|(
name|Integer
operator|)
name|val
argument_list|)
expr_stmt|;
block|}
name|val
operator|=
name|options
operator|.
name|remove
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_HOST
argument_list|)
expr_stmt|;
if|if
condition|(
name|val
operator|!=
literal|null
operator|&&
name|val
operator|instanceof
name|String
condition|)
block|{
name|withHost
argument_list|(
operator|(
name|String
operator|)
name|val
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entry
range|:
name|options
operator|.
name|entrySet
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|startsWith
argument_list|(
name|ServiceDefinition
operator|.
name|SERVICE_META_PREFIX
argument_list|)
condition|)
block|{
continue|continue;
block|}
if|if
condition|(
name|entry
operator|.
name|getValue
argument_list|()
operator|instanceof
name|String
condition|)
block|{
name|addMeta
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
operator|(
name|String
operator|)
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
DECL|method|withId (String id)
specifier|public
name|Builder
name|withId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|id ()
specifier|public
name|String
name|id
parameter_list|()
block|{
return|return
name|id
return|;
block|}
DECL|method|withName (String name)
specifier|public
name|Builder
name|withName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|name ()
specifier|public
name|String
name|name
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|withHost (String host)
specifier|public
name|Builder
name|withHost
parameter_list|(
name|String
name|host
parameter_list|)
block|{
name|this
operator|.
name|host
operator|=
name|host
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|host ()
specifier|public
name|String
name|host
parameter_list|()
block|{
return|return
name|host
return|;
block|}
DECL|method|withPort (Integer port)
specifier|public
name|Builder
name|withPort
parameter_list|(
name|Integer
name|port
parameter_list|)
block|{
name|this
operator|.
name|port
operator|=
name|port
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withPort (String port)
specifier|public
name|Builder
name|withPort
parameter_list|(
name|String
name|port
parameter_list|)
block|{
if|if
condition|(
name|port
operator|!=
literal|null
condition|)
block|{
name|withPort
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|port
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
DECL|method|port ()
specifier|public
name|Integer
name|port
parameter_list|()
block|{
return|return
name|port
return|;
block|}
DECL|method|withMeta (Map<String, String> meta)
specifier|public
name|Builder
name|withMeta
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|meta
parameter_list|)
block|{
name|this
operator|.
name|meta
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|(
name|meta
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|addMeta (String key, String val)
specifier|public
name|Builder
name|addMeta
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|val
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|meta
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|meta
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|meta
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|val
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|addAllMeta (Map<String, String> meta)
specifier|public
name|Builder
name|addAllMeta
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|meta
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|meta
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|meta
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|meta
operator|.
name|putAll
argument_list|(
name|meta
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|meta ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|meta
parameter_list|()
block|{
return|return
name|meta
return|;
block|}
DECL|method|withHealth (ServiceHealth health)
specifier|public
name|Builder
name|withHealth
parameter_list|(
name|ServiceHealth
name|health
parameter_list|)
block|{
name|this
operator|.
name|health
operator|=
name|health
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|health ()
specifier|public
name|ServiceHealth
name|health
parameter_list|()
block|{
return|return
name|health
return|;
block|}
DECL|method|build ()
specifier|public
name|ServiceDefinition
name|build
parameter_list|()
block|{
return|return
operator|new
name|DefaultServiceDefinition
argument_list|(
name|id
argument_list|,
name|name
argument_list|,
name|host
argument_list|,
name|port
operator|!=
literal|null
condition|?
name|port
else|:
operator|-
literal|1
argument_list|,
name|meta
argument_list|,
name|health
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

