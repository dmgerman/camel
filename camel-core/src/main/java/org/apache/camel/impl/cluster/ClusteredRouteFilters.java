begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.impl.cluster
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|cluster
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|RouteDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_class
DECL|class|ClusteredRouteFilters
specifier|public
specifier|final
class|class
name|ClusteredRouteFilters
block|{
DECL|method|ClusteredRouteFilters ()
specifier|private
name|ClusteredRouteFilters
parameter_list|()
block|{     }
DECL|class|IsAutoStartup
specifier|public
specifier|static
specifier|final
class|class
name|IsAutoStartup
implements|implements
name|ClusteredRouteFilter
block|{
annotation|@
name|Override
DECL|method|test (CamelContext camelContext, String routeId, RouteDefinition route)
specifier|public
name|boolean
name|test
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|,
name|String
name|routeId
parameter_list|,
name|RouteDefinition
name|route
parameter_list|)
block|{
try|try
block|{
return|return
name|route
operator|.
name|isAutoStartup
argument_list|(
name|camelContext
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|ObjectHelper
operator|.
name|wrapRuntimeCamelException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
DECL|class|BlackList
specifier|public
specifier|static
specifier|final
class|class
name|BlackList
implements|implements
name|ClusteredRouteFilter
block|{
DECL|field|names
specifier|private
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|names
decl_stmt|;
DECL|method|BlackList (String name)
specifier|public
name|BlackList
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|BlackList (Collection<String> names)
specifier|public
name|BlackList
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|names
parameter_list|)
block|{
name|this
operator|.
name|names
operator|=
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|names
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|test (CamelContext camelContext, String routeId, RouteDefinition route)
specifier|public
name|boolean
name|test
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|,
name|String
name|routeId
parameter_list|,
name|RouteDefinition
name|route
parameter_list|)
block|{
return|return
operator|!
name|names
operator|.
name|contains
argument_list|(
name|routeId
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

