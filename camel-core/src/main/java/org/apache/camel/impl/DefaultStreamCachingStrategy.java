begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.impl
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|StreamCachingStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|FileUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|DefaultStreamCachingStrategy
specifier|public
class|class
name|DefaultStreamCachingStrategy
extends|extends
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|ServiceSupport
implements|implements
name|StreamCachingStrategy
block|{
comment|// TODO: Add options to configure more stuff like overflow size et all
comment|// TODO: Add JMX management
comment|// TODO: Maybe use #syntax# for default temp dir so ppl can easily configure this
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|DefaultStreamCachingStrategy
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|temporaryDirectory
specifier|private
name|File
name|temporaryDirectory
decl_stmt|;
DECL|method|setTemporaryDirectory (File path)
specifier|public
name|void
name|setTemporaryDirectory
parameter_list|(
name|File
name|path
parameter_list|)
block|{
name|this
operator|.
name|temporaryDirectory
operator|=
name|path
expr_stmt|;
block|}
DECL|method|getTemporaryDirectory ()
specifier|public
name|File
name|getTemporaryDirectory
parameter_list|()
block|{
return|return
name|temporaryDirectory
return|;
block|}
annotation|@
name|Override
DECL|method|doStart ()
specifier|protected
name|void
name|doStart
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create random temporary directory if none has been created
if|if
condition|(
name|temporaryDirectory
operator|==
literal|null
condition|)
block|{
name|temporaryDirectory
operator|=
name|FileUtil
operator|.
name|createNewTempDir
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Created temporary directory {}"
argument_list|,
name|temporaryDirectory
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
operator|!
name|temporaryDirectory
operator|.
name|exists
argument_list|()
condition|)
block|{
name|boolean
name|created
init|=
name|temporaryDirectory
operator|.
name|mkdirs
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|created
condition|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Cannot create temporary directory {}"
argument_list|,
name|temporaryDirectory
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Created temporary directory {}"
argument_list|,
name|temporaryDirectory
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
annotation|@
name|Override
DECL|method|doStop ()
specifier|protected
name|void
name|doStop
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|temporaryDirectory
operator|!=
literal|null
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Removing temporary directory {}"
argument_list|,
name|temporaryDirectory
argument_list|)
expr_stmt|;
name|FileUtil
operator|.
name|removeDir
argument_list|(
name|temporaryDirectory
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

