begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.impl.remote
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ServiceCallServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ServiceCallServerListStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_class
DECL|class|CachingServiceCallServiceListStrategy
specifier|public
class|class
name|CachingServiceCallServiceListStrategy
parameter_list|<
name|T
extends|extends
name|ServiceCallServer
parameter_list|>
implements|implements
name|ServiceCallServerListStrategy
argument_list|<
name|T
argument_list|>
block|{
DECL|field|delegate
specifier|private
specifier|final
name|ServiceCallServerListStrategy
argument_list|<
name|T
argument_list|>
name|delegate
decl_stmt|;
DECL|field|servers
specifier|private
name|List
argument_list|<
name|T
argument_list|>
name|servers
decl_stmt|;
DECL|field|lastUpdate
specifier|private
name|long
name|lastUpdate
decl_stmt|;
DECL|field|timeout
specifier|private
name|long
name|timeout
decl_stmt|;
DECL|method|CachingServiceCallServiceListStrategy (ServiceCallServerListStrategy<T> delegate)
specifier|public
name|CachingServiceCallServiceListStrategy
parameter_list|(
name|ServiceCallServerListStrategy
argument_list|<
name|T
argument_list|>
name|delegate
parameter_list|)
block|{
name|this
operator|.
name|delegate
operator|=
name|ObjectHelper
operator|.
name|notNull
argument_list|(
name|delegate
argument_list|,
literal|"delegate"
argument_list|)
expr_stmt|;
name|this
operator|.
name|lastUpdate
operator|=
literal|0
expr_stmt|;
name|this
operator|.
name|servers
operator|=
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|this
operator|.
name|timeout
operator|=
literal|60
operator|*
literal|1000
expr_stmt|;
comment|// 1 min;
block|}
DECL|method|setTimeout (long timeout)
specifier|public
name|void
name|setTimeout
parameter_list|(
name|long
name|timeout
parameter_list|)
block|{
name|this
operator|.
name|timeout
operator|=
name|timeout
expr_stmt|;
block|}
DECL|method|setTimeout (long timeout, TimeUnit unit)
specifier|public
name|void
name|setTimeout
parameter_list|(
name|long
name|timeout
parameter_list|,
name|TimeUnit
name|unit
parameter_list|)
block|{
name|this
operator|.
name|timeout
operator|=
name|unit
operator|.
name|toMillis
argument_list|(
name|timeout
argument_list|)
expr_stmt|;
block|}
DECL|method|getTimeout ()
specifier|public
name|long
name|getTimeout
parameter_list|()
block|{
return|return
name|timeout
return|;
block|}
DECL|method|timeout (long timeout)
specifier|public
name|CachingServiceCallServiceListStrategy
argument_list|<
name|T
argument_list|>
name|timeout
parameter_list|(
name|long
name|timeout
parameter_list|)
block|{
name|setTimeout
argument_list|(
name|timeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|timeout (long timeout, TimeUnit unit)
specifier|public
name|CachingServiceCallServiceListStrategy
argument_list|<
name|T
argument_list|>
name|timeout
parameter_list|(
name|long
name|timeout
parameter_list|,
name|TimeUnit
name|unit
parameter_list|)
block|{
name|setTimeout
argument_list|(
name|timeout
argument_list|,
name|unit
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|getInitialListOfServers (String name)
specifier|public
name|List
argument_list|<
name|T
argument_list|>
name|getInitialListOfServers
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|getInitialListOfServers
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getUpdatedListOfServers (String name)
specifier|public
name|List
argument_list|<
name|T
argument_list|>
name|getUpdatedListOfServers
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|long
name|now
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
if|if
condition|(
name|lastUpdate
operator|==
literal|0
operator|||
name|now
operator|>
name|lastUpdate
operator|+
name|timeout
condition|)
block|{
name|List
argument_list|<
name|T
argument_list|>
name|updatedList
init|=
name|delegate
operator|.
name|getUpdatedListOfServers
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|updatedList
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|servers
operator|=
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
else|else
block|{
comment|// List is copied as the delegated ServiceCallServerListStrategy
comment|// may update the list
name|servers
operator|=
name|Collections
operator|.
name|unmodifiableList
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|updatedList
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|lastUpdate
operator|=
name|now
expr_stmt|;
block|}
return|return
name|servers
return|;
block|}
comment|// **********************
comment|// Helpers
comment|// **********************
DECL|method|wrap (ServiceCallServerListStrategy<S> delegate)
specifier|public
specifier|static
parameter_list|<
name|S
extends|extends
name|ServiceCallServer
parameter_list|>
name|CachingServiceCallServiceListStrategy
argument_list|<
name|S
argument_list|>
name|wrap
parameter_list|(
name|ServiceCallServerListStrategy
argument_list|<
name|S
argument_list|>
name|delegate
parameter_list|)
block|{
return|return
operator|new
name|CachingServiceCallServiceListStrategy
argument_list|<>
argument_list|(
name|delegate
argument_list|)
return|;
block|}
DECL|method|wrap (ServiceCallServerListStrategy<S> delegate, long timeout)
specifier|public
specifier|static
parameter_list|<
name|S
extends|extends
name|ServiceCallServer
parameter_list|>
name|CachingServiceCallServiceListStrategy
argument_list|<
name|S
argument_list|>
name|wrap
parameter_list|(
name|ServiceCallServerListStrategy
argument_list|<
name|S
argument_list|>
name|delegate
parameter_list|,
name|long
name|timeout
parameter_list|)
block|{
return|return
operator|new
name|CachingServiceCallServiceListStrategy
argument_list|<>
argument_list|(
name|delegate
argument_list|)
operator|.
name|timeout
argument_list|(
name|timeout
argument_list|)
return|;
block|}
DECL|method|wrap (ServiceCallServerListStrategy<S> delegate, long timeout, TimeUnit unit)
specifier|public
specifier|static
parameter_list|<
name|S
extends|extends
name|ServiceCallServer
parameter_list|>
name|CachingServiceCallServiceListStrategy
argument_list|<
name|S
argument_list|>
name|wrap
parameter_list|(
name|ServiceCallServerListStrategy
argument_list|<
name|S
argument_list|>
name|delegate
parameter_list|,
name|long
name|timeout
parameter_list|,
name|TimeUnit
name|unit
parameter_list|)
block|{
return|return
operator|new
name|CachingServiceCallServiceListStrategy
argument_list|<>
argument_list|(
name|delegate
argument_list|)
operator|.
name|timeout
argument_list|(
name|timeout
argument_list|,
name|unit
argument_list|)
return|;
block|}
block|}
end_class

end_unit

