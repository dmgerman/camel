begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.model.dataformat
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|dataformat
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|DataFormatDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|DataFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|Label
import|;
end_import

begin_comment
comment|/**  * Represents a<a href="http://camel.apache.org/crypto.html">pgp</a>  * {@link org.apache.camel.spi.DataFormat}.  */
end_comment

begin_class
annotation|@
name|Label
argument_list|(
literal|"dataformat,transformation"
argument_list|)
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"pgp"
argument_list|)
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|PGPDataFormat
specifier|public
class|class
name|PGPDataFormat
extends|extends
name|DataFormatDefinition
block|{
annotation|@
name|XmlAttribute
DECL|field|keyUserid
specifier|private
name|String
name|keyUserid
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|signatureKeyUserid
specifier|private
name|String
name|signatureKeyUserid
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|password
specifier|private
name|String
name|password
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|signaturePassword
specifier|private
name|String
name|signaturePassword
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|keyFileName
specifier|private
name|String
name|keyFileName
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|signatureKeyFileName
specifier|private
name|String
name|signatureKeyFileName
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|armored
specifier|private
name|Boolean
name|armored
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|integrity
specifier|private
name|Boolean
name|integrity
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|provider
specifier|private
name|String
name|provider
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|algorithm
specifier|private
name|Integer
name|algorithm
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|compressionAlgorithm
specifier|private
name|Integer
name|compressionAlgorithm
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|hashAlgorithm
specifier|private
name|Integer
name|hashAlgorithm
decl_stmt|;
DECL|method|PGPDataFormat ()
specifier|public
name|PGPDataFormat
parameter_list|()
block|{
name|super
argument_list|(
literal|"pgp"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|configureDataFormat (DataFormat dataFormat, CamelContext camelContext)
specifier|protected
name|void
name|configureDataFormat
parameter_list|(
name|DataFormat
name|dataFormat
parameter_list|,
name|CamelContext
name|camelContext
parameter_list|)
block|{
if|if
condition|(
name|keyUserid
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"keyUserid"
argument_list|,
name|keyUserid
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|signatureKeyUserid
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"signatureKeyUserid"
argument_list|,
name|signatureKeyUserid
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|password
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"password"
argument_list|,
name|password
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|signaturePassword
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"signaturePassword"
argument_list|,
name|signaturePassword
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|keyFileName
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"keyFileName"
argument_list|,
name|keyFileName
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|signatureKeyFileName
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"signatureKeyFileName"
argument_list|,
name|signatureKeyFileName
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|armored
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"armored"
argument_list|,
name|armored
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|integrity
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"integrity"
argument_list|,
name|integrity
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|provider
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"provider"
argument_list|,
name|provider
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|algorithm
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"algorithm"
argument_list|,
name|algorithm
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|compressionAlgorithm
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"compressionAlgorithm"
argument_list|,
name|compressionAlgorithm
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hashAlgorithm
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"hashAlgorithm"
argument_list|,
name|hashAlgorithm
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getSignatureKeyUserid ()
specifier|public
name|String
name|getSignatureKeyUserid
parameter_list|()
block|{
return|return
name|signatureKeyUserid
return|;
block|}
DECL|method|setSignatureKeyUserid (String signatureKeyUserid)
specifier|public
name|void
name|setSignatureKeyUserid
parameter_list|(
name|String
name|signatureKeyUserid
parameter_list|)
block|{
name|this
operator|.
name|signatureKeyUserid
operator|=
name|signatureKeyUserid
expr_stmt|;
block|}
DECL|method|getSignaturePassword ()
specifier|public
name|String
name|getSignaturePassword
parameter_list|()
block|{
return|return
name|signaturePassword
return|;
block|}
DECL|method|setSignaturePassword (String signaturePassword)
specifier|public
name|void
name|setSignaturePassword
parameter_list|(
name|String
name|signaturePassword
parameter_list|)
block|{
name|this
operator|.
name|signaturePassword
operator|=
name|signaturePassword
expr_stmt|;
block|}
DECL|method|getSignatureKeyFileName ()
specifier|public
name|String
name|getSignatureKeyFileName
parameter_list|()
block|{
return|return
name|signatureKeyFileName
return|;
block|}
DECL|method|setSignatureKeyFileName (String signatureKeyFileName)
specifier|public
name|void
name|setSignatureKeyFileName
parameter_list|(
name|String
name|signatureKeyFileName
parameter_list|)
block|{
name|this
operator|.
name|signatureKeyFileName
operator|=
name|signatureKeyFileName
expr_stmt|;
block|}
DECL|method|getHashAlgorithm ()
specifier|public
name|Integer
name|getHashAlgorithm
parameter_list|()
block|{
return|return
name|hashAlgorithm
return|;
block|}
DECL|method|setHashAlgorithm (Integer hashAlgorithm)
specifier|public
name|void
name|setHashAlgorithm
parameter_list|(
name|Integer
name|hashAlgorithm
parameter_list|)
block|{
name|this
operator|.
name|hashAlgorithm
operator|=
name|hashAlgorithm
expr_stmt|;
block|}
DECL|method|getArmored ()
specifier|public
name|Boolean
name|getArmored
parameter_list|()
block|{
return|return
name|armored
return|;
block|}
DECL|method|setArmored (Boolean armored)
specifier|public
name|void
name|setArmored
parameter_list|(
name|Boolean
name|armored
parameter_list|)
block|{
name|this
operator|.
name|armored
operator|=
name|armored
expr_stmt|;
block|}
DECL|method|getIntegrity ()
specifier|public
name|Boolean
name|getIntegrity
parameter_list|()
block|{
return|return
name|integrity
return|;
block|}
DECL|method|setIntegrity (Boolean integrity)
specifier|public
name|void
name|setIntegrity
parameter_list|(
name|Boolean
name|integrity
parameter_list|)
block|{
name|this
operator|.
name|integrity
operator|=
name|integrity
expr_stmt|;
block|}
DECL|method|getKeyFileName ()
specifier|public
name|String
name|getKeyFileName
parameter_list|()
block|{
return|return
name|keyFileName
return|;
block|}
DECL|method|setKeyFileName (String keyFileName)
specifier|public
name|void
name|setKeyFileName
parameter_list|(
name|String
name|keyFileName
parameter_list|)
block|{
name|this
operator|.
name|keyFileName
operator|=
name|keyFileName
expr_stmt|;
block|}
DECL|method|getKeyUserid ()
specifier|public
name|String
name|getKeyUserid
parameter_list|()
block|{
return|return
name|keyUserid
return|;
block|}
DECL|method|setKeyUserid (String keyUserid)
specifier|public
name|void
name|setKeyUserid
parameter_list|(
name|String
name|keyUserid
parameter_list|)
block|{
name|this
operator|.
name|keyUserid
operator|=
name|keyUserid
expr_stmt|;
block|}
DECL|method|getPassword ()
specifier|public
name|String
name|getPassword
parameter_list|()
block|{
return|return
name|password
return|;
block|}
DECL|method|getAlgorithm ()
specifier|public
name|Integer
name|getAlgorithm
parameter_list|()
block|{
return|return
name|algorithm
return|;
block|}
DECL|method|setAlgorithm (Integer algorithm)
specifier|public
name|void
name|setAlgorithm
parameter_list|(
name|Integer
name|algorithm
parameter_list|)
block|{
name|this
operator|.
name|algorithm
operator|=
name|algorithm
expr_stmt|;
block|}
DECL|method|getCompressionAlgorithm ()
specifier|public
name|Integer
name|getCompressionAlgorithm
parameter_list|()
block|{
return|return
name|compressionAlgorithm
return|;
block|}
DECL|method|setCompressionAlgorithm (Integer compressionAlgorithm)
specifier|public
name|void
name|setCompressionAlgorithm
parameter_list|(
name|Integer
name|compressionAlgorithm
parameter_list|)
block|{
name|this
operator|.
name|compressionAlgorithm
operator|=
name|compressionAlgorithm
expr_stmt|;
block|}
DECL|method|setPassword (String password)
specifier|public
name|void
name|setPassword
parameter_list|(
name|String
name|password
parameter_list|)
block|{
name|this
operator|.
name|password
operator|=
name|password
expr_stmt|;
block|}
DECL|method|getProvider ()
specifier|public
name|String
name|getProvider
parameter_list|()
block|{
return|return
name|provider
return|;
block|}
DECL|method|setProvider (String provider)
specifier|public
name|void
name|setProvider
parameter_list|(
name|String
name|provider
parameter_list|)
block|{
name|this
operator|.
name|provider
operator|=
name|provider
expr_stmt|;
block|}
block|}
end_class

end_unit

