begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.model.remote
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlTransient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ExchangePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|NoOutputDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|RouteContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ServiceCallLoadBalancer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ServiceCallServerListStrategy
import|;
end_import

begin_comment
comment|/**  * Remote service call  */
end_comment

begin_class
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"eip,routing"
argument_list|)
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"serviceCall"
argument_list|)
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|ServiceCallDefinition
specifier|public
class|class
name|ServiceCallDefinition
extends|extends
name|NoOutputDefinition
argument_list|<
name|ServiceCallDefinition
argument_list|>
block|{
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|required
operator|=
literal|"true"
argument_list|)
DECL|field|name
specifier|private
name|String
name|name
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|required
operator|=
literal|"true"
argument_list|)
DECL|field|uri
specifier|private
name|String
name|uri
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|pattern
specifier|private
name|ExchangePattern
name|pattern
decl_stmt|;
annotation|@
name|XmlElement
DECL|field|serviceCallConfiguration
specifier|private
name|ServiceCallConfigurationDefinition
name|serviceCallConfiguration
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|serviceCallConfigurationRef
specifier|private
name|String
name|serviceCallConfigurationRef
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|loadBalancerRef
specifier|private
name|String
name|loadBalancerRef
decl_stmt|;
comment|// TODO: allow to use custom type as load balancer
annotation|@
name|XmlTransient
DECL|field|loadBalancer
specifier|private
name|ServiceCallLoadBalancer
name|loadBalancer
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|serverListStrategyRef
specifier|private
name|String
name|serverListStrategyRef
decl_stmt|;
annotation|@
name|XmlTransient
DECL|field|serverListStrategy
specifier|private
name|ServiceCallServerListStrategy
name|serverListStrategy
decl_stmt|;
DECL|method|ServiceCallDefinition ()
specifier|public
name|ServiceCallDefinition
parameter_list|()
block|{     }
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"ServiceCall["
operator|+
name|name
operator|+
literal|"]"
return|;
block|}
annotation|@
name|Override
DECL|method|getLabel ()
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
return|return
literal|"serviceCall"
return|;
block|}
annotation|@
name|Override
DECL|method|createProcessor (RouteContext routeContext)
specifier|public
name|Processor
name|createProcessor
parameter_list|(
name|RouteContext
name|routeContext
parameter_list|)
throws|throws
name|Exception
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Cannot find Camel component supporting the ServiceCall EIP such as camel-kubernetes or camel-ribbon."
argument_list|)
throw|;
block|}
comment|// Fluent API
comment|// -------------------------------------------------------------------------
comment|/**      * Sets the optional {@link ExchangePattern} used to invoke this endpoint      */
DECL|method|pattern (ExchangePattern pattern)
specifier|public
name|ServiceCallDefinition
name|pattern
parameter_list|(
name|ExchangePattern
name|pattern
parameter_list|)
block|{
name|setPattern
argument_list|(
name|pattern
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sets the name of the service to use      */
DECL|method|name (String name)
specifier|public
name|ServiceCallDefinition
name|name
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sets the uri of the service to use      */
DECL|method|uri (String uri)
specifier|public
name|ServiceCallDefinition
name|uri
parameter_list|(
name|String
name|uri
parameter_list|)
block|{
name|setUri
argument_list|(
name|uri
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Configures the Service Call EIP using Kubernetes      *<p/>      * Use<tt>end</tt> when configuration is complete, to return back to the Service Call EIP.      */
DECL|method|kubernetesConfiguration ()
specifier|public
name|KubernetesConfigurationDefinition
name|kubernetesConfiguration
parameter_list|()
block|{
name|serviceCallConfiguration
operator|=
operator|new
name|KubernetesConfigurationDefinition
argument_list|(
name|this
argument_list|)
expr_stmt|;
return|return
operator|(
name|KubernetesConfigurationDefinition
operator|)
name|serviceCallConfiguration
return|;
block|}
comment|/**      * Configures the Service Call EIP using Ribbon      *<p/>      * Use<tt>end</tt> when configuration is complete, to return back to the Service Call EIP.      */
DECL|method|ribbonConfiguration ()
specifier|public
name|RibbonConfigurationDefinition
name|ribbonConfiguration
parameter_list|()
block|{
name|serviceCallConfiguration
operator|=
operator|new
name|RibbonConfigurationDefinition
argument_list|(
name|this
argument_list|)
expr_stmt|;
return|return
operator|(
name|RibbonConfigurationDefinition
operator|)
name|serviceCallConfiguration
return|;
block|}
comment|/**      * Configures the Service Call EIP using Consul      *<p/>      * Use<tt>end</tt> when configuration is complete, to return back to the Service Call EIP.      */
DECL|method|consulConfiguration ()
specifier|public
name|ConsulConfigurationDefinition
name|consulConfiguration
parameter_list|()
block|{
name|serviceCallConfiguration
operator|=
operator|new
name|ConsulConfigurationDefinition
argument_list|(
name|this
argument_list|)
expr_stmt|;
return|return
operator|(
name|ConsulConfigurationDefinition
operator|)
name|serviceCallConfiguration
return|;
block|}
comment|/**      * Configures the Service Call EIP using Etcd      *<p/>      * Use<tt>end</tt> when configuration is complete, to return back to the Service Call EIP.      */
DECL|method|etcdConfiguration ()
specifier|public
name|EtcdConfigurationDefinition
name|etcdConfiguration
parameter_list|()
block|{
name|serviceCallConfiguration
operator|=
operator|new
name|EtcdConfigurationDefinition
argument_list|(
name|this
argument_list|)
expr_stmt|;
return|return
operator|(
name|EtcdConfigurationDefinition
operator|)
name|serviceCallConfiguration
return|;
block|}
comment|/**      * Configures the Service Call EIP using Dns      *<p/>      * Use<tt>end</tt> when configuration is complete, to return back to the Service Call EIP.      */
DECL|method|dnsConfiguration ()
specifier|public
name|DnsConfigurationDefinition
name|dnsConfiguration
parameter_list|()
block|{
name|serviceCallConfiguration
operator|=
operator|new
name|DnsConfigurationDefinition
argument_list|(
name|this
argument_list|)
expr_stmt|;
return|return
operator|(
name|DnsConfigurationDefinition
operator|)
name|serviceCallConfiguration
return|;
block|}
comment|/**      * Configures the ServiceCall using the given configuration      */
DECL|method|serviceCallConfiguration (ServiceCallConfigurationDefinition configuration)
specifier|public
name|ServiceCallDefinition
name|serviceCallConfiguration
parameter_list|(
name|ServiceCallConfigurationDefinition
name|configuration
parameter_list|)
block|{
name|serviceCallConfiguration
operator|=
name|configuration
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Refers to a ServiceCall configuration to use      */
DECL|method|serviceCallConfiguration (String ref)
specifier|public
name|ServiceCallDefinition
name|serviceCallConfiguration
parameter_list|(
name|String
name|ref
parameter_list|)
block|{
name|serviceCallConfigurationRef
operator|=
name|ref
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sets a reference to a custom {@link org.apache.camel.spi.ServiceCallLoadBalancer} to use.      */
DECL|method|loadBalancer (String loadBalancerRef)
specifier|public
name|ServiceCallDefinition
name|loadBalancer
parameter_list|(
name|String
name|loadBalancerRef
parameter_list|)
block|{
name|setLoadBalancerRef
argument_list|(
name|loadBalancerRef
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sets a custom {@link org.apache.camel.spi.ServiceCallLoadBalancer} to use.      */
DECL|method|loadBalancer (ServiceCallLoadBalancer loadBalancer)
specifier|public
name|ServiceCallDefinition
name|loadBalancer
parameter_list|(
name|ServiceCallLoadBalancer
name|loadBalancer
parameter_list|)
block|{
name|setLoadBalancer
argument_list|(
name|loadBalancer
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sets a reference to a custom {@link org.apache.camel.spi.ServiceCallServerListStrategy} to use.      */
DECL|method|serverListStrategy (String serverListStrategyRef)
specifier|public
name|ServiceCallDefinition
name|serverListStrategy
parameter_list|(
name|String
name|serverListStrategyRef
parameter_list|)
block|{
name|setServerListStrategyRef
argument_list|(
name|serverListStrategyRef
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sets a custom {@link org.apache.camel.spi.ServiceCallServerListStrategy} to use.      */
DECL|method|serverListStrategy (ServiceCallServerListStrategy serverListStrategy)
specifier|public
name|ServiceCallDefinition
name|serverListStrategy
parameter_list|(
name|ServiceCallServerListStrategy
name|serverListStrategy
parameter_list|)
block|{
name|setServerListStrategy
argument_list|(
name|serverListStrategy
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// Properties
comment|// -------------------------------------------------------------------------
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|setName (String name)
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
DECL|method|getPattern ()
specifier|public
name|ExchangePattern
name|getPattern
parameter_list|()
block|{
return|return
name|pattern
return|;
block|}
DECL|method|setPattern (ExchangePattern pattern)
specifier|public
name|void
name|setPattern
parameter_list|(
name|ExchangePattern
name|pattern
parameter_list|)
block|{
name|this
operator|.
name|pattern
operator|=
name|pattern
expr_stmt|;
block|}
DECL|method|getServiceCallConfiguration ()
specifier|public
name|ServiceCallConfigurationDefinition
name|getServiceCallConfiguration
parameter_list|()
block|{
return|return
name|serviceCallConfiguration
return|;
block|}
DECL|method|setServiceCallConfiguration (ServiceCallConfigurationDefinition serviceCallConfiguration)
specifier|public
name|void
name|setServiceCallConfiguration
parameter_list|(
name|ServiceCallConfigurationDefinition
name|serviceCallConfiguration
parameter_list|)
block|{
name|this
operator|.
name|serviceCallConfiguration
operator|=
name|serviceCallConfiguration
expr_stmt|;
block|}
DECL|method|getServiceCallConfigurationRef ()
specifier|public
name|String
name|getServiceCallConfigurationRef
parameter_list|()
block|{
return|return
name|serviceCallConfigurationRef
return|;
block|}
DECL|method|setServiceCallConfigurationRef (String serviceCallConfigurationRef)
specifier|public
name|void
name|setServiceCallConfigurationRef
parameter_list|(
name|String
name|serviceCallConfigurationRef
parameter_list|)
block|{
name|this
operator|.
name|serviceCallConfigurationRef
operator|=
name|serviceCallConfigurationRef
expr_stmt|;
block|}
DECL|method|getUri ()
specifier|public
name|String
name|getUri
parameter_list|()
block|{
return|return
name|uri
return|;
block|}
comment|/**      * The uri of the endpoint to send to.      * The uri can be dynamic computed using the {@link org.apache.camel.language.simple.SimpleLanguage} expression.      */
DECL|method|setUri (String uri)
specifier|public
name|void
name|setUri
parameter_list|(
name|String
name|uri
parameter_list|)
block|{
name|this
operator|.
name|uri
operator|=
name|uri
expr_stmt|;
block|}
DECL|method|getLoadBalancerRef ()
specifier|public
name|String
name|getLoadBalancerRef
parameter_list|()
block|{
return|return
name|loadBalancerRef
return|;
block|}
DECL|method|setLoadBalancerRef (String loadBalancerRef)
specifier|public
name|void
name|setLoadBalancerRef
parameter_list|(
name|String
name|loadBalancerRef
parameter_list|)
block|{
name|this
operator|.
name|loadBalancerRef
operator|=
name|loadBalancerRef
expr_stmt|;
block|}
DECL|method|getLoadBalancer ()
specifier|public
name|ServiceCallLoadBalancer
name|getLoadBalancer
parameter_list|()
block|{
return|return
name|loadBalancer
return|;
block|}
DECL|method|setLoadBalancer (ServiceCallLoadBalancer loadBalancer)
specifier|public
name|void
name|setLoadBalancer
parameter_list|(
name|ServiceCallLoadBalancer
name|loadBalancer
parameter_list|)
block|{
name|this
operator|.
name|loadBalancer
operator|=
name|loadBalancer
expr_stmt|;
block|}
DECL|method|getServerListStrategyRef ()
specifier|public
name|String
name|getServerListStrategyRef
parameter_list|()
block|{
return|return
name|serverListStrategyRef
return|;
block|}
DECL|method|setServerListStrategyRef (String serverListStrategyRef)
specifier|public
name|void
name|setServerListStrategyRef
parameter_list|(
name|String
name|serverListStrategyRef
parameter_list|)
block|{
name|this
operator|.
name|serverListStrategyRef
operator|=
name|serverListStrategyRef
expr_stmt|;
block|}
DECL|method|getServerListStrategy ()
specifier|public
name|ServiceCallServerListStrategy
name|getServerListStrategy
parameter_list|()
block|{
return|return
name|serverListStrategy
return|;
block|}
DECL|method|setServerListStrategy (ServiceCallServerListStrategy serverListStrategy)
specifier|public
name|void
name|setServerListStrategy
parameter_list|(
name|ServiceCallServerListStrategy
name|serverListStrategy
parameter_list|)
block|{
name|this
operator|.
name|serverListStrategy
operator|=
name|serverListStrategy
expr_stmt|;
block|}
block|}
end_class

end_unit

