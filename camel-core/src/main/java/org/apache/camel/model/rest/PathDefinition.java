begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.model.rest
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|rest
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElementRef
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|ToDefinition
import|;
end_import

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"path"
argument_list|)
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|PathDefinition
specifier|public
class|class
name|PathDefinition
block|{
annotation|@
name|XmlAttribute
DECL|field|uri
specifier|private
name|String
name|uri
decl_stmt|;
annotation|@
name|XmlElementRef
DECL|field|verbs
specifier|private
name|List
argument_list|<
name|VerbDefinition
argument_list|>
name|verbs
init|=
operator|new
name|ArrayList
argument_list|<
name|VerbDefinition
argument_list|>
argument_list|()
decl_stmt|;
DECL|method|getUri ()
specifier|public
name|String
name|getUri
parameter_list|()
block|{
return|return
name|uri
return|;
block|}
DECL|method|setUri (String uri)
specifier|public
name|void
name|setUri
parameter_list|(
name|String
name|uri
parameter_list|)
block|{
name|this
operator|.
name|uri
operator|=
name|uri
expr_stmt|;
block|}
DECL|method|getVerbs ()
specifier|public
name|List
argument_list|<
name|VerbDefinition
argument_list|>
name|getVerbs
parameter_list|()
block|{
return|return
name|verbs
return|;
block|}
DECL|method|setVerbs (List<VerbDefinition> verbs)
specifier|public
name|void
name|setVerbs
parameter_list|(
name|List
argument_list|<
name|VerbDefinition
argument_list|>
name|verbs
parameter_list|)
block|{
name|this
operator|.
name|verbs
operator|=
name|verbs
expr_stmt|;
block|}
comment|// Fluent API
comment|//-------------------------------------------------------------------------
DECL|method|get ()
specifier|public
name|PathDefinition
name|get
parameter_list|()
block|{
return|return
name|get
argument_list|(
literal|null
argument_list|)
return|;
block|}
DECL|method|get (String url)
specifier|public
name|PathDefinition
name|get
parameter_list|(
name|String
name|url
parameter_list|)
block|{
name|GetVerbDefinition
name|answer
init|=
operator|new
name|GetVerbDefinition
argument_list|()
decl_stmt|;
name|getVerbs
argument_list|()
operator|.
name|add
argument_list|(
name|answer
argument_list|)
expr_stmt|;
if|if
condition|(
name|url
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setUri
argument_list|(
name|url
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
DECL|method|post ()
specifier|public
name|PathDefinition
name|post
parameter_list|()
block|{
return|return
name|post
argument_list|(
literal|null
argument_list|)
return|;
block|}
DECL|method|post (String url)
specifier|public
name|PathDefinition
name|post
parameter_list|(
name|String
name|url
parameter_list|)
block|{
name|PostVerbDefinition
name|answer
init|=
operator|new
name|PostVerbDefinition
argument_list|()
decl_stmt|;
name|getVerbs
argument_list|()
operator|.
name|add
argument_list|(
name|answer
argument_list|)
expr_stmt|;
if|if
condition|(
name|url
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setUri
argument_list|(
name|url
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
DECL|method|to (String url)
specifier|public
name|PathDefinition
name|to
parameter_list|(
name|String
name|url
parameter_list|)
block|{
comment|// add to last verb
if|if
condition|(
name|getVerbs
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Must add verb first, such as get/post/delete"
argument_list|)
throw|;
block|}
name|VerbDefinition
name|verb
init|=
name|getVerbs
argument_list|()
operator|.
name|get
argument_list|(
name|getVerbs
argument_list|()
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
name|verb
operator|.
name|setTo
argument_list|(
operator|new
name|ToDefinition
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
end_class

end_unit

