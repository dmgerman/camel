begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.model.remote
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAnyAttribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlTransient
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|IdentifiedType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|OtherAttributesAware
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|ProcessorDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|PropertyDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ServiceCallLoadBalancer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ServiceCallServerListStrategy
import|;
end_import

begin_comment
comment|/**  * Remote service call configuration  */
end_comment

begin_class
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"eip,routing,remote"
argument_list|)
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"serviceCallConfiguration"
argument_list|)
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|ServiceCallConfigurationDefinition
specifier|public
specifier|abstract
class|class
name|ServiceCallConfigurationDefinition
extends|extends
name|IdentifiedType
implements|implements
name|OtherAttributesAware
block|{
annotation|@
name|XmlTransient
DECL|field|parent
specifier|private
name|ServiceCallDefinition
name|parent
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|defaultValue
operator|=
literal|"http"
argument_list|)
DECL|field|component
specifier|private
name|String
name|component
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|loadBalancerRef
specifier|private
name|String
name|loadBalancerRef
decl_stmt|;
annotation|@
name|XmlTransient
DECL|field|loadBalancer
specifier|private
name|ServiceCallLoadBalancer
name|loadBalancer
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|serverListStrategyRef
specifier|private
name|String
name|serverListStrategyRef
decl_stmt|;
annotation|@
name|XmlTransient
DECL|field|serverListStrategy
specifier|private
name|ServiceCallServerListStrategy
name|serverListStrategy
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"clientProperty"
argument_list|)
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"advanced"
argument_list|)
DECL|field|properties
specifier|private
name|List
argument_list|<
name|PropertyDefinition
argument_list|>
name|properties
decl_stmt|;
comment|// use xs:any to support optional property placeholders
annotation|@
name|XmlAnyAttribute
DECL|field|otherAttributes
specifier|private
name|Map
argument_list|<
name|QName
argument_list|,
name|Object
argument_list|>
name|otherAttributes
decl_stmt|;
DECL|method|ServiceCallConfigurationDefinition ()
specifier|public
name|ServiceCallConfigurationDefinition
parameter_list|()
block|{     }
DECL|method|ServiceCallConfigurationDefinition (ServiceCallDefinition parent)
specifier|public
name|ServiceCallConfigurationDefinition
parameter_list|(
name|ServiceCallDefinition
name|parent
parameter_list|)
block|{
name|this
operator|.
name|parent
operator|=
name|parent
expr_stmt|;
block|}
comment|// Getter/Setter
comment|// -------------------------------------------------------------------------
DECL|method|getComponent ()
specifier|public
name|String
name|getComponent
parameter_list|()
block|{
return|return
name|component
return|;
block|}
DECL|method|setComponent (String component)
specifier|public
name|void
name|setComponent
parameter_list|(
name|String
name|component
parameter_list|)
block|{
name|this
operator|.
name|component
operator|=
name|component
expr_stmt|;
block|}
DECL|method|getLoadBalancerRef ()
specifier|public
name|String
name|getLoadBalancerRef
parameter_list|()
block|{
return|return
name|loadBalancerRef
return|;
block|}
comment|/**      * Sets a reference to a custom {@link org.apache.camel.spi.ServiceCallLoadBalancer} to use.      */
DECL|method|setLoadBalancerRef (String loadBalancerRef)
specifier|public
name|void
name|setLoadBalancerRef
parameter_list|(
name|String
name|loadBalancerRef
parameter_list|)
block|{
name|this
operator|.
name|loadBalancerRef
operator|=
name|loadBalancerRef
expr_stmt|;
block|}
DECL|method|getLoadBalancer ()
specifier|public
name|ServiceCallLoadBalancer
name|getLoadBalancer
parameter_list|()
block|{
return|return
name|loadBalancer
return|;
block|}
DECL|method|setLoadBalancer (ServiceCallLoadBalancer loadBalancer)
specifier|public
name|void
name|setLoadBalancer
parameter_list|(
name|ServiceCallLoadBalancer
name|loadBalancer
parameter_list|)
block|{
name|this
operator|.
name|loadBalancer
operator|=
name|loadBalancer
expr_stmt|;
block|}
DECL|method|getServerListStrategyRef ()
specifier|public
name|String
name|getServerListStrategyRef
parameter_list|()
block|{
return|return
name|serverListStrategyRef
return|;
block|}
comment|/**      * Sets a reference to a custom {@link org.apache.camel.spi.ServiceCallServerListStrategy} to use.      */
DECL|method|setServerListStrategyRef (String serverListStrategyRef)
specifier|public
name|void
name|setServerListStrategyRef
parameter_list|(
name|String
name|serverListStrategyRef
parameter_list|)
block|{
name|this
operator|.
name|serverListStrategyRef
operator|=
name|serverListStrategyRef
expr_stmt|;
block|}
DECL|method|getServerListStrategy ()
specifier|public
name|ServiceCallServerListStrategy
name|getServerListStrategy
parameter_list|()
block|{
return|return
name|serverListStrategy
return|;
block|}
DECL|method|setServerListStrategy (ServiceCallServerListStrategy serverListStrategy)
specifier|public
name|void
name|setServerListStrategy
parameter_list|(
name|ServiceCallServerListStrategy
name|serverListStrategy
parameter_list|)
block|{
name|this
operator|.
name|serverListStrategy
operator|=
name|serverListStrategy
expr_stmt|;
block|}
DECL|method|getProperties ()
specifier|public
name|List
argument_list|<
name|PropertyDefinition
argument_list|>
name|getProperties
parameter_list|()
block|{
return|return
name|properties
return|;
block|}
comment|/**      * Set client properties to use.      *<p/>      * These properties are specific to what service call implementation are in       * use. For example if using ribbon, then the client properties are define       * in com.netflix.client.config.CommonClientConfigKey.      */
DECL|method|setProperties (List<PropertyDefinition> properties)
specifier|public
name|void
name|setProperties
parameter_list|(
name|List
argument_list|<
name|PropertyDefinition
argument_list|>
name|properties
parameter_list|)
block|{
name|this
operator|.
name|properties
operator|=
name|properties
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getOtherAttributes ()
specifier|public
name|Map
argument_list|<
name|QName
argument_list|,
name|Object
argument_list|>
name|getOtherAttributes
parameter_list|()
block|{
return|return
name|otherAttributes
return|;
block|}
annotation|@
name|Override
DECL|method|setOtherAttributes (Map<QName, Object> otherAttributes)
specifier|public
name|void
name|setOtherAttributes
parameter_list|(
name|Map
argument_list|<
name|QName
argument_list|,
name|Object
argument_list|>
name|otherAttributes
parameter_list|)
block|{
name|this
operator|.
name|otherAttributes
operator|=
name|otherAttributes
expr_stmt|;
block|}
comment|// Fluent API
comment|// -------------------------------------------------------------------------
comment|/**      * Sets the default Camel component to use for calling the remote service.      *<p/>      * By default the http component is used. You can configure this to use<tt>netty4-http</tt>,<tt>jetty</tt>,      *<tt>restlet</tt> or some other components of choice. If the service is not HTTP protocol you can use other      * components such as<tt>mqtt</tt>,<tt>jms</tt>,<tt>amqp</tt> etc.      *<p/>      * If the service call has been configured using an uri, then the component from the uri is used instead      * of this default component.      */
DECL|method|component (String component)
specifier|public
name|ServiceCallConfigurationDefinition
name|component
parameter_list|(
name|String
name|component
parameter_list|)
block|{
name|setComponent
argument_list|(
name|component
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sets a reference to a custom {@link org.apache.camel.spi.ServiceCallLoadBalancer} to use.      */
DECL|method|loadBalancer (String loadBalancerRef)
specifier|public
name|ServiceCallConfigurationDefinition
name|loadBalancer
parameter_list|(
name|String
name|loadBalancerRef
parameter_list|)
block|{
name|setLoadBalancerRef
argument_list|(
name|loadBalancerRef
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sets a custom {@link org.apache.camel.spi.ServiceCallLoadBalancer} to use.      */
DECL|method|loadBalancer (ServiceCallLoadBalancer loadBalancer)
specifier|public
name|ServiceCallConfigurationDefinition
name|loadBalancer
parameter_list|(
name|ServiceCallLoadBalancer
name|loadBalancer
parameter_list|)
block|{
name|setLoadBalancer
argument_list|(
name|loadBalancer
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sets a reference to a custom {@link org.apache.camel.spi.ServiceCallServerListStrategy} to use.      */
DECL|method|serverListStrategy (String serverListStrategyRef)
specifier|public
name|ServiceCallConfigurationDefinition
name|serverListStrategy
parameter_list|(
name|String
name|serverListStrategyRef
parameter_list|)
block|{
name|setServerListStrategyRef
argument_list|(
name|serverListStrategyRef
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sets a custom {@link org.apache.camel.spi.ServiceCallServerListStrategy} to use.      */
DECL|method|serverListStrategy (ServiceCallServerListStrategy serverListStrategy)
specifier|public
name|ServiceCallConfigurationDefinition
name|serverListStrategy
parameter_list|(
name|ServiceCallServerListStrategy
name|serverListStrategy
parameter_list|)
block|{
name|setServerListStrategy
argument_list|(
name|serverListStrategy
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Adds a custom client property to use.      *<p/>      * These properties are specific to what service call implementation are in use. For example if using ribbon, then      * the client properties are define in com.netflix.client.config.CommonClientConfigKey.      */
DECL|method|clientProperty (String key, String value)
specifier|public
name|ServiceCallConfigurationDefinition
name|clientProperty
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|properties
operator|==
literal|null
condition|)
block|{
name|properties
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
name|PropertyDefinition
name|prop
init|=
operator|new
name|PropertyDefinition
argument_list|()
decl_stmt|;
name|prop
operator|.
name|setKey
argument_list|(
name|key
argument_list|)
expr_stmt|;
name|prop
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|properties
operator|.
name|add
argument_list|(
name|prop
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * End of configuration      */
DECL|method|end ()
specifier|public
name|ProcessorDefinition
name|end
parameter_list|()
block|{
comment|// end parent as well so we do not have to use 2x end
return|return
name|parent
operator|.
name|end
argument_list|()
return|;
block|}
block|}
end_class

end_unit

