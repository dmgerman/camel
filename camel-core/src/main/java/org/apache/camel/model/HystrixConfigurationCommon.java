begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.model
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|Metadata
import|;
end_import

begin_class
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|HystrixConfigurationCommon
specifier|public
class|class
name|HystrixConfigurationCommon
extends|extends
name|IdentifiedType
block|{
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|defaultValue
operator|=
literal|"CamelHystrix"
argument_list|)
DECL|field|groupKey
specifier|private
name|String
name|groupKey
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|defaultValue
operator|=
literal|"CamelHystrix"
argument_list|)
DECL|field|threadPoolKey
specifier|private
name|String
name|threadPoolKey
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"true"
argument_list|)
DECL|field|circuitBreakerEnabled
specifier|private
name|Boolean
name|circuitBreakerEnabled
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"50"
argument_list|)
DECL|field|circuitBreakerErrorThresholdPercentage
specifier|private
name|Integer
name|circuitBreakerErrorThresholdPercentage
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"true"
argument_list|)
DECL|field|circuitBreakerForceClosed
specifier|private
name|Boolean
name|circuitBreakerForceClosed
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"false"
argument_list|)
DECL|field|circuitBreakerForceOpen
specifier|private
name|Boolean
name|circuitBreakerForceOpen
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"20"
argument_list|)
DECL|field|circuitBreakerRequestVolumeThreshold
specifier|private
name|Integer
name|circuitBreakerRequestVolumeThreshold
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"5000"
argument_list|)
DECL|field|circuitBreakerSleepWindowInMilliseconds
specifier|private
name|Integer
name|circuitBreakerSleepWindowInMilliseconds
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"20"
argument_list|)
DECL|field|executionIsolationSemaphoreMaxConcurrentRequests
specifier|private
name|Integer
name|executionIsolationSemaphoreMaxConcurrentRequests
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"THREAD"
argument_list|,
name|enums
operator|=
literal|"THREAD,SEMAPHORE"
argument_list|)
DECL|field|executionIsolationStrategy
specifier|private
name|String
name|executionIsolationStrategy
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"true"
argument_list|)
DECL|field|executionIsolationThreadInterruptOnTimeout
specifier|private
name|Boolean
name|executionIsolationThreadInterruptOnTimeout
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"1000"
argument_list|)
DECL|field|executionTimeoutInMilliseconds
specifier|private
name|Integer
name|executionTimeoutInMilliseconds
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"true"
argument_list|)
DECL|field|executionTimeoutEnabled
specifier|private
name|Boolean
name|executionTimeoutEnabled
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"10"
argument_list|)
DECL|field|fallbackIsolationSemaphoreMaxConcurrentRequests
specifier|private
name|Integer
name|fallbackIsolationSemaphoreMaxConcurrentRequests
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"true"
argument_list|)
DECL|field|fallbackEnabled
specifier|private
name|Boolean
name|fallbackEnabled
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"500"
argument_list|)
DECL|field|metricsHealthSnapshotIntervalInMilliseconds
specifier|private
name|Integer
name|metricsHealthSnapshotIntervalInMilliseconds
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"10"
argument_list|)
DECL|field|metricsRollingPercentileBucketSize
specifier|private
name|Integer
name|metricsRollingPercentileBucketSize
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"true"
argument_list|)
DECL|field|metricsRollingPercentileEnabled
specifier|private
name|Boolean
name|metricsRollingPercentileEnabled
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"10000"
argument_list|)
DECL|field|metricsRollingPercentileWindowInMilliseconds
specifier|private
name|Integer
name|metricsRollingPercentileWindowInMilliseconds
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"6"
argument_list|)
DECL|field|metricsRollingPercentileWindowBuckets
specifier|private
name|Integer
name|metricsRollingPercentileWindowBuckets
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"10000"
argument_list|)
DECL|field|metricsRollingStatisticalWindowInMilliseconds
specifier|private
name|Integer
name|metricsRollingStatisticalWindowInMilliseconds
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"10"
argument_list|)
DECL|field|metricsRollingStatisticalWindowBuckets
specifier|private
name|Integer
name|metricsRollingStatisticalWindowBuckets
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"command"
argument_list|,
name|defaultValue
operator|=
literal|"true"
argument_list|)
DECL|field|requestLogEnabled
specifier|private
name|Boolean
name|requestLogEnabled
decl_stmt|;
comment|// thread-pool
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"threadpool"
argument_list|,
name|defaultValue
operator|=
literal|"10"
argument_list|)
DECL|field|corePoolSize
specifier|private
name|Integer
name|corePoolSize
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"threadpool"
argument_list|,
name|defaultValue
operator|=
literal|"10"
argument_list|)
DECL|field|maximumSize
specifier|private
name|Integer
name|maximumSize
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"threadpool"
argument_list|,
name|defaultValue
operator|=
literal|"1"
argument_list|)
DECL|field|keepAliveTime
specifier|private
name|Integer
name|keepAliveTime
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"threadpool"
argument_list|,
name|defaultValue
operator|=
literal|"-1"
argument_list|)
DECL|field|maxQueueSize
specifier|private
name|Integer
name|maxQueueSize
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"threadpool"
argument_list|,
name|defaultValue
operator|=
literal|"5"
argument_list|)
DECL|field|queueSizeRejectionThreshold
specifier|private
name|Integer
name|queueSizeRejectionThreshold
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"threadpool"
argument_list|,
name|defaultValue
operator|=
literal|"10000"
argument_list|)
DECL|field|threadPoolRollingNumberStatisticalWindowInMilliseconds
specifier|private
name|Integer
name|threadPoolRollingNumberStatisticalWindowInMilliseconds
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"threadpool"
argument_list|,
name|defaultValue
operator|=
literal|"10"
argument_list|)
DECL|field|threadPoolRollingNumberStatisticalWindowBuckets
specifier|private
name|Integer
name|threadPoolRollingNumberStatisticalWindowBuckets
decl_stmt|;
annotation|@
name|XmlAttribute
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"threadpool"
argument_list|,
name|defaultValue
operator|=
literal|"false"
argument_list|)
DECL|field|allowMaximumSizeToDivergeFromCoreSize
specifier|private
name|Boolean
name|allowMaximumSizeToDivergeFromCoreSize
decl_stmt|;
comment|// Getter/Setter
comment|// -------------------------------------------------------------------------
DECL|method|getGroupKey ()
specifier|public
name|String
name|getGroupKey
parameter_list|()
block|{
return|return
name|groupKey
return|;
block|}
DECL|method|setGroupKey (String groupKey)
specifier|public
name|void
name|setGroupKey
parameter_list|(
name|String
name|groupKey
parameter_list|)
block|{
name|this
operator|.
name|groupKey
operator|=
name|groupKey
expr_stmt|;
block|}
DECL|method|getThreadPoolKey ()
specifier|public
name|String
name|getThreadPoolKey
parameter_list|()
block|{
return|return
name|threadPoolKey
return|;
block|}
DECL|method|setThreadPoolKey (String threadPoolKey)
specifier|public
name|void
name|setThreadPoolKey
parameter_list|(
name|String
name|threadPoolKey
parameter_list|)
block|{
name|this
operator|.
name|threadPoolKey
operator|=
name|threadPoolKey
expr_stmt|;
block|}
DECL|method|getCircuitBreakerEnabled ()
specifier|public
name|Boolean
name|getCircuitBreakerEnabled
parameter_list|()
block|{
return|return
name|circuitBreakerEnabled
return|;
block|}
DECL|method|setCircuitBreakerEnabled (Boolean circuitBreakerEnabled)
specifier|public
name|void
name|setCircuitBreakerEnabled
parameter_list|(
name|Boolean
name|circuitBreakerEnabled
parameter_list|)
block|{
name|this
operator|.
name|circuitBreakerEnabled
operator|=
name|circuitBreakerEnabled
expr_stmt|;
block|}
DECL|method|getCircuitBreakerErrorThresholdPercentage ()
specifier|public
name|Integer
name|getCircuitBreakerErrorThresholdPercentage
parameter_list|()
block|{
return|return
name|circuitBreakerErrorThresholdPercentage
return|;
block|}
DECL|method|setCircuitBreakerErrorThresholdPercentage (Integer circuitBreakerErrorThresholdPercentage)
specifier|public
name|void
name|setCircuitBreakerErrorThresholdPercentage
parameter_list|(
name|Integer
name|circuitBreakerErrorThresholdPercentage
parameter_list|)
block|{
name|this
operator|.
name|circuitBreakerErrorThresholdPercentage
operator|=
name|circuitBreakerErrorThresholdPercentage
expr_stmt|;
block|}
DECL|method|getCircuitBreakerForceClosed ()
specifier|public
name|Boolean
name|getCircuitBreakerForceClosed
parameter_list|()
block|{
return|return
name|circuitBreakerForceClosed
return|;
block|}
DECL|method|setCircuitBreakerForceClosed (Boolean circuitBreakerForceClosed)
specifier|public
name|void
name|setCircuitBreakerForceClosed
parameter_list|(
name|Boolean
name|circuitBreakerForceClosed
parameter_list|)
block|{
name|this
operator|.
name|circuitBreakerForceClosed
operator|=
name|circuitBreakerForceClosed
expr_stmt|;
block|}
DECL|method|getCircuitBreakerForceOpen ()
specifier|public
name|Boolean
name|getCircuitBreakerForceOpen
parameter_list|()
block|{
return|return
name|circuitBreakerForceOpen
return|;
block|}
DECL|method|setCircuitBreakerForceOpen (Boolean circuitBreakerForceOpen)
specifier|public
name|void
name|setCircuitBreakerForceOpen
parameter_list|(
name|Boolean
name|circuitBreakerForceOpen
parameter_list|)
block|{
name|this
operator|.
name|circuitBreakerForceOpen
operator|=
name|circuitBreakerForceOpen
expr_stmt|;
block|}
DECL|method|getCircuitBreakerRequestVolumeThreshold ()
specifier|public
name|Integer
name|getCircuitBreakerRequestVolumeThreshold
parameter_list|()
block|{
return|return
name|circuitBreakerRequestVolumeThreshold
return|;
block|}
DECL|method|setCircuitBreakerRequestVolumeThreshold (Integer circuitBreakerRequestVolumeThreshold)
specifier|public
name|void
name|setCircuitBreakerRequestVolumeThreshold
parameter_list|(
name|Integer
name|circuitBreakerRequestVolumeThreshold
parameter_list|)
block|{
name|this
operator|.
name|circuitBreakerRequestVolumeThreshold
operator|=
name|circuitBreakerRequestVolumeThreshold
expr_stmt|;
block|}
DECL|method|getCircuitBreakerSleepWindowInMilliseconds ()
specifier|public
name|Integer
name|getCircuitBreakerSleepWindowInMilliseconds
parameter_list|()
block|{
return|return
name|circuitBreakerSleepWindowInMilliseconds
return|;
block|}
DECL|method|setCircuitBreakerSleepWindowInMilliseconds (Integer circuitBreakerSleepWindowInMilliseconds)
specifier|public
name|void
name|setCircuitBreakerSleepWindowInMilliseconds
parameter_list|(
name|Integer
name|circuitBreakerSleepWindowInMilliseconds
parameter_list|)
block|{
name|this
operator|.
name|circuitBreakerSleepWindowInMilliseconds
operator|=
name|circuitBreakerSleepWindowInMilliseconds
expr_stmt|;
block|}
DECL|method|getExecutionIsolationSemaphoreMaxConcurrentRequests ()
specifier|public
name|Integer
name|getExecutionIsolationSemaphoreMaxConcurrentRequests
parameter_list|()
block|{
return|return
name|executionIsolationSemaphoreMaxConcurrentRequests
return|;
block|}
DECL|method|setExecutionIsolationSemaphoreMaxConcurrentRequests (Integer executionIsolationSemaphoreMaxConcurrentRequests)
specifier|public
name|void
name|setExecutionIsolationSemaphoreMaxConcurrentRequests
parameter_list|(
name|Integer
name|executionIsolationSemaphoreMaxConcurrentRequests
parameter_list|)
block|{
name|this
operator|.
name|executionIsolationSemaphoreMaxConcurrentRequests
operator|=
name|executionIsolationSemaphoreMaxConcurrentRequests
expr_stmt|;
block|}
DECL|method|getExecutionIsolationStrategy ()
specifier|public
name|String
name|getExecutionIsolationStrategy
parameter_list|()
block|{
return|return
name|executionIsolationStrategy
return|;
block|}
DECL|method|setExecutionIsolationStrategy (String executionIsolationStrategy)
specifier|public
name|void
name|setExecutionIsolationStrategy
parameter_list|(
name|String
name|executionIsolationStrategy
parameter_list|)
block|{
name|this
operator|.
name|executionIsolationStrategy
operator|=
name|executionIsolationStrategy
expr_stmt|;
block|}
DECL|method|getExecutionIsolationThreadInterruptOnTimeout ()
specifier|public
name|Boolean
name|getExecutionIsolationThreadInterruptOnTimeout
parameter_list|()
block|{
return|return
name|executionIsolationThreadInterruptOnTimeout
return|;
block|}
DECL|method|setExecutionIsolationThreadInterruptOnTimeout (Boolean executionIsolationThreadInterruptOnTimeout)
specifier|public
name|void
name|setExecutionIsolationThreadInterruptOnTimeout
parameter_list|(
name|Boolean
name|executionIsolationThreadInterruptOnTimeout
parameter_list|)
block|{
name|this
operator|.
name|executionIsolationThreadInterruptOnTimeout
operator|=
name|executionIsolationThreadInterruptOnTimeout
expr_stmt|;
block|}
DECL|method|getExecutionTimeoutInMilliseconds ()
specifier|public
name|Integer
name|getExecutionTimeoutInMilliseconds
parameter_list|()
block|{
return|return
name|executionTimeoutInMilliseconds
return|;
block|}
DECL|method|setExecutionTimeoutInMilliseconds (Integer executionTimeoutInMilliseconds)
specifier|public
name|void
name|setExecutionTimeoutInMilliseconds
parameter_list|(
name|Integer
name|executionTimeoutInMilliseconds
parameter_list|)
block|{
name|this
operator|.
name|executionTimeoutInMilliseconds
operator|=
name|executionTimeoutInMilliseconds
expr_stmt|;
block|}
DECL|method|getExecutionTimeoutEnabled ()
specifier|public
name|Boolean
name|getExecutionTimeoutEnabled
parameter_list|()
block|{
return|return
name|executionTimeoutEnabled
return|;
block|}
DECL|method|setExecutionTimeoutEnabled (Boolean executionTimeoutEnabled)
specifier|public
name|void
name|setExecutionTimeoutEnabled
parameter_list|(
name|Boolean
name|executionTimeoutEnabled
parameter_list|)
block|{
name|this
operator|.
name|executionTimeoutEnabled
operator|=
name|executionTimeoutEnabled
expr_stmt|;
block|}
DECL|method|getFallbackIsolationSemaphoreMaxConcurrentRequests ()
specifier|public
name|Integer
name|getFallbackIsolationSemaphoreMaxConcurrentRequests
parameter_list|()
block|{
return|return
name|fallbackIsolationSemaphoreMaxConcurrentRequests
return|;
block|}
DECL|method|setFallbackIsolationSemaphoreMaxConcurrentRequests (Integer fallbackIsolationSemaphoreMaxConcurrentRequests)
specifier|public
name|void
name|setFallbackIsolationSemaphoreMaxConcurrentRequests
parameter_list|(
name|Integer
name|fallbackIsolationSemaphoreMaxConcurrentRequests
parameter_list|)
block|{
name|this
operator|.
name|fallbackIsolationSemaphoreMaxConcurrentRequests
operator|=
name|fallbackIsolationSemaphoreMaxConcurrentRequests
expr_stmt|;
block|}
DECL|method|getFallbackEnabled ()
specifier|public
name|Boolean
name|getFallbackEnabled
parameter_list|()
block|{
return|return
name|fallbackEnabled
return|;
block|}
DECL|method|setFallbackEnabled (Boolean fallbackEnabled)
specifier|public
name|void
name|setFallbackEnabled
parameter_list|(
name|Boolean
name|fallbackEnabled
parameter_list|)
block|{
name|this
operator|.
name|fallbackEnabled
operator|=
name|fallbackEnabled
expr_stmt|;
block|}
DECL|method|getMetricsHealthSnapshotIntervalInMilliseconds ()
specifier|public
name|Integer
name|getMetricsHealthSnapshotIntervalInMilliseconds
parameter_list|()
block|{
return|return
name|metricsHealthSnapshotIntervalInMilliseconds
return|;
block|}
DECL|method|setMetricsHealthSnapshotIntervalInMilliseconds (Integer metricsHealthSnapshotIntervalInMilliseconds)
specifier|public
name|void
name|setMetricsHealthSnapshotIntervalInMilliseconds
parameter_list|(
name|Integer
name|metricsHealthSnapshotIntervalInMilliseconds
parameter_list|)
block|{
name|this
operator|.
name|metricsHealthSnapshotIntervalInMilliseconds
operator|=
name|metricsHealthSnapshotIntervalInMilliseconds
expr_stmt|;
block|}
DECL|method|getMetricsRollingPercentileBucketSize ()
specifier|public
name|Integer
name|getMetricsRollingPercentileBucketSize
parameter_list|()
block|{
return|return
name|metricsRollingPercentileBucketSize
return|;
block|}
DECL|method|setMetricsRollingPercentileBucketSize (Integer metricsRollingPercentileBucketSize)
specifier|public
name|void
name|setMetricsRollingPercentileBucketSize
parameter_list|(
name|Integer
name|metricsRollingPercentileBucketSize
parameter_list|)
block|{
name|this
operator|.
name|metricsRollingPercentileBucketSize
operator|=
name|metricsRollingPercentileBucketSize
expr_stmt|;
block|}
DECL|method|getMetricsRollingPercentileEnabled ()
specifier|public
name|Boolean
name|getMetricsRollingPercentileEnabled
parameter_list|()
block|{
return|return
name|metricsRollingPercentileEnabled
return|;
block|}
DECL|method|setMetricsRollingPercentileEnabled (Boolean metricsRollingPercentileEnabled)
specifier|public
name|void
name|setMetricsRollingPercentileEnabled
parameter_list|(
name|Boolean
name|metricsRollingPercentileEnabled
parameter_list|)
block|{
name|this
operator|.
name|metricsRollingPercentileEnabled
operator|=
name|metricsRollingPercentileEnabled
expr_stmt|;
block|}
DECL|method|getMetricsRollingPercentileWindowInMilliseconds ()
specifier|public
name|Integer
name|getMetricsRollingPercentileWindowInMilliseconds
parameter_list|()
block|{
return|return
name|metricsRollingPercentileWindowInMilliseconds
return|;
block|}
DECL|method|setMetricsRollingPercentileWindowInMilliseconds (Integer metricsRollingPercentileWindowInMilliseconds)
specifier|public
name|void
name|setMetricsRollingPercentileWindowInMilliseconds
parameter_list|(
name|Integer
name|metricsRollingPercentileWindowInMilliseconds
parameter_list|)
block|{
name|this
operator|.
name|metricsRollingPercentileWindowInMilliseconds
operator|=
name|metricsRollingPercentileWindowInMilliseconds
expr_stmt|;
block|}
DECL|method|getMetricsRollingPercentileWindowBuckets ()
specifier|public
name|Integer
name|getMetricsRollingPercentileWindowBuckets
parameter_list|()
block|{
return|return
name|metricsRollingPercentileWindowBuckets
return|;
block|}
DECL|method|setMetricsRollingPercentileWindowBuckets (Integer metricsRollingPercentileWindowBuckets)
specifier|public
name|void
name|setMetricsRollingPercentileWindowBuckets
parameter_list|(
name|Integer
name|metricsRollingPercentileWindowBuckets
parameter_list|)
block|{
name|this
operator|.
name|metricsRollingPercentileWindowBuckets
operator|=
name|metricsRollingPercentileWindowBuckets
expr_stmt|;
block|}
DECL|method|getMetricsRollingStatisticalWindowInMilliseconds ()
specifier|public
name|Integer
name|getMetricsRollingStatisticalWindowInMilliseconds
parameter_list|()
block|{
return|return
name|metricsRollingStatisticalWindowInMilliseconds
return|;
block|}
DECL|method|setMetricsRollingStatisticalWindowInMilliseconds (Integer metricsRollingStatisticalWindowInMilliseconds)
specifier|public
name|void
name|setMetricsRollingStatisticalWindowInMilliseconds
parameter_list|(
name|Integer
name|metricsRollingStatisticalWindowInMilliseconds
parameter_list|)
block|{
name|this
operator|.
name|metricsRollingStatisticalWindowInMilliseconds
operator|=
name|metricsRollingStatisticalWindowInMilliseconds
expr_stmt|;
block|}
DECL|method|getMetricsRollingStatisticalWindowBuckets ()
specifier|public
name|Integer
name|getMetricsRollingStatisticalWindowBuckets
parameter_list|()
block|{
return|return
name|metricsRollingStatisticalWindowBuckets
return|;
block|}
DECL|method|setMetricsRollingStatisticalWindowBuckets (Integer metricsRollingStatisticalWindowBuckets)
specifier|public
name|void
name|setMetricsRollingStatisticalWindowBuckets
parameter_list|(
name|Integer
name|metricsRollingStatisticalWindowBuckets
parameter_list|)
block|{
name|this
operator|.
name|metricsRollingStatisticalWindowBuckets
operator|=
name|metricsRollingStatisticalWindowBuckets
expr_stmt|;
block|}
DECL|method|getRequestLogEnabled ()
specifier|public
name|Boolean
name|getRequestLogEnabled
parameter_list|()
block|{
return|return
name|requestLogEnabled
return|;
block|}
DECL|method|setRequestLogEnabled (Boolean requestLogEnabled)
specifier|public
name|void
name|setRequestLogEnabled
parameter_list|(
name|Boolean
name|requestLogEnabled
parameter_list|)
block|{
name|this
operator|.
name|requestLogEnabled
operator|=
name|requestLogEnabled
expr_stmt|;
block|}
DECL|method|getCorePoolSize ()
specifier|public
name|Integer
name|getCorePoolSize
parameter_list|()
block|{
return|return
name|corePoolSize
return|;
block|}
DECL|method|setCorePoolSize (Integer corePoolSize)
specifier|public
name|void
name|setCorePoolSize
parameter_list|(
name|Integer
name|corePoolSize
parameter_list|)
block|{
name|this
operator|.
name|corePoolSize
operator|=
name|corePoolSize
expr_stmt|;
block|}
DECL|method|getMaximumSize ()
specifier|public
name|Integer
name|getMaximumSize
parameter_list|()
block|{
return|return
name|maximumSize
return|;
block|}
DECL|method|setMaximumSize (Integer maximumSize)
specifier|public
name|void
name|setMaximumSize
parameter_list|(
name|Integer
name|maximumSize
parameter_list|)
block|{
name|this
operator|.
name|maximumSize
operator|=
name|maximumSize
expr_stmt|;
block|}
DECL|method|getKeepAliveTime ()
specifier|public
name|Integer
name|getKeepAliveTime
parameter_list|()
block|{
return|return
name|keepAliveTime
return|;
block|}
DECL|method|setKeepAliveTime (Integer keepAliveTime)
specifier|public
name|void
name|setKeepAliveTime
parameter_list|(
name|Integer
name|keepAliveTime
parameter_list|)
block|{
name|this
operator|.
name|keepAliveTime
operator|=
name|keepAliveTime
expr_stmt|;
block|}
DECL|method|getMaxQueueSize ()
specifier|public
name|Integer
name|getMaxQueueSize
parameter_list|()
block|{
return|return
name|maxQueueSize
return|;
block|}
DECL|method|setMaxQueueSize (Integer maxQueueSize)
specifier|public
name|void
name|setMaxQueueSize
parameter_list|(
name|Integer
name|maxQueueSize
parameter_list|)
block|{
name|this
operator|.
name|maxQueueSize
operator|=
name|maxQueueSize
expr_stmt|;
block|}
DECL|method|getQueueSizeRejectionThreshold ()
specifier|public
name|Integer
name|getQueueSizeRejectionThreshold
parameter_list|()
block|{
return|return
name|queueSizeRejectionThreshold
return|;
block|}
DECL|method|setQueueSizeRejectionThreshold (Integer queueSizeRejectionThreshold)
specifier|public
name|void
name|setQueueSizeRejectionThreshold
parameter_list|(
name|Integer
name|queueSizeRejectionThreshold
parameter_list|)
block|{
name|this
operator|.
name|queueSizeRejectionThreshold
operator|=
name|queueSizeRejectionThreshold
expr_stmt|;
block|}
DECL|method|getThreadPoolRollingNumberStatisticalWindowInMilliseconds ()
specifier|public
name|Integer
name|getThreadPoolRollingNumberStatisticalWindowInMilliseconds
parameter_list|()
block|{
return|return
name|threadPoolRollingNumberStatisticalWindowInMilliseconds
return|;
block|}
DECL|method|setThreadPoolRollingNumberStatisticalWindowInMilliseconds (Integer threadPoolRollingNumberStatisticalWindowInMilliseconds)
specifier|public
name|void
name|setThreadPoolRollingNumberStatisticalWindowInMilliseconds
parameter_list|(
name|Integer
name|threadPoolRollingNumberStatisticalWindowInMilliseconds
parameter_list|)
block|{
name|this
operator|.
name|threadPoolRollingNumberStatisticalWindowInMilliseconds
operator|=
name|threadPoolRollingNumberStatisticalWindowInMilliseconds
expr_stmt|;
block|}
DECL|method|getThreadPoolRollingNumberStatisticalWindowBuckets ()
specifier|public
name|Integer
name|getThreadPoolRollingNumberStatisticalWindowBuckets
parameter_list|()
block|{
return|return
name|threadPoolRollingNumberStatisticalWindowBuckets
return|;
block|}
DECL|method|setThreadPoolRollingNumberStatisticalWindowBuckets (Integer threadPoolRollingNumberStatisticalWindowBuckets)
specifier|public
name|void
name|setThreadPoolRollingNumberStatisticalWindowBuckets
parameter_list|(
name|Integer
name|threadPoolRollingNumberStatisticalWindowBuckets
parameter_list|)
block|{
name|this
operator|.
name|threadPoolRollingNumberStatisticalWindowBuckets
operator|=
name|threadPoolRollingNumberStatisticalWindowBuckets
expr_stmt|;
block|}
DECL|method|getAllowMaximumSizeToDivergeFromCoreSize ()
specifier|public
name|Boolean
name|getAllowMaximumSizeToDivergeFromCoreSize
parameter_list|()
block|{
return|return
name|allowMaximumSizeToDivergeFromCoreSize
return|;
block|}
DECL|method|setAllowMaximumSizeToDivergeFromCoreSize (Boolean allowMaximumSizeToDivergeFromCoreSize)
specifier|public
name|void
name|setAllowMaximumSizeToDivergeFromCoreSize
parameter_list|(
name|Boolean
name|allowMaximumSizeToDivergeFromCoreSize
parameter_list|)
block|{
name|this
operator|.
name|allowMaximumSizeToDivergeFromCoreSize
operator|=
name|allowMaximumSizeToDivergeFromCoreSize
expr_stmt|;
block|}
block|}
end_class

end_unit

