begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.support
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RuntimeCamelException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|cloud
operator|.
name|ServiceCallConstants
import|;
end_import

begin_class
DECL|class|ServiceCallExpressionSupport
specifier|public
specifier|abstract
class|class
name|ServiceCallExpressionSupport
extends|extends
name|ExpressionAdapter
block|{
DECL|field|hostHeader
specifier|private
name|String
name|hostHeader
decl_stmt|;
DECL|field|portHeader
specifier|private
name|String
name|portHeader
decl_stmt|;
DECL|method|ServiceCallExpressionSupport ()
specifier|public
name|ServiceCallExpressionSupport
parameter_list|()
block|{
name|this
argument_list|(
name|ServiceCallConstants
operator|.
name|SERVICE_HOST
argument_list|,
name|ServiceCallConstants
operator|.
name|SERVICE_PORT
argument_list|)
expr_stmt|;
block|}
DECL|method|ServiceCallExpressionSupport (String hostHeader, String portHeader)
specifier|public
name|ServiceCallExpressionSupport
parameter_list|(
name|String
name|hostHeader
parameter_list|,
name|String
name|portHeader
parameter_list|)
block|{
name|this
operator|.
name|hostHeader
operator|=
name|hostHeader
expr_stmt|;
name|this
operator|.
name|portHeader
operator|=
name|portHeader
expr_stmt|;
block|}
DECL|method|getHostHeader ()
specifier|public
name|String
name|getHostHeader
parameter_list|()
block|{
return|return
name|hostHeader
return|;
block|}
DECL|method|setHostHeader (String hostHeader)
specifier|public
name|void
name|setHostHeader
parameter_list|(
name|String
name|hostHeader
parameter_list|)
block|{
name|this
operator|.
name|hostHeader
operator|=
name|hostHeader
expr_stmt|;
block|}
DECL|method|getPortHeader ()
specifier|public
name|String
name|getPortHeader
parameter_list|()
block|{
return|return
name|portHeader
return|;
block|}
DECL|method|setPortHeader (String portHeader)
specifier|public
name|void
name|setPortHeader
parameter_list|(
name|String
name|portHeader
parameter_list|)
block|{
name|this
operator|.
name|portHeader
operator|=
name|portHeader
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|evaluate (Exchange exchange)
specifier|public
name|Object
name|evaluate
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
try|try
block|{
return|return
name|buildCamelEndpointUri
argument_list|(
name|ExchangeHelper
operator|.
name|getMandatoryHeader
argument_list|(
name|exchange
argument_list|,
name|ServiceCallConstants
operator|.
name|SERVICE_NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|ExchangeHelper
operator|.
name|getMandatoryHeader
argument_list|(
name|exchange
argument_list|,
name|hostHeader
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|portHeader
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|ServiceCallConstants
operator|.
name|SERVICE_CALL_URI
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|ServiceCallConstants
operator|.
name|SERVICE_CALL_CONTEXT_PATH
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|ServiceCallConstants
operator|.
name|SERVICE_CALL_SCHEME
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|RuntimeCamelException
operator|.
name|wrapRuntimeCamelException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|buildCamelEndpointUri (String name, String host, Integer port, String uri, String contextPath, String scheme)
specifier|protected
specifier|abstract
name|String
name|buildCamelEndpointUri
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|host
parameter_list|,
name|Integer
name|port
parameter_list|,
name|String
name|uri
parameter_list|,
name|String
name|contextPath
parameter_list|,
name|String
name|scheme
parameter_list|)
function_decl|;
block|}
end_class

end_unit

