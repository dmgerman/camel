begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.queue
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|queue
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|BlockingQueue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|LinkedBlockingQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Component
import|;
end_import

begin_comment
comment|/**  * Represents the component that manages {@link QueueEndpoint}.  It holds the   * list of named queues that queue endpoints reference.  *  * @org.apache.xbean.XBean  * @version $Revision: 519973 $  */
end_comment

begin_class
DECL|class|QueueComponent
specifier|public
class|class
name|QueueComponent
parameter_list|<
name|E
parameter_list|>
implements|implements
name|Component
argument_list|<
name|E
argument_list|>
block|{
DECL|field|registry
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|BlockingQueue
argument_list|<
name|E
argument_list|>
argument_list|>
name|registry
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|BlockingQueue
argument_list|<
name|E
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|container
specifier|private
name|CamelContext
name|container
decl_stmt|;
DECL|method|setContext (CamelContext container)
specifier|public
name|void
name|setContext
parameter_list|(
name|CamelContext
name|container
parameter_list|)
block|{
name|this
operator|.
name|container
operator|=
name|container
expr_stmt|;
block|}
DECL|method|getOrCreateQueue (String uri)
specifier|synchronized
specifier|public
name|BlockingQueue
argument_list|<
name|E
argument_list|>
name|getOrCreateQueue
parameter_list|(
name|String
name|uri
parameter_list|)
block|{
name|BlockingQueue
argument_list|<
name|E
argument_list|>
name|queue
init|=
name|registry
operator|.
name|get
argument_list|(
name|uri
argument_list|)
decl_stmt|;
if|if
condition|(
name|queue
operator|==
literal|null
condition|)
block|{
name|queue
operator|=
name|createQueue
argument_list|()
expr_stmt|;
name|registry
operator|.
name|put
argument_list|(
name|uri
argument_list|,
name|queue
argument_list|)
expr_stmt|;
block|}
return|return
name|queue
return|;
block|}
DECL|method|createQueue ()
specifier|protected
name|BlockingQueue
argument_list|<
name|E
argument_list|>
name|createQueue
parameter_list|()
block|{
return|return
operator|new
name|LinkedBlockingQueue
argument_list|<
name|E
argument_list|>
argument_list|()
return|;
block|}
DECL|method|getContainer ()
specifier|public
name|CamelContext
name|getContainer
parameter_list|()
block|{
return|return
name|container
return|;
block|}
block|}
end_class

end_unit

