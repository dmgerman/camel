begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.processor.interceptor
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|interceptor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|ProcessorType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|DelayProcessorSupport
import|;
end_import

begin_comment
comment|/**  * An interceptor for delaying routes.  */
end_comment

begin_class
DECL|class|DelayInterceptor
specifier|public
class|class
name|DelayInterceptor
extends|extends
name|DelayProcessorSupport
block|{
DECL|field|node
specifier|private
specifier|final
name|ProcessorType
name|node
decl_stmt|;
DECL|field|delayer
specifier|private
name|Delayer
name|delayer
decl_stmt|;
DECL|method|DelayInterceptor (ProcessorType node, Processor target, Delayer delayer)
specifier|public
name|DelayInterceptor
parameter_list|(
name|ProcessorType
name|node
parameter_list|,
name|Processor
name|target
parameter_list|,
name|Delayer
name|delayer
parameter_list|)
block|{
name|super
argument_list|(
name|target
argument_list|)
expr_stmt|;
name|this
operator|.
name|node
operator|=
name|node
expr_stmt|;
name|this
operator|.
name|delayer
operator|=
name|delayer
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"DelayInterceptor[delay: "
operator|+
name|delayer
operator|.
name|getDelay
argument_list|()
operator|+
literal|" on: "
operator|+
name|node
operator|+
literal|"]"
return|;
block|}
DECL|method|delay (Exchange exchange)
specifier|public
name|void
name|delay
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|delayer
operator|.
name|isEnabled
argument_list|()
condition|)
block|{
name|long
name|time
init|=
name|currentSystemTime
argument_list|()
operator|+
name|delayer
operator|.
name|getDelay
argument_list|()
decl_stmt|;
name|waitUntil
argument_list|(
name|time
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

