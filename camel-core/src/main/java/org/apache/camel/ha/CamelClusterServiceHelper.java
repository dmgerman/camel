begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.ha
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ha
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Predicate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_class
DECL|class|CamelClusterServiceHelper
specifier|public
specifier|final
class|class
name|CamelClusterServiceHelper
block|{
DECL|method|CamelClusterServiceHelper ()
specifier|private
name|CamelClusterServiceHelper
parameter_list|()
block|{     }
DECL|method|lookupService (CamelContext context)
specifier|public
specifier|static
name|Optional
argument_list|<
name|CamelClusterService
argument_list|>
name|lookupService
parameter_list|(
name|CamelContext
name|context
parameter_list|)
block|{
return|return
name|Optional
operator|.
name|ofNullable
argument_list|(
name|context
operator|.
name|hasService
argument_list|(
name|CamelClusterService
operator|.
name|class
argument_list|)
argument_list|)
return|;
block|}
DECL|method|lookupService (CamelContext context, Predicate<CamelClusterService> selector)
specifier|public
specifier|static
name|Optional
argument_list|<
name|CamelClusterService
argument_list|>
name|lookupService
parameter_list|(
name|CamelContext
name|context
parameter_list|,
name|Predicate
argument_list|<
name|CamelClusterService
argument_list|>
name|selector
parameter_list|)
block|{
for|for
control|(
name|CamelClusterService
name|service
range|:
name|context
operator|.
name|hasServices
argument_list|(
name|CamelClusterService
operator|.
name|class
argument_list|)
control|)
block|{
if|if
condition|(
name|selector
operator|.
name|test
argument_list|(
name|service
argument_list|)
condition|)
block|{
return|return
name|Optional
operator|.
name|of
argument_list|(
name|service
argument_list|)
return|;
block|}
block|}
return|return
name|Optional
operator|.
name|empty
argument_list|()
return|;
block|}
block|}
end_class

end_unit

