begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.builder.xml
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|xml
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Expression
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Predicate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|Language
import|;
end_import

begin_comment
comment|/**  * @version $Revision$  */
end_comment

begin_class
DECL|class|XPathLanguage
specifier|public
class|class
name|XPathLanguage
implements|implements
name|Language
block|{
DECL|field|resultType
specifier|private
name|QName
name|resultType
decl_stmt|;
DECL|method|createPredicate (String expression)
specifier|public
name|Predicate
argument_list|<
name|Exchange
argument_list|>
name|createPredicate
parameter_list|(
name|String
name|expression
parameter_list|)
block|{
name|XPathBuilder
name|builder
init|=
name|XPathBuilder
operator|.
name|xpath
argument_list|(
name|expression
argument_list|)
decl_stmt|;
name|configureBuilder
argument_list|(
name|builder
argument_list|)
expr_stmt|;
return|return
name|builder
return|;
block|}
DECL|method|createExpression (String expression)
specifier|public
name|Expression
argument_list|<
name|Exchange
argument_list|>
name|createExpression
parameter_list|(
name|String
name|expression
parameter_list|)
block|{
name|XPathBuilder
name|builder
init|=
name|XPathBuilder
operator|.
name|xpath
argument_list|(
name|expression
argument_list|)
decl_stmt|;
name|configureBuilder
argument_list|(
name|builder
argument_list|)
expr_stmt|;
return|return
name|builder
return|;
block|}
DECL|method|getResultType ()
specifier|public
name|QName
name|getResultType
parameter_list|()
block|{
return|return
name|resultType
return|;
block|}
DECL|method|setResultType (QName resultType)
specifier|public
name|void
name|setResultType
parameter_list|(
name|QName
name|resultType
parameter_list|)
block|{
name|this
operator|.
name|resultType
operator|=
name|resultType
expr_stmt|;
block|}
DECL|method|configureBuilder (XPathBuilder builder)
specifier|protected
name|void
name|configureBuilder
parameter_list|(
name|XPathBuilder
name|builder
parameter_list|)
block|{
if|if
condition|(
name|resultType
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setResultQName
argument_list|(
name|resultType
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

