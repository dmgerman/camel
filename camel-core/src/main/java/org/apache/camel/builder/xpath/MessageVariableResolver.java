begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.builder.xpath
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|xpath
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPathVariableResolver
import|;
end_import

begin_comment
comment|/**  * A variable resolver for XPath expressions which support properties on the messge, exchange as well  * as making system properties and environment properties available.  *  * @version $Revision$  */
end_comment

begin_class
DECL|class|MessageVariableResolver
specifier|public
class|class
name|MessageVariableResolver
implements|implements
name|XPathVariableResolver
block|{
DECL|field|SYSTEM_PROPERTIES_NAMESPACE
specifier|public
specifier|static
specifier|final
name|String
name|SYSTEM_PROPERTIES_NAMESPACE
init|=
literal|"http://camel.apache.org/xml/variables/system-properties"
decl_stmt|;
DECL|field|ENVIRONMENT_VARIABLES
specifier|public
specifier|static
specifier|final
name|String
name|ENVIRONMENT_VARIABLES
init|=
literal|"http://camel.apache.org/xml/variables/environment-variables"
decl_stmt|;
DECL|field|exchange
specifier|private
name|Exchange
name|exchange
decl_stmt|;
DECL|method|getExchange ()
specifier|public
name|Exchange
name|getExchange
parameter_list|()
block|{
return|return
name|exchange
return|;
block|}
DECL|method|setExchange (Exchange exchange)
specifier|public
name|void
name|setExchange
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
name|this
operator|.
name|exchange
operator|=
name|exchange
expr_stmt|;
block|}
DECL|method|resolveVariable (QName name)
specifier|public
name|Object
name|resolveVariable
parameter_list|(
name|QName
name|name
parameter_list|)
block|{
comment|// should we use other namespaces maybe?
name|String
name|uri
init|=
name|name
operator|.
name|getNamespaceURI
argument_list|()
decl_stmt|;
name|String
name|localPart
init|=
name|name
operator|.
name|getLocalPart
argument_list|()
decl_stmt|;
name|Object
name|answer
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|uri
operator|==
literal|null
operator|||
name|uri
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
name|Message
name|message
init|=
name|exchange
operator|.
name|getIn
argument_list|()
decl_stmt|;
if|if
condition|(
name|message
operator|!=
literal|null
condition|)
block|{
name|answer
operator|=
name|message
operator|.
name|getHeader
argument_list|(
name|localPart
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|answer
operator|==
literal|null
condition|)
block|{
name|answer
operator|=
name|exchange
operator|.
name|getHeader
argument_list|(
name|localPart
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|uri
operator|.
name|equals
argument_list|(
name|SYSTEM_PROPERTIES_NAMESPACE
argument_list|)
condition|)
block|{
name|answer
operator|=
name|System
operator|.
name|getProperty
argument_list|(
name|localPart
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|uri
operator|.
name|equals
argument_list|(
name|ENVIRONMENT_VARIABLES
argument_list|)
condition|)
block|{
name|answer
operator|=
name|System
operator|.
name|getenv
argument_list|()
operator|.
name|get
argument_list|(
name|localPart
argument_list|)
expr_stmt|;
block|}
return|return
name|answer
return|;
block|}
block|}
end_class

end_unit

