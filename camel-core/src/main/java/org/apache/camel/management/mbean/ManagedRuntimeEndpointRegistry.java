begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.management.mbean
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|management
operator|.
name|mbean
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|api
operator|.
name|management
operator|.
name|ManagedResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|api
operator|.
name|management
operator|.
name|mbean
operator|.
name|ManagedRuntimeEndpointRegistryMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|RuntimeEndpointRegistry
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
annotation|@
name|ManagedResource
argument_list|(
name|description
operator|=
literal|"Managed RuntimeEndpointRegistry"
argument_list|)
DECL|class|ManagedRuntimeEndpointRegistry
specifier|public
class|class
name|ManagedRuntimeEndpointRegistry
extends|extends
name|ManagedService
implements|implements
name|ManagedRuntimeEndpointRegistryMBean
block|{
DECL|field|registry
specifier|private
specifier|final
name|RuntimeEndpointRegistry
name|registry
decl_stmt|;
DECL|method|ManagedRuntimeEndpointRegistry (CamelContext context, RuntimeEndpointRegistry registry)
specifier|public
name|ManagedRuntimeEndpointRegistry
parameter_list|(
name|CamelContext
name|context
parameter_list|,
name|RuntimeEndpointRegistry
name|registry
parameter_list|)
block|{
name|super
argument_list|(
name|context
argument_list|,
name|registry
argument_list|)
expr_stmt|;
name|this
operator|.
name|registry
operator|=
name|registry
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|reset ()
specifier|public
name|void
name|reset
parameter_list|()
block|{
name|registry
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|isEnabled ()
specifier|public
name|boolean
name|isEnabled
parameter_list|()
block|{
return|return
name|registry
operator|.
name|isEnabled
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|setEnabled (boolean enabled)
specifier|public
name|void
name|setEnabled
parameter_list|(
name|boolean
name|enabled
parameter_list|)
block|{
name|registry
operator|.
name|setEnabled
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getAllEndpoints (boolean includeInputs)
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getAllEndpoints
parameter_list|(
name|boolean
name|includeInputs
parameter_list|)
block|{
return|return
name|registry
operator|.
name|getAllEndpoints
argument_list|(
name|includeInputs
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getEndpointsPerRoute (String routeId, boolean includeInputs)
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getEndpointsPerRoute
parameter_list|(
name|String
name|routeId
parameter_list|,
name|boolean
name|includeInputs
parameter_list|)
block|{
return|return
name|registry
operator|.
name|getEndpointsPerRoute
argument_list|(
name|routeId
argument_list|,
name|includeInputs
argument_list|)
return|;
block|}
block|}
end_class

end_unit

