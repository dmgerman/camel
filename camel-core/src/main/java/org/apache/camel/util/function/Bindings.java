begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.util.function
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|function
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|BiConsumer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|BiFunction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Consumer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Function
import|;
end_import

begin_class
DECL|class|Bindings
specifier|public
specifier|final
class|class
name|Bindings
block|{
DECL|method|Bindings ()
specifier|private
name|Bindings
parameter_list|()
block|{     }
DECL|method|bind (T1 v1, BiConsumer<T1, T2> consumer)
specifier|public
specifier|static
parameter_list|<
name|T1
parameter_list|,
name|T2
parameter_list|>
name|Consumer
argument_list|<
name|T2
argument_list|>
name|bind
parameter_list|(
name|T1
name|v1
parameter_list|,
name|BiConsumer
argument_list|<
name|T1
argument_list|,
name|T2
argument_list|>
name|consumer
parameter_list|)
block|{
return|return
name|v2
lambda|->
name|consumer
operator|.
name|accept
argument_list|(
name|v1
argument_list|,
name|v2
argument_list|)
return|;
block|}
DECL|method|bind (T1 v1, BiFunction<T1, T2, R> function)
specifier|public
specifier|static
parameter_list|<
name|T1
parameter_list|,
name|T2
parameter_list|,
name|R
parameter_list|>
name|Function
argument_list|<
name|T2
argument_list|,
name|R
argument_list|>
name|bind
parameter_list|(
name|T1
name|v1
parameter_list|,
name|BiFunction
argument_list|<
name|T1
argument_list|,
name|T2
argument_list|,
name|R
argument_list|>
name|function
parameter_list|)
block|{
return|return
name|v2
lambda|->
name|function
operator|.
name|apply
argument_list|(
name|v1
argument_list|,
name|v2
argument_list|)
return|;
block|}
block|}
end_class

end_unit

