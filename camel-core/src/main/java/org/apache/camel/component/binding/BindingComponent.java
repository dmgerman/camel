begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.binding
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|binding
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|Binding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|CamelContextHelper
operator|.
name|getMandatoryEndpoint
import|;
end_import

begin_comment
comment|/**  * A composite {@link org.apache.camel.Component} which creates a {@link BindingEndpoint} from a  * configured {@link Binding} instance and using the optional {@link #setUriPrefix(String)}  * and {@link #setUriPostfix(String)} to create the underlying endpoint from the remaining URI  *  * @deprecated use {@link org.apache.camel.component.binding.BindingNameComponent}  */
end_comment

begin_class
annotation|@
name|Deprecated
DECL|class|BindingComponent
specifier|public
class|class
name|BindingComponent
extends|extends
name|DefaultComponent
block|{
DECL|field|binding
specifier|private
name|Binding
name|binding
decl_stmt|;
DECL|field|uriPrefix
specifier|private
name|String
name|uriPrefix
decl_stmt|;
DECL|field|uriPostfix
specifier|private
name|String
name|uriPostfix
decl_stmt|;
DECL|method|BindingComponent ()
specifier|public
name|BindingComponent
parameter_list|()
block|{     }
DECL|method|BindingComponent (Binding binding)
specifier|public
name|BindingComponent
parameter_list|(
name|Binding
name|binding
parameter_list|)
block|{
name|this
operator|.
name|binding
operator|=
name|binding
expr_stmt|;
block|}
DECL|method|BindingComponent (Binding binding, String uriPrefix)
specifier|public
name|BindingComponent
parameter_list|(
name|Binding
name|binding
parameter_list|,
name|String
name|uriPrefix
parameter_list|)
block|{
name|this
argument_list|(
name|binding
argument_list|)
expr_stmt|;
name|this
operator|.
name|uriPrefix
operator|=
name|uriPrefix
expr_stmt|;
block|}
DECL|method|BindingComponent (Binding binding, String uriPrefix, String uriPostfix)
specifier|public
name|BindingComponent
parameter_list|(
name|Binding
name|binding
parameter_list|,
name|String
name|uriPrefix
parameter_list|,
name|String
name|uriPostfix
parameter_list|)
block|{
name|this
argument_list|(
name|binding
argument_list|,
name|uriPrefix
argument_list|)
expr_stmt|;
name|this
operator|.
name|uriPostfix
operator|=
name|uriPostfix
expr_stmt|;
block|}
DECL|method|getBinding ()
specifier|public
name|Binding
name|getBinding
parameter_list|()
block|{
return|return
name|binding
return|;
block|}
DECL|method|setBinding (Binding binding)
specifier|public
name|void
name|setBinding
parameter_list|(
name|Binding
name|binding
parameter_list|)
block|{
name|this
operator|.
name|binding
operator|=
name|binding
expr_stmt|;
block|}
DECL|method|getUriPostfix ()
specifier|public
name|String
name|getUriPostfix
parameter_list|()
block|{
return|return
name|uriPostfix
return|;
block|}
DECL|method|setUriPostfix (String uriPostfix)
specifier|public
name|void
name|setUriPostfix
parameter_list|(
name|String
name|uriPostfix
parameter_list|)
block|{
name|this
operator|.
name|uriPostfix
operator|=
name|uriPostfix
expr_stmt|;
block|}
DECL|method|getUriPrefix ()
specifier|public
name|String
name|getUriPrefix
parameter_list|()
block|{
return|return
name|uriPrefix
return|;
block|}
DECL|method|setUriPrefix (String uriPrefix)
specifier|public
name|void
name|setUriPrefix
parameter_list|(
name|String
name|uriPrefix
parameter_list|)
block|{
name|this
operator|.
name|uriPrefix
operator|=
name|uriPrefix
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createEndpoint (String uri, String remaining, Map<String, Object> parameters)
specifier|protected
name|Endpoint
name|createEndpoint
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|remaining
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|parameters
parameter_list|)
throws|throws
name|Exception
block|{
name|Binding
name|bindingValue
init|=
name|getBinding
argument_list|()
decl_stmt|;
name|ObjectHelper
operator|.
name|notNull
argument_list|(
name|bindingValue
argument_list|,
literal|"binding"
argument_list|)
expr_stmt|;
name|CamelContext
name|camelContext
init|=
name|getCamelContext
argument_list|()
decl_stmt|;
name|String
name|delegateURI
init|=
name|createDelegateURI
argument_list|(
name|remaining
argument_list|,
name|parameters
argument_list|)
decl_stmt|;
name|Endpoint
name|delegate
init|=
name|getMandatoryEndpoint
argument_list|(
name|camelContext
argument_list|,
name|delegateURI
argument_list|)
decl_stmt|;
return|return
operator|new
name|BindingEndpoint
argument_list|(
name|uri
argument_list|,
name|this
argument_list|,
name|bindingValue
argument_list|,
name|delegate
argument_list|)
return|;
block|}
DECL|method|createDelegateURI (String remaining, Map<String, Object> parameters)
specifier|protected
name|String
name|createDelegateURI
parameter_list|(
name|String
name|remaining
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|parameters
parameter_list|)
block|{
return|return
name|getOrEmpty
argument_list|(
name|uriPrefix
argument_list|)
operator|+
name|remaining
operator|+
name|getOrEmpty
argument_list|(
name|uriPostfix
argument_list|)
return|;
block|}
DECL|method|getOrEmpty (String text)
specifier|protected
specifier|static
name|String
name|getOrEmpty
parameter_list|(
name|String
name|text
parameter_list|)
block|{
return|return
name|text
operator|!=
literal|null
condition|?
name|text
else|:
literal|""
return|;
block|}
block|}
end_class

end_unit

