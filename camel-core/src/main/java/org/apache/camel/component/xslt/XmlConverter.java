begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.xslt
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|xslt
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerFactory
import|;
end_import

begin_class
DECL|class|XmlConverter
specifier|public
class|class
name|XmlConverter
extends|extends
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|converter
operator|.
name|jaxp
operator|.
name|XmlConverter
block|{
annotation|@
name|Override
DECL|method|getDocumentBuilderFactory ()
specifier|public
name|DocumentBuilderFactory
name|getDocumentBuilderFactory
parameter_list|()
block|{
return|return
name|super
operator|.
name|getDocumentBuilderFactory
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|setDocumentBuilderFactory (DocumentBuilderFactory documentBuilderFactory)
specifier|public
name|void
name|setDocumentBuilderFactory
parameter_list|(
name|DocumentBuilderFactory
name|documentBuilderFactory
parameter_list|)
block|{
name|super
operator|.
name|setDocumentBuilderFactory
argument_list|(
name|documentBuilderFactory
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getTransformerFactory ()
specifier|public
name|TransformerFactory
name|getTransformerFactory
parameter_list|()
block|{
return|return
name|super
operator|.
name|getTransformerFactory
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|setTransformerFactory (TransformerFactory transformerFactory)
specifier|public
name|void
name|setTransformerFactory
parameter_list|(
name|TransformerFactory
name|transformerFactory
parameter_list|)
block|{
name|super
operator|.
name|setTransformerFactory
argument_list|(
name|transformerFactory
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

