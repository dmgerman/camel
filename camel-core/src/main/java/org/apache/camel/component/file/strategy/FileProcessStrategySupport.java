begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.file.strategy
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|file
operator|.
name|strategy
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|RandomAccessFile
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|channels
operator|.
name|Channel
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|channels
operator|.
name|FileChannel
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|channels
operator|.
name|FileLock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|file
operator|.
name|FileEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|file
operator|.
name|FileExchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|file
operator|.
name|FileProcessStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ExchangeHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_comment
comment|/**  * Base class for {@link org.apache.camel.component.file.FileProcessStrategy} implementation to extend.  *  * @version $Revision$  */
end_comment

begin_class
DECL|class|FileProcessStrategySupport
specifier|public
specifier|abstract
class|class
name|FileProcessStrategySupport
implements|implements
name|FileProcessStrategy
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
specifier|transient
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|FileProcessStrategySupport
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|lockFile
specifier|private
name|boolean
name|lockFile
decl_stmt|;
DECL|field|lockFileRenamer
specifier|private
name|FileRenamer
name|lockFileRenamer
decl_stmt|;
DECL|method|FileProcessStrategySupport ()
specifier|protected
name|FileProcessStrategySupport
parameter_list|()
block|{
name|this
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|FileProcessStrategySupport (boolean lockFile)
specifier|protected
name|FileProcessStrategySupport
parameter_list|(
name|boolean
name|lockFile
parameter_list|)
block|{
name|this
argument_list|(
name|lockFile
argument_list|,
operator|new
name|DefaultFileRenamer
argument_list|(
literal|null
argument_list|,
name|FileEndpoint
operator|.
name|DEFAULT_LOCK_FILE_POSTFIX
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|FileProcessStrategySupport (boolean lockFile, FileRenamer lockFileRenamer)
specifier|protected
name|FileProcessStrategySupport
parameter_list|(
name|boolean
name|lockFile
parameter_list|,
name|FileRenamer
name|lockFileRenamer
parameter_list|)
block|{
name|this
operator|.
name|lockFile
operator|=
name|lockFile
expr_stmt|;
name|this
operator|.
name|lockFileRenamer
operator|=
name|lockFileRenamer
expr_stmt|;
block|}
DECL|method|begin (FileEndpoint endpoint, FileExchange exchange, File file)
specifier|public
name|boolean
name|begin
parameter_list|(
name|FileEndpoint
name|endpoint
parameter_list|,
name|FileExchange
name|exchange
parameter_list|,
name|File
name|file
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|isLockFile
argument_list|()
condition|)
block|{
name|File
name|newFile
init|=
name|lockFileRenamer
operator|.
name|renameFile
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|String
name|lockFileName
init|=
name|newFile
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Locking the file: "
operator|+
name|file
operator|+
literal|" using the lock file name: "
operator|+
name|lockFileName
argument_list|)
expr_stmt|;
block|}
name|FileChannel
name|channel
init|=
operator|new
name|RandomAccessFile
argument_list|(
name|lockFileName
argument_list|,
literal|"rw"
argument_list|)
operator|.
name|getChannel
argument_list|()
decl_stmt|;
name|FileLock
name|lock
init|=
name|channel
operator|.
name|lock
argument_list|()
decl_stmt|;
if|if
condition|(
name|lock
operator|!=
literal|null
condition|)
block|{
name|exchange
operator|.
name|setProperty
argument_list|(
literal|"org.apache.camel.fileChannel"
argument_list|,
name|channel
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|setProperty
argument_list|(
literal|"org.apache.camel.file.lock"
argument_list|,
name|lock
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|setProperty
argument_list|(
literal|"org.apache.camel.file.lock.name"
argument_list|,
name|lockFileName
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|commit (FileEndpoint endpoint, FileExchange exchange, File file)
specifier|public
name|void
name|commit
parameter_list|(
name|FileEndpoint
name|endpoint
parameter_list|,
name|FileExchange
name|exchange
parameter_list|,
name|File
name|file
parameter_list|)
throws|throws
name|Exception
block|{
name|unlockFile
argument_list|(
name|endpoint
argument_list|,
name|exchange
argument_list|,
name|file
argument_list|)
expr_stmt|;
block|}
DECL|method|rollback (FileEndpoint endpoint, FileExchange exchange, File file)
specifier|public
name|void
name|rollback
parameter_list|(
name|FileEndpoint
name|endpoint
parameter_list|,
name|FileExchange
name|exchange
parameter_list|,
name|File
name|file
parameter_list|)
block|{
try|try
block|{
name|unlockFile
argument_list|(
name|endpoint
argument_list|,
name|exchange
argument_list|,
name|file
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Unable to unlock file: "
operator|+
name|file
operator|+
literal|": "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|isLockFile ()
specifier|public
name|boolean
name|isLockFile
parameter_list|()
block|{
return|return
name|lockFile
return|;
block|}
DECL|method|setLockFile (boolean lockFile)
specifier|public
name|void
name|setLockFile
parameter_list|(
name|boolean
name|lockFile
parameter_list|)
block|{
name|this
operator|.
name|lockFile
operator|=
name|lockFile
expr_stmt|;
block|}
DECL|method|getLockFileRenamer ()
specifier|public
name|FileRenamer
name|getLockFileRenamer
parameter_list|()
block|{
return|return
name|lockFileRenamer
return|;
block|}
DECL|method|setLockFileRenamer (FileRenamer lockFileRenamer)
specifier|public
name|void
name|setLockFileRenamer
parameter_list|(
name|FileRenamer
name|lockFileRenamer
parameter_list|)
block|{
name|this
operator|.
name|lockFileRenamer
operator|=
name|lockFileRenamer
expr_stmt|;
block|}
DECL|method|unlockFile (FileEndpoint endpoint, FileExchange exchange, File file)
specifier|protected
name|void
name|unlockFile
parameter_list|(
name|FileEndpoint
name|endpoint
parameter_list|,
name|FileExchange
name|exchange
parameter_list|,
name|File
name|file
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|isLockFile
argument_list|()
condition|)
block|{
name|Channel
name|channel
init|=
name|ExchangeHelper
operator|.
name|getMandatoryProperty
argument_list|(
name|exchange
argument_list|,
literal|"org.apache.camel.fileChannel"
argument_list|,
name|Channel
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|lockfile
init|=
name|ExchangeHelper
operator|.
name|getMandatoryProperty
argument_list|(
name|exchange
argument_list|,
literal|"org.apache.camel.file.lock.name"
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Unlocking file: "
operator|+
name|file
argument_list|)
expr_stmt|;
block|}
name|channel
operator|.
name|close
argument_list|()
expr_stmt|;
name|File
name|lock
init|=
operator|new
name|File
argument_list|(
name|lockfile
argument_list|)
decl_stmt|;
name|lock
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

