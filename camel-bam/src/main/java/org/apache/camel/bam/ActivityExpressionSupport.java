begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.bam
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|bam
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|bam
operator|.
name|Activity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|bam
operator|.
name|model
operator|.
name|ActivityState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|bam
operator|.
name|model
operator|.
name|ProcessInstance
import|;
end_import

begin_comment
comment|/**  * @version $Revision: $  */
end_comment

begin_class
DECL|class|ActivityExpressionSupport
specifier|public
specifier|abstract
class|class
name|ActivityExpressionSupport
extends|extends
name|ProcessExpressionSupport
argument_list|<
name|ProcessInstance
argument_list|>
block|{
DECL|field|activity
specifier|private
name|Activity
name|activity
decl_stmt|;
DECL|method|ActivityExpressionSupport (Activity activity)
specifier|protected
name|ActivityExpressionSupport
parameter_list|(
name|Activity
name|activity
parameter_list|)
block|{
name|super
argument_list|(
name|ProcessInstance
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|activity
operator|=
name|activity
expr_stmt|;
block|}
DECL|method|evaluate (Exchange exchange, ProcessInstance processEntity)
specifier|protected
name|Object
name|evaluate
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|ProcessInstance
name|processEntity
parameter_list|)
block|{
name|ActivityState
name|state
init|=
name|processEntity
operator|.
name|getActivityState
argument_list|(
name|activity
argument_list|)
decl_stmt|;
if|if
condition|(
name|state
operator|!=
literal|null
condition|)
block|{
return|return
name|evaluateState
argument_list|(
name|exchange
argument_list|,
name|state
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
DECL|method|evaluateState (Exchange exchange, ActivityState state)
specifier|protected
specifier|abstract
name|Object
name|evaluateState
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|ActivityState
name|state
parameter_list|)
function_decl|;
block|}
end_class

end_unit

