begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.metrics.meter
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|metrics
operator|.
name|meter
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultProducer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|Meter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|MetricRegistry
import|;
end_import

begin_class
DECL|class|MeterProducer
specifier|public
class|class
name|MeterProducer
extends|extends
name|DefaultProducer
block|{
DECL|method|MeterProducer (Endpoint endpoint)
specifier|public
name|MeterProducer
parameter_list|(
name|Endpoint
name|endpoint
parameter_list|)
block|{
name|super
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|process (Exchange exchange)
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|MeterEndpoint
name|endpoint
init|=
operator|(
name|MeterEndpoint
operator|)
name|getEndpoint
argument_list|()
decl_stmt|;
name|String
name|metricsName
init|=
name|endpoint
operator|.
name|getMetricsName
argument_list|()
decl_stmt|;
name|MetricRegistry
name|registry
init|=
name|endpoint
operator|.
name|getRegistry
argument_list|()
decl_stmt|;
name|Meter
name|meter
init|=
name|registry
operator|.
name|meter
argument_list|(
name|metricsName
argument_list|)
decl_stmt|;
name|Long
name|mark
init|=
name|endpoint
operator|.
name|getMark
argument_list|()
decl_stmt|;
if|if
condition|(
name|mark
operator|==
literal|null
condition|)
block|{
name|meter
operator|.
name|mark
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|meter
operator|.
name|mark
argument_list|(
name|mark
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

