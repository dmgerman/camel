begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.example.cafe.stuff
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|cafe
operator|.
name|stuff
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|cafe
operator|.
name|Drink
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|cafe
operator|.
name|OrderItem
import|;
end_import

begin_class
DECL|class|Barista
specifier|public
class|class
name|Barista
block|{
DECL|field|hotDrinkDelay
specifier|private
name|long
name|hotDrinkDelay
init|=
literal|300
decl_stmt|;
DECL|field|coldDrinkDelay
specifier|private
name|long
name|coldDrinkDelay
init|=
literal|100
decl_stmt|;
DECL|field|hotDrinkCounter
specifier|private
name|AtomicInteger
name|hotDrinkCounter
init|=
operator|new
name|AtomicInteger
argument_list|()
decl_stmt|;
DECL|field|coldDrinkCounter
specifier|private
name|AtomicInteger
name|coldDrinkCounter
init|=
operator|new
name|AtomicInteger
argument_list|()
decl_stmt|;
DECL|method|setHotDrinkDelay (long hotDrinkDelay)
specifier|public
name|void
name|setHotDrinkDelay
parameter_list|(
name|long
name|hotDrinkDelay
parameter_list|)
block|{
name|this
operator|.
name|hotDrinkDelay
operator|=
name|hotDrinkDelay
expr_stmt|;
block|}
DECL|method|setColdDrinkDelay (long coldDrinkDelay)
specifier|public
name|void
name|setColdDrinkDelay
parameter_list|(
name|long
name|coldDrinkDelay
parameter_list|)
block|{
name|this
operator|.
name|coldDrinkDelay
operator|=
name|coldDrinkDelay
expr_stmt|;
block|}
DECL|method|prepareHotDrink (OrderItem orderItem)
specifier|public
name|Drink
name|prepareHotDrink
parameter_list|(
name|OrderItem
name|orderItem
parameter_list|)
block|{
try|try
block|{
name|Thread
operator|.
name|sleep
argument_list|(
name|this
operator|.
name|hotDrinkDelay
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" prepared hot drink #"
operator|+
name|hotDrinkCounter
operator|.
name|incrementAndGet
argument_list|()
operator|+
literal|" for order #"
operator|+
name|orderItem
operator|.
name|getOrder
argument_list|()
operator|.
name|getNumber
argument_list|()
operator|+
literal|": "
operator|+
name|orderItem
argument_list|)
expr_stmt|;
return|return
operator|new
name|Drink
argument_list|(
name|orderItem
operator|.
name|getOrder
argument_list|()
operator|.
name|getNumber
argument_list|()
argument_list|,
name|orderItem
operator|.
name|getDrinkType
argument_list|()
argument_list|,
name|orderItem
operator|.
name|isIced
argument_list|()
argument_list|,
name|orderItem
operator|.
name|getShots
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|interrupt
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
DECL|method|prepareColdDrink (OrderItem orderItem)
specifier|public
name|Drink
name|prepareColdDrink
parameter_list|(
name|OrderItem
name|orderItem
parameter_list|)
block|{
try|try
block|{
name|Thread
operator|.
name|sleep
argument_list|(
name|this
operator|.
name|coldDrinkDelay
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" prepared cold drink #"
operator|+
name|coldDrinkCounter
operator|.
name|incrementAndGet
argument_list|()
operator|+
literal|" for order #"
operator|+
name|orderItem
operator|.
name|getOrder
argument_list|()
operator|.
name|getNumber
argument_list|()
operator|+
literal|": "
operator|+
name|orderItem
argument_list|)
expr_stmt|;
return|return
operator|new
name|Drink
argument_list|(
name|orderItem
operator|.
name|getOrder
argument_list|()
operator|.
name|getNumber
argument_list|()
argument_list|,
name|orderItem
operator|.
name|getDrinkType
argument_list|()
argument_list|,
name|orderItem
operator|.
name|isIced
argument_list|()
argument_list|,
name|orderItem
operator|.
name|getShots
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|interrupt
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
block|}
end_class

end_unit

