begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.example.metrics.cdi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|metrics
operator|.
name|cdi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|context
operator|.
name|ApplicationScoped
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|event
operator|.
name|Observes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Named
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|MetricRegistry
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|Slf4jReporter
import|;
end_import

begin_import
import|import
name|io
operator|.
name|astefanutti
operator|.
name|metrics
operator|.
name|cdi
operator|.
name|MetricsConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|metrics
operator|.
name|MetricsComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|management
operator|.
name|event
operator|.
name|CamelContextStartedEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|management
operator|.
name|event
operator|.
name|CamelContextStoppedEvent
import|;
end_import

begin_class
DECL|class|MetricsCdiConfig
class|class
name|MetricsCdiConfig
block|{
annotation|@
name|Produces
annotation|@
name|ApplicationScoped
annotation|@
name|Named
argument_list|(
name|MetricsComponent
operator|.
name|METRIC_REGISTRY_NAME
argument_list|)
comment|// TODO: remove when Camel Metrics component looks up for the Metrics registry by type only
DECL|field|registry
specifier|private
name|MetricRegistry
name|registry
init|=
operator|new
name|MetricRegistry
argument_list|()
decl_stmt|;
annotation|@
name|Produces
annotation|@
name|ApplicationScoped
DECL|method|reporter (MetricRegistry registry)
specifier|private
name|Slf4jReporter
name|reporter
parameter_list|(
name|MetricRegistry
name|registry
parameter_list|)
block|{
return|return
name|Slf4jReporter
operator|.
name|forRegistry
argument_list|(
name|registry
argument_list|)
operator|.
name|convertRatesTo
argument_list|(
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
operator|.
name|convertDurationsTo
argument_list|(
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|onStart (@bserves CamelContextStartedEvent event, Slf4jReporter reporter)
specifier|private
specifier|static
name|void
name|onStart
parameter_list|(
annotation|@
name|Observes
name|CamelContextStartedEvent
name|event
parameter_list|,
name|Slf4jReporter
name|reporter
parameter_list|)
block|{
name|reporter
operator|.
name|start
argument_list|(
literal|10L
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
block|}
DECL|method|onStop (@bserves CamelContextStoppedEvent event, Slf4jReporter reporter)
specifier|private
specifier|static
name|void
name|onStop
parameter_list|(
annotation|@
name|Observes
name|CamelContextStoppedEvent
name|event
parameter_list|,
name|Slf4jReporter
name|reporter
parameter_list|)
block|{
name|reporter
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|method|configure (@bserves MetricsConfiguration config)
specifier|private
specifier|static
name|void
name|configure
parameter_list|(
annotation|@
name|Observes
name|MetricsConfiguration
name|config
parameter_list|)
block|{
name|config
operator|.
name|useAbsoluteName
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

