begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.example.google.pubsub
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|google
operator|.
name|pubsub
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|google
operator|.
name|pubsub
operator|.
name|GooglePubsubComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|google
operator|.
name|pubsub
operator|.
name|GooglePubsubConnectionFactory
import|;
end_import

begin_interface
DECL|interface|PubsubUtil
specifier|public
interface|interface
name|PubsubUtil
block|{
DECL|method|createComponent ()
specifier|static
name|GooglePubsubComponent
name|createComponent
parameter_list|()
block|{
name|GooglePubsubComponent
name|component
init|=
operator|new
name|GooglePubsubComponent
argument_list|()
decl_stmt|;
name|Properties
name|properties
init|=
name|loadProperties
argument_list|()
decl_stmt|;
name|GooglePubsubConnectionFactory
name|connectionFactory
init|=
name|createConnectionFactory
argument_list|(
name|properties
argument_list|)
decl_stmt|;
name|component
operator|.
name|setConnectionFactory
argument_list|(
name|connectionFactory
argument_list|)
expr_stmt|;
return|return
name|component
return|;
block|}
DECL|method|createConnectionFactory (Properties properties)
specifier|static
name|GooglePubsubConnectionFactory
name|createConnectionFactory
parameter_list|(
name|Properties
name|properties
parameter_list|)
block|{
name|GooglePubsubConnectionFactory
name|connectionFactory
init|=
operator|new
name|GooglePubsubConnectionFactory
argument_list|()
decl_stmt|;
name|connectionFactory
operator|.
name|setCredentialsFileLocation
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"credentials.fileLocation"
argument_list|)
argument_list|)
expr_stmt|;
name|connectionFactory
operator|.
name|setServiceAccount
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"credentials.account"
argument_list|)
argument_list|)
expr_stmt|;
name|connectionFactory
operator|.
name|setServiceAccountKey
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"credentials.key"
argument_list|)
argument_list|)
expr_stmt|;
name|connectionFactory
operator|.
name|setServiceURL
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"pubsub.serviceUrl"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|connectionFactory
return|;
block|}
DECL|method|loadProperties ()
specifier|static
name|Properties
name|loadProperties
parameter_list|()
block|{
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|InputStream
name|fileIn
init|=
name|PubsubUtil
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"example.properties"
argument_list|)
decl_stmt|;
try|try
block|{
name|properties
operator|.
name|load
argument_list|(
name|fileIn
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
name|properties
return|;
block|}
block|}
end_interface

end_unit

