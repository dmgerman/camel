begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.example.gae
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|gae
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Expression
import|;
end_import

begin_class
DECL|class|ReportData
specifier|public
class|class
name|ReportData
implements|implements
name|Serializable
block|{
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|468314239950430108L
decl_stmt|;
DECL|field|city
specifier|private
name|String
name|city
decl_stmt|;
DECL|field|recipient
specifier|private
name|String
name|recipient
decl_stmt|;
DECL|field|requestor
specifier|private
name|String
name|requestor
decl_stmt|;
DECL|field|weather
specifier|private
name|Document
name|weather
decl_stmt|;
DECL|method|ReportData (String city, String recipient, String requestor)
specifier|public
name|ReportData
parameter_list|(
name|String
name|city
parameter_list|,
name|String
name|recipient
parameter_list|,
name|String
name|requestor
parameter_list|)
block|{
name|this
operator|.
name|city
operator|=
name|city
expr_stmt|;
name|this
operator|.
name|recipient
operator|=
name|recipient
expr_stmt|;
name|this
operator|.
name|requestor
operator|=
name|requestor
expr_stmt|;
block|}
DECL|method|getCity ()
specifier|public
name|String
name|getCity
parameter_list|()
block|{
return|return
name|city
return|;
block|}
DECL|method|getRecipient ()
specifier|public
name|String
name|getRecipient
parameter_list|()
block|{
return|return
name|recipient
return|;
block|}
DECL|method|getRequestor ()
specifier|public
name|String
name|getRequestor
parameter_list|()
block|{
return|return
name|requestor
return|;
block|}
DECL|method|getWeather ()
specifier|public
name|Document
name|getWeather
parameter_list|()
block|{
return|return
name|weather
return|;
block|}
DECL|method|setWeather (Document weather)
specifier|public
name|void
name|setWeather
parameter_list|(
name|Document
name|weather
parameter_list|)
block|{
name|this
operator|.
name|weather
operator|=
name|weather
expr_stmt|;
block|}
DECL|method|city ()
specifier|public
specifier|static
name|Expression
name|city
parameter_list|()
block|{
return|return
operator|new
name|Expression
argument_list|()
block|{
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|evaluate
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|type
parameter_list|)
block|{
return|return
name|type
operator|.
name|cast
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|ReportData
operator|.
name|class
argument_list|)
operator|.
name|getCity
argument_list|()
argument_list|)
return|;
block|}
block|}
return|;
block|}
DECL|method|recipient ()
specifier|public
specifier|static
name|Expression
name|recipient
parameter_list|()
block|{
return|return
operator|new
name|Expression
argument_list|()
block|{
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|evaluate
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|type
parameter_list|)
block|{
return|return
name|type
operator|.
name|cast
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|ReportData
operator|.
name|class
argument_list|)
operator|.
name|getRecipient
argument_list|()
argument_list|)
return|;
block|}
block|}
return|;
block|}
DECL|method|requestor ()
specifier|public
specifier|static
name|Expression
name|requestor
parameter_list|()
block|{
return|return
operator|new
name|Expression
argument_list|()
block|{
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|evaluate
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|type
parameter_list|)
block|{
return|return
name|type
operator|.
name|cast
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|ReportData
operator|.
name|class
argument_list|)
operator|.
name|getRequestor
argument_list|()
argument_list|)
return|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

