begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.example.websocket
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|websocket
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|twitter
operator|.
name|search
operator|.
name|TwitterSearchComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|websocket
operator|.
name|WebsocketComponent
import|;
end_import

begin_comment
comment|/**  * A Camel route that updates from twitter all tweets using having the search term.  * And post the changes to web-socket, that can be viewed from a web page  */
end_comment

begin_class
DECL|class|TwitterWebSocketRoute
specifier|public
class|class
name|TwitterWebSocketRoute
extends|extends
name|RouteBuilder
block|{
DECL|field|port
specifier|private
name|int
name|port
init|=
literal|9090
decl_stmt|;
DECL|field|searchTerm
specifier|private
name|String
name|searchTerm
decl_stmt|;
DECL|field|delay
specifier|private
name|int
name|delay
init|=
literal|5000
decl_stmt|;
DECL|field|consumerKey
specifier|private
name|String
name|consumerKey
decl_stmt|;
DECL|field|consumerSecret
specifier|private
name|String
name|consumerSecret
decl_stmt|;
DECL|field|accessToken
specifier|private
name|String
name|accessToken
decl_stmt|;
DECL|field|accessTokenSecret
specifier|private
name|String
name|accessTokenSecret
decl_stmt|;
DECL|method|getAccessToken ()
specifier|public
name|String
name|getAccessToken
parameter_list|()
block|{
return|return
name|accessToken
return|;
block|}
DECL|method|setAccessToken (String accessToken)
specifier|public
name|void
name|setAccessToken
parameter_list|(
name|String
name|accessToken
parameter_list|)
block|{
name|this
operator|.
name|accessToken
operator|=
name|accessToken
expr_stmt|;
block|}
DECL|method|getAccessTokenSecret ()
specifier|public
name|String
name|getAccessTokenSecret
parameter_list|()
block|{
return|return
name|accessTokenSecret
return|;
block|}
DECL|method|setAccessTokenSecret (String accessTokenSecret)
specifier|public
name|void
name|setAccessTokenSecret
parameter_list|(
name|String
name|accessTokenSecret
parameter_list|)
block|{
name|this
operator|.
name|accessTokenSecret
operator|=
name|accessTokenSecret
expr_stmt|;
block|}
DECL|method|getConsumerKey ()
specifier|public
name|String
name|getConsumerKey
parameter_list|()
block|{
return|return
name|consumerKey
return|;
block|}
DECL|method|setConsumerKey (String consumerKey)
specifier|public
name|void
name|setConsumerKey
parameter_list|(
name|String
name|consumerKey
parameter_list|)
block|{
name|this
operator|.
name|consumerKey
operator|=
name|consumerKey
expr_stmt|;
block|}
DECL|method|getConsumerSecret ()
specifier|public
name|String
name|getConsumerSecret
parameter_list|()
block|{
return|return
name|consumerSecret
return|;
block|}
DECL|method|setConsumerSecret (String consumerSecret)
specifier|public
name|void
name|setConsumerSecret
parameter_list|(
name|String
name|consumerSecret
parameter_list|)
block|{
name|this
operator|.
name|consumerSecret
operator|=
name|consumerSecret
expr_stmt|;
block|}
DECL|method|getDelay ()
specifier|public
name|int
name|getDelay
parameter_list|()
block|{
return|return
name|delay
return|;
block|}
DECL|method|setDelay (int delay)
specifier|public
name|void
name|setDelay
parameter_list|(
name|int
name|delay
parameter_list|)
block|{
name|this
operator|.
name|delay
operator|=
name|delay
expr_stmt|;
block|}
DECL|method|getSearchTerm ()
specifier|public
name|String
name|getSearchTerm
parameter_list|()
block|{
return|return
name|searchTerm
return|;
block|}
DECL|method|setSearchTerm (String searchTerm)
specifier|public
name|void
name|setSearchTerm
parameter_list|(
name|String
name|searchTerm
parameter_list|)
block|{
name|this
operator|.
name|searchTerm
operator|=
name|searchTerm
expr_stmt|;
block|}
DECL|method|getPort ()
specifier|public
name|int
name|getPort
parameter_list|()
block|{
return|return
name|port
return|;
block|}
DECL|method|setPort (int port)
specifier|public
name|void
name|setPort
parameter_list|(
name|int
name|port
parameter_list|)
block|{
name|this
operator|.
name|port
operator|=
name|port
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|configure ()
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
comment|// setup Camel web-socket component on the port we have defined
name|WebsocketComponent
name|wc
init|=
name|getContext
argument_list|()
operator|.
name|getComponent
argument_list|(
literal|"websocket"
argument_list|,
name|WebsocketComponent
operator|.
name|class
argument_list|)
decl_stmt|;
name|wc
operator|.
name|setPort
argument_list|(
name|port
argument_list|)
expr_stmt|;
comment|// we can serve static resources from the classpath: or file: system
name|wc
operator|.
name|setStaticResources
argument_list|(
literal|"classpath:."
argument_list|)
expr_stmt|;
comment|// setup Twitter component
name|TwitterSearchComponent
name|tc
init|=
name|getContext
argument_list|()
operator|.
name|getComponent
argument_list|(
literal|"twitter-search"
argument_list|,
name|TwitterSearchComponent
operator|.
name|class
argument_list|)
decl_stmt|;
name|tc
operator|.
name|setAccessToken
argument_list|(
name|accessToken
argument_list|)
expr_stmt|;
name|tc
operator|.
name|setAccessTokenSecret
argument_list|(
name|accessTokenSecret
argument_list|)
expr_stmt|;
name|tc
operator|.
name|setConsumerKey
argument_list|(
name|consumerKey
argument_list|)
expr_stmt|;
name|tc
operator|.
name|setConsumerSecret
argument_list|(
name|consumerSecret
argument_list|)
expr_stmt|;
comment|// poll twitter search for new tweets
name|fromF
argument_list|(
literal|"twitter-search://%s?delay=%s"
argument_list|,
name|searchTerm
argument_list|,
name|delay
argument_list|)
operator|.
name|to
argument_list|(
literal|"log:tweet"
argument_list|)
comment|// and push tweets to all web socket subscribers on camel-tweet
operator|.
name|to
argument_list|(
literal|"websocket:camel-tweet?sendToAll=true"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

