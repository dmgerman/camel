begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.example.restlet.jdbc
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|restlet
operator|.
name|jdbc
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_class
DECL|class|MyRouteConfig
specifier|public
class|class
name|MyRouteConfig
extends|extends
name|RouteBuilder
block|{
annotation|@
name|Override
DECL|method|configure ()
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|rest
argument_list|(
literal|"/persons"
argument_list|)
operator|.
name|post
argument_list|()
operator|.
name|to
argument_list|(
literal|"direct:postPersons"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|to
argument_list|(
literal|"direct:getPersons"
argument_list|)
operator|.
name|get
argument_list|(
literal|"/{personId}"
argument_list|)
operator|.
name|to
argument_list|(
literal|"direct:getPersonId"
argument_list|)
operator|.
name|put
argument_list|(
literal|"/{personId}"
argument_list|)
operator|.
name|to
argument_list|(
literal|"direct:putPersonId"
argument_list|)
operator|.
name|delete
argument_list|(
literal|"/{personId}"
argument_list|)
operator|.
name|to
argument_list|(
literal|"direct:deletePersonId"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:postPersons"
argument_list|)
operator|.
name|setBody
argument_list|(
name|simple
argument_list|(
literal|"insert into person(firstName, lastName) values('${header.firstName}','${header.lastName}')"
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"jdbc:dataSource"
argument_list|)
operator|.
name|setBody
argument_list|(
name|simple
argument_list|(
literal|"select * from person where id in (select max(id) from person)"
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"jdbc:dataSource"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:getPersons"
argument_list|)
operator|.
name|setBody
argument_list|(
name|simple
argument_list|(
literal|"select * from person"
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"jdbc:dataSource"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:getPersonId"
argument_list|)
operator|.
name|setBody
argument_list|(
name|simple
argument_list|(
literal|"select * from person where id = ${header.personId}"
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"jdbc:dataSource"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:putPersonId"
argument_list|)
operator|.
name|setBody
argument_list|(
name|simple
argument_list|(
literal|"update person set firstName='${header.firstName}', lastName='${header.lastName}' where id = ${header.personId}"
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"jdbc:dataSource"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:deletePersonId"
argument_list|)
operator|.
name|setBody
argument_list|(
name|simple
argument_list|(
literal|"delete from person where id = ${header.personId}"
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"jdbc:dataSource"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

