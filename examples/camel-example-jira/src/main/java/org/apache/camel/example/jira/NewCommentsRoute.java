begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.example.jira
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|jira
package|;
end_package

begin_import
import|import
name|com
operator|.
name|atlassian
operator|.
name|jira
operator|.
name|rest
operator|.
name|client
operator|.
name|api
operator|.
name|domain
operator|.
name|Comment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Component
import|;
end_import

begin_class
annotation|@
name|Component
DECL|class|NewCommentsRoute
specifier|public
class|class
name|NewCommentsRoute
extends|extends
name|RouteBuilder
block|{
DECL|field|logger
specifier|private
specifier|static
specifier|final
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|NewCommentsRoute
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
DECL|method|configure ()
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|logger
operator|.
name|info
argument_list|(
literal|">>>>>>>>>>>>>>>>>>>>> jira example - retrieve only new comments"
argument_list|)
expr_stmt|;
comment|// change the fields accordinly to your target jira server
name|from
argument_list|(
literal|"jira://newComments?jql=RAW(project=COM AND resolution = Unresolved)&delay=4000"
argument_list|)
operator|.
name|process
argument_list|(
name|exchange
lambda|->
block|{
name|Comment
name|comment
init|=
operator|(
name|Comment
operator|)
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"new jira comment id: {} - by: {}: {}"
argument_list|,
name|comment
operator|.
name|getId
argument_list|()
argument_list|,
name|comment
operator|.
name|getAuthor
argument_list|()
operator|.
name|getDisplayName
argument_list|()
argument_list|,
name|comment
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
block|}
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:result"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

