begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.example.gauth
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|gauth
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|client
operator|.
name|authn
operator|.
name|oauth
operator|.
name|OAuthHmacSha1Signer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|client
operator|.
name|authn
operator|.
name|oauth
operator|.
name|OAuthParameters
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|client
operator|.
name|calendar
operator|.
name|CalendarService
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|data
operator|.
name|calendar
operator|.
name|CalendarEntry
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|data
operator|.
name|calendar
operator|.
name|CalendarFeed
import|;
end_import

begin_comment
comment|/**  * Facade for getting calendar names from the Google Calendar API. The access is made on  * behalf of a user by providing an OAuth access token and access token secret.  */
end_comment

begin_class
DECL|class|TutorialService
specifier|public
class|class
name|TutorialService
block|{
DECL|field|credentials
specifier|private
name|Properties
name|credentials
decl_stmt|;
comment|/**      * Sets properties that contains the application's consumer key and consumer secret.      *      * @param credentials consumer key and consumer secret.      */
DECL|method|setCredentials (Properties credentials)
specifier|public
name|void
name|setCredentials
parameter_list|(
name|Properties
name|credentials
parameter_list|)
block|{
name|this
operator|.
name|credentials
operator|=
name|credentials
expr_stmt|;
block|}
comment|/**      * Obtains a list of names of a user's public and private calendars from the Google      * Calendar API.      *       * @param accessToken OAuth access token.      * @param accessTokenSecret OAuth access token secret.      * @return list of names of a user's public and private calendars.      */
DECL|method|getCalendarNames (String accessToken, String accessTokenSecret)
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getCalendarNames
parameter_list|(
name|String
name|accessToken
parameter_list|,
name|String
name|accessTokenSecret
parameter_list|)
throws|throws
name|Exception
block|{
name|CalendarService
name|calendarService
init|=
operator|new
name|CalendarService
argument_list|(
literal|"apache-camel-2.3"
argument_list|)
decl_stmt|;
name|OAuthParameters
name|params
init|=
name|getOAuthParams
argument_list|(
name|accessToken
argument_list|,
name|accessTokenSecret
argument_list|)
decl_stmt|;
name|calendarService
operator|.
name|setOAuthCredentials
argument_list|(
name|params
argument_list|,
operator|new
name|OAuthHmacSha1Signer
argument_list|()
argument_list|)
expr_stmt|;
name|URL
name|feedUrl
init|=
operator|new
name|URL
argument_list|(
literal|"http://www.google.com/calendar/feeds/default/"
argument_list|)
decl_stmt|;
name|CalendarFeed
name|resultFeed
init|=
name|calendarService
operator|.
name|getFeed
argument_list|(
name|feedUrl
argument_list|,
name|CalendarFeed
operator|.
name|class
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|resultFeed
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|CalendarEntry
name|entry
init|=
name|resultFeed
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|result
operator|.
name|add
argument_list|(
name|entry
operator|.
name|getTitle
argument_list|()
operator|.
name|getPlainText
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
DECL|method|getOAuthParams (String accessToken, String accessTokenSecret)
specifier|private
name|OAuthParameters
name|getOAuthParams
parameter_list|(
name|String
name|accessToken
parameter_list|,
name|String
name|accessTokenSecret
parameter_list|)
block|{
name|OAuthParameters
name|params
init|=
operator|new
name|OAuthParameters
argument_list|()
decl_stmt|;
name|params
operator|.
name|setOAuthConsumerKey
argument_list|(
name|credentials
operator|.
name|getProperty
argument_list|(
literal|"consumer.key"
argument_list|)
argument_list|)
expr_stmt|;
name|params
operator|.
name|setOAuthConsumerSecret
argument_list|(
name|credentials
operator|.
name|getProperty
argument_list|(
literal|"consumer.secret"
argument_list|)
argument_list|)
expr_stmt|;
name|params
operator|.
name|setOAuthToken
argument_list|(
name|accessToken
argument_list|)
expr_stmt|;
name|params
operator|.
name|setOAuthTokenSecret
argument_list|(
name|accessTokenSecret
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
block|}
end_class

end_unit

