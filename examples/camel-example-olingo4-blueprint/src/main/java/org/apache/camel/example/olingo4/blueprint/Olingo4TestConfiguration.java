begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.example.olingo4.blueprint
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|olingo4
operator|.
name|blueprint
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|olingo4
operator|.
name|Olingo4Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpHost
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpGet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpUriRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|CloseableHttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|HttpClients
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|protocol
operator|.
name|BasicHttpContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|protocol
operator|.
name|HttpContext
import|;
end_import

begin_class
DECL|class|Olingo4TestConfiguration
specifier|public
class|class
name|Olingo4TestConfiguration
extends|extends
name|Olingo4Configuration
block|{
DECL|method|Olingo4TestConfiguration ()
specifier|public
name|Olingo4TestConfiguration
parameter_list|()
block|{
name|setServiceUri
argument_list|(
name|getTestServiceUri
argument_list|(
literal|"http://services.odata.org/TripPinRESTierService"
argument_list|)
argument_list|)
expr_stmt|;
name|setContentType
argument_list|(
literal|"application/json;charset=utf-8"
argument_list|)
expr_stmt|;
block|}
DECL|method|getTestServiceUri (String baseUrl)
specifier|protected
name|String
name|getTestServiceUri
parameter_list|(
name|String
name|baseUrl
parameter_list|)
block|{
name|CloseableHttpClient
name|httpclient
init|=
name|HttpClients
operator|.
name|createDefault
argument_list|()
decl_stmt|;
name|HttpGet
name|httpGet
init|=
operator|new
name|HttpGet
argument_list|(
name|baseUrl
argument_list|)
decl_stmt|;
name|HttpContext
name|httpContext
init|=
operator|new
name|BasicHttpContext
argument_list|()
decl_stmt|;
try|try
block|{
name|httpclient
operator|.
name|execute
argument_list|(
name|httpGet
argument_list|,
name|httpContext
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Error getting OData Test service URI using base URL:"
operator|+
name|baseUrl
argument_list|)
throw|;
block|}
name|HttpUriRequest
name|currentReq
init|=
operator|(
name|HttpUriRequest
operator|)
name|httpContext
operator|.
name|getAttribute
argument_list|(
literal|"http.request"
argument_list|)
decl_stmt|;
name|HttpHost
name|currentHost
init|=
operator|(
name|HttpHost
operator|)
name|httpContext
operator|.
name|getAttribute
argument_list|(
literal|"http.target_host"
argument_list|)
decl_stmt|;
name|String
name|currentUrl
init|=
name|currentHost
operator|.
name|toURI
argument_list|()
operator|+
name|currentReq
operator|.
name|getURI
argument_list|()
decl_stmt|;
return|return
name|currentUrl
return|;
block|}
block|}
end_class

end_unit

