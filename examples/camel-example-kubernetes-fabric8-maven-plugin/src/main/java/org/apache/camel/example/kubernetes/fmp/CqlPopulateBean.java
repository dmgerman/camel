begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.example.kubernetes.fmp
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|kubernetes
operator|.
name|fmp
package|;
end_package

begin_import
import|import
name|com
operator|.
name|datastax
operator|.
name|driver
operator|.
name|core
operator|.
name|Cluster
import|;
end_import

begin_import
import|import
name|com
operator|.
name|datastax
operator|.
name|driver
operator|.
name|core
operator|.
name|Session
import|;
end_import

begin_class
DECL|class|CqlPopulateBean
specifier|public
class|class
name|CqlPopulateBean
block|{
DECL|method|populate ()
specifier|public
name|void
name|populate
parameter_list|()
block|{
name|Cluster
name|cluster
init|=
name|Cluster
operator|.
name|builder
argument_list|()
operator|.
name|addContactPoint
argument_list|(
literal|"cassandra"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Session
name|session
init|=
name|cluster
operator|.
name|connect
argument_list|()
decl_stmt|;
name|session
operator|.
name|execute
argument_list|(
literal|"create keyspace if not exists test with replication = {'class':'SimpleStrategy', 'replication_factor':1};"
argument_list|)
expr_stmt|;
name|session
operator|.
name|execute
argument_list|(
literal|"create table if not exists test.users ( id int primary key, name text );"
argument_list|)
expr_stmt|;
name|session
operator|.
name|execute
argument_list|(
literal|"insert into test.users (id,name) values (1, 'oscerd') if not exists;"
argument_list|)
expr_stmt|;
name|session
operator|.
name|close
argument_list|()
expr_stmt|;
name|cluster
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

