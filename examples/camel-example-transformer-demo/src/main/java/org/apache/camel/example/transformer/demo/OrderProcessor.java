begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.example.transformer.demo
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|transformer
operator|.
name|demo
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_comment
comment|/**  * A processor which receives a order request and return a response.  *<p/>  */
end_comment

begin_class
DECL|class|OrderProcessor
specifier|public
class|class
name|OrderProcessor
implements|implements
name|Processor
block|{
DECL|method|process (Exchange exchange)
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
name|Order
name|order
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Order
operator|.
name|class
argument_list|)
decl_stmt|;
name|OrderResponse
name|answer
init|=
operator|new
name|OrderResponse
argument_list|()
operator|.
name|setAccepted
argument_list|(
literal|true
argument_list|)
operator|.
name|setOrderId
argument_list|(
name|order
operator|.
name|getOrderId
argument_list|()
argument_list|)
operator|.
name|setDescription
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"Order accepted:[item='%s' quantity='%s']"
argument_list|,
name|order
operator|.
name|getItemId
argument_list|()
argument_list|,
name|order
operator|.
name|getQuantity
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|answer
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

