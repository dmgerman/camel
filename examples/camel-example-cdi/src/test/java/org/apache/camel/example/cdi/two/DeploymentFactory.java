begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.example.cdi.two
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|cdi
operator|.
name|two
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|cdi
operator|.
name|ArchiveUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|arquillian
operator|.
name|container
operator|.
name|test
operator|.
name|api
operator|.
name|Deployment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|shrinkwrap
operator|.
name|api
operator|.
name|Archive
import|;
end_import

begin_comment
comment|/**  *  Factory to create archive (jar, war)  */
end_comment

begin_class
DECL|class|DeploymentFactory
specifier|public
class|class
name|DeploymentFactory
block|{
annotation|@
name|Deployment
DECL|method|createArchive ()
specifier|public
specifier|static
name|Archive
argument_list|<
name|?
argument_list|>
name|createArchive
parameter_list|()
block|{
name|String
name|deploymentType
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"arquillian"
argument_list|)
decl_stmt|;
name|Archive
argument_list|<
name|?
argument_list|>
name|archive
init|=
literal|null
decl_stmt|;
comment|// TODO FIND A BETTER WAY TO PASS PACKAGES
name|String
index|[]
name|packages
init|=
block|{
literal|"org.apache.camel.example.cdi"
block|,
literal|"org.apache.camel.example.cdi.two"
block|}
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Deployment type : "
operator|+
name|deploymentType
argument_list|)
expr_stmt|;
if|if
condition|(
name|deploymentType
operator|.
name|equals
argument_list|(
literal|"weld-ee-embedded-1.1"
argument_list|)
condition|)
block|{
name|archive
operator|=
name|ArchiveUtil
operator|.
name|createJarArchive
argument_list|(
name|packages
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|deploymentType
operator|.
name|equals
argument_list|(
literal|"jbossas-managed"
argument_list|)
condition|)
block|{
name|archive
operator|=
name|ArchiveUtil
operator|.
name|createWarArchive
argument_list|(
name|packages
argument_list|)
expr_stmt|;
block|}
return|return
name|archive
return|;
block|}
block|}
end_class

end_unit

