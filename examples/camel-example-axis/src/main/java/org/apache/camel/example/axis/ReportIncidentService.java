begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.example.axis
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|axis
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|EndpointInject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ProducerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|reportincident
operator|.
name|InputReportIncident
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|reportincident
operator|.
name|OutputReportIncident
import|;
end_import

begin_comment
comment|/**  * Our real service that is not tied to Axis  */
end_comment

begin_class
DECL|class|ReportIncidentService
specifier|public
class|class
name|ReportIncidentService
block|{
annotation|@
name|EndpointInject
argument_list|(
name|name
operator|=
literal|"backup"
argument_list|)
DECL|field|template
specifier|private
name|ProducerTemplate
name|template
decl_stmt|;
DECL|method|reportIncident (InputReportIncident parameters)
specifier|public
name|OutputReportIncident
name|reportIncident
parameter_list|(
name|InputReportIncident
name|parameters
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Hello ReportIncidentService is called from "
operator|+
name|parameters
operator|.
name|getGivenName
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|data
init|=
name|parameters
operator|.
name|getDetails
argument_list|()
decl_stmt|;
comment|// store the data as a file
name|String
name|filename
init|=
name|parameters
operator|.
name|getIncidentId
argument_list|()
operator|+
literal|".txt"
decl_stmt|;
comment|// send the data to the endpoint and the header contains what filename it should be stored as
name|template
operator|.
name|sendBodyAndHeader
argument_list|(
name|data
argument_list|,
literal|"CamelFileName"
argument_list|,
name|filename
argument_list|)
expr_stmt|;
name|OutputReportIncident
name|out
init|=
operator|new
name|OutputReportIncident
argument_list|()
decl_stmt|;
name|out
operator|.
name|setCode
argument_list|(
literal|"OK"
argument_list|)
expr_stmt|;
return|return
name|out
return|;
block|}
DECL|method|setTemplate (ProducerTemplate template)
specifier|public
name|void
name|setTemplate
parameter_list|(
name|ProducerTemplate
name|template
parameter_list|)
block|{
name|this
operator|.
name|template
operator|=
name|template
expr_stmt|;
block|}
block|}
end_class

end_unit

