begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.example.axis
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|axis
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|reportincident
operator|.
name|InputReportIncident
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|reportincident
operator|.
name|OutputReportIncident
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|junit38
operator|.
name|AbstractJUnit38SpringContextTests
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_comment
comment|/**  * Unit test of service  */
end_comment

begin_class
annotation|@
name|ContextConfiguration
argument_list|(
name|locations
operator|=
literal|"classpath:axis-example-context.xml"
argument_list|)
DECL|class|ReportIncidentServiceTest
specifier|public
class|class
name|ReportIncidentServiceTest
extends|extends
name|AbstractJUnit38SpringContextTests
block|{
DECL|method|testIncident ()
specifier|public
name|void
name|testIncident
parameter_list|()
block|{
name|ReportIncidentService
name|service
init|=
operator|(
name|ReportIncidentService
operator|)
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"incidentservice"
argument_list|)
decl_stmt|;
name|InputReportIncident
name|input
init|=
name|createDummyIncident
argument_list|()
decl_stmt|;
name|OutputReportIncident
name|output
init|=
name|service
operator|.
name|reportIncident
argument_list|(
name|input
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"OK"
argument_list|,
name|output
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
comment|// should generate a file also
name|File
name|file
init|=
operator|new
name|File
argument_list|(
literal|"target/"
operator|+
name|input
operator|.
name|getIncidentId
argument_list|()
operator|+
literal|".txt"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"File should exists"
argument_list|,
name|file
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createDummyIncident ()
specifier|protected
name|InputReportIncident
name|createDummyIncident
parameter_list|()
block|{
name|InputReportIncident
name|input
init|=
operator|new
name|InputReportIncident
argument_list|()
decl_stmt|;
name|input
operator|.
name|setEmail
argument_list|(
literal|"davsclaus@apache.org"
argument_list|)
expr_stmt|;
name|input
operator|.
name|setIncidentId
argument_list|(
literal|"12345678"
argument_list|)
expr_stmt|;
name|input
operator|.
name|setIncidentDate
argument_list|(
literal|"2008-07-13"
argument_list|)
expr_stmt|;
name|input
operator|.
name|setPhone
argument_list|(
literal|"+45 2962 7576"
argument_list|)
expr_stmt|;
name|input
operator|.
name|setSummary
argument_list|(
literal|"Failed operation"
argument_list|)
expr_stmt|;
name|input
operator|.
name|setDetails
argument_list|(
literal|"The wrong foot was operated."
argument_list|)
expr_stmt|;
name|input
operator|.
name|setFamilyName
argument_list|(
literal|"Ibsen"
argument_list|)
expr_stmt|;
name|input
operator|.
name|setGivenName
argument_list|(
literal|"Claus"
argument_list|)
expr_stmt|;
return|return
name|input
return|;
block|}
block|}
end_class

end_unit

