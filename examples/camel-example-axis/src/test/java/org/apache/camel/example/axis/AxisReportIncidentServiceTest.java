begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.example.axis
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|axis
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|reportincident
operator|.
name|InputReportIncident
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|reportincident
operator|.
name|OutputReportIncident
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|reportincident
operator|.
name|ReportIncidentService_PortType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|reportincident
operator|.
name|ReportIncidentService_ServiceLocator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|jetty
operator|.
name|Connector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|jetty
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|jetty
operator|.
name|nio
operator|.
name|SelectChannelConnector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|jetty
operator|.
name|webapp
operator|.
name|WebAppContext
import|;
end_import

begin_comment
comment|/**  * Unit test with embedded Jetty to execute a webservice request using Axis  */
end_comment

begin_class
DECL|class|AxisReportIncidentServiceTest
specifier|public
class|class
name|AxisReportIncidentServiceTest
extends|extends
name|TestCase
block|{
DECL|field|server
specifier|private
name|Server
name|server
decl_stmt|;
DECL|method|startJetty ()
specifier|private
name|void
name|startJetty
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create an embedded Jetty server
name|server
operator|=
operator|new
name|Server
argument_list|()
expr_stmt|;
comment|// add a listener on port 8080 on localhost (127.0.0.1)
name|Connector
name|connector
init|=
operator|new
name|SelectChannelConnector
argument_list|()
decl_stmt|;
name|connector
operator|.
name|setPort
argument_list|(
literal|9080
argument_list|)
expr_stmt|;
name|connector
operator|.
name|setHost
argument_list|(
literal|"127.0.0.1"
argument_list|)
expr_stmt|;
name|server
operator|.
name|addConnector
argument_list|(
name|connector
argument_list|)
expr_stmt|;
comment|// add our web context path
name|WebAppContext
name|wac
init|=
operator|new
name|WebAppContext
argument_list|()
decl_stmt|;
name|wac
operator|.
name|setContextPath
argument_list|(
literal|"/unittest"
argument_list|)
expr_stmt|;
comment|// set the location of the exploded webapp where WEB-INF is located
comment|// this is a nice feature of Jetty where we can point to src/main/webapp
name|wac
operator|.
name|setWar
argument_list|(
literal|"./src/main/webapp"
argument_list|)
expr_stmt|;
name|server
operator|.
name|setHandler
argument_list|(
name|wac
argument_list|)
expr_stmt|;
comment|// then start Jetty
name|server
operator|.
name|setStopAtShutdown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setUp ()
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|startJetty
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|tearDown ()
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|method|testReportIncidentWithAxis ()
specifier|public
name|void
name|testReportIncidentWithAxis
parameter_list|()
throws|throws
name|Exception
block|{
comment|// the url to the axis webservice exposed by jetty
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
literal|"http://localhost:9080/unittest/services/ReportIncidentPort"
argument_list|)
decl_stmt|;
comment|// Axis stuff to get the port where we can send the webservice request
name|ReportIncidentService_ServiceLocator
name|locator
init|=
operator|new
name|ReportIncidentService_ServiceLocator
argument_list|()
decl_stmt|;
name|ReportIncidentService_PortType
name|port
init|=
name|locator
operator|.
name|getReportIncidentPort
argument_list|(
name|url
argument_list|)
decl_stmt|;
comment|// create input to send
name|InputReportIncident
name|input
init|=
name|createDummyIncident
argument_list|()
decl_stmt|;
comment|// send the webservice and get the response
name|OutputReportIncident
name|output
init|=
name|port
operator|.
name|reportIncident
argument_list|(
name|input
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"OK"
argument_list|,
name|output
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
comment|// should generate a file also
name|File
name|file
init|=
operator|new
name|File
argument_list|(
literal|"target/"
operator|+
name|input
operator|.
name|getIncidentId
argument_list|()
operator|+
literal|".txt"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"File should exists"
argument_list|,
name|file
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createDummyIncident ()
specifier|protected
name|InputReportIncident
name|createDummyIncident
parameter_list|()
block|{
name|InputReportIncident
name|input
init|=
operator|new
name|InputReportIncident
argument_list|()
decl_stmt|;
name|input
operator|.
name|setEmail
argument_list|(
literal|"davsclaus@apache.org"
argument_list|)
expr_stmt|;
name|input
operator|.
name|setIncidentId
argument_list|(
literal|"12345678"
argument_list|)
expr_stmt|;
name|input
operator|.
name|setIncidentDate
argument_list|(
literal|"2008-07-13"
argument_list|)
expr_stmt|;
name|input
operator|.
name|setPhone
argument_list|(
literal|"+45 2962 7576"
argument_list|)
expr_stmt|;
name|input
operator|.
name|setSummary
argument_list|(
literal|"Failed operation"
argument_list|)
expr_stmt|;
name|input
operator|.
name|setDetails
argument_list|(
literal|"The wrong foot was operated."
argument_list|)
expr_stmt|;
name|input
operator|.
name|setFamilyName
argument_list|(
literal|"Ibsen"
argument_list|)
expr_stmt|;
name|input
operator|.
name|setGivenName
argument_list|(
literal|"Claus"
argument_list|)
expr_stmt|;
return|return
name|input
return|;
block|}
block|}
end_class

end_unit

