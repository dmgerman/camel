begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|sample.camel
package|package
name|sample
operator|.
name|camel
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|jms
operator|.
name|JmsConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Bean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Component
import|;
end_import

begin_class
annotation|@
name|Component
DECL|class|SampleAutowiredAmqpRoute
specifier|public
class|class
name|SampleAutowiredAmqpRoute
extends|extends
name|RouteBuilder
block|{
DECL|field|amqpConnectionFactory
annotation|@
name|Autowired
name|JmsConnectionFactory
name|amqpConnectionFactory
decl_stmt|;
annotation|@
name|Bean
DECL|method|amqpConnection ()
specifier|public
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|amqp
operator|.
name|AMQPComponent
name|amqpConnection
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|amqp
operator|.
name|AMQPComponent
name|amqp
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|amqp
operator|.
name|AMQPComponent
argument_list|()
decl_stmt|;
name|amqp
operator|.
name|setConnectionFactory
argument_list|(
name|amqpConnectionFactory
argument_list|)
expr_stmt|;
return|return
name|amqp
return|;
block|}
annotation|@
name|Override
DECL|method|configure ()
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
literal|"file:src/main/data?noop=true"
argument_list|)
operator|.
name|to
argument_list|(
literal|"amqp:queue:SCIENCEQUEUE"
argument_list|)
expr_stmt|;
comment|/*from("timer:bar")             .setBody(constant("Hello from Camel"))             .to("amqp:queue:SCIENCEQUEUE");*/
block|}
block|}
end_class

end_unit

