begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|sample.camel
package|package
name|sample
operator|.
name|camel
package|;
end_package

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Value
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Bean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Configuration
import|;
end_import

begin_class
annotation|@
name|Configuration
DECL|class|AmqpConfig
specifier|public
class|class
name|AmqpConfig
block|{
annotation|@
name|Value
argument_list|(
literal|"${AMQP_HOST}"
argument_list|)
DECL|field|amqpHost
specifier|private
name|String
name|amqpHost
decl_stmt|;
annotation|@
name|Value
argument_list|(
literal|"${AMQP_SERVICE_PORT}"
argument_list|)
DECL|field|amqpPort
specifier|private
name|String
name|amqpPort
decl_stmt|;
annotation|@
name|Value
argument_list|(
literal|"${AMQP_SERVICE_USERNAME}"
argument_list|)
DECL|field|userName
specifier|private
name|String
name|userName
decl_stmt|;
annotation|@
name|Value
argument_list|(
literal|"${AMQP_SERVICE_PASSWORD}"
argument_list|)
DECL|field|pass
specifier|private
name|String
name|pass
decl_stmt|;
annotation|@
name|Value
argument_list|(
literal|"${AMQP_REMOTE_URI}"
argument_list|)
DECL|field|remoteUri
specifier|private
name|String
name|remoteUri
decl_stmt|;
DECL|method|getAmqpHost ()
specifier|public
name|String
name|getAmqpHost
parameter_list|()
block|{
return|return
name|amqpHost
return|;
block|}
DECL|method|setAmqpHost (String amqpHost)
specifier|public
name|void
name|setAmqpHost
parameter_list|(
name|String
name|amqpHost
parameter_list|)
block|{
name|this
operator|.
name|amqpHost
operator|=
name|amqpHost
expr_stmt|;
block|}
DECL|method|getAmqpPort ()
specifier|public
name|String
name|getAmqpPort
parameter_list|()
block|{
return|return
name|amqpPort
return|;
block|}
DECL|method|setAmqpPort (String amqpPort)
specifier|public
name|void
name|setAmqpPort
parameter_list|(
name|String
name|amqpPort
parameter_list|)
block|{
name|this
operator|.
name|amqpPort
operator|=
name|amqpPort
expr_stmt|;
block|}
DECL|method|getUserName ()
specifier|public
name|String
name|getUserName
parameter_list|()
block|{
return|return
name|userName
return|;
block|}
DECL|method|setUserName (String userName)
specifier|public
name|void
name|setUserName
parameter_list|(
name|String
name|userName
parameter_list|)
block|{
name|this
operator|.
name|userName
operator|=
name|userName
expr_stmt|;
block|}
DECL|method|getPass ()
specifier|public
name|String
name|getPass
parameter_list|()
block|{
return|return
name|pass
return|;
block|}
DECL|method|setPass (String pass)
specifier|public
name|void
name|setPass
parameter_list|(
name|String
name|pass
parameter_list|)
block|{
name|this
operator|.
name|pass
operator|=
name|pass
expr_stmt|;
block|}
DECL|method|getRemoteUri ()
specifier|public
name|String
name|getRemoteUri
parameter_list|()
block|{
return|return
name|remoteUri
return|;
block|}
DECL|method|setRemoteUri (String remoteUri)
specifier|public
name|void
name|setRemoteUri
parameter_list|(
name|String
name|remoteUri
parameter_list|)
block|{
name|this
operator|.
name|remoteUri
operator|=
name|remoteUri
expr_stmt|;
block|}
annotation|@
name|Bean
DECL|method|amqpConnectionFactory ()
specifier|public
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|jms
operator|.
name|JmsConnectionFactory
name|amqpConnectionFactory
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|jms
operator|.
name|JmsConnectionFactory
name|jmsConnectionFactory
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|qpid
operator|.
name|jms
operator|.
name|JmsConnectionFactory
argument_list|()
decl_stmt|;
name|jmsConnectionFactory
operator|.
name|setRemoteURI
argument_list|(
name|remoteUri
argument_list|)
expr_stmt|;
name|jmsConnectionFactory
operator|.
name|setUsername
argument_list|(
name|userName
argument_list|)
expr_stmt|;
name|jmsConnectionFactory
operator|.
name|setPassword
argument_list|(
name|pass
argument_list|)
expr_stmt|;
return|return
name|jmsConnectionFactory
return|;
block|}
block|}
end_class

end_unit

