begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.example.cdi.test
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|cdi
operator|.
name|test
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|PostConstruct
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|context
operator|.
name|ApplicationScoped
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|Default
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|cdi
operator|.
name|ContextName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultManagementStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|cdi
operator|.
name|CamelCdiRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|CamelCdiRunner
operator|.
name|class
argument_list|)
DECL|class|CustomContextTest
specifier|public
class|class
name|CustomContextTest
block|{
annotation|@
name|Test
DECL|method|testCustomContext (CamelContext context)
specifier|public
name|void
name|testCustomContext
parameter_list|(
name|CamelContext
name|context
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"Management strategy is incorrect!"
argument_list|,
name|context
operator|.
name|getManagementStrategy
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|,
name|DefaultManagementStrategy
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Default
annotation|@
name|ContextName
argument_list|(
literal|"camel-test-cdi"
argument_list|)
annotation|@
name|ApplicationScoped
DECL|class|CustomCamelContext
specifier|static
class|class
name|CustomCamelContext
extends|extends
name|DefaultCamelContext
block|{
annotation|@
name|PostConstruct
DECL|method|customize ()
name|void
name|customize
parameter_list|()
block|{
name|disableJMX
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

