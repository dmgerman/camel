begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.example.any23
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|any23
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|dataformat
operator|.
name|Any23Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|rdf4j
operator|.
name|model
operator|.
name|IRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|rdf4j
operator|.
name|model
operator|.
name|Model
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|rdf4j
operator|.
name|model
operator|.
name|Value
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|rdf4j
operator|.
name|model
operator|.
name|ValueFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|rdf4j
operator|.
name|model
operator|.
name|impl
operator|.
name|SimpleValueFactory
import|;
end_import

begin_class
DECL|class|Any23RouteBuilder
specifier|public
class|class
name|Any23RouteBuilder
extends|extends
name|RouteBuilder
block|{
DECL|field|BASEURI
specifier|private
specifier|static
specifier|final
name|String
name|BASEURI
init|=
literal|"http://mock.foo/bar"
decl_stmt|;
annotation|@
name|Override
DECL|method|configure ()
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"direct:start"
argument_list|)
operator|.
name|log
argument_list|(
literal|"Querying dbpedia:Ecuador "
argument_list|)
operator|.
name|to
argument_list|(
literal|"http://dbpedia.org/page/Ecuador"
argument_list|)
operator|.
name|unmarshal
argument_list|()
operator|.
name|any23
argument_list|(
name|BASEURI
argument_list|)
operator|.
name|process
argument_list|(
operator|new
name|Processor
argument_list|()
block|{
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|ValueFactory
name|vf
init|=
name|SimpleValueFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|Model
name|model
init|=
operator|(
name|Model
operator|)
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
comment|//Selecting the leaders of Ecuador
name|IRI
name|propertyLeader
init|=
name|vf
operator|.
name|createIRI
argument_list|(
literal|"http://dbpedia.org/ontology/leader"
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|Value
argument_list|>
name|leadersResources
init|=
name|model
operator|.
name|filter
argument_list|(
literal|null
argument_list|,
name|propertyLeader
argument_list|,
literal|null
argument_list|)
operator|.
name|objects
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|leadersList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Value
name|leader
range|:
name|leadersResources
control|)
block|{
comment|// Transform the leader resource (URI) into  an broweable URL.
comment|// For instance:
comment|// http://dbpedia.org/resource/Oswaldo_Guayasam%C3%ADn  --> http://dbpedia.org/page/Oswaldo_Guayasam%C3%ADn
name|String
name|aLeader
init|=
name|leader
operator|.
name|stringValue
argument_list|()
operator|.
name|replace
argument_list|(
literal|"resource"
argument_list|,
literal|"page"
argument_list|)
decl_stmt|;
name|leadersList
operator|.
name|add
argument_list|(
name|aLeader
argument_list|)
expr_stmt|;
block|}
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|leadersList
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
operator|.
name|log
argument_list|(
literal|" Content: ${body} "
argument_list|)
comment|//Process each leader in a separate route.
comment|//In order to extract more information.
operator|.
name|split
argument_list|(
name|simple
argument_list|(
literal|"${body}"
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"direct:extractMoreData"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:extractMoreData"
argument_list|)
operator|.
name|log
argument_list|(
literal|"Split ${body}"
argument_list|)
operator|.
name|convertBodyTo
argument_list|(
name|String
operator|.
name|class
argument_list|)
operator|.
name|toD
argument_list|(
literal|"${body}"
argument_list|)
operator|.
name|unmarshal
argument_list|()
comment|//Extract RDF data of the leaders as JSONLD
operator|.
name|any23
argument_list|(
name|BASEURI
argument_list|,
name|Any23Type
operator|.
name|JSONLD
argument_list|)
operator|.
name|log
argument_list|(
literal|" Result : ${body} "
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:result"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

