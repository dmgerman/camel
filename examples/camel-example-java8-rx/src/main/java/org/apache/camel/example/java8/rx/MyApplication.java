begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.example.java8.rx
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|java8
operator|.
name|rx
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ProducerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|main
operator|.
name|Main
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|main
operator|.
name|MainSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|main
operator|.
name|MainListenerSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|rx
operator|.
name|ReactiveCamel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|rx
operator|.
name|Observable
import|;
end_import

begin_class
DECL|class|MyApplication
specifier|public
specifier|final
class|class
name|MyApplication
extends|extends
name|Main
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MyApplication
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|method|MyApplication ()
specifier|private
name|MyApplication
parameter_list|()
block|{     }
DECL|method|main (String[] args)
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|Main
name|main
init|=
operator|new
name|Main
argument_list|()
decl_stmt|;
name|main
operator|.
name|addMainListener
argument_list|(
operator|new
name|MyCamelContextConfigurer
argument_list|()
argument_list|)
expr_stmt|;
name|main
operator|.
name|addRouteBuilder
argument_list|(
operator|new
name|MyRouteBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|main
operator|.
name|run
argument_list|(
name|args
argument_list|)
expr_stmt|;
block|}
comment|// ********************
comment|// Helpers
comment|// ********************
DECL|class|MyRouteBuilder
specifier|private
specifier|static
class|class
name|MyRouteBuilder
extends|extends
name|RouteBuilder
block|{
annotation|@
name|Override
DECL|method|configure ()
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
literal|"timer:rx?period=1000"
argument_list|)
operator|.
name|routeId
argument_list|(
literal|"orders"
argument_list|)
operator|.
name|transform
argument_list|()
operator|.
name|exchange
argument_list|(
name|MyOrder
operator|::
operator|new
argument_list|)
operator|.
name|to
argument_list|(
literal|"seda:orders"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"seda:large-orders"
argument_list|)
operator|.
name|routeId
argument_list|(
literal|"large-orders"
argument_list|)
operator|.
name|log
argument_list|(
literal|"Got ${body}"
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|MyCamelContextConfigurer
specifier|private
specifier|static
class|class
name|MyCamelContextConfigurer
extends|extends
name|MainListenerSupport
block|{
annotation|@
name|Override
DECL|method|configure (final CamelContext context)
specifier|public
name|void
name|configure
parameter_list|(
specifier|final
name|CamelContext
name|context
parameter_list|)
block|{
name|ReactiveCamel
name|rx
init|=
operator|new
name|ReactiveCamel
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|Observable
argument_list|<
name|String
argument_list|>
name|orders
init|=
name|rx
operator|.
name|toObservable
argument_list|(
literal|"seda:orders"
argument_list|,
name|MyOrder
operator|.
name|class
argument_list|)
operator|.
name|filter
argument_list|(
name|o
lambda|->
name|o
operator|.
name|getAmount
argument_list|()
operator|>
literal|2
argument_list|)
operator|.
name|map
argument_list|(
name|o
lambda|->
name|o
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|rx
operator|.
name|sendTo
argument_list|(
name|orders
argument_list|,
literal|"seda:large-orders"
argument_list|)
expr_stmt|;
block|}
block|}
comment|// ********************
comment|// Model
comment|// ********************
DECL|class|MyOrder
specifier|private
specifier|static
class|class
name|MyOrder
block|{
DECL|field|id
specifier|private
specifier|final
name|String
name|id
decl_stmt|;
DECL|field|amount
specifier|private
specifier|final
name|double
name|amount
decl_stmt|;
DECL|method|MyOrder (Exchange e)
specifier|public
name|MyOrder
parameter_list|(
name|Exchange
name|e
parameter_list|)
block|{
name|this
operator|.
name|amount
operator|=
name|e
operator|.
name|getProperty
argument_list|(
name|Exchange
operator|.
name|TIMER_COUNTER
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
operator|%
literal|5
expr_stmt|;
name|this
operator|.
name|id
operator|=
name|e
operator|.
name|getProperty
argument_list|(
name|Exchange
operator|.
name|TIMER_COUNTER
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"Order[id "
operator|+
name|id
operator|+
literal|", amount "
operator|+
name|amount
operator|+
literal|"]"
return|;
block|}
DECL|method|getAmount ()
specifier|public
name|double
name|getAmount
parameter_list|()
block|{
return|return
name|amount
return|;
block|}
DECL|method|getId ()
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
block|}
block|}
end_class

end_unit

