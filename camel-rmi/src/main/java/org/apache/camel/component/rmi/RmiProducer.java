begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.rmi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|rmi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|rmi
operator|.
name|AccessException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|rmi
operator|.
name|NotBoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|rmi
operator|.
name|Remote
import|;
end_import

begin_import
import|import
name|java
operator|.
name|rmi
operator|.
name|RemoteException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|rmi
operator|.
name|registry
operator|.
name|Registry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pojo
operator|.
name|PojoEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pojo
operator|.
name|PojoExchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultProducer
import|;
end_import

begin_comment
comment|/**  * @version $Revision: 533076 $  */
end_comment

begin_class
DECL|class|RmiProducer
specifier|public
class|class
name|RmiProducer
extends|extends
name|DefaultProducer
argument_list|<
name|PojoExchange
argument_list|>
block|{
DECL|field|endpoint
specifier|private
specifier|final
name|RmiEndpoint
name|endpoint
decl_stmt|;
DECL|field|remote
specifier|private
name|Remote
name|remote
decl_stmt|;
DECL|method|RmiProducer (RmiEndpoint endpoint)
specifier|public
name|RmiProducer
parameter_list|(
name|RmiEndpoint
name|endpoint
parameter_list|)
throws|throws
name|AccessException
throws|,
name|RemoteException
throws|,
name|NotBoundException
block|{
name|super
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
name|this
operator|.
name|endpoint
operator|=
name|endpoint
expr_stmt|;
block|}
DECL|method|process (PojoExchange exchange)
specifier|public
name|void
name|process
parameter_list|(
name|PojoExchange
name|exchange
parameter_list|)
throws|throws
name|AccessException
throws|,
name|RemoteException
throws|,
name|NotBoundException
block|{
name|PojoEndpoint
operator|.
name|invoke
argument_list|(
name|getRemote
argument_list|()
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
block|}
DECL|method|getRemote ()
specifier|public
name|Remote
name|getRemote
parameter_list|()
throws|throws
name|AccessException
throws|,
name|RemoteException
throws|,
name|NotBoundException
block|{
if|if
condition|(
name|remote
operator|==
literal|null
condition|)
block|{
name|Registry
name|registry
init|=
name|endpoint
operator|.
name|getRegistry
argument_list|()
decl_stmt|;
name|remote
operator|=
name|registry
operator|.
name|lookup
argument_list|(
name|endpoint
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|remote
return|;
block|}
block|}
end_class

end_unit

