begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.xmpp
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|xmpp
package|;
end_package

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jndi
operator|.
name|toolkit
operator|.
name|url
operator|.
name|Uri
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|IntrospectionSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|URISupport
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * @version $Revision:520964 $  */
end_comment

begin_class
DECL|class|XmppComponent
specifier|public
class|class
name|XmppComponent
extends|extends
name|DefaultComponent
argument_list|<
name|XmppExchange
argument_list|>
block|{
comment|/**      * Static builder method      */
DECL|method|xmppComponent ()
specifier|public
specifier|static
name|XmppComponent
name|xmppComponent
parameter_list|()
block|{
return|return
operator|new
name|XmppComponent
argument_list|()
return|;
block|}
DECL|method|XmppComponent ()
specifier|protected
name|XmppComponent
parameter_list|()
block|{     }
DECL|method|XmppComponent (CamelContext context)
specifier|public
name|XmppComponent
parameter_list|(
name|CamelContext
name|context
parameter_list|)
block|{
name|super
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
DECL|method|createEndpoint (Uri uri)
specifier|public
name|XmppEndpoint
name|createEndpoint
parameter_list|(
name|Uri
name|uri
parameter_list|)
throws|throws
name|URISyntaxException
block|{
comment|// lets figure out from the URI whether its a queue, topic etc
name|String
name|path
init|=
name|uri
operator|.
name|getPath
argument_list|()
decl_stmt|;
return|return
name|createEndpoint
argument_list|(
name|uri
operator|.
name|toString
argument_list|()
argument_list|,
name|path
argument_list|)
return|;
block|}
DECL|method|createEndpoint (String uri, String path)
specifier|public
name|XmppEndpoint
name|createEndpoint
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|path
parameter_list|)
throws|throws
name|URISyntaxException
block|{
name|ObjectHelper
operator|.
name|notNull
argument_list|(
name|getContext
argument_list|()
argument_list|,
literal|"context"
argument_list|)
expr_stmt|;
name|XmppEndpoint
name|endpoint
init|=
operator|new
name|XmppEndpoint
argument_list|(
name|uri
argument_list|,
name|getContext
argument_list|()
argument_list|)
decl_stmt|;
name|URI
name|u
init|=
operator|new
name|URI
argument_list|(
name|uri
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|setHost
argument_list|(
name|u
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setPort
argument_list|(
name|u
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|u
operator|.
name|getUserInfo
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|endpoint
operator|.
name|setUser
argument_list|(
name|u
operator|.
name|getUserInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|remainingPath
init|=
name|u
operator|.
name|getPath
argument_list|()
decl_stmt|;
if|if
condition|(
name|remainingPath
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|remainingPath
operator|.
name|startsWith
argument_list|(
literal|"/"
argument_list|)
condition|)
block|{
name|remainingPath
operator|=
name|remainingPath
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// assume its a participant
if|if
condition|(
name|remainingPath
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|endpoint
operator|.
name|setParticipant
argument_list|(
name|remainingPath
argument_list|)
expr_stmt|;
block|}
block|}
name|Map
name|options
init|=
name|URISupport
operator|.
name|parseParamters
argument_list|(
name|u
argument_list|)
decl_stmt|;
name|IntrospectionSupport
operator|.
name|setProperties
argument_list|(
name|endpoint
argument_list|,
name|options
argument_list|)
expr_stmt|;
return|return
name|endpoint
return|;
block|}
block|}
end_class

end_unit

