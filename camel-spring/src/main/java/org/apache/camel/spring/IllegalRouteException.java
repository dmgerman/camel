begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.spring
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
package|;
end_package

begin_class
DECL|class|IllegalRouteException
specifier|public
class|class
name|IllegalRouteException
extends|extends
name|IllegalArgumentException
block|{
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|2166507687211986107L
decl_stmt|;
DECL|field|actionName
specifier|private
specifier|final
name|String
name|actionName
decl_stmt|;
DECL|field|previousAction
specifier|private
specifier|final
name|String
name|previousAction
decl_stmt|;
DECL|method|IllegalRouteException (String actionName, String previousAction)
specifier|public
name|IllegalRouteException
parameter_list|(
name|String
name|actionName
parameter_list|,
name|String
name|previousAction
parameter_list|)
block|{
name|super
argument_list|(
literal|"Illegal route."
argument_list|)
expr_stmt|;
name|this
operator|.
name|actionName
operator|=
name|actionName
expr_stmt|;
name|this
operator|.
name|previousAction
operator|=
name|previousAction
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getMessage ()
specifier|public
name|String
name|getMessage
parameter_list|()
block|{
name|String
name|errorContext
init|=
name|previousAction
operator|==
literal|null
condition|?
literal|"as the starting action."
else|:
literal|"after action '"
operator|+
name|previousAction
operator|+
literal|"'."
decl_stmt|;
return|return
name|super
operator|.
name|getMessage
argument_list|()
operator|+
literal|"The action '"
operator|+
name|actionName
operator|+
literal|"' cannot be used "
operator|+
name|errorContext
return|;
block|}
block|}
end_class

end_unit

