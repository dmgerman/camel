begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.itest.springboot.arquillian.container
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|itest
operator|.
name|springboot
operator|.
name|arquillian
operator|.
name|container
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|arquillian
operator|.
name|container
operator|.
name|spi
operator|.
name|ConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|arquillian
operator|.
name|container
operator|.
name|spi
operator|.
name|client
operator|.
name|container
operator|.
name|ContainerConfiguration
import|;
end_import

begin_class
DECL|class|ManagedSEContainerConfiguration
specifier|public
class|class
name|ManagedSEContainerConfiguration
implements|implements
name|ContainerConfiguration
block|{
DECL|field|debug
specifier|private
name|boolean
name|debug
decl_stmt|;
DECL|field|host
specifier|private
name|String
name|host
init|=
literal|"127.0.0.1"
decl_stmt|;
DECL|field|port
specifier|private
name|int
name|port
init|=
literal|9999
decl_stmt|;
DECL|field|librariesPath
specifier|private
name|String
name|librariesPath
decl_stmt|;
DECL|field|logLevel
specifier|private
name|Level
name|logLevel
init|=
name|Level
operator|.
name|INFO
decl_stmt|;
DECL|field|keepDeploymentArchives
specifier|private
name|boolean
name|keepDeploymentArchives
decl_stmt|;
DECL|field|additionalJavaOpts
specifier|private
name|String
name|additionalJavaOpts
decl_stmt|;
DECL|field|waitTime
specifier|private
name|int
name|waitTime
init|=
literal|5
decl_stmt|;
DECL|method|validate ()
specifier|public
name|void
name|validate
parameter_list|()
throws|throws
name|ConfigurationException
block|{     }
DECL|method|setWaitTime (int waitTime)
specifier|public
name|void
name|setWaitTime
parameter_list|(
name|int
name|waitTime
parameter_list|)
block|{
name|this
operator|.
name|waitTime
operator|=
name|waitTime
expr_stmt|;
block|}
DECL|method|getWaitTime ()
specifier|public
name|int
name|getWaitTime
parameter_list|()
block|{
return|return
name|waitTime
return|;
block|}
DECL|method|isDebug ()
specifier|public
name|boolean
name|isDebug
parameter_list|()
block|{
return|return
name|debug
return|;
block|}
DECL|method|setDebug (boolean debug)
specifier|public
name|void
name|setDebug
parameter_list|(
name|boolean
name|debug
parameter_list|)
block|{
name|this
operator|.
name|debug
operator|=
name|debug
expr_stmt|;
block|}
DECL|method|getPort ()
specifier|public
name|int
name|getPort
parameter_list|()
block|{
return|return
name|port
return|;
block|}
DECL|method|setPort (int port)
specifier|public
name|void
name|setPort
parameter_list|(
name|int
name|port
parameter_list|)
block|{
name|this
operator|.
name|port
operator|=
name|port
expr_stmt|;
block|}
DECL|method|getHost ()
specifier|public
name|String
name|getHost
parameter_list|()
block|{
return|return
name|host
return|;
block|}
DECL|method|setHost (String host)
specifier|public
name|void
name|setHost
parameter_list|(
name|String
name|host
parameter_list|)
block|{
name|this
operator|.
name|host
operator|=
name|host
expr_stmt|;
block|}
DECL|method|getLibrariesPath ()
specifier|public
name|String
name|getLibrariesPath
parameter_list|()
block|{
return|return
name|librariesPath
return|;
block|}
DECL|method|setLibrariesPath (String librariesPath)
specifier|public
name|void
name|setLibrariesPath
parameter_list|(
name|String
name|librariesPath
parameter_list|)
block|{
name|this
operator|.
name|librariesPath
operator|=
name|librariesPath
expr_stmt|;
block|}
DECL|method|getLogLevel ()
specifier|public
name|Level
name|getLogLevel
parameter_list|()
block|{
return|return
name|logLevel
return|;
block|}
DECL|method|setLogLevel (String logLevel)
specifier|public
name|void
name|setLogLevel
parameter_list|(
name|String
name|logLevel
parameter_list|)
block|{
name|this
operator|.
name|logLevel
operator|=
name|Level
operator|.
name|parse
argument_list|(
name|logLevel
argument_list|)
expr_stmt|;
block|}
DECL|method|isKeepDeploymentArchives ()
specifier|public
name|boolean
name|isKeepDeploymentArchives
parameter_list|()
block|{
return|return
name|keepDeploymentArchives
return|;
block|}
DECL|method|setKeepDeploymentArchives (boolean keepDeploymentArchives)
specifier|public
name|void
name|setKeepDeploymentArchives
parameter_list|(
name|boolean
name|keepDeploymentArchives
parameter_list|)
block|{
name|this
operator|.
name|keepDeploymentArchives
operator|=
name|keepDeploymentArchives
expr_stmt|;
block|}
DECL|method|getAdditionalJavaOpts ()
specifier|public
name|String
name|getAdditionalJavaOpts
parameter_list|()
block|{
return|return
name|additionalJavaOpts
return|;
block|}
DECL|method|setAdditionalJavaOpts (String additionalJavaOpts)
specifier|public
name|void
name|setAdditionalJavaOpts
parameter_list|(
name|String
name|additionalJavaOpts
parameter_list|)
block|{
name|this
operator|.
name|additionalJavaOpts
operator|=
name|additionalJavaOpts
expr_stmt|;
block|}
block|}
end_class

end_unit

