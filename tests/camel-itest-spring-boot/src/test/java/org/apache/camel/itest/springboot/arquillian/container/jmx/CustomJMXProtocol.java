begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.itest.springboot.arquillian.container.jmx
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|itest
operator|.
name|springboot
operator|.
name|arquillian
operator|.
name|container
operator|.
name|jmx
package|;
end_package

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|arquillian
operator|.
name|container
operator|.
name|test
operator|.
name|spi
operator|.
name|client
operator|.
name|deployment
operator|.
name|DeploymentPackager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|arquillian
operator|.
name|protocol
operator|.
name|jmx
operator|.
name|AbstractJMXProtocol
import|;
end_import

begin_class
DECL|class|CustomJMXProtocol
specifier|public
class|class
name|CustomJMXProtocol
extends|extends
name|AbstractJMXProtocol
block|{
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
literal|"simple-jmx"
decl_stmt|;
annotation|@
name|Override
DECL|method|getProtocolName ()
specifier|public
name|String
name|getProtocolName
parameter_list|()
block|{
return|return
name|NAME
return|;
block|}
annotation|@
name|Override
DECL|method|getPackager ()
specifier|public
name|DeploymentPackager
name|getPackager
parameter_list|()
block|{
return|return
operator|new
name|TestDeploymentPackager
argument_list|()
return|;
block|}
block|}
end_class

end_unit

