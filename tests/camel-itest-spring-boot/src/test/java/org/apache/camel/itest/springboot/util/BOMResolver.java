begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.itest.springboot.util
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|itest
operator|.
name|springboot
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ObjectInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ObjectOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|attribute
operator|.
name|BasicFileAttributes
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|attribute
operator|.
name|FileTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|itest
operator|.
name|springboot
operator|.
name|ITestConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|repository
operator|.
name|internal
operator|.
name|MavenRepositorySystemUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|aether
operator|.
name|DefaultRepositorySystemSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|aether
operator|.
name|RepositorySystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|aether
operator|.
name|artifact
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|aether
operator|.
name|artifact
operator|.
name|DefaultArtifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|aether
operator|.
name|connector
operator|.
name|basic
operator|.
name|BasicRepositoryConnectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|aether
operator|.
name|deployment
operator|.
name|DeployRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|aether
operator|.
name|graph
operator|.
name|Dependency
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|aether
operator|.
name|impl
operator|.
name|DefaultServiceLocator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|aether
operator|.
name|repository
operator|.
name|LocalRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|aether
operator|.
name|repository
operator|.
name|RemoteRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|aether
operator|.
name|resolution
operator|.
name|ArtifactDescriptorRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|aether
operator|.
name|resolution
operator|.
name|ArtifactDescriptorResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|aether
operator|.
name|spi
operator|.
name|connector
operator|.
name|RepositoryConnectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|aether
operator|.
name|spi
operator|.
name|connector
operator|.
name|transport
operator|.
name|TransporterFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|aether
operator|.
name|transport
operator|.
name|file
operator|.
name|FileTransporterFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|aether
operator|.
name|transport
operator|.
name|http
operator|.
name|HttpTransporterFactory
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|itest
operator|.
name|springboot
operator|.
name|util
operator|.
name|LocationUtils
operator|.
name|camelRoot
import|;
end_import

begin_class
DECL|class|BOMResolver
specifier|public
specifier|final
class|class
name|BOMResolver
block|{
DECL|field|LOCAL_REPO
specifier|private
specifier|static
specifier|final
name|String
name|LOCAL_REPO
init|=
literal|"target/maven-aether-repo"
decl_stmt|;
DECL|field|CACHE_FILE
specifier|private
specifier|static
specifier|final
name|File
name|CACHE_FILE
init|=
name|LocationUtils
operator|.
name|camelRoot
argument_list|(
literal|"tests/camel-itest-spring-boot/target/bom-versions-cache"
argument_list|)
decl_stmt|;
DECL|field|INSTANCE
specifier|private
specifier|static
name|BOMResolver
name|INSTANCE
decl_stmt|;
DECL|field|config
specifier|private
name|ITestConfig
name|config
decl_stmt|;
DECL|field|versions
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|versions
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|BOMResolver (ITestConfig config)
specifier|private
name|BOMResolver
parameter_list|(
name|ITestConfig
name|config
parameter_list|)
block|{
try|try
block|{
name|this
operator|.
name|config
operator|=
name|config
expr_stmt|;
name|cleanupLocalRepo
argument_list|()
expr_stmt|;
if|if
condition|(
name|canUseCache
argument_list|()
condition|)
block|{
try|try
init|(
name|ObjectInputStream
name|in
init|=
operator|new
name|ObjectInputStream
argument_list|(
operator|new
name|FileInputStream
argument_list|(
name|CACHE_FILE
argument_list|)
argument_list|)
init|)
block|{
name|this
operator|.
name|versions
operator|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
operator|)
name|in
operator|.
name|readObject
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
name|retrieveUpstreamBOMVersions
argument_list|()
expr_stmt|;
name|CACHE_FILE
operator|.
name|delete
argument_list|()
expr_stmt|;
try|try
init|(
name|ObjectOutputStream
name|out
init|=
operator|new
name|ObjectOutputStream
argument_list|(
operator|new
name|FileOutputStream
argument_list|(
name|CACHE_FILE
argument_list|)
argument_list|)
init|)
block|{
name|out
operator|.
name|writeObject
argument_list|(
name|versions
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Cannot initialize the version resolver"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|canUseCache ()
specifier|private
name|boolean
name|canUseCache
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|CACHE_FILE
operator|.
name|exists
argument_list|()
condition|)
block|{
name|BasicFileAttributes
name|attr
init|=
name|Files
operator|.
name|readAttributes
argument_list|(
name|CACHE_FILE
operator|.
name|toPath
argument_list|()
argument_list|,
name|BasicFileAttributes
operator|.
name|class
argument_list|)
decl_stmt|;
name|FileTime
name|fileTime
init|=
name|attr
operator|!=
literal|null
condition|?
name|attr
operator|.
name|creationTime
argument_list|()
else|:
literal|null
decl_stmt|;
name|Long
name|time
init|=
name|fileTime
operator|!=
literal|null
condition|?
name|fileTime
operator|.
name|toMillis
argument_list|()
else|:
literal|null
decl_stmt|;
comment|// Update the cache every day
return|return
name|time
operator|!=
literal|null
operator|&&
name|time
operator|.
name|compareTo
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
literal|1000
operator|*
literal|60
operator|*
literal|60
operator|*
literal|24
argument_list|)
operator|>
literal|0
return|;
block|}
return|return
literal|false
return|;
block|}
DECL|method|retrieveUpstreamBOMVersions ()
specifier|private
name|void
name|retrieveUpstreamBOMVersions
parameter_list|()
throws|throws
name|Exception
block|{
name|RepositorySystem
name|system
init|=
name|newRepositorySystem
argument_list|()
decl_stmt|;
name|DefaultRepositorySystemSession
name|session
init|=
name|MavenRepositorySystemUtils
operator|.
name|newSession
argument_list|()
decl_stmt|;
name|LocalRepository
name|localRepo
init|=
operator|new
name|LocalRepository
argument_list|(
name|LOCAL_REPO
argument_list|)
decl_stmt|;
name|session
operator|.
name|setLocalRepositoryManager
argument_list|(
name|system
operator|.
name|newLocalRepositoryManager
argument_list|(
name|session
argument_list|,
name|localRepo
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|camelVersion
init|=
name|DependencyResolver
operator|.
name|resolveCamelParentProperty
argument_list|(
literal|"${project.version}"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Artifact
argument_list|>
name|neededArtifacts
init|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
decl_stmt|;
name|Artifact
name|camelRoot
init|=
operator|new
name|DefaultArtifact
argument_list|(
literal|"org.apache.camel:camel:pom:"
operator|+
name|camelVersion
argument_list|)
operator|.
name|setFile
argument_list|(
name|camelRoot
argument_list|(
literal|"pom.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|neededArtifacts
operator|.
name|add
argument_list|(
name|camelRoot
argument_list|)
expr_stmt|;
name|Artifact
name|camelParent
init|=
operator|new
name|DefaultArtifact
argument_list|(
literal|"org.apache.camel:camel-parent:pom:"
operator|+
name|camelVersion
argument_list|)
operator|.
name|setFile
argument_list|(
name|camelRoot
argument_list|(
literal|"parent/pom.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|neededArtifacts
operator|.
name|add
argument_list|(
name|camelParent
argument_list|)
expr_stmt|;
name|neededArtifacts
operator|.
name|add
argument_list|(
operator|new
name|DefaultArtifact
argument_list|(
literal|"org.apache.camel:spring-boot:pom:"
operator|+
name|camelVersion
argument_list|)
operator|.
name|setFile
argument_list|(
name|camelRoot
argument_list|(
literal|"platforms/spring-boot/pom.xml"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|neededArtifacts
operator|.
name|add
argument_list|(
operator|new
name|DefaultArtifact
argument_list|(
literal|"org.apache.camel:camel-spring-boot-dm:pom:"
operator|+
name|camelVersion
argument_list|)
operator|.
name|setFile
argument_list|(
name|camelRoot
argument_list|(
literal|"platforms/spring-boot/spring-boot-dm/pom.xml"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|neededArtifacts
operator|.
name|add
argument_list|(
operator|new
name|DefaultArtifact
argument_list|(
literal|"org.apache.camel:camel-spring-boot-dependencies:pom:"
operator|+
name|camelVersion
argument_list|)
operator|.
name|setFile
argument_list|(
name|camelRoot
argument_list|(
literal|"platforms/spring-boot/spring-boot-dm/camel-spring-boot-dependencies/pom.xml"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Artifact
name|camelStarterParent
init|=
operator|new
name|DefaultArtifact
argument_list|(
literal|"org.apache.camel:camel-starter-parent:pom:"
operator|+
name|camelVersion
argument_list|)
operator|.
name|setFile
argument_list|(
name|camelRoot
argument_list|(
literal|"platforms/spring-boot/spring-boot-dm/camel-starter-parent/pom.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|neededArtifacts
operator|.
name|add
argument_list|(
name|camelStarterParent
argument_list|)
expr_stmt|;
name|RemoteRepository
name|localRepoDist
init|=
operator|new
name|RemoteRepository
operator|.
name|Builder
argument_list|(
literal|"org.apache.camel.itest.springboot"
argument_list|,
literal|"default"
argument_list|,
operator|new
name|File
argument_list|(
name|LOCAL_REPO
argument_list|)
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
for|for
control|(
name|Artifact
name|artifact
range|:
name|neededArtifacts
control|)
block|{
name|DeployRequest
name|deployRequest
init|=
operator|new
name|DeployRequest
argument_list|()
decl_stmt|;
name|deployRequest
operator|.
name|addArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|deployRequest
operator|.
name|setRepository
argument_list|(
name|localRepoDist
argument_list|)
expr_stmt|;
name|system
operator|.
name|deploy
argument_list|(
name|session
argument_list|,
name|deployRequest
argument_list|)
expr_stmt|;
block|}
name|RemoteRepository
name|mavenCentral
init|=
operator|new
name|RemoteRepository
operator|.
name|Builder
argument_list|(
literal|"central"
argument_list|,
literal|"default"
argument_list|,
literal|"http://repo1.maven.org/maven2/"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|RemoteRepository
name|apacheSnapshots
init|=
operator|new
name|RemoteRepository
operator|.
name|Builder
argument_list|(
literal|"apache-snapshots"
argument_list|,
literal|"default"
argument_list|,
literal|"http://repository.apache.org/snapshots/"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|RemoteRepository
name|springMilestones
init|=
operator|new
name|RemoteRepository
operator|.
name|Builder
argument_list|(
literal|"spring-milestones"
argument_list|,
literal|"default"
argument_list|,
literal|"https://repo.spring.io/libs-milestone/"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|this
operator|.
name|versions
operator|=
operator|new
name|TreeMap
argument_list|<>
argument_list|()
expr_stmt|;
name|ArtifactDescriptorRequest
name|springBootParentReq
init|=
operator|new
name|ArtifactDescriptorRequest
argument_list|(
name|camelStarterParent
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|localRepoDist
argument_list|,
name|mavenCentral
argument_list|,
name|apacheSnapshots
argument_list|,
name|springMilestones
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|ArtifactDescriptorResult
name|springBootParentRes
init|=
name|system
operator|.
name|readArtifactDescriptor
argument_list|(
name|session
argument_list|,
name|springBootParentReq
argument_list|)
decl_stmt|;
for|for
control|(
name|Dependency
name|dependency
range|:
name|springBootParentRes
operator|.
name|getManagedDependencies
argument_list|()
control|)
block|{
name|Artifact
name|a
init|=
name|dependency
operator|.
name|getArtifact
argument_list|()
decl_stmt|;
name|String
name|key
init|=
name|a
operator|.
name|getGroupId
argument_list|()
operator|+
literal|":"
operator|+
name|a
operator|.
name|getArtifactId
argument_list|()
decl_stmt|;
name|versions
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|dependency
operator|.
name|getArtifact
argument_list|()
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Artifact
name|springBootDependencies
init|=
operator|new
name|DefaultArtifact
argument_list|(
literal|"org.springframework.boot:spring-boot-dependencies:pom:"
operator|+
name|config
operator|.
name|getSpringBootVersion
argument_list|()
argument_list|)
decl_stmt|;
name|ArtifactDescriptorRequest
name|springBootDependenciesReq
init|=
operator|new
name|ArtifactDescriptorRequest
argument_list|(
name|springBootDependencies
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|localRepoDist
argument_list|,
name|mavenCentral
argument_list|,
name|apacheSnapshots
argument_list|,
name|springMilestones
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|ArtifactDescriptorResult
name|springBootDependenciesRes
init|=
name|system
operator|.
name|readArtifactDescriptor
argument_list|(
name|session
argument_list|,
name|springBootDependenciesReq
argument_list|)
decl_stmt|;
for|for
control|(
name|Dependency
name|dependency
range|:
name|springBootDependenciesRes
operator|.
name|getManagedDependencies
argument_list|()
control|)
block|{
name|Artifact
name|a
init|=
name|dependency
operator|.
name|getArtifact
argument_list|()
decl_stmt|;
name|String
name|key
init|=
name|a
operator|.
name|getGroupId
argument_list|()
operator|+
literal|":"
operator|+
name|a
operator|.
name|getArtifactId
argument_list|()
decl_stmt|;
name|versions
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|dependency
operator|.
name|getArtifact
argument_list|()
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getInstance (ITestConfig config)
specifier|public
specifier|static
name|BOMResolver
name|getInstance
parameter_list|(
name|ITestConfig
name|config
parameter_list|)
block|{
if|if
condition|(
name|INSTANCE
operator|==
literal|null
condition|)
block|{
name|INSTANCE
operator|=
operator|new
name|BOMResolver
argument_list|(
name|config
argument_list|)
expr_stmt|;
block|}
return|return
name|INSTANCE
return|;
block|}
DECL|method|getBOMVersion (String groupId, String artifactId)
specifier|public
name|String
name|getBOMVersion
parameter_list|(
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|)
block|{
return|return
name|versions
operator|.
name|get
argument_list|(
name|groupId
operator|+
literal|":"
operator|+
name|artifactId
argument_list|)
return|;
block|}
DECL|method|cleanupLocalRepo ()
specifier|private
name|void
name|cleanupLocalRepo
parameter_list|()
throws|throws
name|IOException
block|{
name|File
name|f
init|=
operator|new
name|File
argument_list|(
name|LOCAL_REPO
argument_list|)
decl_stmt|;
if|if
condition|(
name|f
operator|.
name|exists
argument_list|()
condition|)
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|f
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|newRepositorySystem ()
specifier|private
name|RepositorySystem
name|newRepositorySystem
parameter_list|()
block|{
name|DefaultServiceLocator
name|locator
init|=
name|MavenRepositorySystemUtils
operator|.
name|newServiceLocator
argument_list|()
decl_stmt|;
name|locator
operator|.
name|addService
argument_list|(
name|RepositoryConnectorFactory
operator|.
name|class
argument_list|,
name|BasicRepositoryConnectorFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|locator
operator|.
name|addService
argument_list|(
name|TransporterFactory
operator|.
name|class
argument_list|,
name|FileTransporterFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|locator
operator|.
name|addService
argument_list|(
name|TransporterFactory
operator|.
name|class
argument_list|,
name|HttpTransporterFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|RepositorySystem
name|system
init|=
name|locator
operator|.
name|getService
argument_list|(
name|RepositorySystem
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|system
return|;
block|}
block|}
end_class

end_unit

