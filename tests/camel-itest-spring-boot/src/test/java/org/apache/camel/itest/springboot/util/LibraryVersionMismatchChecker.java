begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.itest.springboot.util
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|itest
operator|.
name|springboot
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Matcher
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|itest
operator|.
name|springboot
operator|.
name|util
operator|.
name|ArquillianPackager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|itest
operator|.
name|springboot
operator|.
name|util
operator|.
name|DependencyResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|shrinkwrap
operator|.
name|resolver
operator|.
name|api
operator|.
name|maven
operator|.
name|Maven
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|shrinkwrap
operator|.
name|resolver
operator|.
name|api
operator|.
name|maven
operator|.
name|MavenResolvedArtifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|shrinkwrap
operator|.
name|resolver
operator|.
name|api
operator|.
name|maven
operator|.
name|MavenResolverSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Prints information about the libraries required by the module and what it gets at runtime in a spring-boot deployment.  */
end_comment

begin_class
DECL|class|LibraryVersionMismatchChecker
specifier|public
class|class
name|LibraryVersionMismatchChecker
block|{
annotation|@
name|Test
DECL|method|testAllComponents ()
specifier|public
name|void
name|testAllComponents
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|components
init|=
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|File
argument_list|(
literal|"../../components-starter"
argument_list|)
operator|.
name|list
argument_list|(
parameter_list|(
name|d
parameter_list|,
name|f
parameter_list|)
lambda|->
name|f
operator|.
name|startsWith
argument_list|(
literal|"camel-"
argument_list|)
operator|&&
operator|(
operator|new
name|File
argument_list|(
name|d
argument_list|,
name|f
argument_list|)
operator|.
name|isDirectory
argument_list|()
operator|)
argument_list|)
argument_list|)
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|name
lambda|->
name|name
operator|.
name|replace
argument_list|(
literal|"-starter"
argument_list|,
literal|""
argument_list|)
argument_list|)
operator|.
name|sorted
argument_list|()
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|boolean
name|fail
init|=
literal|false
decl_stmt|;
for|for
control|(
name|String
name|moduleName
range|:
name|components
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"------------- "
operator|+
name|moduleName
operator|+
literal|" -------------"
argument_list|)
expr_stmt|;
name|boolean
name|compFail
init|=
name|testLibrary
argument_list|(
name|moduleName
argument_list|)
decl_stmt|;
name|fail
operator|=
name|fail
operator|||
name|compFail
expr_stmt|;
block|}
comment|//Assert.assertFalse("Dependencies changed between original and user version", fail);
block|}
DECL|method|testLibrary (String moduleName)
specifier|public
name|boolean
name|testLibrary
parameter_list|(
name|String
name|moduleName
parameter_list|)
throws|throws
name|Exception
block|{
name|MavenResolverSystem
name|resolver
init|=
name|Maven
operator|.
name|resolver
argument_list|()
decl_stmt|;
name|MavenResolvedArtifact
index|[]
name|original
init|=
name|resolver
operator|.
name|resolve
argument_list|(
literal|"org.apache.camel:"
operator|+
name|moduleName
operator|+
literal|":2.18.0-SNAPSHOT"
argument_list|)
operator|.
name|withTransitivity
argument_list|()
operator|.
name|asResolvedArtifact
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|originalMap
init|=
name|versionMap
argument_list|(
name|original
argument_list|)
decl_stmt|;
name|File
name|userPom
init|=
name|createUserPom
argument_list|(
name|moduleName
argument_list|)
decl_stmt|;
name|MavenResolvedArtifact
index|[]
name|user
init|=
name|resolver
operator|.
name|loadPomFromFile
argument_list|(
name|userPom
argument_list|)
operator|.
name|importRuntimeDependencies
argument_list|()
operator|.
name|resolve
argument_list|()
operator|.
name|withTransitivity
argument_list|()
operator|.
name|asResolvedArtifact
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|userMap
init|=
name|versionMap
argument_list|(
name|user
argument_list|)
decl_stmt|;
name|boolean
name|changed
init|=
literal|false
decl_stmt|;
for|for
control|(
name|String
name|dep
range|:
name|originalMap
operator|.
name|keySet
argument_list|()
control|)
block|{
name|String
name|originalVersion
init|=
name|originalMap
operator|.
name|get
argument_list|(
name|dep
argument_list|)
decl_stmt|;
name|String
name|userVersion
init|=
name|userMap
operator|.
name|get
argument_list|(
name|dep
argument_list|)
decl_stmt|;
if|if
condition|(
name|userVersion
operator|==
literal|null
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"WARNING - "
operator|+
name|moduleName
operator|+
literal|" - Library not present in user version: "
operator|+
name|dep
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|!
name|originalVersion
operator|.
name|equals
argument_list|(
name|userVersion
argument_list|)
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"ERROR - "
operator|+
name|moduleName
operator|+
literal|" - Version mismatch for "
operator|+
name|dep
operator|+
literal|": original="
operator|+
name|originalVersion
operator|+
literal|", user="
operator|+
name|userVersion
argument_list|)
expr_stmt|;
name|changed
operator|=
literal|true
expr_stmt|;
block|}
block|}
return|return
operator|!
name|changed
return|;
block|}
DECL|method|versionMap (MavenResolvedArtifact[] artifacts)
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|versionMap
parameter_list|(
name|MavenResolvedArtifact
index|[]
name|artifacts
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|versions
init|=
operator|new
name|TreeMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|MavenResolvedArtifact
name|art
range|:
name|artifacts
control|)
block|{
name|versions
operator|.
name|put
argument_list|(
name|art
operator|.
name|getCoordinate
argument_list|()
operator|.
name|getGroupId
argument_list|()
operator|+
literal|":"
operator|+
name|art
operator|.
name|getCoordinate
argument_list|()
operator|.
name|getArtifactId
argument_list|()
argument_list|,
name|art
operator|.
name|getCoordinate
argument_list|()
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|versions
return|;
block|}
DECL|method|createUserPom (String moduleName)
specifier|private
specifier|static
name|File
name|createUserPom
parameter_list|(
name|String
name|moduleName
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|pom
decl_stmt|;
try|try
init|(
name|InputStream
name|pomTemplate
init|=
name|ArquillianPackager
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"/application-pom.xml"
argument_list|)
init|)
block|{
name|pom
operator|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|pomTemplate
argument_list|)
expr_stmt|;
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|resolvedProperties
init|=
operator|new
name|TreeMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Pattern
name|propPattern
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"(\\$\\{[^}]*\\})"
argument_list|)
decl_stmt|;
name|Matcher
name|m
init|=
name|propPattern
operator|.
name|matcher
argument_list|(
name|pom
argument_list|)
decl_stmt|;
while|while
condition|(
name|m
operator|.
name|find
argument_list|()
condition|)
block|{
name|String
name|property
init|=
name|m
operator|.
name|group
argument_list|()
decl_stmt|;
name|String
name|resolved
init|=
name|DependencyResolver
operator|.
name|resolveParentProperty
argument_list|(
name|property
argument_list|)
decl_stmt|;
name|resolvedProperties
operator|.
name|put
argument_list|(
name|property
argument_list|,
name|resolved
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|String
name|property
range|:
name|resolvedProperties
operator|.
name|keySet
argument_list|()
control|)
block|{
name|pom
operator|=
name|pom
operator|.
name|replace
argument_list|(
name|property
argument_list|,
name|resolvedProperties
operator|.
name|get
argument_list|(
name|property
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|pom
operator|=
name|pom
operator|.
name|replace
argument_list|(
literal|"#{module}"
argument_list|,
name|moduleName
argument_list|)
expr_stmt|;
name|File
name|pomFile
init|=
operator|new
name|File
argument_list|(
literal|"target/library-version-mismatch-spring-boot-pom.xml"
argument_list|)
decl_stmt|;
try|try
init|(
name|FileWriter
name|fw
init|=
operator|new
name|FileWriter
argument_list|(
name|pomFile
argument_list|)
init|)
block|{
name|IOUtils
operator|.
name|write
argument_list|(
name|pom
argument_list|,
name|fw
argument_list|)
expr_stmt|;
block|}
return|return
name|pomFile
return|;
block|}
block|}
end_class

end_unit

