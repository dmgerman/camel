begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.itest.karaf.issues
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|itest
operator|.
name|karaf
operator|.
name|issues
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|blueprint
operator|.
name|BlueprintCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|itest
operator|.
name|karaf
operator|.
name|BaseKarafTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|ModelHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|RoutesDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|junit
operator|.
name|PaxExam
import|;
end_import

begin_comment
comment|/**  * CAMEL-10817: dumpModelAsXml can return invalid XML namespace xmlns:xmlns  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|PaxExam
operator|.
name|class
argument_list|)
DECL|class|DuplicateNamespacePrefixIssueTest
specifier|public
class|class
name|DuplicateNamespacePrefixIssueTest
extends|extends
name|BaseKarafTest
block|{
annotation|@
name|Test
DECL|method|testRoutesNamespacePrefixesNotDuplicated ()
specifier|public
name|void
name|testRoutesNamespacePrefixesNotDuplicated
parameter_list|()
throws|throws
name|Exception
block|{
name|CamelContext
name|context
init|=
operator|new
name|BlueprintCamelContext
argument_list|(
name|bundleContext
argument_list|,
name|blueprintContainer
argument_list|)
decl_stmt|;
name|context
operator|.
name|addRoutes
argument_list|(
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
literal|"direct:foo"
argument_list|)
operator|.
name|id
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|choice
argument_list|()
operator|.
name|when
argument_list|(
name|xpath
argument_list|(
literal|"foo:foo/foo:foo = 'foo'"
argument_list|)
argument_list|)
operator|.
name|log
argument_list|(
literal|"Matched foo"
argument_list|)
operator|.
name|when
argument_list|(
name|xpath
argument_list|(
literal|"foo:foo/foo:bar = 'bar'"
argument_list|)
argument_list|)
operator|.
name|log
argument_list|(
literal|"Matched bar"
argument_list|)
operator|.
name|when
argument_list|(
name|xpath
argument_list|(
literal|"foo:foo/foo:cheese = 'cheese'"
argument_list|)
argument_list|)
operator|.
name|log
argument_list|(
literal|"Matched cheese"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
comment|// Dump the model XML
name|String
name|originalModelXML
init|=
name|ModelHelper
operator|.
name|dumpModelAsXml
argument_list|(
name|context
argument_list|,
name|context
operator|.
name|getRouteDefinition
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
decl_stmt|;
comment|// Reload routes from dumped XML
name|InputStream
name|stream
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|originalModelXML
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
decl_stmt|;
name|RoutesDefinition
name|routesDefinition
init|=
name|ModelHelper
operator|.
name|loadRoutesDefinition
argument_list|(
name|context
argument_list|,
name|stream
argument_list|)
decl_stmt|;
comment|// Verify namespaces are as we expect
name|String
name|modifiedModelXML
init|=
name|ModelHelper
operator|.
name|dumpModelAsXml
argument_list|(
name|context
argument_list|,
name|routesDefinition
argument_list|)
decl_stmt|;
name|String
name|modifiedRoutesElementXML
init|=
name|modifiedModelXML
operator|.
name|split
argument_list|(
literal|"\n"
argument_list|)
index|[
literal|1
index|]
decl_stmt|;
name|String
name|expectedRoutesElementXML
init|=
literal|"<routes xmlns=\"http://camel.apache.org/schema/spring\">"
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedRoutesElementXML
argument_list|,
name|modifiedRoutesElementXML
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

