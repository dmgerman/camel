begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.itest.ibatis
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|itest
operator|.
name|ibatis
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|orm
operator|.
name|ibatis
operator|.
name|support
operator|.
name|SqlMapClientDaoSupport
import|;
end_import

begin_comment
comment|/**  * @version   */
end_comment

begin_class
DECL|class|DummyTableImpl
specifier|public
class|class
name|DummyTableImpl
extends|extends
name|SqlMapClientDaoSupport
implements|implements
name|DummyTable
block|{
DECL|method|add (int value)
specifier|public
name|void
name|add
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|getSqlMapClientTemplate
argument_list|()
operator|.
name|insert
argument_list|(
literal|"table.add"
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|create ()
specifier|public
name|void
name|create
parameter_list|()
block|{
name|getSqlMapClientTemplate
argument_list|()
operator|.
name|update
argument_list|(
literal|"table.create"
argument_list|)
expr_stmt|;
block|}
DECL|method|clear ()
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|getSqlMapClientTemplate
argument_list|()
operator|.
name|delete
argument_list|(
literal|"table.clear"
argument_list|)
expr_stmt|;
block|}
DECL|method|drop ()
specifier|public
name|void
name|drop
parameter_list|()
block|{
name|getSqlMapClientTemplate
argument_list|()
operator|.
name|update
argument_list|(
literal|"table.drop"
argument_list|)
expr_stmt|;
block|}
DECL|method|iterator ()
specifier|public
name|Iterator
argument_list|<
name|Integer
argument_list|>
name|iterator
parameter_list|()
block|{
return|return
name|values
argument_list|()
operator|.
name|iterator
argument_list|()
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|values ()
specifier|public
name|Collection
argument_list|<
name|Integer
argument_list|>
name|values
parameter_list|()
block|{
return|return
name|getSqlMapClientTemplate
argument_list|()
operator|.
name|queryForList
argument_list|(
literal|"table.values"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

