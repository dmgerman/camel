begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.itest.highvolume
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|itest
operator|.
name|highvolume
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|EndpointInject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Handler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ProducerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_class
DECL|class|Messages
specifier|public
class|class
name|Messages
block|{
annotation|@
name|EndpointInject
argument_list|(
name|ref
operator|=
literal|"Direct"
argument_list|)
DECL|field|template
name|ProducerTemplate
name|template
decl_stmt|;
annotation|@
name|EndpointInject
argument_list|(
name|ref
operator|=
literal|"JmsQueueProducer"
argument_list|)
DECL|field|templateActiveMq
name|ProducerTemplate
name|templateActiveMq
decl_stmt|;
DECL|method|split (Exchange exchange)
specifier|public
name|void
name|split
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
name|String
name|messages
init|=
operator|(
name|String
operator|)
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|String
index|[]
name|result
init|=
name|messages
operator|.
name|split
argument_list|(
literal|","
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|result
operator|.
name|length
condition|;
name|x
operator|++
control|)
block|{
name|templateActiveMq
operator|.
name|sendBody
argument_list|(
name|result
index|[
name|x
index|]
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|generate (Exchange exchange)
specifier|public
name|void
name|generate
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
name|StringBuilder
name|messages
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
literal|20000
condition|;
name|i
operator|++
control|)
block|{
name|messages
operator|.
name|append
argument_list|(
literal|"Test Message: "
operator|+
name|i
operator|+
literal|","
argument_list|)
expr_stmt|;
block|}
name|template
operator|.
name|sendBody
argument_list|(
name|messages
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

