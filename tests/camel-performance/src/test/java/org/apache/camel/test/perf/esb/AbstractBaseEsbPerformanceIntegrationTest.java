begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.test.perf.esb
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|perf
operator|.
name|esb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|blueprint
operator|.
name|CamelBlueprintTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Connector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|nio
operator|.
name|SelectChannelConnector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|servlet
operator|.
name|ServletContextHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|servlet
operator|.
name|ServletHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|util
operator|.
name|thread
operator|.
name|QueuedThreadPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_class
DECL|class|AbstractBaseEsbPerformanceIntegrationTest
specifier|public
specifier|abstract
class|class
name|AbstractBaseEsbPerformanceIntegrationTest
extends|extends
name|CamelBlueprintTestSupport
block|{
DECL|field|server
specifier|protected
name|Server
name|server
decl_stmt|;
DECL|field|payload
specifier|protected
name|String
name|payload
decl_stmt|;
DECL|field|count
specifier|protected
name|int
name|count
init|=
literal|10000
decl_stmt|;
annotation|@
name|Before
annotation|@
name|Override
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|server
operator|=
operator|new
name|Server
argument_list|()
expr_stmt|;
name|SelectChannelConnector
name|connector0
init|=
operator|new
name|SelectChannelConnector
argument_list|()
decl_stmt|;
name|connector0
operator|.
name|setPort
argument_list|(
literal|9000
argument_list|)
expr_stmt|;
name|connector0
operator|.
name|setThreadPool
argument_list|(
operator|new
name|QueuedThreadPool
argument_list|(
literal|20
argument_list|)
argument_list|)
expr_stmt|;
name|connector0
operator|.
name|setMaxIdleTime
argument_list|(
literal|30000
argument_list|)
expr_stmt|;
name|connector0
operator|.
name|setAcceptors
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|connector0
operator|.
name|setStatsOn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|connector0
operator|.
name|setReuseAddress
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|server
operator|.
name|setConnectors
argument_list|(
operator|new
name|Connector
index|[]
block|{
name|connector0
block|}
argument_list|)
expr_stmt|;
name|ServletContextHandler
name|context
init|=
operator|new
name|ServletContextHandler
argument_list|(
name|ServletContextHandler
operator|.
name|SESSIONS
argument_list|)
decl_stmt|;
name|context
operator|.
name|setContextPath
argument_list|(
literal|"/service"
argument_list|)
expr_stmt|;
name|server
operator|.
name|setHandler
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|context
operator|.
name|addServlet
argument_list|(
operator|new
name|ServletHolder
argument_list|(
operator|new
name|EchoService
argument_list|()
argument_list|)
argument_list|,
literal|"/EchoService"
argument_list|)
expr_stmt|;
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
name|payload
operator|=
name|readPayload
argument_list|()
expr_stmt|;
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
annotation|@
name|Override
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|method|readPayload ()
specifier|protected
name|String
name|readPayload
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|IOUtils
operator|.
name|toString
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/1K_buyStocks.xml"
argument_list|)
argument_list|)
return|;
block|}
DECL|method|send (String endpointUri, int messagesToSend)
specifier|protected
name|void
name|send
parameter_list|(
name|String
name|endpointUri
parameter_list|,
name|int
name|messagesToSend
parameter_list|)
block|{
name|template
operator|.
name|setDefaultEndpointUri
argument_list|(
name|endpointUri
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"text/xml;charset=UTF-8"
argument_list|)
expr_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"SOAPAction"
argument_list|,
literal|"urn:buyStocks.2"
argument_list|)
expr_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"routing"
argument_list|,
literal|"xadmin;server1;community#1.0##"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|messagesToSend
condition|;
name|i
operator|++
control|)
block|{
name|template
operator|.
name|requestBodyAndHeaders
argument_list|(
name|payload
argument_list|,
name|headers
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

