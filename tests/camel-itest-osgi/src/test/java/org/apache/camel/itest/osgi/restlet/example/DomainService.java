begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.itest.osgi.restlet.example
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|itest
operator|.
name|osgi
operator|.
name|restlet
operator|.
name|example
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|POST
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PUT
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_class
annotation|@
name|Path
argument_list|(
literal|"/domainservice/"
argument_list|)
DECL|class|DomainService
specifier|public
class|class
name|DomainService
block|{
DECL|method|DomainService ()
specifier|public
name|DomainService
parameter_list|()
block|{     }
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/domains/{id}/"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/json"
argument_list|)
DECL|method|getDomain (@athParamR) String id)
specifier|public
name|String
name|getDomain
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"id"
argument_list|)
name|String
name|id
parameter_list|)
block|{
return|return
literal|"{www.google.com}"
return|;
block|}
annotation|@
name|PUT
annotation|@
name|Path
argument_list|(
literal|"/domains/"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/json"
argument_list|)
DECL|method|updateDomain (String domain)
specifier|public
name|Response
name|updateDomain
parameter_list|(
name|String
name|domain
parameter_list|)
block|{
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/domains/"
argument_list|)
annotation|@
name|Produces
argument_list|(
literal|"application/xml"
argument_list|)
DECL|method|addDomain (CheckDomainRequest request)
specifier|public
name|CheckDomainAvailabilityRestResponse
name|addDomain
parameter_list|(
name|CheckDomainRequest
name|request
parameter_list|)
block|{
name|CheckDomainAvailabilityRestResponse
name|response
init|=
operator|new
name|CheckDomainAvailabilityRestResponse
argument_list|()
decl_stmt|;
name|response
operator|.
name|setRequestId
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|request
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|.
name|setResponseBody
argument_list|(
literal|"OK"
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
block|}
end_class

end_unit

