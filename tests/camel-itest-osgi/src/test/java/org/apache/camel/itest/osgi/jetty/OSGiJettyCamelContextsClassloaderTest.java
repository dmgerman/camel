begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.itest.osgi.jetty
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|itest
operator|.
name|osgi
operator|.
name|jetty
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|itest
operator|.
name|osgi
operator|.
name|OSGiIntegrationTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|Option
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|junit
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|junit
operator|.
name|JUnit4TestRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|swissbox
operator|.
name|tinybundles
operator|.
name|dp
operator|.
name|Constants
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|CoreOptions
operator|.
name|provision
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|OptionUtils
operator|.
name|combine
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|swissbox
operator|.
name|tinybundles
operator|.
name|core
operator|.
name|TinyBundles
operator|.
name|newBundle
import|;
end_import

begin_comment
comment|/**  * CAMEL-5722: Test to verify that routes sitting in different bundles but listening on the same Jetty port,  * and thus, sharing the same container-wide Jetty Connector, do not share the classloader. The TCCL should  * be different in each case, as for each route it should be the Classloader of their containing bundle.  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|JUnit4TestRunner
operator|.
name|class
argument_list|)
DECL|class|OSGiJettyCamelContextsClassloaderTest
specifier|public
class|class
name|OSGiJettyCamelContextsClassloaderTest
extends|extends
name|OSGiIntegrationTestSupport
block|{
annotation|@
name|Test
DECL|method|testClassloadersAreCongruent ()
specifier|public
name|void
name|testClassloadersAreCongruent
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Wait a while to let all the service started
name|Thread
operator|.
name|sleep
argument_list|(
literal|3000
argument_list|)
expr_stmt|;
comment|// test context 1
name|String
name|endpointURI1
init|=
literal|"http://localhost:9010/camel-context-1/continuation/"
decl_stmt|;
name|String
name|response1
init|=
name|template
operator|.
name|requestBody
argument_list|(
name|endpointURI1
argument_list|,
literal|"Hello World"
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Response from Context 1: "
operator|+
name|response1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Camel Context 1 classloaders unequal"
argument_list|,
literal|"true"
argument_list|,
name|response1
operator|.
name|split
argument_list|(
literal|" --- "
argument_list|)
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
comment|// test context 2
name|String
name|endpointURI2
init|=
literal|"http://localhost:9010/camel-context-2/continuation/"
decl_stmt|;
name|String
name|response2
init|=
name|template
operator|.
name|requestBody
argument_list|(
name|endpointURI2
argument_list|,
literal|"Hello World"
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Response from Context 2: "
operator|+
name|response2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Camel Context 2 classloaders unequal"
argument_list|,
literal|"true"
argument_list|,
name|response2
operator|.
name|split
argument_list|(
literal|" --- "
argument_list|)
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
comment|// contexts's both classloaders toString() representation must contain the bundle symbolic ID
comment|// definition of "both classloaders": the Camel Context classloader and the Thread classloader during processing
name|assertTrue
argument_list|(
name|response1
operator|.
name|matches
argument_list|(
literal|".*CamelContextBundle1.*CamelContextBundle1.*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|response2
operator|.
name|matches
argument_list|(
literal|".*CamelContextBundle2.*CamelContextBundle2.*"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Wait a while to let all the service started
name|Thread
operator|.
name|sleep
argument_list|(
literal|3000
argument_list|)
expr_stmt|;
comment|// test context 1
name|endpointURI1
operator|=
literal|"http://localhost:9010/camel-context-1/noContinuation/"
expr_stmt|;
name|response1
operator|=
name|template
operator|.
name|requestBody
argument_list|(
name|endpointURI1
argument_list|,
literal|"Hello World"
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Response from Context 1: "
operator|+
name|response1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Camel Context 1 classloaders unequal"
argument_list|,
literal|"true"
argument_list|,
name|response1
operator|.
name|split
argument_list|(
literal|" --- "
argument_list|)
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
comment|// test context 2
name|endpointURI2
operator|=
literal|"http://localhost:9010/camel-context-2/noContinuation/"
expr_stmt|;
name|response2
operator|=
name|template
operator|.
name|requestBody
argument_list|(
name|endpointURI2
argument_list|,
literal|"Hello World"
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Response from Context 2: "
operator|+
name|response2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Camel Context 2 classloaders unequal"
argument_list|,
literal|"true"
argument_list|,
name|response2
operator|.
name|split
argument_list|(
literal|" --- "
argument_list|)
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
comment|// contexts's both classloaders toString() representation must contain the bundle symbolic ID
comment|// definition of "both classloaders": the Camel Context classloader and the Thread classloader during processing
name|assertTrue
argument_list|(
name|response1
operator|.
name|matches
argument_list|(
literal|".*CamelContextBundle1.*CamelContextBundle1.*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|response2
operator|.
name|matches
argument_list|(
literal|".*CamelContextBundle2.*CamelContextBundle2.*"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Configuration
DECL|method|configure ()
specifier|public
specifier|static
name|Option
index|[]
name|configure
parameter_list|()
block|{
name|Option
index|[]
name|options
init|=
name|combine
argument_list|(
name|getDefaultCamelKarafOptions
argument_list|()
argument_list|,
comment|// using the features to install the other camel components
name|loadCamelFeatures
argument_list|(
literal|"camel-jetty"
argument_list|)
argument_list|,
comment|//set up the camel context bundle1
name|provision
argument_list|(
name|newBundle
argument_list|()
operator|.
name|add
argument_list|(
literal|"META-INF/spring/Classloader-CamelContext1.xml"
argument_list|,
name|OSGiJettyCamelContextsClassloaderTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"Classloader-CamelContext1.xml"
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|JettyClassloaderCheckProcessor
operator|.
name|class
argument_list|)
operator|.
name|set
argument_list|(
name|Constants
operator|.
name|BUNDLE_SYMBOLICNAME
argument_list|,
literal|"org.apache.camel.itest.osgi.CamelContextBundle1"
argument_list|)
operator|.
name|set
argument_list|(
name|Constants
operator|.
name|BUNDLE_NAME
argument_list|,
literal|"CamelContext1"
argument_list|)
operator|.
name|set
argument_list|(
name|Constants
operator|.
name|DYNAMICIMPORT_PACKAGE
argument_list|,
literal|"*"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|,
comment|//set up the camel context bundle1
name|provision
argument_list|(
name|newBundle
argument_list|()
operator|.
name|add
argument_list|(
literal|"META-INF/spring/Classloader-CamelContext2.xml"
argument_list|,
name|OSGiJettyCamelContextsClassloaderTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"Classloader-CamelContext2.xml"
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|JettyClassloaderCheckProcessor
operator|.
name|class
argument_list|)
operator|.
name|set
argument_list|(
name|Constants
operator|.
name|BUNDLE_SYMBOLICNAME
argument_list|,
literal|"org.apache.camel.itest.osgi.CamelContextBundle2"
argument_list|)
operator|.
name|set
argument_list|(
name|Constants
operator|.
name|BUNDLE_NAME
argument_list|,
literal|"CamelContext2"
argument_list|)
operator|.
name|set
argument_list|(
name|Constants
operator|.
name|DYNAMICIMPORT_PACKAGE
argument_list|,
literal|"*"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|options
return|;
block|}
block|}
end_class

end_unit

