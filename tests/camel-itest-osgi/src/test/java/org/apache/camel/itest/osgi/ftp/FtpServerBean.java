begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.itest.osgi.ftp
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|itest
operator|.
name|osgi
operator|.
name|ftp
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ftpserver
operator|.
name|FtpServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ftpserver
operator|.
name|FtpServerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ftpserver
operator|.
name|filesystem
operator|.
name|nativefs
operator|.
name|NativeFileSystemFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ftpserver
operator|.
name|ftplet
operator|.
name|UserManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ftpserver
operator|.
name|listener
operator|.
name|ListenerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ftpserver
operator|.
name|usermanager
operator|.
name|ClearTextPasswordEncryptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ftpserver
operator|.
name|usermanager
operator|.
name|PropertiesUserManagerFactory
import|;
end_import

begin_class
DECL|class|FtpServerBean
specifier|public
specifier|final
class|class
name|FtpServerBean
block|{
DECL|field|FTP_ROOT_DIR
specifier|public
specifier|static
specifier|final
name|String
name|FTP_ROOT_DIR
init|=
literal|"./res/home/"
decl_stmt|;
DECL|field|LOG
specifier|private
specifier|static
specifier|final
specifier|transient
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|FtpServerBean
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|ftpServer
specifier|private
specifier|static
name|FtpServer
name|ftpServer
decl_stmt|;
DECL|field|port
specifier|private
specifier|static
name|int
name|port
decl_stmt|;
DECL|method|FtpServerBean ()
specifier|private
name|FtpServerBean
parameter_list|()
block|{
comment|// utility class
block|}
DECL|method|getPort ()
specifier|public
specifier|static
name|int
name|getPort
parameter_list|()
block|{
return|return
name|port
return|;
block|}
DECL|method|startServer ()
specifier|public
specifier|static
name|void
name|startServer
parameter_list|()
throws|throws
name|Exception
block|{
name|initPort
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Starting FTP server on port "
operator|+
name|port
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Starting FTP server on port "
operator|+
name|port
argument_list|)
expr_stmt|;
name|initFtpServer
argument_list|()
expr_stmt|;
name|ftpServer
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
DECL|method|initPort ()
specifier|private
specifier|static
name|void
name|initPort
parameter_list|()
block|{
name|port
operator|=
literal|21002
expr_stmt|;
block|}
DECL|method|shutdownServer ()
specifier|public
specifier|static
name|void
name|shutdownServer
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Shutting down FTP server"
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Shutting down FTP server with port "
operator|+
name|port
argument_list|)
expr_stmt|;
try|try
block|{
name|ftpServer
operator|.
name|stop
argument_list|()
expr_stmt|;
name|ftpServer
operator|=
literal|null
expr_stmt|;
name|port
operator|=
literal|0
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// ignore while shutting down as we could be polling during shutdown
comment|// and get errors when the ftp server is stopping. This is only an issue
comment|// since we host the ftp server embedded in the same jvm for unit testing
block|}
block|}
DECL|method|initFtpServer ()
specifier|public
specifier|static
name|void
name|initFtpServer
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|port
operator|<
literal|21000
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Port number is not initialized in an expected range: "
operator|+
name|getPort
argument_list|()
argument_list|)
throw|;
block|}
name|FtpServerFactory
name|serverFactory
init|=
operator|new
name|FtpServerFactory
argument_list|()
decl_stmt|;
comment|// setup user management to read our users.properties and use clear text passwords
name|URL
name|url
init|=
name|ObjectHelper
operator|.
name|loadResourceAsURL
argument_list|(
literal|"users.properties"
argument_list|)
decl_stmt|;
comment|// use factory to create user manager
name|PropertiesUserManagerFactory
name|pumf
init|=
operator|new
name|PropertiesUserManagerFactory
argument_list|()
decl_stmt|;
name|pumf
operator|.
name|setUrl
argument_list|(
name|url
argument_list|)
expr_stmt|;
name|pumf
operator|.
name|setPasswordEncryptor
argument_list|(
operator|new
name|ClearTextPasswordEncryptor
argument_list|()
argument_list|)
expr_stmt|;
name|pumf
operator|.
name|setAdminName
argument_list|(
literal|"admin"
argument_list|)
expr_stmt|;
name|UserManager
name|uman
init|=
name|pumf
operator|.
name|createUserManager
argument_list|()
decl_stmt|;
name|serverFactory
operator|.
name|setUserManager
argument_list|(
name|uman
argument_list|)
expr_stmt|;
name|NativeFileSystemFactory
name|fsf
init|=
operator|new
name|NativeFileSystemFactory
argument_list|()
decl_stmt|;
name|fsf
operator|.
name|setCreateHome
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|serverFactory
operator|.
name|setFileSystem
argument_list|(
name|fsf
argument_list|)
expr_stmt|;
name|ListenerFactory
name|factory
init|=
operator|new
name|ListenerFactory
argument_list|()
decl_stmt|;
name|factory
operator|.
name|setPort
argument_list|(
name|port
argument_list|)
expr_stmt|;
name|serverFactory
operator|.
name|addListener
argument_list|(
literal|"default"
argument_list|,
name|factory
operator|.
name|createListener
argument_list|()
argument_list|)
expr_stmt|;
name|ftpServer
operator|=
name|serverFactory
operator|.
name|createServer
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

