begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.itest.osgi.cache.replication
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|itest
operator|.
name|osgi
operator|.
name|cache
operator|.
name|replication
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Queue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|QueueConnection
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|CacheException
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|Ehcache
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|Status
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|distribution
operator|.
name|jms
operator|.
name|AcknowledgementMode
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|distribution
operator|.
name|jms
operator|.
name|JMSCacheLoader
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|loader
operator|.
name|CacheLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cache
operator|.
name|CacheLoaderWrapper
import|;
end_import

begin_class
DECL|class|WrappedJMSCacheLoader
specifier|public
class|class
name|WrappedJMSCacheLoader
implements|implements
name|CacheLoaderWrapper
block|{
DECL|field|jmsCacheLoader
specifier|private
name|JMSCacheLoader
name|jmsCacheLoader
decl_stmt|;
DECL|field|defaultLoaderArgument
specifier|private
name|String
name|defaultLoaderArgument
init|=
literal|""
decl_stmt|;
DECL|field|getQueueConnection
specifier|private
name|QueueConnection
name|getQueueConnection
decl_stmt|;
DECL|field|getQueue
specifier|private
name|Queue
name|getQueue
decl_stmt|;
DECL|field|acknowledgementMode
specifier|private
name|AcknowledgementMode
name|acknowledgementMode
decl_stmt|;
DECL|field|timeoutMillis
specifier|private
name|int
name|timeoutMillis
decl_stmt|;
DECL|method|WrappedJMSCacheLoader (QueueConnection getQueueConnection, Queue getQueue, AcknowledgementMode acknowledgementMode, int timeoutMillis)
specifier|public
name|WrappedJMSCacheLoader
parameter_list|(
name|QueueConnection
name|getQueueConnection
parameter_list|,
name|Queue
name|getQueue
parameter_list|,
name|AcknowledgementMode
name|acknowledgementMode
parameter_list|,
name|int
name|timeoutMillis
parameter_list|)
block|{
name|this
operator|.
name|getQueueConnection
operator|=
name|getQueueConnection
expr_stmt|;
name|this
operator|.
name|getQueue
operator|=
name|getQueue
expr_stmt|;
name|this
operator|.
name|acknowledgementMode
operator|=
name|acknowledgementMode
expr_stmt|;
name|this
operator|.
name|timeoutMillis
operator|=
name|timeoutMillis
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|clone (Ehcache arg0)
specifier|public
name|CacheLoader
name|clone
parameter_list|(
name|Ehcache
name|arg0
parameter_list|)
throws|throws
name|CloneNotSupportedException
block|{
return|return
name|jmsCacheLoader
operator|.
name|clone
argument_list|(
name|arg0
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|dispose ()
specifier|public
name|void
name|dispose
parameter_list|()
throws|throws
name|CacheException
block|{
name|jmsCacheLoader
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|jmsCacheLoader
operator|.
name|getName
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getStatus ()
specifier|public
name|Status
name|getStatus
parameter_list|()
block|{
return|return
name|jmsCacheLoader
operator|.
name|getStatus
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|init ()
specifier|public
name|void
name|init
parameter_list|()
block|{
name|jmsCacheLoader
operator|.
name|init
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|load (Object arg0)
specifier|public
name|Object
name|load
parameter_list|(
name|Object
name|arg0
parameter_list|)
throws|throws
name|CacheException
block|{
return|return
name|jmsCacheLoader
operator|.
name|load
argument_list|(
name|arg0
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|load (Object arg0, Object arg1)
specifier|public
name|Object
name|load
parameter_list|(
name|Object
name|arg0
parameter_list|,
name|Object
name|arg1
parameter_list|)
block|{
return|return
name|jmsCacheLoader
operator|.
name|load
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|loadAll (Collection arg0)
specifier|public
name|Map
name|loadAll
parameter_list|(
name|Collection
name|arg0
parameter_list|)
block|{
return|return
name|jmsCacheLoader
operator|.
name|loadAll
argument_list|(
name|arg0
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|loadAll (Collection arg0, Object arg1)
specifier|public
name|Map
name|loadAll
parameter_list|(
name|Collection
name|arg0
parameter_list|,
name|Object
name|arg1
parameter_list|)
block|{
return|return
name|jmsCacheLoader
operator|.
name|loadAll
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|init (Ehcache cache)
specifier|public
name|void
name|init
parameter_list|(
name|Ehcache
name|cache
parameter_list|)
block|{
name|jmsCacheLoader
operator|=
operator|new
name|JMSCacheLoader
argument_list|(
name|cache
argument_list|,
name|defaultLoaderArgument
argument_list|,
name|getQueueConnection
argument_list|,
name|getQueue
argument_list|,
name|acknowledgementMode
argument_list|,
name|timeoutMillis
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

