begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.nagios.springboot
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nagios
operator|.
name|springboot
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nagios
operator|.
name|NagiosConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nagios
operator|.
name|NagiosEncryptionMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|context
operator|.
name|properties
operator|.
name|ConfigurationProperties
import|;
end_import

begin_comment
comment|/**  * To send passive checks to Nagios using JSendNSCA.  *   * Generated by camel-package-maven-plugin - do not edit this file!  */
end_comment

begin_class
annotation|@
name|ConfigurationProperties
argument_list|(
name|prefix
operator|=
literal|"camel.component.nagios"
argument_list|)
DECL|class|NagiosComponentConfiguration
specifier|public
class|class
name|NagiosComponentConfiguration
block|{
comment|/**      * To use a shared configuraiton. Properties of the shared configuration can      * also be set individually.      */
DECL|field|configuration
specifier|private
name|NagiosConfiguration
name|configuration
decl_stmt|;
comment|/**      * This is the address of the Nagios host where checks should be send.      */
DECL|field|host
specifier|private
name|String
name|host
decl_stmt|;
comment|/**      * The port number of the host.      */
DECL|field|port
specifier|private
name|Integer
name|port
decl_stmt|;
comment|/**      * Connection timeout in millis.      */
DECL|field|connectionTimeout
specifier|private
name|Integer
name|connectionTimeout
decl_stmt|;
comment|/**      * Sending timeout in millis.      */
DECL|field|timeout
specifier|private
name|Integer
name|timeout
decl_stmt|;
comment|/**      * Password to be authenticated when sending checks to Nagios.      */
DECL|field|password
specifier|private
name|String
name|password
decl_stmt|;
comment|/**      * To specify an encryption method.      */
DECL|field|encryptionMethod
specifier|private
name|NagiosEncryptionMethod
name|encryptionMethod
decl_stmt|;
DECL|method|getConfiguration ()
specifier|public
name|NagiosConfiguration
name|getConfiguration
parameter_list|()
block|{
return|return
name|configuration
return|;
block|}
DECL|method|setConfiguration (NagiosConfiguration configuration)
specifier|public
name|void
name|setConfiguration
parameter_list|(
name|NagiosConfiguration
name|configuration
parameter_list|)
block|{
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
block|}
DECL|method|getHost ()
specifier|public
name|String
name|getHost
parameter_list|()
block|{
return|return
name|host
return|;
block|}
DECL|method|setHost (String host)
specifier|public
name|void
name|setHost
parameter_list|(
name|String
name|host
parameter_list|)
block|{
name|this
operator|.
name|host
operator|=
name|host
expr_stmt|;
block|}
DECL|method|getPort ()
specifier|public
name|Integer
name|getPort
parameter_list|()
block|{
return|return
name|port
return|;
block|}
DECL|method|setPort (Integer port)
specifier|public
name|void
name|setPort
parameter_list|(
name|Integer
name|port
parameter_list|)
block|{
name|this
operator|.
name|port
operator|=
name|port
expr_stmt|;
block|}
DECL|method|getConnectionTimeout ()
specifier|public
name|Integer
name|getConnectionTimeout
parameter_list|()
block|{
return|return
name|connectionTimeout
return|;
block|}
DECL|method|setConnectionTimeout (Integer connectionTimeout)
specifier|public
name|void
name|setConnectionTimeout
parameter_list|(
name|Integer
name|connectionTimeout
parameter_list|)
block|{
name|this
operator|.
name|connectionTimeout
operator|=
name|connectionTimeout
expr_stmt|;
block|}
DECL|method|getTimeout ()
specifier|public
name|Integer
name|getTimeout
parameter_list|()
block|{
return|return
name|timeout
return|;
block|}
DECL|method|setTimeout (Integer timeout)
specifier|public
name|void
name|setTimeout
parameter_list|(
name|Integer
name|timeout
parameter_list|)
block|{
name|this
operator|.
name|timeout
operator|=
name|timeout
expr_stmt|;
block|}
DECL|method|getPassword ()
specifier|public
name|String
name|getPassword
parameter_list|()
block|{
return|return
name|password
return|;
block|}
DECL|method|setPassword (String password)
specifier|public
name|void
name|setPassword
parameter_list|(
name|String
name|password
parameter_list|)
block|{
name|this
operator|.
name|password
operator|=
name|password
expr_stmt|;
block|}
DECL|method|getEncryptionMethod ()
specifier|public
name|NagiosEncryptionMethod
name|getEncryptionMethod
parameter_list|()
block|{
return|return
name|encryptionMethod
return|;
block|}
DECL|method|setEncryptionMethod (NagiosEncryptionMethod encryptionMethod)
specifier|public
name|void
name|setEncryptionMethod
parameter_list|(
name|NagiosEncryptionMethod
name|encryptionMethod
parameter_list|)
block|{
name|this
operator|.
name|encryptionMethod
operator|=
name|encryptionMethod
expr_stmt|;
block|}
block|}
end_class

end_unit

