begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.netty4.http.springboot
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|netty4
operator|.
name|http
operator|.
name|springboot
package|;
end_package

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|util
operator|.
name|concurrent
operator|.
name|EventExecutorGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|LoggingLevel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|netty4
operator|.
name|NettyConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|netty4
operator|.
name|http
operator|.
name|NettyHttpBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|netty4
operator|.
name|http
operator|.
name|SecurityAuthenticator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|netty4
operator|.
name|http
operator|.
name|SecurityConstraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|HeaderFilterStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|context
operator|.
name|properties
operator|.
name|ConfigurationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|context
operator|.
name|properties
operator|.
name|NestedConfigurationProperty
import|;
end_import

begin_comment
comment|/**  * Netty HTTP server and client using the Netty 4.x library.  *   * Generated by camel-package-maven-plugin - do not edit this file!  */
end_comment

begin_class
annotation|@
name|ConfigurationProperties
argument_list|(
name|prefix
operator|=
literal|"camel.component.netty4-http"
argument_list|)
DECL|class|NettyHttpComponentConfiguration
specifier|public
class|class
name|NettyHttpComponentConfiguration
block|{
comment|/**      * To use a custom org.apache.camel.component.netty4.http.NettyHttpBinding      * for binding to/from Netty and Camel Message API.      */
annotation|@
name|NestedConfigurationProperty
DECL|field|nettyHttpBinding
specifier|private
name|NettyHttpBinding
name|nettyHttpBinding
decl_stmt|;
comment|/**      * To use a custom org.apache.camel.spi.HeaderFilterStrategy to filter      * headers.      */
annotation|@
name|NestedConfigurationProperty
DECL|field|headerFilterStrategy
specifier|private
name|HeaderFilterStrategy
name|headerFilterStrategy
decl_stmt|;
comment|/**      * Refers to a      * org.apache.camel.component.netty4.http.NettyHttpSecurityConfiguration for      * configuring secure web resources.      */
DECL|field|securityConfiguration
specifier|private
name|NettyHttpSecurityConfigurationNestedConfiguration
name|securityConfiguration
decl_stmt|;
comment|/**      * The thread pool size for the EventExecutorGroup if its in use. The      * default value is 16.      */
DECL|field|maximumPoolSize
specifier|private
name|Integer
name|maximumPoolSize
decl_stmt|;
comment|/**      * To use the NettyConfiguration as configuration when creating endpoints.      */
annotation|@
name|NestedConfigurationProperty
DECL|field|configuration
specifier|private
name|NettyConfiguration
name|configuration
decl_stmt|;
comment|/**      * To use the given EventExecutorGroup      */
annotation|@
name|NestedConfigurationProperty
DECL|field|executorService
specifier|private
name|EventExecutorGroup
name|executorService
decl_stmt|;
DECL|method|getNettyHttpBinding ()
specifier|public
name|NettyHttpBinding
name|getNettyHttpBinding
parameter_list|()
block|{
return|return
name|nettyHttpBinding
return|;
block|}
DECL|method|setNettyHttpBinding (NettyHttpBinding nettyHttpBinding)
specifier|public
name|void
name|setNettyHttpBinding
parameter_list|(
name|NettyHttpBinding
name|nettyHttpBinding
parameter_list|)
block|{
name|this
operator|.
name|nettyHttpBinding
operator|=
name|nettyHttpBinding
expr_stmt|;
block|}
DECL|method|getHeaderFilterStrategy ()
specifier|public
name|HeaderFilterStrategy
name|getHeaderFilterStrategy
parameter_list|()
block|{
return|return
name|headerFilterStrategy
return|;
block|}
DECL|method|setHeaderFilterStrategy ( HeaderFilterStrategy headerFilterStrategy)
specifier|public
name|void
name|setHeaderFilterStrategy
parameter_list|(
name|HeaderFilterStrategy
name|headerFilterStrategy
parameter_list|)
block|{
name|this
operator|.
name|headerFilterStrategy
operator|=
name|headerFilterStrategy
expr_stmt|;
block|}
DECL|method|getSecurityConfiguration ()
specifier|public
name|NettyHttpSecurityConfigurationNestedConfiguration
name|getSecurityConfiguration
parameter_list|()
block|{
return|return
name|securityConfiguration
return|;
block|}
DECL|method|setSecurityConfiguration ( NettyHttpSecurityConfigurationNestedConfiguration securityConfiguration)
specifier|public
name|void
name|setSecurityConfiguration
parameter_list|(
name|NettyHttpSecurityConfigurationNestedConfiguration
name|securityConfiguration
parameter_list|)
block|{
name|this
operator|.
name|securityConfiguration
operator|=
name|securityConfiguration
expr_stmt|;
block|}
DECL|method|getMaximumPoolSize ()
specifier|public
name|Integer
name|getMaximumPoolSize
parameter_list|()
block|{
return|return
name|maximumPoolSize
return|;
block|}
DECL|method|setMaximumPoolSize (Integer maximumPoolSize)
specifier|public
name|void
name|setMaximumPoolSize
parameter_list|(
name|Integer
name|maximumPoolSize
parameter_list|)
block|{
name|this
operator|.
name|maximumPoolSize
operator|=
name|maximumPoolSize
expr_stmt|;
block|}
DECL|method|getConfiguration ()
specifier|public
name|NettyConfiguration
name|getConfiguration
parameter_list|()
block|{
return|return
name|configuration
return|;
block|}
DECL|method|setConfiguration (NettyConfiguration configuration)
specifier|public
name|void
name|setConfiguration
parameter_list|(
name|NettyConfiguration
name|configuration
parameter_list|)
block|{
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
block|}
DECL|method|getExecutorService ()
specifier|public
name|EventExecutorGroup
name|getExecutorService
parameter_list|()
block|{
return|return
name|executorService
return|;
block|}
DECL|method|setExecutorService (EventExecutorGroup executorService)
specifier|public
name|void
name|setExecutorService
parameter_list|(
name|EventExecutorGroup
name|executorService
parameter_list|)
block|{
name|this
operator|.
name|executorService
operator|=
name|executorService
expr_stmt|;
block|}
DECL|class|NettyHttpSecurityConfigurationNestedConfiguration
specifier|public
specifier|static
class|class
name|NettyHttpSecurityConfigurationNestedConfiguration
block|{
DECL|field|CAMEL_NESTED_CLASS
specifier|public
specifier|static
specifier|final
name|Class
name|CAMEL_NESTED_CLASS
init|=
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|netty4
operator|.
name|http
operator|.
name|NettyHttpSecurityConfiguration
operator|.
name|class
decl_stmt|;
comment|/**          * Whether to enable authentication          *<p/>          * This is by default enabled.          */
DECL|field|authenticate
specifier|private
name|Boolean
name|authenticate
decl_stmt|;
comment|/**          * The supported restricted.          *<p/>          * Currently only Basic is supported.          */
DECL|field|constraint
specifier|private
name|String
name|constraint
decl_stmt|;
comment|/**          * Sets the name of the realm to use.          */
DECL|field|realm
specifier|private
name|String
name|realm
decl_stmt|;
comment|/**          * Sets a {@link SecurityConstraint} to use for checking if a web          * resource is restricted or not          *<p/>          * By default this is<tt>null</tt>, which means all resources is          * restricted.          */
annotation|@
name|NestedConfigurationProperty
DECL|field|securityConstraint
specifier|private
name|SecurityConstraint
name|securityConstraint
decl_stmt|;
comment|/**          * Sets the {@link SecurityAuthenticator} to use for authenticating the          * {@link HttpPrincipal} .          */
annotation|@
name|NestedConfigurationProperty
DECL|field|securityAuthenticator
specifier|private
name|SecurityAuthenticator
name|securityAuthenticator
decl_stmt|;
comment|/**          * Sets a logging level to use for logging denied login attempts (incl          * stacktraces)          *<p/>          * This level is by default DEBUG.          */
DECL|field|loginDeniedLoggingLevel
specifier|private
name|LoggingLevel
name|loginDeniedLoggingLevel
decl_stmt|;
DECL|field|roleClassName
specifier|private
name|String
name|roleClassName
decl_stmt|;
DECL|method|getAuthenticate ()
specifier|public
name|Boolean
name|getAuthenticate
parameter_list|()
block|{
return|return
name|authenticate
return|;
block|}
DECL|method|setAuthenticate (Boolean authenticate)
specifier|public
name|void
name|setAuthenticate
parameter_list|(
name|Boolean
name|authenticate
parameter_list|)
block|{
name|this
operator|.
name|authenticate
operator|=
name|authenticate
expr_stmt|;
block|}
DECL|method|getConstraint ()
specifier|public
name|String
name|getConstraint
parameter_list|()
block|{
return|return
name|constraint
return|;
block|}
DECL|method|setConstraint (String constraint)
specifier|public
name|void
name|setConstraint
parameter_list|(
name|String
name|constraint
parameter_list|)
block|{
name|this
operator|.
name|constraint
operator|=
name|constraint
expr_stmt|;
block|}
DECL|method|getRealm ()
specifier|public
name|String
name|getRealm
parameter_list|()
block|{
return|return
name|realm
return|;
block|}
DECL|method|setRealm (String realm)
specifier|public
name|void
name|setRealm
parameter_list|(
name|String
name|realm
parameter_list|)
block|{
name|this
operator|.
name|realm
operator|=
name|realm
expr_stmt|;
block|}
DECL|method|getSecurityConstraint ()
specifier|public
name|SecurityConstraint
name|getSecurityConstraint
parameter_list|()
block|{
return|return
name|securityConstraint
return|;
block|}
DECL|method|setSecurityConstraint (SecurityConstraint securityConstraint)
specifier|public
name|void
name|setSecurityConstraint
parameter_list|(
name|SecurityConstraint
name|securityConstraint
parameter_list|)
block|{
name|this
operator|.
name|securityConstraint
operator|=
name|securityConstraint
expr_stmt|;
block|}
DECL|method|getSecurityAuthenticator ()
specifier|public
name|SecurityAuthenticator
name|getSecurityAuthenticator
parameter_list|()
block|{
return|return
name|securityAuthenticator
return|;
block|}
DECL|method|setSecurityAuthenticator ( SecurityAuthenticator securityAuthenticator)
specifier|public
name|void
name|setSecurityAuthenticator
parameter_list|(
name|SecurityAuthenticator
name|securityAuthenticator
parameter_list|)
block|{
name|this
operator|.
name|securityAuthenticator
operator|=
name|securityAuthenticator
expr_stmt|;
block|}
DECL|method|getLoginDeniedLoggingLevel ()
specifier|public
name|LoggingLevel
name|getLoginDeniedLoggingLevel
parameter_list|()
block|{
return|return
name|loginDeniedLoggingLevel
return|;
block|}
DECL|method|setLoginDeniedLoggingLevel ( LoggingLevel loginDeniedLoggingLevel)
specifier|public
name|void
name|setLoginDeniedLoggingLevel
parameter_list|(
name|LoggingLevel
name|loginDeniedLoggingLevel
parameter_list|)
block|{
name|this
operator|.
name|loginDeniedLoggingLevel
operator|=
name|loginDeniedLoggingLevel
expr_stmt|;
block|}
DECL|method|getRoleClassName ()
specifier|public
name|String
name|getRoleClassName
parameter_list|()
block|{
return|return
name|roleClassName
return|;
block|}
DECL|method|setRoleClassName (String roleClassName)
specifier|public
name|void
name|setRoleClassName
parameter_list|(
name|String
name|roleClassName
parameter_list|)
block|{
name|this
operator|.
name|roleClassName
operator|=
name|roleClassName
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

