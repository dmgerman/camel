begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.karaf.commands
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|karaf
operator|.
name|commands
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|commands
operator|.
name|BacklogTracerStartCommand
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|gogo
operator|.
name|commands
operator|.
name|Argument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|gogo
operator|.
name|commands
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|gogo
operator|.
name|commands
operator|.
name|Option
import|;
end_import

begin_class
annotation|@
name|Command
argument_list|(
name|scope
operator|=
literal|"camel"
argument_list|,
name|name
operator|=
literal|"backlog-tracer-start"
argument_list|,
name|description
operator|=
literal|"Starts the Backlog tracer"
argument_list|)
DECL|class|BacklogTracerStart
specifier|public
class|class
name|BacklogTracerStart
extends|extends
name|CamelCommandSupport
block|{
annotation|@
name|Argument
argument_list|(
name|index
operator|=
literal|0
argument_list|,
name|name
operator|=
literal|"context"
argument_list|,
name|description
operator|=
literal|"The name of the Camel context."
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
DECL|field|context
name|String
name|context
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--pattern"
argument_list|,
name|aliases
operator|=
literal|"-p"
argument_list|,
name|description
operator|=
literal|"To trace messages only for nodes or routes matching the given pattern (default is all)"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
DECL|field|pattern
name|String
name|pattern
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--filter"
argument_list|,
name|aliases
operator|=
literal|"-f"
argument_list|,
name|description
operator|=
literal|"To trace messages only for nodes or routes matching the given filter (using simple language by default)"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
DECL|field|filter
name|String
name|filter
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--backlogSize"
argument_list|,
name|aliases
operator|=
literal|"-s"
argument_list|,
name|description
operator|=
literal|"Number of maximum traced messages in total to keep in the backlog (FIFO queue)"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|,
name|valueToShowInHelp
operator|=
literal|"1000"
argument_list|)
DECL|field|backlogSize
name|Integer
name|backlogSize
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--removeOnDump"
argument_list|,
name|aliases
operator|=
literal|"-r"
argument_list|,
name|description
operator|=
literal|"Whether to remove traced messages when dumping the messages"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
DECL|field|removeOnDump
name|Boolean
name|removeOnDump
decl_stmt|;
annotation|@
name|Override
DECL|method|doExecute ()
specifier|protected
name|Object
name|doExecute
parameter_list|()
throws|throws
name|Exception
block|{
name|BacklogTracerStartCommand
name|command
init|=
operator|new
name|BacklogTracerStartCommand
argument_list|(
name|context
argument_list|,
name|pattern
argument_list|,
name|filter
argument_list|,
name|backlogSize
argument_list|,
name|removeOnDump
argument_list|)
decl_stmt|;
return|return
name|command
operator|.
name|execute
argument_list|(
name|camelController
argument_list|,
name|System
operator|.
name|out
argument_list|,
name|System
operator|.
name|err
argument_list|)
return|;
block|}
block|}
end_class

end_unit

