begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.springboot.commands.crsh
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|springboot
operator|.
name|commands
operator|.
name|crsh
package|;
end_package

begin_import
import|import
name|org
operator|.
name|crsh
operator|.
name|plugin
operator|.
name|CRaSHPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|ListableBeanFactory
import|;
end_import

begin_class
DECL|class|CamelCommandsPlugin
specifier|public
class|class
name|CamelCommandsPlugin
extends|extends
name|CRaSHPlugin
argument_list|<
name|CamelCommandsPlugin
argument_list|>
block|{
DECL|field|camelPlugin
specifier|private
specifier|static
name|CamelCommandsPlugin
name|camelPlugin
decl_stmt|;
DECL|method|setCamelPlugin (CamelCommandsPlugin plugin)
specifier|private
specifier|static
name|void
name|setCamelPlugin
parameter_list|(
name|CamelCommandsPlugin
name|plugin
parameter_list|)
block|{
name|camelPlugin
operator|=
name|plugin
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|CamelCommandsPlugin
name|getInstance
parameter_list|()
block|{
return|return
name|camelPlugin
return|;
block|}
DECL|field|facade
specifier|private
name|CamelCommandsFacade
name|facade
decl_stmt|;
annotation|@
name|Override
DECL|method|getImplementation ()
specifier|public
name|CamelCommandsPlugin
name|getImplementation
parameter_list|()
block|{
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|init ()
specifier|public
name|void
name|init
parameter_list|()
block|{
name|ListableBeanFactory
name|beanFactory
init|=
operator|(
name|ListableBeanFactory
operator|)
name|getContext
argument_list|()
operator|.
name|getAttributes
argument_list|()
operator|.
name|get
argument_list|(
literal|"spring.beanfactory"
argument_list|)
decl_stmt|;
name|this
operator|.
name|facade
operator|=
operator|new
name|CamelCommandsFacade
argument_list|(
operator|new
name|CamelControllerImpl
argument_list|(
name|beanFactory
argument_list|)
argument_list|)
expr_stmt|;
name|setCamelPlugin
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|destroy ()
specifier|public
name|void
name|destroy
parameter_list|()
block|{     }
DECL|method|getCamelCommandsFacade ()
name|CamelCommandsFacade
name|getCamelCommandsFacade
parameter_list|()
block|{
return|return
name|this
operator|.
name|facade
return|;
block|}
block|}
end_class

end_unit

