begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.commands
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|commands
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|interceptor
operator|.
name|BacklogTracer
import|;
end_import

begin_class
DECL|class|BacklogTracerStartCommand
specifier|public
class|class
name|BacklogTracerStartCommand
extends|extends
name|AbstractContextCommand
block|{
DECL|field|pattern
specifier|private
name|String
name|pattern
decl_stmt|;
DECL|field|filter
specifier|private
name|String
name|filter
decl_stmt|;
DECL|field|backlogSize
specifier|private
name|Integer
name|backlogSize
decl_stmt|;
DECL|field|removeOnDump
specifier|private
name|Boolean
name|removeOnDump
decl_stmt|;
DECL|method|BacklogTracerStartCommand (String context, String pattern, String filter, Integer backlogSize, Boolean removeOnDump)
specifier|public
name|BacklogTracerStartCommand
parameter_list|(
name|String
name|context
parameter_list|,
name|String
name|pattern
parameter_list|,
name|String
name|filter
parameter_list|,
name|Integer
name|backlogSize
parameter_list|,
name|Boolean
name|removeOnDump
parameter_list|)
block|{
name|super
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|this
operator|.
name|pattern
operator|=
name|pattern
expr_stmt|;
name|this
operator|.
name|filter
operator|=
name|filter
expr_stmt|;
name|this
operator|.
name|backlogSize
operator|=
name|backlogSize
expr_stmt|;
name|this
operator|.
name|removeOnDump
operator|=
name|removeOnDump
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|performContextCommand (CamelController camelController, CamelContext camelContext, PrintStream out, PrintStream err)
specifier|protected
name|Object
name|performContextCommand
parameter_list|(
name|CamelController
name|camelController
parameter_list|,
name|CamelContext
name|camelContext
parameter_list|,
name|PrintStream
name|out
parameter_list|,
name|PrintStream
name|err
parameter_list|)
throws|throws
name|Exception
block|{
name|BacklogTracer
name|backlogTracer
init|=
name|BacklogTracer
operator|.
name|getBacklogTracer
argument_list|(
name|camelContext
argument_list|)
decl_stmt|;
if|if
condition|(
name|backlogTracer
operator|==
literal|null
condition|)
block|{
name|backlogTracer
operator|=
operator|(
name|BacklogTracer
operator|)
name|camelContext
operator|.
name|getDefaultBacklogTracer
argument_list|()
expr_stmt|;
block|}
name|backlogTracer
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|backlogSize
operator|!=
literal|null
condition|)
block|{
name|backlogTracer
operator|.
name|setBacklogSize
argument_list|(
name|backlogSize
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|removeOnDump
operator|!=
literal|null
condition|)
block|{
name|backlogTracer
operator|.
name|setRemoveOnDump
argument_list|(
name|removeOnDump
argument_list|)
expr_stmt|;
block|}
name|backlogTracer
operator|.
name|setTracePattern
argument_list|(
name|pattern
argument_list|)
expr_stmt|;
name|backlogTracer
operator|.
name|setTraceFilter
argument_list|(
name|filter
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"BacklogTracer started on "
operator|+
name|camelContext
operator|.
name|getName
argument_list|()
operator|+
literal|" with size: "
operator|+
name|backlogTracer
operator|.
name|getBacklogSize
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

