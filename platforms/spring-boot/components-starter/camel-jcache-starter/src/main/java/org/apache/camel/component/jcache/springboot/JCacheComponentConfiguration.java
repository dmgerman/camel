begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jcache.springboot
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jcache
operator|.
name|springboot
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|cache
operator|.
name|configuration
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|context
operator|.
name|properties
operator|.
name|ConfigurationProperties
import|;
end_import

begin_comment
comment|/**  * The jcache component enables you to perform caching operations using  * JSR107/JCache as cache implementation.  *   * Generated by camel-package-maven-plugin - do not edit this file!  */
end_comment

begin_class
annotation|@
name|ConfigurationProperties
argument_list|(
name|prefix
operator|=
literal|"camel.component.jcache"
argument_list|)
DECL|class|JCacheComponentConfiguration
specifier|public
class|class
name|JCacheComponentConfiguration
block|{
comment|/**      * The fully qualified class name of the javax.cache.spi.CachingProvider      */
DECL|field|cachingProvider
specifier|private
name|String
name|cachingProvider
decl_stmt|;
comment|/**      * A Configuration for the Cache      */
DECL|field|cacheConfiguration
specifier|private
name|Configuration
name|cacheConfiguration
decl_stmt|;
comment|/**      * The Properties for the javax.cache.spi.CachingProvider to create the      * CacheManager      */
DECL|field|cacheConfigurationProperties
specifier|private
name|Properties
name|cacheConfigurationProperties
decl_stmt|;
comment|/**      * An implementation specific URI for the CacheManager      */
DECL|field|configurationUri
specifier|private
name|String
name|configurationUri
decl_stmt|;
comment|/**      * Whether the component should resolve property placeholders on itself when      * starting. Only properties which are of String type can use property      * placeholders.      */
DECL|field|resolvePropertyPlaceholders
specifier|private
name|Boolean
name|resolvePropertyPlaceholders
init|=
literal|true
decl_stmt|;
DECL|method|getCachingProvider ()
specifier|public
name|String
name|getCachingProvider
parameter_list|()
block|{
return|return
name|cachingProvider
return|;
block|}
DECL|method|setCachingProvider (String cachingProvider)
specifier|public
name|void
name|setCachingProvider
parameter_list|(
name|String
name|cachingProvider
parameter_list|)
block|{
name|this
operator|.
name|cachingProvider
operator|=
name|cachingProvider
expr_stmt|;
block|}
DECL|method|getCacheConfiguration ()
specifier|public
name|Configuration
name|getCacheConfiguration
parameter_list|()
block|{
return|return
name|cacheConfiguration
return|;
block|}
DECL|method|setCacheConfiguration (Configuration cacheConfiguration)
specifier|public
name|void
name|setCacheConfiguration
parameter_list|(
name|Configuration
name|cacheConfiguration
parameter_list|)
block|{
name|this
operator|.
name|cacheConfiguration
operator|=
name|cacheConfiguration
expr_stmt|;
block|}
DECL|method|getCacheConfigurationProperties ()
specifier|public
name|Properties
name|getCacheConfigurationProperties
parameter_list|()
block|{
return|return
name|cacheConfigurationProperties
return|;
block|}
DECL|method|setCacheConfigurationProperties ( Properties cacheConfigurationProperties)
specifier|public
name|void
name|setCacheConfigurationProperties
parameter_list|(
name|Properties
name|cacheConfigurationProperties
parameter_list|)
block|{
name|this
operator|.
name|cacheConfigurationProperties
operator|=
name|cacheConfigurationProperties
expr_stmt|;
block|}
DECL|method|getConfigurationUri ()
specifier|public
name|String
name|getConfigurationUri
parameter_list|()
block|{
return|return
name|configurationUri
return|;
block|}
DECL|method|setConfigurationUri (String configurationUri)
specifier|public
name|void
name|setConfigurationUri
parameter_list|(
name|String
name|configurationUri
parameter_list|)
block|{
name|this
operator|.
name|configurationUri
operator|=
name|configurationUri
expr_stmt|;
block|}
DECL|method|getResolvePropertyPlaceholders ()
specifier|public
name|Boolean
name|getResolvePropertyPlaceholders
parameter_list|()
block|{
return|return
name|resolvePropertyPlaceholders
return|;
block|}
DECL|method|setResolvePropertyPlaceholders ( Boolean resolvePropertyPlaceholders)
specifier|public
name|void
name|setResolvePropertyPlaceholders
parameter_list|(
name|Boolean
name|resolvePropertyPlaceholders
parameter_list|)
block|{
name|this
operator|.
name|resolvePropertyPlaceholders
operator|=
name|resolvePropertyPlaceholders
expr_stmt|;
block|}
block|}
end_class

end_unit

