begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.kubernetes.springboot.test.cluster
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|kubernetes
operator|.
name|springboot
operator|.
name|test
operator|.
name|cluster
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|kubernetes
operator|.
name|cluster
operator|.
name|KubernetesClusterService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|kubernetes
operator|.
name|springboot
operator|.
name|cluster
operator|.
name|KubernetesClusterServiceAutoConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|AutoConfigurations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|EnableAutoConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|test
operator|.
name|context
operator|.
name|runner
operator|.
name|ApplicationContextRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Configuration
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_class
DECL|class|KubernetesClusterServiceAutoConfigurationTest
specifier|public
class|class
name|KubernetesClusterServiceAutoConfigurationTest
block|{
annotation|@
name|Test
DECL|method|testDisable ()
specifier|public
name|void
name|testDisable
parameter_list|()
block|{
operator|new
name|ApplicationContextRunner
argument_list|()
operator|.
name|withConfiguration
argument_list|(
name|AutoConfigurations
operator|.
name|of
argument_list|(
name|KubernetesClusterServiceAutoConfiguration
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|withUserConfiguration
argument_list|(
name|TestConfiguration
operator|.
name|class
argument_list|)
operator|.
name|run
argument_list|(
name|context
lambda|->
block|{
name|assertThat
argument_list|(
name|context
argument_list|)
operator|.
name|doesNotHaveBean
argument_list|(
name|KubernetesClusterService
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**      * Testing that the service can be enabled and configured completely.      */
annotation|@
name|Test
DECL|method|testPropertiesMapped ()
specifier|public
name|void
name|testPropertiesMapped
parameter_list|()
block|{
operator|new
name|ApplicationContextRunner
argument_list|()
operator|.
name|withConfiguration
argument_list|(
name|AutoConfigurations
operator|.
name|of
argument_list|(
name|KubernetesClusterServiceAutoConfiguration
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|withUserConfiguration
argument_list|(
name|TestConfiguration
operator|.
name|class
argument_list|)
operator|.
name|withPropertyValues
argument_list|(
literal|"spring.main.banner-mode=off"
argument_list|,
literal|"camel.component.kubernetes.cluster.service.enabled=true"
argument_list|,
literal|"camel.component.kubernetes.cluster.service.id=myid1"
argument_list|,
literal|"camel.component.kubernetes.cluster.service.master-url=http://myurl:9000"
argument_list|,
literal|"camel.component.kubernetes.cluster.service.connection-timeout-millis=1234"
argument_list|,
literal|"camel.component.kubernetes.cluster.service.kubernetes-namespace=ns1"
argument_list|,
literal|"camel.component.kubernetes.cluster.service.config-map-name=cm"
argument_list|,
literal|"camel.component.kubernetes.cluster.service.pod-name=mypod1"
argument_list|,
literal|"camel.component.kubernetes.cluster.service.cluster-labels.app=myapp"
argument_list|,
literal|"camel.component.kubernetes.cluster.service.cluster-labels.provider=myprovider"
argument_list|,
literal|"camel.component.kubernetes.cluster.service.lease-duration-millis=10000"
argument_list|,
literal|"camel.component.kubernetes.cluster.service.renew-deadline-millis=8000"
argument_list|,
literal|"camel.component.kubernetes.cluster.service.retry-period-millis=4000"
argument_list|)
operator|.
name|run
argument_list|(
name|context
lambda|->
block|{
specifier|final
name|KubernetesClusterService
name|clusterService
init|=
name|context
operator|.
name|getBean
argument_list|(
name|KubernetesClusterService
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"myid1"
argument_list|,
name|clusterService
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://myurl:9000"
argument_list|,
name|clusterService
operator|.
name|getMasterUrl
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1234
argument_list|)
argument_list|,
name|clusterService
operator|.
name|getConnectionTimeoutMillis
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ns1"
argument_list|,
name|clusterService
operator|.
name|getKubernetesNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cm"
argument_list|,
name|clusterService
operator|.
name|getConfigMapName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mypod1"
argument_list|,
name|clusterService
operator|.
name|getPodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|clusterService
operator|.
name|getClusterLabels
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|clusterService
operator|.
name|getClusterLabels
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"myapp"
argument_list|,
name|clusterService
operator|.
name|getClusterLabels
argument_list|()
operator|.
name|get
argument_list|(
literal|"app"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"myprovider"
argument_list|,
name|clusterService
operator|.
name|getClusterLabels
argument_list|()
operator|.
name|get
argument_list|(
literal|"provider"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1.2
argument_list|,
name|clusterService
operator|.
name|getJitterFactor
argument_list|()
argument_list|,
literal|1e-10
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10000
argument_list|,
name|clusterService
operator|.
name|getLeaseDurationMillis
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8000
argument_list|,
name|clusterService
operator|.
name|getRenewDeadlineMillis
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4000
argument_list|,
name|clusterService
operator|.
name|getRetryPeriodMillis
argument_list|()
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|EnableAutoConfiguration
annotation|@
name|Configuration
DECL|class|TestConfiguration
specifier|public
specifier|static
class|class
name|TestConfiguration
block|{     }
block|}
end_class

end_unit

