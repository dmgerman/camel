begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.kubernetes.springboot.test.cloud
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|kubernetes
operator|.
name|springboot
operator|.
name|test
operator|.
name|cloud
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|cloud
operator|.
name|ServiceDiscovery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|kubernetes
operator|.
name|cloud
operator|.
name|KubernetesClientServiceDiscovery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|kubernetes
operator|.
name|cloud
operator|.
name|KubernetesDnsServiceDiscovery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|kubernetes
operator|.
name|cloud
operator|.
name|KubernetesDnsSrvServiceDiscovery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|kubernetes
operator|.
name|cloud
operator|.
name|KubernetesEnvServiceDiscovery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|cloud
operator|.
name|springboot
operator|.
name|KubernetesServiceCallServiceDiscoveryConfigurationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|EnableAutoConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|test
operator|.
name|context
operator|.
name|runner
operator|.
name|ApplicationContextRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Configuration
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertThat
import|;
end_import

begin_class
DECL|class|KubernetesServiceDiscoveryAutoConfigurationTest
specifier|public
class|class
name|KubernetesServiceDiscoveryAutoConfigurationTest
block|{
annotation|@
name|Test
DECL|method|testServiceDiscoveryDisabled ()
specifier|public
name|void
name|testServiceDiscoveryDisabled
parameter_list|()
block|{
operator|new
name|ApplicationContextRunner
argument_list|()
operator|.
name|withUserConfiguration
argument_list|(
name|TestConfiguration
operator|.
name|class
argument_list|)
operator|.
name|withPropertyValues
argument_list|(
literal|"spring.main.banner-mode=off"
argument_list|,
literal|"camel.cloud.kubernetes.service-discovery.enabled=false"
argument_list|)
operator|.
name|run
argument_list|(
name|context
lambda|->
block|{
name|assertThat
argument_list|(
name|context
argument_list|)
operator|.
name|doesNotHaveBean
argument_list|(
name|KubernetesServiceCallServiceDiscoveryConfigurationProperties
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|context
argument_list|)
operator|.
name|getBeans
argument_list|(
name|ServiceDiscovery
operator|.
name|class
argument_list|)
operator|.
name|doesNotContainKeys
argument_list|(
literal|"kubernetes-service-discovery"
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testServiceDiscoveryEnabled ()
specifier|public
name|void
name|testServiceDiscoveryEnabled
parameter_list|()
block|{
operator|new
name|ApplicationContextRunner
argument_list|()
operator|.
name|withUserConfiguration
argument_list|(
name|TestConfiguration
operator|.
name|class
argument_list|)
operator|.
name|withPropertyValues
argument_list|(
literal|"spring.main.banner-mode=off"
argument_list|,
literal|"camel.cloud.kubernetes.service-discovery.enabled=true"
argument_list|)
operator|.
name|run
argument_list|(
name|context
lambda|->
block|{
name|assertThat
argument_list|(
name|context
argument_list|)
operator|.
name|hasSingleBean
argument_list|(
name|KubernetesServiceCallServiceDiscoveryConfigurationProperties
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|context
argument_list|)
operator|.
name|getBeans
argument_list|(
name|ServiceDiscovery
operator|.
name|class
argument_list|)
operator|.
name|containsKeys
argument_list|(
literal|"kubernetes-service-discovery"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|context
argument_list|)
operator|.
name|getBean
argument_list|(
literal|"kubernetes-service-discovery"
argument_list|)
operator|.
name|isInstanceOf
argument_list|(
name|KubernetesEnvServiceDiscovery
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testServiceDiscoveryWithEnv ()
specifier|public
name|void
name|testServiceDiscoveryWithEnv
parameter_list|()
block|{
operator|new
name|ApplicationContextRunner
argument_list|()
operator|.
name|withUserConfiguration
argument_list|(
name|TestConfiguration
operator|.
name|class
argument_list|)
operator|.
name|withPropertyValues
argument_list|(
literal|"spring.main.banner-mode=off"
argument_list|,
literal|"camel.cloud.kubernetes.service-discovery.enabled=true"
argument_list|,
literal|"camel.cloud.kubernetes.service-discovery.lookup=env"
argument_list|)
operator|.
name|run
argument_list|(
name|context
lambda|->
block|{
name|assertThat
argument_list|(
name|context
argument_list|)
operator|.
name|hasSingleBean
argument_list|(
name|KubernetesServiceCallServiceDiscoveryConfigurationProperties
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|context
argument_list|)
operator|.
name|getBeans
argument_list|(
name|ServiceDiscovery
operator|.
name|class
argument_list|)
operator|.
name|containsKeys
argument_list|(
literal|"kubernetes-service-discovery"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|context
argument_list|)
operator|.
name|getBean
argument_list|(
literal|"kubernetes-service-discovery"
argument_list|)
operator|.
name|isInstanceOf
argument_list|(
name|KubernetesEnvServiceDiscovery
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testServiceDiscoveryWithDns ()
specifier|public
name|void
name|testServiceDiscoveryWithDns
parameter_list|()
block|{
operator|new
name|ApplicationContextRunner
argument_list|()
operator|.
name|withUserConfiguration
argument_list|(
name|TestConfiguration
operator|.
name|class
argument_list|)
operator|.
name|withPropertyValues
argument_list|(
literal|"spring.main.banner-mode=off"
argument_list|,
literal|"camel.cloud.kubernetes.service-discovery.enabled=true"
argument_list|,
literal|"camel.cloud.kubernetes.service-discovery.lookup=dns"
argument_list|,
literal|"camel.cloud.kubernetes.service-discovery.dns-domain=mydomain"
argument_list|,
literal|"camel.cloud.kubernetes.service-discovery.namespace=mynamespace"
argument_list|)
operator|.
name|run
argument_list|(
name|context
lambda|->
block|{
name|assertThat
argument_list|(
name|context
argument_list|)
operator|.
name|hasSingleBean
argument_list|(
name|KubernetesServiceCallServiceDiscoveryConfigurationProperties
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|context
argument_list|)
operator|.
name|getBeans
argument_list|(
name|ServiceDiscovery
operator|.
name|class
argument_list|)
operator|.
name|containsKeys
argument_list|(
literal|"kubernetes-service-discovery"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|context
argument_list|)
operator|.
name|getBean
argument_list|(
literal|"kubernetes-service-discovery"
argument_list|)
operator|.
name|isInstanceOf
argument_list|(
name|KubernetesDnsServiceDiscovery
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testServiceDiscoveryWithDnsSrv ()
specifier|public
name|void
name|testServiceDiscoveryWithDnsSrv
parameter_list|()
block|{
operator|new
name|ApplicationContextRunner
argument_list|()
operator|.
name|withUserConfiguration
argument_list|(
name|TestConfiguration
operator|.
name|class
argument_list|)
operator|.
name|withPropertyValues
argument_list|(
literal|"spring.main.banner-mode=off"
argument_list|,
literal|"camel.cloud.kubernetes.service-discovery.enabled=true"
argument_list|,
literal|"camel.cloud.kubernetes.service-discovery.lookup=dnssrv"
argument_list|,
literal|"camel.cloud.kubernetes.service-discovery.port-name=myportname"
argument_list|,
literal|"camel.cloud.kubernetes.service-discovery.port-proocole=myportproto"
argument_list|,
literal|"camel.cloud.kubernetes.service-discovery.dns-domain=mydomain"
argument_list|,
literal|"camel.cloud.kubernetes.service-discovery.namespace=mynamespace"
argument_list|)
operator|.
name|run
argument_list|(
name|context
lambda|->
block|{
name|assertThat
argument_list|(
name|context
argument_list|)
operator|.
name|hasSingleBean
argument_list|(
name|KubernetesServiceCallServiceDiscoveryConfigurationProperties
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|context
argument_list|)
operator|.
name|getBeans
argument_list|(
name|ServiceDiscovery
operator|.
name|class
argument_list|)
operator|.
name|containsKeys
argument_list|(
literal|"kubernetes-service-discovery"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|context
argument_list|)
operator|.
name|getBean
argument_list|(
literal|"kubernetes-service-discovery"
argument_list|)
operator|.
name|isInstanceOf
argument_list|(
name|KubernetesDnsSrvServiceDiscovery
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testServiceDiscoveryWithClient ()
specifier|public
name|void
name|testServiceDiscoveryWithClient
parameter_list|()
block|{
operator|new
name|ApplicationContextRunner
argument_list|()
operator|.
name|withUserConfiguration
argument_list|(
name|TestConfiguration
operator|.
name|class
argument_list|)
operator|.
name|withPropertyValues
argument_list|(
literal|"spring.main.banner-mode=off"
argument_list|,
literal|"camel.cloud.kubernetes.service-discovery.enabled=true"
argument_list|,
literal|"camel.cloud.kubernetes.service-discovery.lookup=client"
argument_list|)
operator|.
name|run
argument_list|(
name|context
lambda|->
block|{
name|assertThat
argument_list|(
name|context
argument_list|)
operator|.
name|hasSingleBean
argument_list|(
name|KubernetesServiceCallServiceDiscoveryConfigurationProperties
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|context
argument_list|)
operator|.
name|getBeans
argument_list|(
name|ServiceDiscovery
operator|.
name|class
argument_list|)
operator|.
name|containsKeys
argument_list|(
literal|"kubernetes-service-discovery"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|context
argument_list|)
operator|.
name|getBean
argument_list|(
literal|"kubernetes-service-discovery"
argument_list|)
operator|.
name|isInstanceOf
argument_list|(
name|KubernetesClientServiceDiscovery
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|EnableAutoConfiguration
annotation|@
name|Configuration
DECL|class|TestConfiguration
specifier|public
specifier|static
class|class
name|TestConfiguration
block|{     }
block|}
end_class

end_unit

