begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.sjms.springboot
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sjms
operator|.
name|springboot
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sjms
operator|.
name|TransactionCommitStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sjms
operator|.
name|jms
operator|.
name|ConnectionResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sjms
operator|.
name|jms
operator|.
name|DestinationCreationStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sjms
operator|.
name|jms
operator|.
name|JmsKeyFormatStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sjms
operator|.
name|jms
operator|.
name|MessageCreatedStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|HeaderFilterStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|context
operator|.
name|properties
operator|.
name|ConfigurationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|context
operator|.
name|properties
operator|.
name|NestedConfigurationProperty
import|;
end_import

begin_comment
comment|/**  * The sjms component (simple jms) allows messages to be sent to (or consumed  * from) a JMS Queue or Topic.  *   * Generated by camel-package-maven-plugin - do not edit this file!  */
end_comment

begin_class
annotation|@
name|ConfigurationProperties
argument_list|(
name|prefix
operator|=
literal|"camel.component.sjms"
argument_list|)
DECL|class|SjmsComponentConfiguration
specifier|public
class|class
name|SjmsComponentConfiguration
block|{
comment|/**      * A ConnectionFactory is required to enable the SjmsComponent. It can be      * set directly or set set as part of a ConnectionResource.      */
DECL|field|connectionFactory
specifier|private
name|ConnectionFactory
name|connectionFactory
decl_stmt|;
comment|/**      * A ConnectionResource is an interface that allows for customization and      * container control of the ConnectionFactory. See Plugable Connection      * Resource Management for further details.      */
annotation|@
name|NestedConfigurationProperty
DECL|field|connectionResource
specifier|private
name|ConnectionResource
name|connectionResource
decl_stmt|;
comment|/**      * The maximum number of connections available to endpoints started under      * this component      */
DECL|field|connectionCount
specifier|private
name|Integer
name|connectionCount
init|=
literal|1
decl_stmt|;
comment|/**      * Pluggable strategy for encoding and decoding JMS keys so they can be      * compliant with the JMS specification. Camel provides one implementation      * out of the box: default. The default strategy will safely marshal dots      * and hyphens (. and -). Can be used for JMS brokers which do not care      * whether JMS header keys contain illegal characters. You can provide your      * own implementation of the      * org.apache.camel.component.jms.JmsKeyFormatStrategy and refer to it using      * the notation.      */
annotation|@
name|NestedConfigurationProperty
DECL|field|jmsKeyFormatStrategy
specifier|private
name|JmsKeyFormatStrategy
name|jmsKeyFormatStrategy
decl_stmt|;
comment|/**      * To configure which kind of commit strategy to use. Camel provides two      * implementations out of the box default and batch.      */
annotation|@
name|NestedConfigurationProperty
DECL|field|transactionCommitStrategy
specifier|private
name|TransactionCommitStrategy
name|transactionCommitStrategy
decl_stmt|;
comment|/**      * To use a custom DestinationCreationStrategy.      */
annotation|@
name|NestedConfigurationProperty
DECL|field|destinationCreationStrategy
specifier|private
name|DestinationCreationStrategy
name|destinationCreationStrategy
decl_stmt|;
comment|/**      * To use a custom TimedTaskManager      */
DECL|field|timedTaskManager
specifier|private
name|TimedTaskManagerNestedConfiguration
name|timedTaskManager
decl_stmt|;
comment|/**      * To use the given MessageCreatedStrategy which are invoked when Camel      * creates new instances of javax.jms.Message objects when Camel is sending      * a JMS message.      */
annotation|@
name|NestedConfigurationProperty
DECL|field|messageCreatedStrategy
specifier|private
name|MessageCreatedStrategy
name|messageCreatedStrategy
decl_stmt|;
comment|/**      * To use a custom org.apache.camel.spi.HeaderFilterStrategy to filter      * header to and from Camel message.      */
annotation|@
name|NestedConfigurationProperty
DECL|field|headerFilterStrategy
specifier|private
name|HeaderFilterStrategy
name|headerFilterStrategy
decl_stmt|;
DECL|method|getConnectionFactory ()
specifier|public
name|ConnectionFactory
name|getConnectionFactory
parameter_list|()
block|{
return|return
name|connectionFactory
return|;
block|}
DECL|method|setConnectionFactory (ConnectionFactory connectionFactory)
specifier|public
name|void
name|setConnectionFactory
parameter_list|(
name|ConnectionFactory
name|connectionFactory
parameter_list|)
block|{
name|this
operator|.
name|connectionFactory
operator|=
name|connectionFactory
expr_stmt|;
block|}
DECL|method|getConnectionResource ()
specifier|public
name|ConnectionResource
name|getConnectionResource
parameter_list|()
block|{
return|return
name|connectionResource
return|;
block|}
DECL|method|setConnectionResource (ConnectionResource connectionResource)
specifier|public
name|void
name|setConnectionResource
parameter_list|(
name|ConnectionResource
name|connectionResource
parameter_list|)
block|{
name|this
operator|.
name|connectionResource
operator|=
name|connectionResource
expr_stmt|;
block|}
DECL|method|getConnectionCount ()
specifier|public
name|Integer
name|getConnectionCount
parameter_list|()
block|{
return|return
name|connectionCount
return|;
block|}
DECL|method|setConnectionCount (Integer connectionCount)
specifier|public
name|void
name|setConnectionCount
parameter_list|(
name|Integer
name|connectionCount
parameter_list|)
block|{
name|this
operator|.
name|connectionCount
operator|=
name|connectionCount
expr_stmt|;
block|}
DECL|method|getJmsKeyFormatStrategy ()
specifier|public
name|JmsKeyFormatStrategy
name|getJmsKeyFormatStrategy
parameter_list|()
block|{
return|return
name|jmsKeyFormatStrategy
return|;
block|}
DECL|method|setJmsKeyFormatStrategy ( JmsKeyFormatStrategy jmsKeyFormatStrategy)
specifier|public
name|void
name|setJmsKeyFormatStrategy
parameter_list|(
name|JmsKeyFormatStrategy
name|jmsKeyFormatStrategy
parameter_list|)
block|{
name|this
operator|.
name|jmsKeyFormatStrategy
operator|=
name|jmsKeyFormatStrategy
expr_stmt|;
block|}
DECL|method|getTransactionCommitStrategy ()
specifier|public
name|TransactionCommitStrategy
name|getTransactionCommitStrategy
parameter_list|()
block|{
return|return
name|transactionCommitStrategy
return|;
block|}
DECL|method|setTransactionCommitStrategy ( TransactionCommitStrategy transactionCommitStrategy)
specifier|public
name|void
name|setTransactionCommitStrategy
parameter_list|(
name|TransactionCommitStrategy
name|transactionCommitStrategy
parameter_list|)
block|{
name|this
operator|.
name|transactionCommitStrategy
operator|=
name|transactionCommitStrategy
expr_stmt|;
block|}
DECL|method|getDestinationCreationStrategy ()
specifier|public
name|DestinationCreationStrategy
name|getDestinationCreationStrategy
parameter_list|()
block|{
return|return
name|destinationCreationStrategy
return|;
block|}
DECL|method|setDestinationCreationStrategy ( DestinationCreationStrategy destinationCreationStrategy)
specifier|public
name|void
name|setDestinationCreationStrategy
parameter_list|(
name|DestinationCreationStrategy
name|destinationCreationStrategy
parameter_list|)
block|{
name|this
operator|.
name|destinationCreationStrategy
operator|=
name|destinationCreationStrategy
expr_stmt|;
block|}
DECL|method|getTimedTaskManager ()
specifier|public
name|TimedTaskManagerNestedConfiguration
name|getTimedTaskManager
parameter_list|()
block|{
return|return
name|timedTaskManager
return|;
block|}
DECL|method|setTimedTaskManager ( TimedTaskManagerNestedConfiguration timedTaskManager)
specifier|public
name|void
name|setTimedTaskManager
parameter_list|(
name|TimedTaskManagerNestedConfiguration
name|timedTaskManager
parameter_list|)
block|{
name|this
operator|.
name|timedTaskManager
operator|=
name|timedTaskManager
expr_stmt|;
block|}
DECL|method|getMessageCreatedStrategy ()
specifier|public
name|MessageCreatedStrategy
name|getMessageCreatedStrategy
parameter_list|()
block|{
return|return
name|messageCreatedStrategy
return|;
block|}
DECL|method|setMessageCreatedStrategy ( MessageCreatedStrategy messageCreatedStrategy)
specifier|public
name|void
name|setMessageCreatedStrategy
parameter_list|(
name|MessageCreatedStrategy
name|messageCreatedStrategy
parameter_list|)
block|{
name|this
operator|.
name|messageCreatedStrategy
operator|=
name|messageCreatedStrategy
expr_stmt|;
block|}
DECL|method|getHeaderFilterStrategy ()
specifier|public
name|HeaderFilterStrategy
name|getHeaderFilterStrategy
parameter_list|()
block|{
return|return
name|headerFilterStrategy
return|;
block|}
DECL|method|setHeaderFilterStrategy ( HeaderFilterStrategy headerFilterStrategy)
specifier|public
name|void
name|setHeaderFilterStrategy
parameter_list|(
name|HeaderFilterStrategy
name|headerFilterStrategy
parameter_list|)
block|{
name|this
operator|.
name|headerFilterStrategy
operator|=
name|headerFilterStrategy
expr_stmt|;
block|}
DECL|class|TimedTaskManagerNestedConfiguration
specifier|public
specifier|static
class|class
name|TimedTaskManagerNestedConfiguration
block|{
DECL|field|CAMEL_NESTED_CLASS
specifier|public
specifier|static
specifier|final
name|Class
name|CAMEL_NESTED_CLASS
init|=
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sjms
operator|.
name|taskmanager
operator|.
name|TimedTaskManager
operator|.
name|class
decl_stmt|;
block|}
block|}
end_class

end_unit

