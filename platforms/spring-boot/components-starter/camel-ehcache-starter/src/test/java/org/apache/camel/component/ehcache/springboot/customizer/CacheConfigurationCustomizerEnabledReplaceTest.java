begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.ehcache.springboot.customizer
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ehcache
operator|.
name|springboot
operator|.
name|customizer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ehcache
operator|.
name|EhcacheComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ComponentCustomizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ehcache
operator|.
name|config
operator|.
name|CacheConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ehcache
operator|.
name|config
operator|.
name|builders
operator|.
name|CacheConfigurationBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ehcache
operator|.
name|config
operator|.
name|builders
operator|.
name|ResourcePoolsBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ehcache
operator|.
name|config
operator|.
name|units
operator|.
name|EntryUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ehcache
operator|.
name|config
operator|.
name|units
operator|.
name|MemoryUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|SpringBootApplication
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|test
operator|.
name|context
operator|.
name|SpringBootTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Bean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|Ordered
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|annotation
operator|.
name|Order
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|annotation
operator|.
name|DirtiesContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|junit4
operator|.
name|SpringRunner
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|SpringRunner
operator|.
name|class
argument_list|)
annotation|@
name|DirtiesContext
annotation|@
name|SpringBootApplication
annotation|@
name|SpringBootTest
argument_list|(
name|classes
operator|=
block|{
name|CacheConfigurationCustomizerEnabledReplaceTest
operator|.
name|TestConfiguration
operator|.
name|class
block|,
block|}
argument_list|,
name|properties
operator|=
block|{
literal|"debug=false"
block|,
literal|"camel.component.customizer.enabled=false"
block|,
literal|"camel.component.ehcache.customizer.enabled=true"
block|,
literal|"camel.component.ehcache.customizer.cache-configuration.enabled=true"
block|,
literal|"camel.component.ehcache.customizer.cache-configuration.mode=REPLACE"
block|}
argument_list|)
DECL|class|CacheConfigurationCustomizerEnabledReplaceTest
specifier|public
class|class
name|CacheConfigurationCustomizerEnabledReplaceTest
block|{
DECL|field|CACHE_CONFIG_ID
specifier|private
specifier|static
specifier|final
name|String
name|CACHE_CONFIG_ID
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
annotation|@
name|Autowired
DECL|field|configurations
name|Map
argument_list|<
name|String
argument_list|,
name|CacheConfiguration
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
argument_list|>
name|configurations
decl_stmt|;
annotation|@
name|Autowired
DECL|field|component
name|EhcacheComponent
name|component
decl_stmt|;
annotation|@
name|Test
DECL|method|testComponentConfiguration ()
specifier|public
name|void
name|testComponentConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|configurations
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|configurations
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|component
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|component
operator|.
name|getCachesConfigurations
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|component
operator|.
name|getCachesConfigurations
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|component
operator|.
name|getCachesConfigurations
argument_list|()
operator|.
name|containsKey
argument_list|(
literal|"myConfig1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|component
operator|.
name|getCachesConfigurations
argument_list|()
operator|.
name|containsKey
argument_list|(
literal|"myConfig2"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|component
operator|.
name|getCachesConfigurations
argument_list|()
operator|.
name|containsKey
argument_list|(
name|CACHE_CONFIG_ID
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Configuration
DECL|class|TestConfiguration
specifier|static
class|class
name|TestConfiguration
block|{
annotation|@
name|Order
argument_list|(
name|Ordered
operator|.
name|HIGHEST_PRECEDENCE
argument_list|)
annotation|@
name|Bean
DECL|method|customizer ()
specifier|public
name|ComponentCustomizer
argument_list|<
name|EhcacheComponent
argument_list|>
name|customizer
parameter_list|()
block|{
return|return
operator|new
name|ComponentCustomizer
argument_list|<
name|EhcacheComponent
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|customize
parameter_list|(
name|EhcacheComponent
name|component
parameter_list|)
block|{
name|component
operator|.
name|addCachesConfigurations
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
name|CACHE_CONFIG_ID
argument_list|,
name|CacheConfigurationBuilder
operator|.
name|newCacheConfigurationBuilder
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|String
operator|.
name|class
argument_list|,
name|ResourcePoolsBuilder
operator|.
name|newResourcePoolsBuilder
argument_list|()
operator|.
name|heap
argument_list|(
literal|2100
argument_list|,
name|EntryUnit
operator|.
name|ENTRIES
argument_list|)
operator|.
name|offheap
argument_list|(
literal|2
argument_list|,
name|MemoryUnit
operator|.
name|MB
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
annotation|@
name|Bean
DECL|method|myConfig1 ()
specifier|public
name|CacheConfiguration
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|myConfig1
parameter_list|()
block|{
return|return
name|CacheConfigurationBuilder
operator|.
name|newCacheConfigurationBuilder
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|String
operator|.
name|class
argument_list|,
name|ResourcePoolsBuilder
operator|.
name|newResourcePoolsBuilder
argument_list|()
operator|.
name|heap
argument_list|(
literal|100
argument_list|,
name|EntryUnit
operator|.
name|ENTRIES
argument_list|)
operator|.
name|offheap
argument_list|(
literal|1
argument_list|,
name|MemoryUnit
operator|.
name|MB
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Bean
DECL|method|myConfig2 ()
specifier|public
name|CacheConfiguration
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|myConfig2
parameter_list|()
block|{
return|return
name|CacheConfigurationBuilder
operator|.
name|newCacheConfigurationBuilder
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|String
operator|.
name|class
argument_list|,
name|ResourcePoolsBuilder
operator|.
name|newResourcePoolsBuilder
argument_list|()
operator|.
name|heap
argument_list|(
literal|2100
argument_list|,
name|EntryUnit
operator|.
name|ENTRIES
argument_list|)
operator|.
name|offheap
argument_list|(
literal|2
argument_list|,
name|MemoryUnit
operator|.
name|MB
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

