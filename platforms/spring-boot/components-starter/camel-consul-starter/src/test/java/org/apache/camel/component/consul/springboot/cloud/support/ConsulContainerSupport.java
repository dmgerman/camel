begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.consul.springboot.cloud.support
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|springboot
operator|.
name|cloud
operator|.
name|support
package|;
end_package

begin_import
import|import
name|com
operator|.
name|orbitz
operator|.
name|consul
operator|.
name|Consul
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testcontainers
operator|.
name|containers
operator|.
name|GenericContainer
import|;
end_import

begin_class
DECL|class|ConsulContainerSupport
specifier|public
specifier|final
class|class
name|ConsulContainerSupport
block|{
DECL|method|ConsulContainerSupport ()
specifier|private
name|ConsulContainerSupport
parameter_list|()
block|{     }
DECL|method|consulContainer ()
specifier|public
specifier|static
name|GenericContainer
name|consulContainer
parameter_list|()
block|{
return|return
operator|new
name|GenericContainer
argument_list|(
literal|"consul:1.0.0"
argument_list|)
operator|.
name|withExposedPorts
argument_list|(
name|Consul
operator|.
name|DEFAULT_HTTP_PORT
argument_list|)
operator|.
name|waitingFor
argument_list|(
operator|new
name|ConsulContainerWaitStrategy
argument_list|()
argument_list|)
operator|.
name|withLogConsumer
argument_list|(
operator|new
name|ConsulContainerLogger
argument_list|()
argument_list|)
operator|.
name|withCommand
argument_list|(
literal|"agent"
argument_list|,
literal|"-dev"
argument_list|,
literal|"-server"
argument_list|,
literal|"-bootstrap"
argument_list|,
literal|"-client"
argument_list|,
literal|"0.0.0.0"
argument_list|,
literal|"-log-level"
argument_list|,
literal|"trace"
argument_list|)
return|;
block|}
DECL|method|consulUrl (GenericContainer container)
specifier|public
specifier|static
name|String
name|consulUrl
parameter_list|(
name|GenericContainer
name|container
parameter_list|)
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"http://%s:%d"
argument_list|,
name|container
operator|.
name|getContainerIpAddress
argument_list|()
argument_list|,
name|container
operator|.
name|getMappedPort
argument_list|(
name|Consul
operator|.
name|DEFAULT_HTTP_PORT
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

