begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.webhook.springboot
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|webhook
operator|.
name|springboot
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Generated
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|RestConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|boot
operator|.
name|ComponentConfigurationPropertiesCommon
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|context
operator|.
name|properties
operator|.
name|ConfigurationProperties
import|;
end_import

begin_comment
comment|/**  * The webhook component allows other Camel components that can receive push  * notifications to expose webhook endpoints and automatically register them  * with their own webhook provider.  *   * Generated by camel-package-maven-plugin - do not edit this file!  */
end_comment

begin_class
annotation|@
name|Generated
argument_list|(
literal|"org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo"
argument_list|)
annotation|@
name|ConfigurationProperties
argument_list|(
name|prefix
operator|=
literal|"camel.component.webhook"
argument_list|)
DECL|class|WebhookComponentConfiguration
specifier|public
class|class
name|WebhookComponentConfiguration
extends|extends
name|ComponentConfigurationPropertiesCommon
block|{
comment|/**      * Whether to enable auto configuration of the webhook component. This is      * enabled by default.      */
DECL|field|enabled
specifier|private
name|Boolean
name|enabled
decl_stmt|;
comment|/**      * Set the default configuration for the webhook meta-component.      */
DECL|field|configuration
specifier|private
name|WebhookConfigurationNestedConfiguration
name|configuration
decl_stmt|;
comment|/**      * Whether the component should resolve property placeholders on itself when      * starting. Only properties which are of String type can use property      * placeholders.      */
DECL|field|resolvePropertyPlaceholders
specifier|private
name|Boolean
name|resolvePropertyPlaceholders
init|=
literal|true
decl_stmt|;
comment|/**      * Whether the component should use basic property binding (Camel 2.x) or      * the newer property binding with additional capabilities      */
DECL|field|basicPropertyBinding
specifier|private
name|Boolean
name|basicPropertyBinding
init|=
literal|false
decl_stmt|;
DECL|method|getConfiguration ()
specifier|public
name|WebhookConfigurationNestedConfiguration
name|getConfiguration
parameter_list|()
block|{
return|return
name|configuration
return|;
block|}
DECL|method|setConfiguration ( WebhookConfigurationNestedConfiguration configuration)
specifier|public
name|void
name|setConfiguration
parameter_list|(
name|WebhookConfigurationNestedConfiguration
name|configuration
parameter_list|)
block|{
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
block|}
DECL|method|getResolvePropertyPlaceholders ()
specifier|public
name|Boolean
name|getResolvePropertyPlaceholders
parameter_list|()
block|{
return|return
name|resolvePropertyPlaceholders
return|;
block|}
DECL|method|setResolvePropertyPlaceholders ( Boolean resolvePropertyPlaceholders)
specifier|public
name|void
name|setResolvePropertyPlaceholders
parameter_list|(
name|Boolean
name|resolvePropertyPlaceholders
parameter_list|)
block|{
name|this
operator|.
name|resolvePropertyPlaceholders
operator|=
name|resolvePropertyPlaceholders
expr_stmt|;
block|}
DECL|method|getBasicPropertyBinding ()
specifier|public
name|Boolean
name|getBasicPropertyBinding
parameter_list|()
block|{
return|return
name|basicPropertyBinding
return|;
block|}
DECL|method|setBasicPropertyBinding (Boolean basicPropertyBinding)
specifier|public
name|void
name|setBasicPropertyBinding
parameter_list|(
name|Boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|this
operator|.
name|basicPropertyBinding
operator|=
name|basicPropertyBinding
expr_stmt|;
block|}
DECL|class|WebhookConfigurationNestedConfiguration
specifier|public
specifier|static
class|class
name|WebhookConfigurationNestedConfiguration
block|{
DECL|field|CAMEL_NESTED_CLASS
specifier|public
specifier|static
specifier|final
name|Class
name|CAMEL_NESTED_CLASS
init|=
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|webhook
operator|.
name|WebhookConfiguration
operator|.
name|class
decl_stmt|;
comment|/**          * The delegate uri. Must belong to a component that supports webhooks.          */
DECL|field|endpointUri
specifier|private
name|String
name|endpointUri
decl_stmt|;
comment|/**          * The Camel Rest Configuration used by the webhook.          */
DECL|field|restConfiguration
specifier|private
name|RestConfiguration
name|restConfiguration
decl_stmt|;
comment|/**          * The Camel Rest component to use for the REST transport, such as          * netty4-http.          */
DECL|field|webhookComponentName
specifier|private
name|String
name|webhookComponentName
decl_stmt|;
comment|/**          * The URL of the current service as seen by the webhook provider          */
DECL|field|webhookExternalUrl
specifier|private
name|String
name|webhookExternalUrl
decl_stmt|;
comment|/**          * The first (base) path element where the webhook will be exposed. It's          * a good practice to set it to a random string, so that it cannot be          * guessed by unauthorized parties.          */
DECL|field|webhookBasePath
specifier|private
name|String
name|webhookBasePath
decl_stmt|;
comment|/**          * The path where the webhook endpoint will be exposed (relative to          * basePath, if any)          */
DECL|field|webhookPath
specifier|private
name|String
name|webhookPath
decl_stmt|;
comment|/**          * Automatically register the webhook at startup and unregister it on          * shutdown.          */
DECL|field|webhookAutoRegister
specifier|private
name|Boolean
name|webhookAutoRegister
init|=
literal|true
decl_stmt|;
DECL|method|getEndpointUri ()
specifier|public
name|String
name|getEndpointUri
parameter_list|()
block|{
return|return
name|endpointUri
return|;
block|}
DECL|method|setEndpointUri (String endpointUri)
specifier|public
name|void
name|setEndpointUri
parameter_list|(
name|String
name|endpointUri
parameter_list|)
block|{
name|this
operator|.
name|endpointUri
operator|=
name|endpointUri
expr_stmt|;
block|}
DECL|method|getRestConfiguration ()
specifier|public
name|RestConfiguration
name|getRestConfiguration
parameter_list|()
block|{
return|return
name|restConfiguration
return|;
block|}
DECL|method|setRestConfiguration (RestConfiguration restConfiguration)
specifier|public
name|void
name|setRestConfiguration
parameter_list|(
name|RestConfiguration
name|restConfiguration
parameter_list|)
block|{
name|this
operator|.
name|restConfiguration
operator|=
name|restConfiguration
expr_stmt|;
block|}
DECL|method|getWebhookComponentName ()
specifier|public
name|String
name|getWebhookComponentName
parameter_list|()
block|{
return|return
name|webhookComponentName
return|;
block|}
DECL|method|setWebhookComponentName (String webhookComponentName)
specifier|public
name|void
name|setWebhookComponentName
parameter_list|(
name|String
name|webhookComponentName
parameter_list|)
block|{
name|this
operator|.
name|webhookComponentName
operator|=
name|webhookComponentName
expr_stmt|;
block|}
DECL|method|getWebhookExternalUrl ()
specifier|public
name|String
name|getWebhookExternalUrl
parameter_list|()
block|{
return|return
name|webhookExternalUrl
return|;
block|}
DECL|method|setWebhookExternalUrl (String webhookExternalUrl)
specifier|public
name|void
name|setWebhookExternalUrl
parameter_list|(
name|String
name|webhookExternalUrl
parameter_list|)
block|{
name|this
operator|.
name|webhookExternalUrl
operator|=
name|webhookExternalUrl
expr_stmt|;
block|}
DECL|method|getWebhookBasePath ()
specifier|public
name|String
name|getWebhookBasePath
parameter_list|()
block|{
return|return
name|webhookBasePath
return|;
block|}
DECL|method|setWebhookBasePath (String webhookBasePath)
specifier|public
name|void
name|setWebhookBasePath
parameter_list|(
name|String
name|webhookBasePath
parameter_list|)
block|{
name|this
operator|.
name|webhookBasePath
operator|=
name|webhookBasePath
expr_stmt|;
block|}
DECL|method|getWebhookPath ()
specifier|public
name|String
name|getWebhookPath
parameter_list|()
block|{
return|return
name|webhookPath
return|;
block|}
DECL|method|setWebhookPath (String webhookPath)
specifier|public
name|void
name|setWebhookPath
parameter_list|(
name|String
name|webhookPath
parameter_list|)
block|{
name|this
operator|.
name|webhookPath
operator|=
name|webhookPath
expr_stmt|;
block|}
DECL|method|getWebhookAutoRegister ()
specifier|public
name|Boolean
name|getWebhookAutoRegister
parameter_list|()
block|{
return|return
name|webhookAutoRegister
return|;
block|}
DECL|method|setWebhookAutoRegister (Boolean webhookAutoRegister)
specifier|public
name|void
name|setWebhookAutoRegister
parameter_list|(
name|Boolean
name|webhookAutoRegister
parameter_list|)
block|{
name|this
operator|.
name|webhookAutoRegister
operator|=
name|webhookAutoRegister
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

