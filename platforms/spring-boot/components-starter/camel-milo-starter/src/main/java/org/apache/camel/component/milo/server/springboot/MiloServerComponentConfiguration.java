begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.milo.server.springboot
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|milo
operator|.
name|server
operator|.
name|springboot
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Generated
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|boot
operator|.
name|ComponentConfigurationPropertiesCommon
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|security
operator|.
name|SecurityPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|context
operator|.
name|properties
operator|.
name|ConfigurationProperties
import|;
end_import

begin_comment
comment|/**  * Make telemetry data available as an OPC UA server  *   * Generated by camel-package-maven-plugin - do not edit this file!  */
end_comment

begin_class
annotation|@
name|Generated
argument_list|(
literal|"org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo"
argument_list|)
annotation|@
name|ConfigurationProperties
argument_list|(
name|prefix
operator|=
literal|"camel.component.milo-server"
argument_list|)
DECL|class|MiloServerComponentConfiguration
specifier|public
class|class
name|MiloServerComponentConfiguration
extends|extends
name|ComponentConfigurationPropertiesCommon
block|{
comment|/**      * Whether to enable auto configuration of the milo-server component. This      * is enabled by default.      */
DECL|field|enabled
specifier|private
name|Boolean
name|enabled
decl_stmt|;
comment|/**      * The URI of the namespace, defaults to urn:org:apache:camel      */
DECL|field|namespaceUri
specifier|private
name|String
name|namespaceUri
decl_stmt|;
comment|/**      * The application name      */
DECL|field|applicationName
specifier|private
name|String
name|applicationName
decl_stmt|;
comment|/**      * The application URI      */
DECL|field|applicationUri
specifier|private
name|String
name|applicationUri
decl_stmt|;
comment|/**      * The product URI      */
DECL|field|productUri
specifier|private
name|String
name|productUri
decl_stmt|;
comment|/**      * The TCP port the server binds to      */
DECL|field|bindPort
specifier|private
name|Integer
name|bindPort
decl_stmt|;
comment|/**      * Set whether strict endpoint URLs are enforced      */
DECL|field|strictEndpointUrlsEnabled
specifier|private
name|Boolean
name|strictEndpointUrlsEnabled
init|=
literal|false
decl_stmt|;
comment|/**      * Server name      */
DECL|field|serverName
specifier|private
name|String
name|serverName
decl_stmt|;
comment|/**      * Server hostname      */
DECL|field|hostname
specifier|private
name|String
name|hostname
decl_stmt|;
comment|/**      * Security policies      */
DECL|field|securityPolicies
specifier|private
name|Set
argument_list|<
name|SecurityPolicy
argument_list|>
name|securityPolicies
decl_stmt|;
comment|/**      * Security policies by URI or name      */
DECL|field|securityPoliciesById
specifier|private
name|Collection
argument_list|<
name|String
argument_list|>
name|securityPoliciesById
decl_stmt|;
comment|/**      * Set user password combinations in the form of user1:pwd1,user2:pwd2      * Usernames and passwords will be URL decoded      */
DECL|field|userAuthenticationCredentials
specifier|private
name|String
name|userAuthenticationCredentials
decl_stmt|;
comment|/**      * Enable anonymous authentication, disabled by default      */
DECL|field|enableAnonymousAuthentication
specifier|private
name|Boolean
name|enableAnonymousAuthentication
init|=
literal|false
decl_stmt|;
comment|/**      * Set the UserTokenPolicy used when      */
DECL|field|usernameSecurityPolicyUri
specifier|private
name|SecurityPolicy
name|usernameSecurityPolicyUri
decl_stmt|;
comment|/**      * Set the addresses of the local addresses the server should bind to      */
DECL|field|bindAddresses
specifier|private
name|String
name|bindAddresses
decl_stmt|;
comment|/**      * Server build info. The option is a      * org.eclipse.milo.opcua.stack.core.types.structured.BuildInfo type.      */
DECL|field|buildInfo
specifier|private
name|String
name|buildInfo
decl_stmt|;
comment|/**      * Server certificate. The option is a      * org.apache.camel.component.milo.KeyStoreLoader.Result type.      */
DECL|field|serverCertificate
specifier|private
name|String
name|serverCertificate
decl_stmt|;
comment|/**      * Server certificate manager. The option is a      * org.eclipse.milo.opcua.stack.core.application.CertificateManager type.      */
DECL|field|certificateManager
specifier|private
name|String
name|certificateManager
decl_stmt|;
comment|/**      * Validator for client certificates. The option is a      * java.util.function.Supplier<org.eclipse.milo.opcua.stack.core.application.CertificateValidator> type.      */
DECL|field|certificateValidator
specifier|private
name|String
name|certificateValidator
decl_stmt|;
comment|/**      * Validator for client certificates using default file based approach      */
DECL|field|defaultCertificateValidator
specifier|private
name|File
name|defaultCertificateValidator
decl_stmt|;
comment|/**      * Whether the component should resolve property placeholders on itself when      * starting. Only properties which are of String type can use property      * placeholders.      */
DECL|field|resolvePropertyPlaceholders
specifier|private
name|Boolean
name|resolvePropertyPlaceholders
init|=
literal|true
decl_stmt|;
comment|/**      * Whether the component should use basic property binding (Camel 2.x) or      * the newer property binding with additional capabilities      */
DECL|field|basicPropertyBinding
specifier|private
name|Boolean
name|basicPropertyBinding
init|=
literal|false
decl_stmt|;
DECL|method|getNamespaceUri ()
specifier|public
name|String
name|getNamespaceUri
parameter_list|()
block|{
return|return
name|namespaceUri
return|;
block|}
DECL|method|setNamespaceUri (String namespaceUri)
specifier|public
name|void
name|setNamespaceUri
parameter_list|(
name|String
name|namespaceUri
parameter_list|)
block|{
name|this
operator|.
name|namespaceUri
operator|=
name|namespaceUri
expr_stmt|;
block|}
DECL|method|getApplicationName ()
specifier|public
name|String
name|getApplicationName
parameter_list|()
block|{
return|return
name|applicationName
return|;
block|}
DECL|method|setApplicationName (String applicationName)
specifier|public
name|void
name|setApplicationName
parameter_list|(
name|String
name|applicationName
parameter_list|)
block|{
name|this
operator|.
name|applicationName
operator|=
name|applicationName
expr_stmt|;
block|}
DECL|method|getApplicationUri ()
specifier|public
name|String
name|getApplicationUri
parameter_list|()
block|{
return|return
name|applicationUri
return|;
block|}
DECL|method|setApplicationUri (String applicationUri)
specifier|public
name|void
name|setApplicationUri
parameter_list|(
name|String
name|applicationUri
parameter_list|)
block|{
name|this
operator|.
name|applicationUri
operator|=
name|applicationUri
expr_stmt|;
block|}
DECL|method|getProductUri ()
specifier|public
name|String
name|getProductUri
parameter_list|()
block|{
return|return
name|productUri
return|;
block|}
DECL|method|setProductUri (String productUri)
specifier|public
name|void
name|setProductUri
parameter_list|(
name|String
name|productUri
parameter_list|)
block|{
name|this
operator|.
name|productUri
operator|=
name|productUri
expr_stmt|;
block|}
DECL|method|getBindPort ()
specifier|public
name|Integer
name|getBindPort
parameter_list|()
block|{
return|return
name|bindPort
return|;
block|}
DECL|method|setBindPort (Integer bindPort)
specifier|public
name|void
name|setBindPort
parameter_list|(
name|Integer
name|bindPort
parameter_list|)
block|{
name|this
operator|.
name|bindPort
operator|=
name|bindPort
expr_stmt|;
block|}
DECL|method|getStrictEndpointUrlsEnabled ()
specifier|public
name|Boolean
name|getStrictEndpointUrlsEnabled
parameter_list|()
block|{
return|return
name|strictEndpointUrlsEnabled
return|;
block|}
DECL|method|setStrictEndpointUrlsEnabled (Boolean strictEndpointUrlsEnabled)
specifier|public
name|void
name|setStrictEndpointUrlsEnabled
parameter_list|(
name|Boolean
name|strictEndpointUrlsEnabled
parameter_list|)
block|{
name|this
operator|.
name|strictEndpointUrlsEnabled
operator|=
name|strictEndpointUrlsEnabled
expr_stmt|;
block|}
DECL|method|getServerName ()
specifier|public
name|String
name|getServerName
parameter_list|()
block|{
return|return
name|serverName
return|;
block|}
DECL|method|setServerName (String serverName)
specifier|public
name|void
name|setServerName
parameter_list|(
name|String
name|serverName
parameter_list|)
block|{
name|this
operator|.
name|serverName
operator|=
name|serverName
expr_stmt|;
block|}
DECL|method|getHostname ()
specifier|public
name|String
name|getHostname
parameter_list|()
block|{
return|return
name|hostname
return|;
block|}
DECL|method|setHostname (String hostname)
specifier|public
name|void
name|setHostname
parameter_list|(
name|String
name|hostname
parameter_list|)
block|{
name|this
operator|.
name|hostname
operator|=
name|hostname
expr_stmt|;
block|}
DECL|method|getSecurityPolicies ()
specifier|public
name|Set
argument_list|<
name|SecurityPolicy
argument_list|>
name|getSecurityPolicies
parameter_list|()
block|{
return|return
name|securityPolicies
return|;
block|}
DECL|method|setSecurityPolicies (Set<SecurityPolicy> securityPolicies)
specifier|public
name|void
name|setSecurityPolicies
parameter_list|(
name|Set
argument_list|<
name|SecurityPolicy
argument_list|>
name|securityPolicies
parameter_list|)
block|{
name|this
operator|.
name|securityPolicies
operator|=
name|securityPolicies
expr_stmt|;
block|}
DECL|method|getSecurityPoliciesById ()
specifier|public
name|Collection
argument_list|<
name|String
argument_list|>
name|getSecurityPoliciesById
parameter_list|()
block|{
return|return
name|securityPoliciesById
return|;
block|}
DECL|method|setSecurityPoliciesById (Collection<String> securityPoliciesById)
specifier|public
name|void
name|setSecurityPoliciesById
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|securityPoliciesById
parameter_list|)
block|{
name|this
operator|.
name|securityPoliciesById
operator|=
name|securityPoliciesById
expr_stmt|;
block|}
DECL|method|getUserAuthenticationCredentials ()
specifier|public
name|String
name|getUserAuthenticationCredentials
parameter_list|()
block|{
return|return
name|userAuthenticationCredentials
return|;
block|}
DECL|method|setUserAuthenticationCredentials ( String userAuthenticationCredentials)
specifier|public
name|void
name|setUserAuthenticationCredentials
parameter_list|(
name|String
name|userAuthenticationCredentials
parameter_list|)
block|{
name|this
operator|.
name|userAuthenticationCredentials
operator|=
name|userAuthenticationCredentials
expr_stmt|;
block|}
DECL|method|getEnableAnonymousAuthentication ()
specifier|public
name|Boolean
name|getEnableAnonymousAuthentication
parameter_list|()
block|{
return|return
name|enableAnonymousAuthentication
return|;
block|}
DECL|method|setEnableAnonymousAuthentication ( Boolean enableAnonymousAuthentication)
specifier|public
name|void
name|setEnableAnonymousAuthentication
parameter_list|(
name|Boolean
name|enableAnonymousAuthentication
parameter_list|)
block|{
name|this
operator|.
name|enableAnonymousAuthentication
operator|=
name|enableAnonymousAuthentication
expr_stmt|;
block|}
DECL|method|getUsernameSecurityPolicyUri ()
specifier|public
name|SecurityPolicy
name|getUsernameSecurityPolicyUri
parameter_list|()
block|{
return|return
name|usernameSecurityPolicyUri
return|;
block|}
DECL|method|setUsernameSecurityPolicyUri ( SecurityPolicy usernameSecurityPolicyUri)
specifier|public
name|void
name|setUsernameSecurityPolicyUri
parameter_list|(
name|SecurityPolicy
name|usernameSecurityPolicyUri
parameter_list|)
block|{
name|this
operator|.
name|usernameSecurityPolicyUri
operator|=
name|usernameSecurityPolicyUri
expr_stmt|;
block|}
DECL|method|getBindAddresses ()
specifier|public
name|String
name|getBindAddresses
parameter_list|()
block|{
return|return
name|bindAddresses
return|;
block|}
DECL|method|setBindAddresses (String bindAddresses)
specifier|public
name|void
name|setBindAddresses
parameter_list|(
name|String
name|bindAddresses
parameter_list|)
block|{
name|this
operator|.
name|bindAddresses
operator|=
name|bindAddresses
expr_stmt|;
block|}
DECL|method|getBuildInfo ()
specifier|public
name|String
name|getBuildInfo
parameter_list|()
block|{
return|return
name|buildInfo
return|;
block|}
DECL|method|setBuildInfo (String buildInfo)
specifier|public
name|void
name|setBuildInfo
parameter_list|(
name|String
name|buildInfo
parameter_list|)
block|{
name|this
operator|.
name|buildInfo
operator|=
name|buildInfo
expr_stmt|;
block|}
DECL|method|getServerCertificate ()
specifier|public
name|String
name|getServerCertificate
parameter_list|()
block|{
return|return
name|serverCertificate
return|;
block|}
DECL|method|setServerCertificate (String serverCertificate)
specifier|public
name|void
name|setServerCertificate
parameter_list|(
name|String
name|serverCertificate
parameter_list|)
block|{
name|this
operator|.
name|serverCertificate
operator|=
name|serverCertificate
expr_stmt|;
block|}
DECL|method|getCertificateManager ()
specifier|public
name|String
name|getCertificateManager
parameter_list|()
block|{
return|return
name|certificateManager
return|;
block|}
DECL|method|setCertificateManager (String certificateManager)
specifier|public
name|void
name|setCertificateManager
parameter_list|(
name|String
name|certificateManager
parameter_list|)
block|{
name|this
operator|.
name|certificateManager
operator|=
name|certificateManager
expr_stmt|;
block|}
DECL|method|getCertificateValidator ()
specifier|public
name|String
name|getCertificateValidator
parameter_list|()
block|{
return|return
name|certificateValidator
return|;
block|}
DECL|method|setCertificateValidator (String certificateValidator)
specifier|public
name|void
name|setCertificateValidator
parameter_list|(
name|String
name|certificateValidator
parameter_list|)
block|{
name|this
operator|.
name|certificateValidator
operator|=
name|certificateValidator
expr_stmt|;
block|}
DECL|method|getDefaultCertificateValidator ()
specifier|public
name|File
name|getDefaultCertificateValidator
parameter_list|()
block|{
return|return
name|defaultCertificateValidator
return|;
block|}
DECL|method|setDefaultCertificateValidator (File defaultCertificateValidator)
specifier|public
name|void
name|setDefaultCertificateValidator
parameter_list|(
name|File
name|defaultCertificateValidator
parameter_list|)
block|{
name|this
operator|.
name|defaultCertificateValidator
operator|=
name|defaultCertificateValidator
expr_stmt|;
block|}
DECL|method|getResolvePropertyPlaceholders ()
specifier|public
name|Boolean
name|getResolvePropertyPlaceholders
parameter_list|()
block|{
return|return
name|resolvePropertyPlaceholders
return|;
block|}
DECL|method|setResolvePropertyPlaceholders ( Boolean resolvePropertyPlaceholders)
specifier|public
name|void
name|setResolvePropertyPlaceholders
parameter_list|(
name|Boolean
name|resolvePropertyPlaceholders
parameter_list|)
block|{
name|this
operator|.
name|resolvePropertyPlaceholders
operator|=
name|resolvePropertyPlaceholders
expr_stmt|;
block|}
DECL|method|getBasicPropertyBinding ()
specifier|public
name|Boolean
name|getBasicPropertyBinding
parameter_list|()
block|{
return|return
name|basicPropertyBinding
return|;
block|}
DECL|method|setBasicPropertyBinding (Boolean basicPropertyBinding)
specifier|public
name|void
name|setBasicPropertyBinding
parameter_list|(
name|Boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|this
operator|.
name|basicPropertyBinding
operator|=
name|basicPropertyBinding
expr_stmt|;
block|}
block|}
end_class

end_unit

