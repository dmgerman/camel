begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *<p/>  * http://www.apache.org/licenses/LICENSE-2.0  *<p/>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.catalog
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|catalog
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_class
DECL|class|ValidationResult
specifier|public
class|class
name|ValidationResult
implements|implements
name|Serializable
block|{
comment|// component
DECL|field|syntaxError
specifier|private
name|String
name|syntaxError
decl_stmt|;
DECL|field|unknownComponent
specifier|private
name|String
name|unknownComponent
decl_stmt|;
comment|// options
DECL|field|unknown
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|unknown
decl_stmt|;
DECL|field|required
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|required
decl_stmt|;
DECL|field|invalidEnum
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|invalidEnum
decl_stmt|;
DECL|field|invalidBoolean
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|invalidBoolean
decl_stmt|;
DECL|field|invalidInteger
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|invalidInteger
decl_stmt|;
DECL|field|invalidNumber
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|invalidNumber
decl_stmt|;
DECL|method|isSuccess ()
specifier|public
name|boolean
name|isSuccess
parameter_list|()
block|{
return|return
name|syntaxError
operator|==
literal|null
operator|&&
name|unknownComponent
operator|==
literal|null
operator|&&
name|unknown
operator|==
literal|null
operator|&&
name|required
operator|==
literal|null
operator|&&
name|invalidEnum
operator|==
literal|null
operator|&&
name|invalidBoolean
operator|==
literal|null
operator|&&
name|invalidInteger
operator|==
literal|null
operator|&&
name|invalidNumber
operator|==
literal|null
return|;
block|}
DECL|method|addSyntaxError (String syntaxError)
specifier|public
name|void
name|addSyntaxError
parameter_list|(
name|String
name|syntaxError
parameter_list|)
block|{
name|this
operator|.
name|syntaxError
operator|=
name|syntaxError
expr_stmt|;
block|}
DECL|method|addUnknownComponent (String name)
specifier|public
name|void
name|addUnknownComponent
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|unknownComponent
operator|=
name|name
expr_stmt|;
block|}
DECL|method|addUnknown (String name)
specifier|public
name|void
name|addUnknown
parameter_list|(
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
name|unknown
operator|==
literal|null
condition|)
block|{
name|unknown
operator|=
operator|new
name|LinkedHashSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|unknown
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
DECL|method|addRequired (String name)
specifier|public
name|void
name|addRequired
parameter_list|(
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
name|required
operator|==
literal|null
condition|)
block|{
name|required
operator|=
operator|new
name|LinkedHashSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|required
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
DECL|method|addInvalidEnum (String name)
specifier|public
name|void
name|addInvalidEnum
parameter_list|(
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
name|invalidEnum
operator|==
literal|null
condition|)
block|{
name|invalidEnum
operator|=
operator|new
name|LinkedHashSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|invalidEnum
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
DECL|method|addInvalidBoolean (String name)
specifier|public
name|void
name|addInvalidBoolean
parameter_list|(
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
name|invalidBoolean
operator|==
literal|null
condition|)
block|{
name|invalidBoolean
operator|=
operator|new
name|LinkedHashSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|invalidBoolean
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
DECL|method|addInvalidInteger (String name)
specifier|public
name|void
name|addInvalidInteger
parameter_list|(
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
name|invalidInteger
operator|==
literal|null
condition|)
block|{
name|invalidInteger
operator|=
operator|new
name|LinkedHashSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|invalidInteger
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
DECL|method|addInvalidNumber (String name)
specifier|public
name|void
name|addInvalidNumber
parameter_list|(
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
name|invalidNumber
operator|==
literal|null
condition|)
block|{
name|invalidNumber
operator|=
operator|new
name|LinkedHashSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|invalidNumber
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
DECL|method|getSyntaxError ()
specifier|public
name|String
name|getSyntaxError
parameter_list|()
block|{
return|return
name|syntaxError
return|;
block|}
DECL|method|getUnknown ()
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getUnknown
parameter_list|()
block|{
return|return
name|unknown
return|;
block|}
DECL|method|getUnknownComponent ()
specifier|public
name|String
name|getUnknownComponent
parameter_list|()
block|{
return|return
name|unknownComponent
return|;
block|}
DECL|method|getRequired ()
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getRequired
parameter_list|()
block|{
return|return
name|required
return|;
block|}
DECL|method|getInvalidEnum ()
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getInvalidEnum
parameter_list|()
block|{
return|return
name|invalidEnum
return|;
block|}
DECL|method|getInvalidBoolean ()
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getInvalidBoolean
parameter_list|()
block|{
return|return
name|invalidBoolean
return|;
block|}
DECL|method|getInvalidInteger ()
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getInvalidInteger
parameter_list|()
block|{
return|return
name|invalidInteger
return|;
block|}
DECL|method|getInvalidNumber ()
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getInvalidNumber
parameter_list|()
block|{
return|return
name|invalidNumber
return|;
block|}
block|}
end_class

end_unit

