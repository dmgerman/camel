begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.drill
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|drill
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|EndpointTest
specifier|public
class|class
name|EndpointTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|HOST
specifier|private
specifier|static
specifier|final
name|String
name|HOST
init|=
literal|"my.host.me"
decl_stmt|;
DECL|field|PORT
specifier|private
specifier|static
specifier|final
name|Integer
name|PORT
init|=
literal|4000
decl_stmt|;
DECL|field|DIRECTORY
specifier|private
specifier|static
specifier|final
name|String
name|DIRECTORY
init|=
literal|"directory"
decl_stmt|;
DECL|field|CLUSTERID
specifier|private
specifier|static
specifier|final
name|String
name|CLUSTERID
init|=
literal|"clusterId"
decl_stmt|;
DECL|field|MODE
specifier|private
specifier|static
specifier|final
name|DrillConnectionMode
name|MODE
init|=
name|DrillConnectionMode
operator|.
name|ZK
decl_stmt|;
annotation|@
name|Test
DECL|method|testZKJdbcURL ()
specifier|public
name|void
name|testZKJdbcURL
parameter_list|()
throws|throws
name|Exception
block|{
name|Endpoint
name|endpoint
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"drill://"
operator|+
name|HOST
operator|+
literal|"?port="
operator|+
name|PORT
operator|+
literal|"&directory="
operator|+
name|DIRECTORY
operator|+
literal|"&clusterId="
operator|+
name|CLUSTERID
operator|+
literal|"&mode="
operator|+
name|MODE
argument_list|)
decl_stmt|;
specifier|final
name|String
name|uri
init|=
literal|"jdbc:drill:zk="
operator|+
name|HOST
operator|+
literal|":"
operator|+
name|PORT
operator|+
literal|"/"
operator|+
name|DIRECTORY
operator|+
literal|"/"
operator|+
name|CLUSTERID
decl_stmt|;
name|assertTrue
argument_list|(
name|endpoint
operator|instanceof
name|DrillEndpoint
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HOST
argument_list|,
operator|(
operator|(
name|DrillEndpoint
operator|)
name|endpoint
operator|)
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PORT
argument_list|,
operator|(
operator|(
name|DrillEndpoint
operator|)
name|endpoint
operator|)
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DIRECTORY
argument_list|,
operator|(
operator|(
name|DrillEndpoint
operator|)
name|endpoint
operator|)
operator|.
name|getDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|CLUSTERID
argument_list|,
operator|(
operator|(
name|DrillEndpoint
operator|)
name|endpoint
operator|)
operator|.
name|getClusterId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MODE
argument_list|,
operator|(
operator|(
name|DrillEndpoint
operator|)
name|endpoint
operator|)
operator|.
name|getMode
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|uri
argument_list|,
operator|(
operator|(
name|DrillEndpoint
operator|)
name|endpoint
operator|)
operator|.
name|toJDBCUri
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

