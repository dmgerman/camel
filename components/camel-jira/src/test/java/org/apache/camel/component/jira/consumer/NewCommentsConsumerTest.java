begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jira.consumer
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jira
operator|.
name|consumer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|com
operator|.
name|atlassian
operator|.
name|jira
operator|.
name|rest
operator|.
name|client
operator|.
name|api
operator|.
name|IssueRestClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|atlassian
operator|.
name|jira
operator|.
name|rest
operator|.
name|client
operator|.
name|api
operator|.
name|JiraRestClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|atlassian
operator|.
name|jira
operator|.
name|rest
operator|.
name|client
operator|.
name|api
operator|.
name|JiraRestClientFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|atlassian
operator|.
name|jira
operator|.
name|rest
operator|.
name|client
operator|.
name|api
operator|.
name|SearchRestClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|atlassian
operator|.
name|jira
operator|.
name|rest
operator|.
name|client
operator|.
name|api
operator|.
name|domain
operator|.
name|Comment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|atlassian
operator|.
name|jira
operator|.
name|rest
operator|.
name|client
operator|.
name|api
operator|.
name|domain
operator|.
name|Issue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|atlassian
operator|.
name|jira
operator|.
name|rest
operator|.
name|client
operator|.
name|api
operator|.
name|domain
operator|.
name|SearchResult
import|;
end_import

begin_import
import|import
name|io
operator|.
name|atlassian
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Promise
import|;
end_import

begin_import
import|import
name|io
operator|.
name|atlassian
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Promises
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|EndpointInject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jira
operator|.
name|JiraComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|Registry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|junit
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jira
operator|.
name|JiraConstants
operator|.
name|JIRA
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jira
operator|.
name|JiraConstants
operator|.
name|JIRA_REST_CLIENT_FACTORY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jira
operator|.
name|JiraTestConstants
operator|.
name|JIRA_CREDENTIALS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jira
operator|.
name|JiraTestConstants
operator|.
name|PROJECT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jira
operator|.
name|Utils
operator|.
name|createIssue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jira
operator|.
name|Utils
operator|.
name|createIssueWithComments
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|reset
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
DECL|class|NewCommentsConsumerTest
specifier|public
class|class
name|NewCommentsConsumerTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|issues
specifier|private
specifier|static
name|List
argument_list|<
name|Issue
argument_list|>
name|issues
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|Mock
DECL|field|jiraClient
specifier|private
name|JiraRestClient
name|jiraClient
decl_stmt|;
annotation|@
name|Mock
DECL|field|jiraRestClientFactory
specifier|private
name|JiraRestClientFactory
name|jiraRestClientFactory
decl_stmt|;
annotation|@
name|Mock
DECL|field|searchRestClient
specifier|private
name|SearchRestClient
name|searchRestClient
decl_stmt|;
annotation|@
name|Mock
DECL|field|issueRestClient
specifier|private
name|IssueRestClient
name|issueRestClient
decl_stmt|;
annotation|@
name|EndpointInject
argument_list|(
literal|"mock:result"
argument_list|)
DECL|field|mockResult
specifier|private
name|MockEndpoint
name|mockResult
decl_stmt|;
annotation|@
name|Override
DECL|method|bindToRegistry (Registry registry)
specifier|protected
name|void
name|bindToRegistry
parameter_list|(
name|Registry
name|registry
parameter_list|)
block|{
name|registry
operator|.
name|bind
argument_list|(
name|JIRA_REST_CLIENT_FACTORY
argument_list|,
name|jiraRestClientFactory
argument_list|)
expr_stmt|;
block|}
annotation|@
name|BeforeClass
DECL|method|beforeAll ()
specifier|public
specifier|static
name|void
name|beforeAll
parameter_list|()
block|{
name|issues
operator|.
name|add
argument_list|(
name|createIssueWithComments
argument_list|(
literal|1L
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|issues
operator|.
name|add
argument_list|(
name|createIssueWithComments
argument_list|(
literal|2L
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|issues
operator|.
name|add
argument_list|(
name|createIssueWithComments
argument_list|(
literal|3L
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|setMocks ()
specifier|public
name|void
name|setMocks
parameter_list|()
block|{
name|SearchResult
name|result
init|=
operator|new
name|SearchResult
argument_list|(
literal|0
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
name|issues
argument_list|)
decl_stmt|;
name|Promise
argument_list|<
name|SearchResult
argument_list|>
name|promiseSearchResult
init|=
name|Promises
operator|.
name|promise
argument_list|(
name|result
argument_list|)
decl_stmt|;
name|Issue
name|issue
init|=
name|createIssueWithComments
argument_list|(
literal|4L
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|Promise
argument_list|<
name|Issue
argument_list|>
name|promiseIssue
init|=
name|Promises
operator|.
name|promise
argument_list|(
name|issue
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|jiraClient
operator|.
name|getSearchClient
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|searchRestClient
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|jiraClient
operator|.
name|getIssueClient
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|issueRestClient
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|jiraRestClientFactory
operator|.
name|createWithBasicHttpAuthentication
argument_list|(
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|jiraClient
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|searchRestClient
operator|.
name|searchJql
argument_list|(
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|promiseSearchResult
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|issueRestClient
operator|.
name|getIssue
argument_list|(
name|anyString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|promiseIssue
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createCamelContext ()
specifier|protected
name|CamelContext
name|createCamelContext
parameter_list|()
throws|throws
name|Exception
block|{
name|setMocks
argument_list|()
expr_stmt|;
name|CamelContext
name|camelContext
init|=
name|super
operator|.
name|createCamelContext
argument_list|()
decl_stmt|;
name|camelContext
operator|.
name|disableJMX
argument_list|()
expr_stmt|;
name|JiraComponent
name|component
init|=
operator|new
name|JiraComponent
argument_list|(
name|camelContext
argument_list|)
decl_stmt|;
name|camelContext
operator|.
name|addComponent
argument_list|(
name|JIRA
argument_list|,
name|component
argument_list|)
expr_stmt|;
return|return
name|camelContext
return|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"jira://newComments?jiraUrl="
operator|+
name|JIRA_CREDENTIALS
operator|+
literal|"&jql=project="
operator|+
name|PROJECT
operator|+
literal|"&delay=500"
argument_list|)
operator|.
name|to
argument_list|(
name|mockResult
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
annotation|@
name|Test
DECL|method|emptyAtStartupTest ()
specifier|public
name|void
name|emptyAtStartupTest
parameter_list|()
throws|throws
name|Exception
block|{
name|mockResult
operator|.
name|expectedMessageCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|mockResult
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|singleIssueCommentsTest ()
specifier|public
name|void
name|singleIssueCommentsTest
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create issue with 3 comments
name|Issue
name|issue
init|=
name|createIssueWithComments
argument_list|(
literal|11
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|reset
argument_list|(
name|issueRestClient
argument_list|)
expr_stmt|;
name|Promise
argument_list|<
name|Issue
argument_list|>
name|promiseIssue
init|=
name|Promises
operator|.
name|promise
argument_list|(
name|issue
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|issueRestClient
operator|.
name|getIssue
argument_list|(
name|anyString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|promiseIssue
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Comment
argument_list|>
name|comments
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Comment
name|c
range|:
name|issue
operator|.
name|getComments
argument_list|()
control|)
block|{
name|comments
operator|.
name|add
argument_list|(
name|c
argument_list|)
expr_stmt|;
block|}
comment|// reverse the order, from oldest comment to recent
name|Collections
operator|.
name|reverse
argument_list|(
name|comments
argument_list|)
expr_stmt|;
comment|// expect 3 comments
name|mockResult
operator|.
name|expectedBodiesReceived
argument_list|(
name|comments
argument_list|)
expr_stmt|;
name|mockResult
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|multipleIssuesTest ()
specifier|public
name|void
name|multipleIssuesTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Issue
name|issue1
init|=
name|createIssueWithComments
argument_list|(
literal|20L
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|Issue
name|issue2
init|=
name|createIssueWithComments
argument_list|(
literal|21L
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|Issue
name|issue3
init|=
name|createIssueWithComments
argument_list|(
literal|22L
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Issue
argument_list|>
name|newIssues
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|newIssues
operator|.
name|add
argument_list|(
name|issue1
argument_list|)
expr_stmt|;
name|newIssues
operator|.
name|add
argument_list|(
name|issue2
argument_list|)
expr_stmt|;
name|newIssues
operator|.
name|add
argument_list|(
name|issue3
argument_list|)
expr_stmt|;
name|Issue
name|issueWithNoComments
init|=
name|createIssue
argument_list|(
literal|31L
argument_list|)
decl_stmt|;
name|reset
argument_list|(
name|searchRestClient
argument_list|)
expr_stmt|;
name|reset
argument_list|(
name|issueRestClient
argument_list|)
expr_stmt|;
name|SearchResult
name|searchResult
init|=
operator|new
name|SearchResult
argument_list|(
literal|0
argument_list|,
literal|50
argument_list|,
literal|3
argument_list|,
name|newIssues
argument_list|)
decl_stmt|;
name|Promise
argument_list|<
name|SearchResult
argument_list|>
name|searchResultPromise
init|=
name|Promises
operator|.
name|promise
argument_list|(
name|searchResult
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|searchRestClient
operator|.
name|searchJql
argument_list|(
name|anyString
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|searchResultPromise
argument_list|)
expr_stmt|;
name|AtomicInteger
name|regulator
init|=
operator|new
name|AtomicInteger
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|issueRestClient
operator|.
name|getIssue
argument_list|(
name|anyString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|then
argument_list|(
name|inv
lambda|->
block|{
name|int
name|idx
init|=
name|regulator
operator|.
name|getAndIncrement
argument_list|()
decl_stmt|;
name|Issue
name|issue
init|=
name|issueWithNoComments
decl_stmt|;
if|if
condition|(
name|idx
operator|<
name|newIssues
operator|.
name|size
argument_list|()
condition|)
block|{
name|issue
operator|=
name|newIssues
operator|.
name|get
argument_list|(
name|idx
argument_list|)
expr_stmt|;
block|}
return|return
name|Promises
operator|.
name|promise
argument_list|(
name|issue
argument_list|)
return|;
block|}
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Comment
argument_list|>
name|comments
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Issue
name|issue
range|:
name|newIssues
control|)
block|{
for|for
control|(
name|Comment
name|c
range|:
name|issue
operator|.
name|getComments
argument_list|()
control|)
block|{
name|comments
operator|.
name|add
argument_list|(
name|c
argument_list|)
expr_stmt|;
block|}
block|}
comment|// reverse the order, from oldest comment to recent
name|Collections
operator|.
name|reverse
argument_list|(
name|comments
argument_list|)
expr_stmt|;
comment|// expect 6 comments
name|mockResult
operator|.
name|expectedBodiesReceived
argument_list|(
name|comments
argument_list|)
expr_stmt|;
name|mockResult
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

