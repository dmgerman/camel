begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jira.mocks
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jira
operator|.
name|mocks
package|;
end_package

begin_import
import|import
name|com
operator|.
name|atlassian
operator|.
name|jira
operator|.
name|rest
operator|.
name|client
operator|.
name|NullProgressMonitor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|atlassian
operator|.
name|jira
operator|.
name|rest
operator|.
name|client
operator|.
name|ProgressMonitor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|atlassian
operator|.
name|jira
operator|.
name|rest
operator|.
name|client
operator|.
name|SearchRestClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|atlassian
operator|.
name|jira
operator|.
name|rest
operator|.
name|client
operator|.
name|domain
operator|.
name|BasicIssue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|atlassian
operator|.
name|jira
operator|.
name|rest
operator|.
name|client
operator|.
name|domain
operator|.
name|Comment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|atlassian
operator|.
name|jira
operator|.
name|rest
operator|.
name|client
operator|.
name|domain
operator|.
name|FavouriteFilter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|atlassian
operator|.
name|jira
operator|.
name|rest
operator|.
name|client
operator|.
name|domain
operator|.
name|SearchResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicLong
import|;
end_import

begin_class
DECL|class|MockSearchRestClient
specifier|public
class|class
name|MockSearchRestClient
implements|implements
name|SearchRestClient
block|{
DECL|field|issues
specifier|private
specifier|final
name|List
argument_list|<
name|BasicIssue
argument_list|>
name|issues
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|comments
specifier|private
specifier|final
name|Map
argument_list|<
name|Long
argument_list|,
name|List
argument_list|<
name|Comment
argument_list|>
argument_list|>
name|comments
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|basicIssueId
specifier|private
name|AtomicLong
name|basicIssueId
init|=
operator|new
name|AtomicLong
argument_list|(
literal|0
argument_list|)
decl_stmt|;
DECL|field|KEY_BASE
specifier|private
name|String
name|KEY_BASE
init|=
literal|"CAMELJIRA-"
decl_stmt|;
annotation|@
name|Override
DECL|method|searchJql (String s, ProgressMonitor progressMonitor)
specifier|public
name|SearchResult
name|searchJql
parameter_list|(
name|String
name|s
parameter_list|,
name|ProgressMonitor
name|progressMonitor
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|searchJql (String s, int i, int i2, ProgressMonitor progressMonitor)
specifier|public
name|SearchResult
name|searchJql
parameter_list|(
name|String
name|s
parameter_list|,
name|int
name|i
parameter_list|,
name|int
name|i2
parameter_list|,
name|ProgressMonitor
name|progressMonitor
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|searchJqlWithFullIssues (String jql, int maxPerQuery, int start, ProgressMonitor progressMonitor)
specifier|public
name|SearchResult
name|searchJqlWithFullIssues
parameter_list|(
name|String
name|jql
parameter_list|,
name|int
name|maxPerQuery
parameter_list|,
name|int
name|start
parameter_list|,
name|ProgressMonitor
name|progressMonitor
parameter_list|)
block|{
name|List
argument_list|<
name|BasicIssue
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|BasicIssue
name|issue
range|:
name|issues
control|)
block|{
if|if
condition|(
name|issue
operator|.
name|getId
argument_list|()
operator|>=
name|start
condition|)
block|{
name|result
operator|.
name|add
argument_list|(
name|issue
argument_list|)
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|size
argument_list|()
operator|>=
name|maxPerQuery
condition|)
block|{
break|break;
block|}
block|}
block|}
return|return
operator|new
name|MockSearchResult
argument_list|(
name|start
argument_list|,
name|maxPerQuery
argument_list|,
name|issues
operator|.
name|size
argument_list|()
argument_list|,
name|result
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getFavouriteFilters (NullProgressMonitor nullProgressMonitor)
specifier|public
name|Iterable
argument_list|<
name|FavouriteFilter
argument_list|>
name|getFavouriteFilters
parameter_list|(
name|NullProgressMonitor
name|nullProgressMonitor
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
DECL|method|addIssue ()
specifier|public
name|BasicIssue
name|addIssue
parameter_list|()
block|{
name|String
name|key
init|=
name|KEY_BASE
operator|+
name|basicIssueId
operator|.
name|get
argument_list|()
decl_stmt|;
name|BasicIssue
name|basicIssue
init|=
operator|new
name|BasicIssue
argument_list|(
literal|null
argument_list|,
name|key
argument_list|,
name|basicIssueId
operator|.
name|getAndIncrement
argument_list|()
argument_list|)
decl_stmt|;
name|issues
operator|.
name|add
argument_list|(
name|basicIssue
argument_list|)
expr_stmt|;
return|return
name|basicIssue
return|;
block|}
DECL|method|addCommentToIssue (BasicIssue issue, String commentText)
specifier|public
name|Comment
name|addCommentToIssue
parameter_list|(
name|BasicIssue
name|issue
parameter_list|,
name|String
name|commentText
parameter_list|)
block|{
comment|// URI self, String body, @Nullable BasicUser author, @Nullable BasicUser updateAuthor, DateTime creationDate, DateTime updateDate, Visibility visibility, @Nullable Long id
name|DateTime
name|now
init|=
operator|new
name|DateTime
argument_list|()
decl_stmt|;
name|Comment
name|comment
init|=
operator|new
name|Comment
argument_list|(
literal|null
argument_list|,
name|commentText
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|now
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|issue
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Comment
argument_list|>
name|commentsForIssue
init|=
name|comments
operator|.
name|get
argument_list|(
name|issue
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|commentsForIssue
operator|==
literal|null
condition|)
block|{
name|commentsForIssue
operator|=
operator|new
name|ArrayList
argument_list|<
name|Comment
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|commentsForIssue
operator|.
name|add
argument_list|(
name|comment
argument_list|)
expr_stmt|;
name|comments
operator|.
name|put
argument_list|(
name|issue
operator|.
name|getId
argument_list|()
argument_list|,
name|commentsForIssue
argument_list|)
expr_stmt|;
return|return
name|comment
return|;
block|}
DECL|method|getCommentsForIssue (Long issueId)
specifier|public
name|List
argument_list|<
name|Comment
argument_list|>
name|getCommentsForIssue
parameter_list|(
name|Long
name|issueId
parameter_list|)
block|{
name|List
argument_list|<
name|Comment
argument_list|>
name|commentsForIssue
init|=
name|comments
operator|.
name|get
argument_list|(
name|issueId
argument_list|)
decl_stmt|;
return|return
name|comments
operator|.
name|get
argument_list|(
name|issueId
argument_list|)
return|;
block|}
DECL|method|getBasicIssue (String key)
specifier|public
name|BasicIssue
name|getBasicIssue
parameter_list|(
name|String
name|key
parameter_list|)
block|{
name|BasicIssue
name|emptyResponse
init|=
operator|new
name|BasicIssue
argument_list|(
literal|null
argument_list|,
literal|""
argument_list|,
operator|(
name|long
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
for|for
control|(
name|BasicIssue
name|bi
range|:
name|issues
control|)
block|{
if|if
condition|(
name|bi
operator|.
name|getKey
argument_list|()
operator|.
name|equals
argument_list|(
name|key
argument_list|)
condition|)
block|{
return|return
name|bi
return|;
block|}
block|}
return|return
name|emptyResponse
return|;
block|}
block|}
end_class

end_unit

