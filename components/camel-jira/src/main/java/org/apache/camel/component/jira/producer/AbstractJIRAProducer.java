begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jira.producer
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jira
operator|.
name|producer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|com
operator|.
name|atlassian
operator|.
name|jira
operator|.
name|rest
operator|.
name|client
operator|.
name|JiraRestClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|atlassian
operator|.
name|jira
operator|.
name|rest
operator|.
name|client
operator|.
name|internal
operator|.
name|jersey
operator|.
name|JerseyJiraRestClientFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jira
operator|.
name|JIRAEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultProducer
import|;
end_import

begin_class
DECL|class|AbstractJIRAProducer
specifier|public
specifier|abstract
class|class
name|AbstractJIRAProducer
extends|extends
name|DefaultProducer
block|{
DECL|field|client
specifier|private
specifier|final
name|JiraRestClient
name|client
decl_stmt|;
DECL|method|AbstractJIRAProducer (JIRAEndpoint endpoint)
specifier|public
name|AbstractJIRAProducer
parameter_list|(
name|JIRAEndpoint
name|endpoint
parameter_list|)
throws|throws
name|Exception
block|{
name|super
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
specifier|final
name|JerseyJiraRestClientFactory
name|factory
init|=
operator|new
name|JerseyJiraRestClientFactory
argument_list|()
decl_stmt|;
specifier|final
name|URI
name|jiraServerUri
init|=
name|URI
operator|.
name|create
argument_list|(
name|endpoint
operator|.
name|getServerUrl
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|=
name|factory
operator|.
name|createWithBasicHttpAuthentication
argument_list|(
name|jiraServerUri
argument_list|,
name|endpoint
operator|.
name|getUsername
argument_list|()
argument_list|,
name|endpoint
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|client ()
specifier|protected
name|JiraRestClient
name|client
parameter_list|()
block|{
return|return
name|client
return|;
block|}
DECL|method|process (Exchange exchange)
specifier|public
specifier|abstract
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
function_decl|;
block|}
end_class

end_unit

