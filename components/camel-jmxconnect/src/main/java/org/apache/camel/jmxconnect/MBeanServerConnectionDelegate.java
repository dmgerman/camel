begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.jmxconnect
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|jmxconnect
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * Acts as a delegate for the MBeanServerConnection  *  * @version $Revision: 1.1 $  */
end_comment

begin_class
DECL|class|MBeanServerConnectionDelegate
specifier|public
class|class
name|MBeanServerConnectionDelegate
implements|implements
name|MBeanServerConnection
block|{
DECL|field|connection
specifier|protected
name|MBeanServerConnection
name|connection
decl_stmt|;
DECL|method|MBeanServerConnectionDelegate (MBeanServerConnection connection)
specifier|public
name|MBeanServerConnectionDelegate
parameter_list|(
name|MBeanServerConnection
name|connection
parameter_list|)
block|{
name|this
operator|.
name|connection
operator|=
name|connection
expr_stmt|;
block|}
DECL|method|createMBean (String className, ObjectName name)
specifier|public
name|ObjectInstance
name|createMBean
parameter_list|(
name|String
name|className
parameter_list|,
name|ObjectName
name|name
parameter_list|)
throws|throws
name|ReflectionException
throws|,
name|InstanceAlreadyExistsException
throws|,
name|MBeanRegistrationException
throws|,
name|MBeanException
throws|,
name|NotCompliantMBeanException
throws|,
name|IOException
block|{
return|return
name|connection
operator|.
name|createMBean
argument_list|(
name|className
argument_list|,
name|name
argument_list|)
return|;
block|}
DECL|method|createMBean (String className, ObjectName name, ObjectName loaderName)
specifier|public
name|ObjectInstance
name|createMBean
parameter_list|(
name|String
name|className
parameter_list|,
name|ObjectName
name|name
parameter_list|,
name|ObjectName
name|loaderName
parameter_list|)
throws|throws
name|ReflectionException
throws|,
name|InstanceAlreadyExistsException
throws|,
name|MBeanRegistrationException
throws|,
name|MBeanException
throws|,
name|NotCompliantMBeanException
throws|,
name|InstanceNotFoundException
throws|,
name|IOException
block|{
return|return
name|connection
operator|.
name|createMBean
argument_list|(
name|className
argument_list|,
name|name
argument_list|,
name|loaderName
argument_list|)
return|;
block|}
DECL|method|createMBean (String className, ObjectName name, Object[] params, String[] signature)
specifier|public
name|ObjectInstance
name|createMBean
parameter_list|(
name|String
name|className
parameter_list|,
name|ObjectName
name|name
parameter_list|,
name|Object
index|[]
name|params
parameter_list|,
name|String
index|[]
name|signature
parameter_list|)
throws|throws
name|ReflectionException
throws|,
name|InstanceAlreadyExistsException
throws|,
name|MBeanRegistrationException
throws|,
name|MBeanException
throws|,
name|NotCompliantMBeanException
throws|,
name|IOException
block|{
return|return
name|connection
operator|.
name|createMBean
argument_list|(
name|className
argument_list|,
name|name
argument_list|,
name|params
argument_list|,
name|signature
argument_list|)
return|;
block|}
DECL|method|createMBean (String className, ObjectName name, ObjectName loaderName, Object[] params, String[] signature)
specifier|public
name|ObjectInstance
name|createMBean
parameter_list|(
name|String
name|className
parameter_list|,
name|ObjectName
name|name
parameter_list|,
name|ObjectName
name|loaderName
parameter_list|,
name|Object
index|[]
name|params
parameter_list|,
name|String
index|[]
name|signature
parameter_list|)
throws|throws
name|ReflectionException
throws|,
name|InstanceAlreadyExistsException
throws|,
name|MBeanRegistrationException
throws|,
name|MBeanException
throws|,
name|NotCompliantMBeanException
throws|,
name|InstanceNotFoundException
throws|,
name|IOException
block|{
return|return
name|connection
operator|.
name|createMBean
argument_list|(
name|className
argument_list|,
name|name
argument_list|,
name|loaderName
argument_list|,
name|params
argument_list|,
name|signature
argument_list|)
return|;
block|}
DECL|method|unregisterMBean (ObjectName name)
specifier|public
name|void
name|unregisterMBean
parameter_list|(
name|ObjectName
name|name
parameter_list|)
throws|throws
name|InstanceNotFoundException
throws|,
name|MBeanRegistrationException
throws|,
name|IOException
block|{
name|connection
operator|.
name|unregisterMBean
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
DECL|method|getObjectInstance (ObjectName name)
specifier|public
name|ObjectInstance
name|getObjectInstance
parameter_list|(
name|ObjectName
name|name
parameter_list|)
throws|throws
name|InstanceNotFoundException
throws|,
name|IOException
block|{
return|return
name|connection
operator|.
name|getObjectInstance
argument_list|(
name|name
argument_list|)
return|;
block|}
DECL|method|queryMBeans (ObjectName name, QueryExp query)
specifier|public
name|Set
name|queryMBeans
parameter_list|(
name|ObjectName
name|name
parameter_list|,
name|QueryExp
name|query
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|connection
operator|.
name|queryMBeans
argument_list|(
name|name
argument_list|,
name|query
argument_list|)
return|;
block|}
DECL|method|queryNames (ObjectName name, QueryExp query)
specifier|public
name|Set
name|queryNames
parameter_list|(
name|ObjectName
name|name
parameter_list|,
name|QueryExp
name|query
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|connection
operator|.
name|queryNames
argument_list|(
name|name
argument_list|,
name|query
argument_list|)
return|;
block|}
DECL|method|isRegistered (ObjectName name)
specifier|public
name|boolean
name|isRegistered
parameter_list|(
name|ObjectName
name|name
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|connection
operator|.
name|isRegistered
argument_list|(
name|name
argument_list|)
return|;
block|}
DECL|method|getMBeanCount ()
specifier|public
name|Integer
name|getMBeanCount
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|connection
operator|.
name|getMBeanCount
argument_list|()
return|;
block|}
DECL|method|getAttribute (ObjectName name, String attribute)
specifier|public
name|Object
name|getAttribute
parameter_list|(
name|ObjectName
name|name
parameter_list|,
name|String
name|attribute
parameter_list|)
throws|throws
name|MBeanException
throws|,
name|AttributeNotFoundException
throws|,
name|InstanceNotFoundException
throws|,
name|ReflectionException
throws|,
name|IOException
block|{
return|return
name|connection
operator|.
name|getAttribute
argument_list|(
name|name
argument_list|,
name|attribute
argument_list|)
return|;
block|}
DECL|method|getAttributes (ObjectName name, String[] attributes)
specifier|public
name|AttributeList
name|getAttributes
parameter_list|(
name|ObjectName
name|name
parameter_list|,
name|String
index|[]
name|attributes
parameter_list|)
throws|throws
name|InstanceNotFoundException
throws|,
name|ReflectionException
throws|,
name|IOException
block|{
return|return
name|connection
operator|.
name|getAttributes
argument_list|(
name|name
argument_list|,
name|attributes
argument_list|)
return|;
block|}
DECL|method|setAttribute (ObjectName name, Attribute attribute)
specifier|public
name|void
name|setAttribute
parameter_list|(
name|ObjectName
name|name
parameter_list|,
name|Attribute
name|attribute
parameter_list|)
throws|throws
name|InstanceNotFoundException
throws|,
name|AttributeNotFoundException
throws|,
name|InvalidAttributeValueException
throws|,
name|MBeanException
throws|,
name|ReflectionException
throws|,
name|IOException
block|{
name|connection
operator|.
name|setAttribute
argument_list|(
name|name
argument_list|,
name|attribute
argument_list|)
expr_stmt|;
block|}
DECL|method|setAttributes (ObjectName name, AttributeList attributes)
specifier|public
name|AttributeList
name|setAttributes
parameter_list|(
name|ObjectName
name|name
parameter_list|,
name|AttributeList
name|attributes
parameter_list|)
throws|throws
name|InstanceNotFoundException
throws|,
name|ReflectionException
throws|,
name|IOException
block|{
return|return
name|connection
operator|.
name|setAttributes
argument_list|(
name|name
argument_list|,
name|attributes
argument_list|)
return|;
block|}
DECL|method|invoke (ObjectName name, String operationName, Object[] params, String[] signature)
specifier|public
name|Object
name|invoke
parameter_list|(
name|ObjectName
name|name
parameter_list|,
name|String
name|operationName
parameter_list|,
name|Object
index|[]
name|params
parameter_list|,
name|String
index|[]
name|signature
parameter_list|)
throws|throws
name|InstanceNotFoundException
throws|,
name|MBeanException
throws|,
name|ReflectionException
throws|,
name|IOException
block|{
return|return
name|connection
operator|.
name|invoke
argument_list|(
name|name
argument_list|,
name|operationName
argument_list|,
name|params
argument_list|,
name|signature
argument_list|)
return|;
block|}
DECL|method|getDefaultDomain ()
specifier|public
name|String
name|getDefaultDomain
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|connection
operator|.
name|getDefaultDomain
argument_list|()
return|;
block|}
DECL|method|getDomains ()
specifier|public
name|String
index|[]
name|getDomains
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|connection
operator|.
name|getDomains
argument_list|()
return|;
block|}
DECL|method|addNotificationListener (ObjectName name, NotificationListener listener, NotificationFilter filter, Object handback)
specifier|public
name|void
name|addNotificationListener
parameter_list|(
name|ObjectName
name|name
parameter_list|,
name|NotificationListener
name|listener
parameter_list|,
name|NotificationFilter
name|filter
parameter_list|,
name|Object
name|handback
parameter_list|)
throws|throws
name|InstanceNotFoundException
throws|,
name|IOException
block|{
name|connection
operator|.
name|addNotificationListener
argument_list|(
name|name
argument_list|,
name|listener
argument_list|,
name|filter
argument_list|,
name|handback
argument_list|)
expr_stmt|;
block|}
DECL|method|addNotificationListener (ObjectName name, ObjectName listener, NotificationFilter filter, Object handback)
specifier|public
name|void
name|addNotificationListener
parameter_list|(
name|ObjectName
name|name
parameter_list|,
name|ObjectName
name|listener
parameter_list|,
name|NotificationFilter
name|filter
parameter_list|,
name|Object
name|handback
parameter_list|)
throws|throws
name|InstanceNotFoundException
throws|,
name|IOException
block|{
name|connection
operator|.
name|addNotificationListener
argument_list|(
name|name
argument_list|,
name|listener
argument_list|,
name|filter
argument_list|,
name|handback
argument_list|)
expr_stmt|;
block|}
DECL|method|removeNotificationListener (ObjectName name, ObjectName listener)
specifier|public
name|void
name|removeNotificationListener
parameter_list|(
name|ObjectName
name|name
parameter_list|,
name|ObjectName
name|listener
parameter_list|)
throws|throws
name|InstanceNotFoundException
throws|,
name|ListenerNotFoundException
throws|,
name|IOException
block|{
name|connection
operator|.
name|removeNotificationListener
argument_list|(
name|name
argument_list|,
name|listener
argument_list|)
expr_stmt|;
block|}
DECL|method|removeNotificationListener (ObjectName name, ObjectName listener, NotificationFilter filter, Object handback)
specifier|public
name|void
name|removeNotificationListener
parameter_list|(
name|ObjectName
name|name
parameter_list|,
name|ObjectName
name|listener
parameter_list|,
name|NotificationFilter
name|filter
parameter_list|,
name|Object
name|handback
parameter_list|)
throws|throws
name|InstanceNotFoundException
throws|,
name|ListenerNotFoundException
throws|,
name|IOException
block|{
name|connection
operator|.
name|removeNotificationListener
argument_list|(
name|name
argument_list|,
name|listener
argument_list|,
name|filter
argument_list|,
name|handback
argument_list|)
expr_stmt|;
block|}
DECL|method|removeNotificationListener (ObjectName name, NotificationListener listener)
specifier|public
name|void
name|removeNotificationListener
parameter_list|(
name|ObjectName
name|name
parameter_list|,
name|NotificationListener
name|listener
parameter_list|)
throws|throws
name|InstanceNotFoundException
throws|,
name|ListenerNotFoundException
throws|,
name|IOException
block|{
name|connection
operator|.
name|removeNotificationListener
argument_list|(
name|name
argument_list|,
name|listener
argument_list|)
expr_stmt|;
block|}
DECL|method|removeNotificationListener (ObjectName name, NotificationListener listener, NotificationFilter filter, Object handback)
specifier|public
name|void
name|removeNotificationListener
parameter_list|(
name|ObjectName
name|name
parameter_list|,
name|NotificationListener
name|listener
parameter_list|,
name|NotificationFilter
name|filter
parameter_list|,
name|Object
name|handback
parameter_list|)
throws|throws
name|InstanceNotFoundException
throws|,
name|ListenerNotFoundException
throws|,
name|IOException
block|{
name|connection
operator|.
name|removeNotificationListener
argument_list|(
name|name
argument_list|,
name|listener
argument_list|,
name|filter
argument_list|,
name|handback
argument_list|)
expr_stmt|;
block|}
DECL|method|getMBeanInfo (ObjectName name)
specifier|public
name|MBeanInfo
name|getMBeanInfo
parameter_list|(
name|ObjectName
name|name
parameter_list|)
throws|throws
name|InstanceNotFoundException
throws|,
name|IntrospectionException
throws|,
name|ReflectionException
throws|,
name|IOException
block|{
return|return
name|connection
operator|.
name|getMBeanInfo
argument_list|(
name|name
argument_list|)
return|;
block|}
DECL|method|isInstanceOf (ObjectName name, String className)
specifier|public
name|boolean
name|isInstanceOf
parameter_list|(
name|ObjectName
name|name
parameter_list|,
name|String
name|className
parameter_list|)
throws|throws
name|InstanceNotFoundException
throws|,
name|IOException
block|{
return|return
name|connection
operator|.
name|isInstanceOf
argument_list|(
name|name
argument_list|,
name|className
argument_list|)
return|;
block|}
block|}
end_class

end_unit

