begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.cdi.xml
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|cdi
operator|.
name|xml
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|Bean
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|BeanManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElements
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlTransient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|LoggingLevel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RoutesBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ShutdownRoute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ShutdownRunningTask
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|TypeConverterExists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|core
operator|.
name|xml
operator|.
name|AbstractCamelContextFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|core
operator|.
name|xml
operator|.
name|AbstractCamelFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|core
operator|.
name|xml
operator|.
name|CamelJMXAgentDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|core
operator|.
name|xml
operator|.
name|CamelPropertyPlaceholderDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|core
operator|.
name|xml
operator|.
name|CamelProxyFactoryDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|core
operator|.
name|xml
operator|.
name|CamelServiceExporterDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|core
operator|.
name|xml
operator|.
name|CamelStreamCachingStrategyDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|ContextScanDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|GlobalOptionsDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|HystrixConfigurationDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|InterceptDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|InterceptFromDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|InterceptSendToEndpointDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|OnCompletionDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|OnExceptionDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|PackageScanDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|PropertiesDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|RestContextRefDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|RouteBuilderDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|RouteContextRefDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|RouteDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|ThreadPoolProfileDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|cloud
operator|.
name|ServiceCallConfigurationDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|dataformat
operator|.
name|DataFormatsDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|rest
operator|.
name|RestConfigurationDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|rest
operator|.
name|RestDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|transformer
operator|.
name|TransformersDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|validator
operator|.
name|ValidatorsDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|PackageScanFilter
import|;
end_import

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"camelContext"
argument_list|)
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|CamelContextFactoryBean
specifier|public
class|class
name|CamelContextFactoryBean
extends|extends
name|AbstractCamelContextFactoryBean
argument_list|<
name|DefaultCamelContext
argument_list|>
implements|implements
name|BeanManagerAware
block|{
annotation|@
name|XmlAttribute
argument_list|(
name|name
operator|=
literal|"depends-on"
argument_list|)
DECL|field|dependsOn
specifier|private
name|String
name|dependsOn
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|trace
specifier|private
name|String
name|trace
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|messageHistory
specifier|private
name|String
name|messageHistory
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|logExhaustedMessageBody
specifier|private
name|String
name|logExhaustedMessageBody
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|streamCache
specifier|private
name|String
name|streamCache
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|delayer
specifier|private
name|String
name|delayer
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|handleFault
specifier|private
name|String
name|handleFault
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|errorHandlerRef
specifier|private
name|String
name|errorHandlerRef
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|autoStartup
specifier|private
name|String
name|autoStartup
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|shutdownEager
specifier|private
name|String
name|shutdownEager
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|useMDCLogging
specifier|private
name|String
name|useMDCLogging
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|useBreadcrumb
specifier|private
name|String
name|useBreadcrumb
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|allowUseOriginalMessage
specifier|private
name|String
name|allowUseOriginalMessage
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|runtimeEndpointRegistryEnabled
specifier|private
name|String
name|runtimeEndpointRegistryEnabled
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|managementNamePattern
specifier|private
name|String
name|managementNamePattern
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|threadNamePattern
specifier|private
name|String
name|threadNamePattern
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|shutdownRoute
specifier|private
name|ShutdownRoute
name|shutdownRoute
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|shutdownRunningTask
specifier|private
name|ShutdownRunningTask
name|shutdownRunningTask
decl_stmt|;
annotation|@
name|Deprecated
annotation|@
name|XmlAttribute
DECL|field|lazyLoadTypeConverters
specifier|private
name|Boolean
name|lazyLoadTypeConverters
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|typeConverterStatisticsEnabled
specifier|private
name|Boolean
name|typeConverterStatisticsEnabled
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|typeConverterExists
specifier|private
name|TypeConverterExists
name|typeConverterExists
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|typeConverterExistsLoggingLevel
specifier|private
name|LoggingLevel
name|typeConverterExistsLoggingLevel
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"properties"
argument_list|)
DECL|field|properties
specifier|private
name|PropertiesDefinition
name|properties
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"globalOptions"
argument_list|)
DECL|field|globalOptions
specifier|private
name|GlobalOptionsDefinition
name|globalOptions
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"propertyPlaceholder"
argument_list|,
name|type
operator|=
name|CamelPropertyPlaceholderDefinition
operator|.
name|class
argument_list|)
DECL|field|camelPropertyPlaceholder
specifier|private
name|CamelPropertyPlaceholderDefinition
name|camelPropertyPlaceholder
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"package"
argument_list|)
DECL|field|packages
specifier|private
name|String
index|[]
name|packages
init|=
block|{}
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"packageScan"
argument_list|,
name|type
operator|=
name|PackageScanDefinition
operator|.
name|class
argument_list|)
DECL|field|packageScan
specifier|private
name|PackageScanDefinition
name|packageScan
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"contextScan"
argument_list|,
name|type
operator|=
name|ContextScanDefinition
operator|.
name|class
argument_list|)
DECL|field|contextScan
specifier|private
name|ContextScanDefinition
name|contextScan
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"streamCaching"
argument_list|,
name|type
operator|=
name|CamelStreamCachingStrategyDefinition
operator|.
name|class
argument_list|)
DECL|field|camelStreamCachingStrategy
specifier|private
name|CamelStreamCachingStrategyDefinition
name|camelStreamCachingStrategy
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"jmxAgent"
argument_list|,
name|type
operator|=
name|CamelJMXAgentDefinition
operator|.
name|class
argument_list|)
DECL|field|camelJMXAgent
specifier|private
name|CamelJMXAgentDefinition
name|camelJMXAgent
decl_stmt|;
annotation|@
name|XmlElements
argument_list|(
block|{
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"consumerTemplate"
argument_list|,
name|type
operator|=
name|ConsumerTemplateFactoryBean
operator|.
name|class
argument_list|)
block|,
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"redeliveryPolicyProfile"
argument_list|,
name|type
operator|=
name|RedeliveryPolicyFactoryBean
operator|.
name|class
argument_list|)
block|,
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"template"
argument_list|,
name|type
operator|=
name|ProducerTemplateFactoryBean
operator|.
name|class
argument_list|)
block|,
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"threadPool"
argument_list|,
name|type
operator|=
name|ThreadPoolFactoryBean
operator|.
name|class
argument_list|)
block|,
block|}
argument_list|)
DECL|field|beansFactory
specifier|private
name|List
argument_list|<
name|AbstractCamelFactoryBean
argument_list|<
name|?
argument_list|>
argument_list|>
name|beansFactory
decl_stmt|;
annotation|@
name|XmlTransient
DECL|field|beans
specifier|private
name|List
argument_list|<
name|?
argument_list|>
name|beans
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"defaultServiceCallConfiguration"
argument_list|)
DECL|field|defaultServiceCallConfiguration
specifier|private
name|ServiceCallConfigurationDefinition
name|defaultServiceCallConfiguration
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"serviceCallConfiguration"
argument_list|,
name|type
operator|=
name|ServiceCallConfigurationDefinition
operator|.
name|class
argument_list|)
DECL|field|serviceCallConfigurations
specifier|private
name|List
argument_list|<
name|ServiceCallConfigurationDefinition
argument_list|>
name|serviceCallConfigurations
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"hystrixConfiguration"
argument_list|,
name|type
operator|=
name|HystrixConfigurationDefinition
operator|.
name|class
argument_list|)
DECL|field|hystrixConfigurations
specifier|private
name|List
argument_list|<
name|HystrixConfigurationDefinition
argument_list|>
name|hystrixConfigurations
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"errorHandler"
argument_list|,
name|type
operator|=
name|ErrorHandlerDefinition
operator|.
name|class
argument_list|)
DECL|field|errorHandlers
specifier|private
name|List
argument_list|<
name|ErrorHandlerDefinition
argument_list|>
name|errorHandlers
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"export"
argument_list|,
name|type
operator|=
name|CamelServiceExporterDefinition
operator|.
name|class
argument_list|)
DECL|field|exports
specifier|private
name|List
argument_list|<
name|CamelServiceExporterDefinition
argument_list|>
name|exports
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"proxy"
argument_list|)
DECL|field|proxies
specifier|private
name|List
argument_list|<
name|CamelProxyFactoryDefinition
argument_list|>
name|proxies
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"routeBuilder"
argument_list|)
DECL|field|builderRefs
specifier|private
name|List
argument_list|<
name|RouteBuilderDefinition
argument_list|>
name|builderRefs
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"routeContextRef"
argument_list|)
DECL|field|routeRefs
specifier|private
name|List
argument_list|<
name|RouteContextRefDefinition
argument_list|>
name|routeRefs
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"restContextRef"
argument_list|)
DECL|field|restRefs
specifier|private
name|List
argument_list|<
name|RestContextRefDefinition
argument_list|>
name|restRefs
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"threadPoolProfile"
argument_list|)
DECL|field|threadPoolProfiles
specifier|private
name|List
argument_list|<
name|ThreadPoolProfileDefinition
argument_list|>
name|threadPoolProfiles
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"endpoint"
argument_list|)
DECL|field|endpoints
specifier|private
name|List
argument_list|<
name|EndpointFactoryBean
argument_list|>
name|endpoints
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"dataFormats"
argument_list|)
DECL|field|dataFormats
specifier|private
name|DataFormatsDefinition
name|dataFormats
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"transformers"
argument_list|)
DECL|field|transformers
specifier|private
name|TransformersDefinition
name|transformers
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"validators"
argument_list|)
DECL|field|validators
specifier|private
name|ValidatorsDefinition
name|validators
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"redeliveryPolicyProfile"
argument_list|)
DECL|field|redeliveryPolicies
specifier|private
name|List
argument_list|<
name|RedeliveryPolicyFactoryBean
argument_list|>
name|redeliveryPolicies
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"onException"
argument_list|)
DECL|field|onExceptions
specifier|private
name|List
argument_list|<
name|OnExceptionDefinition
argument_list|>
name|onExceptions
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"onCompletion"
argument_list|)
DECL|field|onCompletions
specifier|private
name|List
argument_list|<
name|OnCompletionDefinition
argument_list|>
name|onCompletions
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"intercept"
argument_list|)
DECL|field|intercepts
specifier|private
name|List
argument_list|<
name|InterceptDefinition
argument_list|>
name|intercepts
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"interceptFrom"
argument_list|)
DECL|field|interceptFroms
specifier|private
name|List
argument_list|<
name|InterceptFromDefinition
argument_list|>
name|interceptFroms
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"interceptSendToEndpoint"
argument_list|)
DECL|field|interceptSendToEndpoints
specifier|private
name|List
argument_list|<
name|InterceptSendToEndpointDefinition
argument_list|>
name|interceptSendToEndpoints
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"restConfiguration"
argument_list|)
DECL|field|restConfiguration
specifier|private
name|RestConfigurationDefinition
name|restConfiguration
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"rest"
argument_list|)
DECL|field|rests
specifier|private
name|List
argument_list|<
name|RestDefinition
argument_list|>
name|rests
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"route"
argument_list|)
DECL|field|routes
specifier|private
name|List
argument_list|<
name|RouteDefinition
argument_list|>
name|routes
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|XmlTransient
DECL|field|context
specifier|private
name|DefaultCamelContext
name|context
decl_stmt|;
annotation|@
name|XmlTransient
DECL|field|manager
specifier|private
name|BeanManager
name|manager
decl_stmt|;
annotation|@
name|XmlTransient
DECL|field|implicitId
specifier|private
name|boolean
name|implicitId
decl_stmt|;
annotation|@
name|Override
DECL|method|getObjectType ()
specifier|public
name|Class
argument_list|<
name|DefaultCamelContext
argument_list|>
name|getObjectType
parameter_list|()
block|{
return|return
name|DefaultCamelContext
operator|.
name|class
return|;
block|}
annotation|@
name|Override
DECL|method|setBeanManager (BeanManager manager)
specifier|public
name|void
name|setBeanManager
parameter_list|(
name|BeanManager
name|manager
parameter_list|)
block|{
name|this
operator|.
name|manager
operator|=
name|manager
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|getBeanForType (Class<S> clazz)
specifier|protected
parameter_list|<
name|S
parameter_list|>
name|S
name|getBeanForType
parameter_list|(
name|Class
argument_list|<
name|S
argument_list|>
name|clazz
parameter_list|)
block|{
name|Bean
argument_list|<
name|?
argument_list|>
name|bean
init|=
name|manager
operator|.
name|resolve
argument_list|(
name|manager
operator|.
name|getBeans
argument_list|(
name|clazz
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|bean
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
operator|(
name|S
operator|)
name|manager
operator|.
name|getReference
argument_list|(
name|bean
argument_list|,
name|clazz
argument_list|,
name|manager
operator|.
name|createCreationalContext
argument_list|(
name|bean
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|findRouteBuildersByPackageScan (String[] packages, PackageScanFilter filter, List<RoutesBuilder> builders)
specifier|protected
name|void
name|findRouteBuildersByPackageScan
parameter_list|(
name|String
index|[]
name|packages
parameter_list|,
name|PackageScanFilter
name|filter
parameter_list|,
name|List
argument_list|<
name|RoutesBuilder
argument_list|>
name|builders
parameter_list|)
throws|throws
name|Exception
block|{
comment|// add filter to class resolver which then will filter
name|getContext
argument_list|()
operator|.
name|getPackageScanClassResolver
argument_list|()
operator|.
name|addFilter
argument_list|(
name|filter
argument_list|)
expr_stmt|;
name|PackageScanRouteBuilderFinder
name|finder
init|=
operator|new
name|PackageScanRouteBuilderFinder
argument_list|(
name|getContext
argument_list|()
argument_list|,
name|packages
argument_list|,
name|getContextClassLoaderOnStart
argument_list|()
argument_list|,
name|getContext
argument_list|()
operator|.
name|getPackageScanClassResolver
argument_list|()
argument_list|)
decl_stmt|;
name|finder
operator|.
name|appendBuilders
argument_list|(
name|builders
argument_list|)
expr_stmt|;
comment|// and remove the filter
name|getContext
argument_list|()
operator|.
name|getPackageScanClassResolver
argument_list|()
operator|.
name|removeFilter
argument_list|(
name|filter
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|findRouteBuildersByContextScan (PackageScanFilter filter, boolean includeNonSingletons, List<RoutesBuilder> builders)
specifier|protected
name|void
name|findRouteBuildersByContextScan
parameter_list|(
name|PackageScanFilter
name|filter
parameter_list|,
name|boolean
name|includeNonSingletons
parameter_list|,
name|List
argument_list|<
name|RoutesBuilder
argument_list|>
name|builders
parameter_list|)
throws|throws
name|Exception
block|{
name|ContextScanRouteBuilderFinder
name|finder
init|=
operator|new
name|ContextScanRouteBuilderFinder
argument_list|(
name|manager
argument_list|,
name|filter
argument_list|,
name|includeNonSingletons
argument_list|)
decl_stmt|;
name|finder
operator|.
name|appendBuilders
argument_list|(
name|builders
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|initBeanPostProcessor (DefaultCamelContext context)
specifier|protected
name|void
name|initBeanPostProcessor
parameter_list|(
name|DefaultCamelContext
name|context
parameter_list|)
block|{
comment|// Already done by Camel CDI injection target
block|}
annotation|@
name|Override
DECL|method|postProcessBeforeInit (RouteBuilder builder)
specifier|protected
name|void
name|postProcessBeforeInit
parameter_list|(
name|RouteBuilder
name|builder
parameter_list|)
block|{
comment|// Already done by Camel CDI injection target
block|}
annotation|@
name|Override
DECL|method|initCustomRegistry (DefaultCamelContext context)
specifier|protected
name|void
name|initCustomRegistry
parameter_list|(
name|DefaultCamelContext
name|context
parameter_list|)
block|{
comment|// Already done by Camel CDI injection target
block|}
annotation|@
name|Override
DECL|method|afterPropertiesSet ()
specifier|public
name|void
name|afterPropertiesSet
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|afterPropertiesSet
argument_list|()
expr_stmt|;
name|setupRoutes
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getContext ()
specifier|public
name|DefaultCamelContext
name|getContext
parameter_list|()
block|{
return|return
name|context
return|;
block|}
DECL|method|setContext (DefaultCamelContext context)
specifier|public
name|void
name|setContext
parameter_list|(
name|DefaultCamelContext
name|context
parameter_list|)
block|{
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getContext (boolean create)
specifier|public
name|DefaultCamelContext
name|getContext
parameter_list|(
name|boolean
name|create
parameter_list|)
block|{
return|return
name|context
return|;
block|}
annotation|@
name|Override
DECL|method|getBeansFactory ()
specifier|public
name|List
argument_list|<
name|AbstractCamelFactoryBean
argument_list|<
name|?
argument_list|>
argument_list|>
name|getBeansFactory
parameter_list|()
block|{
return|return
name|beansFactory
return|;
block|}
DECL|method|setBeansFactory (List<AbstractCamelFactoryBean<?>> beansFactory)
specifier|public
name|void
name|setBeansFactory
parameter_list|(
name|List
argument_list|<
name|AbstractCamelFactoryBean
argument_list|<
name|?
argument_list|>
argument_list|>
name|beansFactory
parameter_list|)
block|{
name|this
operator|.
name|beansFactory
operator|=
name|beansFactory
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getBeans ()
specifier|public
name|List
argument_list|<
name|?
argument_list|>
name|getBeans
parameter_list|()
block|{
return|return
name|beans
return|;
block|}
DECL|method|setBeans (List<?> beans)
specifier|public
name|void
name|setBeans
parameter_list|(
name|List
argument_list|<
name|?
argument_list|>
name|beans
parameter_list|)
block|{
name|this
operator|.
name|beans
operator|=
name|beans
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getDefaultServiceCallConfiguration ()
specifier|public
name|ServiceCallConfigurationDefinition
name|getDefaultServiceCallConfiguration
parameter_list|()
block|{
return|return
name|defaultServiceCallConfiguration
return|;
block|}
DECL|method|setDefaultServiceCallConfiguration (ServiceCallConfigurationDefinition defaultServiceCallConfiguration)
specifier|public
name|void
name|setDefaultServiceCallConfiguration
parameter_list|(
name|ServiceCallConfigurationDefinition
name|defaultServiceCallConfiguration
parameter_list|)
block|{
name|this
operator|.
name|defaultServiceCallConfiguration
operator|=
name|defaultServiceCallConfiguration
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getServiceCallConfigurations ()
specifier|public
name|List
argument_list|<
name|ServiceCallConfigurationDefinition
argument_list|>
name|getServiceCallConfigurations
parameter_list|()
block|{
return|return
name|serviceCallConfigurations
return|;
block|}
DECL|method|setServiceCallConfigurations (List<ServiceCallConfigurationDefinition> serviceCallConfigurations)
specifier|public
name|void
name|setServiceCallConfigurations
parameter_list|(
name|List
argument_list|<
name|ServiceCallConfigurationDefinition
argument_list|>
name|serviceCallConfigurations
parameter_list|)
block|{
name|this
operator|.
name|serviceCallConfigurations
operator|=
name|serviceCallConfigurations
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getHystrixConfigurations ()
specifier|public
name|List
argument_list|<
name|HystrixConfigurationDefinition
argument_list|>
name|getHystrixConfigurations
parameter_list|()
block|{
return|return
name|hystrixConfigurations
return|;
block|}
DECL|method|setHystrixConfigurations (List<HystrixConfigurationDefinition> hystrixConfigurations)
specifier|public
name|void
name|setHystrixConfigurations
parameter_list|(
name|List
argument_list|<
name|HystrixConfigurationDefinition
argument_list|>
name|hystrixConfigurations
parameter_list|)
block|{
name|this
operator|.
name|hystrixConfigurations
operator|=
name|hystrixConfigurations
expr_stmt|;
block|}
DECL|method|getRoutes ()
specifier|public
name|List
argument_list|<
name|RouteDefinition
argument_list|>
name|getRoutes
parameter_list|()
block|{
return|return
name|routes
return|;
block|}
DECL|method|setRoutes (List<RouteDefinition> routes)
specifier|public
name|void
name|setRoutes
parameter_list|(
name|List
argument_list|<
name|RouteDefinition
argument_list|>
name|routes
parameter_list|)
block|{
name|this
operator|.
name|routes
operator|=
name|routes
expr_stmt|;
block|}
DECL|method|getRests ()
specifier|public
name|List
argument_list|<
name|RestDefinition
argument_list|>
name|getRests
parameter_list|()
block|{
return|return
name|rests
return|;
block|}
DECL|method|setRests (List<RestDefinition> rests)
specifier|public
name|void
name|setRests
parameter_list|(
name|List
argument_list|<
name|RestDefinition
argument_list|>
name|rests
parameter_list|)
block|{
name|this
operator|.
name|rests
operator|=
name|rests
expr_stmt|;
block|}
DECL|method|getRestConfiguration ()
specifier|public
name|RestConfigurationDefinition
name|getRestConfiguration
parameter_list|()
block|{
return|return
name|restConfiguration
return|;
block|}
DECL|method|setRestConfiguration (RestConfigurationDefinition restConfiguration)
specifier|public
name|void
name|setRestConfiguration
parameter_list|(
name|RestConfigurationDefinition
name|restConfiguration
parameter_list|)
block|{
name|this
operator|.
name|restConfiguration
operator|=
name|restConfiguration
expr_stmt|;
block|}
DECL|method|getEndpoints ()
specifier|public
name|List
argument_list|<
name|EndpointFactoryBean
argument_list|>
name|getEndpoints
parameter_list|()
block|{
return|return
name|endpoints
return|;
block|}
DECL|method|setEndpoints (List<EndpointFactoryBean> endpoints)
specifier|public
name|void
name|setEndpoints
parameter_list|(
name|List
argument_list|<
name|EndpointFactoryBean
argument_list|>
name|endpoints
parameter_list|)
block|{
name|this
operator|.
name|endpoints
operator|=
name|endpoints
expr_stmt|;
block|}
DECL|method|getRedeliveryPolicies ()
specifier|public
name|List
argument_list|<
name|RedeliveryPolicyFactoryBean
argument_list|>
name|getRedeliveryPolicies
parameter_list|()
block|{
return|return
name|redeliveryPolicies
return|;
block|}
DECL|method|setRedeliveryPolicies (List<RedeliveryPolicyFactoryBean> redeliveryPolicies)
specifier|public
name|void
name|setRedeliveryPolicies
parameter_list|(
name|List
argument_list|<
name|RedeliveryPolicyFactoryBean
argument_list|>
name|redeliveryPolicies
parameter_list|)
block|{
name|this
operator|.
name|redeliveryPolicies
operator|=
name|redeliveryPolicies
expr_stmt|;
block|}
DECL|method|getIntercepts ()
specifier|public
name|List
argument_list|<
name|InterceptDefinition
argument_list|>
name|getIntercepts
parameter_list|()
block|{
return|return
name|intercepts
return|;
block|}
DECL|method|setIntercepts (List<InterceptDefinition> intercepts)
specifier|public
name|void
name|setIntercepts
parameter_list|(
name|List
argument_list|<
name|InterceptDefinition
argument_list|>
name|intercepts
parameter_list|)
block|{
name|this
operator|.
name|intercepts
operator|=
name|intercepts
expr_stmt|;
block|}
DECL|method|getInterceptFroms ()
specifier|public
name|List
argument_list|<
name|InterceptFromDefinition
argument_list|>
name|getInterceptFroms
parameter_list|()
block|{
return|return
name|interceptFroms
return|;
block|}
DECL|method|setInterceptFroms (List<InterceptFromDefinition> interceptFroms)
specifier|public
name|void
name|setInterceptFroms
parameter_list|(
name|List
argument_list|<
name|InterceptFromDefinition
argument_list|>
name|interceptFroms
parameter_list|)
block|{
name|this
operator|.
name|interceptFroms
operator|=
name|interceptFroms
expr_stmt|;
block|}
DECL|method|getInterceptSendToEndpoints ()
specifier|public
name|List
argument_list|<
name|InterceptSendToEndpointDefinition
argument_list|>
name|getInterceptSendToEndpoints
parameter_list|()
block|{
return|return
name|interceptSendToEndpoints
return|;
block|}
DECL|method|setInterceptSendToEndpoints (List<InterceptSendToEndpointDefinition> interceptSendToEndpoints)
specifier|public
name|void
name|setInterceptSendToEndpoints
parameter_list|(
name|List
argument_list|<
name|InterceptSendToEndpointDefinition
argument_list|>
name|interceptSendToEndpoints
parameter_list|)
block|{
name|this
operator|.
name|interceptSendToEndpoints
operator|=
name|interceptSendToEndpoints
expr_stmt|;
block|}
DECL|method|getProperties ()
specifier|public
name|PropertiesDefinition
name|getProperties
parameter_list|()
block|{
return|return
name|properties
return|;
block|}
DECL|method|setProperties (PropertiesDefinition properties)
specifier|public
name|void
name|setProperties
parameter_list|(
name|PropertiesDefinition
name|properties
parameter_list|)
block|{
name|this
operator|.
name|properties
operator|=
name|properties
expr_stmt|;
block|}
DECL|method|getGlobalOptions ()
specifier|public
name|GlobalOptionsDefinition
name|getGlobalOptions
parameter_list|()
block|{
return|return
name|globalOptions
return|;
block|}
DECL|method|setGlobalOptions (GlobalOptionsDefinition globalOptions)
specifier|public
name|void
name|setGlobalOptions
parameter_list|(
name|GlobalOptionsDefinition
name|globalOptions
parameter_list|)
block|{
name|this
operator|.
name|globalOptions
operator|=
name|globalOptions
expr_stmt|;
block|}
DECL|method|getPackages ()
specifier|public
name|String
index|[]
name|getPackages
parameter_list|()
block|{
return|return
name|packages
return|;
block|}
comment|/**      * Sets the package names to be recursively searched for Java classes which      * extend {@link org.apache.camel.builder.RouteBuilder} to be auto-wired up to the      * {@link CamelContext} as a route. Note that classes are excluded if      * they are specifically configured in the deployment.      *<p/>      * A more advanced configuration can be done using {@link #setPackageScan(org.apache.camel.model.PackageScanDefinition)}      *      * @param packages the package names which are recursively searched      * @see #setPackageScan(org.apache.camel.model.PackageScanDefinition)      */
DECL|method|setPackages (String[] packages)
specifier|public
name|void
name|setPackages
parameter_list|(
name|String
index|[]
name|packages
parameter_list|)
block|{
name|this
operator|.
name|packages
operator|=
name|packages
expr_stmt|;
block|}
DECL|method|getPackageScan ()
specifier|public
name|PackageScanDefinition
name|getPackageScan
parameter_list|()
block|{
return|return
name|packageScan
return|;
block|}
comment|/**      * Sets the package scanning information. Package scanning allows for the      * automatic discovery of certain camel classes at runtime for inclusion      * e.g. {@link org.apache.camel.builder.RouteBuilder} implementations      *      * @param packageScan the package scan      */
DECL|method|setPackageScan (PackageScanDefinition packageScan)
specifier|public
name|void
name|setPackageScan
parameter_list|(
name|PackageScanDefinition
name|packageScan
parameter_list|)
block|{
name|this
operator|.
name|packageScan
operator|=
name|packageScan
expr_stmt|;
block|}
DECL|method|getContextScan ()
specifier|public
name|ContextScanDefinition
name|getContextScan
parameter_list|()
block|{
return|return
name|contextScan
return|;
block|}
comment|/**      * Sets the context scanning information.      * Context scanning allows for the automatic discovery of Camel routes runtime for inclusion      * e.g. {@link org.apache.camel.builder.RouteBuilder} implementations      *      * @param contextScan the context scan      */
DECL|method|setContextScan (ContextScanDefinition contextScan)
specifier|public
name|void
name|setContextScan
parameter_list|(
name|ContextScanDefinition
name|contextScan
parameter_list|)
block|{
name|this
operator|.
name|contextScan
operator|=
name|contextScan
expr_stmt|;
block|}
DECL|method|getCamelPropertyPlaceholder ()
specifier|public
name|CamelPropertyPlaceholderDefinition
name|getCamelPropertyPlaceholder
parameter_list|()
block|{
return|return
name|camelPropertyPlaceholder
return|;
block|}
DECL|method|setCamelPropertyPlaceholder (CamelPropertyPlaceholderDefinition camelPropertyPlaceholder)
specifier|public
name|void
name|setCamelPropertyPlaceholder
parameter_list|(
name|CamelPropertyPlaceholderDefinition
name|camelPropertyPlaceholder
parameter_list|)
block|{
name|this
operator|.
name|camelPropertyPlaceholder
operator|=
name|camelPropertyPlaceholder
expr_stmt|;
block|}
DECL|method|getCamelStreamCachingStrategy ()
specifier|public
name|CamelStreamCachingStrategyDefinition
name|getCamelStreamCachingStrategy
parameter_list|()
block|{
return|return
name|camelStreamCachingStrategy
return|;
block|}
DECL|method|setCamelStreamCachingStrategy (CamelStreamCachingStrategyDefinition camelStreamCachingStrategy)
specifier|public
name|void
name|setCamelStreamCachingStrategy
parameter_list|(
name|CamelStreamCachingStrategyDefinition
name|camelStreamCachingStrategy
parameter_list|)
block|{
name|this
operator|.
name|camelStreamCachingStrategy
operator|=
name|camelStreamCachingStrategy
expr_stmt|;
block|}
DECL|method|getTrace ()
specifier|public
name|String
name|getTrace
parameter_list|()
block|{
return|return
name|trace
return|;
block|}
DECL|method|setTrace (String trace)
specifier|public
name|void
name|setTrace
parameter_list|(
name|String
name|trace
parameter_list|)
block|{
name|this
operator|.
name|trace
operator|=
name|trace
expr_stmt|;
block|}
DECL|method|getMessageHistory ()
specifier|public
name|String
name|getMessageHistory
parameter_list|()
block|{
return|return
name|messageHistory
return|;
block|}
DECL|method|setMessageHistory (String messageHistory)
specifier|public
name|void
name|setMessageHistory
parameter_list|(
name|String
name|messageHistory
parameter_list|)
block|{
name|this
operator|.
name|messageHistory
operator|=
name|messageHistory
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getLogExhaustedMessageBody ()
specifier|public
name|String
name|getLogExhaustedMessageBody
parameter_list|()
block|{
return|return
name|logExhaustedMessageBody
return|;
block|}
DECL|method|setLogExhaustedMessageBody (String logExhaustedMessageBody)
specifier|public
name|void
name|setLogExhaustedMessageBody
parameter_list|(
name|String
name|logExhaustedMessageBody
parameter_list|)
block|{
name|this
operator|.
name|logExhaustedMessageBody
operator|=
name|logExhaustedMessageBody
expr_stmt|;
block|}
DECL|method|getStreamCache ()
specifier|public
name|String
name|getStreamCache
parameter_list|()
block|{
return|return
name|streamCache
return|;
block|}
DECL|method|setStreamCache (String streamCache)
specifier|public
name|void
name|setStreamCache
parameter_list|(
name|String
name|streamCache
parameter_list|)
block|{
name|this
operator|.
name|streamCache
operator|=
name|streamCache
expr_stmt|;
block|}
DECL|method|getDelayer ()
specifier|public
name|String
name|getDelayer
parameter_list|()
block|{
return|return
name|delayer
return|;
block|}
DECL|method|setDelayer (String delayer)
specifier|public
name|void
name|setDelayer
parameter_list|(
name|String
name|delayer
parameter_list|)
block|{
name|this
operator|.
name|delayer
operator|=
name|delayer
expr_stmt|;
block|}
DECL|method|getHandleFault ()
specifier|public
name|String
name|getHandleFault
parameter_list|()
block|{
return|return
name|handleFault
return|;
block|}
DECL|method|setHandleFault (String handleFault)
specifier|public
name|void
name|setHandleFault
parameter_list|(
name|String
name|handleFault
parameter_list|)
block|{
name|this
operator|.
name|handleFault
operator|=
name|handleFault
expr_stmt|;
block|}
DECL|method|getAutoStartup ()
specifier|public
name|String
name|getAutoStartup
parameter_list|()
block|{
return|return
name|autoStartup
return|;
block|}
DECL|method|setAutoStartup (String autoStartup)
specifier|public
name|void
name|setAutoStartup
parameter_list|(
name|String
name|autoStartup
parameter_list|)
block|{
name|this
operator|.
name|autoStartup
operator|=
name|autoStartup
expr_stmt|;
block|}
DECL|method|getShutdownEager ()
specifier|public
name|String
name|getShutdownEager
parameter_list|()
block|{
return|return
name|shutdownEager
return|;
block|}
DECL|method|setShutdownEager (String shutdownEager)
specifier|public
name|void
name|setShutdownEager
parameter_list|(
name|String
name|shutdownEager
parameter_list|)
block|{
name|this
operator|.
name|shutdownEager
operator|=
name|shutdownEager
expr_stmt|;
block|}
DECL|method|getUseMDCLogging ()
specifier|public
name|String
name|getUseMDCLogging
parameter_list|()
block|{
return|return
name|useMDCLogging
return|;
block|}
DECL|method|setUseMDCLogging (String useMDCLogging)
specifier|public
name|void
name|setUseMDCLogging
parameter_list|(
name|String
name|useMDCLogging
parameter_list|)
block|{
name|this
operator|.
name|useMDCLogging
operator|=
name|useMDCLogging
expr_stmt|;
block|}
DECL|method|getUseBreadcrumb ()
specifier|public
name|String
name|getUseBreadcrumb
parameter_list|()
block|{
return|return
name|useBreadcrumb
return|;
block|}
DECL|method|setUseBreadcrumb (String useBreadcrumb)
specifier|public
name|void
name|setUseBreadcrumb
parameter_list|(
name|String
name|useBreadcrumb
parameter_list|)
block|{
name|this
operator|.
name|useBreadcrumb
operator|=
name|useBreadcrumb
expr_stmt|;
block|}
DECL|method|getAllowUseOriginalMessage ()
specifier|public
name|String
name|getAllowUseOriginalMessage
parameter_list|()
block|{
return|return
name|allowUseOriginalMessage
return|;
block|}
DECL|method|setAllowUseOriginalMessage (String allowUseOriginalMessage)
specifier|public
name|void
name|setAllowUseOriginalMessage
parameter_list|(
name|String
name|allowUseOriginalMessage
parameter_list|)
block|{
name|this
operator|.
name|allowUseOriginalMessage
operator|=
name|allowUseOriginalMessage
expr_stmt|;
block|}
DECL|method|getRuntimeEndpointRegistryEnabled ()
specifier|public
name|String
name|getRuntimeEndpointRegistryEnabled
parameter_list|()
block|{
return|return
name|runtimeEndpointRegistryEnabled
return|;
block|}
DECL|method|setRuntimeEndpointRegistryEnabled (String runtimeEndpointRegistryEnabled)
specifier|public
name|void
name|setRuntimeEndpointRegistryEnabled
parameter_list|(
name|String
name|runtimeEndpointRegistryEnabled
parameter_list|)
block|{
name|this
operator|.
name|runtimeEndpointRegistryEnabled
operator|=
name|runtimeEndpointRegistryEnabled
expr_stmt|;
block|}
DECL|method|getManagementNamePattern ()
specifier|public
name|String
name|getManagementNamePattern
parameter_list|()
block|{
return|return
name|managementNamePattern
return|;
block|}
DECL|method|setManagementNamePattern (String managementNamePattern)
specifier|public
name|void
name|setManagementNamePattern
parameter_list|(
name|String
name|managementNamePattern
parameter_list|)
block|{
name|this
operator|.
name|managementNamePattern
operator|=
name|managementNamePattern
expr_stmt|;
block|}
DECL|method|getThreadNamePattern ()
specifier|public
name|String
name|getThreadNamePattern
parameter_list|()
block|{
return|return
name|threadNamePattern
return|;
block|}
DECL|method|setThreadNamePattern (String threadNamePattern)
specifier|public
name|void
name|setThreadNamePattern
parameter_list|(
name|String
name|threadNamePattern
parameter_list|)
block|{
name|this
operator|.
name|threadNamePattern
operator|=
name|threadNamePattern
expr_stmt|;
block|}
annotation|@
name|Deprecated
DECL|method|getLazyLoadTypeConverters ()
specifier|public
name|Boolean
name|getLazyLoadTypeConverters
parameter_list|()
block|{
return|return
name|lazyLoadTypeConverters
return|;
block|}
annotation|@
name|Deprecated
DECL|method|setLazyLoadTypeConverters (Boolean lazyLoadTypeConverters)
specifier|public
name|void
name|setLazyLoadTypeConverters
parameter_list|(
name|Boolean
name|lazyLoadTypeConverters
parameter_list|)
block|{
name|this
operator|.
name|lazyLoadTypeConverters
operator|=
name|lazyLoadTypeConverters
expr_stmt|;
block|}
DECL|method|getTypeConverterStatisticsEnabled ()
specifier|public
name|Boolean
name|getTypeConverterStatisticsEnabled
parameter_list|()
block|{
return|return
name|typeConverterStatisticsEnabled
return|;
block|}
DECL|method|setTypeConverterStatisticsEnabled (Boolean typeConverterStatisticsEnabled)
specifier|public
name|void
name|setTypeConverterStatisticsEnabled
parameter_list|(
name|Boolean
name|typeConverterStatisticsEnabled
parameter_list|)
block|{
name|this
operator|.
name|typeConverterStatisticsEnabled
operator|=
name|typeConverterStatisticsEnabled
expr_stmt|;
block|}
DECL|method|getTypeConverterExists ()
specifier|public
name|TypeConverterExists
name|getTypeConverterExists
parameter_list|()
block|{
return|return
name|typeConverterExists
return|;
block|}
DECL|method|setTypeConverterExists (TypeConverterExists typeConverterExists)
specifier|public
name|void
name|setTypeConverterExists
parameter_list|(
name|TypeConverterExists
name|typeConverterExists
parameter_list|)
block|{
name|this
operator|.
name|typeConverterExists
operator|=
name|typeConverterExists
expr_stmt|;
block|}
DECL|method|getTypeConverterExistsLoggingLevel ()
specifier|public
name|LoggingLevel
name|getTypeConverterExistsLoggingLevel
parameter_list|()
block|{
return|return
name|typeConverterExistsLoggingLevel
return|;
block|}
DECL|method|setTypeConverterExistsLoggingLevel (LoggingLevel typeConverterExistsLoggingLevel)
specifier|public
name|void
name|setTypeConverterExistsLoggingLevel
parameter_list|(
name|LoggingLevel
name|typeConverterExistsLoggingLevel
parameter_list|)
block|{
name|this
operator|.
name|typeConverterExistsLoggingLevel
operator|=
name|typeConverterExistsLoggingLevel
expr_stmt|;
block|}
DECL|method|getCamelJMXAgent ()
specifier|public
name|CamelJMXAgentDefinition
name|getCamelJMXAgent
parameter_list|()
block|{
return|return
name|camelJMXAgent
return|;
block|}
DECL|method|setCamelJMXAgent (CamelJMXAgentDefinition agent)
specifier|public
name|void
name|setCamelJMXAgent
parameter_list|(
name|CamelJMXAgentDefinition
name|agent
parameter_list|)
block|{
name|camelJMXAgent
operator|=
name|agent
expr_stmt|;
block|}
DECL|method|getBuilderRefs ()
specifier|public
name|List
argument_list|<
name|RouteBuilderDefinition
argument_list|>
name|getBuilderRefs
parameter_list|()
block|{
return|return
name|builderRefs
return|;
block|}
DECL|method|setBuilderRefs (List<RouteBuilderDefinition> builderRefs)
specifier|public
name|void
name|setBuilderRefs
parameter_list|(
name|List
argument_list|<
name|RouteBuilderDefinition
argument_list|>
name|builderRefs
parameter_list|)
block|{
name|this
operator|.
name|builderRefs
operator|=
name|builderRefs
expr_stmt|;
block|}
DECL|method|getRouteRefs ()
specifier|public
name|List
argument_list|<
name|RouteContextRefDefinition
argument_list|>
name|getRouteRefs
parameter_list|()
block|{
return|return
name|routeRefs
return|;
block|}
DECL|method|setRouteRefs (List<RouteContextRefDefinition> routeRefs)
specifier|public
name|void
name|setRouteRefs
parameter_list|(
name|List
argument_list|<
name|RouteContextRefDefinition
argument_list|>
name|routeRefs
parameter_list|)
block|{
name|this
operator|.
name|routeRefs
operator|=
name|routeRefs
expr_stmt|;
block|}
DECL|method|getRestRefs ()
specifier|public
name|List
argument_list|<
name|RestContextRefDefinition
argument_list|>
name|getRestRefs
parameter_list|()
block|{
return|return
name|restRefs
return|;
block|}
DECL|method|setRestRefs (List<RestContextRefDefinition> restRefs)
specifier|public
name|void
name|setRestRefs
parameter_list|(
name|List
argument_list|<
name|RestContextRefDefinition
argument_list|>
name|restRefs
parameter_list|)
block|{
name|this
operator|.
name|restRefs
operator|=
name|restRefs
expr_stmt|;
block|}
DECL|method|getErrorHandlerRef ()
specifier|public
name|String
name|getErrorHandlerRef
parameter_list|()
block|{
return|return
name|errorHandlerRef
return|;
block|}
DECL|method|setErrorHandlerRef (String errorHandlerRef)
specifier|public
name|void
name|setErrorHandlerRef
parameter_list|(
name|String
name|errorHandlerRef
parameter_list|)
block|{
name|this
operator|.
name|errorHandlerRef
operator|=
name|errorHandlerRef
expr_stmt|;
block|}
DECL|method|getDataFormats ()
specifier|public
name|DataFormatsDefinition
name|getDataFormats
parameter_list|()
block|{
return|return
name|dataFormats
return|;
block|}
DECL|method|setDataFormats (DataFormatsDefinition dataFormats)
specifier|public
name|void
name|setDataFormats
parameter_list|(
name|DataFormatsDefinition
name|dataFormats
parameter_list|)
block|{
name|this
operator|.
name|dataFormats
operator|=
name|dataFormats
expr_stmt|;
block|}
DECL|method|getTransformers ()
specifier|public
name|TransformersDefinition
name|getTransformers
parameter_list|()
block|{
return|return
name|transformers
return|;
block|}
DECL|method|setTransformers (TransformersDefinition transformers)
specifier|public
name|void
name|setTransformers
parameter_list|(
name|TransformersDefinition
name|transformers
parameter_list|)
block|{
name|this
operator|.
name|transformers
operator|=
name|transformers
expr_stmt|;
block|}
DECL|method|getValidators ()
specifier|public
name|ValidatorsDefinition
name|getValidators
parameter_list|()
block|{
return|return
name|validators
return|;
block|}
DECL|method|setValidators (ValidatorsDefinition validators)
specifier|public
name|void
name|setValidators
parameter_list|(
name|ValidatorsDefinition
name|validators
parameter_list|)
block|{
name|this
operator|.
name|validators
operator|=
name|validators
expr_stmt|;
block|}
DECL|method|getOnExceptions ()
specifier|public
name|List
argument_list|<
name|OnExceptionDefinition
argument_list|>
name|getOnExceptions
parameter_list|()
block|{
return|return
name|onExceptions
return|;
block|}
DECL|method|setOnExceptions (List<OnExceptionDefinition> onExceptions)
specifier|public
name|void
name|setOnExceptions
parameter_list|(
name|List
argument_list|<
name|OnExceptionDefinition
argument_list|>
name|onExceptions
parameter_list|)
block|{
name|this
operator|.
name|onExceptions
operator|=
name|onExceptions
expr_stmt|;
block|}
DECL|method|getOnCompletions ()
specifier|public
name|List
argument_list|<
name|OnCompletionDefinition
argument_list|>
name|getOnCompletions
parameter_list|()
block|{
return|return
name|onCompletions
return|;
block|}
DECL|method|setOnCompletions (List<OnCompletionDefinition> onCompletions)
specifier|public
name|void
name|setOnCompletions
parameter_list|(
name|List
argument_list|<
name|OnCompletionDefinition
argument_list|>
name|onCompletions
parameter_list|)
block|{
name|this
operator|.
name|onCompletions
operator|=
name|onCompletions
expr_stmt|;
block|}
DECL|method|getShutdownRoute ()
specifier|public
name|ShutdownRoute
name|getShutdownRoute
parameter_list|()
block|{
return|return
name|shutdownRoute
return|;
block|}
DECL|method|setShutdownRoute (ShutdownRoute shutdownRoute)
specifier|public
name|void
name|setShutdownRoute
parameter_list|(
name|ShutdownRoute
name|shutdownRoute
parameter_list|)
block|{
name|this
operator|.
name|shutdownRoute
operator|=
name|shutdownRoute
expr_stmt|;
block|}
DECL|method|getShutdownRunningTask ()
specifier|public
name|ShutdownRunningTask
name|getShutdownRunningTask
parameter_list|()
block|{
return|return
name|shutdownRunningTask
return|;
block|}
DECL|method|setShutdownRunningTask (ShutdownRunningTask shutdownRunningTask)
specifier|public
name|void
name|setShutdownRunningTask
parameter_list|(
name|ShutdownRunningTask
name|shutdownRunningTask
parameter_list|)
block|{
name|this
operator|.
name|shutdownRunningTask
operator|=
name|shutdownRunningTask
expr_stmt|;
block|}
DECL|method|getThreadPoolProfiles ()
specifier|public
name|List
argument_list|<
name|ThreadPoolProfileDefinition
argument_list|>
name|getThreadPoolProfiles
parameter_list|()
block|{
return|return
name|threadPoolProfiles
return|;
block|}
DECL|method|setThreadPoolProfiles (List<ThreadPoolProfileDefinition> threadPoolProfiles)
specifier|public
name|void
name|setThreadPoolProfiles
parameter_list|(
name|List
argument_list|<
name|ThreadPoolProfileDefinition
argument_list|>
name|threadPoolProfiles
parameter_list|)
block|{
name|this
operator|.
name|threadPoolProfiles
operator|=
name|threadPoolProfiles
expr_stmt|;
block|}
DECL|method|getDependsOn ()
specifier|public
name|String
name|getDependsOn
parameter_list|()
block|{
return|return
name|dependsOn
return|;
block|}
DECL|method|setDependsOn (String dependsOn)
specifier|public
name|void
name|setDependsOn
parameter_list|(
name|String
name|dependsOn
parameter_list|)
block|{
name|this
operator|.
name|dependsOn
operator|=
name|dependsOn
expr_stmt|;
block|}
DECL|method|getProxies ()
specifier|public
name|List
argument_list|<
name|CamelProxyFactoryDefinition
argument_list|>
name|getProxies
parameter_list|()
block|{
return|return
name|proxies
return|;
block|}
DECL|method|setProxies (List<CamelProxyFactoryDefinition> proxies)
specifier|public
name|void
name|setProxies
parameter_list|(
name|List
argument_list|<
name|CamelProxyFactoryDefinition
argument_list|>
name|proxies
parameter_list|)
block|{
name|this
operator|.
name|proxies
operator|=
name|proxies
expr_stmt|;
block|}
DECL|method|getExports ()
specifier|public
name|List
argument_list|<
name|CamelServiceExporterDefinition
argument_list|>
name|getExports
parameter_list|()
block|{
return|return
name|exports
return|;
block|}
DECL|method|setExports (List<CamelServiceExporterDefinition> exports)
specifier|public
name|void
name|setExports
parameter_list|(
name|List
argument_list|<
name|CamelServiceExporterDefinition
argument_list|>
name|exports
parameter_list|)
block|{
name|this
operator|.
name|exports
operator|=
name|exports
expr_stmt|;
block|}
DECL|method|isImplicitId ()
specifier|public
name|boolean
name|isImplicitId
parameter_list|()
block|{
return|return
name|implicitId
return|;
block|}
DECL|method|setImplicitId (boolean implicitId)
specifier|public
name|void
name|setImplicitId
parameter_list|(
name|boolean
name|implicitId
parameter_list|)
block|{
name|this
operator|.
name|implicitId
operator|=
name|implicitId
expr_stmt|;
block|}
DECL|method|getErrorHandlers ()
specifier|public
name|List
argument_list|<
name|ErrorHandlerDefinition
argument_list|>
name|getErrorHandlers
parameter_list|()
block|{
return|return
name|errorHandlers
return|;
block|}
DECL|method|setErrorHandlers (List<ErrorHandlerDefinition> errorHandlers)
specifier|public
name|void
name|setErrorHandlers
parameter_list|(
name|List
argument_list|<
name|ErrorHandlerDefinition
argument_list|>
name|errorHandlers
parameter_list|)
block|{
name|this
operator|.
name|errorHandlers
operator|=
name|errorHandlers
expr_stmt|;
block|}
block|}
end_class

end_unit

