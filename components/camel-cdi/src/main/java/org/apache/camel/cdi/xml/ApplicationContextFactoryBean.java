begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.cdi.xml
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|cdi
operator|.
name|xml
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElements
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|core
operator|.
name|xml
operator|.
name|AbstractCamelFactoryBean
import|;
end_import

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"beans"
argument_list|,
name|namespace
operator|=
literal|"http://www.springframework.org/schema/beans"
argument_list|)
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|ApplicationContextFactoryBean
specifier|public
class|class
name|ApplicationContextFactoryBean
block|{
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"camelContext"
argument_list|)
DECL|field|contexts
specifier|private
name|List
argument_list|<
name|CamelContextFactoryBean
argument_list|>
name|contexts
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"errorHandler"
argument_list|)
DECL|field|errorHandlers
specifier|private
name|List
argument_list|<
name|ErrorHandlerDefinition
argument_list|>
name|errorHandlers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"import"
argument_list|)
DECL|field|imports
specifier|private
name|List
argument_list|<
name|ImportDefinition
argument_list|>
name|imports
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"restContext"
argument_list|)
DECL|field|restContexts
specifier|private
name|List
argument_list|<
name|RestContextDefinition
argument_list|>
name|restContexts
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"routeContext"
argument_list|)
DECL|field|routeContexts
specifier|private
name|List
argument_list|<
name|RouteContextDefinition
argument_list|>
name|routeContexts
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|XmlElements
argument_list|(
block|{
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"consumerTemplate"
argument_list|,
name|type
operator|=
name|ConsumerTemplateFactoryBean
operator|.
name|class
argument_list|)
block|,
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"endpoint"
argument_list|,
name|type
operator|=
name|EndpointFactoryBean
operator|.
name|class
argument_list|)
block|,
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"redeliveryPolicyProfile"
argument_list|,
name|type
operator|=
name|RedeliveryPolicyFactoryBean
operator|.
name|class
argument_list|)
block|,
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"template"
argument_list|,
name|type
operator|=
name|ProducerTemplateFactoryBean
operator|.
name|class
argument_list|)
block|,
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"threadPool"
argument_list|,
name|type
operator|=
name|ThreadPoolFactoryBean
operator|.
name|class
argument_list|)
block|}
argument_list|)
DECL|field|beans
specifier|private
name|List
argument_list|<
name|AbstractCamelFactoryBean
argument_list|<
name|?
argument_list|>
argument_list|>
name|beans
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|getContexts ()
specifier|public
name|List
argument_list|<
name|CamelContextFactoryBean
argument_list|>
name|getContexts
parameter_list|()
block|{
return|return
name|contexts
return|;
block|}
DECL|method|setContexts (List<CamelContextFactoryBean> contexts)
specifier|public
name|void
name|setContexts
parameter_list|(
name|List
argument_list|<
name|CamelContextFactoryBean
argument_list|>
name|contexts
parameter_list|)
block|{
name|this
operator|.
name|contexts
operator|=
name|contexts
expr_stmt|;
block|}
DECL|method|getErrorHandlers ()
specifier|public
name|List
argument_list|<
name|ErrorHandlerDefinition
argument_list|>
name|getErrorHandlers
parameter_list|()
block|{
return|return
name|errorHandlers
return|;
block|}
DECL|method|setErrorHandlers (List<ErrorHandlerDefinition> errorHandlers)
specifier|public
name|void
name|setErrorHandlers
parameter_list|(
name|List
argument_list|<
name|ErrorHandlerDefinition
argument_list|>
name|errorHandlers
parameter_list|)
block|{
name|this
operator|.
name|errorHandlers
operator|=
name|errorHandlers
expr_stmt|;
block|}
DECL|method|getImports ()
specifier|public
name|List
argument_list|<
name|ImportDefinition
argument_list|>
name|getImports
parameter_list|()
block|{
return|return
name|imports
return|;
block|}
DECL|method|setImports (List<ImportDefinition> imports)
specifier|public
name|void
name|setImports
parameter_list|(
name|List
argument_list|<
name|ImportDefinition
argument_list|>
name|imports
parameter_list|)
block|{
name|this
operator|.
name|imports
operator|=
name|imports
expr_stmt|;
block|}
DECL|method|getRestContexts ()
specifier|public
name|List
argument_list|<
name|RestContextDefinition
argument_list|>
name|getRestContexts
parameter_list|()
block|{
return|return
name|restContexts
return|;
block|}
DECL|method|setRestContexts (List<RestContextDefinition> restContexts)
specifier|public
name|void
name|setRestContexts
parameter_list|(
name|List
argument_list|<
name|RestContextDefinition
argument_list|>
name|restContexts
parameter_list|)
block|{
name|this
operator|.
name|restContexts
operator|=
name|restContexts
expr_stmt|;
block|}
DECL|method|getRouteContexts ()
specifier|public
name|List
argument_list|<
name|RouteContextDefinition
argument_list|>
name|getRouteContexts
parameter_list|()
block|{
return|return
name|routeContexts
return|;
block|}
DECL|method|setRouteContexts (List<RouteContextDefinition> routeContexts)
specifier|public
name|void
name|setRouteContexts
parameter_list|(
name|List
argument_list|<
name|RouteContextDefinition
argument_list|>
name|routeContexts
parameter_list|)
block|{
name|this
operator|.
name|routeContexts
operator|=
name|routeContexts
expr_stmt|;
block|}
DECL|method|getBeans ()
specifier|public
name|List
argument_list|<
name|AbstractCamelFactoryBean
argument_list|<
name|?
argument_list|>
argument_list|>
name|getBeans
parameter_list|()
block|{
return|return
name|beans
return|;
block|}
DECL|method|setBeans (List<AbstractCamelFactoryBean<?>> beans)
specifier|public
name|void
name|setBeans
parameter_list|(
name|List
argument_list|<
name|AbstractCamelFactoryBean
argument_list|<
name|?
argument_list|>
argument_list|>
name|beans
parameter_list|)
block|{
name|this
operator|.
name|beans
operator|=
name|beans
expr_stmt|;
block|}
block|}
end_class

end_unit

