begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.cdi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|cdi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|ElementType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Retention
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|RetentionPolicy
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Target
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|util
operator|.
name|AnnotationLiteral
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|util
operator|.
name|Nonbinding
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Qualifier
import|;
end_import

begin_comment
comment|/**  * A CDI qualifier to define the<a href="http://camel.apache.org/uris.html">Camel URI</a> associated to  * the annotated resource. This annotation can be used to annotate an {@code @Inject} injection point for  * values of type {@link org.apache.camel.Endpoint} or {@link org.apache.camel.ProducerTemplate}. For example:  *<pre><code>  * {@literal @}Inject  * {@literal @}Uri("mock:foo")  * Endpoint endpoint;  *  * {@literal @}Inject  * {@literal @}Uri("seda:bar")  * ProducerTemplate producer;  *</code></pre>  */
end_comment

begin_annotation_defn
annotation|@
name|Qualifier
annotation|@
name|Retention
argument_list|(
name|RetentionPolicy
operator|.
name|RUNTIME
argument_list|)
annotation|@
name|Target
argument_list|(
block|{
name|ElementType
operator|.
name|TYPE
block|,
name|ElementType
operator|.
name|METHOD
block|,
name|ElementType
operator|.
name|FIELD
block|,
name|ElementType
operator|.
name|PARAMETER
block|}
argument_list|)
DECL|annotation|Uri
specifier|public
annotation_defn|@interface
name|Uri
block|{
comment|/**      * Returns the<a href="http://camel.apache.org/uris.html">Camel URI</a> of the resource.      */
DECL|method|value ()
annotation|@
name|Nonbinding
name|String
name|value
parameter_list|()
function_decl|;
DECL|class|Literal
specifier|final
class|class
name|Literal
extends|extends
name|AnnotationLiteral
argument_list|<
name|Uri
argument_list|>
implements|implements
name|Uri
block|{
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
DECL|field|uri
specifier|private
specifier|final
name|String
name|uri
decl_stmt|;
DECL|method|Literal (String uri)
specifier|private
name|Literal
parameter_list|(
name|String
name|uri
parameter_list|)
block|{
name|this
operator|.
name|uri
operator|=
name|uri
expr_stmt|;
block|}
DECL|method|of (String uri)
specifier|public
specifier|static
name|Literal
name|of
parameter_list|(
name|String
name|uri
parameter_list|)
block|{
return|return
operator|new
name|Literal
argument_list|(
name|uri
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|value ()
specifier|public
name|String
name|value
parameter_list|()
block|{
return|return
name|uri
return|;
block|}
block|}
block|}
end_annotation_defn

end_unit

