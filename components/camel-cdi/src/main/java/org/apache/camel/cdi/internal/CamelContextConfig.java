begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.cdi.internal
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|cdi
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|context
operator|.
name|spi
operator|.
name|CreationalContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|Bean
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|spi
operator|.
name|BeanManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RoutesBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RuntimeCamelException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|cdi
operator|.
name|CdiCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|RouteContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_comment
comment|/**  * Configuration options to be applied to a {@link org.apache.camel.CamelContext} by a {@link CamelContextBean}  */
end_comment

begin_class
DECL|class|CamelContextConfig
specifier|public
class|class
name|CamelContextConfig
block|{
DECL|field|routeBuilderBeans
specifier|private
specifier|final
name|List
argument_list|<
name|Bean
argument_list|<
name|?
argument_list|>
argument_list|>
name|routeBuilderBeans
init|=
operator|new
name|ArrayList
argument_list|<
name|Bean
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
DECL|method|addRouteBuilderBean (Bean<?> bean)
specifier|public
name|void
name|addRouteBuilderBean
parameter_list|(
name|Bean
argument_list|<
name|?
argument_list|>
name|bean
parameter_list|)
block|{
name|routeBuilderBeans
operator|.
name|add
argument_list|(
name|bean
argument_list|)
expr_stmt|;
block|}
DECL|method|configure (CdiCamelContext camelContext, BeanManager beanManager)
specifier|public
name|void
name|configure
parameter_list|(
name|CdiCamelContext
name|camelContext
parameter_list|,
name|BeanManager
name|beanManager
parameter_list|)
block|{
for|for
control|(
name|Bean
argument_list|<
name|?
argument_list|>
name|bean
range|:
name|routeBuilderBeans
control|)
block|{
name|CreationalContext
argument_list|<
name|?
argument_list|>
name|createContext
init|=
name|beanManager
operator|.
name|createCreationalContext
argument_list|(
name|bean
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|beanClass
init|=
name|bean
operator|.
name|getBeanClass
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|Type
argument_list|>
name|types
init|=
name|bean
operator|.
name|getTypes
argument_list|()
decl_stmt|;
for|for
control|(
name|Type
name|type
range|:
name|types
control|)
block|{
comment|// lets use the first type for producer methods
if|if
condition|(
name|type
operator|instanceof
name|Class
argument_list|<
name|?
argument_list|>
condition|)
block|{
name|beanClass
operator|=
operator|(
name|Class
argument_list|<
name|?
argument_list|>
operator|)
name|type
expr_stmt|;
break|break;
block|}
block|}
name|Object
name|reference
init|=
name|beanManager
operator|.
name|getReference
argument_list|(
name|bean
argument_list|,
name|beanClass
argument_list|,
name|createContext
argument_list|)
decl_stmt|;
name|ObjectHelper
operator|.
name|notNull
argument_list|(
name|reference
argument_list|,
literal|"Could not instantiate bean of type "
operator|+
name|beanClass
operator|.
name|getName
argument_list|()
operator|+
literal|" for "
operator|+
name|bean
argument_list|)
expr_stmt|;
try|try
block|{
if|if
condition|(
name|reference
operator|instanceof
name|RoutesBuilder
condition|)
block|{
name|RoutesBuilder
name|routeBuilder
init|=
operator|(
name|RoutesBuilder
operator|)
name|reference
decl_stmt|;
name|camelContext
operator|.
name|addRoutes
argument_list|(
name|routeBuilder
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|reference
operator|instanceof
name|RouteContainer
condition|)
block|{
name|RouteContainer
name|routeContainer
init|=
operator|(
name|RouteContainer
operator|)
name|reference
decl_stmt|;
name|camelContext
operator|.
name|addRouteDefinitions
argument_list|(
name|routeContainer
operator|.
name|getRoutes
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Invalid route builder "
operator|+
name|reference
operator|+
literal|" of type "
operator|+
name|beanClass
operator|.
name|getName
argument_list|()
operator|+
literal|". Should be RoutesBuilder or RoutesContainer"
argument_list|)
throw|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
literal|"Could not add "
operator|+
name|reference
operator|+
literal|" to CamelContext: "
operator|+
name|camelContext
operator|+
literal|". Reason: "
operator|+
name|e
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
block|}
end_class

end_unit

