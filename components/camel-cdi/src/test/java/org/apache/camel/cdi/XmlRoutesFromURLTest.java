begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.cdi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|cdi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|RoutesDefinition
import|;
end_import

begin_comment
comment|/**  * Tests loading of routes as XML from a URL  */
end_comment

begin_class
DECL|class|XmlRoutesFromURLTest
specifier|public
class|class
name|XmlRoutesFromURLTest
extends|extends
name|XmlRoutesFromClassPathTest
block|{
annotation|@
name|Override
DECL|method|createRoutes ()
specifier|public
name|RoutesDefinition
name|createRoutes
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|prefixes
init|=
block|{
literal|"camel-cdi"
block|,
literal|"components"
block|}
decl_stmt|;
name|String
name|fileName
init|=
literal|"src/test/resources/routes.xml"
decl_stmt|;
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|fileName
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|prefix
range|:
name|prefixes
control|)
block|{
if|if
condition|(
name|file
operator|.
name|exists
argument_list|()
condition|)
break|break;
name|file
operator|=
operator|new
name|File
argument_list|(
name|prefix
argument_list|,
name|file
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
literal|"The file "
operator|+
name|file
operator|.
name|getPath
argument_list|()
operator|+
literal|" does not exist"
argument_list|,
name|file
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|URL
name|url
init|=
name|file
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
decl_stmt|;
return|return
name|RoutesXml
operator|.
name|loadRoutesFromURL
argument_list|(
name|url
argument_list|)
return|;
block|}
block|}
end_class

end_unit

