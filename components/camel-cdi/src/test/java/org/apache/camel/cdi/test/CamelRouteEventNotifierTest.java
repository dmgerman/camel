begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.cdi.test
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|cdi
operator|.
name|test
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EventObject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|context
operator|.
name|ApplicationScoped
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|event
operator|.
name|Observes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|inject
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Named
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|cdi
operator|.
name|CdiCamelExtension
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|cdi
operator|.
name|bean
operator|.
name|OtherCamelRoute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|cdi
operator|.
name|bean
operator|.
name|SimpleCamelRoute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|management
operator|.
name|event
operator|.
name|RouteAddedEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|management
operator|.
name|event
operator|.
name|RouteRemovedEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|management
operator|.
name|event
operator|.
name|RouteStartedEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|management
operator|.
name|event
operator|.
name|RouteStoppedEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|arquillian
operator|.
name|container
operator|.
name|test
operator|.
name|api
operator|.
name|Deployment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|arquillian
operator|.
name|junit
operator|.
name|Arquillian
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|arquillian
operator|.
name|junit
operator|.
name|InSequence
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|shrinkwrap
operator|.
name|api
operator|.
name|Archive
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|shrinkwrap
operator|.
name|api
operator|.
name|ShrinkWrap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|shrinkwrap
operator|.
name|api
operator|.
name|asset
operator|.
name|EmptyAsset
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|shrinkwrap
operator|.
name|api
operator|.
name|spec
operator|.
name|JavaArchive
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|both
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|contains
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|hasProperty
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|instanceOf
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|Is
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|Arquillian
operator|.
name|class
argument_list|)
DECL|class|CamelRouteEventNotifierTest
specifier|public
class|class
name|CamelRouteEventNotifierTest
block|{
annotation|@
name|Produces
annotation|@
name|Named
argument_list|(
literal|"all"
argument_list|)
annotation|@
name|ApplicationScoped
DECL|field|allFiredEvents
specifier|private
name|List
argument_list|<
name|EventObject
argument_list|>
name|allFiredEvents
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|Produces
annotation|@
name|Named
argument_list|(
literal|"simple"
argument_list|)
annotation|@
name|ApplicationScoped
DECL|field|simpleFiredEvents
specifier|private
name|List
argument_list|<
name|EventObject
argument_list|>
name|simpleFiredEvents
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|Produces
annotation|@
name|Named
argument_list|(
literal|"other"
argument_list|)
annotation|@
name|ApplicationScoped
DECL|field|otherFiredEvents
specifier|private
name|List
argument_list|<
name|EventObject
argument_list|>
name|otherFiredEvents
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|onRouteAddedEventEventAll (@bserves RouteAddedEvent event, @Named(R) List<EventObject> events)
specifier|private
name|void
name|onRouteAddedEventEventAll
parameter_list|(
annotation|@
name|Observes
name|RouteAddedEvent
name|event
parameter_list|,
annotation|@
name|Named
argument_list|(
literal|"all"
argument_list|)
name|List
argument_list|<
name|EventObject
argument_list|>
name|events
parameter_list|)
block|{
name|events
operator|.
name|add
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|onRouteAddedEventEventSimple (@bserves @amedR) RouteAddedEvent event, @Named(R) List<EventObject> events)
specifier|private
name|void
name|onRouteAddedEventEventSimple
parameter_list|(
annotation|@
name|Observes
annotation|@
name|Named
argument_list|(
literal|"simple"
argument_list|)
name|RouteAddedEvent
name|event
parameter_list|,
annotation|@
name|Named
argument_list|(
literal|"simple"
argument_list|)
name|List
argument_list|<
name|EventObject
argument_list|>
name|events
parameter_list|)
block|{
name|events
operator|.
name|add
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|onRouteAddedEventEventOther (@bserves @amedR) RouteAddedEvent event, @Named(R) List<EventObject> events)
specifier|private
name|void
name|onRouteAddedEventEventOther
parameter_list|(
annotation|@
name|Observes
annotation|@
name|Named
argument_list|(
literal|"other"
argument_list|)
name|RouteAddedEvent
name|event
parameter_list|,
annotation|@
name|Named
argument_list|(
literal|"other"
argument_list|)
name|List
argument_list|<
name|EventObject
argument_list|>
name|events
parameter_list|)
block|{
name|events
operator|.
name|add
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|onRouteStartedEventEventAll (@bserves RouteStartedEvent event, @Named(R) List<EventObject> events)
specifier|private
name|void
name|onRouteStartedEventEventAll
parameter_list|(
annotation|@
name|Observes
name|RouteStartedEvent
name|event
parameter_list|,
annotation|@
name|Named
argument_list|(
literal|"all"
argument_list|)
name|List
argument_list|<
name|EventObject
argument_list|>
name|events
parameter_list|)
block|{
name|events
operator|.
name|add
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|onRouteStartedEventEventSimple (@bserves @amedR) RouteStartedEvent event, @Named(R) List<EventObject> events)
specifier|private
name|void
name|onRouteStartedEventEventSimple
parameter_list|(
annotation|@
name|Observes
annotation|@
name|Named
argument_list|(
literal|"simple"
argument_list|)
name|RouteStartedEvent
name|event
parameter_list|,
annotation|@
name|Named
argument_list|(
literal|"simple"
argument_list|)
name|List
argument_list|<
name|EventObject
argument_list|>
name|events
parameter_list|)
block|{
name|events
operator|.
name|add
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|onRouteStartedEventEventOther (@bserves @amedR) RouteStartedEvent event, @Named(R) List<EventObject> events)
specifier|private
name|void
name|onRouteStartedEventEventOther
parameter_list|(
annotation|@
name|Observes
annotation|@
name|Named
argument_list|(
literal|"other"
argument_list|)
name|RouteStartedEvent
name|event
parameter_list|,
annotation|@
name|Named
argument_list|(
literal|"other"
argument_list|)
name|List
argument_list|<
name|EventObject
argument_list|>
name|events
parameter_list|)
block|{
name|events
operator|.
name|add
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|onRouteStoppedEventEventAll (@bserves RouteStoppedEvent event, @Named(R) List<EventObject> events)
specifier|private
name|void
name|onRouteStoppedEventEventAll
parameter_list|(
annotation|@
name|Observes
name|RouteStoppedEvent
name|event
parameter_list|,
annotation|@
name|Named
argument_list|(
literal|"all"
argument_list|)
name|List
argument_list|<
name|EventObject
argument_list|>
name|events
parameter_list|)
block|{
name|events
operator|.
name|add
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|onRouteStoppedEventEventSimple (@bserves @amedR) RouteStoppedEvent event, @Named(R) List<EventObject> events)
specifier|private
name|void
name|onRouteStoppedEventEventSimple
parameter_list|(
annotation|@
name|Observes
annotation|@
name|Named
argument_list|(
literal|"simple"
argument_list|)
name|RouteStoppedEvent
name|event
parameter_list|,
annotation|@
name|Named
argument_list|(
literal|"simple"
argument_list|)
name|List
argument_list|<
name|EventObject
argument_list|>
name|events
parameter_list|)
block|{
name|events
operator|.
name|add
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|onRouteStoppedEventEventOther (@bserves @amedR) RouteStoppedEvent event, @Named(R) List<EventObject> events)
specifier|private
name|void
name|onRouteStoppedEventEventOther
parameter_list|(
annotation|@
name|Observes
annotation|@
name|Named
argument_list|(
literal|"other"
argument_list|)
name|RouteStoppedEvent
name|event
parameter_list|,
annotation|@
name|Named
argument_list|(
literal|"other"
argument_list|)
name|List
argument_list|<
name|EventObject
argument_list|>
name|events
parameter_list|)
block|{
name|events
operator|.
name|add
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|onRouteRemovedEventEventAll (@bserves RouteRemovedEvent event, @Named(R) List<EventObject> events)
specifier|private
name|void
name|onRouteRemovedEventEventAll
parameter_list|(
annotation|@
name|Observes
name|RouteRemovedEvent
name|event
parameter_list|,
annotation|@
name|Named
argument_list|(
literal|"all"
argument_list|)
name|List
argument_list|<
name|EventObject
argument_list|>
name|events
parameter_list|)
block|{
name|events
operator|.
name|add
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|onRouteRemovedEventEventSimple (@bserves @amedR) RouteRemovedEvent event, @Named(R) List<EventObject> events)
specifier|private
name|void
name|onRouteRemovedEventEventSimple
parameter_list|(
annotation|@
name|Observes
annotation|@
name|Named
argument_list|(
literal|"simple"
argument_list|)
name|RouteRemovedEvent
name|event
parameter_list|,
annotation|@
name|Named
argument_list|(
literal|"simple"
argument_list|)
name|List
argument_list|<
name|EventObject
argument_list|>
name|events
parameter_list|)
block|{
name|events
operator|.
name|add
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|onRouteRemovedEventEventOther (@bserves @amedR) RouteRemovedEvent event, @Named(R) List<EventObject> events)
specifier|private
name|void
name|onRouteRemovedEventEventOther
parameter_list|(
annotation|@
name|Observes
annotation|@
name|Named
argument_list|(
literal|"other"
argument_list|)
name|RouteRemovedEvent
name|event
parameter_list|,
annotation|@
name|Named
argument_list|(
literal|"other"
argument_list|)
name|List
argument_list|<
name|EventObject
argument_list|>
name|events
parameter_list|)
block|{
name|events
operator|.
name|add
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Deployment
DECL|method|deployment ()
specifier|public
specifier|static
name|Archive
argument_list|<
name|?
argument_list|>
name|deployment
parameter_list|()
block|{
return|return
name|ShrinkWrap
operator|.
name|create
argument_list|(
name|JavaArchive
operator|.
name|class
argument_list|)
comment|// Camel CDI
operator|.
name|addPackage
argument_list|(
name|CdiCamelExtension
operator|.
name|class
operator|.
name|getPackage
argument_list|()
argument_list|)
comment|// Test classes
operator|.
name|addClasses
argument_list|(
name|SimpleCamelRoute
operator|.
name|class
argument_list|,
name|OtherCamelRoute
operator|.
name|class
argument_list|)
comment|// Bean archive deployment descriptor
operator|.
name|addAsManifestResource
argument_list|(
name|EmptyAsset
operator|.
name|INSTANCE
argument_list|,
literal|"beans.xml"
argument_list|)
return|;
block|}
annotation|@
name|Test
annotation|@
name|InSequence
argument_list|(
literal|1
argument_list|)
DECL|method|startedCamelContext (@amedR) List<EventObject> all, @Named(R) List<EventObject> simple, @Named(R) List<EventObject> other)
specifier|public
name|void
name|startedCamelContext
parameter_list|(
annotation|@
name|Named
argument_list|(
literal|"all"
argument_list|)
name|List
argument_list|<
name|EventObject
argument_list|>
name|all
parameter_list|,
annotation|@
name|Named
argument_list|(
literal|"simple"
argument_list|)
name|List
argument_list|<
name|EventObject
argument_list|>
name|simple
parameter_list|,
annotation|@
name|Named
argument_list|(
literal|"other"
argument_list|)
name|List
argument_list|<
name|EventObject
argument_list|>
name|other
parameter_list|)
block|{
name|assertThat
argument_list|(
literal|"Events fired are incorrect!"
argument_list|,
name|all
argument_list|,
name|contains
argument_list|(
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteAddedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"simple"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteAddedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"other"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteStartedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"simple"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteStartedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"other"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|"Events fired are incorrect!"
argument_list|,
name|simple
argument_list|,
name|contains
argument_list|(
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteAddedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"simple"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteStartedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"simple"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|"Events fired are incorrect!"
argument_list|,
name|other
argument_list|,
name|contains
argument_list|(
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteAddedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"other"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteStartedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"other"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|InSequence
argument_list|(
literal|3
argument_list|)
DECL|method|stopCamelContext (CamelContext context, @Named(R) List<EventObject> all, @Named(R) List<EventObject> simple, @Named(R) List<EventObject> other)
specifier|public
name|void
name|stopCamelContext
parameter_list|(
name|CamelContext
name|context
parameter_list|,
annotation|@
name|Named
argument_list|(
literal|"all"
argument_list|)
name|List
argument_list|<
name|EventObject
argument_list|>
name|all
parameter_list|,
annotation|@
name|Named
argument_list|(
literal|"simple"
argument_list|)
name|List
argument_list|<
name|EventObject
argument_list|>
name|simple
parameter_list|,
annotation|@
name|Named
argument_list|(
literal|"other"
argument_list|)
name|List
argument_list|<
name|EventObject
argument_list|>
name|other
parameter_list|)
throws|throws
name|Exception
block|{
name|context
operator|.
name|stop
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
literal|"Events fired are incorrect!"
argument_list|,
name|all
argument_list|,
name|contains
argument_list|(
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteAddedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"simple"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteAddedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"other"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteStartedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"simple"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteStartedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"other"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteStoppedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"other"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteRemovedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"other"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteStoppedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"simple"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteRemovedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"simple"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|"Events fired are incorrect!"
argument_list|,
name|simple
argument_list|,
name|contains
argument_list|(
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteAddedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"simple"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteStartedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"simple"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteStoppedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"simple"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteRemovedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"simple"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|"Events fired are incorrect!"
argument_list|,
name|other
argument_list|,
name|contains
argument_list|(
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteAddedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"other"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteStartedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"other"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteStoppedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"other"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|both
argument_list|(
name|instanceOf
argument_list|(
name|RouteRemovedEvent
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|hasProperty
argument_list|(
literal|"route"
argument_list|,
name|hasProperty
argument_list|(
literal|"id"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
literal|"other"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

