begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.mllp
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mllp
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
DECL|class|MllpAcknowledgementExceptionTest
specifier|public
class|class
name|MllpAcknowledgementExceptionTest
block|{
DECL|field|HL7_MESSAGE
specifier|static
specifier|final
name|String
name|HL7_MESSAGE
init|=
literal|"MSH|^~\\&|APP_A|FAC_A|^org^sys||||ADT^A04^ADT_A04|||2.6"
operator|+
literal|'\r'
operator|+
literal|"PID|1||1100832^^^^PI||TEST^FIG||98765432|U||R|435 MAIN STREET^^LONGMONT^CO^80503||123-456-7890|||S"
operator|+
literal|'\r'
operator|+
literal|'\r'
operator|+
literal|'\n'
decl_stmt|;
DECL|field|HL7_ACKNOWLEDGEMENT
specifier|static
specifier|final
name|String
name|HL7_ACKNOWLEDGEMENT
init|=
literal|"MSH|^~\\&|^org^sys||APP_A|FAC_A|||ACK^A04^ADT_A04|||2.6"
operator|+
literal|'\r'
operator|+
literal|"MSA|AA|"
operator|+
literal|'\r'
operator|+
literal|'\n'
decl_stmt|;
DECL|field|EXCEPTION_MESSAGE_WITH_LOG_PHI_DISABLED
specifier|static
specifier|final
name|String
name|EXCEPTION_MESSAGE_WITH_LOG_PHI_DISABLED
init|=
name|MllpAcknowledgementDeliveryException
operator|.
name|EXCEPTION_MESSAGE
decl_stmt|;
DECL|field|EXCEPTION_MESSAGE_WITH_LOG_PHI_ENABLED
specifier|static
specifier|final
name|String
name|EXCEPTION_MESSAGE_WITH_LOG_PHI_ENABLED
init|=
name|String
operator|.
name|format
argument_list|(
literal|"%s:\n\tHL7 Message: %s\n\tHL7 Acknowledgement: %s"
argument_list|,
name|MllpAcknowledgementDeliveryException
operator|.
name|EXCEPTION_MESSAGE
argument_list|,
operator|new
name|String
argument_list|(
name|HL7_MESSAGE
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"\r"
argument_list|,
literal|"<CR>"
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"\n"
argument_list|,
literal|"<LF>"
argument_list|)
argument_list|,
operator|new
name|String
argument_list|(
name|HL7_ACKNOWLEDGEMENT
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"\r"
argument_list|,
literal|"<CR>"
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"\n"
argument_list|,
literal|"<LF>"
argument_list|)
argument_list|)
decl_stmt|;
DECL|field|exception
name|Exception
name|exception
decl_stmt|;
DECL|field|log
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|exception
operator|=
operator|new
name|MllpAcknowledgementDeliveryException
argument_list|(
name|HL7_MESSAGE
operator|.
name|getBytes
argument_list|()
argument_list|,
name|HL7_ACKNOWLEDGEMENT
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|clearProperty
argument_list|(
name|MllpComponent
operator|.
name|MLLP_LOG_PHI_PROPERTY
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testLogPhiDefault ()
specifier|public
name|void
name|testLogPhiDefault
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|exceptionMessage
init|=
name|exception
operator|.
name|getMessage
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|EXCEPTION_MESSAGE_WITH_LOG_PHI_ENABLED
argument_list|,
name|exceptionMessage
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testLogPhiDisabled ()
specifier|public
name|void
name|testLogPhiDisabled
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
name|MllpComponent
operator|.
name|MLLP_LOG_PHI_PROPERTY
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|String
name|exceptionMessage
init|=
name|exception
operator|.
name|getMessage
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|EXCEPTION_MESSAGE_WITH_LOG_PHI_DISABLED
argument_list|,
name|exceptionMessage
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testLogPhiEnabled ()
specifier|public
name|void
name|testLogPhiEnabled
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
name|MllpComponent
operator|.
name|MLLP_LOG_PHI_PROPERTY
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|String
name|exceptionMessage
init|=
name|exception
operator|.
name|getMessage
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|EXCEPTION_MESSAGE_WITH_LOG_PHI_ENABLED
argument_list|,
name|exceptionMessage
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNullMessage ()
specifier|public
name|void
name|testNullMessage
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|expectedMessage
init|=
name|String
operator|.
name|format
argument_list|(
literal|"%s:\n\tHL7 Message: null\n\tHL7 Acknowledgement: %s"
argument_list|,
name|MllpAcknowledgementDeliveryException
operator|.
name|EXCEPTION_MESSAGE
argument_list|,
operator|new
name|String
argument_list|(
name|HL7_ACKNOWLEDGEMENT
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"\r"
argument_list|,
literal|"<CR>"
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"\n"
argument_list|,
literal|"<LF>"
argument_list|)
argument_list|)
decl_stmt|;
name|exception
operator|=
operator|new
name|MllpAcknowledgementDeliveryException
argument_list|(
literal|null
argument_list|,
name|HL7_ACKNOWLEDGEMENT
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
name|MllpComponent
operator|.
name|MLLP_LOG_PHI_PROPERTY
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|String
name|exceptionMessage
init|=
name|exception
operator|.
name|getMessage
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedMessage
argument_list|,
name|exceptionMessage
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNullAcknowledgement ()
specifier|public
name|void
name|testNullAcknowledgement
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|expectedMessage
init|=
name|String
operator|.
name|format
argument_list|(
literal|"%s:\n\tHL7 Message: %s\n\tHL7 Acknowledgement: null"
argument_list|,
name|MllpAcknowledgementDeliveryException
operator|.
name|EXCEPTION_MESSAGE
argument_list|,
operator|new
name|String
argument_list|(
name|HL7_MESSAGE
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"\r"
argument_list|,
literal|"<CR>"
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"\n"
argument_list|,
literal|"<LF>"
argument_list|)
argument_list|)
decl_stmt|;
name|exception
operator|=
operator|new
name|MllpAcknowledgementDeliveryException
argument_list|(
name|HL7_MESSAGE
operator|.
name|getBytes
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
name|MllpComponent
operator|.
name|MLLP_LOG_PHI_PROPERTY
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|String
name|exceptionMessage
init|=
name|exception
operator|.
name|getMessage
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedMessage
argument_list|,
name|exceptionMessage
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testToString ()
specifier|public
name|void
name|testToString
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|expectedString
init|=
literal|"org.apache.camel.component.mllp.MllpAcknowledgementDeliveryException: "
operator|+
literal|"{hl7Message="
operator|+
literal|"MSH|^~\\&|APP_A|FAC_A|^org^sys||||ADT^A04^ADT_A04|||2.6<CR>"
operator|+
literal|"PID|1||1100832^^^^PI||TEST^FIG||98765432|U||R|435 MAIN STREET^^LONGMONT^CO^80503||123-456-7890|||S<CR><CR><LF>"
operator|+
literal|", hl7Acknowledgement="
operator|+
literal|"MSH|^~\\&|^org^sys||APP_A|FAC_A|||ACK^A04^ADT_A04|||2.6<CR>MSA|AA|<CR><LF>"
operator|+
literal|"}"
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedString
argument_list|,
name|exception
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

