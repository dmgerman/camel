begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.mllp.internal
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mllp
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mllp
operator|.
name|MllpProtocolConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|mllp
operator|.
name|Hl7AcknowledgementGenerationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|stub
operator|.
name|camel
operator|.
name|MllpEndpointStub
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_class
DECL|class|Hl7UtilTest
specifier|public
class|class
name|Hl7UtilTest
block|{
comment|// @formatter:off
DECL|field|TEST_MESSAGE
specifier|static
specifier|final
name|String
name|TEST_MESSAGE
init|=
literal|"MSH|^~\\&|ADT|EPIC|JCAPS|CC|20161206193919|RISTECH|ADT^A08|00001|D|2.3^^|||||||"
operator|+
literal|'\r'
operator|+
literal|"EVN|A08|20150107161440||REG_UPDATE_SEND_VISIT_MESSAGES_ON_PATIENT_CHANGES|RISTECH^RADIOLOGY^TECHNOLOGIST^^^^^^UCLA^^^^^RRMC||"
operator|+
literal|'\r'
operator|+
literal|"PID|1|2100355^^^MRN^MRN|2100355^^^MRN^MRN||MDCLS9^MC9||19700109|F||U|111 HOVER STREET^^LOS ANGELES^CA^90032^USA^P^^LOS ANGELE|"
operator|+
literal|"LOS ANGELE|(310)725-6952^P^PH^^^310^7256952||ENGLISH|U||60000013647|565-33-2222|||U||||||||N||"
operator|+
literal|'\r'
operator|+
literal|"PD1|||UCLA HEALTH SYSTEM^^10|10002116^ADAMS^JOHN^D^^^^^EPIC^^^^PROVID||||||||||||||"
operator|+
literal|'\r'
operator|+
literal|"NK1|1|DOE^MC9^^|OTH|^^^^^USA|(310)888-9999^^^^^310^8889999|(310)999-2222^^^^^310^9992222|Emergency Contact 1|||||||||||||||||||||||||||"
operator|+
literal|'\r'
operator|+
literal|"PV1|1|OUTPATIENT|RR CT^^^1000^^^^^^^DEPID|EL|||017511^TOBIAS^JONATHAN^^^^^^EPIC^^^^PROVID|017511^TOBIAS^JONATHAN^^^^^^EPIC^^^^PROVID||||||"
operator|+
literal|"CLR|||||60000013647|SELF|||||||||||||||||||||HOV_CONF|^^^1000^^^^^^^||20150107161438||||||||||"
operator|+
literal|'\r'
operator|+
literal|"PV2||||||||20150107161438||||CT BRAIN W WO CONTRAST||||||||||N|||||||||||||||||||||||||||"
operator|+
literal|'\r'
operator|+
literal|"ZPV||||||||||||20150107161438|||||||||"
operator|+
literal|'\r'
operator|+
literal|"AL1|1||33361^NO KNOWN ALLERGIES^^NOTCOMPUTRITION^NO KNOWN ALLERGIES^EXTELG||||||"
operator|+
literal|'\r'
operator|+
literal|"DG1|1|DX|784.0^Headache^DX|Headache||VISIT"
operator|+
literal|'\r'
operator|+
literal|"GT1|1|1000235129|MDCLS9^MC9^^||111 HOVER STREET^^LOS ANGELES^CA^90032^USA^^^LOS ANGELE|(310)725-6952^^^^^310^7256952||19700109|F|P/F|SLF|"
operator|+
literal|"565-33-2222|||||^^^^^USA|||UNKNOWN|||||||||||||||||||||||||||||"
operator|+
literal|'\r'
operator|+
literal|"UB2||||||||"
operator|+
literal|'\r'
decl_stmt|;
DECL|field|EXPTECTED_ACKNOWLEDGEMENT_PAYLOAD
specifier|static
specifier|final
name|String
name|EXPTECTED_ACKNOWLEDGEMENT_PAYLOAD
init|=
name|MllpProtocolConstants
operator|.
name|START_OF_BLOCK
operator|+
literal|"MSH|^~\\&|JCAPS|CC|ADT|EPIC|20161206193919|RISTECH|ACK^A08|00001|D|2.3^^|||||||\r"
operator|+
literal|"MSA|AA|00001\r"
operator|+
name|MllpProtocolConstants
operator|.
name|END_OF_BLOCK
operator|+
name|MllpProtocolConstants
operator|.
name|END_OF_DATA
decl_stmt|;
DECL|field|EXPECTED_MESSAGE
specifier|static
specifier|final
name|String
name|EXPECTED_MESSAGE
init|=
literal|"MSH|^~\\&|ADT|EPIC|JCAPS|CC|20161206193919|RISTECH|ADT^A08|00001|D|2.3^^|||||||"
operator|+
literal|"<CR>"
operator|+
literal|"EVN|A08|20150107161440||REG_UPDATE_SEND_VISIT_MESSAGES_ON_PATIENT_CHANGES|RISTECH^RADIOLOGY^TECHNOLOGIST^^^^^^UCLA^^^^^RRMC||"
operator|+
literal|"<CR>"
operator|+
literal|"PID|1|2100355^^^MRN^MRN|2100355^^^MRN^MRN||MDCLS9^MC9||19700109|F||U|111 HOVER STREET^^LOS ANGELES^CA^90032^USA^P^^LOS ANGELE|LOS ANGELE|(310)725-6952^P^PH^^^310^7256952"
operator|+
literal|"||ENGLISH|U||60000013647|565-33-2222|||U||||||||N||"
operator|+
literal|"<CR>"
operator|+
literal|"PD1|||UCLA HEALTH SYSTEM^^10|10002116^ADAMS^JOHN^D^^^^^EPIC^^^^PROVID||||||||||||||"
operator|+
literal|"<CR>"
operator|+
literal|"NK1|1|DOE^MC9^^|OTH|^^^^^USA|(310)888-9999^^^^^310^8889999|(310)999-2222^^^^^310^9992222|Emergency Contact 1|||||||||||||||||||||||||||"
operator|+
literal|"<CR>"
operator|+
literal|"PV1|1|OUTPATIENT|RR CT^^^1000^^^^^^^DEPID|EL|||017511^TOBIAS^JONATHAN^^^^^^EPIC^^^^PROVID|017511^TOBIAS^JONATHAN^^^^^^EPIC^^^^PROVID||||||CLR|||||60000013647|SELF"
operator|+
literal|"|||||||||||||||||||||HOV_CONF|^^^1000^^^^^^^||20150107161438||||||||||"
operator|+
literal|"<CR>"
operator|+
literal|"PV2||||||||20150107161438||||CT BRAIN W WO CONTRAST||||||||||N|||||||||||||||||||||||||||"
operator|+
literal|"<CR>"
operator|+
literal|"ZPV||||||||||||20150107161438|||||||||"
operator|+
literal|"<CR>"
operator|+
literal|"AL1|1||33361^NO KNOWN ALLERGIES^^NOTCOMPUTRITION^NO KNOWN ALLERGIES^EXTELG||||||"
operator|+
literal|"<CR>"
operator|+
literal|"DG1|1|DX|784.0^Headache^DX|Headache||VISIT"
operator|+
literal|"<CR>"
operator|+
literal|"GT1|1|1000235129|MDCLS9^MC9^^||111 HOVER STREET^^LOS ANGELES^CA^90032^USA^^^LOS ANGELE|(310)725-6952^^^^^310^7256952||19700109|F|P/F|SLF|565-33-2222|||||^^^^^USA|||UNKNOWN"
operator|+
literal|"|||||||||||||||||||||||||||||"
operator|+
literal|"<CR>"
operator|+
literal|"UB2||||||||"
operator|+
literal|"<CR>"
decl_stmt|;
comment|// @formatter:on
DECL|field|MSH_SEGMENT
specifier|static
specifier|final
name|String
name|MSH_SEGMENT
init|=
literal|"MSH|^~\\&|0|90100053675|JCAPS|CC|20131125122938|RISMD|ORM|28785|D|2.3"
decl_stmt|;
comment|// @formatter:off
DECL|field|REMAINING_SEGMENTS
specifier|static
specifier|final
name|String
name|REMAINING_SEGMENTS
init|=
literal|"PID|1||4507626^^^MRN^MRN||RAD VALIDATE^ROBERT||19650916|M||U|1818 UNIVERSITY AVE^^MADISON^WI^53703^USA^^^||(608)251-9999|||M|||579-85-3510||| "
operator|+
literal|'\r'
operator|+
literal|"PV1||OUTPATIENT|NMPCT^^^WWNMD^^^^^^^DEPID||||011463^ZARAGOZA^EDWARD^J.^^^^^EPIC^^^^PROVID|011463^ZARAGOZA^EDWARD^J.^^^^^EPIC^^^^PROVID"
operator|+
literal|"|||||||||||90100053686|SELF||||||||||||||||||||||||201311251218|||||||V"
operator|+
literal|'\r'
operator|+
literal|"ORC|RE|9007395^EPC|9007395^EPC||Final||^^^201311251221^201311251222^R||201311251229|RISMD^RADIOLOGY^RADIOLOGIST^^|||SMO PET^^^7044^^^^^SMO PET CT||||||||||||||||I"
operator|+
literal|'\r'
operator|+
literal|"OBR|1|9007395^EPC|9007395^EPC|IMG7118^PET CT LIMITED CHEST W CONTRAST^IMGPROC^^PET CT CHEST||20131125|||||Ancillary Pe|||||||NMPCT|MP2 NM INJ01^MP2 NM INJECTION ROOM 01^PROVID"
operator|+
literal|"|||201311251229||NM|Final||^^^201311251221^201311251222^R||||^test|E200003^RADIOLOGY^RESIDENT^^^^^^EPIC^^^^PROVID"
operator|+
literal|"|812644^RADIOLOGY^GENERIC^ATTENDING 1^^^^^EPIC^^^^PROVID~000043^RADIOLOGY^RADIOLOGISTTWO^^^^^^EPIC^^^^PROVID|U0058489^SWAIN^CYNTHIA^LEE^||201311251245"
operator|+
literal|'\r'
operator|+
literal|"OBX|1|ST|&GDT|1|[11/25/2013 12:28:14 PM - PHYS, FIFTYFOUR]50||||||Final||||"
operator|+
literal|'\r'
decl_stmt|;
comment|// @formatter:on
DECL|field|TEST_MESSAGE_BYTES
specifier|static
specifier|final
name|byte
index|[]
name|TEST_MESSAGE_BYTES
init|=
name|TEST_MESSAGE
operator|.
name|getBytes
argument_list|()
decl_stmt|;
annotation|@
name|Test
DECL|method|testGenerateInvalidPayloadExceptionMessage ()
specifier|public
name|void
name|testGenerateInvalidPayloadExceptionMessage
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|message
init|=
name|Hl7Util
operator|.
name|generateInvalidPayloadExceptionMessage
argument_list|(
name|TEST_MESSAGE
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
literal|"Valid payload should result in a null message"
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGenerateInvalidPayloadExceptionMessageWithLengthLargerThanArraySize ()
specifier|public
name|void
name|testGenerateInvalidPayloadExceptionMessageWithLengthLargerThanArraySize
parameter_list|()
throws|throws
name|Exception
block|{
name|byte
index|[]
name|payload
init|=
name|TEST_MESSAGE
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|String
name|message
init|=
name|Hl7Util
operator|.
name|generateInvalidPayloadExceptionMessage
argument_list|(
name|payload
argument_list|,
name|payload
operator|.
name|length
operator|*
literal|2
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
literal|"Valid payload should result in a null message"
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGenerateInvalidPayloadExceptionMessageWithLengthSmallerThanArraySize ()
specifier|public
name|void
name|testGenerateInvalidPayloadExceptionMessageWithLengthSmallerThanArraySize
parameter_list|()
throws|throws
name|Exception
block|{
name|byte
index|[]
name|payload
init|=
name|TEST_MESSAGE
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|String
name|message
init|=
name|Hl7Util
operator|.
name|generateInvalidPayloadExceptionMessage
argument_list|(
name|payload
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"The HL7 payload terminating byte [0x7c] is incorrect - expected [0xd]  {ASCII [<CR>]}"
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGenerateInvalidPayloadExceptionMessageWithNullPayload ()
specifier|public
name|void
name|testGenerateInvalidPayloadExceptionMessageWithNullPayload
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|"HL7 payload is null"
argument_list|,
name|Hl7Util
operator|.
name|generateInvalidPayloadExceptionMessage
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"HL7 payload is null"
argument_list|,
name|Hl7Util
operator|.
name|generateInvalidPayloadExceptionMessage
argument_list|(
literal|null
argument_list|,
literal|1234
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGenerateInvalidPayloadExceptionMessageWithInvalidStartingSegment ()
specifier|public
name|void
name|testGenerateInvalidPayloadExceptionMessageWithInvalidStartingSegment
parameter_list|()
throws|throws
name|Exception
block|{
name|byte
index|[]
name|invalidStartingSegment
init|=
literal|"MSA|AA|00001|\r"
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|byte
index|[]
name|basePayload
init|=
name|TEST_MESSAGE
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|ByteArrayOutputStream
name|payloadStream
init|=
operator|new
name|ByteArrayOutputStream
argument_list|(
name|invalidStartingSegment
operator|.
name|length
operator|+
name|basePayload
operator|.
name|length
argument_list|)
decl_stmt|;
name|payloadStream
operator|.
name|write
argument_list|(
name|invalidStartingSegment
argument_list|)
expr_stmt|;
name|payloadStream
operator|.
name|write
argument_list|(
name|basePayload
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The first segment of the HL7 payload {MSA} is not an MSH segment"
argument_list|,
name|Hl7Util
operator|.
name|generateInvalidPayloadExceptionMessage
argument_list|(
name|payloadStream
operator|.
name|toByteArray
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGenerateInvalidPayloadExceptionMessageWithEmptyPayload ()
specifier|public
name|void
name|testGenerateInvalidPayloadExceptionMessageWithEmptyPayload
parameter_list|()
throws|throws
name|Exception
block|{
name|byte
index|[]
name|payload
init|=
operator|new
name|byte
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"HL7 payload is empty"
argument_list|,
name|Hl7Util
operator|.
name|generateInvalidPayloadExceptionMessage
argument_list|(
name|payload
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"HL7 payload is empty"
argument_list|,
name|Hl7Util
operator|.
name|generateInvalidPayloadExceptionMessage
argument_list|(
name|payload
argument_list|,
name|payload
operator|.
name|length
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGenerateInvalidPayloadExceptionMessageWithEmbeddedStartOfBlock ()
specifier|public
name|void
name|testGenerateInvalidPayloadExceptionMessageWithEmbeddedStartOfBlock
parameter_list|()
throws|throws
name|Exception
block|{
name|byte
index|[]
name|basePayload
init|=
name|TEST_MESSAGE
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|ByteArrayOutputStream
name|payloadStream
init|=
operator|new
name|ByteArrayOutputStream
argument_list|(
name|basePayload
operator|.
name|length
operator|+
literal|1
argument_list|)
decl_stmt|;
name|int
name|embeddedStartOfBlockIndex
init|=
name|basePayload
operator|.
name|length
operator|/
literal|2
decl_stmt|;
name|payloadStream
operator|.
name|write
argument_list|(
name|basePayload
argument_list|,
literal|0
argument_list|,
name|embeddedStartOfBlockIndex
argument_list|)
expr_stmt|;
name|payloadStream
operator|.
name|write
argument_list|(
name|MllpProtocolConstants
operator|.
name|START_OF_BLOCK
argument_list|)
expr_stmt|;
name|payloadStream
operator|.
name|write
argument_list|(
name|basePayload
argument_list|,
name|embeddedStartOfBlockIndex
argument_list|,
name|basePayload
operator|.
name|length
operator|-
name|embeddedStartOfBlockIndex
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"HL7 payload contains an embedded START_OF_BLOCK {0xb, ASCII<VT>} at index "
operator|+
name|embeddedStartOfBlockIndex
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|Hl7Util
operator|.
name|generateInvalidPayloadExceptionMessage
argument_list|(
name|payloadStream
operator|.
name|toByteArray
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGenerateInvalidPayloadExceptionMessageWithEmbeddedEndOfBlock ()
specifier|public
name|void
name|testGenerateInvalidPayloadExceptionMessageWithEmbeddedEndOfBlock
parameter_list|()
throws|throws
name|Exception
block|{
name|byte
index|[]
name|basePayload
init|=
name|TEST_MESSAGE
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|ByteArrayOutputStream
name|payloadStream
init|=
operator|new
name|ByteArrayOutputStream
argument_list|(
name|basePayload
operator|.
name|length
operator|+
literal|1
argument_list|)
decl_stmt|;
name|int
name|embeddedEndOfBlockIndex
init|=
name|basePayload
operator|.
name|length
operator|/
literal|2
decl_stmt|;
name|payloadStream
operator|.
name|write
argument_list|(
name|basePayload
argument_list|,
literal|0
argument_list|,
name|embeddedEndOfBlockIndex
argument_list|)
expr_stmt|;
name|payloadStream
operator|.
name|write
argument_list|(
name|MllpProtocolConstants
operator|.
name|END_OF_BLOCK
argument_list|)
expr_stmt|;
name|payloadStream
operator|.
name|write
argument_list|(
name|basePayload
argument_list|,
name|embeddedEndOfBlockIndex
argument_list|,
name|basePayload
operator|.
name|length
operator|-
name|embeddedEndOfBlockIndex
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"HL7 payload contains an embedded END_OF_BLOCK {0x1c, ASCII<FS>} at index "
operator|+
name|embeddedEndOfBlockIndex
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|Hl7Util
operator|.
name|generateInvalidPayloadExceptionMessage
argument_list|(
name|payloadStream
operator|.
name|toByteArray
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Description of test.      *      * @throws Exception in the event of a test error.      */
annotation|@
name|Test
DECL|method|testGenerateAcknowledgementPayload ()
specifier|public
name|void
name|testGenerateAcknowledgementPayload
parameter_list|()
throws|throws
name|Exception
block|{
name|MllpSocketBuffer
name|mllpSocketBuffer
init|=
operator|new
name|MllpSocketBuffer
argument_list|(
operator|new
name|MllpEndpointStub
argument_list|()
argument_list|)
decl_stmt|;
name|Hl7Util
operator|.
name|generateAcknowledgementPayload
argument_list|(
name|mllpSocketBuffer
argument_list|,
name|TEST_MESSAGE
operator|.
name|getBytes
argument_list|()
argument_list|,
literal|"AA"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPTECTED_ACKNOWLEDGEMENT_PAYLOAD
argument_list|,
name|mllpSocketBuffer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Description of test.      *      * @throws Exception in the event of a test error.      */
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|Hl7AcknowledgementGenerationException
operator|.
name|class
argument_list|)
DECL|method|testGenerateAcknowledgementPayloadFromNullMessage ()
specifier|public
name|void
name|testGenerateAcknowledgementPayloadFromNullMessage
parameter_list|()
throws|throws
name|Exception
block|{
name|MllpSocketBuffer
name|mllpSocketBuffer
init|=
operator|new
name|MllpSocketBuffer
argument_list|(
operator|new
name|MllpEndpointStub
argument_list|()
argument_list|)
decl_stmt|;
name|Hl7Util
operator|.
name|generateAcknowledgementPayload
argument_list|(
name|mllpSocketBuffer
argument_list|,
literal|null
argument_list|,
literal|"AA"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPTECTED_ACKNOWLEDGEMENT_PAYLOAD
argument_list|,
name|mllpSocketBuffer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Description of test.      *      * @throws Exception in the event of a test error.      */
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|Hl7AcknowledgementGenerationException
operator|.
name|class
argument_list|)
DECL|method|testGenerateAcknowledgementPayloadFromEmptyMessage ()
specifier|public
name|void
name|testGenerateAcknowledgementPayloadFromEmptyMessage
parameter_list|()
throws|throws
name|Exception
block|{
name|MllpSocketBuffer
name|mllpSocketBuffer
init|=
operator|new
name|MllpSocketBuffer
argument_list|(
operator|new
name|MllpEndpointStub
argument_list|()
argument_list|)
decl_stmt|;
name|Hl7Util
operator|.
name|generateAcknowledgementPayload
argument_list|(
name|mllpSocketBuffer
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|"AA"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPTECTED_ACKNOWLEDGEMENT_PAYLOAD
argument_list|,
name|mllpSocketBuffer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Description of test.      *      * @throws Exception in the event of a test error.      */
annotation|@
name|Test
DECL|method|testGenerateAcknowledgementPayloadWithoutEnoughFields ()
specifier|public
name|void
name|testGenerateAcknowledgementPayloadWithoutEnoughFields
parameter_list|()
throws|throws
name|Exception
block|{
name|MllpSocketBuffer
name|mllpSocketBuffer
init|=
operator|new
name|MllpSocketBuffer
argument_list|(
operator|new
name|MllpEndpointStub
argument_list|()
argument_list|)
decl_stmt|;
name|Hl7Util
operator|.
name|generateAcknowledgementPayload
argument_list|(
name|mllpSocketBuffer
argument_list|,
name|TEST_MESSAGE
operator|.
name|replaceFirst
argument_list|(
literal|"|RISTECH|ADT^A08|00001|D|2.3^^|||||||"
argument_list|,
literal|""
argument_list|)
operator|.
name|getBytes
argument_list|()
argument_list|,
literal|"AA"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPTECTED_ACKNOWLEDGEMENT_PAYLOAD
argument_list|,
name|mllpSocketBuffer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * If the MSH isn't terminated correctly, we'll get Junk for the acknowledgement.      *      * @throws Exception in the event of a test error.      */
annotation|@
name|Test
DECL|method|testGenerateAcknowledgementPayloadWithoutEndOfSegment ()
specifier|public
name|void
name|testGenerateAcknowledgementPayloadWithoutEndOfSegment
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|junkMessage
init|=
literal|"MSH|^~\\&|ADT|EPIC|JCAPS|CC|20161206193919|RISTECH|ADT^A08|00001|D|2.3^^|||||||"
operator|+
literal|"EVN|A08|20150107161440||REG_UPDATE_SEND_VISIT_MESSAGES_ON_PATIENT_CHANGES|RISTECH^RADIOLOGY^TECHNOLOGIST^^^^^^UCLA^^^^^RRMC||"
decl_stmt|;
name|String
name|junkAcknowledgement
init|=
name|MllpProtocolConstants
operator|.
name|START_OF_BLOCK
operator|+
literal|"MSH|^~\\&|JCAPS|CC|ADT|EPIC|20161206193919|RISTECH|ACK^A08|00001|D|2.3^^|||||||"
operator|+
literal|"EVN|A08|20150107161440||REG_UPDATE_SEND_VISIT_MESSAGES_ON_PATIENT_CHANGES|RISTECH^RADIOLOGY^TECHNOLOGIST^^^^^^UCLA^^^^^RRMC|\r"
operator|+
literal|"MSA|AA|00001\r"
operator|+
name|MllpProtocolConstants
operator|.
name|END_OF_BLOCK
operator|+
name|MllpProtocolConstants
operator|.
name|END_OF_DATA
decl_stmt|;
name|MllpSocketBuffer
name|mllpSocketBuffer
init|=
operator|new
name|MllpSocketBuffer
argument_list|(
operator|new
name|MllpEndpointStub
argument_list|()
argument_list|)
decl_stmt|;
name|Hl7Util
operator|.
name|generateAcknowledgementPayload
argument_list|(
name|mllpSocketBuffer
argument_list|,
name|junkMessage
operator|.
name|getBytes
argument_list|()
argument_list|,
literal|"AA"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|junkAcknowledgement
argument_list|,
name|mllpSocketBuffer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Description of test.      *      * @throws Exception in the event of a test error.      */
annotation|@
name|Test
DECL|method|testConvertStringToPrintFriendlyString ()
specifier|public
name|void
name|testConvertStringToPrintFriendlyString
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|(
name|String
operator|)
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPECTED_MESSAGE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
name|TEST_MESSAGE
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Description of test.      *      * @throws Exception in the event of a test error.      */
annotation|@
name|Test
DECL|method|testConvertBytesToPrintFriendlyString ()
specifier|public
name|void
name|testConvertBytesToPrintFriendlyString
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPECTED_MESSAGE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Description of test.      *      * @throws Exception in the event of a test error.      */
annotation|@
name|Test
DECL|method|testConvertBytesToPrintFriendlyStringWithStartAndEndPositions ()
specifier|public
name|void
name|testConvertBytesToPrintFriendlyStringWithStartAndEndPositions
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|,
literal|0
argument_list|,
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|,
literal|200
argument_list|,
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|,
operator|-
literal|200
argument_list|,
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|,
literal|200
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|,
operator|-
literal|200
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|,
literal|0
argument_list|,
operator|-
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|,
literal|200
argument_list|,
operator|-
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|,
operator|-
literal|200
argument_list|,
operator|-
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|0
argument_list|,
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|200
argument_list|,
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
operator|-
literal|200
argument_list|,
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|200
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
operator|-
literal|200
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|0
argument_list|,
operator|-
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|200
argument_list|,
operator|-
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
operator|-
literal|200
argument_list|,
operator|-
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPECTED_MESSAGE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
literal|0
argument_list|,
name|TEST_MESSAGE_BYTES
operator|.
name|length
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPECTED_MESSAGE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
operator|-
literal|14
argument_list|,
name|TEST_MESSAGE_BYTES
operator|.
name|length
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
operator|-
literal|14
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
operator|-
literal|14
argument_list|,
operator|-
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPECTED_MESSAGE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
operator|-
literal|14
argument_list|,
literal|1000000
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
literal|0
argument_list|,
operator|-
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPECTED_MESSAGE
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
literal|0
argument_list|,
literal|1000000
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
literal|1000000
argument_list|,
name|TEST_MESSAGE_BYTES
operator|.
name|length
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
literal|1000000
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
literal|1000000
argument_list|,
operator|-
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
literal|1000000
argument_list|,
literal|1000000
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|Hl7Util
operator|.
name|convertToPrintFriendlyString
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Description of test.      *      * @throws Exception in the event of a test error.      */
annotation|@
name|Test
DECL|method|testBytesToPrintFriendlyStringBuilder ()
specifier|public
name|void
name|testBytesToPrintFriendlyStringBuilder
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPECTED_MESSAGE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Description of test.      *      * @throws Exception in the event of a test error.      */
annotation|@
name|Test
DECL|method|testBytesToPrintFriendlyStringBuilderWithStartAndEndPositions ()
specifier|public
name|void
name|testBytesToPrintFriendlyStringBuilderWithStartAndEndPositions
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|,
literal|0
argument_list|,
literal|1000
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|,
literal|200
argument_list|,
literal|1000
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|,
operator|-
literal|200
argument_list|,
literal|1000
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|,
literal|200
argument_list|,
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|,
operator|-
literal|200
argument_list|,
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|,
literal|0
argument_list|,
operator|-
literal|1000
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|,
literal|200
argument_list|,
operator|-
literal|1000
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|,
operator|-
literal|200
argument_list|,
operator|-
literal|1000
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|0
argument_list|,
literal|1000
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|200
argument_list|,
literal|1000
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
operator|-
literal|200
argument_list|,
literal|1000
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|200
argument_list|,
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
operator|-
literal|200
argument_list|,
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|0
argument_list|,
operator|-
literal|1000
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|200
argument_list|,
operator|-
literal|1000
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
operator|-
literal|200
argument_list|,
operator|-
literal|1000
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPECTED_MESSAGE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
literal|0
argument_list|,
name|TEST_MESSAGE_BYTES
operator|.
name|length
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPECTED_MESSAGE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
operator|-
literal|14
argument_list|,
name|TEST_MESSAGE_BYTES
operator|.
name|length
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
operator|-
literal|14
argument_list|,
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
operator|-
literal|14
argument_list|,
operator|-
literal|14
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPECTED_MESSAGE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
operator|-
literal|14
argument_list|,
literal|1000000
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
literal|0
argument_list|,
operator|-
literal|14
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPECTED_MESSAGE
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
literal|0
argument_list|,
literal|1000000
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
literal|1000000
argument_list|,
name|TEST_MESSAGE_BYTES
operator|.
name|length
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
literal|1000000
argument_list|,
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
literal|1000000
argument_list|,
operator|-
literal|14
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
literal|1000000
argument_list|,
literal|1000000
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ADT^A08|00001|D|2.3^^|||||||<CR>EVN|A08|2015010716144"
argument_list|,
name|Hl7Util
operator|.
name|bytesToPrintFriendlyStringBuilder
argument_list|(
name|TEST_MESSAGE_BYTES
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Description of test.      *      * @throws Exception in the event of a test error.      */
annotation|@
name|Test
DECL|method|testAppendBytesAsPrintFriendlyString ()
specifier|public
name|void
name|testAppendBytesAsPrintFriendlyString
parameter_list|()
throws|throws
name|Exception
block|{
name|StringBuilder
name|builder
init|=
literal|null
decl_stmt|;
try|try
block|{
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Exception should be raised with null StringBuilder argument"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ignoredEx
parameter_list|)
block|{
comment|// Eat this
block|}
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
name|TEST_MESSAGE_BYTES
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPECTED_MESSAGE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Description of test.      *      * @throws Exception in the event of a test error.      */
annotation|@
name|Test
DECL|method|testAppendBytesAsPrintFriendlyStringWithStartAndEndPositions ()
specifier|public
name|void
name|testAppendBytesAsPrintFriendlyStringWithStartAndEndPositions
parameter_list|()
throws|throws
name|Exception
block|{
name|StringBuilder
name|builder
init|=
literal|null
decl_stmt|;
try|try
block|{
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Exception should be raised with null StringBuilder argument"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ignoredEx
parameter_list|)
block|{
comment|// Eat this
block|}
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
literal|null
argument_list|,
literal|200
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
literal|null
argument_list|,
operator|-
literal|200
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
literal|null
argument_list|,
literal|200
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
literal|null
argument_list|,
operator|-
literal|200
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|,
operator|-
literal|1000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
literal|null
argument_list|,
literal|200
argument_list|,
operator|-
literal|1000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
literal|null
argument_list|,
operator|-
literal|200
argument_list|,
operator|-
literal|1000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|NULL_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|0
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|200
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
operator|-
literal|200
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|200
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
operator|-
literal|200
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|0
argument_list|,
operator|-
literal|1000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|200
argument_list|,
operator|-
literal|1000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
operator|-
literal|200
argument_list|,
operator|-
literal|1000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|EMPTY_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
name|TEST_MESSAGE_BYTES
argument_list|,
literal|0
argument_list|,
name|TEST_MESSAGE_BYTES
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPECTED_MESSAGE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
name|TEST_MESSAGE_BYTES
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
name|TEST_MESSAGE_BYTES
argument_list|,
operator|-
literal|14
argument_list|,
name|TEST_MESSAGE_BYTES
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPECTED_MESSAGE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
name|TEST_MESSAGE_BYTES
argument_list|,
operator|-
literal|14
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
name|TEST_MESSAGE_BYTES
argument_list|,
operator|-
literal|14
argument_list|,
operator|-
literal|14
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
name|TEST_MESSAGE_BYTES
argument_list|,
operator|-
literal|14
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPECTED_MESSAGE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
name|TEST_MESSAGE_BYTES
argument_list|,
literal|0
argument_list|,
operator|-
literal|14
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
name|TEST_MESSAGE_BYTES
argument_list|,
literal|0
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EXPECTED_MESSAGE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
name|TEST_MESSAGE_BYTES
argument_list|,
literal|1000000
argument_list|,
name|TEST_MESSAGE_BYTES
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
name|TEST_MESSAGE_BYTES
argument_list|,
literal|1000000
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
name|TEST_MESSAGE_BYTES
argument_list|,
literal|1000000
argument_list|,
operator|-
literal|14
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
name|TEST_MESSAGE_BYTES
argument_list|,
literal|1000000
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendBytesAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
name|TEST_MESSAGE_BYTES
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ADT^A08|00001|D|2.3^^|||||||<CR>EVN|A08|2015010716144"
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Description of test.      *      * @throws Exception in the event of a test error.      */
annotation|@
name|Test
DECL|method|testAppendCharacterAsPrintFriendlyString ()
specifier|public
name|void
name|testAppendCharacterAsPrintFriendlyString
parameter_list|()
throws|throws
name|Exception
block|{
name|StringBuilder
name|builder
init|=
literal|null
decl_stmt|;
try|try
block|{
name|Hl7Util
operator|.
name|appendCharacterAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
literal|'a'
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Exception should be raised with null StringBuilder argument"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NullPointerException
name|ignoredEx
parameter_list|)
block|{
comment|// Eat this
block|}
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendCharacterAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
name|MllpProtocolConstants
operator|.
name|START_OF_BLOCK
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|START_OF_BLOCK_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendCharacterAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
name|MllpProtocolConstants
operator|.
name|END_OF_BLOCK
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|END_OF_BLOCK_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendCharacterAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
name|MllpProtocolConstants
operator|.
name|SEGMENT_DELIMITER
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|SEGMENT_DELIMITER_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|Hl7Util
operator|.
name|appendCharacterAsPrintFriendlyString
argument_list|(
name|builder
argument_list|,
name|MllpProtocolConstants
operator|.
name|MESSAGE_TERMINATOR
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|MESSAGE_TERMINATOR_REPLACEMENT_VALUE
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetCharacterAsPrintFriendlyString ()
specifier|public
name|void
name|testGetCharacterAsPrintFriendlyString
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|START_OF_BLOCK_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|getCharacterAsPrintFriendlyString
argument_list|(
name|MllpProtocolConstants
operator|.
name|START_OF_BLOCK
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|END_OF_BLOCK_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|getCharacterAsPrintFriendlyString
argument_list|(
name|MllpProtocolConstants
operator|.
name|END_OF_BLOCK
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|SEGMENT_DELIMITER_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|getCharacterAsPrintFriendlyString
argument_list|(
name|MllpProtocolConstants
operator|.
name|SEGMENT_DELIMITER
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|MESSAGE_TERMINATOR_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|getCharacterAsPrintFriendlyString
argument_list|(
name|MllpProtocolConstants
operator|.
name|MESSAGE_TERMINATOR
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Hl7Util
operator|.
name|TAB_REPLACEMENT_VALUE
argument_list|,
name|Hl7Util
operator|.
name|getCharacterAsPrintFriendlyString
argument_list|(
literal|'\t'
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Description of test.      *      * @throws Exception in the event of a test error.      */
annotation|@
name|Test
DECL|method|testFindMsh18WhenExistsWithoutTrailingPipe ()
specifier|public
name|void
name|testFindMsh18WhenExistsWithoutTrailingPipe
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|testMessage
init|=
name|MSH_SEGMENT
operator|+
literal|"|||||||8859/1"
operator|+
literal|'\r'
operator|+
name|REMAINING_SEGMENTS
decl_stmt|;
name|assertEquals
argument_list|(
literal|"8859/1"
argument_list|,
name|Hl7Util
operator|.
name|findMsh18
argument_list|(
name|testMessage
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Description of test.      *      * @throws Exception in the event of a test error.      */
annotation|@
name|Test
DECL|method|testFindMsh18WhenExistsWithTrailingPipe ()
specifier|public
name|void
name|testFindMsh18WhenExistsWithTrailingPipe
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|testMessage
init|=
name|MSH_SEGMENT
operator|+
literal|"|||||||8859/1|"
operator|+
literal|'\r'
operator|+
name|REMAINING_SEGMENTS
decl_stmt|;
name|assertEquals
argument_list|(
literal|"8859/1"
argument_list|,
name|Hl7Util
operator|.
name|findMsh18
argument_list|(
name|testMessage
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Description of test.      *      * @throws Exception in the event of a test error.      */
annotation|@
name|Test
DECL|method|testFindMsh18WhenMissingWithoutTrailingPipe ()
specifier|public
name|void
name|testFindMsh18WhenMissingWithoutTrailingPipe
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|testMessage
init|=
name|MSH_SEGMENT
operator|+
literal|"|||||||"
operator|+
literal|'\r'
operator|+
name|REMAINING_SEGMENTS
decl_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|Hl7Util
operator|.
name|findMsh18
argument_list|(
name|testMessage
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Description of test.      *      * @throws Exception in the event of a test error.      */
annotation|@
name|Test
DECL|method|testFindMsh18WhenMissingWithTrailingPipe ()
specifier|public
name|void
name|testFindMsh18WhenMissingWithTrailingPipe
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|testMessage
init|=
name|MSH_SEGMENT
operator|+
literal|"||||||||"
operator|+
literal|'\r'
operator|+
name|REMAINING_SEGMENTS
decl_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|Hl7Util
operator|.
name|findMsh18
argument_list|(
name|testMessage
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

