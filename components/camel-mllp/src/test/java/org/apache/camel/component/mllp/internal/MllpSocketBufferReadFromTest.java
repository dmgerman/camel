begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.mllp.internal
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mllp
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|SocketTimeoutException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|stub
operator|.
name|tcp
operator|.
name|SocketInputStreamStub
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|stub
operator|.
name|tcp
operator|.
name|SocketStub
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_comment
comment|/**  * Tests for the  class.  */
end_comment

begin_class
DECL|class|MllpSocketBufferReadFromTest
specifier|public
class|class
name|MllpSocketBufferReadFromTest
extends|extends
name|SocketBufferTestSupport
block|{
DECL|field|socketStub
name|SocketStub
name|socketStub
decl_stmt|;
DECL|field|inputStreamStub
name|SocketInputStreamStub
name|inputStreamStub
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|socketStub
operator|=
operator|new
name|SocketStub
argument_list|()
expr_stmt|;
name|inputStreamStub
operator|=
name|socketStub
operator|.
name|inputStreamStub
expr_stmt|;
block|}
comment|/**      * Description of test.      *      * @throws Exception in the event of a test error.      */
annotation|@
name|Test
DECL|method|testReadFromWithTimeoutExceptionOnInitialRead ()
specifier|public
name|void
name|testReadFromWithTimeoutExceptionOnInitialRead
parameter_list|()
throws|throws
name|Exception
block|{
name|inputStreamStub
operator|.
name|addPacket
argument_list|(
operator|new
name|SocketTimeoutException
argument_list|(
literal|"Fake Timeout Exception"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|endpoint
operator|.
name|setReceiveTimeout
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setReadTimeout
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|instance
operator|.
name|readFrom
argument_list|(
name|socketStub
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown and exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SocketTimeoutException
name|expectedEx
parameter_list|)
block|{
name|assertNull
argument_list|(
name|instance
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Description of test.      *      * @throws Exception in the event of a test error.      */
annotation|@
name|Test
DECL|method|testReadFromWithTimeoutException ()
specifier|public
name|void
name|testReadFromWithTimeoutException
parameter_list|()
throws|throws
name|Exception
block|{
name|inputStreamStub
operator|.
name|addPacket
argument_list|(
literal|"FOO"
operator|.
name|getBytes
argument_list|()
argument_list|)
operator|.
name|addPacket
argument_list|(
literal|"BAR"
operator|.
name|getBytes
argument_list|()
argument_list|)
operator|.
name|addPacket
argument_list|(
operator|new
name|SocketTimeoutException
argument_list|(
literal|"Fake Timeout Exception"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|endpoint
operator|.
name|setReceiveTimeout
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setReadTimeout
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|instance
operator|.
name|readFrom
argument_list|(
name|socketStub
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown and exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SocketTimeoutException
name|expectedEx
parameter_list|)
block|{
name|assertNull
argument_list|(
name|instance
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

