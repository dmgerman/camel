begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.rss
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|rss
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|com
operator|.
name|rometools
operator|.
name|rome
operator|.
name|feed
operator|.
name|synd
operator|.
name|SyndEntry
import|;
end_import

begin_import
import|import
name|com
operator|.
name|rometools
operator|.
name|rome
operator|.
name|feed
operator|.
name|synd
operator|.
name|SyndEntryImpl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|rometools
operator|.
name|rome
operator|.
name|feed
operator|.
name|synd
operator|.
name|SyndFeedImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
DECL|class|UpdatedDateFilterTest
specifier|public
class|class
name|UpdatedDateFilterTest
block|{
DECL|field|fixture
specifier|private
name|UpdatedDateFilter
name|fixture
decl_stmt|;
DECL|field|now
specifier|private
name|Date
name|now
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|now
operator|=
operator|new
name|Date
argument_list|()
expr_stmt|;
name|fixture
operator|=
operator|new
name|UpdatedDateFilter
argument_list|(
name|now
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFilter ()
specifier|public
name|void
name|testFilter
parameter_list|()
block|{
name|SyndEntry
name|entry
init|=
operator|new
name|SyndEntryImpl
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setPublishedDate
argument_list|(
name|now
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setAuthor
argument_list|(
literal|"ANDY"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fixture
operator|.
name|isValidEntry
argument_list|(
operator|new
name|RssEndpoint
argument_list|()
argument_list|,
operator|new
name|SyndFeedImpl
argument_list|()
argument_list|,
name|entry
argument_list|)
argument_list|)
expr_stmt|;
name|entry
operator|=
operator|new
name|SyndEntryImpl
argument_list|()
expr_stmt|;
name|entry
operator|.
name|setPublishedDate
argument_list|(
name|now
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setAuthor
argument_list|(
literal|"ANDY"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|fixture
operator|.
name|isValidEntry
argument_list|(
operator|new
name|RssEndpoint
argument_list|()
argument_list|,
operator|new
name|SyndFeedImpl
argument_list|()
argument_list|,
name|entry
argument_list|)
argument_list|)
expr_stmt|;
name|entry
operator|=
operator|new
name|SyndEntryImpl
argument_list|()
expr_stmt|;
name|entry
operator|.
name|setPublishedDate
argument_list|(
name|now
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setAuthor
argument_list|(
literal|"FRED"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fixture
operator|.
name|isValidEntry
argument_list|(
operator|new
name|RssEndpoint
argument_list|()
argument_list|,
operator|new
name|SyndFeedImpl
argument_list|()
argument_list|,
name|entry
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

