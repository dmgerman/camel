begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.rss
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|rss
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|com
operator|.
name|rometools
operator|.
name|rome
operator|.
name|feed
operator|.
name|synd
operator|.
name|SyndEntry
import|;
end_import

begin_class
DECL|class|RssDateComparator
specifier|public
class|class
name|RssDateComparator
implements|implements
name|Comparator
argument_list|<
name|SyndEntry
argument_list|>
block|{
annotation|@
name|Override
DECL|method|compare (SyndEntry s1, SyndEntry s2)
specifier|public
name|int
name|compare
parameter_list|(
name|SyndEntry
name|s1
parameter_list|,
name|SyndEntry
name|s2
parameter_list|)
block|{
name|Date
name|d1
init|=
name|getUpdatedDate
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|Date
name|d2
init|=
name|getUpdatedDate
argument_list|(
name|s2
argument_list|)
decl_stmt|;
if|if
condition|(
name|d2
operator|!=
literal|null
operator|&&
name|d1
operator|!=
literal|null
condition|)
block|{
return|return
name|d2
operator|.
name|compareTo
argument_list|(
name|d1
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|0
return|;
block|}
block|}
DECL|method|getUpdatedDate (SyndEntry entry)
specifier|private
name|Date
name|getUpdatedDate
parameter_list|(
name|SyndEntry
name|entry
parameter_list|)
block|{
name|Date
name|date
init|=
name|entry
operator|.
name|getUpdatedDate
argument_list|()
decl_stmt|;
if|if
condition|(
name|date
operator|==
literal|null
condition|)
block|{
name|date
operator|=
name|entry
operator|.
name|getPublishedDate
argument_list|()
expr_stmt|;
block|}
return|return
name|date
return|;
block|}
block|}
end_class

end_unit

