begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.groovy
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|groovy
package|;
end_package

begin_import
import|import
name|groovy
operator|.
name|lang
operator|.
name|Closure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|ExpressionSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|ChoiceType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|FilterType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|ProcessorType
import|;
end_import

begin_comment
comment|/**  * @version $Revision: 1.1 $  */
end_comment

begin_class
DECL|class|CamelGroovyMethods
specifier|public
class|class
name|CamelGroovyMethods
block|{
DECL|method|filter (ProcessorType self, Closure filter)
specifier|public
specifier|static
name|FilterType
name|filter
parameter_list|(
name|ProcessorType
name|self
parameter_list|,
name|Closure
name|filter
parameter_list|)
block|{
return|return
name|self
operator|.
name|filter
argument_list|(
name|toExpression
argument_list|(
name|filter
argument_list|)
argument_list|)
return|;
block|}
DECL|method|when (ChoiceType self, Closure filter)
specifier|public
specifier|static
name|ChoiceType
name|when
parameter_list|(
name|ChoiceType
name|self
parameter_list|,
name|Closure
name|filter
parameter_list|)
block|{
return|return
name|self
operator|.
name|when
argument_list|(
name|toExpression
argument_list|(
name|filter
argument_list|)
argument_list|)
return|;
block|}
DECL|method|toExpression (final Closure filter)
specifier|public
specifier|static
name|ExpressionSupport
name|toExpression
parameter_list|(
specifier|final
name|Closure
name|filter
parameter_list|)
block|{
return|return
operator|new
name|ExpressionSupport
argument_list|<
name|Exchange
argument_list|>
argument_list|()
block|{
specifier|protected
name|String
name|assertionFailureMessage
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
return|return
name|filter
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|Object
name|evaluate
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
return|return
name|filter
operator|.
name|call
argument_list|(
name|exchange
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"Groovy["
operator|+
name|filter
operator|+
literal|"]"
return|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

