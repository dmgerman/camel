begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.dataformat.asn1
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|asn1
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|asn1
operator|.
name|model
operator|.
name|testsmscbercdr
operator|.
name|SmsCdr
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|spring
operator|.
name|CamelSpringTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|AbstractApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|ClassPathXmlApplicationContext
import|;
end_import

begin_class
DECL|class|SpringASN1DataFormatRouteTest
specifier|public
class|class
name|SpringASN1DataFormatRouteTest
extends|extends
name|CamelSpringTestSupport
block|{
DECL|field|fileName
specifier|private
name|String
name|fileName
init|=
literal|"src/test/resources/asn1_data/SMS_SINGLE.tt"
decl_stmt|;
DECL|method|baseUnmarshalReturnClassObjectTest (String mockEnpointName, String directEndpointName)
specifier|private
name|void
name|baseUnmarshalReturnClassObjectTest
parameter_list|(
name|String
name|mockEnpointName
parameter_list|,
name|String
name|directEndpointName
parameter_list|)
throws|throws
name|Exception
block|{
name|getMockEndpoint
argument_list|(
name|mockEnpointName
argument_list|)
operator|.
name|expectedMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|File
name|testFile
init|=
operator|new
name|File
argument_list|(
name|fileName
argument_list|)
decl_stmt|;
name|ByteArrayInputStream
name|bais
init|=
name|ASN1DataFormatTestHelper
operator|.
name|reteriveByteArrayInputStream
argument_list|(
name|testFile
argument_list|)
decl_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
name|directEndpointName
argument_list|,
name|bais
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Exchange
argument_list|>
name|exchanges
init|=
name|getMockEndpoint
argument_list|(
name|mockEnpointName
argument_list|)
operator|.
name|getExchanges
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|exchanges
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
for|for
control|(
name|Exchange
name|exchange
range|:
name|exchanges
control|)
block|{
name|assertTrue
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
operator|instanceof
name|SmsCdr
argument_list|)
expr_stmt|;
block|}
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUnmarshalReturnClassObject ()
specifier|public
name|void
name|testUnmarshalReturnClassObject
parameter_list|()
throws|throws
name|Exception
block|{
name|baseUnmarshalReturnClassObjectTest
argument_list|(
literal|"mock:unmarshal"
argument_list|,
literal|"direct:unmarshal"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createApplicationContext ()
specifier|protected
name|AbstractApplicationContext
name|createApplicationContext
parameter_list|()
block|{
return|return
operator|new
name|ClassPathXmlApplicationContext
argument_list|(
literal|"org/apache/camel/dataformat/asn1/SpringASN1DataFormatRouteTest.xml"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

