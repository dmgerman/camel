begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.kafka
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|kafka
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Consumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|MultipleConsumersSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Producer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|SynchronousDelegateProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ClassResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|CastUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kafka
operator|.
name|clients
operator|.
name|consumer
operator|.
name|ConsumerConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kafka
operator|.
name|clients
operator|.
name|consumer
operator|.
name|ConsumerRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kafka
operator|.
name|clients
operator|.
name|producer
operator|.
name|Partitioner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kafka
operator|.
name|clients
operator|.
name|producer
operator|.
name|ProducerConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kafka
operator|.
name|common
operator|.
name|serialization
operator|.
name|Deserializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kafka
operator|.
name|common
operator|.
name|serialization
operator|.
name|Serializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * The kafka component allows messages to be sent to (or consumed from) Apache Kafka brokers.  */
end_comment

begin_class
annotation|@
name|UriEndpoint
argument_list|(
name|scheme
operator|=
literal|"kafka"
argument_list|,
name|title
operator|=
literal|"Kafka"
argument_list|,
name|syntax
operator|=
literal|"kafka:brokers"
argument_list|,
name|consumerClass
operator|=
name|KafkaConsumer
operator|.
name|class
argument_list|,
name|label
operator|=
literal|"messaging"
argument_list|)
DECL|class|KafkaEndpoint
specifier|public
class|class
name|KafkaEndpoint
extends|extends
name|DefaultEndpoint
implements|implements
name|MultipleConsumersSupport
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|KafkaEndpoint
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|UriParam
DECL|field|configuration
specifier|private
name|KafkaConfiguration
name|configuration
init|=
operator|new
name|KafkaConfiguration
argument_list|()
decl_stmt|;
annotation|@
name|UriParam
DECL|field|bridgeEndpoint
specifier|private
name|boolean
name|bridgeEndpoint
decl_stmt|;
DECL|method|KafkaEndpoint ()
specifier|public
name|KafkaEndpoint
parameter_list|()
block|{     }
DECL|method|KafkaEndpoint (String endpointUri, KafkaComponent component)
specifier|public
name|KafkaEndpoint
parameter_list|(
name|String
name|endpointUri
parameter_list|,
name|KafkaComponent
name|component
parameter_list|)
block|{
name|super
argument_list|(
name|endpointUri
argument_list|,
name|component
argument_list|)
expr_stmt|;
block|}
DECL|method|getConfiguration ()
specifier|public
name|KafkaConfiguration
name|getConfiguration
parameter_list|()
block|{
if|if
condition|(
name|configuration
operator|==
literal|null
condition|)
block|{
name|configuration
operator|=
name|createConfiguration
argument_list|()
expr_stmt|;
block|}
return|return
name|configuration
return|;
block|}
DECL|method|setConfiguration (KafkaConfiguration configuration)
specifier|public
name|void
name|setConfiguration
parameter_list|(
name|KafkaConfiguration
name|configuration
parameter_list|)
block|{
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
block|}
DECL|method|createConfiguration ()
specifier|protected
name|KafkaConfiguration
name|createConfiguration
parameter_list|()
block|{
return|return
operator|new
name|KafkaConfiguration
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|createConsumer (Processor processor)
specifier|public
name|Consumer
name|createConsumer
parameter_list|(
name|Processor
name|processor
parameter_list|)
throws|throws
name|Exception
block|{
name|KafkaConsumer
name|consumer
init|=
operator|new
name|KafkaConsumer
argument_list|(
name|this
argument_list|,
name|processor
argument_list|)
decl_stmt|;
name|configureConsumer
argument_list|(
name|consumer
argument_list|)
expr_stmt|;
return|return
name|consumer
return|;
block|}
annotation|@
name|Override
DECL|method|createProducer ()
specifier|public
name|Producer
name|createProducer
parameter_list|()
throws|throws
name|Exception
block|{
name|KafkaProducer
name|producer
init|=
name|createProducer
argument_list|(
name|this
argument_list|)
decl_stmt|;
if|if
condition|(
name|isSynchronous
argument_list|()
condition|)
block|{
return|return
operator|new
name|SynchronousDelegateProducer
argument_list|(
name|producer
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|producer
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|isSingleton ()
specifier|public
name|boolean
name|isSingleton
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
DECL|method|isMultipleConsumersSupported ()
specifier|public
name|boolean
name|isMultipleConsumersSupported
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
DECL|method|loadParitionerClass (ClassResolver resolver, Properties props)
specifier|private
name|void
name|loadParitionerClass
parameter_list|(
name|ClassResolver
name|resolver
parameter_list|,
name|Properties
name|props
parameter_list|)
block|{
name|replaceWithClass
argument_list|(
name|props
argument_list|,
literal|"partitioner.class"
argument_list|,
name|resolver
argument_list|,
name|Partitioner
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
DECL|method|loadClass (Object o, ClassResolver resolver, Class<T> type)
parameter_list|<
name|T
parameter_list|>
name|Class
argument_list|<
name|T
argument_list|>
name|loadClass
parameter_list|(
name|Object
name|o
parameter_list|,
name|ClassResolver
name|resolver
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|type
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|o
operator|instanceof
name|Class
condition|)
block|{
return|return
name|CastUtils
operator|.
name|cast
argument_list|(
operator|(
name|Class
argument_list|<
name|?
argument_list|>
operator|)
name|o
argument_list|)
return|;
block|}
name|String
name|name
init|=
name|o
operator|.
name|toString
argument_list|()
decl_stmt|;
name|Class
argument_list|<
name|T
argument_list|>
name|c
init|=
name|resolver
operator|.
name|resolveClass
argument_list|(
name|name
argument_list|,
name|type
argument_list|)
decl_stmt|;
if|if
condition|(
name|c
operator|==
literal|null
condition|)
block|{
name|c
operator|=
name|resolver
operator|.
name|resolveClass
argument_list|(
name|name
argument_list|,
name|type
argument_list|,
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|c
operator|==
literal|null
condition|)
block|{
name|c
operator|=
name|resolver
operator|.
name|resolveClass
argument_list|(
name|name
argument_list|,
name|type
argument_list|,
name|org
operator|.
name|apache
operator|.
name|kafka
operator|.
name|clients
operator|.
name|producer
operator|.
name|KafkaProducer
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|c
return|;
block|}
DECL|method|replaceWithClass (Properties props, String key, ClassResolver resolver, Class<?> type)
name|void
name|replaceWithClass
parameter_list|(
name|Properties
name|props
parameter_list|,
name|String
name|key
parameter_list|,
name|ClassResolver
name|resolver
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|type
parameter_list|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|c
init|=
name|loadClass
argument_list|(
name|props
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|,
name|resolver
argument_list|,
name|type
argument_list|)
decl_stmt|;
if|if
condition|(
name|c
operator|!=
literal|null
condition|)
block|{
name|props
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|updateClassProperties (Properties props)
specifier|public
name|void
name|updateClassProperties
parameter_list|(
name|Properties
name|props
parameter_list|)
block|{
try|try
block|{
if|if
condition|(
name|getCamelContext
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|ClassResolver
name|resolver
init|=
name|getCamelContext
argument_list|()
operator|.
name|getClassResolver
argument_list|()
decl_stmt|;
name|replaceWithClass
argument_list|(
name|props
argument_list|,
name|ProducerConfig
operator|.
name|KEY_SERIALIZER_CLASS_CONFIG
argument_list|,
name|resolver
argument_list|,
name|Serializer
operator|.
name|class
argument_list|)
expr_stmt|;
name|replaceWithClass
argument_list|(
name|props
argument_list|,
name|ProducerConfig
operator|.
name|VALUE_SERIALIZER_CLASS_CONFIG
argument_list|,
name|resolver
argument_list|,
name|Serializer
operator|.
name|class
argument_list|)
expr_stmt|;
name|replaceWithClass
argument_list|(
name|props
argument_list|,
name|ConsumerConfig
operator|.
name|KEY_DESERIALIZER_CLASS_CONFIG
argument_list|,
name|resolver
argument_list|,
name|Deserializer
operator|.
name|class
argument_list|)
expr_stmt|;
name|replaceWithClass
argument_list|(
name|props
argument_list|,
name|ConsumerConfig
operator|.
name|VALUE_DESERIALIZER_CLASS_CONFIG
argument_list|,
name|resolver
argument_list|,
name|Deserializer
operator|.
name|class
argument_list|)
expr_stmt|;
try|try
block|{
comment|//doesn't exist in old version of Kafka client so detect and only call the method if
comment|//the field/config actually exists
name|Field
name|f
init|=
name|ProducerConfig
operator|.
name|class
operator|.
name|getDeclaredField
argument_list|(
literal|"PARTITIONER_CLASS_CONFIG"
argument_list|)
decl_stmt|;
if|if
condition|(
name|f
operator|!=
literal|null
condition|)
block|{
name|loadParitionerClass
argument_list|(
name|resolver
argument_list|,
name|props
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|NoSuchFieldException
name|e
parameter_list|)
block|{
comment|//ignore
block|}
catch|catch
parameter_list|(
name|SecurityException
name|e
parameter_list|)
block|{
comment|//ignore
block|}
comment|//doesn't work as it needs to be List<String>  :(
comment|//replaceWithClass(props, "partition.assignment.strategy", resolver, PartitionAssignor.class);
block|}
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
comment|//can ignore and Kafka itself might be able to handle it, if not, it will throw an exception
name|LOG
operator|.
name|debug
argument_list|(
literal|"Problem loading classes for Serializers"
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|createExecutor ()
specifier|public
name|ExecutorService
name|createExecutor
parameter_list|()
block|{
return|return
name|getCamelContext
argument_list|()
operator|.
name|getExecutorServiceManager
argument_list|()
operator|.
name|newFixedThreadPool
argument_list|(
name|this
argument_list|,
literal|"KafkaConsumer["
operator|+
name|configuration
operator|.
name|getTopic
argument_list|()
operator|+
literal|"]"
argument_list|,
name|configuration
operator|.
name|getConsumerStreams
argument_list|()
argument_list|)
return|;
block|}
DECL|method|createProducerExecutor ()
specifier|public
name|ExecutorService
name|createProducerExecutor
parameter_list|()
block|{
name|int
name|core
init|=
name|getConfiguration
argument_list|()
operator|.
name|getWorkerPoolCoreSize
argument_list|()
decl_stmt|;
name|int
name|max
init|=
name|getConfiguration
argument_list|()
operator|.
name|getWorkerPoolMaxSize
argument_list|()
decl_stmt|;
return|return
name|getCamelContext
argument_list|()
operator|.
name|getExecutorServiceManager
argument_list|()
operator|.
name|newThreadPool
argument_list|(
name|this
argument_list|,
literal|"KafkaProducer["
operator|+
name|configuration
operator|.
name|getTopic
argument_list|()
operator|+
literal|"]"
argument_list|,
name|core
argument_list|,
name|max
argument_list|)
return|;
block|}
DECL|method|createKafkaExchange (ConsumerRecord record)
specifier|public
name|Exchange
name|createKafkaExchange
parameter_list|(
name|ConsumerRecord
name|record
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|super
operator|.
name|createExchange
argument_list|()
decl_stmt|;
name|Message
name|message
init|=
name|exchange
operator|.
name|getIn
argument_list|()
decl_stmt|;
name|message
operator|.
name|setHeader
argument_list|(
name|KafkaConstants
operator|.
name|PARTITION
argument_list|,
name|record
operator|.
name|partition
argument_list|()
argument_list|)
expr_stmt|;
name|message
operator|.
name|setHeader
argument_list|(
name|KafkaConstants
operator|.
name|TOPIC
argument_list|,
name|record
operator|.
name|topic
argument_list|()
argument_list|)
expr_stmt|;
name|message
operator|.
name|setHeader
argument_list|(
name|KafkaConstants
operator|.
name|OFFSET
argument_list|,
name|record
operator|.
name|offset
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|record
operator|.
name|key
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|message
operator|.
name|setHeader
argument_list|(
name|KafkaConstants
operator|.
name|KEY
argument_list|,
name|record
operator|.
name|key
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|message
operator|.
name|setBody
argument_list|(
name|record
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|exchange
return|;
block|}
DECL|method|createProducer (KafkaEndpoint endpoint)
specifier|protected
name|KafkaProducer
name|createProducer
parameter_list|(
name|KafkaEndpoint
name|endpoint
parameter_list|)
block|{
return|return
operator|new
name|KafkaProducer
argument_list|(
name|endpoint
argument_list|)
return|;
block|}
comment|// Delegated properties from the configuration
comment|//-------------------------------------------------------------------------
DECL|method|createProducerProperties ()
specifier|public
name|Properties
name|createProducerProperties
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|createProducerProperties
argument_list|()
return|;
block|}
DECL|method|setValueDeserializer (String valueDeserializer)
specifier|public
name|void
name|setValueDeserializer
parameter_list|(
name|String
name|valueDeserializer
parameter_list|)
block|{
name|configuration
operator|.
name|setValueDeserializer
argument_list|(
name|valueDeserializer
argument_list|)
expr_stmt|;
block|}
DECL|method|setRequestTimeoutMs (Integer requestTimeoutMs)
specifier|public
name|void
name|setRequestTimeoutMs
parameter_list|(
name|Integer
name|requestTimeoutMs
parameter_list|)
block|{
name|configuration
operator|.
name|setRequestTimeoutMs
argument_list|(
name|requestTimeoutMs
argument_list|)
expr_stmt|;
block|}
DECL|method|setProducerBatchSize (Integer producerBatchSize)
specifier|public
name|void
name|setProducerBatchSize
parameter_list|(
name|Integer
name|producerBatchSize
parameter_list|)
block|{
name|configuration
operator|.
name|setProducerBatchSize
argument_list|(
name|producerBatchSize
argument_list|)
expr_stmt|;
block|}
DECL|method|setRetryBackoffMs (Integer retryBackoffMs)
specifier|public
name|void
name|setRetryBackoffMs
parameter_list|(
name|Integer
name|retryBackoffMs
parameter_list|)
block|{
name|configuration
operator|.
name|setRetryBackoffMs
argument_list|(
name|retryBackoffMs
argument_list|)
expr_stmt|;
block|}
DECL|method|setNoOfMetricsSample (Integer noOfMetricsSample)
specifier|public
name|void
name|setNoOfMetricsSample
parameter_list|(
name|Integer
name|noOfMetricsSample
parameter_list|)
block|{
name|configuration
operator|.
name|setNoOfMetricsSample
argument_list|(
name|noOfMetricsSample
argument_list|)
expr_stmt|;
block|}
DECL|method|getMetricReporters ()
specifier|public
name|String
name|getMetricReporters
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getMetricReporters
argument_list|()
return|;
block|}
DECL|method|setSslKeystoreType (String sslKeystoreType)
specifier|public
name|void
name|setSslKeystoreType
parameter_list|(
name|String
name|sslKeystoreType
parameter_list|)
block|{
name|configuration
operator|.
name|setSslKeystoreType
argument_list|(
name|sslKeystoreType
argument_list|)
expr_stmt|;
block|}
DECL|method|setSslCipherSuites (String sslCipherSuites)
specifier|public
name|void
name|setSslCipherSuites
parameter_list|(
name|String
name|sslCipherSuites
parameter_list|)
block|{
name|configuration
operator|.
name|setSslCipherSuites
argument_list|(
name|sslCipherSuites
argument_list|)
expr_stmt|;
block|}
DECL|method|setClientId (String clientId)
specifier|public
name|void
name|setClientId
parameter_list|(
name|String
name|clientId
parameter_list|)
block|{
name|configuration
operator|.
name|setClientId
argument_list|(
name|clientId
argument_list|)
expr_stmt|;
block|}
DECL|method|setMetricsSampleWindowMs (Integer metricsSampleWindowMs)
specifier|public
name|void
name|setMetricsSampleWindowMs
parameter_list|(
name|Integer
name|metricsSampleWindowMs
parameter_list|)
block|{
name|configuration
operator|.
name|setMetricsSampleWindowMs
argument_list|(
name|metricsSampleWindowMs
argument_list|)
expr_stmt|;
block|}
DECL|method|getKeyDeserializer ()
specifier|public
name|String
name|getKeyDeserializer
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getKeyDeserializer
argument_list|()
return|;
block|}
DECL|method|getConsumersCount ()
specifier|public
name|int
name|getConsumersCount
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getConsumersCount
argument_list|()
return|;
block|}
DECL|method|getSslKeyPassword ()
specifier|public
name|String
name|getSslKeyPassword
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSslKeyPassword
argument_list|()
return|;
block|}
DECL|method|setSendBufferBytes (Integer sendBufferBytes)
specifier|public
name|void
name|setSendBufferBytes
parameter_list|(
name|Integer
name|sendBufferBytes
parameter_list|)
block|{
name|configuration
operator|.
name|setSendBufferBytes
argument_list|(
name|sendBufferBytes
argument_list|)
expr_stmt|;
block|}
DECL|method|isAutoCommitEnable ()
specifier|public
name|Boolean
name|isAutoCommitEnable
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|isAutoCommitEnable
argument_list|()
return|;
block|}
DECL|method|getMaxBlockMs ()
specifier|public
name|Integer
name|getMaxBlockMs
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getMaxBlockMs
argument_list|()
return|;
block|}
DECL|method|getConsumerId ()
specifier|public
name|String
name|getConsumerId
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getConsumerId
argument_list|()
return|;
block|}
DECL|method|setSslProtocol (String sslProtocol)
specifier|public
name|void
name|setSslProtocol
parameter_list|(
name|String
name|sslProtocol
parameter_list|)
block|{
name|configuration
operator|.
name|setSslProtocol
argument_list|(
name|sslProtocol
argument_list|)
expr_stmt|;
block|}
DECL|method|setReceiveBufferBytes (Integer receiveBufferBytes)
specifier|public
name|void
name|setReceiveBufferBytes
parameter_list|(
name|Integer
name|receiveBufferBytes
parameter_list|)
block|{
name|configuration
operator|.
name|setReceiveBufferBytes
argument_list|(
name|receiveBufferBytes
argument_list|)
expr_stmt|;
block|}
DECL|method|getCheckCrcs ()
specifier|public
name|Boolean
name|getCheckCrcs
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getCheckCrcs
argument_list|()
return|;
block|}
DECL|method|setGroupId (String groupId)
specifier|public
name|void
name|setGroupId
parameter_list|(
name|String
name|groupId
parameter_list|)
block|{
name|configuration
operator|.
name|setGroupId
argument_list|(
name|groupId
argument_list|)
expr_stmt|;
block|}
DECL|method|getCompressionCodec ()
specifier|public
name|String
name|getCompressionCodec
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getCompressionCodec
argument_list|()
return|;
block|}
DECL|method|getGroupId ()
specifier|public
name|String
name|getGroupId
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getGroupId
argument_list|()
return|;
block|}
DECL|method|setSslTruststoreLocation (String sslTruststoreLocation)
specifier|public
name|void
name|setSslTruststoreLocation
parameter_list|(
name|String
name|sslTruststoreLocation
parameter_list|)
block|{
name|configuration
operator|.
name|setSslTruststoreLocation
argument_list|(
name|sslTruststoreLocation
argument_list|)
expr_stmt|;
block|}
DECL|method|getKerberosInitCmd ()
specifier|public
name|String
name|getKerberosInitCmd
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getKerberosInitCmd
argument_list|()
return|;
block|}
DECL|method|getAutoOffsetReset ()
specifier|public
name|String
name|getAutoOffsetReset
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getAutoOffsetReset
argument_list|()
return|;
block|}
DECL|method|setAutoCommitEnable (Boolean autoCommitEnable)
specifier|public
name|void
name|setAutoCommitEnable
parameter_list|(
name|Boolean
name|autoCommitEnable
parameter_list|)
block|{
name|configuration
operator|.
name|setAutoCommitEnable
argument_list|(
name|autoCommitEnable
argument_list|)
expr_stmt|;
block|}
DECL|method|setSerializerClass (String serializerClass)
specifier|public
name|void
name|setSerializerClass
parameter_list|(
name|String
name|serializerClass
parameter_list|)
block|{
name|configuration
operator|.
name|setSerializerClass
argument_list|(
name|serializerClass
argument_list|)
expr_stmt|;
block|}
DECL|method|getQueueBufferingMaxMessages ()
specifier|public
name|Integer
name|getQueueBufferingMaxMessages
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getQueueBufferingMaxMessages
argument_list|()
return|;
block|}
DECL|method|setSslEndpointAlgorithm (String sslEndpointAlgorithm)
specifier|public
name|void
name|setSslEndpointAlgorithm
parameter_list|(
name|String
name|sslEndpointAlgorithm
parameter_list|)
block|{
name|configuration
operator|.
name|setSslEndpointAlgorithm
argument_list|(
name|sslEndpointAlgorithm
argument_list|)
expr_stmt|;
block|}
DECL|method|setRetries (Integer retries)
specifier|public
name|void
name|setRetries
parameter_list|(
name|Integer
name|retries
parameter_list|)
block|{
name|configuration
operator|.
name|setRetries
argument_list|(
name|retries
argument_list|)
expr_stmt|;
block|}
DECL|method|setAutoOffsetReset (String autoOffsetReset)
specifier|public
name|void
name|setAutoOffsetReset
parameter_list|(
name|String
name|autoOffsetReset
parameter_list|)
block|{
name|configuration
operator|.
name|setAutoOffsetReset
argument_list|(
name|autoOffsetReset
argument_list|)
expr_stmt|;
block|}
DECL|method|getSessionTimeoutMs ()
specifier|public
name|Integer
name|getSessionTimeoutMs
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSessionTimeoutMs
argument_list|()
return|;
block|}
DECL|method|getBufferMemorySize ()
specifier|public
name|Integer
name|getBufferMemorySize
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getBufferMemorySize
argument_list|()
return|;
block|}
DECL|method|getKeySerializerClass ()
specifier|public
name|String
name|getKeySerializerClass
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getKeySerializerClass
argument_list|()
return|;
block|}
DECL|method|setSslProvider (String sslProvider)
specifier|public
name|void
name|setSslProvider
parameter_list|(
name|String
name|sslProvider
parameter_list|)
block|{
name|configuration
operator|.
name|setSslProvider
argument_list|(
name|sslProvider
argument_list|)
expr_stmt|;
block|}
DECL|method|setFetchMinBytes (Integer fetchMinBytes)
specifier|public
name|void
name|setFetchMinBytes
parameter_list|(
name|Integer
name|fetchMinBytes
parameter_list|)
block|{
name|configuration
operator|.
name|setFetchMinBytes
argument_list|(
name|fetchMinBytes
argument_list|)
expr_stmt|;
block|}
DECL|method|getAutoCommitIntervalMs ()
specifier|public
name|Integer
name|getAutoCommitIntervalMs
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getAutoCommitIntervalMs
argument_list|()
return|;
block|}
DECL|method|setKeySerializerClass (String keySerializerClass)
specifier|public
name|void
name|setKeySerializerClass
parameter_list|(
name|String
name|keySerializerClass
parameter_list|)
block|{
name|configuration
operator|.
name|setKeySerializerClass
argument_list|(
name|keySerializerClass
argument_list|)
expr_stmt|;
block|}
DECL|method|getConnectionMaxIdleMs ()
specifier|public
name|Integer
name|getConnectionMaxIdleMs
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getConnectionMaxIdleMs
argument_list|()
return|;
block|}
DECL|method|getReceiveBufferBytes ()
specifier|public
name|Integer
name|getReceiveBufferBytes
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getReceiveBufferBytes
argument_list|()
return|;
block|}
DECL|method|setBrokers (String brokers)
specifier|public
name|void
name|setBrokers
parameter_list|(
name|String
name|brokers
parameter_list|)
block|{
name|configuration
operator|.
name|setBrokers
argument_list|(
name|brokers
argument_list|)
expr_stmt|;
block|}
DECL|method|getValueDeserializer ()
specifier|public
name|String
name|getValueDeserializer
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getValueDeserializer
argument_list|()
return|;
block|}
DECL|method|getPartitioner ()
specifier|public
name|String
name|getPartitioner
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getPartitioner
argument_list|()
return|;
block|}
DECL|method|getSslTruststoreLocation ()
specifier|public
name|String
name|getSslTruststoreLocation
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSslTruststoreLocation
argument_list|()
return|;
block|}
DECL|method|getSslProvider ()
specifier|public
name|String
name|getSslProvider
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSslProvider
argument_list|()
return|;
block|}
DECL|method|setMetricReporters (String metricReporters)
specifier|public
name|void
name|setMetricReporters
parameter_list|(
name|String
name|metricReporters
parameter_list|)
block|{
name|configuration
operator|.
name|setMetricReporters
argument_list|(
name|metricReporters
argument_list|)
expr_stmt|;
block|}
DECL|method|setSslTruststorePassword (String sslTruststorePassword)
specifier|public
name|void
name|setSslTruststorePassword
parameter_list|(
name|String
name|sslTruststorePassword
parameter_list|)
block|{
name|configuration
operator|.
name|setSslTruststorePassword
argument_list|(
name|sslTruststorePassword
argument_list|)
expr_stmt|;
block|}
DECL|method|setMaxInFlightRequest (Integer maxInFlightRequest)
specifier|public
name|void
name|setMaxInFlightRequest
parameter_list|(
name|Integer
name|maxInFlightRequest
parameter_list|)
block|{
name|configuration
operator|.
name|setMaxInFlightRequest
argument_list|(
name|maxInFlightRequest
argument_list|)
expr_stmt|;
block|}
DECL|method|getTopic ()
specifier|public
name|String
name|getTopic
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getTopic
argument_list|()
return|;
block|}
DECL|method|getFetchMinBytes ()
specifier|public
name|Integer
name|getFetchMinBytes
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getFetchMinBytes
argument_list|()
return|;
block|}
DECL|method|getHeartbeatIntervalMs ()
specifier|public
name|Integer
name|getHeartbeatIntervalMs
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getHeartbeatIntervalMs
argument_list|()
return|;
block|}
DECL|method|setKeyDeserializer (String keyDeserializer)
specifier|public
name|void
name|setKeyDeserializer
parameter_list|(
name|String
name|keyDeserializer
parameter_list|)
block|{
name|configuration
operator|.
name|setKeyDeserializer
argument_list|(
name|keyDeserializer
argument_list|)
expr_stmt|;
block|}
DECL|method|getMaxRequestSize ()
specifier|public
name|Integer
name|getMaxRequestSize
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getMaxRequestSize
argument_list|()
return|;
block|}
DECL|method|setMetadataMaxAgeMs (Integer metadataMaxAgeMs)
specifier|public
name|void
name|setMetadataMaxAgeMs
parameter_list|(
name|Integer
name|metadataMaxAgeMs
parameter_list|)
block|{
name|configuration
operator|.
name|setMetadataMaxAgeMs
argument_list|(
name|metadataMaxAgeMs
argument_list|)
expr_stmt|;
block|}
DECL|method|getSslKeystoreType ()
specifier|public
name|String
name|getSslKeystoreType
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSslKeystoreType
argument_list|()
return|;
block|}
DECL|method|setKerberosRenewWindowFactor (Double kerberosRenewWindowFactor)
specifier|public
name|void
name|setKerberosRenewWindowFactor
parameter_list|(
name|Double
name|kerberosRenewWindowFactor
parameter_list|)
block|{
name|configuration
operator|.
name|setKerberosRenewWindowFactor
argument_list|(
name|kerberosRenewWindowFactor
argument_list|)
expr_stmt|;
block|}
DECL|method|getKerberosBeforeReloginMinTime ()
specifier|public
name|Integer
name|getKerberosBeforeReloginMinTime
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getKerberosBeforeReloginMinTime
argument_list|()
return|;
block|}
DECL|method|getSslEnabledProtocols ()
specifier|public
name|String
name|getSslEnabledProtocols
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSslEnabledProtocols
argument_list|()
return|;
block|}
DECL|method|getMaxInFlightRequest ()
specifier|public
name|Integer
name|getMaxInFlightRequest
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getMaxInFlightRequest
argument_list|()
return|;
block|}
DECL|method|getProducerBatchSize ()
specifier|public
name|Integer
name|getProducerBatchSize
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getProducerBatchSize
argument_list|()
return|;
block|}
DECL|method|setSslKeystorePassword (String sslKeystorePassword)
specifier|public
name|void
name|setSslKeystorePassword
parameter_list|(
name|String
name|sslKeystorePassword
parameter_list|)
block|{
name|configuration
operator|.
name|setSslKeystorePassword
argument_list|(
name|sslKeystorePassword
argument_list|)
expr_stmt|;
block|}
DECL|method|setCheckCrcs (Boolean checkCrcs)
specifier|public
name|void
name|setCheckCrcs
parameter_list|(
name|Boolean
name|checkCrcs
parameter_list|)
block|{
name|configuration
operator|.
name|setCheckCrcs
argument_list|(
name|checkCrcs
argument_list|)
expr_stmt|;
block|}
DECL|method|getConsumerStreams ()
specifier|public
name|int
name|getConsumerStreams
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getConsumerStreams
argument_list|()
return|;
block|}
DECL|method|setConsumersCount (int consumersCount)
specifier|public
name|void
name|setConsumersCount
parameter_list|(
name|int
name|consumersCount
parameter_list|)
block|{
name|configuration
operator|.
name|setConsumersCount
argument_list|(
name|consumersCount
argument_list|)
expr_stmt|;
block|}
DECL|method|setAutoCommitIntervalMs (Integer autoCommitIntervalMs)
specifier|public
name|void
name|setAutoCommitIntervalMs
parameter_list|(
name|Integer
name|autoCommitIntervalMs
parameter_list|)
block|{
name|configuration
operator|.
name|setAutoCommitIntervalMs
argument_list|(
name|autoCommitIntervalMs
argument_list|)
expr_stmt|;
block|}
DECL|method|setSslTruststoreType (String sslTruststoreType)
specifier|public
name|void
name|setSslTruststoreType
parameter_list|(
name|String
name|sslTruststoreType
parameter_list|)
block|{
name|configuration
operator|.
name|setSslTruststoreType
argument_list|(
name|sslTruststoreType
argument_list|)
expr_stmt|;
block|}
DECL|method|getConsumerRequestTimeoutMs ()
specifier|public
name|Integer
name|getConsumerRequestTimeoutMs
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getConsumerRequestTimeoutMs
argument_list|()
return|;
block|}
DECL|method|getSslKeystorePassword ()
specifier|public
name|String
name|getSslKeystorePassword
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSslKeystorePassword
argument_list|()
return|;
block|}
DECL|method|setSslKeyPassword (String sslKeyPassword)
specifier|public
name|void
name|setSslKeyPassword
parameter_list|(
name|String
name|sslKeyPassword
parameter_list|)
block|{
name|configuration
operator|.
name|setSslKeyPassword
argument_list|(
name|sslKeyPassword
argument_list|)
expr_stmt|;
block|}
DECL|method|getRequestRequiredAcks ()
specifier|public
name|String
name|getRequestRequiredAcks
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getRequestRequiredAcks
argument_list|()
return|;
block|}
DECL|method|getKerberosRenewWindowFactor ()
specifier|public
name|Double
name|getKerberosRenewWindowFactor
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getKerberosRenewWindowFactor
argument_list|()
return|;
block|}
DECL|method|setKerberosInitCmd (String kerberosInitCmd)
specifier|public
name|void
name|setKerberosInitCmd
parameter_list|(
name|String
name|kerberosInitCmd
parameter_list|)
block|{
name|configuration
operator|.
name|setKerberosInitCmd
argument_list|(
name|kerberosInitCmd
argument_list|)
expr_stmt|;
block|}
DECL|method|getRetryBackoffMs ()
specifier|public
name|Integer
name|getRetryBackoffMs
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getRetryBackoffMs
argument_list|()
return|;
block|}
DECL|method|setSslTrustmanagerAlgorithm (String sslTrustmanagerAlgorithm)
specifier|public
name|void
name|setSslTrustmanagerAlgorithm
parameter_list|(
name|String
name|sslTrustmanagerAlgorithm
parameter_list|)
block|{
name|configuration
operator|.
name|setSslTrustmanagerAlgorithm
argument_list|(
name|sslTrustmanagerAlgorithm
argument_list|)
expr_stmt|;
block|}
DECL|method|setConsumerRequestTimeoutMs (Integer consumerRequestTimeoutMs)
specifier|public
name|void
name|setConsumerRequestTimeoutMs
parameter_list|(
name|Integer
name|consumerRequestTimeoutMs
parameter_list|)
block|{
name|configuration
operator|.
name|setConsumerRequestTimeoutMs
argument_list|(
name|consumerRequestTimeoutMs
argument_list|)
expr_stmt|;
block|}
DECL|method|setReconnectBackoffMs (Integer reconnectBackoffMs)
specifier|public
name|void
name|setReconnectBackoffMs
parameter_list|(
name|Integer
name|reconnectBackoffMs
parameter_list|)
block|{
name|configuration
operator|.
name|setReconnectBackoffMs
argument_list|(
name|reconnectBackoffMs
argument_list|)
expr_stmt|;
block|}
DECL|method|setKerberosRenewJitter (Double kerberosRenewJitter)
specifier|public
name|void
name|setKerberosRenewJitter
parameter_list|(
name|Double
name|kerberosRenewJitter
parameter_list|)
block|{
name|configuration
operator|.
name|setKerberosRenewJitter
argument_list|(
name|kerberosRenewJitter
argument_list|)
expr_stmt|;
block|}
DECL|method|getSslKeystoreLocation ()
specifier|public
name|String
name|getSslKeystoreLocation
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSslKeystoreLocation
argument_list|()
return|;
block|}
DECL|method|getNoOfMetricsSample ()
specifier|public
name|Integer
name|getNoOfMetricsSample
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getNoOfMetricsSample
argument_list|()
return|;
block|}
DECL|method|getSslKeymanagerAlgorithm ()
specifier|public
name|String
name|getSslKeymanagerAlgorithm
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSslKeymanagerAlgorithm
argument_list|()
return|;
block|}
DECL|method|setConsumerId (String consumerId)
specifier|public
name|void
name|setConsumerId
parameter_list|(
name|String
name|consumerId
parameter_list|)
block|{
name|configuration
operator|.
name|setConsumerId
argument_list|(
name|consumerId
argument_list|)
expr_stmt|;
block|}
DECL|method|getClientId ()
specifier|public
name|String
name|getClientId
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getClientId
argument_list|()
return|;
block|}
DECL|method|setFetchWaitMaxMs (Integer fetchWaitMaxMs)
specifier|public
name|void
name|setFetchWaitMaxMs
parameter_list|(
name|Integer
name|fetchWaitMaxMs
parameter_list|)
block|{
name|configuration
operator|.
name|setFetchWaitMaxMs
argument_list|(
name|fetchWaitMaxMs
argument_list|)
expr_stmt|;
block|}
DECL|method|getSslCipherSuites ()
specifier|public
name|String
name|getSslCipherSuites
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSslCipherSuites
argument_list|()
return|;
block|}
DECL|method|setRequestRequiredAcks (String requestRequiredAcks)
specifier|public
name|void
name|setRequestRequiredAcks
parameter_list|(
name|String
name|requestRequiredAcks
parameter_list|)
block|{
name|configuration
operator|.
name|setRequestRequiredAcks
argument_list|(
name|requestRequiredAcks
argument_list|)
expr_stmt|;
block|}
DECL|method|setConnectionMaxIdleMs (Integer connectionMaxIdleMs)
specifier|public
name|void
name|setConnectionMaxIdleMs
parameter_list|(
name|Integer
name|connectionMaxIdleMs
parameter_list|)
block|{
name|configuration
operator|.
name|setConnectionMaxIdleMs
argument_list|(
name|connectionMaxIdleMs
argument_list|)
expr_stmt|;
block|}
DECL|method|getSslTrustmanagerAlgorithm ()
specifier|public
name|String
name|getSslTrustmanagerAlgorithm
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSslTrustmanagerAlgorithm
argument_list|()
return|;
block|}
DECL|method|getSslTruststorePassword ()
specifier|public
name|String
name|getSslTruststorePassword
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSslTruststorePassword
argument_list|()
return|;
block|}
DECL|method|setConsumerStreams (int consumerStreams)
specifier|public
name|void
name|setConsumerStreams
parameter_list|(
name|int
name|consumerStreams
parameter_list|)
block|{
name|configuration
operator|.
name|setConsumerStreams
argument_list|(
name|consumerStreams
argument_list|)
expr_stmt|;
block|}
DECL|method|getSslTruststoreType ()
specifier|public
name|String
name|getSslTruststoreType
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSslTruststoreType
argument_list|()
return|;
block|}
DECL|method|getSecurityProtocol ()
specifier|public
name|String
name|getSecurityProtocol
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSecurityProtocol
argument_list|()
return|;
block|}
DECL|method|setBufferMemorySize (Integer bufferMemorySize)
specifier|public
name|void
name|setBufferMemorySize
parameter_list|(
name|Integer
name|bufferMemorySize
parameter_list|)
block|{
name|configuration
operator|.
name|setBufferMemorySize
argument_list|(
name|bufferMemorySize
argument_list|)
expr_stmt|;
block|}
DECL|method|setSaslKerberosServiceName (String saslKerberosServiceName)
specifier|public
name|void
name|setSaslKerberosServiceName
parameter_list|(
name|String
name|saslKerberosServiceName
parameter_list|)
block|{
name|configuration
operator|.
name|setSaslKerberosServiceName
argument_list|(
name|saslKerberosServiceName
argument_list|)
expr_stmt|;
block|}
DECL|method|setCompressionCodec (String compressionCodec)
specifier|public
name|void
name|setCompressionCodec
parameter_list|(
name|String
name|compressionCodec
parameter_list|)
block|{
name|configuration
operator|.
name|setCompressionCodec
argument_list|(
name|compressionCodec
argument_list|)
expr_stmt|;
block|}
DECL|method|setKerberosBeforeReloginMinTime (Integer kerberosBeforeReloginMinTime)
specifier|public
name|void
name|setKerberosBeforeReloginMinTime
parameter_list|(
name|Integer
name|kerberosBeforeReloginMinTime
parameter_list|)
block|{
name|configuration
operator|.
name|setKerberosBeforeReloginMinTime
argument_list|(
name|kerberosBeforeReloginMinTime
argument_list|)
expr_stmt|;
block|}
DECL|method|getMetadataMaxAgeMs ()
specifier|public
name|Integer
name|getMetadataMaxAgeMs
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getMetadataMaxAgeMs
argument_list|()
return|;
block|}
DECL|method|getSerializerClass ()
specifier|public
name|String
name|getSerializerClass
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSerializerClass
argument_list|()
return|;
block|}
DECL|method|setSslKeymanagerAlgorithm (String sslKeymanagerAlgorithm)
specifier|public
name|void
name|setSslKeymanagerAlgorithm
parameter_list|(
name|String
name|sslKeymanagerAlgorithm
parameter_list|)
block|{
name|configuration
operator|.
name|setSslKeymanagerAlgorithm
argument_list|(
name|sslKeymanagerAlgorithm
argument_list|)
expr_stmt|;
block|}
DECL|method|setMaxRequestSize (Integer maxRequestSize)
specifier|public
name|void
name|setMaxRequestSize
parameter_list|(
name|Integer
name|maxRequestSize
parameter_list|)
block|{
name|configuration
operator|.
name|setMaxRequestSize
argument_list|(
name|maxRequestSize
argument_list|)
expr_stmt|;
block|}
DECL|method|getKerberosRenewJitter ()
specifier|public
name|Double
name|getKerberosRenewJitter
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getKerberosRenewJitter
argument_list|()
return|;
block|}
DECL|method|getPartitionAssignor ()
specifier|public
name|String
name|getPartitionAssignor
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getPartitionAssignor
argument_list|()
return|;
block|}
DECL|method|setSecurityProtocol (String securityProtocol)
specifier|public
name|void
name|setSecurityProtocol
parameter_list|(
name|String
name|securityProtocol
parameter_list|)
block|{
name|configuration
operator|.
name|setSecurityProtocol
argument_list|(
name|securityProtocol
argument_list|)
expr_stmt|;
block|}
DECL|method|setQueueBufferingMaxMessages (Integer queueBufferingMaxMessages)
specifier|public
name|void
name|setQueueBufferingMaxMessages
parameter_list|(
name|Integer
name|queueBufferingMaxMessages
parameter_list|)
block|{
name|configuration
operator|.
name|setQueueBufferingMaxMessages
argument_list|(
name|queueBufferingMaxMessages
argument_list|)
expr_stmt|;
block|}
DECL|method|getSaslKerberosServiceName ()
specifier|public
name|String
name|getSaslKerberosServiceName
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSaslKerberosServiceName
argument_list|()
return|;
block|}
DECL|method|getLingerMs ()
specifier|public
name|Integer
name|getLingerMs
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getLingerMs
argument_list|()
return|;
block|}
DECL|method|getRetries ()
specifier|public
name|Integer
name|getRetries
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getRetries
argument_list|()
return|;
block|}
DECL|method|getMaxPartitionFetchBytes ()
specifier|public
name|Integer
name|getMaxPartitionFetchBytes
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getMaxPartitionFetchBytes
argument_list|()
return|;
block|}
DECL|method|getSslEndpointAlgorithm ()
specifier|public
name|String
name|getSslEndpointAlgorithm
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSslEndpointAlgorithm
argument_list|()
return|;
block|}
DECL|method|getReconnectBackoffMs ()
specifier|public
name|Integer
name|getReconnectBackoffMs
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getReconnectBackoffMs
argument_list|()
return|;
block|}
DECL|method|setLingerMs (Integer lingerMs)
specifier|public
name|void
name|setLingerMs
parameter_list|(
name|Integer
name|lingerMs
parameter_list|)
block|{
name|configuration
operator|.
name|setLingerMs
argument_list|(
name|lingerMs
argument_list|)
expr_stmt|;
block|}
DECL|method|setPartitionAssignor (String partitionAssignor)
specifier|public
name|void
name|setPartitionAssignor
parameter_list|(
name|String
name|partitionAssignor
parameter_list|)
block|{
name|configuration
operator|.
name|setPartitionAssignor
argument_list|(
name|partitionAssignor
argument_list|)
expr_stmt|;
block|}
DECL|method|getRequestTimeoutMs ()
specifier|public
name|Integer
name|getRequestTimeoutMs
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getRequestTimeoutMs
argument_list|()
return|;
block|}
DECL|method|createConsumerProperties ()
specifier|public
name|Properties
name|createConsumerProperties
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|createConsumerProperties
argument_list|()
return|;
block|}
DECL|method|setTopic (String topic)
specifier|public
name|void
name|setTopic
parameter_list|(
name|String
name|topic
parameter_list|)
block|{
name|configuration
operator|.
name|setTopic
argument_list|(
name|topic
argument_list|)
expr_stmt|;
block|}
DECL|method|getFetchWaitMaxMs ()
specifier|public
name|Integer
name|getFetchWaitMaxMs
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getFetchWaitMaxMs
argument_list|()
return|;
block|}
DECL|method|setSessionTimeoutMs (Integer sessionTimeoutMs)
specifier|public
name|void
name|setSessionTimeoutMs
parameter_list|(
name|Integer
name|sessionTimeoutMs
parameter_list|)
block|{
name|configuration
operator|.
name|setSessionTimeoutMs
argument_list|(
name|sessionTimeoutMs
argument_list|)
expr_stmt|;
block|}
DECL|method|setSslEnabledProtocols (String sslEnabledProtocols)
specifier|public
name|void
name|setSslEnabledProtocols
parameter_list|(
name|String
name|sslEnabledProtocols
parameter_list|)
block|{
name|configuration
operator|.
name|setSslEnabledProtocols
argument_list|(
name|sslEnabledProtocols
argument_list|)
expr_stmt|;
block|}
DECL|method|setHeartbeatIntervalMs (Integer heartbeatIntervalMs)
specifier|public
name|void
name|setHeartbeatIntervalMs
parameter_list|(
name|Integer
name|heartbeatIntervalMs
parameter_list|)
block|{
name|configuration
operator|.
name|setHeartbeatIntervalMs
argument_list|(
name|heartbeatIntervalMs
argument_list|)
expr_stmt|;
block|}
DECL|method|setMaxBlockMs (Integer maxBlockMs)
specifier|public
name|void
name|setMaxBlockMs
parameter_list|(
name|Integer
name|maxBlockMs
parameter_list|)
block|{
name|configuration
operator|.
name|setMaxBlockMs
argument_list|(
name|maxBlockMs
argument_list|)
expr_stmt|;
block|}
DECL|method|setSslKeystoreLocation (String sslKeystoreLocation)
specifier|public
name|void
name|setSslKeystoreLocation
parameter_list|(
name|String
name|sslKeystoreLocation
parameter_list|)
block|{
name|configuration
operator|.
name|setSslKeystoreLocation
argument_list|(
name|sslKeystoreLocation
argument_list|)
expr_stmt|;
block|}
DECL|method|setMaxPartitionFetchBytes (Integer maxPartitionFetchBytes)
specifier|public
name|void
name|setMaxPartitionFetchBytes
parameter_list|(
name|Integer
name|maxPartitionFetchBytes
parameter_list|)
block|{
name|configuration
operator|.
name|setMaxPartitionFetchBytes
argument_list|(
name|maxPartitionFetchBytes
argument_list|)
expr_stmt|;
block|}
DECL|method|setPartitioner (String partitioner)
specifier|public
name|void
name|setPartitioner
parameter_list|(
name|String
name|partitioner
parameter_list|)
block|{
name|configuration
operator|.
name|setPartitioner
argument_list|(
name|partitioner
argument_list|)
expr_stmt|;
block|}
DECL|method|getBrokers ()
specifier|public
name|String
name|getBrokers
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getBrokers
argument_list|()
return|;
block|}
DECL|method|getMetricsSampleWindowMs ()
specifier|public
name|Integer
name|getMetricsSampleWindowMs
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getMetricsSampleWindowMs
argument_list|()
return|;
block|}
DECL|method|getSendBufferBytes ()
specifier|public
name|Integer
name|getSendBufferBytes
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSendBufferBytes
argument_list|()
return|;
block|}
DECL|method|getSslProtocol ()
specifier|public
name|String
name|getSslProtocol
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSslProtocol
argument_list|()
return|;
block|}
DECL|method|isSeekToBeginning ()
specifier|public
name|boolean
name|isSeekToBeginning
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|isSeekToBeginning
argument_list|()
return|;
block|}
DECL|method|setSeekToBeginning (boolean seekToBeginning)
specifier|public
name|void
name|setSeekToBeginning
parameter_list|(
name|boolean
name|seekToBeginning
parameter_list|)
block|{
name|configuration
operator|.
name|setSeekToBeginning
argument_list|(
name|seekToBeginning
argument_list|)
expr_stmt|;
block|}
DECL|method|isBridgeEndpoint ()
specifier|public
name|boolean
name|isBridgeEndpoint
parameter_list|()
block|{
return|return
name|bridgeEndpoint
return|;
block|}
comment|/**      * If the option is true, then KafkaProducer will ignore the KafkaConstants.TOPIC header setting of the inbound message.      */
DECL|method|setBridgeEndpoint (boolean bridgeEndpoint)
specifier|public
name|void
name|setBridgeEndpoint
parameter_list|(
name|boolean
name|bridgeEndpoint
parameter_list|)
block|{
name|this
operator|.
name|bridgeEndpoint
operator|=
name|bridgeEndpoint
expr_stmt|;
block|}
DECL|method|setWorkerPool (ExecutorService workerPool)
specifier|public
name|void
name|setWorkerPool
parameter_list|(
name|ExecutorService
name|workerPool
parameter_list|)
block|{
name|configuration
operator|.
name|setWorkerPool
argument_list|(
name|workerPool
argument_list|)
expr_stmt|;
block|}
DECL|method|setWorkerPoolMaxSize (Integer workerPoolMaxSize)
specifier|public
name|void
name|setWorkerPoolMaxSize
parameter_list|(
name|Integer
name|workerPoolMaxSize
parameter_list|)
block|{
name|configuration
operator|.
name|setWorkerPoolMaxSize
argument_list|(
name|workerPoolMaxSize
argument_list|)
expr_stmt|;
block|}
DECL|method|getWorkerPoolMaxSize ()
specifier|public
name|Integer
name|getWorkerPoolMaxSize
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getWorkerPoolMaxSize
argument_list|()
return|;
block|}
DECL|method|getWorkerPoolCoreSize ()
specifier|public
name|Integer
name|getWorkerPoolCoreSize
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getWorkerPoolCoreSize
argument_list|()
return|;
block|}
DECL|method|getWorkerPool ()
specifier|public
name|ExecutorService
name|getWorkerPool
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getWorkerPool
argument_list|()
return|;
block|}
DECL|method|setWorkerPoolCoreSize (Integer workerPoolCoreSize)
specifier|public
name|void
name|setWorkerPoolCoreSize
parameter_list|(
name|Integer
name|workerPoolCoreSize
parameter_list|)
block|{
name|configuration
operator|.
name|setWorkerPoolCoreSize
argument_list|(
name|workerPoolCoreSize
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

