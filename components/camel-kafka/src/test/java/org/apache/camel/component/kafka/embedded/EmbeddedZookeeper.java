begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.kafka.embedded
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|kafka
operator|.
name|embedded
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|zookeeper
operator|.
name|server
operator|.
name|ServerCnxnFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|zookeeper
operator|.
name|server
operator|.
name|ZooKeeperServer
import|;
end_import

begin_class
DECL|class|EmbeddedZookeeper
specifier|public
class|class
name|EmbeddedZookeeper
block|{
DECL|field|port
specifier|private
name|int
name|port
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|tickTime
specifier|private
name|int
name|tickTime
init|=
literal|500
decl_stmt|;
DECL|field|factory
specifier|private
name|ServerCnxnFactory
name|factory
decl_stmt|;
DECL|field|snapshotDir
specifier|private
name|File
name|snapshotDir
decl_stmt|;
DECL|field|logDir
specifier|private
name|File
name|logDir
decl_stmt|;
DECL|method|EmbeddedZookeeper ()
specifier|public
name|EmbeddedZookeeper
parameter_list|()
block|{
name|this
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
DECL|method|EmbeddedZookeeper (int port)
specifier|public
name|EmbeddedZookeeper
parameter_list|(
name|int
name|port
parameter_list|)
block|{
name|this
argument_list|(
name|port
argument_list|,
literal|500
argument_list|)
expr_stmt|;
block|}
DECL|method|EmbeddedZookeeper (int port, int tickTime)
specifier|public
name|EmbeddedZookeeper
parameter_list|(
name|int
name|port
parameter_list|,
name|int
name|tickTime
parameter_list|)
block|{
name|this
operator|.
name|port
operator|=
name|resolvePort
argument_list|(
name|port
argument_list|)
expr_stmt|;
name|this
operator|.
name|tickTime
operator|=
name|tickTime
expr_stmt|;
block|}
DECL|method|resolvePort (int port)
specifier|private
name|int
name|resolvePort
parameter_list|(
name|int
name|port
parameter_list|)
block|{
if|if
condition|(
name|port
operator|==
operator|-
literal|1
condition|)
block|{
return|return
name|TestUtils
operator|.
name|getAvailablePort
argument_list|()
return|;
block|}
return|return
name|port
return|;
block|}
DECL|method|startup ()
specifier|public
name|void
name|startup
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|this
operator|.
name|port
operator|==
operator|-
literal|1
condition|)
block|{
name|this
operator|.
name|port
operator|=
name|TestUtils
operator|.
name|getAvailablePort
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|factory
operator|=
name|ServerCnxnFactory
operator|.
name|createFactory
argument_list|(
operator|new
name|InetSocketAddress
argument_list|(
literal|"localhost"
argument_list|,
name|port
argument_list|)
argument_list|,
literal|1024
argument_list|)
expr_stmt|;
name|this
operator|.
name|snapshotDir
operator|=
name|TestUtils
operator|.
name|constructTempDir
argument_list|(
literal|"embeeded-zk/snapshot"
argument_list|)
expr_stmt|;
name|this
operator|.
name|logDir
operator|=
name|TestUtils
operator|.
name|constructTempDir
argument_list|(
literal|"embeeded-zk/log"
argument_list|)
expr_stmt|;
try|try
block|{
name|factory
operator|.
name|startup
argument_list|(
operator|new
name|ZooKeeperServer
argument_list|(
name|snapshotDir
argument_list|,
name|logDir
argument_list|,
name|tickTime
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|shutdown ()
specifier|public
name|void
name|shutdown
parameter_list|()
block|{
name|factory
operator|.
name|shutdown
argument_list|()
expr_stmt|;
try|try
block|{
name|TestUtils
operator|.
name|deleteFile
argument_list|(
name|snapshotDir
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
comment|// ignore
block|}
try|try
block|{
name|TestUtils
operator|.
name|deleteFile
argument_list|(
name|logDir
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
comment|// ignore
block|}
block|}
DECL|method|getConnection ()
specifier|public
name|String
name|getConnection
parameter_list|()
block|{
return|return
literal|"localhost:"
operator|+
name|port
return|;
block|}
DECL|method|setPort (int port)
specifier|public
name|void
name|setPort
parameter_list|(
name|int
name|port
parameter_list|)
block|{
name|this
operator|.
name|port
operator|=
name|port
expr_stmt|;
block|}
DECL|method|setTickTime (int tickTime)
specifier|public
name|void
name|setTickTime
parameter_list|(
name|int
name|tickTime
parameter_list|)
block|{
name|this
operator|.
name|tickTime
operator|=
name|tickTime
expr_stmt|;
block|}
DECL|method|getPort ()
specifier|public
name|int
name|getPort
parameter_list|()
block|{
return|return
name|port
return|;
block|}
DECL|method|getTickTime ()
specifier|public
name|int
name|getTickTime
parameter_list|()
block|{
return|return
name|tickTime
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
specifier|final
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|(
literal|"EmbeddedZookeeper{"
argument_list|)
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"connection="
argument_list|)
operator|.
name|append
argument_list|(
name|getConnection
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|'}'
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

