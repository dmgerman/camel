begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.component.google.bigquery.unit.sql
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|google
operator|.
name|bigquery
operator|.
name|unit
operator|.
name|sql
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|services
operator|.
name|bigquery
operator|.
name|Bigquery
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|services
operator|.
name|bigquery
operator|.
name|model
operator|.
name|QueryResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|google
operator|.
name|bigquery
operator|.
name|sql
operator|.
name|GoogleBigQuerySQLConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|google
operator|.
name|bigquery
operator|.
name|sql
operator|.
name|GoogleBigQuerySQLEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|google
operator|.
name|bigquery
operator|.
name|sql
operator|.
name|GoogleBigQuerySQLProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
DECL|class|GoogleBigQuerySQLProducerBaseTest
specifier|public
class|class
name|GoogleBigQuerySQLProducerBaseTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|endpoint
specifier|protected
name|GoogleBigQuerySQLEndpoint
name|endpoint
init|=
name|mock
argument_list|(
name|GoogleBigQuerySQLEndpoint
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|mockJobs
specifier|protected
name|Bigquery
operator|.
name|Jobs
name|mockJobs
init|=
name|mock
argument_list|(
name|Bigquery
operator|.
name|Jobs
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|mockQuery
specifier|protected
name|Bigquery
operator|.
name|Jobs
operator|.
name|Query
name|mockQuery
init|=
name|mock
argument_list|(
name|Bigquery
operator|.
name|Jobs
operator|.
name|Query
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|producer
specifier|protected
name|GoogleBigQuerySQLProducer
name|producer
decl_stmt|;
DECL|field|sql
specifier|protected
name|String
name|sql
decl_stmt|;
DECL|field|projectId
specifier|protected
name|String
name|projectId
init|=
literal|"testProjectId"
decl_stmt|;
DECL|field|configuration
specifier|protected
name|GoogleBigQuerySQLConfiguration
name|configuration
init|=
operator|new
name|GoogleBigQuerySQLConfiguration
argument_list|()
decl_stmt|;
DECL|field|bigquery
specifier|protected
name|Bigquery
name|bigquery
decl_stmt|;
DECL|method|createAndStartProducer ()
specifier|protected
name|GoogleBigQuerySQLProducer
name|createAndStartProducer
parameter_list|()
throws|throws
name|Exception
block|{
name|configuration
operator|.
name|setProjectId
argument_list|(
name|projectId
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setQuery
argument_list|(
name|sql
argument_list|)
expr_stmt|;
name|GoogleBigQuerySQLProducer
name|sqlProducer
init|=
operator|new
name|GoogleBigQuerySQLProducer
argument_list|(
name|bigquery
argument_list|,
name|endpoint
argument_list|,
name|configuration
argument_list|)
decl_stmt|;
name|sqlProducer
operator|.
name|start
argument_list|()
expr_stmt|;
return|return
name|sqlProducer
return|;
block|}
DECL|method|setupBigqueryMock ()
specifier|protected
name|void
name|setupBigqueryMock
parameter_list|()
throws|throws
name|Exception
block|{
name|bigquery
operator|=
name|mock
argument_list|(
name|Bigquery
operator|.
name|class
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|bigquery
operator|.
name|jobs
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockJobs
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|bigquery
operator|.
name|jobs
argument_list|()
operator|.
name|query
argument_list|(
name|anyString
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockQuery
argument_list|)
expr_stmt|;
name|QueryResponse
name|mockResponse
init|=
operator|new
name|QueryResponse
argument_list|()
operator|.
name|setNumDmlAffectedRows
argument_list|(
literal|1L
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mockQuery
operator|.
name|execute
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockResponse
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

