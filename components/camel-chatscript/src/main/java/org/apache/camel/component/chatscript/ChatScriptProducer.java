begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.chatscript
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|chatscript
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|DefaultProducer
import|;
end_import

begin_comment
comment|/**  * The ChatScript producer.  */
end_comment

begin_class
DECL|class|ChatScriptProducer
specifier|public
class|class
name|ChatScriptProducer
extends|extends
name|DefaultProducer
block|{
DECL|field|endpoint
specifier|private
name|ChatScriptEndpoint
name|endpoint
decl_stmt|;
DECL|field|mapper
specifier|private
name|ObjectMapper
name|mapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
DECL|method|ChatScriptProducer (ChatScriptEndpoint endpoint)
specifier|public
name|ChatScriptProducer
parameter_list|(
name|ChatScriptEndpoint
name|endpoint
parameter_list|)
block|{
name|super
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
name|this
operator|.
name|endpoint
operator|=
name|endpoint
expr_stmt|;
if|if
condition|(
name|endpoint
operator|.
name|isResetChat
argument_list|()
condition|)
block|{
name|this
operator|.
name|endpoint
operator|.
name|getBot
argument_list|()
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|process (Exchange exchange)
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|ChatScriptMessage
name|inputMessage
init|=
operator|new
name|ChatScriptMessage
argument_list|()
decl_stmt|;
comment|/* use can pass message object as json or the object it self */
if|if
condition|(
operator|!
operator|(
name|body
operator|instanceof
name|ChatScriptMessage
operator|)
condition|)
block|{
name|inputMessage
operator|=
name|buildMessage
argument_list|(
name|body
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|inputMessage
operator|=
operator|(
name|ChatScriptMessage
operator|)
name|body
expr_stmt|;
block|}
name|inputMessage
operator|.
name|setBotName
argument_list|(
name|endpoint
operator|.
name|getBotName
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|response
init|=
name|this
operator|.
name|endpoint
operator|.
name|getBot
argument_list|()
operator|.
name|sendChat
argument_list|(
name|inputMessage
argument_list|)
decl_stmt|;
name|inputMessage
operator|.
name|setReply
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|inputMessage
argument_list|)
expr_stmt|;
block|}
DECL|method|buildMessage (Object body)
specifier|private
name|ChatScriptMessage
name|buildMessage
parameter_list|(
name|Object
name|body
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|body
operator|instanceof
name|String
condition|)
block|{
return|return
name|createMessage
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|body
argument_list|)
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
DECL|method|createMessage (String message)
specifier|private
name|ChatScriptMessage
name|createMessage
parameter_list|(
name|String
name|message
parameter_list|)
throws|throws
name|Exception
block|{
name|ChatScriptMessage
name|ret
init|=
literal|null
decl_stmt|;
try|try
block|{
name|ret
operator|=
name|mapper
operator|.
name|readValue
argument_list|(
name|message
argument_list|,
name|ChatScriptMessage
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Unable to parse the input message. Error Message"
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
return|return
name|ret
return|;
block|}
block|}
end_class

end_unit

