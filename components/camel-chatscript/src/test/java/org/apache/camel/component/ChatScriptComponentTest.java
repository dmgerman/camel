begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|JsonProcessingException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|chatscript
operator|.
name|ChatScriptMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|language
operator|.
name|SimpleExpression
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|ChatScriptComponentTest
specifier|public
class|class
name|ChatScriptComponentTest
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Test
DECL|method|testChatScript ()
specifier|public
name|void
name|testChatScript
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMinimumMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|JsonProcessingException
block|{
name|String
name|g
init|=
literal|"CS"
operator|+
name|Math
operator|.
name|random
argument_list|()
decl_stmt|;
name|ChatScriptMessage
name|rqMsg
init|=
operator|new
name|ChatScriptMessage
argument_list|(
name|g
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|ChatScriptMessage
name|rq2Msg
init|=
operator|new
name|ChatScriptMessage
argument_list|(
name|g
argument_list|,
literal|""
argument_list|,
literal|"Hello"
argument_list|)
decl_stmt|;
name|ChatScriptMessage
name|rq3Msg
init|=
operator|new
name|ChatScriptMessage
argument_list|(
name|g
argument_list|,
literal|""
argument_list|,
literal|"No"
argument_list|)
decl_stmt|;
name|String
name|rq
init|=
literal|""
decl_stmt|;
name|String
name|rq2
init|=
literal|""
decl_stmt|;
name|String
name|rq3
init|=
literal|""
decl_stmt|;
try|try
block|{
name|rq
operator|=
operator|new
name|ObjectMapper
argument_list|()
operator|.
name|writeValueAsString
argument_list|(
name|rqMsg
argument_list|)
expr_stmt|;
name|rq2
operator|=
operator|new
name|ObjectMapper
argument_list|()
operator|.
name|writeValueAsString
argument_list|(
name|rq2Msg
argument_list|)
expr_stmt|;
name|rq3
operator|=
operator|new
name|ObjectMapper
argument_list|()
operator|.
name|writeValueAsString
argument_list|(
name|rq3Msg
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JsonProcessingException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
name|from
argument_list|(
literal|"timer://foo?repeatCount=1"
argument_list|)
operator|.
name|setBody
argument_list|(
operator|new
name|SimpleExpression
argument_list|(
name|rq
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"chatscript://localhost:1024/Harry?resetchat=true"
argument_list|)
operator|.
name|log
argument_list|(
literal|"Response 2 = ${body}"
argument_list|)
operator|.
name|setBody
argument_list|(
operator|new
name|SimpleExpression
argument_list|(
name|rq2
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"chatscript://localhost:1024/Harry"
argument_list|)
operator|.
name|log
argument_list|(
literal|"Response 3 = ${body}"
argument_list|)
operator|.
name|setBody
argument_list|(
operator|new
name|SimpleExpression
argument_list|(
name|rq3
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"chatscript://localhost:1024/Harry"
argument_list|)
operator|.
name|log
argument_list|(
literal|"Response 4 = ${body}"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:result"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

