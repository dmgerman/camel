begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.file.remote
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|file
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|file
operator|.
name|GenericFile
import|;
end_import

begin_comment
comment|/**  * Represents a remote file of some sort of backing object  *  * @param<T> the type of file that these remote endpoints provide  */
end_comment

begin_class
DECL|class|RemoteFile
specifier|public
class|class
name|RemoteFile
parameter_list|<
name|T
parameter_list|>
extends|extends
name|GenericFile
argument_list|<
name|T
argument_list|>
implements|implements
name|Cloneable
block|{
DECL|field|hostname
specifier|private
name|String
name|hostname
decl_stmt|;
DECL|method|getHostname ()
specifier|public
name|String
name|getHostname
parameter_list|()
block|{
return|return
name|hostname
return|;
block|}
DECL|method|setHostname (String hostname)
specifier|public
name|void
name|setHostname
parameter_list|(
name|String
name|hostname
parameter_list|)
block|{
name|this
operator|.
name|hostname
operator|=
name|hostname
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|needToNormalize ()
specifier|public
name|boolean
name|needToNormalize
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
DECL|method|getFileSeparator ()
specifier|public
name|String
name|getFileSeparator
parameter_list|()
block|{
comment|// always use / as separator for FTP
return|return
literal|"/"
return|;
block|}
DECL|method|copyFrom (RemoteFile<T> source)
specifier|public
name|RemoteFile
argument_list|<
name|T
argument_list|>
name|copyFrom
parameter_list|(
name|RemoteFile
argument_list|<
name|T
argument_list|>
name|source
parameter_list|)
block|{
name|RemoteFile
argument_list|<
name|T
argument_list|>
name|result
init|=
operator|(
name|RemoteFile
argument_list|<
name|T
argument_list|>
operator|)
name|source
operator|.
name|clone
argument_list|()
decl_stmt|;
name|result
operator|.
name|setAbsolute
argument_list|(
name|source
operator|.
name|isAbsolute
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|setAbsoluteFileName
argument_list|(
name|source
operator|.
name|getAbsoluteFileName
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|setRelativeFileName
argument_list|(
name|source
operator|.
name|getRelativeFileName
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|setFileName
argument_list|(
name|source
operator|.
name|getFileName
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|setFileLength
argument_list|(
name|source
operator|.
name|getFileLength
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|setLastModified
argument_list|(
name|source
operator|.
name|getLastModified
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|setFile
argument_list|(
name|source
operator|.
name|getFile
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|setBody
argument_list|(
name|source
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|setBinding
argument_list|(
name|source
operator|.
name|getBinding
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|setHostname
argument_list|(
name|source
operator|.
name|getHostname
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

