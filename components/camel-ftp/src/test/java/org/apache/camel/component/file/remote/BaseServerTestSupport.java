begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.file.remote
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|file
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|AvailablePortFinder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit5
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|BeforeEach
import|;
end_import

begin_class
DECL|class|BaseServerTestSupport
specifier|public
class|class
name|BaseServerTestSupport
extends|extends
name|CamelTestSupport
block|{
DECL|field|LS
specifier|protected
specifier|static
specifier|final
name|String
name|LS
init|=
name|System
operator|.
name|lineSeparator
argument_list|()
decl_stmt|;
DECL|field|port
specifier|protected
name|int
name|port
decl_stmt|;
DECL|field|portInitialized
specifier|private
name|boolean
name|portInitialized
decl_stmt|;
annotation|@
name|BeforeEach
DECL|method|initPort ()
specifier|public
name|void
name|initPort
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
operator|!
name|portInitialized
condition|)
block|{
comment|// call only once per test method (Some tests can call this method manually in setUp method,
comment|// which is called before this if setUp method is overridden)
name|port
operator|=
name|AvailablePortFinder
operator|.
name|getNextAvailable
argument_list|()
expr_stmt|;
name|portInitialized
operator|=
literal|true
expr_stmt|;
block|}
block|}
DECL|method|getPort ()
specifier|protected
name|int
name|getPort
parameter_list|()
block|{
return|return
name|port
return|;
block|}
block|}
end_class

end_unit

