begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.file.remote
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|file
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_comment
comment|/**  * @version $Revision: 532790 $  */
end_comment

begin_class
DECL|class|UriConfigurationTest
specifier|public
class|class
name|UriConfigurationTest
extends|extends
name|TestCase
block|{
DECL|field|context
specifier|protected
name|CamelContext
name|context
init|=
operator|new
name|DefaultCamelContext
argument_list|()
decl_stmt|;
DECL|method|testFtpConfigurationAscii ()
specifier|public
name|void
name|testFtpConfigurationAscii
parameter_list|()
throws|throws
name|Exception
block|{
name|Endpoint
name|endpoint
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"ftp://camel-user@localhost:123/tmp?password=secret"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Endpoint not an FtpEndpoint: "
operator|+
name|endpoint
argument_list|,
name|endpoint
operator|instanceof
name|FtpEndpoint
argument_list|)
expr_stmt|;
name|FtpEndpoint
name|ftpEndpoint
init|=
operator|(
name|FtpEndpoint
operator|)
name|endpoint
decl_stmt|;
name|assertEquals
argument_list|(
literal|"localhost"
argument_list|,
name|ftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|ftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"camel-user"
argument_list|,
name|ftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getUsername
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/tmp"
argument_list|,
name|ftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getFile
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|ftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|isDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|ftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|isBinary
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testFtpConfigurationBinary ()
specifier|public
name|void
name|testFtpConfigurationBinary
parameter_list|()
throws|throws
name|Exception
block|{
name|Endpoint
name|endpoint
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"ftp://camel-user@localhost:123/tmp?password=secret&binary=true"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Endpoint not an FtpEndpoint: "
operator|+
name|endpoint
argument_list|,
name|endpoint
operator|instanceof
name|FtpEndpoint
argument_list|)
expr_stmt|;
name|FtpEndpoint
name|ftpEndpoint
init|=
operator|(
name|FtpEndpoint
operator|)
name|endpoint
decl_stmt|;
name|assertEquals
argument_list|(
literal|"localhost"
argument_list|,
name|ftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|ftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"camel-user"
argument_list|,
name|ftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getUsername
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/tmp"
argument_list|,
name|ftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getFile
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|ftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|isDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|ftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|isBinary
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testFtpConfigurationDefaultPort ()
specifier|public
name|void
name|testFtpConfigurationDefaultPort
parameter_list|()
throws|throws
name|Exception
block|{
name|Endpoint
name|endpoint
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"ftp://camel-user@localhost/tmp?password=secret"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Endpoint not an FtpEndpoint: "
operator|+
name|endpoint
argument_list|,
name|endpoint
operator|instanceof
name|FtpEndpoint
argument_list|)
expr_stmt|;
name|FtpEndpoint
name|ftpEndpoint
init|=
operator|(
name|FtpEndpoint
operator|)
name|endpoint
decl_stmt|;
name|assertEquals
argument_list|(
literal|"localhost"
argument_list|,
name|ftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|21
argument_list|,
name|ftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"camel-user"
argument_list|,
name|ftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getUsername
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/tmp"
argument_list|,
name|ftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getFile
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|ftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|isDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|ftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|isBinary
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testSftpConfigurationDefaultPort ()
specifier|public
name|void
name|testSftpConfigurationDefaultPort
parameter_list|()
throws|throws
name|Exception
block|{
name|Endpoint
name|endpoint
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"sftp://camel-user@localhost/tmp?password=secret"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Endpoint not an SftpEndpoint: "
operator|+
name|endpoint
argument_list|,
name|endpoint
operator|instanceof
name|SftpEndpoint
argument_list|)
expr_stmt|;
name|SftpEndpoint
name|sftpEndpoint
init|=
operator|(
name|SftpEndpoint
operator|)
name|endpoint
decl_stmt|;
name|assertEquals
argument_list|(
literal|"localhost"
argument_list|,
name|sftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|22
argument_list|,
name|sftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"camel-user"
argument_list|,
name|sftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getUsername
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/tmp"
argument_list|,
name|sftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getFile
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|sftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|isDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|sftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|isBinary
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testSftpConfigurationDirectory ()
specifier|public
name|void
name|testSftpConfigurationDirectory
parameter_list|()
throws|throws
name|Exception
block|{
name|Endpoint
name|endpoint
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"sftp://camel-user@localhost:123/tmp?password=secret"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Endpoint not an SftpEndpoint: "
operator|+
name|endpoint
argument_list|,
name|endpoint
operator|instanceof
name|SftpEndpoint
argument_list|)
expr_stmt|;
name|SftpEndpoint
name|sftpEndpoint
init|=
operator|(
name|SftpEndpoint
operator|)
name|endpoint
decl_stmt|;
name|assertEquals
argument_list|(
literal|"localhost"
argument_list|,
name|sftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|sftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"camel-user"
argument_list|,
name|sftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getUsername
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/tmp"
argument_list|,
name|sftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getFile
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|sftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|isDirectory
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testSftpConfigurationFile ()
specifier|public
name|void
name|testSftpConfigurationFile
parameter_list|()
throws|throws
name|Exception
block|{
name|Endpoint
name|endpoint
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"sftp://camel-user@localhost:123/tmp/file?password=secret&directory=false"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Endpoint not an SftpEndpoint: "
operator|+
name|endpoint
argument_list|,
name|endpoint
operator|instanceof
name|SftpEndpoint
argument_list|)
expr_stmt|;
name|SftpEndpoint
name|sftpEndpoint
init|=
operator|(
name|SftpEndpoint
operator|)
name|endpoint
decl_stmt|;
name|assertEquals
argument_list|(
literal|"localhost"
argument_list|,
name|sftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|sftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"camel-user"
argument_list|,
name|sftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getUsername
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/tmp/file"
argument_list|,
name|sftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getFile
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|sftpEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|isDirectory
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

