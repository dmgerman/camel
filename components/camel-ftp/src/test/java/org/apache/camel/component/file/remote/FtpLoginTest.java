begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.file.remote
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|file
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Producer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|file
operator|.
name|FileComponent
import|;
end_import

begin_comment
comment|/**  * Unit test for login failure due bad password and login with accepted password  */
end_comment

begin_class
DECL|class|FtpLoginTest
specifier|public
class|class
name|FtpLoginTest
extends|extends
name|FtpServerTestSupport
block|{
DECL|field|port
specifier|private
name|int
name|port
init|=
literal|20077
decl_stmt|;
DECL|field|ftpUrl
specifier|private
name|String
name|ftpUrl
init|=
literal|"ftp://dummy@localhost:"
operator|+
name|port
decl_stmt|;
DECL|method|getPort ()
specifier|public
name|int
name|getPort
parameter_list|()
block|{
return|return
name|port
return|;
block|}
annotation|@
name|Override
DECL|method|setUp ()
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|deleteDirectory
argument_list|(
literal|"./res/home/login"
argument_list|)
expr_stmt|;
block|}
DECL|method|testBadLogin ()
specifier|public
name|void
name|testBadLogin
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|uploadFile
argument_list|(
literal|"dummy"
argument_list|,
literal|"cantremeber"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown a FtpOperationFailedException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FtpOperationFailedException
name|e
parameter_list|)
block|{
comment|// expected
name|assertEquals
argument_list|(
literal|530
argument_list|,
name|e
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// assert file NOT created
name|File
name|file
init|=
operator|new
name|File
argument_list|(
literal|"./res/home/login/report.txt"
argument_list|)
decl_stmt|;
name|file
operator|=
name|file
operator|.
name|getAbsoluteFile
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
literal|"The file should NOT exists"
argument_list|,
name|file
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testGoodLogin ()
specifier|public
name|void
name|testGoodLogin
parameter_list|()
throws|throws
name|Exception
block|{
name|uploadFile
argument_list|(
literal|"scott"
argument_list|,
literal|"tiger"
argument_list|)
expr_stmt|;
comment|// give time for producer
name|Thread
operator|.
name|sleep
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
comment|// assert file created
name|File
name|file
init|=
operator|new
name|File
argument_list|(
literal|"./res/home/login/report.txt"
argument_list|)
decl_stmt|;
name|file
operator|=
name|file
operator|.
name|getAbsoluteFile
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
literal|"The file should exists"
argument_list|,
name|file
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|uploadFile (String username, String password)
specifier|private
name|void
name|uploadFile
parameter_list|(
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|Exception
block|{
name|RemoteFileConfiguration
name|config
init|=
operator|new
name|RemoteFileConfiguration
argument_list|()
decl_stmt|;
name|config
operator|.
name|setBinary
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|config
operator|.
name|setUsername
argument_list|(
name|username
argument_list|)
expr_stmt|;
name|config
operator|.
name|setPassword
argument_list|(
name|password
argument_list|)
expr_stmt|;
name|config
operator|.
name|setDirectory
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|config
operator|.
name|setHost
argument_list|(
literal|"localhost"
argument_list|)
expr_stmt|;
name|config
operator|.
name|setPort
argument_list|(
name|port
argument_list|)
expr_stmt|;
name|config
operator|.
name|setProtocol
argument_list|(
literal|"ftp"
argument_list|)
expr_stmt|;
name|config
operator|.
name|setFile
argument_list|(
literal|"login"
argument_list|)
expr_stmt|;
name|RemoteFileComponent
name|component
init|=
operator|new
name|RemoteFileComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|component
operator|.
name|setConfiguration
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|RemoteFileEndpoint
name|endpoint
init|=
operator|new
name|FtpEndpoint
argument_list|(
name|ftpUrl
argument_list|,
name|component
argument_list|,
name|config
argument_list|)
decl_stmt|;
name|Exchange
name|exchange
init|=
name|endpoint
operator|.
name|createExchange
argument_list|()
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"Hello World from FTPServer"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|FileComponent
operator|.
name|HEADER_FILE_NAME
argument_list|,
literal|"report.txt"
argument_list|)
expr_stmt|;
name|Producer
name|producer
init|=
name|endpoint
operator|.
name|createProducer
argument_list|()
decl_stmt|;
name|producer
operator|.
name|start
argument_list|()
expr_stmt|;
name|producer
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|producer
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

