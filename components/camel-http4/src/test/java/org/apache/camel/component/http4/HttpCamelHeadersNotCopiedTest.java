begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.http4
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|http4
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpStatus
import|;
end_import

begin_class
DECL|class|HttpCamelHeadersNotCopiedTest
specifier|public
class|class
name|HttpCamelHeadersNotCopiedTest
extends|extends
name|HttpCamelHeadersTest
block|{
annotation|@
name|Override
DECL|method|assertHeaders (Map<String, Object> headers)
specifier|protected
name|void
name|assertHeaders
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"Should return "
operator|+
name|HttpStatus
operator|.
name|SC_OK
argument_list|,
name|HttpStatus
operator|.
name|SC_OK
argument_list|,
name|headers
operator|.
name|get
argument_list|(
name|Exchange
operator|.
name|HTTP_RESPONSE_CODE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Should return mocked 12 CL"
argument_list|,
literal|"12"
argument_list|,
name|headers
operator|.
name|get
argument_list|(
literal|"Content-Length"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Should have any Content-Type header propagated"
argument_list|,
name|headers
operator|.
name|get
argument_list|(
literal|"Content-Type"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"Should not copy TestHeader from in to out"
argument_list|,
name|headers
operator|.
name|get
argument_list|(
literal|"TestHeader"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"Should not copy Accept-Language from in to out"
argument_list|,
name|headers
operator|.
name|get
argument_list|(
literal|"Accept-Language"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setupEndpointParams ()
specifier|protected
name|String
name|setupEndpointParams
parameter_list|()
block|{
return|return
literal|"?copyHeaders=false"
return|;
block|}
block|}
end_class

end_unit

