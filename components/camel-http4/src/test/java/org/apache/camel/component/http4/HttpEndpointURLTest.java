begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.http4
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|http4
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ResolveEndpointFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|URISupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|conn
operator|.
name|HttpClientConnectionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|conn
operator|.
name|PoolingHttpClientConnectionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|HttpEndpointURLTest
specifier|public
class|class
name|HttpEndpointURLTest
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Test
DECL|method|testHttpEndpointURLWithIPv6 ()
specifier|public
name|void
name|testHttpEndpointURLWithIPv6
parameter_list|()
block|{
name|HttpEndpoint
name|endpoint
init|=
operator|(
name|HttpEndpoint
operator|)
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"http4://[2a00:8a00:6000:40::1413]:30300/test?test=true"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"http://[2a00:8a00:6000:40::1413]:30300/test?test=true"
argument_list|,
name|endpoint
operator|.
name|getHttpUri
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testHttpEndpointHttpUri ()
specifier|public
name|void
name|testHttpEndpointHttpUri
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpEndpoint
name|http1
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"http4://www.google.com"
argument_list|,
name|HttpEndpoint
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpEndpoint
name|http2
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"https4://www.google.com?test=parameter&proxyAuthHost=myotherproxy&proxyAuthPort=2345"
argument_list|,
name|HttpEndpoint
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpEndpoint
name|http3
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"https4://www.google.com?test=parameter"
argument_list|,
name|HttpEndpoint
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Get a wrong HttpUri of http1"
argument_list|,
literal|"http://www.google.com"
argument_list|,
name|http1
operator|.
name|getHttpUri
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Get a wrong HttpUri of http2"
argument_list|,
literal|"https://www.google.com?test=parameter"
argument_list|,
name|http2
operator|.
name|getHttpUri
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Get a wrong HttpUri of http2 andhttp3"
argument_list|,
name|http2
operator|.
name|getHttpUri
argument_list|()
argument_list|,
name|http3
operator|.
name|getHttpUri
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
comment|// need to catch the exception here
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"https4://http://www.google.com"
argument_list|,
name|HttpEndpoint
operator|.
name|class
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"need to throw an exception here"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ResolveEndpointFailedException
name|ex
parameter_list|)
block|{
name|assertTrue
argument_list|(
literal|"Get a wrong exception message"
argument_list|,
name|ex
operator|.
name|getMessage
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"You have duplicated the http(s) protocol"
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testConnectionManagerFromHttpUri ()
specifier|public
name|void
name|testConnectionManagerFromHttpUri
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpEndpoint
name|http1
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"http4://www.google.com?maxTotalConnections=40&connectionsPerRoute=5"
argument_list|,
name|HttpEndpoint
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpClientConnectionManager
name|connectionManager
init|=
name|http1
operator|.
name|getClientConnectionManager
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Get a wrong type of connection manager"
argument_list|,
name|connectionManager
operator|instanceof
name|PoolingHttpClientConnectionManager
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"resource"
argument_list|)
name|PoolingHttpClientConnectionManager
name|poolManager
init|=
operator|(
name|PoolingHttpClientConnectionManager
operator|)
name|connectionManager
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Get a wrong setting of maxTotalConnections"
argument_list|,
literal|40
argument_list|,
name|poolManager
operator|.
name|getMaxTotal
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Get a wrong setting of connectionsPerRoute"
argument_list|,
literal|5
argument_list|,
name|poolManager
operator|.
name|getDefaultMaxPerRoute
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
comment|// Just for CAMEL-8607
DECL|method|testRawWithUnsafeCharacters ()
specifier|public
name|void
name|testRawWithUnsafeCharacters
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpEndpoint
name|http1
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"http4://www.google.com?authenticationPreemptive=true&authPassword=RAW(foo%bar)&authUsername=RAW(username)"
argument_list|,
name|HttpEndpoint
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"The password is not loggged"
argument_list|,
name|URISupport
operator|.
name|sanitizeUri
argument_list|(
name|http1
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
operator|.
name|indexOf
argument_list|(
literal|"authPassword=xxxxxx"
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

