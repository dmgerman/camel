begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.rest.openapi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|rest
operator|.
name|openapi
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertThat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|rest
operator|.
name|openapi
operator|.
name|RestOpenApiHelper
import|;
end_import

begin_class
DECL|class|RestOpenApiHelperTest
specifier|public
class|class
name|RestOpenApiHelperTest
block|{
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
DECL|method|emptyHostParamsAreNotAllowed ()
specifier|public
name|void
name|emptyHostParamsAreNotAllowed
parameter_list|()
block|{
name|RestOpenApiHelper
operator|.
name|isHostParam
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
DECL|method|nonUriHostParametersAreNotAllowed ()
specifier|public
name|void
name|nonUriHostParametersAreNotAllowed
parameter_list|()
block|{
name|RestOpenApiHelper
operator|.
name|isHostParam
argument_list|(
literal|"carrot"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
DECL|method|nullHostParamsAreNotAllowed ()
specifier|public
name|void
name|nullHostParamsAreNotAllowed
parameter_list|()
block|{
name|RestOpenApiHelper
operator|.
name|isHostParam
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldNiceify ()
specifier|public
name|void
name|shouldNiceify
parameter_list|()
block|{
name|assertThat
argument_list|(
name|RestOpenApiHelper
operator|.
name|isHostParam
argument_list|(
literal|"http://api.example.com"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"http://api.example.com"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldReturnUriParameter ()
specifier|public
name|void
name|shouldReturnUriParameter
parameter_list|()
block|{
name|assertThat
argument_list|(
name|RestOpenApiHelper
operator|.
name|isHostParam
argument_list|(
literal|"http://api.example.com"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"http://api.example.com"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

