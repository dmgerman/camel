begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.pulsar
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pulsar
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|testcontainers
operator|.
name|ContainerAwareTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|testcontainers
operator|.
name|Wait
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testcontainers
operator|.
name|containers
operator|.
name|GenericContainer
import|;
end_import

begin_class
DECL|class|PulsarTestSupport
specifier|public
class|class
name|PulsarTestSupport
extends|extends
name|ContainerAwareTestSupport
block|{
DECL|field|CONTAINER_IMAGE
specifier|public
specifier|static
specifier|final
name|String
name|CONTAINER_IMAGE
init|=
literal|"apachepulsar/pulsar:2.4.0"
decl_stmt|;
DECL|field|CONTAINER_NAME
specifier|public
specifier|static
specifier|final
name|String
name|CONTAINER_NAME
init|=
literal|"pulsar"
decl_stmt|;
DECL|field|BROKER_PORT
specifier|public
specifier|static
specifier|final
name|int
name|BROKER_PORT
init|=
literal|6650
decl_stmt|;
DECL|field|BROKER_HTTP_PORT
specifier|public
specifier|static
specifier|final
name|int
name|BROKER_HTTP_PORT
init|=
literal|8080
decl_stmt|;
DECL|field|WAIT_FOR_ENDPOINT
specifier|public
specifier|static
specifier|final
name|String
name|WAIT_FOR_ENDPOINT
init|=
literal|"/admin/v2/namespaces/public"
decl_stmt|;
annotation|@
name|Override
DECL|method|createContainer ()
specifier|protected
name|GenericContainer
argument_list|<
name|?
argument_list|>
name|createContainer
parameter_list|()
block|{
return|return
name|pulsarContainer
argument_list|()
return|;
block|}
DECL|method|pulsarContainer ()
specifier|public
specifier|static
name|GenericContainer
name|pulsarContainer
parameter_list|()
block|{
return|return
operator|new
name|GenericContainer
argument_list|(
name|CONTAINER_IMAGE
argument_list|)
operator|.
name|withNetworkAliases
argument_list|(
name|CONTAINER_NAME
argument_list|)
operator|.
name|withExposedPorts
argument_list|(
name|BROKER_PORT
argument_list|,
name|BROKER_HTTP_PORT
argument_list|)
operator|.
name|withCommand
argument_list|(
literal|"/pulsar/bin/pulsar"
argument_list|,
literal|"standalone"
argument_list|,
literal|"--no-functions-worker"
argument_list|,
literal|"-nss"
argument_list|)
operator|.
name|waitingFor
argument_list|(
name|Wait
operator|.
name|forHttp
argument_list|(
name|WAIT_FOR_ENDPOINT
argument_list|)
operator|.
name|forStatusCode
argument_list|(
literal|200
argument_list|)
operator|.
name|forPort
argument_list|(
name|BROKER_HTTP_PORT
argument_list|)
argument_list|)
return|;
block|}
DECL|method|getPulsarBrokerUrl ()
specifier|public
name|String
name|getPulsarBrokerUrl
parameter_list|()
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"pulsar://%s:%s"
argument_list|,
name|getContainer
argument_list|(
name|CONTAINER_NAME
argument_list|)
operator|.
name|getContainerIpAddress
argument_list|()
argument_list|,
name|getContainer
argument_list|(
name|CONTAINER_NAME
argument_list|)
operator|.
name|getMappedPort
argument_list|(
name|BROKER_PORT
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

