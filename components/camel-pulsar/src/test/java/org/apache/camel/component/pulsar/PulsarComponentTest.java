begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.pulsar
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pulsar
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pulsar
operator|.
name|utils
operator|.
name|AutoConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pulsar
operator|.
name|utils
operator|.
name|consumers
operator|.
name|SubscriptionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Matchers
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
DECL|class|PulsarComponentTest
specifier|public
class|class
name|PulsarComponentTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|autoConfiguration
specifier|private
name|AutoConfiguration
name|autoConfiguration
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|autoConfiguration
operator|=
name|mock
argument_list|(
name|AutoConfiguration
operator|.
name|class
argument_list|)
expr_stmt|;
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPulsarEndpointConfiguration ()
specifier|public
name|void
name|testPulsarEndpointConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|PulsarComponent
name|component
init|=
operator|new
name|PulsarComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|component
operator|.
name|setAutoConfiguration
argument_list|(
name|autoConfiguration
argument_list|)
expr_stmt|;
name|PulsarEndpoint
name|endpoint
init|=
operator|(
name|PulsarEndpoint
operator|)
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"pulsar://persistent/test/foobar/BatchCreated?numberOfConsumers=10&subscriptionName=batch-created-subscription&subscriptionType=Shared"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPulsarEndpointDefaultConfiguration ()
specifier|public
name|void
name|testPulsarEndpointDefaultConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|PulsarComponent
name|component
init|=
operator|new
name|PulsarComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|PulsarEndpoint
name|endpoint
init|=
operator|(
name|PulsarEndpoint
operator|)
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"pulsar://persistent/test/foobar/BatchCreated"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sole-consumer"
argument_list|,
name|endpoint
operator|.
name|getPulsarConfiguration
argument_list|()
operator|.
name|getConsumerName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cons"
argument_list|,
name|endpoint
operator|.
name|getPulsarConfiguration
argument_list|()
operator|.
name|getConsumerNamePrefix
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|endpoint
operator|.
name|getPulsarConfiguration
argument_list|()
operator|.
name|getConsumerQueueSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|endpoint
operator|.
name|getPulsarConfiguration
argument_list|()
operator|.
name|getNumberOfConsumers
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"default-producer"
argument_list|,
name|endpoint
operator|.
name|getPulsarConfiguration
argument_list|()
operator|.
name|getProducerName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"subs"
argument_list|,
name|endpoint
operator|.
name|getPulsarConfiguration
argument_list|()
operator|.
name|getSubscriptionName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|SubscriptionType
operator|.
name|EXCLUSIVE
argument_list|,
name|endpoint
operator|.
name|getPulsarConfiguration
argument_list|()
operator|.
name|getSubscriptionType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testProducerAutoConfigures ()
specifier|public
name|void
name|testProducerAutoConfigures
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|autoConfiguration
operator|.
name|isAutoConfigurable
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|PulsarComponent
name|component
init|=
operator|new
name|PulsarComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|component
operator|.
name|setAutoConfiguration
argument_list|(
name|autoConfiguration
argument_list|)
expr_stmt|;
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"pulsar://persistent/test/foobar/BatchCreated?numberOfConsumers=10&subscriptionName=batch-created-subscription&subscriptionType=Shared"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|autoConfiguration
argument_list|)
operator|.
name|ensureNameSpaceAndTenant
argument_list|(
name|Matchers
operator|.
name|anyString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

