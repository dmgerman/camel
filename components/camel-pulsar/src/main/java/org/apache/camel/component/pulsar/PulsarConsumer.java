begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.pulsar
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pulsar
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pulsar
operator|.
name|utils
operator|.
name|PulsarUtils
operator|.
name|stopConsumers
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Queue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentLinkedQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pulsar
operator|.
name|utils
operator|.
name|consumers
operator|.
name|ConsumerCreationStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pulsar
operator|.
name|utils
operator|.
name|consumers
operator|.
name|ConsumerCreationStrategyFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|DefaultConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pulsar
operator|.
name|client
operator|.
name|api
operator|.
name|Consumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pulsar
operator|.
name|client
operator|.
name|api
operator|.
name|PulsarClientException
import|;
end_import

begin_class
DECL|class|PulsarConsumer
specifier|public
class|class
name|PulsarConsumer
extends|extends
name|DefaultConsumer
block|{
DECL|field|pulsarEndpoint
specifier|private
specifier|final
name|PulsarEndpoint
name|pulsarEndpoint
decl_stmt|;
DECL|field|consumerCreationStrategyFactory
specifier|private
specifier|final
name|ConsumerCreationStrategyFactory
name|consumerCreationStrategyFactory
decl_stmt|;
DECL|field|pulsarConsumers
specifier|private
name|Queue
argument_list|<
name|Consumer
argument_list|<
name|byte
index|[]
argument_list|>
argument_list|>
name|pulsarConsumers
decl_stmt|;
DECL|method|PulsarConsumer (PulsarEndpoint pulsarEndpoint, Processor processor)
specifier|private
name|PulsarConsumer
parameter_list|(
name|PulsarEndpoint
name|pulsarEndpoint
parameter_list|,
name|Processor
name|processor
parameter_list|)
block|{
name|super
argument_list|(
name|pulsarEndpoint
argument_list|,
name|processor
argument_list|)
expr_stmt|;
name|this
operator|.
name|pulsarEndpoint
operator|=
name|pulsarEndpoint
expr_stmt|;
name|this
operator|.
name|pulsarConsumers
operator|=
operator|new
name|ConcurrentLinkedQueue
argument_list|<>
argument_list|()
expr_stmt|;
name|this
operator|.
name|consumerCreationStrategyFactory
operator|=
name|ConsumerCreationStrategyFactory
operator|.
name|create
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
DECL|method|create (final PulsarEndpoint pulsarEndpoint, final Processor processor)
specifier|public
specifier|static
name|PulsarConsumer
name|create
parameter_list|(
specifier|final
name|PulsarEndpoint
name|pulsarEndpoint
parameter_list|,
specifier|final
name|Processor
name|processor
parameter_list|)
block|{
return|return
operator|new
name|PulsarConsumer
argument_list|(
name|pulsarEndpoint
argument_list|,
name|processor
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|doStart ()
specifier|protected
name|void
name|doStart
parameter_list|()
throws|throws
name|Exception
block|{
name|pulsarConsumers
operator|=
name|stopConsumers
argument_list|(
name|pulsarConsumers
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|Consumer
argument_list|<
name|byte
index|[]
argument_list|>
argument_list|>
name|consumers
init|=
name|createConsumers
argument_list|(
name|pulsarEndpoint
argument_list|,
name|consumerCreationStrategyFactory
argument_list|)
decl_stmt|;
name|pulsarConsumers
operator|.
name|addAll
argument_list|(
name|consumers
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doStop ()
specifier|protected
name|void
name|doStop
parameter_list|()
throws|throws
name|PulsarClientException
block|{
name|pulsarConsumers
operator|=
name|stopConsumers
argument_list|(
name|pulsarConsumers
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doSuspend ()
specifier|protected
name|void
name|doSuspend
parameter_list|()
throws|throws
name|PulsarClientException
block|{
name|pulsarConsumers
operator|=
name|stopConsumers
argument_list|(
name|pulsarConsumers
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doResume ()
specifier|protected
name|void
name|doResume
parameter_list|()
throws|throws
name|Exception
block|{
name|pulsarConsumers
operator|=
name|stopConsumers
argument_list|(
name|pulsarConsumers
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|Consumer
argument_list|<
name|byte
index|[]
argument_list|>
argument_list|>
name|consumers
init|=
name|createConsumers
argument_list|(
name|pulsarEndpoint
argument_list|,
name|consumerCreationStrategyFactory
argument_list|)
decl_stmt|;
name|pulsarConsumers
operator|.
name|addAll
argument_list|(
name|consumers
argument_list|)
expr_stmt|;
block|}
DECL|method|createConsumers (final PulsarEndpoint endpoint, final ConsumerCreationStrategyFactory factory)
specifier|private
name|Collection
argument_list|<
name|Consumer
argument_list|<
name|byte
index|[]
argument_list|>
argument_list|>
name|createConsumers
parameter_list|(
specifier|final
name|PulsarEndpoint
name|endpoint
parameter_list|,
specifier|final
name|ConsumerCreationStrategyFactory
name|factory
parameter_list|)
throws|throws
name|Exception
block|{
name|ConsumerCreationStrategy
name|strategy
init|=
name|factory
operator|.
name|getStrategy
argument_list|(
name|endpoint
operator|.
name|getPulsarConfiguration
argument_list|()
operator|.
name|getSubscriptionType
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|strategy
operator|.
name|create
argument_list|(
name|endpoint
argument_list|)
return|;
block|}
block|}
end_class

end_unit

