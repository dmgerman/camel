begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.pulsar.utils.message
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pulsar
operator|.
name|utils
operator|.
name|message
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|NotSerializableException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ObjectOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RuntimeCamelException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pulsar
operator|.
name|client
operator|.
name|api
operator|.
name|Message
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pulsar
operator|.
name|utils
operator|.
name|message
operator|.
name|PulsarMessageHeaders
operator|.
name|EVENT_TIME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pulsar
operator|.
name|utils
operator|.
name|message
operator|.
name|PulsarMessageHeaders
operator|.
name|KEY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pulsar
operator|.
name|utils
operator|.
name|message
operator|.
name|PulsarMessageHeaders
operator|.
name|KEY_BYTES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pulsar
operator|.
name|utils
operator|.
name|message
operator|.
name|PulsarMessageHeaders
operator|.
name|MESSAGE_ID
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pulsar
operator|.
name|utils
operator|.
name|message
operator|.
name|PulsarMessageHeaders
operator|.
name|PRODUCER_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pulsar
operator|.
name|utils
operator|.
name|message
operator|.
name|PulsarMessageHeaders
operator|.
name|PROPERTIES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pulsar
operator|.
name|utils
operator|.
name|message
operator|.
name|PulsarMessageHeaders
operator|.
name|PUBLISH_TIME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pulsar
operator|.
name|utils
operator|.
name|message
operator|.
name|PulsarMessageHeaders
operator|.
name|SEQUENCE_ID
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pulsar
operator|.
name|utils
operator|.
name|message
operator|.
name|PulsarMessageHeaders
operator|.
name|TOPIC_NAME
import|;
end_import

begin_class
DECL|class|PulsarMessageUtils
specifier|public
specifier|final
class|class
name|PulsarMessageUtils
block|{
DECL|method|PulsarMessageUtils ()
specifier|private
name|PulsarMessageUtils
parameter_list|()
block|{     }
DECL|method|updateExchange (final Message<byte[]> message, final Exchange input)
specifier|public
specifier|static
name|Exchange
name|updateExchange
parameter_list|(
specifier|final
name|Message
argument_list|<
name|byte
index|[]
argument_list|>
name|message
parameter_list|,
specifier|final
name|Exchange
name|input
parameter_list|)
block|{
specifier|final
name|Exchange
name|output
init|=
name|input
operator|.
name|copy
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
name|msg
init|=
name|output
operator|.
name|getIn
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|EVENT_TIME
argument_list|,
name|message
operator|.
name|getEventTime
argument_list|()
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|MESSAGE_ID
argument_list|,
name|message
operator|.
name|getMessageId
argument_list|()
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|KEY
argument_list|,
name|message
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|KEY_BYTES
argument_list|,
name|message
operator|.
name|getKeyBytes
argument_list|()
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|PRODUCER_NAME
argument_list|,
name|message
operator|.
name|getProducerName
argument_list|()
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|TOPIC_NAME
argument_list|,
name|message
operator|.
name|getTopicName
argument_list|()
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|SEQUENCE_ID
argument_list|,
name|message
operator|.
name|getSequenceId
argument_list|()
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|PUBLISH_TIME
argument_list|,
name|message
operator|.
name|getPublishTime
argument_list|()
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|PROPERTIES
argument_list|,
name|message
operator|.
name|getProperties
argument_list|()
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setBody
argument_list|(
name|message
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|output
operator|.
name|setIn
argument_list|(
name|msg
argument_list|)
expr_stmt|;
return|return
name|output
return|;
block|}
DECL|method|updateExchangeWithException (final Exception exception, final Exchange input)
specifier|public
specifier|static
name|Exchange
name|updateExchangeWithException
parameter_list|(
specifier|final
name|Exception
name|exception
parameter_list|,
specifier|final
name|Exchange
name|input
parameter_list|)
block|{
specifier|final
name|Exchange
name|output
init|=
name|input
operator|.
name|copy
argument_list|()
decl_stmt|;
name|output
operator|.
name|setException
argument_list|(
name|exception
argument_list|)
expr_stmt|;
return|return
name|output
return|;
block|}
DECL|method|serialize (final Object body)
specifier|public
specifier|static
name|byte
index|[]
name|serialize
parameter_list|(
specifier|final
name|Object
name|body
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|ByteArrayOutputStream
name|byteArrayOutputStream
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
specifier|final
name|ObjectOutputStream
name|outputStream
init|=
operator|new
name|ObjectOutputStream
argument_list|(
name|byteArrayOutputStream
argument_list|)
decl_stmt|;
try|try
block|{
name|outputStream
operator|.
name|writeObject
argument_list|(
name|body
argument_list|)
expr_stmt|;
return|return
name|byteArrayOutputStream
operator|.
name|toByteArray
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|NotSerializableException
name|exception
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|exception
argument_list|)
throw|;
block|}
finally|finally
block|{
name|byteArrayOutputStream
operator|.
name|close
argument_list|()
expr_stmt|;
name|outputStream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

