begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.processor.cache
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|cache
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|CacheManager
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|Ehcache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cache
operator|.
name|factory
operator|.
name|CacheManagerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|converter
operator|.
name|IOConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_class
DECL|class|CacheBasedTokenReplacer
specifier|public
class|class
name|CacheBasedTokenReplacer
extends|extends
name|CacheValidate
implements|implements
name|Processor
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
specifier|transient
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|CacheBasedTokenReplacer
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|cacheName
specifier|private
name|String
name|cacheName
decl_stmt|;
DECL|field|key
specifier|private
name|String
name|key
decl_stmt|;
DECL|field|replacementToken
specifier|private
name|String
name|replacementToken
decl_stmt|;
DECL|field|cacheManager
specifier|private
name|CacheManager
name|cacheManager
decl_stmt|;
DECL|field|cache
specifier|private
name|Ehcache
name|cache
decl_stmt|;
DECL|method|CacheBasedTokenReplacer (String cacheName, String key, String replacementToken)
specifier|public
name|CacheBasedTokenReplacer
parameter_list|(
name|String
name|cacheName
parameter_list|,
name|String
name|key
parameter_list|,
name|String
name|replacementToken
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
if|if
condition|(
name|cacheName
operator|.
name|contains
argument_list|(
literal|"cache://"
argument_list|)
condition|)
block|{
name|this
operator|.
name|setCacheName
argument_list|(
name|cacheName
operator|.
name|replace
argument_list|(
literal|"cache://"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|setCacheName
argument_list|(
name|cacheName
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|setKey
argument_list|(
name|key
argument_list|)
expr_stmt|;
name|this
operator|.
name|setReplacementToken
argument_list|(
name|replacementToken
argument_list|)
expr_stmt|;
block|}
DECL|method|process (Exchange exchange)
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
comment|// Cache the buffer to the specified Cache against the specified key
name|cacheManager
operator|=
operator|new
name|CacheManagerFactory
argument_list|()
operator|.
name|instantiateCacheManager
argument_list|()
expr_stmt|;
if|if
condition|(
name|isValid
argument_list|(
name|cacheManager
argument_list|,
name|cacheName
argument_list|,
name|key
argument_list|)
condition|)
block|{
name|cache
operator|=
name|cacheManager
operator|.
name|getCache
argument_list|(
name|cacheName
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Replacing Token "
operator|+
name|replacementToken
operator|+
literal|"in Message with value stored against key "
operator|+
name|key
operator|+
literal|" in CacheName "
operator|+
name|cacheName
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"CACHE_KEY"
argument_list|,
name|key
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|InputStream
name|is
init|=
name|exchange
operator|.
name|getContext
argument_list|()
operator|.
name|getTypeConverter
argument_list|()
operator|.
name|convertTo
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
name|body
argument_list|)
decl_stmt|;
name|byte
index|[]
name|buffer
init|=
name|IOConverter
operator|.
name|toBytes
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
comment|//Note: The value in the cache must be a String
name|String
name|cacheValue
init|=
name|exchange
operator|.
name|getContext
argument_list|()
operator|.
name|getTypeConverter
argument_list|()
operator|.
name|convertTo
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|cache
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|getObjectValue
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|replacedTokenString
init|=
operator|new
name|String
argument_list|(
name|buffer
argument_list|)
operator|.
name|replaceAll
argument_list|(
name|replacementToken
argument_list|,
name|cacheValue
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"replacedTokenString = "
operator|+
name|replacedTokenString
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|replacedTokenString
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getCacheName ()
specifier|public
name|String
name|getCacheName
parameter_list|()
block|{
return|return
name|cacheName
return|;
block|}
DECL|method|setCacheName (String cacheName)
specifier|public
name|void
name|setCacheName
parameter_list|(
name|String
name|cacheName
parameter_list|)
block|{
name|this
operator|.
name|cacheName
operator|=
name|cacheName
expr_stmt|;
block|}
DECL|method|getKey ()
specifier|public
name|String
name|getKey
parameter_list|()
block|{
return|return
name|key
return|;
block|}
DECL|method|setKey (String key)
specifier|public
name|void
name|setKey
parameter_list|(
name|String
name|key
parameter_list|)
block|{
name|this
operator|.
name|key
operator|=
name|key
expr_stmt|;
block|}
DECL|method|getReplacementToken ()
specifier|public
name|String
name|getReplacementToken
parameter_list|()
block|{
return|return
name|replacementToken
return|;
block|}
DECL|method|setReplacementToken (String replacementToken)
specifier|public
name|void
name|setReplacementToken
parameter_list|(
name|String
name|replacementToken
parameter_list|)
block|{
name|this
operator|.
name|replacementToken
operator|=
name|replacementToken
expr_stmt|;
block|}
block|}
end_class

end_unit

