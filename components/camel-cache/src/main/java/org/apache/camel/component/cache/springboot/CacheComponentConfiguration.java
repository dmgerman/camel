begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cache.springboot
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cache
operator|.
name|springboot
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cache
operator|.
name|CacheConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cache
operator|.
name|CacheManagerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|context
operator|.
name|properties
operator|.
name|ConfigurationProperties
import|;
end_import

begin_comment
comment|/**  * The cache component enables you to perform caching operations using EHCache  * as the Cache Implementation.  *   * Generated by camel-package-maven-plugin - do not edit this file!  */
end_comment

begin_class
annotation|@
name|ConfigurationProperties
argument_list|(
name|prefix
operator|=
literal|"camel.component.cache"
argument_list|)
DECL|class|CacheComponentConfiguration
specifier|public
class|class
name|CacheComponentConfiguration
block|{
comment|/**      * To use the given CacheManagerFactory for creating the CacheManager. By      * default the DefaultCacheManagerFactory is used.      */
DECL|field|cacheManagerFactory
specifier|private
name|CacheManagerFactory
name|cacheManagerFactory
decl_stmt|;
comment|/**      * Sets the Cache configuration      */
DECL|field|configuration
specifier|private
name|CacheConfiguration
name|configuration
decl_stmt|;
comment|/**      * Sets the location of the ehcache.xml file to load from classpath or file      * system. By default the file is loaded from classpath:ehcache.xml      */
DECL|field|configurationFile
specifier|private
name|String
name|configurationFile
decl_stmt|;
DECL|method|getCacheManagerFactory ()
specifier|public
name|CacheManagerFactory
name|getCacheManagerFactory
parameter_list|()
block|{
return|return
name|cacheManagerFactory
return|;
block|}
DECL|method|setCacheManagerFactory (CacheManagerFactory cacheManagerFactory)
specifier|public
name|void
name|setCacheManagerFactory
parameter_list|(
name|CacheManagerFactory
name|cacheManagerFactory
parameter_list|)
block|{
name|this
operator|.
name|cacheManagerFactory
operator|=
name|cacheManagerFactory
expr_stmt|;
block|}
DECL|method|getConfiguration ()
specifier|public
name|CacheConfiguration
name|getConfiguration
parameter_list|()
block|{
return|return
name|configuration
return|;
block|}
DECL|method|setConfiguration (CacheConfiguration configuration)
specifier|public
name|void
name|setConfiguration
parameter_list|(
name|CacheConfiguration
name|configuration
parameter_list|)
block|{
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
block|}
DECL|method|getConfigurationFile ()
specifier|public
name|String
name|getConfigurationFile
parameter_list|()
block|{
return|return
name|configurationFile
return|;
block|}
DECL|method|setConfigurationFile (String configurationFile)
specifier|public
name|void
name|setConfigurationFile
parameter_list|(
name|String
name|configurationFile
parameter_list|)
block|{
name|this
operator|.
name|configurationFile
operator|=
name|configurationFile
expr_stmt|;
block|}
block|}
end_class

end_unit

