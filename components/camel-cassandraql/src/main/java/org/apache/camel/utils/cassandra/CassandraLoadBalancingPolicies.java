begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.utils.cassandra
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|utils
operator|.
name|cassandra
package|;
end_package

begin_import
import|import
name|com
operator|.
name|datastax
operator|.
name|driver
operator|.
name|core
operator|.
name|policies
operator|.
name|DCAwareRoundRobinPolicy
import|;
end_import

begin_import
import|import
name|com
operator|.
name|datastax
operator|.
name|driver
operator|.
name|core
operator|.
name|policies
operator|.
name|LoadBalancingPolicy
import|;
end_import

begin_import
import|import
name|com
operator|.
name|datastax
operator|.
name|driver
operator|.
name|core
operator|.
name|policies
operator|.
name|RoundRobinPolicy
import|;
end_import

begin_import
import|import
name|com
operator|.
name|datastax
operator|.
name|driver
operator|.
name|core
operator|.
name|policies
operator|.
name|TokenAwarePolicy
import|;
end_import

begin_class
DECL|class|CassandraLoadBalancingPolicies
specifier|public
class|class
name|CassandraLoadBalancingPolicies
block|{
DECL|field|roundRobinPolicy
specifier|public
specifier|final
name|String
name|roundRobinPolicy
init|=
literal|"RoundRobinPolicy"
decl_stmt|;
DECL|field|tokenAwarePolicy
specifier|public
specifier|final
name|String
name|tokenAwarePolicy
init|=
literal|"TokenAwarePolicy"
decl_stmt|;
DECL|field|dcAwareRoundRobinPolicy
specifier|public
specifier|final
name|String
name|dcAwareRoundRobinPolicy
init|=
literal|"DcAwareRoundRobinPolicy"
decl_stmt|;
DECL|method|getLoadBalancingPolicy (String policy)
specifier|public
name|LoadBalancingPolicy
name|getLoadBalancingPolicy
parameter_list|(
name|String
name|policy
parameter_list|)
block|{
name|LoadBalancingPolicy
name|loadBalancingPolicy
init|=
operator|new
name|RoundRobinPolicy
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|policy
condition|)
block|{
case|case
name|roundRobinPolicy
case|:
name|loadBalancingPolicy
operator|=
operator|new
name|RoundRobinPolicy
argument_list|()
expr_stmt|;
break|break;
case|case
name|tokenAwarePolicy
case|:
name|loadBalancingPolicy
operator|=
operator|new
name|TokenAwarePolicy
argument_list|(
operator|new
name|RoundRobinPolicy
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|dcAwareRoundRobinPolicy
case|:
name|loadBalancingPolicy
operator|=
operator|new
name|DCAwareRoundRobinPolicy
argument_list|()
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Cassandra load balancing policy can be "
operator|+
name|roundRobinPolicy
operator|+
literal|" ,"
operator|+
name|tokenAwarePolicy
operator|+
literal|" ,"
operator|+
name|dcAwareRoundRobinPolicy
argument_list|)
throw|;
block|}
return|return
name|loadBalancingPolicy
return|;
block|}
block|}
end_class

end_unit

