begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.dataformat.bindy.model.tab
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|model
operator|.
name|tab
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|annotation
operator|.
name|CsvRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|annotation
operator|.
name|DataField
import|;
end_import

begin_comment
comment|/**  * @version  */
end_comment

begin_class
annotation|@
name|CsvRecord
argument_list|(
name|separator
operator|=
literal|"\t"
argument_list|,
name|crlf
operator|=
literal|"UNIX"
argument_list|)
DECL|class|PurchaseOrder
specifier|public
class|class
name|PurchaseOrder
block|{
annotation|@
name|DataField
argument_list|(
name|pos
operator|=
literal|1
argument_list|)
DECL|field|id
specifier|private
name|int
name|id
decl_stmt|;
annotation|@
name|DataField
argument_list|(
name|pos
operator|=
literal|2
argument_list|)
DECL|field|name
specifier|private
name|String
name|name
decl_stmt|;
annotation|@
name|DataField
argument_list|(
name|pos
operator|=
literal|3
argument_list|)
DECL|field|amount
specifier|private
name|int
name|amount
decl_stmt|;
annotation|@
name|DataField
argument_list|(
name|pos
operator|=
literal|4
argument_list|,
name|required
operator|=
literal|false
argument_list|)
DECL|field|orderText
specifier|private
name|String
name|orderText
decl_stmt|;
annotation|@
name|DataField
argument_list|(
name|pos
operator|=
literal|5
argument_list|,
name|required
operator|=
literal|false
argument_list|)
DECL|field|salesRef
specifier|private
name|String
name|salesRef
decl_stmt|;
annotation|@
name|DataField
argument_list|(
name|pos
operator|=
literal|6
argument_list|,
name|required
operator|=
literal|false
argument_list|)
DECL|field|customerRef
specifier|private
name|String
name|customerRef
decl_stmt|;
DECL|method|getId ()
specifier|public
name|int
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
DECL|method|setId (int id)
specifier|public
name|void
name|setId
parameter_list|(
name|int
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|setName (String name)
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
DECL|method|getAmount ()
specifier|public
name|int
name|getAmount
parameter_list|()
block|{
return|return
name|amount
return|;
block|}
DECL|method|setAmount (int amount)
specifier|public
name|void
name|setAmount
parameter_list|(
name|int
name|amount
parameter_list|)
block|{
name|this
operator|.
name|amount
operator|=
name|amount
expr_stmt|;
block|}
DECL|method|getOrderText ()
specifier|public
name|String
name|getOrderText
parameter_list|()
block|{
return|return
name|orderText
return|;
block|}
DECL|method|setOrderText (String text)
specifier|public
name|void
name|setOrderText
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|this
operator|.
name|orderText
operator|=
name|text
expr_stmt|;
block|}
DECL|method|getSalesRef ()
specifier|public
name|String
name|getSalesRef
parameter_list|()
block|{
return|return
name|salesRef
return|;
block|}
DECL|method|setSalesRef (String salesRef)
specifier|public
name|void
name|setSalesRef
parameter_list|(
name|String
name|salesRef
parameter_list|)
block|{
name|this
operator|.
name|salesRef
operator|=
name|salesRef
expr_stmt|;
block|}
DECL|method|getCustomerRef ()
specifier|public
name|String
name|getCustomerRef
parameter_list|()
block|{
return|return
name|customerRef
return|;
block|}
DECL|method|setCustomerRef (String customerRef)
specifier|public
name|void
name|setCustomerRef
parameter_list|(
name|String
name|customerRef
parameter_list|)
block|{
name|this
operator|.
name|customerRef
operator|=
name|customerRef
expr_stmt|;
block|}
block|}
end_class

end_unit

