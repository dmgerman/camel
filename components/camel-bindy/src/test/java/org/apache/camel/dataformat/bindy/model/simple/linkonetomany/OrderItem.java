begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.dataformat.bindy.model.simple.linkonetomany
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|model
operator|.
name|simple
operator|.
name|linkonetomany
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|annotation
operator|.
name|CsvRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|annotation
operator|.
name|DataField
import|;
end_import

begin_class
annotation|@
name|CsvRecord
argument_list|(
name|separator
operator|=
literal|","
argument_list|,
name|generateHeaderColumns
operator|=
literal|true
argument_list|)
DECL|class|OrderItem
specifier|public
class|class
name|OrderItem
block|{
annotation|@
name|DataField
argument_list|(
name|pos
operator|=
literal|3
argument_list|)
DECL|field|sku
specifier|private
name|String
name|sku
decl_stmt|;
annotation|@
name|DataField
argument_list|(
name|pos
operator|=
literal|4
argument_list|)
DECL|field|quantity
specifier|private
name|int
name|quantity
decl_stmt|;
annotation|@
name|DataField
argument_list|(
name|pos
operator|=
literal|5
argument_list|)
DECL|field|unitPrice
specifier|private
name|int
name|unitPrice
decl_stmt|;
DECL|method|getSku ()
specifier|public
name|String
name|getSku
parameter_list|()
block|{
return|return
name|sku
return|;
block|}
DECL|method|setSku (String sku)
specifier|public
name|void
name|setSku
parameter_list|(
name|String
name|sku
parameter_list|)
block|{
name|this
operator|.
name|sku
operator|=
name|sku
expr_stmt|;
block|}
DECL|method|getQuantity ()
specifier|public
name|int
name|getQuantity
parameter_list|()
block|{
return|return
name|quantity
return|;
block|}
DECL|method|setQuantity (int quantity)
specifier|public
name|void
name|setQuantity
parameter_list|(
name|int
name|quantity
parameter_list|)
block|{
name|this
operator|.
name|quantity
operator|=
name|quantity
expr_stmt|;
block|}
DECL|method|getUnitPrice ()
specifier|public
name|int
name|getUnitPrice
parameter_list|()
block|{
return|return
name|unitPrice
return|;
block|}
DECL|method|setUnitPrice (int unitPrice)
specifier|public
name|void
name|setUnitPrice
parameter_list|(
name|int
name|unitPrice
parameter_list|)
block|{
name|this
operator|.
name|unitPrice
operator|=
name|unitPrice
expr_stmt|;
block|}
block|}
end_class

end_unit

