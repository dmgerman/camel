begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.dataformat.bindy.csv
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|csv
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|AdviceWithRouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|model
operator|.
name|padding
operator|.
name|Unity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameters
import|;
end_import

begin_comment
comment|/**  * @version   */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
DECL|class|BindyPatternLocaleTest
specifier|public
class|class
name|BindyPatternLocaleTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|locale
specifier|private
name|String
name|locale
decl_stmt|;
DECL|method|BindyPatternLocaleTest (String locale)
specifier|public
name|BindyPatternLocaleTest
parameter_list|(
name|String
name|locale
parameter_list|)
block|{
name|this
operator|.
name|locale
operator|=
name|locale
expr_stmt|;
block|}
annotation|@
name|Parameters
DECL|method|localeList ()
specifier|public
specifier|static
name|Collection
argument_list|<
name|String
index|[]
argument_list|>
name|localeList
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
index|[]
block|{
block|{
name|Locale
operator|.
name|CANADA
operator|.
name|getCountry
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|CANADA_FRENCH
operator|.
name|getCountry
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|CHINA
operator|.
name|getCountry
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|CHINESE
operator|.
name|getLanguage
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|ENGLISH
operator|.
name|getLanguage
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|FRANCE
operator|.
name|getCountry
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|FRENCH
operator|.
name|getLanguage
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|GERMAN
operator|.
name|getLanguage
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|GERMANY
operator|.
name|getCountry
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|ITALIAN
operator|.
name|getLanguage
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|ITALY
operator|.
name|getCountry
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|JAPAN
operator|.
name|getCountry
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|JAPANESE
operator|.
name|getLanguage
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|KOREA
operator|.
name|getCountry
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|KOREAN
operator|.
name|getLanguage
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|PRC
operator|.
name|getCountry
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|SIMPLIFIED_CHINESE
operator|.
name|getLanguage
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|TAIWAN
operator|.
name|getCountry
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|TRADITIONAL_CHINESE
operator|.
name|getLanguage
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|UK
operator|.
name|getCountry
argument_list|()
block|}
block|,
block|{
name|Locale
operator|.
name|US
operator|.
name|getCountry
argument_list|()
block|}
block|, 		}
argument_list|)
return|;
block|}
annotation|@
name|Test
DECL|method|testMarshalling ()
specifier|public
name|void
name|testMarshalling
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|getRouteDefinitions
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|adviceWith
argument_list|(
name|context
argument_list|,
operator|new
name|AdviceWithRouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|BindyCsvDataFormat
name|bindy
init|=
operator|new
name|BindyCsvDataFormat
argument_list|(
name|Unity
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// As recommended, when we use @Datafield Pattern we
comment|// must specify the default locale
name|bindy
operator|.
name|setLocale
argument_list|(
name|locale
argument_list|)
expr_stmt|;
comment|// weave the node in the route which has id = marshaller
comment|// and replace it with the following route path
name|weaveById
argument_list|(
literal|"marshaller"
argument_list|)
operator|.
name|replace
argument_list|()
operator|.
name|marshal
argument_list|(
name|bindy
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:marshal"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|mock
operator|.
name|expectedBodiesReceived
argument_list|(
literal|"050,010\r\n"
argument_list|)
expr_stmt|;
name|Unity
name|unity
init|=
operator|new
name|Unity
argument_list|()
decl_stmt|;
name|unity
operator|.
name|setMandant
argument_list|(
literal|50f
argument_list|)
expr_stmt|;
name|unity
operator|.
name|setReceiver
argument_list|(
literal|10f
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
literal|"direct:marshal"
argument_list|,
name|unity
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|BindyCsvDataFormat
name|bindy
init|=
operator|new
name|BindyCsvDataFormat
argument_list|(
name|Unity
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// As recommended, when we use @Datafield Pattern we must
comment|// specify the default locale
name|bindy
operator|.
name|setLocale
argument_list|(
literal|"default"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:marshal"
argument_list|)
operator|.
name|marshal
argument_list|(
name|bindy
argument_list|)
operator|.
name|id
argument_list|(
literal|"marshaller"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:marshal"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

