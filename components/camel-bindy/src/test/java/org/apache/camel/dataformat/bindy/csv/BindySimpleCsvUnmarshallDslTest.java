begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.dataformat.bindy.csv
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|csv
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|CommonBindyTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|annotation
operator|.
name|DirtiesContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_class
annotation|@
name|ContextConfiguration
DECL|class|BindySimpleCsvUnmarshallDslTest
specifier|public
class|class
name|BindySimpleCsvUnmarshallDslTest
extends|extends
name|CommonBindyTest
block|{
annotation|@
name|Test
annotation|@
name|DirtiesContext
DECL|method|testUnMarshallMessage ()
specifier|public
name|void
name|testUnMarshallMessage
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|message
init|=
literal|"01,,Albert,Einstein,ISIN,BE12345678,SELL,,1500,EUR,08-01-2009\r\n"
operator|+
literal|"02,A1,,Preud'Homme,ISIN,XD12345678,BUY,,2500,USD,08-01-2009\r\n"
operator|+
literal|"03,A2,Jacques,,,BE12345678,SELL,,1500,EUR,08-01-2009\r\n"
operator|+
literal|"04,A3,Michel,Platini,,,BUY,,2500,USD,08-01-2009\r\n"
operator|+
literal|"05,A4,Jacques,Dutronc,ISIN,BE12345678,,,1500,EUR,08-01-2009\r\n"
operator|+
literal|"06,A5,Jacques,Brel,ISIN,XD12345678,SELL,Share,,USD,08-01-2009\r\n"
operator|+
literal|"07,A6,Myl"
operator|+
literal|"\uc3a8"
operator|+
literal|"ne,Farmer,ISIN,BE12345678,BUY,1500,,,08-01-2009\r\n"
operator|+
literal|"08,A7,Eva,Longoria,ISIN,XD12345678,SELL,Share,2500,USD,\r\n"
operator|+
literal|",,,D,,BE12345678,SELL,,,,08-01-2009\r\n"
operator|+
literal|",,,D,ISIN,BE12345678,,,,,08-01-2009\r\n"
operator|+
literal|",,,D,ISIN,LU123456789,,,,,\r\n"
operator|+
literal|"10,A8,Pauline,Lafont,ISIN,XD12345678,SELL,Share,2500,USD,08-01-2009\r\n"
operator|+
literal|"10,A9,Louis,Pasteur,ISIN,XD12345678,BUY,Share,2500.45,USD,08-01-2009"
decl_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|result
operator|.
name|expectedMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|result
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
block|}
comment|/*      * @Configuration public static class ContextConfig extends      * SingleRouteCamelConfiguration {      * @Override      * @Bean public RouteBuilder route() { return new RouteBuilder() {      * @Override public void configure() { //      * from("file://src/test/data?noop=true") from(URI_DIRECT_START).unmarshal()      * .bindy(BindyType.Csv,      * "org.apache.camel.dataformat.bindy.model.simple.oneclass")      * .to(URI_MOCK_RESULT); } }; } }      */
block|}
end_class

end_unit

