begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.dataformat.bindy
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|BigDecimalFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|BigDecimalPatternFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|BigIntegerFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|BooleanFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|ByteFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|BytePatternFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|CharacterFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|DateFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|DoubleFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|DoublePatternFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|EnumFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|FloatFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|FloatPatternFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|FormatFactories
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|IntegerFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|IntegerPatternFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|LocalDateFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|LocalDateTimeFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|LocalTimeFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|LongFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|LongPatternFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|ShortFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|ShortPatternFormatFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|bindy
operator|.
name|format
operator|.
name|factories
operator|.
name|StringFormatFactory
import|;
end_import

begin_comment
comment|/**  * Factory to return {@link Format} classes for a given type.  */
end_comment

begin_class
DECL|class|FormatFactory
specifier|public
specifier|final
class|class
name|FormatFactory
block|{
DECL|field|INSTANCE
specifier|private
specifier|static
specifier|final
name|FormatFactory
name|INSTANCE
init|=
operator|new
name|FormatFactory
argument_list|()
decl_stmt|;
static|static
block|{
name|FormatFactories
operator|.
name|getInstance
argument_list|()
operator|.
name|register
argument_list|(
operator|new
name|StringFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|DateFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|BooleanFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|BigIntegerFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|LocalTimeFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|LocalDateTimeFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|LocalDateFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|CharacterFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|EnumFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|BigDecimalFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|BigDecimalPatternFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|DoubleFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|DoublePatternFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|FloatFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|FloatPatternFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|LongFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|LongPatternFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|IntegerFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|IntegerPatternFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|ShortFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|ShortPatternFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|ByteFormatFactory
argument_list|()
argument_list|)
operator|.
name|register
argument_list|(
operator|new
name|BytePatternFormatFactory
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|FormatFactory ()
specifier|private
name|FormatFactory
parameter_list|()
block|{     }
DECL|method|getInstance ()
specifier|public
specifier|static
name|FormatFactory
name|getInstance
parameter_list|()
block|{
return|return
name|INSTANCE
return|;
block|}
DECL|method|doGetFormat (FormattingOptions formattingOptions)
specifier|private
name|Format
argument_list|<
name|?
argument_list|>
name|doGetFormat
parameter_list|(
name|FormattingOptions
name|formattingOptions
parameter_list|)
block|{
return|return
name|FormatFactories
operator|.
name|getInstance
argument_list|()
operator|.
name|build
argument_list|(
name|formattingOptions
argument_list|)
return|;
block|}
comment|/**      * Retrieves the format to use for the given type*      */
DECL|method|getFormat (FormattingOptions formattingOptions)
specifier|public
name|Format
argument_list|<
name|?
argument_list|>
name|getFormat
parameter_list|(
name|FormattingOptions
name|formattingOptions
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|formattingOptions
operator|.
name|getBindyConverter
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|formattingOptions
operator|.
name|getBindyConverter
argument_list|()
operator|.
name|value
argument_list|()
operator|.
name|newInstance
argument_list|()
return|;
block|}
return|return
name|doGetFormat
argument_list|(
name|formattingOptions
argument_list|)
return|;
block|}
block|}
end_class

end_unit

