begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.rest.swagger
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|rest
operator|.
name|swagger
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|models
operator|.
name|Operation
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|models
operator|.
name|Scheme
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|models
operator|.
name|Swagger
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|models
operator|.
name|parameters
operator|.
name|QueryParameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Producer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultClassResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|RestConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
operator|.
name|entry
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
DECL|class|RestSwaggerEndpointTest
specifier|public
class|class
name|RestSwaggerEndpointTest
block|{
DECL|field|componentJsonUri
name|URI
name|componentJsonUri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"component.json"
argument_list|)
decl_stmt|;
DECL|field|endpointUri
name|URI
name|endpointUri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"endpoint.json"
argument_list|)
decl_stmt|;
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
DECL|method|shouldComplainForUnknownOperations ()
specifier|public
name|void
name|shouldComplainForUnknownOperations
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|CamelContext
name|camelContext
init|=
name|mock
argument_list|(
name|CamelContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|camelContext
operator|.
name|getClassResolver
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|DefaultClassResolver
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|RestSwaggerComponent
name|component
init|=
operator|new
name|RestSwaggerComponent
argument_list|(
name|camelContext
argument_list|)
decl_stmt|;
specifier|final
name|RestSwaggerEndpoint
name|endpoint
init|=
operator|new
name|RestSwaggerEndpoint
argument_list|(
literal|"rest-swagger:unknown"
argument_list|,
literal|"unknown"
argument_list|,
name|component
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|createProducer
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldCreateProducers ()
specifier|public
name|void
name|shouldCreateProducers
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|CamelContext
name|camelContext
init|=
name|mock
argument_list|(
name|CamelContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|camelContext
operator|.
name|getClassResolver
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|DefaultClassResolver
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Endpoint
name|endpointDelegate
init|=
name|mock
argument_list|(
name|Endpoint
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|camelContext
operator|.
name|getEndpoint
argument_list|(
literal|"rest:GET:/v2:/pet/{petId}"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|endpointDelegate
argument_list|)
expr_stmt|;
specifier|final
name|Producer
name|delegateProducer
init|=
name|mock
argument_list|(
name|Producer
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|endpointDelegate
operator|.
name|createProducer
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|delegateProducer
argument_list|)
expr_stmt|;
specifier|final
name|RestSwaggerComponent
name|component
init|=
operator|new
name|RestSwaggerComponent
argument_list|(
name|camelContext
argument_list|)
decl_stmt|;
name|component
operator|.
name|setHost
argument_list|(
literal|"http://petstore.swagger.io"
argument_list|)
expr_stmt|;
specifier|final
name|RestSwaggerEndpoint
name|endpoint
init|=
operator|new
name|RestSwaggerEndpoint
argument_list|(
literal|"rest-swagger:getPetById"
argument_list|,
literal|"getPetById"
argument_list|,
name|component
argument_list|)
decl_stmt|;
specifier|final
name|Producer
name|producer
init|=
name|endpoint
operator|.
name|createProducer
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|producer
argument_list|)
operator|.
name|isSameAs
argument_list|(
name|delegateProducer
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldCreateQueryParameterExpressions ()
specifier|public
name|void
name|shouldCreateQueryParameterExpressions
parameter_list|()
block|{
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|queryParameterExpression
argument_list|(
operator|new
name|QueryParameter
argument_list|()
argument_list|)
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|queryParameterExpression
argument_list|(
operator|new
name|QueryParameter
argument_list|()
operator|.
name|name
argument_list|(
literal|"q"
argument_list|)
operator|.
name|required
argument_list|(
literal|true
argument_list|)
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"q={q}"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|queryParameterExpression
argument_list|(
operator|new
name|QueryParameter
argument_list|()
operator|.
name|name
argument_list|(
literal|"q"
argument_list|)
operator|.
name|required
argument_list|(
literal|false
argument_list|)
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"q={q?}"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldDetermineBasePath ()
specifier|public
name|void
name|shouldDetermineBasePath
parameter_list|()
block|{
specifier|final
name|RestConfiguration
name|restConfiguration
init|=
operator|new
name|RestConfiguration
argument_list|()
decl_stmt|;
specifier|final
name|CamelContext
name|camelContext
init|=
name|mock
argument_list|(
name|CamelContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|camelContext
operator|.
name|getRestConfiguration
argument_list|(
literal|"rest-swagger"
argument_list|,
literal|true
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|restConfiguration
argument_list|)
expr_stmt|;
specifier|final
name|Swagger
name|swagger
init|=
operator|new
name|Swagger
argument_list|()
decl_stmt|;
specifier|final
name|RestSwaggerComponent
name|component
init|=
operator|new
name|RestSwaggerComponent
argument_list|()
decl_stmt|;
name|component
operator|.
name|setCamelContext
argument_list|(
name|camelContext
argument_list|)
expr_stmt|;
specifier|final
name|RestSwaggerEndpoint
name|endpoint
init|=
operator|new
name|RestSwaggerEndpoint
argument_list|(
literal|"rest-swagger:getPetById"
argument_list|,
literal|"getPetById"
argument_list|,
name|component
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineBasePath
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|as
argument_list|(
literal|"When no base path is specified on component, endpoint or rest configuration it should default to `/`"
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"/"
argument_list|)
expr_stmt|;
name|restConfiguration
operator|.
name|setContextPath
argument_list|(
literal|"/rest"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineBasePath
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|as
argument_list|(
literal|"When base path is specified in REST configuration and not specified in component the base path should be from the REST configuration"
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"/rest"
argument_list|)
expr_stmt|;
name|swagger
operator|.
name|basePath
argument_list|(
literal|"/specification"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineBasePath
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|as
argument_list|(
literal|"When base path is specified in the specification it should take precedence the one specified in the REST configuration"
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"/specification"
argument_list|)
expr_stmt|;
name|component
operator|.
name|setBasePath
argument_list|(
literal|"/component"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineBasePath
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|as
argument_list|(
literal|"When base path is specified on the component it should take precedence over Swagger specification and REST configuration"
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"/component"
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setBasePath
argument_list|(
literal|"/endpoint"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineBasePath
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|as
argument_list|(
literal|"When base path is specified on the endpoint it should take precedence over any other"
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"/endpoint"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldDetermineEndpointParameters ()
specifier|public
name|void
name|shouldDetermineEndpointParameters
parameter_list|()
block|{
specifier|final
name|CamelContext
name|camelContext
init|=
name|mock
argument_list|(
name|CamelContext
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|RestSwaggerComponent
name|component
init|=
operator|new
name|RestSwaggerComponent
argument_list|()
decl_stmt|;
name|component
operator|.
name|setCamelContext
argument_list|(
name|camelContext
argument_list|)
expr_stmt|;
specifier|final
name|RestSwaggerEndpoint
name|endpoint
init|=
operator|new
name|RestSwaggerEndpoint
argument_list|(
literal|"uri"
argument_list|,
literal|"remaining"
argument_list|,
name|component
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|setHost
argument_list|(
literal|"http://petstore.swagger.io"
argument_list|)
expr_stmt|;
specifier|final
name|Swagger
name|swagger
init|=
operator|new
name|Swagger
argument_list|()
decl_stmt|;
specifier|final
name|Operation
name|operation
init|=
operator|new
name|Operation
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineEndpointParameters
argument_list|(
name|swagger
argument_list|,
name|operation
argument_list|)
argument_list|)
operator|.
name|containsOnly
argument_list|(
name|entry
argument_list|(
literal|"host"
argument_list|,
literal|"http://petstore.swagger.io"
argument_list|)
argument_list|)
expr_stmt|;
name|component
operator|.
name|setComponentName
argument_list|(
literal|"xyz"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineEndpointParameters
argument_list|(
name|swagger
argument_list|,
name|operation
argument_list|)
argument_list|)
operator|.
name|containsOnly
argument_list|(
name|entry
argument_list|(
literal|"host"
argument_list|,
literal|"http://petstore.swagger.io"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"componentName"
argument_list|,
literal|"xyz"
argument_list|)
argument_list|)
expr_stmt|;
name|swagger
operator|.
name|consumes
argument_list|(
literal|"application/json"
argument_list|)
operator|.
name|produces
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineEndpointParameters
argument_list|(
name|swagger
argument_list|,
name|operation
argument_list|)
argument_list|)
operator|.
name|containsOnly
argument_list|(
name|entry
argument_list|(
literal|"host"
argument_list|,
literal|"http://petstore.swagger.io"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"componentName"
argument_list|,
literal|"xyz"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"consumes"
argument_list|,
literal|"application/xml"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"produces"
argument_list|,
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|component
operator|.
name|setProduces
argument_list|(
literal|"application/json"
argument_list|)
expr_stmt|;
name|component
operator|.
name|setConsumes
argument_list|(
literal|"application/atom+xml"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineEndpointParameters
argument_list|(
name|swagger
argument_list|,
name|operation
argument_list|)
argument_list|)
operator|.
name|containsOnly
argument_list|(
name|entry
argument_list|(
literal|"host"
argument_list|,
literal|"http://petstore.swagger.io"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"componentName"
argument_list|,
literal|"xyz"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"consumes"
argument_list|,
literal|"application/atom+xml"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"produces"
argument_list|,
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setProduces
argument_list|(
literal|"application/atom+xml"
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setConsumes
argument_list|(
literal|"application/json"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineEndpointParameters
argument_list|(
name|swagger
argument_list|,
name|operation
argument_list|)
argument_list|)
operator|.
name|containsOnly
argument_list|(
name|entry
argument_list|(
literal|"host"
argument_list|,
literal|"http://petstore.swagger.io"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"componentName"
argument_list|,
literal|"xyz"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"consumes"
argument_list|,
literal|"application/json"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"produces"
argument_list|,
literal|"application/atom+xml"
argument_list|)
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setComponentName
argument_list|(
literal|"zyx"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineEndpointParameters
argument_list|(
name|swagger
argument_list|,
name|operation
argument_list|)
argument_list|)
operator|.
name|containsOnly
argument_list|(
name|entry
argument_list|(
literal|"host"
argument_list|,
literal|"http://petstore.swagger.io"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"componentName"
argument_list|,
literal|"zyx"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"consumes"
argument_list|,
literal|"application/json"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"produces"
argument_list|,
literal|"application/atom+xml"
argument_list|)
argument_list|)
expr_stmt|;
name|operation
operator|.
name|addParameter
argument_list|(
operator|new
name|QueryParameter
argument_list|()
operator|.
name|name
argument_list|(
literal|"q"
argument_list|)
operator|.
name|required
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineEndpointParameters
argument_list|(
name|swagger
argument_list|,
name|operation
argument_list|)
argument_list|)
operator|.
name|containsOnly
argument_list|(
name|entry
argument_list|(
literal|"host"
argument_list|,
literal|"http://petstore.swagger.io"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"componentName"
argument_list|,
literal|"zyx"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"consumes"
argument_list|,
literal|"application/json"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"produces"
argument_list|,
literal|"application/atom+xml"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"queryParameters"
argument_list|,
literal|"q={q}"
argument_list|)
argument_list|)
expr_stmt|;
name|operation
operator|.
name|addParameter
argument_list|(
operator|new
name|QueryParameter
argument_list|()
operator|.
name|name
argument_list|(
literal|"o"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineEndpointParameters
argument_list|(
name|swagger
argument_list|,
name|operation
argument_list|)
argument_list|)
operator|.
name|containsOnly
argument_list|(
name|entry
argument_list|(
literal|"host"
argument_list|,
literal|"http://petstore.swagger.io"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"componentName"
argument_list|,
literal|"zyx"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"consumes"
argument_list|,
literal|"application/json"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"produces"
argument_list|,
literal|"application/atom+xml"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"queryParameters"
argument_list|,
literal|"q={q}&o={o?}"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldDetermineHostFromRestConfiguration ()
specifier|public
name|void
name|shouldDetermineHostFromRestConfiguration
parameter_list|()
block|{
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|hostFrom
argument_list|(
literal|null
argument_list|)
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
specifier|final
name|RestConfiguration
name|configuration
init|=
operator|new
name|RestConfiguration
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|hostFrom
argument_list|(
name|configuration
argument_list|)
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
name|configuration
operator|.
name|setScheme
argument_list|(
literal|"ftp"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|hostFrom
argument_list|(
name|configuration
argument_list|)
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
name|configuration
operator|.
name|setScheme
argument_list|(
literal|"http"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|hostFrom
argument_list|(
name|configuration
argument_list|)
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
name|configuration
operator|.
name|setHost
argument_list|(
literal|"petstore.swagger.io"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|hostFrom
argument_list|(
name|configuration
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"http://petstore.swagger.io"
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setPort
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|hostFrom
argument_list|(
name|configuration
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"http://petstore.swagger.io"
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setPort
argument_list|(
literal|8080
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|hostFrom
argument_list|(
name|configuration
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"http://petstore.swagger.io:8080"
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setScheme
argument_list|(
literal|"https"
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setPort
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|hostFrom
argument_list|(
name|configuration
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"https://petstore.swagger.io:80"
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setPort
argument_list|(
literal|443
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|hostFrom
argument_list|(
name|configuration
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"https://petstore.swagger.io"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldDetermineHostFromSpecification ()
specifier|public
name|void
name|shouldDetermineHostFromSpecification
parameter_list|()
block|{
specifier|final
name|RestSwaggerComponent
name|component
init|=
operator|new
name|RestSwaggerComponent
argument_list|()
decl_stmt|;
specifier|final
name|RestSwaggerEndpoint
name|endpoint
init|=
operator|new
name|RestSwaggerEndpoint
argument_list|(
literal|"rest-swagger:http://some-uri#getPetById"
argument_list|,
literal|"http://some-uri#getPetById"
argument_list|,
name|component
argument_list|)
decl_stmt|;
specifier|final
name|Swagger
name|swagger
init|=
operator|new
name|Swagger
argument_list|()
decl_stmt|;
name|swagger
operator|.
name|host
argument_list|(
literal|"petstore.swagger.io"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineHost
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"http://petstore.swagger.io"
argument_list|)
expr_stmt|;
name|swagger
operator|.
name|schemes
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|Scheme
operator|.
name|HTTPS
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineHost
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"https://petstore.swagger.io"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldDetermineOptions ()
specifier|public
name|void
name|shouldDetermineOptions
parameter_list|()
block|{
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|determineOption
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|determineOption
argument_list|(
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|,
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|determineOption
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"specification"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"specification"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|determineOption
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"specification"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"operation"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"operation"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|determineOption
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"specification"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"operation"
argument_list|)
argument_list|,
literal|"component"
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"component"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|determineOption
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"specification"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"operation"
argument_list|)
argument_list|,
literal|"component"
argument_list|,
literal|"operation"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"operation"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldHonourComponentSpecificationPathProperty ()
specifier|public
name|void
name|shouldHonourComponentSpecificationPathProperty
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|RestSwaggerComponent
name|component
init|=
operator|new
name|RestSwaggerComponent
argument_list|()
decl_stmt|;
name|component
operator|.
name|setSpecificationUri
argument_list|(
name|componentJsonUri
argument_list|)
expr_stmt|;
specifier|final
name|RestSwaggerEndpoint
name|endpoint
init|=
operator|new
name|RestSwaggerEndpoint
argument_list|(
literal|"rest-swagger:getPetById"
argument_list|,
literal|"getPetById"
argument_list|,
name|component
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|getSpecificationUri
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|componentJsonUri
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldHonourEndpointUriPathSpecificationPathProperty ()
specifier|public
name|void
name|shouldHonourEndpointUriPathSpecificationPathProperty
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|RestSwaggerComponent
name|component
init|=
operator|new
name|RestSwaggerComponent
argument_list|()
decl_stmt|;
name|component
operator|.
name|setSpecificationUri
argument_list|(
name|componentJsonUri
argument_list|)
expr_stmt|;
specifier|final
name|RestSwaggerEndpoint
name|endpoint
init|=
operator|new
name|RestSwaggerEndpoint
argument_list|(
literal|"rest-swagger:endpoint.json#getPetById"
argument_list|,
literal|"endpoint.json#getPetById"
argument_list|,
name|component
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|getSpecificationUri
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|endpointUri
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldHonourHostPrecedence ()
specifier|public
name|void
name|shouldHonourHostPrecedence
parameter_list|()
block|{
specifier|final
name|RestConfiguration
name|globalRestConfiguration
init|=
operator|new
name|RestConfiguration
argument_list|()
decl_stmt|;
specifier|final
name|RestConfiguration
name|componentRestConfiguration
init|=
operator|new
name|RestConfiguration
argument_list|()
decl_stmt|;
specifier|final
name|RestConfiguration
name|specificRestConfiguration
init|=
operator|new
name|RestConfiguration
argument_list|()
decl_stmt|;
specifier|final
name|CamelContext
name|camelContext
init|=
name|mock
argument_list|(
name|CamelContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|camelContext
operator|.
name|getRestConfiguration
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|globalRestConfiguration
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|camelContext
operator|.
name|getRestConfiguration
argument_list|(
literal|"rest-swagger"
argument_list|,
literal|false
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|componentRestConfiguration
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|camelContext
operator|.
name|getRestConfiguration
argument_list|(
literal|"petstore"
argument_list|,
literal|false
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|specificRestConfiguration
argument_list|)
expr_stmt|;
specifier|final
name|RestSwaggerComponent
name|component
init|=
operator|new
name|RestSwaggerComponent
argument_list|()
decl_stmt|;
name|component
operator|.
name|setCamelContext
argument_list|(
name|camelContext
argument_list|)
expr_stmt|;
specifier|final
name|RestSwaggerEndpoint
name|endpoint
init|=
operator|new
name|RestSwaggerEndpoint
argument_list|(
literal|"petstore:http://specification-uri#getPetById"
argument_list|,
literal|"http://specification-uri#getPetById"
argument_list|,
name|component
argument_list|)
decl_stmt|;
specifier|final
name|Swagger
name|swagger
init|=
operator|new
name|Swagger
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineHost
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"http://specification-uri"
argument_list|)
expr_stmt|;
name|globalRestConfiguration
operator|.
name|setHost
argument_list|(
literal|"global-rest"
argument_list|)
expr_stmt|;
name|globalRestConfiguration
operator|.
name|setScheme
argument_list|(
literal|"http"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineHost
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"http://global-rest"
argument_list|)
expr_stmt|;
name|globalRestConfiguration
operator|.
name|setHost
argument_list|(
literal|"component-rest"
argument_list|)
expr_stmt|;
name|globalRestConfiguration
operator|.
name|setScheme
argument_list|(
literal|"http"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineHost
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"http://component-rest"
argument_list|)
expr_stmt|;
name|specificRestConfiguration
operator|.
name|setHost
argument_list|(
literal|"specific-rest"
argument_list|)
expr_stmt|;
name|specificRestConfiguration
operator|.
name|setScheme
argument_list|(
literal|"http"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineHost
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"http://specific-rest"
argument_list|)
expr_stmt|;
name|swagger
operator|.
name|host
argument_list|(
literal|"specification"
argument_list|)
operator|.
name|scheme
argument_list|(
name|Scheme
operator|.
name|HTTP
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineHost
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"http://specification"
argument_list|)
expr_stmt|;
name|component
operator|.
name|setHost
argument_list|(
literal|"http://component"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineHost
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"http://component"
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setHost
argument_list|(
literal|"http://endpoint"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|determineHost
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"http://endpoint"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldLoadSwaggerSpecifications ()
specifier|public
name|void
name|shouldLoadSwaggerSpecifications
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|CamelContext
name|camelContext
init|=
name|mock
argument_list|(
name|CamelContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|camelContext
operator|.
name|getClassResolver
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|DefaultClassResolver
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|loadSpecificationFrom
argument_list|(
name|camelContext
argument_list|,
name|RestSwaggerComponent
operator|.
name|DEFAULT_SPECIFICATION_URI
argument_list|)
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldPickBestScheme ()
specifier|public
name|void
name|shouldPickBestScheme
parameter_list|()
block|{
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|pickBestScheme
argument_list|(
literal|"http"
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|Scheme
operator|.
name|HTTP
argument_list|,
name|Scheme
operator|.
name|HTTPS
argument_list|)
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"https"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|pickBestScheme
argument_list|(
literal|"https"
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|Scheme
operator|.
name|HTTP
argument_list|)
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"http"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|pickBestScheme
argument_list|(
literal|"http"
argument_list|,
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"http"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|pickBestScheme
argument_list|(
literal|"http"
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"http"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|pickBestScheme
argument_list|(
literal|null
argument_list|,
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|)
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|RestSwaggerEndpoint
operator|.
name|pickBestScheme
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
DECL|method|shouldRaiseExceptionsForMissingSpecifications ()
specifier|public
name|void
name|shouldRaiseExceptionsForMissingSpecifications
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|CamelContext
name|camelContext
init|=
name|mock
argument_list|(
name|CamelContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|camelContext
operator|.
name|getClassResolver
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|DefaultClassResolver
argument_list|()
argument_list|)
expr_stmt|;
name|RestSwaggerEndpoint
operator|.
name|loadSpecificationFrom
argument_list|(
name|camelContext
argument_list|,
name|URI
operator|.
name|create
argument_list|(
literal|"non-existant.json"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldUseDefaultSpecificationUri ()
specifier|public
name|void
name|shouldUseDefaultSpecificationUri
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|RestSwaggerComponent
name|component
init|=
operator|new
name|RestSwaggerComponent
argument_list|()
decl_stmt|;
specifier|final
name|RestSwaggerEndpoint
name|endpoint
init|=
operator|new
name|RestSwaggerEndpoint
argument_list|(
literal|"rest-swagger:getPetById"
argument_list|,
literal|"getPetById"
argument_list|,
name|component
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|getSpecificationUri
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|RestSwaggerComponent
operator|.
name|DEFAULT_SPECIFICATION_URI
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldUseDefaultSpecificationUriEvenIfHashIsPresent ()
specifier|public
name|void
name|shouldUseDefaultSpecificationUriEvenIfHashIsPresent
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|RestSwaggerComponent
name|component
init|=
operator|new
name|RestSwaggerComponent
argument_list|()
decl_stmt|;
specifier|final
name|RestSwaggerEndpoint
name|endpoint
init|=
operator|new
name|RestSwaggerEndpoint
argument_list|(
literal|"rest-swagger:#getPetById"
argument_list|,
literal|"#getPetById"
argument_list|,
name|component
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|getSpecificationUri
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|RestSwaggerComponent
operator|.
name|DEFAULT_SPECIFICATION_URI
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

