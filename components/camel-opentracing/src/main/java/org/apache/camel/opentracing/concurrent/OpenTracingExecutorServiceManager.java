begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.opentracing.concurrent
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|opentracing
operator|.
name|concurrent
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutorService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ScheduledExecutorService
import|;
end_import

begin_import
import|import
name|io
operator|.
name|opentracing
operator|.
name|contrib
operator|.
name|spanmanager
operator|.
name|SpanManager
import|;
end_import

begin_import
import|import
name|io
operator|.
name|opentracing
operator|.
name|contrib
operator|.
name|spanmanager
operator|.
name|concurrent
operator|.
name|SpanPropagatingExecutorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ExecutorServiceManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ThreadPoolFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ThreadPoolProfile
import|;
end_import

begin_class
DECL|class|OpenTracingExecutorServiceManager
specifier|public
class|class
name|OpenTracingExecutorServiceManager
implements|implements
name|ExecutorServiceManager
block|{
DECL|field|delegate
specifier|private
specifier|final
name|ExecutorServiceManager
name|delegate
decl_stmt|;
DECL|field|spanManager
specifier|private
specifier|final
name|SpanManager
name|spanManager
decl_stmt|;
DECL|method|OpenTracingExecutorServiceManager (ExecutorServiceManager delegate, SpanManager spanManager)
specifier|public
name|OpenTracingExecutorServiceManager
parameter_list|(
name|ExecutorServiceManager
name|delegate
parameter_list|,
name|SpanManager
name|spanManager
parameter_list|)
block|{
name|this
operator|.
name|delegate
operator|=
name|delegate
expr_stmt|;
name|this
operator|.
name|spanManager
operator|=
name|spanManager
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|shutdown ()
specifier|public
name|void
name|shutdown
parameter_list|()
throws|throws
name|Exception
block|{
name|delegate
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|start ()
specifier|public
name|void
name|start
parameter_list|()
throws|throws
name|Exception
block|{
name|delegate
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|stop ()
specifier|public
name|void
name|stop
parameter_list|()
throws|throws
name|Exception
block|{
name|delegate
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|awaitTermination (ExecutorService arg0, long arg1)
specifier|public
name|boolean
name|awaitTermination
parameter_list|(
name|ExecutorService
name|arg0
parameter_list|,
name|long
name|arg1
parameter_list|)
throws|throws
name|InterruptedException
block|{
return|return
name|delegate
operator|.
name|awaitTermination
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getDefaultThreadPoolProfile ()
specifier|public
name|ThreadPoolProfile
name|getDefaultThreadPoolProfile
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|getDefaultThreadPoolProfile
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getShutdownAwaitTermination ()
specifier|public
name|long
name|getShutdownAwaitTermination
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|getShutdownAwaitTermination
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getThreadNamePattern ()
specifier|public
name|String
name|getThreadNamePattern
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|getThreadNamePattern
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getThreadPoolFactory ()
specifier|public
name|ThreadPoolFactory
name|getThreadPoolFactory
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|getThreadPoolFactory
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getThreadPoolProfile (String arg0)
specifier|public
name|ThreadPoolProfile
name|getThreadPoolProfile
parameter_list|(
name|String
name|arg0
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|getThreadPoolProfile
argument_list|(
name|arg0
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newCachedThreadPool (Object arg0, String arg1)
specifier|public
name|ExecutorService
name|newCachedThreadPool
parameter_list|(
name|Object
name|arg0
parameter_list|,
name|String
name|arg1
parameter_list|)
block|{
return|return
operator|new
name|SpanPropagatingExecutorService
argument_list|(
name|delegate
operator|.
name|newCachedThreadPool
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|)
argument_list|,
name|spanManager
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newDefaultScheduledThreadPool (Object arg0, String arg1)
specifier|public
name|ScheduledExecutorService
name|newDefaultScheduledThreadPool
parameter_list|(
name|Object
name|arg0
parameter_list|,
name|String
name|arg1
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|newDefaultScheduledThreadPool
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newDefaultThreadPool (Object arg0, String arg1)
specifier|public
name|ExecutorService
name|newDefaultThreadPool
parameter_list|(
name|Object
name|arg0
parameter_list|,
name|String
name|arg1
parameter_list|)
block|{
return|return
operator|new
name|SpanPropagatingExecutorService
argument_list|(
name|delegate
operator|.
name|newDefaultThreadPool
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|)
argument_list|,
name|spanManager
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newFixedThreadPool (Object arg0, String arg1, int arg2)
specifier|public
name|ExecutorService
name|newFixedThreadPool
parameter_list|(
name|Object
name|arg0
parameter_list|,
name|String
name|arg1
parameter_list|,
name|int
name|arg2
parameter_list|)
block|{
return|return
operator|new
name|SpanPropagatingExecutorService
argument_list|(
name|delegate
operator|.
name|newFixedThreadPool
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|)
argument_list|,
name|spanManager
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newScheduledThreadPool (Object arg0, String arg1, int arg2)
specifier|public
name|ScheduledExecutorService
name|newScheduledThreadPool
parameter_list|(
name|Object
name|arg0
parameter_list|,
name|String
name|arg1
parameter_list|,
name|int
name|arg2
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|newScheduledThreadPool
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newScheduledThreadPool (Object arg0, String arg1, ThreadPoolProfile arg2)
specifier|public
name|ScheduledExecutorService
name|newScheduledThreadPool
parameter_list|(
name|Object
name|arg0
parameter_list|,
name|String
name|arg1
parameter_list|,
name|ThreadPoolProfile
name|arg2
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|newScheduledThreadPool
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newScheduledThreadPool (Object arg0, String arg1, String arg2)
specifier|public
name|ScheduledExecutorService
name|newScheduledThreadPool
parameter_list|(
name|Object
name|arg0
parameter_list|,
name|String
name|arg1
parameter_list|,
name|String
name|arg2
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|newScheduledThreadPool
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newSingleThreadExecutor (Object arg0, String arg1)
specifier|public
name|ExecutorService
name|newSingleThreadExecutor
parameter_list|(
name|Object
name|arg0
parameter_list|,
name|String
name|arg1
parameter_list|)
block|{
return|return
operator|new
name|SpanPropagatingExecutorService
argument_list|(
name|delegate
operator|.
name|newSingleThreadExecutor
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|)
argument_list|,
name|spanManager
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newSingleThreadScheduledExecutor (Object arg0, String arg1)
specifier|public
name|ScheduledExecutorService
name|newSingleThreadScheduledExecutor
parameter_list|(
name|Object
name|arg0
parameter_list|,
name|String
name|arg1
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|newSingleThreadScheduledExecutor
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newThread (String arg0, Runnable arg1)
specifier|public
name|Thread
name|newThread
parameter_list|(
name|String
name|arg0
parameter_list|,
name|Runnable
name|arg1
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|newThread
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newThreadPool (Object arg0, String arg1, ThreadPoolProfile arg2)
specifier|public
name|ExecutorService
name|newThreadPool
parameter_list|(
name|Object
name|arg0
parameter_list|,
name|String
name|arg1
parameter_list|,
name|ThreadPoolProfile
name|arg2
parameter_list|)
block|{
return|return
operator|new
name|SpanPropagatingExecutorService
argument_list|(
name|delegate
operator|.
name|newThreadPool
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|)
argument_list|,
name|spanManager
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newThreadPool (Object arg0, String arg1, String arg2)
specifier|public
name|ExecutorService
name|newThreadPool
parameter_list|(
name|Object
name|arg0
parameter_list|,
name|String
name|arg1
parameter_list|,
name|String
name|arg2
parameter_list|)
block|{
return|return
operator|new
name|SpanPropagatingExecutorService
argument_list|(
name|delegate
operator|.
name|newThreadPool
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|)
argument_list|,
name|spanManager
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|newThreadPool (Object arg0, String arg1, int arg2, int arg3)
specifier|public
name|ExecutorService
name|newThreadPool
parameter_list|(
name|Object
name|arg0
parameter_list|,
name|String
name|arg1
parameter_list|,
name|int
name|arg2
parameter_list|,
name|int
name|arg3
parameter_list|)
block|{
return|return
operator|new
name|SpanPropagatingExecutorService
argument_list|(
name|delegate
operator|.
name|newThreadPool
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|)
argument_list|,
name|spanManager
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|registerThreadPoolProfile (ThreadPoolProfile arg0)
specifier|public
name|void
name|registerThreadPoolProfile
parameter_list|(
name|ThreadPoolProfile
name|arg0
parameter_list|)
block|{
name|delegate
operator|.
name|registerThreadPoolProfile
argument_list|(
name|arg0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|resolveThreadName (String arg0)
specifier|public
name|String
name|resolveThreadName
parameter_list|(
name|String
name|arg0
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|resolveThreadName
argument_list|(
name|arg0
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setDefaultThreadPoolProfile (ThreadPoolProfile arg0)
specifier|public
name|void
name|setDefaultThreadPoolProfile
parameter_list|(
name|ThreadPoolProfile
name|arg0
parameter_list|)
block|{
name|delegate
operator|.
name|setDefaultThreadPoolProfile
argument_list|(
name|arg0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setShutdownAwaitTermination (long arg0)
specifier|public
name|void
name|setShutdownAwaitTermination
parameter_list|(
name|long
name|arg0
parameter_list|)
block|{
name|delegate
operator|.
name|setShutdownAwaitTermination
argument_list|(
name|arg0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setThreadNamePattern (String arg0)
specifier|public
name|void
name|setThreadNamePattern
parameter_list|(
name|String
name|arg0
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
name|delegate
operator|.
name|setThreadNamePattern
argument_list|(
name|arg0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setThreadPoolFactory (ThreadPoolFactory arg0)
specifier|public
name|void
name|setThreadPoolFactory
parameter_list|(
name|ThreadPoolFactory
name|arg0
parameter_list|)
block|{
name|delegate
operator|.
name|setThreadPoolFactory
argument_list|(
name|arg0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|shutdown (ExecutorService arg0)
specifier|public
name|void
name|shutdown
parameter_list|(
name|ExecutorService
name|arg0
parameter_list|)
block|{
name|delegate
operator|.
name|shutdown
argument_list|(
name|arg0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|shutdownGraceful (ExecutorService arg0)
specifier|public
name|void
name|shutdownGraceful
parameter_list|(
name|ExecutorService
name|arg0
parameter_list|)
block|{
name|delegate
operator|.
name|shutdownGraceful
argument_list|(
name|arg0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|shutdownGraceful (ExecutorService arg0, long arg1)
specifier|public
name|void
name|shutdownGraceful
parameter_list|(
name|ExecutorService
name|arg0
parameter_list|,
name|long
name|arg1
parameter_list|)
block|{
name|delegate
operator|.
name|shutdownGraceful
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|shutdownNow (ExecutorService arg0)
specifier|public
name|List
argument_list|<
name|Runnable
argument_list|>
name|shutdownNow
parameter_list|(
name|ExecutorService
name|arg0
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|shutdownNow
argument_list|(
name|arg0
argument_list|)
return|;
block|}
block|}
end_class

end_unit

