begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.opentracing.propagation
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|opentracing
operator|.
name|propagation
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|opentracing
operator|.
name|propagation
operator|.
name|CamelMessagingHeadersInjectAdapter
operator|.
name|JMS_DASH
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_class
DECL|class|CamelMessagingHeadersExtractAdapterTest
specifier|public
class|class
name|CamelMessagingHeadersExtractAdapterTest
block|{
DECL|field|map
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|map
decl_stmt|;
annotation|@
name|Before
DECL|method|before ()
specifier|public
name|void
name|before
parameter_list|()
block|{
name|map
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|noProperties ()
specifier|public
name|void
name|noProperties
parameter_list|()
block|{
name|CamelMessagingHeadersExtractAdapter
name|adapter
init|=
operator|new
name|CamelMessagingHeadersExtractAdapter
argument_list|(
name|map
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Iterator
argument_list|<
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|iterator
init|=
name|adapter
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|iterator
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|oneProperty ()
specifier|public
name|void
name|oneProperty
parameter_list|()
block|{
name|map
operator|.
name|put
argument_list|(
literal|"key"
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|CamelMessagingHeadersExtractAdapter
name|adapter
init|=
operator|new
name|CamelMessagingHeadersExtractAdapter
argument_list|(
name|map
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Iterator
argument_list|<
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|iterator
init|=
name|adapter
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
init|=
name|iterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"key"
argument_list|,
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"value"
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|propertyWithDash ()
specifier|public
name|void
name|propertyWithDash
parameter_list|()
block|{
name|map
operator|.
name|put
argument_list|(
name|JMS_DASH
operator|+
literal|"key"
operator|+
name|JMS_DASH
operator|+
literal|"1"
operator|+
name|JMS_DASH
argument_list|,
literal|"value1"
argument_list|)
expr_stmt|;
name|CamelMessagingHeadersExtractAdapter
name|adapter
init|=
operator|new
name|CamelMessagingHeadersExtractAdapter
argument_list|(
name|map
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Iterator
argument_list|<
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|iterator
init|=
name|adapter
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
init|=
name|iterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"-key-1-"
argument_list|,
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"value1"
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|propertyWithoutDashEncoding ()
specifier|public
name|void
name|propertyWithoutDashEncoding
parameter_list|()
block|{
name|map
operator|.
name|put
argument_list|(
name|JMS_DASH
operator|+
literal|"key"
operator|+
name|JMS_DASH
operator|+
literal|"1"
operator|+
name|JMS_DASH
argument_list|,
literal|"value1"
argument_list|)
expr_stmt|;
name|CamelMessagingHeadersExtractAdapter
name|adapter
init|=
operator|new
name|CamelMessagingHeadersExtractAdapter
argument_list|(
name|map
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|Iterator
argument_list|<
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|iterator
init|=
name|adapter
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
init|=
name|iterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|JMS_DASH
operator|+
literal|"key"
operator|+
name|JMS_DASH
operator|+
literal|"1"
operator|+
name|JMS_DASH
argument_list|,
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

