begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.netty4
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|netty4
package|;
end_package

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|channel
operator|.
name|EventLoopGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|BindToRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|NettyUseSharedWorkerThreadPoolTest
specifier|public
class|class
name|NettyUseSharedWorkerThreadPoolTest
extends|extends
name|BaseNettyTest
block|{
annotation|@
name|BindToRegistry
argument_list|(
literal|"sharedServerPool"
argument_list|)
DECL|field|sharedWorkerServerGroup
specifier|private
name|EventLoopGroup
name|sharedWorkerServerGroup
init|=
operator|new
name|NettyWorkerPoolBuilder
argument_list|()
operator|.
name|withWorkerCount
argument_list|(
literal|2
argument_list|)
operator|.
name|withName
argument_list|(
literal|"NettyServer"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
annotation|@
name|BindToRegistry
argument_list|(
literal|"sharedClientPool"
argument_list|)
DECL|field|sharedWorkerClientGroup
specifier|private
name|EventLoopGroup
name|sharedWorkerClientGroup
init|=
operator|new
name|NettyWorkerPoolBuilder
argument_list|()
operator|.
name|withWorkerCount
argument_list|(
literal|3
argument_list|)
operator|.
name|withName
argument_list|(
literal|"NettyClient"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|port
specifier|private
name|int
name|port
decl_stmt|;
DECL|field|port2
specifier|private
name|int
name|port2
decl_stmt|;
DECL|field|port3
specifier|private
name|int
name|port3
decl_stmt|;
annotation|@
name|Override
DECL|method|useJmx ()
specifier|protected
name|boolean
name|useJmx
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Test
DECL|method|testSharedThreadPool ()
specifier|public
name|void
name|testSharedThreadPool
parameter_list|()
throws|throws
name|Exception
block|{
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
operator|.
name|expectedMessageCount
argument_list|(
literal|30
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|String
name|reply
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"netty4:tcp://localhost:"
operator|+
name|port
operator|+
literal|"?textline=true&sync=true&workerGroup=#sharedClientPool"
argument_list|,
literal|"Hello World"
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Bye World"
argument_list|,
name|reply
argument_list|)
expr_stmt|;
name|reply
operator|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"netty4:tcp://localhost:"
operator|+
name|port2
operator|+
literal|"?textline=true&sync=true&workerGroup=#sharedClientPool"
argument_list|,
literal|"Hello Camel"
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Hi Camel"
argument_list|,
name|reply
argument_list|)
expr_stmt|;
name|reply
operator|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"netty4:tcp://localhost:"
operator|+
name|port3
operator|+
literal|"?textline=true&sync=true&workerGroup=#sharedClientPool"
argument_list|,
literal|"Hello Claus"
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Hej Claus"
argument_list|,
name|reply
argument_list|)
expr_stmt|;
block|}
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
name|sharedWorkerServerGroup
operator|.
name|shutdownGracefully
argument_list|()
operator|.
name|sync
argument_list|()
operator|.
name|await
argument_list|()
expr_stmt|;
name|sharedWorkerClientGroup
operator|.
name|shutdownGracefully
argument_list|()
operator|.
name|sync
argument_list|()
operator|.
name|await
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|port
operator|=
name|getPort
argument_list|()
expr_stmt|;
name|port2
operator|=
name|getNextPort
argument_list|()
expr_stmt|;
name|port3
operator|=
name|getNextPort
argument_list|()
expr_stmt|;
name|from
argument_list|(
literal|"netty4:tcp://localhost:"
operator|+
name|port
operator|+
literal|"?textline=true&sync=true&workerGroup=#sharedServerPool&usingExecutorService=false"
argument_list|)
operator|.
name|validate
argument_list|(
name|body
argument_list|()
operator|.
name|isInstanceOf
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"log:result"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:result"
argument_list|)
operator|.
name|transform
argument_list|(
name|body
argument_list|()
operator|.
name|regexReplaceAll
argument_list|(
literal|"Hello"
argument_list|,
literal|"Bye"
argument_list|)
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"netty4:tcp://localhost:"
operator|+
name|port2
operator|+
literal|"?textline=true&sync=true&workerGroup=#sharedServerPool&usingExecutorService=false"
argument_list|)
operator|.
name|validate
argument_list|(
name|body
argument_list|()
operator|.
name|isInstanceOf
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"log:result"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:result"
argument_list|)
operator|.
name|transform
argument_list|(
name|body
argument_list|()
operator|.
name|regexReplaceAll
argument_list|(
literal|"Hello"
argument_list|,
literal|"Hi"
argument_list|)
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"netty4:tcp://localhost:"
operator|+
name|port3
operator|+
literal|"?textline=true&sync=true&workerGroup=#sharedServerPool&usingExecutorService=false"
argument_list|)
operator|.
name|validate
argument_list|(
name|body
argument_list|()
operator|.
name|isInstanceOf
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"log:result"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:result"
argument_list|)
operator|.
name|transform
argument_list|(
name|body
argument_list|()
operator|.
name|regexReplaceAll
argument_list|(
literal|"Hello"
argument_list|,
literal|"Hej"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

