begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.netty4
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|netty4
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|buffer
operator|.
name|ByteBuf
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|channel
operator|.
name|ChannelHandler
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|channel
operator|.
name|ChannelHandlerContext
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|DelimiterBasedFrameDecoder
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|LengthFieldBasedFrameDecoder
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|serialization
operator|.
name|ClassResolvers
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|serialization
operator|.
name|ObjectDecoder
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|serialization
operator|.
name|ObjectEncoder
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|string
operator|.
name|StringDecoder
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|string
operator|.
name|StringEncoder
import|;
end_import

begin_comment
comment|/**  * Helper to create commonly used {@link ChannelHandlerFactory} instances.  */
end_comment

begin_class
DECL|class|ChannelHandlerFactories
specifier|public
specifier|final
class|class
name|ChannelHandlerFactories
block|{
DECL|method|ChannelHandlerFactories ()
specifier|private
name|ChannelHandlerFactories
parameter_list|()
block|{     }
DECL|method|newStringEncoder (Charset charset)
specifier|public
specifier|static
name|ChannelHandlerFactory
name|newStringEncoder
parameter_list|(
name|Charset
name|charset
parameter_list|)
block|{
return|return
operator|new
name|ShareableChannelHandlerFactory
argument_list|(
operator|new
name|StringEncoder
argument_list|(
name|charset
argument_list|)
argument_list|)
return|;
block|}
DECL|method|newStringDecoder (Charset charset)
specifier|public
specifier|static
name|ChannelHandlerFactory
name|newStringDecoder
parameter_list|(
name|Charset
name|charset
parameter_list|)
block|{
return|return
operator|new
name|ShareableChannelHandlerFactory
argument_list|(
operator|new
name|StringDecoder
argument_list|(
name|charset
argument_list|)
argument_list|)
return|;
block|}
DECL|method|newObjectDecoder ()
specifier|public
specifier|static
name|ChannelHandlerFactory
name|newObjectDecoder
parameter_list|()
block|{
return|return
operator|new
name|ChannelHandlerFactory
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ChannelHandler
name|newChannelHandler
parameter_list|()
block|{
return|return
operator|new
name|ObjectDecoder
argument_list|(
name|ClassResolvers
operator|.
name|weakCachingResolver
argument_list|(
literal|null
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|handlerAdded
parameter_list|(
name|ChannelHandlerContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|void
name|handlerRemoved
parameter_list|(
name|ChannelHandlerContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|void
name|exceptionCaught
parameter_list|(
name|ChannelHandlerContext
name|ctx
parameter_list|,
name|Throwable
name|cause
parameter_list|)
throws|throws
name|Exception
block|{
comment|// TODO Auto-generated method stub
block|}
block|}
return|;
block|}
DECL|method|newObjectEncoder ()
specifier|public
specifier|static
name|ChannelHandlerFactory
name|newObjectEncoder
parameter_list|()
block|{
return|return
operator|new
name|ShareableChannelHandlerFactory
argument_list|(
operator|new
name|ObjectEncoder
argument_list|()
argument_list|)
return|;
block|}
DECL|method|newDelimiterBasedFrameDecoder (final int maxFrameLength, final ByteBuf[] delimiters)
specifier|public
specifier|static
name|ChannelHandlerFactory
name|newDelimiterBasedFrameDecoder
parameter_list|(
specifier|final
name|int
name|maxFrameLength
parameter_list|,
specifier|final
name|ByteBuf
index|[]
name|delimiters
parameter_list|)
block|{
return|return
operator|new
name|ChannelHandlerFactory
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ChannelHandler
name|newChannelHandler
parameter_list|()
block|{
return|return
operator|new
name|DelimiterBasedFrameDecoder
argument_list|(
name|maxFrameLength
argument_list|,
literal|true
argument_list|,
name|delimiters
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|handlerAdded
parameter_list|(
name|ChannelHandlerContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|void
name|handlerRemoved
parameter_list|(
name|ChannelHandlerContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|void
name|exceptionCaught
parameter_list|(
name|ChannelHandlerContext
name|ctx
parameter_list|,
name|Throwable
name|cause
parameter_list|)
throws|throws
name|Exception
block|{
comment|// TODO Auto-generated method stub
block|}
block|}
return|;
block|}
DECL|method|newLengthFieldBasedFrameDecoder (final int maxFrameLength, final int lengthFieldOffset, final int lengthFieldLength, final int lengthAdjustment, final int initialBytesToStrip)
specifier|public
specifier|static
name|ChannelHandlerFactory
name|newLengthFieldBasedFrameDecoder
parameter_list|(
specifier|final
name|int
name|maxFrameLength
parameter_list|,
specifier|final
name|int
name|lengthFieldOffset
parameter_list|,
specifier|final
name|int
name|lengthFieldLength
parameter_list|,
specifier|final
name|int
name|lengthAdjustment
parameter_list|,
specifier|final
name|int
name|initialBytesToStrip
parameter_list|)
block|{
return|return
operator|new
name|ChannelHandlerFactory
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ChannelHandler
name|newChannelHandler
parameter_list|()
block|{
return|return
operator|new
name|LengthFieldBasedFrameDecoder
argument_list|(
name|maxFrameLength
argument_list|,
name|lengthFieldOffset
argument_list|,
name|lengthFieldLength
argument_list|,
name|lengthAdjustment
argument_list|,
name|initialBytesToStrip
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|handlerAdded
parameter_list|(
name|ChannelHandlerContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|void
name|handlerRemoved
parameter_list|(
name|ChannelHandlerContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|void
name|exceptionCaught
parameter_list|(
name|ChannelHandlerContext
name|ctx
parameter_list|,
name|Throwable
name|cause
parameter_list|)
throws|throws
name|Exception
block|{
comment|// TODO Auto-generated method stub
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

