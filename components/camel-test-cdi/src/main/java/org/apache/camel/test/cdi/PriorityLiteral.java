begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.test.cdi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|cdi
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|util
operator|.
name|AnnotationLiteral
import|;
end_import

begin_class
DECL|class|PriorityLiteral
specifier|final
class|class
name|PriorityLiteral
extends|extends
name|AnnotationLiteral
argument_list|<
name|Priority
argument_list|>
implements|implements
name|Priority
block|{
DECL|field|priority
specifier|private
specifier|final
name|int
name|priority
decl_stmt|;
DECL|method|PriorityLiteral (int priority)
specifier|private
name|PriorityLiteral
parameter_list|(
name|int
name|priority
parameter_list|)
block|{
name|this
operator|.
name|priority
operator|=
name|priority
expr_stmt|;
block|}
DECL|method|of (int priority)
specifier|static
name|PriorityLiteral
name|of
parameter_list|(
name|int
name|priority
parameter_list|)
block|{
return|return
operator|new
name|PriorityLiteral
argument_list|(
name|priority
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|value ()
specifier|public
name|int
name|value
parameter_list|()
block|{
return|return
name|priority
return|;
block|}
block|}
end_class

end_unit

