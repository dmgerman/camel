begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.hipchat
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hipchat
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|EndpointInject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ProducerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|ProtocolVersion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|CloseableHttpResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|message
operator|.
name|BasicStatusLine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|invocation
operator|.
name|InvocationOnMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|stubbing
operator|.
name|Answer
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
DECL|class|HipchatComponentMultipleUsersTest
specifier|public
class|class
name|HipchatComponentMultipleUsersTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|closeableHttpResponse
specifier|private
name|CloseableHttpResponse
name|closeableHttpResponse
init|=
name|mock
argument_list|(
name|CloseableHttpResponse
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|EndpointInject
argument_list|(
name|uri
operator|=
literal|"hipchat:http://api.hipchat.com?authToken=anything&consumeUsers=@AUser"
argument_list|)
DECL|field|template
specifier|private
name|ProducerTemplate
name|template
decl_stmt|;
annotation|@
name|EndpointInject
argument_list|(
name|uri
operator|=
literal|"mock:result"
argument_list|)
DECL|field|result
specifier|private
name|MockEndpoint
name|result
decl_stmt|;
annotation|@
name|Test
DECL|method|sendInOnlyMultipleUsers ()
specifier|public
name|void
name|sendInOnlyMultipleUsers
parameter_list|()
throws|throws
name|Exception
block|{
name|result
operator|.
name|expectedMessageCount
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|result
operator|.
name|expectedHeaderValuesReceivedInAnyOrder
argument_list|(
name|HipchatConstants
operator|.
name|FROM_USER
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"@AUser"
block|,
literal|"@BUser"
block|}
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|String
name|expectedResponse
init|=
literal|"{\n"
operator|+
literal|"  \"items\" : [\n"
operator|+
literal|"    {\n"
operator|+
literal|"      \"date\" : \"2015-01-19T22:07:11.030740+00:00\",\n"
operator|+
literal|"      \"from\" : {\n"
operator|+
literal|"        \"id\" : 1647095,\n"
operator|+
literal|"        \"links\" : {\n"
operator|+
literal|"          \"self\" : \"https://api.hipchat.com/v2/user/1647095\"\n"
operator|+
literal|"        },\n"
operator|+
literal|"        \"mention_name\" : \"notifier\",\n"
operator|+
literal|"        \"name\" : \"Message Notifier\"\n"
operator|+
literal|"      },\n"
operator|+
literal|"      \"id\" : \"6567c6f7-7c1b-43cf-bed0-792b1d092919\",\n"
operator|+
literal|"      \"mentions\" : [ ],\n"
operator|+
literal|"      \"message\" : \"Unit test Alert\",\n"
operator|+
literal|"      \"type\" : \"message\"\n"
operator|+
literal|"    }\n"
operator|+
literal|"  ],\n"
operator|+
literal|"  \"links\" : {\n"
operator|+
literal|"    \"self\" : \"https://api.hipchat.com/v2/user/%40ShreyasPurohit/history/latest\"\n"
operator|+
literal|"  },\n"
operator|+
literal|"  \"maxResults\" : 1,\n"
operator|+
literal|"  \"startIndex\" : 0\n"
operator|+
literal|"}"
decl_stmt|;
name|HttpEntity
name|mockHttpEntity
init|=
name|mock
argument_list|(
name|HttpEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mockHttpEntity
operator|.
name|getContent
argument_list|()
argument_list|)
operator|.
name|thenAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|answer
parameter_list|(
name|InvocationOnMock
name|invocationOnMock
parameter_list|)
throws|throws
name|Throwable
block|{
return|return
operator|new
name|ByteArrayInputStream
argument_list|(
name|expectedResponse
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|closeableHttpResponse
operator|.
name|getEntity
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpEntity
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|closeableHttpResponse
operator|.
name|getStatusLine
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|BasicStatusLine
argument_list|(
operator|new
name|ProtocolVersion
argument_list|(
literal|"HTTP"
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|200
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createCamelContext ()
specifier|protected
name|CamelContext
name|createCamelContext
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|CamelContext
name|context
init|=
name|super
operator|.
name|createCamelContext
argument_list|()
decl_stmt|;
name|HipchatComponent
name|component
init|=
operator|new
name|HipchatComponent
argument_list|(
name|context
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|HipchatEndpoint
name|getHipchatEndpoint
parameter_list|(
name|String
name|uri
parameter_list|)
block|{
return|return
operator|new
name|HipchatEPSuccessTestSupport
argument_list|(
name|uri
argument_list|,
name|this
argument_list|,
literal|null
argument_list|,
name|closeableHttpResponse
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
literal|"hipchat"
argument_list|,
name|component
argument_list|)
expr_stmt|;
return|return
name|context
return|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"hipchat:http://api.hipchat.com?authToken=anything&consumeUsers=@AUser,@BUser"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:result"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

