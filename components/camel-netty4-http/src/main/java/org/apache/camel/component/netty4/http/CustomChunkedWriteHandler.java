begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.netty4.http
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|netty4
operator|.
name|http
package|;
end_package

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|channel
operator|.
name|ChannelHandlerContext
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|channel
operator|.
name|ChannelPromise
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|stream
operator|.
name|ChunkedWriteHandler
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:zfeng@redhat.com">Zheng Feng</a>  */
end_comment

begin_class
DECL|class|CustomChunkedWriteHandler
specifier|public
class|class
name|CustomChunkedWriteHandler
extends|extends
name|ChunkedWriteHandler
block|{
annotation|@
name|Override
DECL|method|write (ChannelHandlerContext ctx, Object msg, ChannelPromise promise)
specifier|public
name|void
name|write
parameter_list|(
name|ChannelHandlerContext
name|ctx
parameter_list|,
name|Object
name|msg
parameter_list|,
name|ChannelPromise
name|promise
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|msg
operator|instanceof
name|ChunkedHttpRequest
condition|)
block|{
name|super
operator|.
name|write
argument_list|(
name|ctx
argument_list|,
operator|(
operator|(
name|ChunkedHttpRequest
operator|)
name|msg
operator|)
operator|.
name|getRequest
argument_list|()
argument_list|,
name|promise
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|msg
operator|instanceof
name|ChunkedHttpResponse
condition|)
block|{
name|super
operator|.
name|write
argument_list|(
name|ctx
argument_list|,
operator|(
operator|(
name|ChunkedHttpResponse
operator|)
name|msg
operator|)
operator|.
name|getResponse
argument_list|()
argument_list|,
name|promise
argument_list|)
expr_stmt|;
block|}
name|super
operator|.
name|write
argument_list|(
name|ctx
argument_list|,
name|msg
argument_list|,
name|promise
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

