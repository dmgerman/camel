begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.netty4.http
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|netty4
operator|.
name|http
package|;
end_package

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|buffer
operator|.
name|ByteBufAllocator
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|channel
operator|.
name|ChannelHandlerContext
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|DefaultHttpResponse
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|HttpChunkedInput
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|HttpContent
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|stream
operator|.
name|ChunkedInput
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|stream
operator|.
name|ChunkedStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:zfeng@redhat.com">Zheng Feng</a>  */
end_comment

begin_class
DECL|class|ChunkedHttpResponse
specifier|public
class|class
name|ChunkedHttpResponse
extends|extends
name|DefaultHttpResponse
implements|implements
name|ChunkedInput
argument_list|<
name|HttpContent
argument_list|>
block|{
DECL|field|input
specifier|private
name|HttpChunkedInput
name|input
decl_stmt|;
DECL|method|ChunkedHttpResponse (InputStream in, DefaultHttpResponse response)
specifier|public
name|ChunkedHttpResponse
parameter_list|(
name|InputStream
name|in
parameter_list|,
name|DefaultHttpResponse
name|response
parameter_list|)
block|{
name|super
argument_list|(
name|response
operator|.
name|protocolVersion
argument_list|()
argument_list|,
name|response
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|input
operator|=
operator|new
name|HttpChunkedInput
argument_list|(
operator|new
name|ChunkedStream
argument_list|(
name|in
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getResponse ()
specifier|public
name|DefaultHttpResponse
name|getResponse
parameter_list|()
block|{
return|return
operator|new
name|DefaultHttpResponse
argument_list|(
name|this
operator|.
name|protocolVersion
argument_list|()
argument_list|,
name|this
operator|.
name|status
argument_list|()
argument_list|,
name|this
operator|.
name|headers
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|isEndOfInput ()
specifier|public
name|boolean
name|isEndOfInput
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|input
operator|.
name|isEndOfInput
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|Exception
block|{
name|input
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|Deprecated
DECL|method|readChunk (ChannelHandlerContext channelHandlerContext)
specifier|public
name|HttpContent
name|readChunk
parameter_list|(
name|ChannelHandlerContext
name|channelHandlerContext
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|input
operator|.
name|readChunk
argument_list|(
name|channelHandlerContext
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|readChunk (ByteBufAllocator byteBufAllocator)
specifier|public
name|HttpContent
name|readChunk
parameter_list|(
name|ByteBufAllocator
name|byteBufAllocator
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|input
operator|.
name|readChunk
argument_list|(
name|byteBufAllocator
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|length ()
specifier|public
name|long
name|length
parameter_list|()
block|{
return|return
name|input
operator|.
name|length
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|progress ()
specifier|public
name|long
name|progress
parameter_list|()
block|{
return|return
name|input
operator|.
name|progress
argument_list|()
return|;
block|}
block|}
end_class

end_unit

