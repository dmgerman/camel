begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.netty4.http.handlers
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|netty4
operator|.
name|http
operator|.
name|handlers
package|;
end_package

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|channel
operator|.
name|ChannelHandlerContext
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http
operator|.
name|FullHttpResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|netty4
operator|.
name|handlers
operator|.
name|ClientChannelHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|netty4
operator|.
name|http
operator|.
name|NettyHttpProducer
import|;
end_import

begin_comment
comment|/**  * Netty HTTP {@link org.apache.camel.component.netty.handlers.ClientChannelHandler} that handles the response combing  * back from the HTTP server, called by this client.  *  */
end_comment

begin_class
DECL|class|HttpClientChannelHandler
specifier|public
class|class
name|HttpClientChannelHandler
extends|extends
name|ClientChannelHandler
block|{
DECL|field|producer
specifier|private
specifier|final
name|NettyHttpProducer
name|producer
decl_stmt|;
DECL|method|HttpClientChannelHandler (NettyHttpProducer producer)
specifier|public
name|HttpClientChannelHandler
parameter_list|(
name|NettyHttpProducer
name|producer
parameter_list|)
block|{
name|super
argument_list|(
name|producer
argument_list|)
expr_stmt|;
name|this
operator|.
name|producer
operator|=
name|producer
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getResponseMessage (Exchange exchange, ChannelHandlerContext ctx, Object message)
specifier|protected
name|Message
name|getResponseMessage
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|ChannelHandlerContext
name|ctx
parameter_list|,
name|Object
name|message
parameter_list|)
throws|throws
name|Exception
block|{
name|FullHttpResponse
name|response
init|=
operator|(
name|FullHttpResponse
operator|)
name|message
decl_stmt|;
comment|// use the binding
return|return
name|producer
operator|.
name|getEndpoint
argument_list|()
operator|.
name|getNettyHttpBinding
argument_list|()
operator|.
name|toCamelMessage
argument_list|(
name|response
argument_list|,
name|exchange
argument_list|,
name|producer
operator|.
name|getConfiguration
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

