begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.smpp
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|smpp
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ExchangePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|SimpleRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsmpp
operator|.
name|extra
operator|.
name|SessionState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsmpp
operator|.
name|session
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsmpp
operator|.
name|session
operator|.
name|SessionStateListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertSame
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * JUnit test class for<code>org.apache.camel.component.smpp.SmppComponent</code>  *   * @version   */
end_comment

begin_class
DECL|class|SmppComponentTest
specifier|public
class|class
name|SmppComponentTest
block|{
DECL|field|component
specifier|private
name|SmppComponent
name|component
decl_stmt|;
DECL|field|context
specifier|private
name|DefaultCamelContext
name|context
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|context
operator|=
operator|new
name|DefaultCamelContext
argument_list|()
expr_stmt|;
name|component
operator|=
operator|new
name|SmppComponent
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|constructorSmppConfigurationShouldSetTheConfiguration ()
specifier|public
name|void
name|constructorSmppConfigurationShouldSetTheConfiguration
parameter_list|()
block|{
name|SmppConfiguration
name|configuration
init|=
operator|new
name|SmppConfiguration
argument_list|()
decl_stmt|;
name|component
operator|=
operator|new
name|SmppComponent
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|configuration
argument_list|,
name|component
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|constructorCamelContextShouldSetTheContext ()
specifier|public
name|void
name|constructorCamelContextShouldSetTheContext
parameter_list|()
block|{
name|CamelContext
name|context
init|=
operator|new
name|DefaultCamelContext
argument_list|()
decl_stmt|;
name|component
operator|=
operator|new
name|SmppComponent
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
argument_list|,
name|component
operator|.
name|getCamelContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createEndpointStringStringMapShouldReturnASmppEndpoint ()
specifier|public
name|void
name|createEndpointStringStringMapShouldReturnASmppEndpoint
parameter_list|()
throws|throws
name|Exception
block|{
name|CamelContext
name|context
init|=
operator|new
name|DefaultCamelContext
argument_list|()
decl_stmt|;
name|component
operator|=
operator|new
name|SmppComponent
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parameters
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|parameters
operator|.
name|put
argument_list|(
literal|"password"
argument_list|,
literal|"secret"
argument_list|)
expr_stmt|;
name|Endpoint
name|endpoint
init|=
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"smpp://smppclient@localhost:2775"
argument_list|,
literal|"?password=secret"
argument_list|,
name|parameters
argument_list|)
decl_stmt|;
name|SmppEndpoint
name|smppEndpoint
init|=
operator|(
name|SmppEndpoint
operator|)
name|endpoint
decl_stmt|;
name|assertEquals
argument_list|(
literal|"smpp://smppclient@localhost:2775"
argument_list|,
name|smppEndpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"smpp://smppclient@localhost:2775"
argument_list|,
name|smppEndpoint
operator|.
name|getEndpointKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|component
argument_list|,
name|smppEndpoint
operator|.
name|getComponent
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|smppEndpoint
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"secret"
argument_list|,
name|smppEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"smpp://smppclient@localhost:2775"
argument_list|,
name|smppEndpoint
operator|.
name|getConnectionString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ExchangePattern
operator|.
name|InOnly
argument_list|,
name|smppEndpoint
operator|.
name|getExchangePattern
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|smppEndpoint
operator|.
name|getBinding
argument_list|()
operator|instanceof
name|SmppBinding
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|smppEndpoint
operator|.
name|getCamelContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createEndpointStringStringMapShouldReturnASmppsEndpoint ()
specifier|public
name|void
name|createEndpointStringStringMapShouldReturnASmppsEndpoint
parameter_list|()
throws|throws
name|Exception
block|{
name|CamelContext
name|context
init|=
operator|new
name|DefaultCamelContext
argument_list|()
decl_stmt|;
name|component
operator|=
operator|new
name|SmppComponent
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parameters
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|parameters
operator|.
name|put
argument_list|(
literal|"password"
argument_list|,
literal|"secret"
argument_list|)
expr_stmt|;
name|Endpoint
name|endpoint
init|=
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"smpps://smppclient@localhost:2775"
argument_list|,
literal|"?password=secret"
argument_list|,
name|parameters
argument_list|)
decl_stmt|;
name|SmppEndpoint
name|smppEndpoint
init|=
operator|(
name|SmppEndpoint
operator|)
name|endpoint
decl_stmt|;
name|assertEquals
argument_list|(
literal|"smpps://smppclient@localhost:2775"
argument_list|,
name|smppEndpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"smpps://smppclient@localhost:2775"
argument_list|,
name|smppEndpoint
operator|.
name|getEndpointKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|component
argument_list|,
name|smppEndpoint
operator|.
name|getComponent
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|smppEndpoint
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"secret"
argument_list|,
name|smppEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"smpps://smppclient@localhost:2775"
argument_list|,
name|smppEndpoint
operator|.
name|getConnectionString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ExchangePattern
operator|.
name|InOnly
argument_list|,
name|smppEndpoint
operator|.
name|getExchangePattern
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|smppEndpoint
operator|.
name|getBinding
argument_list|()
operator|instanceof
name|SmppBinding
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|smppEndpoint
operator|.
name|getCamelContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createEndpointStringStringMapWithoutACamelContextShouldReturnASmppEndpoint ()
specifier|public
name|void
name|createEndpointStringStringMapWithoutACamelContextShouldReturnASmppEndpoint
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parameters
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|parameters
operator|.
name|put
argument_list|(
literal|"password"
argument_list|,
literal|"secret"
argument_list|)
expr_stmt|;
name|Endpoint
name|endpoint
init|=
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"smpp://smppclient@localhost:2775"
argument_list|,
literal|"?password=secret"
argument_list|,
name|parameters
argument_list|)
decl_stmt|;
name|SmppEndpoint
name|smppEndpoint
init|=
operator|(
name|SmppEndpoint
operator|)
name|endpoint
decl_stmt|;
name|assertEquals
argument_list|(
literal|"smpp://smppclient@localhost:2775"
argument_list|,
name|smppEndpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"smpp://smppclient@localhost:2775"
argument_list|,
name|smppEndpoint
operator|.
name|getEndpointKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|component
argument_list|,
name|smppEndpoint
operator|.
name|getComponent
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|smppEndpoint
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"secret"
argument_list|,
name|smppEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"smpp://smppclient@localhost:2775"
argument_list|,
name|smppEndpoint
operator|.
name|getConnectionString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ExchangePattern
operator|.
name|InOnly
argument_list|,
name|smppEndpoint
operator|.
name|getExchangePattern
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|smppEndpoint
operator|.
name|getBinding
argument_list|()
operator|instanceof
name|SmppBinding
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|smppEndpoint
operator|.
name|getCamelContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|allowEmptySystemTypeAndServiceTypeOption ()
specifier|public
name|void
name|allowEmptySystemTypeAndServiceTypeOption
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parameters
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|parameters
operator|.
name|put
argument_list|(
literal|"systemType"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|put
argument_list|(
literal|"serviceType"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Endpoint
name|endpoint
init|=
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"smpp://smppclient@localhost:2775"
argument_list|,
literal|"?systemType=&serviceType="
argument_list|,
name|parameters
argument_list|)
decl_stmt|;
name|SmppEndpoint
name|smppEndpoint
init|=
operator|(
name|SmppEndpoint
operator|)
name|endpoint
decl_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|smppEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getSystemType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|smppEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getServiceType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createEndpointSmppConfigurationShouldReturnASmppEndpoint ()
specifier|public
name|void
name|createEndpointSmppConfigurationShouldReturnASmppEndpoint
parameter_list|()
throws|throws
name|Exception
block|{
name|SmppConfiguration
name|configuration
init|=
operator|new
name|SmppConfiguration
argument_list|()
decl_stmt|;
name|Endpoint
name|endpoint
init|=
name|component
operator|.
name|createEndpoint
argument_list|(
name|configuration
argument_list|)
decl_stmt|;
name|SmppEndpoint
name|smppEndpoint
init|=
operator|(
name|SmppEndpoint
operator|)
name|endpoint
decl_stmt|;
name|assertEquals
argument_list|(
literal|"smpp://smppclient@localhost:2775"
argument_list|,
name|smppEndpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"smpp://smppclient@localhost:2775"
argument_list|,
name|smppEndpoint
operator|.
name|getEndpointKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|component
argument_list|,
name|smppEndpoint
operator|.
name|getComponent
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|configuration
argument_list|,
name|smppEndpoint
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"smpp://smppclient@localhost:2775"
argument_list|,
name|smppEndpoint
operator|.
name|getConnectionString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ExchangePattern
operator|.
name|InOnly
argument_list|,
name|smppEndpoint
operator|.
name|getExchangePattern
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|smppEndpoint
operator|.
name|getBinding
argument_list|()
operator|instanceof
name|SmppBinding
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|smppEndpoint
operator|.
name|getCamelContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createEndpointStringSmppConfigurationShouldReturnASmppEndpoint ()
specifier|public
name|void
name|createEndpointStringSmppConfigurationShouldReturnASmppEndpoint
parameter_list|()
throws|throws
name|Exception
block|{
name|SmppConfiguration
name|configuration
init|=
operator|new
name|SmppConfiguration
argument_list|()
decl_stmt|;
name|Endpoint
name|endpoint
init|=
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"smpp://smppclient@localhost:2775?password=password"
argument_list|,
name|configuration
argument_list|)
decl_stmt|;
name|SmppEndpoint
name|smppEndpoint
init|=
operator|(
name|SmppEndpoint
operator|)
name|endpoint
decl_stmt|;
name|assertEquals
argument_list|(
literal|"smpp://smppclient@localhost:2775?password=password"
argument_list|,
name|smppEndpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"smpp://smppclient@localhost:2775"
argument_list|,
name|smppEndpoint
operator|.
name|getEndpointKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|component
argument_list|,
name|smppEndpoint
operator|.
name|getComponent
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|configuration
argument_list|,
name|smppEndpoint
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"smpp://smppclient@localhost:2775"
argument_list|,
name|smppEndpoint
operator|.
name|getConnectionString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ExchangePattern
operator|.
name|InOnly
argument_list|,
name|smppEndpoint
operator|.
name|getExchangePattern
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|smppEndpoint
operator|.
name|getBinding
argument_list|()
operator|instanceof
name|SmppBinding
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|smppEndpoint
operator|.
name|getCamelContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getterShouldReturnTheSetValues ()
specifier|public
name|void
name|getterShouldReturnTheSetValues
parameter_list|()
block|{
name|SmppConfiguration
name|configuration
init|=
operator|new
name|SmppConfiguration
argument_list|()
decl_stmt|;
name|component
operator|.
name|setConfiguration
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|configuration
argument_list|,
name|component
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createEndpointWithSessionStateListener ()
specifier|public
name|void
name|createEndpointWithSessionStateListener
parameter_list|()
throws|throws
name|Exception
block|{
name|SimpleRegistry
name|registry
init|=
operator|new
name|SimpleRegistry
argument_list|()
decl_stmt|;
name|registry
operator|.
name|put
argument_list|(
literal|"sessionStateListener"
argument_list|,
operator|new
name|SessionStateListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onStateChange
parameter_list|(
name|SessionState
name|arg0
parameter_list|,
name|SessionState
name|arg1
parameter_list|,
name|Session
name|arg2
parameter_list|)
block|{             }
block|}
argument_list|)
expr_stmt|;
name|context
operator|.
name|setRegistry
argument_list|(
name|registry
argument_list|)
expr_stmt|;
name|component
operator|=
operator|new
name|SmppComponent
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|SmppEndpoint
name|endpoint
init|=
operator|(
name|SmppEndpoint
operator|)
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"smpp://smppclient@localhost:2775?password=password&sessionStateListener=#sessionStateListener"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getSessionStateListener
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

