begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.smpp
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|smpp
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ExchangePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsmpp
operator|.
name|bean
operator|.
name|Alphabet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsmpp
operator|.
name|bean
operator|.
name|BindType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsmpp
operator|.
name|bean
operator|.
name|ESMClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsmpp
operator|.
name|bean
operator|.
name|GeneralDataCoding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsmpp
operator|.
name|bean
operator|.
name|MessageClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsmpp
operator|.
name|bean
operator|.
name|NumberingPlanIndicator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsmpp
operator|.
name|bean
operator|.
name|OptionalParameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsmpp
operator|.
name|bean
operator|.
name|RegisteredDelivery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsmpp
operator|.
name|bean
operator|.
name|SMSCDeliveryReceipt
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsmpp
operator|.
name|bean
operator|.
name|SubmitSm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsmpp
operator|.
name|bean
operator|.
name|TypeOfNumber
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsmpp
operator|.
name|session
operator|.
name|BindParameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsmpp
operator|.
name|session
operator|.
name|SMPPSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsmpp
operator|.
name|session
operator|.
name|SessionStateListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|aryEq
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|eq
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|expect
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|isA
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|EasyMock
operator|.
name|createMock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|EasyMock
operator|.
name|replay
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|EasyMock
operator|.
name|verify
import|;
end_import

begin_comment
comment|/**  * JUnit test class for<code>org.apache.camel.component.smpp.SmppProducer</code>  *   * @version   */
end_comment

begin_class
DECL|class|SmppProducerLazySessionCreationTest
specifier|public
class|class
name|SmppProducerLazySessionCreationTest
block|{
DECL|field|producer
specifier|private
name|SmppProducer
name|producer
decl_stmt|;
DECL|field|configuration
specifier|private
name|SmppConfiguration
name|configuration
decl_stmt|;
DECL|field|endpoint
specifier|private
name|SmppEndpoint
name|endpoint
decl_stmt|;
DECL|field|session
specifier|private
name|SMPPSession
name|session
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|configuration
operator|=
operator|new
name|SmppConfiguration
argument_list|()
expr_stmt|;
name|configuration
operator|.
name|setLazySessionCreation
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|endpoint
operator|=
name|createMock
argument_list|(
name|SmppEndpoint
operator|.
name|class
argument_list|)
expr_stmt|;
name|session
operator|=
name|createMock
argument_list|(
name|SMPPSession
operator|.
name|class
argument_list|)
expr_stmt|;
name|producer
operator|=
operator|new
name|SmppProducer
argument_list|(
name|endpoint
argument_list|,
name|configuration
argument_list|)
block|{
name|SMPPSession
name|createSMPPSession
parameter_list|()
block|{
return|return
name|session
return|;
block|}
block|}
expr_stmt|;
block|}
DECL|method|submitSmExpectations (Exchange exchange, SmppBinding binding, SubmitSm submitSm)
specifier|private
name|void
name|submitSmExpectations
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|SmppBinding
name|binding
parameter_list|,
name|SubmitSm
name|submitSm
parameter_list|)
throws|throws
name|Exception
block|{
name|expect
argument_list|(
name|submitSm
operator|.
name|getServiceType
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|"CMT"
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|submitSm
operator|.
name|getSourceAddrTon
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|TypeOfNumber
operator|.
name|UNKNOWN
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|submitSm
operator|.
name|getSourceAddrNpi
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|NumberingPlanIndicator
operator|.
name|UNKNOWN
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|submitSm
operator|.
name|getSourceAddr
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|"1616"
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|submitSm
operator|.
name|getDestAddrTon
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|TypeOfNumber
operator|.
name|UNKNOWN
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|submitSm
operator|.
name|getDestAddrNpi
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|NumberingPlanIndicator
operator|.
name|UNKNOWN
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|submitSm
operator|.
name|getDestAddress
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|"1717"
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|submitSm
operator|.
name|getProtocolId
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|submitSm
operator|.
name|getPriorityFlag
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|submitSm
operator|.
name|getScheduleDeliveryTime
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|"090830230627004+"
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|submitSm
operator|.
name|getValidityPeriod
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|"090831232000004+"
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|submitSm
operator|.
name|getRegisteredDelivery
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|SMSCDeliveryReceipt
operator|.
name|SUCCESS_FAILURE
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|submitSm
operator|.
name|getReplaceIfPresent
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|submitSm
operator|.
name|getDataCoding
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|submitSm
operator|.
name|getShortMessage
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|"Hello SMPP world!"
operator|.
name|getBytes
argument_list|(
literal|"ISO-8859-1"
argument_list|)
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|submitSm
operator|.
name|getOptionalParametes
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|new
name|OptionalParameter
index|[]
block|{}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|doStartShouldNotCreateTheSmppSession ()
specifier|public
name|void
name|doStartShouldNotCreateTheSmppSession
parameter_list|()
throws|throws
name|Exception
block|{
name|expect
argument_list|(
name|endpoint
operator|.
name|getConnectionString
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|"smpp://smppclient@localhost:2775"
argument_list|)
expr_stmt|;
name|replay
argument_list|(
name|endpoint
argument_list|,
name|session
argument_list|)
expr_stmt|;
name|producer
operator|.
name|doStart
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|endpoint
argument_list|,
name|session
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|processShouldCreateTheSmppSession ()
specifier|public
name|void
name|processShouldCreateTheSmppSession
parameter_list|()
throws|throws
name|Exception
block|{
name|expect
argument_list|(
name|endpoint
operator|.
name|getConnectionString
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|"smpp://smppclient@localhost:2775"
argument_list|)
operator|.
name|times
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|session
operator|.
name|setEnquireLinkTimer
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
comment|//expectation
name|session
operator|.
name|setTransactionTimer
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
comment|//expectation
name|session
operator|.
name|addSessionStateListener
argument_list|(
name|isA
argument_list|(
name|SessionStateListener
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|session
operator|.
name|connectAndBind
argument_list|(
literal|"localhost"
argument_list|,
operator|new
name|Integer
argument_list|(
literal|2775
argument_list|)
argument_list|,
operator|new
name|BindParameter
argument_list|(
name|BindType
operator|.
name|BIND_TX
argument_list|,
literal|"smppclient"
argument_list|,
literal|"password"
argument_list|,
literal|"cp"
argument_list|,
name|TypeOfNumber
operator|.
name|UNKNOWN
argument_list|,
name|NumberingPlanIndicator
operator|.
name|UNKNOWN
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|endpoint
operator|.
name|getConnectionString
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|"smpp://smppclient@localhost:2775"
argument_list|)
expr_stmt|;
name|SmppBinding
name|binding
init|=
name|createMock
argument_list|(
name|SmppBinding
operator|.
name|class
argument_list|)
decl_stmt|;
name|Exchange
name|exchange
init|=
name|createMock
argument_list|(
name|Exchange
operator|.
name|class
argument_list|)
decl_stmt|;
name|Message
name|message
init|=
name|createMock
argument_list|(
name|Message
operator|.
name|class
argument_list|)
decl_stmt|;
name|SubmitSm
name|submitSm
init|=
name|createMock
argument_list|(
name|SubmitSm
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|exchange
operator|.
name|getExchangeId
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|"ID-muellerc-macbookpro/3690-1214458315718/2-0"
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|endpoint
operator|.
name|getBinding
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|binding
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|binding
operator|.
name|createSubmitSm
argument_list|(
name|exchange
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|submitSm
argument_list|)
expr_stmt|;
name|submitSmExpectations
argument_list|(
name|exchange
argument_list|,
name|binding
argument_list|,
name|submitSm
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|session
operator|.
name|submitShortMessage
argument_list|(
name|eq
argument_list|(
literal|"CMT"
argument_list|)
argument_list|,
name|eq
argument_list|(
name|TypeOfNumber
operator|.
name|UNKNOWN
argument_list|)
argument_list|,
name|eq
argument_list|(
name|NumberingPlanIndicator
operator|.
name|UNKNOWN
argument_list|)
argument_list|,
name|eq
argument_list|(
literal|"1616"
argument_list|)
argument_list|,
name|eq
argument_list|(
name|TypeOfNumber
operator|.
name|UNKNOWN
argument_list|)
argument_list|,
name|eq
argument_list|(
name|NumberingPlanIndicator
operator|.
name|UNKNOWN
argument_list|)
argument_list|,
name|eq
argument_list|(
literal|"1717"
argument_list|)
argument_list|,
name|isA
argument_list|(
name|ESMClass
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|)
argument_list|,
name|eq
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|)
argument_list|,
name|eq
argument_list|(
literal|"090830230627004+"
argument_list|)
argument_list|,
name|eq
argument_list|(
literal|"090831232000004+"
argument_list|)
argument_list|,
name|eq
argument_list|(
operator|new
name|RegisteredDelivery
argument_list|(
name|SMSCDeliveryReceipt
operator|.
name|SUCCESS_FAILURE
argument_list|)
argument_list|)
argument_list|,
name|eq
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|)
argument_list|,
name|eq
argument_list|(
operator|new
name|GeneralDataCoding
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|,
name|MessageClass
operator|.
name|CLASS1
argument_list|,
name|Alphabet
operator|.
name|ALPHA_DEFAULT
argument_list|)
argument_list|)
argument_list|,
name|eq
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|)
argument_list|,
name|aryEq
argument_list|(
literal|"Hello SMPP world!"
operator|.
name|getBytes
argument_list|(
literal|"ISO-8859-1"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|exchange
operator|.
name|getPattern
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|ExchangePattern
operator|.
name|InOnly
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|message
operator|.
name|setHeader
argument_list|(
name|SmppBinding
operator|.
name|ID
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
comment|// expectation without return value
name|expect
argument_list|(
name|exchange
operator|.
name|getExchangeId
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|"ID-muellerc-macbookpro/3690-1214458315718/2-0"
argument_list|)
expr_stmt|;
name|replay
argument_list|(
name|session
argument_list|,
name|endpoint
argument_list|,
name|binding
argument_list|,
name|exchange
argument_list|,
name|message
argument_list|,
name|submitSm
argument_list|)
expr_stmt|;
name|producer
operator|.
name|doStart
argument_list|()
expr_stmt|;
name|producer
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|session
argument_list|,
name|endpoint
argument_list|,
name|binding
argument_list|,
name|exchange
argument_list|,
name|message
argument_list|,
name|submitSm
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

