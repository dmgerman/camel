begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.grpc.server
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|grpc
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|io
operator|.
name|grpc
operator|.
name|stub
operator|.
name|StreamObserver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|grpc
operator|.
name|GrpcConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|grpc
operator|.
name|GrpcEndpoint
import|;
end_import

begin_comment
comment|/**  * gRPC request abstract stream observer is the base class for other stream  * observer implementations  */
end_comment

begin_class
DECL|class|GrpcRequestAbstractStreamObserver
specifier|public
specifier|abstract
class|class
name|GrpcRequestAbstractStreamObserver
implements|implements
name|StreamObserver
argument_list|<
name|Object
argument_list|>
block|{
DECL|field|endpoint
specifier|protected
specifier|final
name|GrpcEndpoint
name|endpoint
decl_stmt|;
DECL|field|consumer
specifier|protected
specifier|final
name|GrpcConsumer
name|consumer
decl_stmt|;
DECL|field|exchange
specifier|protected
name|Exchange
name|exchange
decl_stmt|;
DECL|field|requestList
specifier|protected
name|List
argument_list|<
name|Object
argument_list|>
name|requestList
init|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|responseObserver
specifier|protected
name|StreamObserver
argument_list|<
name|Object
argument_list|>
name|responseObserver
decl_stmt|;
DECL|field|headers
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
decl_stmt|;
DECL|method|GrpcRequestAbstractStreamObserver (GrpcEndpoint endpoint, GrpcConsumer consumer, StreamObserver<Object> responseObserver, Map<String, Object> headers)
specifier|public
name|GrpcRequestAbstractStreamObserver
parameter_list|(
name|GrpcEndpoint
name|endpoint
parameter_list|,
name|GrpcConsumer
name|consumer
parameter_list|,
name|StreamObserver
argument_list|<
name|Object
argument_list|>
name|responseObserver
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
parameter_list|)
block|{
name|this
operator|.
name|endpoint
operator|=
name|endpoint
expr_stmt|;
name|this
operator|.
name|consumer
operator|=
name|consumer
expr_stmt|;
name|this
operator|.
name|responseObserver
operator|=
name|responseObserver
expr_stmt|;
name|this
operator|.
name|headers
operator|=
name|headers
expr_stmt|;
block|}
block|}
end_class

end_unit

