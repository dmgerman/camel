begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.grpc
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|grpc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|io
operator|.
name|grpc
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|io
operator|.
name|grpc
operator|.
name|ServerBuilder
import|;
end_import

begin_import
import|import
name|io
operator|.
name|grpc
operator|.
name|stub
operator|.
name|StreamObserver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|AvailablePortFinder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|GrpcProducerStreamingTest
specifier|public
class|class
name|GrpcProducerStreamingTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|GrpcProducerStreamingTest
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|GRPC_TEST_PORT
specifier|private
specifier|static
specifier|final
name|int
name|GRPC_TEST_PORT
init|=
name|AvailablePortFinder
operator|.
name|getNextAvailable
argument_list|()
decl_stmt|;
DECL|field|grpcServer
specifier|private
specifier|static
name|Server
name|grpcServer
decl_stmt|;
DECL|field|pingPongServer
specifier|private
specifier|static
name|PingPongImpl
name|pingPongServer
decl_stmt|;
annotation|@
name|Before
DECL|method|startGrpcServer ()
specifier|public
name|void
name|startGrpcServer
parameter_list|()
throws|throws
name|Exception
block|{
name|pingPongServer
operator|=
operator|new
name|PingPongImpl
argument_list|()
expr_stmt|;
name|grpcServer
operator|=
name|ServerBuilder
operator|.
name|forPort
argument_list|(
name|GRPC_TEST_PORT
argument_list|)
operator|.
name|addService
argument_list|(
name|pingPongServer
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|start
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"gRPC server started on port {}"
argument_list|,
name|GRPC_TEST_PORT
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|stopGrpcServer ()
specifier|public
name|void
name|stopGrpcServer
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|grpcServer
operator|!=
literal|null
condition|)
block|{
name|grpcServer
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"gRPC server stopped"
argument_list|)
expr_stmt|;
name|pingPongServer
operator|=
literal|null
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testPingAsyncAsync ()
specifier|public
name|void
name|testPingAsyncAsync
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|messageCount
init|=
literal|10
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
name|messageCount
condition|;
name|i
operator|++
control|)
block|{
name|template
operator|.
name|sendBody
argument_list|(
literal|"direct:grpc-stream-async-async-route"
argument_list|,
name|PingRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPingName
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|MockEndpoint
name|replies
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:grpc-replies"
argument_list|)
decl_stmt|;
name|replies
operator|.
name|expectedMessageCount
argument_list|(
name|messageCount
argument_list|)
expr_stmt|;
name|replies
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
name|context
argument_list|()
operator|.
name|stop
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|pingPongServer
operator|.
name|getLastStreamRequests
argument_list|()
argument_list|)
expr_stmt|;
name|assertListSize
argument_list|(
name|pingPongServer
operator|.
name|getLastStreamRequests
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertListSize
argument_list|(
name|pingPongServer
operator|.
name|getLastStreamRequests
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|messageCount
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPingAsyncAsyncRecovery ()
specifier|public
name|void
name|testPingAsyncAsyncRecovery
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|messageGroupCount
init|=
literal|5
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
name|messageGroupCount
condition|;
name|i
operator|++
control|)
block|{
name|template
operator|.
name|sendBody
argument_list|(
literal|"direct:grpc-stream-async-async-route"
argument_list|,
name|PingRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPingName
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|template
operator|.
name|sendBody
argument_list|(
literal|"direct:grpc-stream-async-async-route"
argument_list|,
name|PingRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPingName
argument_list|(
literal|"error"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|MockEndpoint
name|replies
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:grpc-replies"
argument_list|)
decl_stmt|;
name|replies
operator|.
name|expectedMessageCount
argument_list|(
name|messageGroupCount
argument_list|)
expr_stmt|;
name|replies
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
name|messageGroupCount
operator|+
literal|1
init|;
name|i
operator|<=
literal|2
operator|*
name|messageGroupCount
condition|;
name|i
operator|++
control|)
block|{
name|template
operator|.
name|sendBody
argument_list|(
literal|"direct:grpc-stream-async-async-route"
argument_list|,
name|PingRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPingName
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|replies
operator|.
name|reset
argument_list|()
expr_stmt|;
name|replies
operator|.
name|expectedMessageCount
argument_list|(
name|messageGroupCount
argument_list|)
expr_stmt|;
name|replies
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
name|context
argument_list|()
operator|.
name|stop
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|pingPongServer
operator|.
name|getLastStreamRequests
argument_list|()
argument_list|)
expr_stmt|;
name|assertListSize
argument_list|(
name|pingPongServer
operator|.
name|getLastStreamRequests
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertListSize
argument_list|(
name|pingPongServer
operator|.
name|getLastStreamRequests
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|messageGroupCount
operator|+
literal|1
argument_list|)
expr_stmt|;
name|assertListSize
argument_list|(
name|pingPongServer
operator|.
name|getLastStreamRequests
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|messageGroupCount
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"direct:grpc-stream-async-async-route"
argument_list|)
operator|.
name|to
argument_list|(
literal|"grpc://localhost:"
operator|+
name|GRPC_TEST_PORT
operator|+
literal|"/org.apache.camel.component.grpc.PingPong?producerStrategy=STREAMING&streamRepliesTo=direct:grpc-replies&method=pingAsyncAsync"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:grpc-replies"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:grpc-replies"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
comment|/**      * Test gRPC PingPong server implementation      */
DECL|class|PingPongImpl
specifier|static
class|class
name|PingPongImpl
extends|extends
name|PingPongGrpc
operator|.
name|PingPongImplBase
block|{
DECL|field|streamRequests
specifier|private
name|List
argument_list|<
name|List
argument_list|<
name|PingRequest
argument_list|>
argument_list|>
name|streamRequests
init|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|pingAsyncAsync (StreamObserver<PongResponse> responseObserver)
specifier|public
name|StreamObserver
argument_list|<
name|PingRequest
argument_list|>
name|pingAsyncAsync
parameter_list|(
name|StreamObserver
argument_list|<
name|PongResponse
argument_list|>
name|responseObserver
parameter_list|)
block|{
name|StreamObserver
argument_list|<
name|PingRequest
argument_list|>
name|requestObserver
init|=
operator|new
name|StreamObserver
argument_list|<
name|PingRequest
argument_list|>
argument_list|()
block|{
specifier|private
name|List
argument_list|<
name|PingRequest
argument_list|>
name|streamRequests
init|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|onNext
parameter_list|(
name|PingRequest
name|request
parameter_list|)
block|{
name|streamRequests
operator|.
name|add
argument_list|(
name|request
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"error"
operator|.
name|equals
argument_list|(
name|request
operator|.
name|getPingName
argument_list|()
argument_list|)
condition|)
block|{
name|PingPongImpl
operator|.
name|this
operator|.
name|streamRequests
operator|.
name|add
argument_list|(
name|streamRequests
argument_list|)
expr_stmt|;
name|responseObserver
operator|.
name|onError
argument_list|(
operator|new
name|RuntimeException
argument_list|(
literal|"Requested error"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|PongResponse
name|response
init|=
name|PongResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPongName
argument_list|(
literal|"Hello "
operator|+
name|request
operator|.
name|getPingName
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|responseObserver
operator|.
name|onNext
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onError
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|PingPongImpl
operator|.
name|this
operator|.
name|streamRequests
operator|.
name|add
argument_list|(
name|streamRequests
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Error in pingAsyncAsync() {}"
argument_list|,
name|t
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onCompleted
parameter_list|()
block|{
name|PingPongImpl
operator|.
name|this
operator|.
name|streamRequests
operator|.
name|add
argument_list|(
name|streamRequests
argument_list|)
expr_stmt|;
name|responseObserver
operator|.
name|onCompleted
argument_list|()
expr_stmt|;
block|}
block|}
decl_stmt|;
return|return
name|requestObserver
return|;
block|}
DECL|method|getLastStreamRequests ()
specifier|public
name|List
argument_list|<
name|List
argument_list|<
name|PingRequest
argument_list|>
argument_list|>
name|getLastStreamRequests
parameter_list|()
block|{
return|return
name|streamRequests
return|;
block|}
block|}
block|}
end_class

end_unit

