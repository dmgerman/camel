begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.grpc
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|grpc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDownLatch
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|io
operator|.
name|grpc
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|io
operator|.
name|grpc
operator|.
name|ServerBuilder
import|;
end_import

begin_import
import|import
name|io
operator|.
name|grpc
operator|.
name|stub
operator|.
name|StreamObserver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|SynchronizationAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|AvailablePortFinder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|GrpcProducerAsyncTest
specifier|public
class|class
name|GrpcProducerAsyncTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|GrpcProducerAsyncTest
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|GRPC_TEST_PORT
specifier|private
specifier|static
specifier|final
name|int
name|GRPC_TEST_PORT
init|=
name|AvailablePortFinder
operator|.
name|getNextAvailable
argument_list|()
decl_stmt|;
DECL|field|GRPC_TEST_PING_ID
specifier|private
specifier|static
specifier|final
name|int
name|GRPC_TEST_PING_ID
init|=
literal|1
decl_stmt|;
DECL|field|GRPC_TEST_PONG_ID01
specifier|private
specifier|static
specifier|final
name|int
name|GRPC_TEST_PONG_ID01
init|=
literal|1
decl_stmt|;
DECL|field|GRPC_TEST_PONG_ID02
specifier|private
specifier|static
specifier|final
name|int
name|GRPC_TEST_PONG_ID02
init|=
literal|2
decl_stmt|;
DECL|field|GRPC_TEST_PING_VALUE
specifier|private
specifier|static
specifier|final
name|String
name|GRPC_TEST_PING_VALUE
init|=
literal|"PING"
decl_stmt|;
DECL|field|GRPC_TEST_PONG_VALUE
specifier|private
specifier|static
specifier|final
name|String
name|GRPC_TEST_PONG_VALUE
init|=
literal|"PONG"
decl_stmt|;
DECL|field|grpcServer
specifier|private
specifier|static
name|Server
name|grpcServer
decl_stmt|;
DECL|field|asyncPongResponse
specifier|private
name|Object
name|asyncPongResponse
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|startGrpcServer ()
specifier|public
specifier|static
name|void
name|startGrpcServer
parameter_list|()
throws|throws
name|Exception
block|{
name|grpcServer
operator|=
name|ServerBuilder
operator|.
name|forPort
argument_list|(
name|GRPC_TEST_PORT
argument_list|)
operator|.
name|addService
argument_list|(
operator|new
name|PingPongImpl
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|start
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"gRPC server started on port {}"
argument_list|,
name|GRPC_TEST_PORT
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|stopGrpcServer ()
specifier|public
specifier|static
name|void
name|stopGrpcServer
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|grpcServer
operator|!=
literal|null
condition|)
block|{
name|grpcServer
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"gRPC server stoped"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testPingSyncSyncMethodInvocation ()
specifier|public
name|void
name|testPingSyncSyncMethodInvocation
parameter_list|()
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"gRPC PingSyncSync method test start"
argument_list|)
expr_stmt|;
specifier|final
name|CountDownLatch
name|latch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|PingRequest
name|pingRequest
init|=
name|PingRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPingName
argument_list|(
name|GRPC_TEST_PING_VALUE
argument_list|)
operator|.
name|setPingId
argument_list|(
name|GRPC_TEST_PING_ID
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// Testing sync service call with async style invocation
name|template
operator|.
name|asyncCallbackSendBody
argument_list|(
literal|"direct:grpc-sync-sync"
argument_list|,
name|pingRequest
argument_list|,
operator|new
name|SynchronizationAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onComplete
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
name|asyncPongResponse
operator|=
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getBody
argument_list|()
expr_stmt|;
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|latch
operator|.
name|await
argument_list|(
literal|1
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|asyncPongResponse
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|asyncPongResponse
operator|instanceof
name|List
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|List
argument_list|<
name|PongResponse
argument_list|>
name|asyncPongResponseList
init|=
operator|(
name|List
argument_list|<
name|PongResponse
argument_list|>
operator|)
name|asyncPongResponse
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|asyncPongResponseList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|asyncPongResponseList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPongId
argument_list|()
argument_list|,
name|GRPC_TEST_PING_ID
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|asyncPongResponseList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPongName
argument_list|()
argument_list|,
name|GRPC_TEST_PING_VALUE
operator|+
name|GRPC_TEST_PONG_VALUE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPingSyncAsyncMethodInvocation ()
specifier|public
name|void
name|testPingSyncAsyncMethodInvocation
parameter_list|()
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"gRPC PingSyncAsync method test start"
argument_list|)
expr_stmt|;
specifier|final
name|CountDownLatch
name|latch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|PingRequest
name|pingRequest
init|=
name|PingRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPingName
argument_list|(
name|GRPC_TEST_PING_VALUE
argument_list|)
operator|.
name|setPingId
argument_list|(
name|GRPC_TEST_PING_ID
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// Testing async service call
name|template
operator|.
name|asyncCallbackSendBody
argument_list|(
literal|"direct:grpc-sync-async"
argument_list|,
name|pingRequest
argument_list|,
operator|new
name|SynchronizationAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onComplete
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
name|asyncPongResponse
operator|=
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getBody
argument_list|()
expr_stmt|;
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|latch
operator|.
name|await
argument_list|(
literal|1
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|asyncPongResponse
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|asyncPongResponse
operator|instanceof
name|List
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|List
argument_list|<
name|PongResponse
argument_list|>
name|asyncPongResponseList
init|=
operator|(
name|List
argument_list|<
name|PongResponse
argument_list|>
operator|)
name|asyncPongResponse
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|asyncPongResponseList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|asyncPongResponseList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPongId
argument_list|()
argument_list|,
name|GRPC_TEST_PONG_ID01
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|asyncPongResponseList
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getPongId
argument_list|()
argument_list|,
name|GRPC_TEST_PONG_ID02
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|asyncPongResponseList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPongName
argument_list|()
argument_list|,
name|GRPC_TEST_PING_VALUE
operator|+
name|GRPC_TEST_PONG_VALUE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPingAsyncSyncMethodInvocation ()
specifier|public
name|void
name|testPingAsyncSyncMethodInvocation
parameter_list|()
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"gRPC PingAsyncSync method test start"
argument_list|)
expr_stmt|;
specifier|final
name|CountDownLatch
name|latch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|PingRequest
name|pingRequest
init|=
name|PingRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPingName
argument_list|(
name|GRPC_TEST_PING_VALUE
argument_list|)
operator|.
name|setPingId
argument_list|(
name|GRPC_TEST_PING_ID
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// Testing async service call with async style invocation
name|template
operator|.
name|asyncCallbackSendBody
argument_list|(
literal|"direct:grpc-async-sync"
argument_list|,
name|pingRequest
argument_list|,
operator|new
name|SynchronizationAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onComplete
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
name|asyncPongResponse
operator|=
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getBody
argument_list|()
expr_stmt|;
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|latch
operator|.
name|await
argument_list|(
literal|1
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|asyncPongResponse
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|asyncPongResponse
operator|instanceof
name|List
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|List
argument_list|<
name|PongResponse
argument_list|>
name|asyncPongResponseList
init|=
operator|(
name|List
argument_list|<
name|PongResponse
argument_list|>
operator|)
name|asyncPongResponse
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|asyncPongResponseList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|asyncPongResponseList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPongId
argument_list|()
argument_list|,
name|GRPC_TEST_PING_ID
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|asyncPongResponseList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPongName
argument_list|()
argument_list|,
name|GRPC_TEST_PING_VALUE
operator|+
name|GRPC_TEST_PONG_VALUE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPingAsyncAsyncMethodInvocation ()
specifier|public
name|void
name|testPingAsyncAsyncMethodInvocation
parameter_list|()
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"gRPC PingAsyncAsync method test start"
argument_list|)
expr_stmt|;
specifier|final
name|CountDownLatch
name|latch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|PingRequest
name|pingRequest
init|=
name|PingRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPingName
argument_list|(
name|GRPC_TEST_PING_VALUE
argument_list|)
operator|.
name|setPingId
argument_list|(
name|GRPC_TEST_PING_ID
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// Testing async service call with async style invocation
name|template
operator|.
name|asyncCallbackSendBody
argument_list|(
literal|"direct:grpc-async-async"
argument_list|,
name|pingRequest
argument_list|,
operator|new
name|SynchronizationAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onComplete
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
name|asyncPongResponse
operator|=
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getBody
argument_list|()
expr_stmt|;
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|latch
operator|.
name|await
argument_list|(
literal|1
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|asyncPongResponse
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|asyncPongResponse
operator|instanceof
name|List
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|List
argument_list|<
name|PongResponse
argument_list|>
name|asyncPongResponseList
init|=
operator|(
name|List
argument_list|<
name|PongResponse
argument_list|>
operator|)
name|asyncPongResponse
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|asyncPongResponseList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|asyncPongResponseList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPongId
argument_list|()
argument_list|,
name|GRPC_TEST_PING_ID
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|asyncPongResponseList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPongName
argument_list|()
argument_list|,
name|GRPC_TEST_PING_VALUE
operator|+
name|GRPC_TEST_PONG_VALUE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"direct:grpc-sync-sync"
argument_list|)
operator|.
name|to
argument_list|(
literal|"grpc://localhost:"
operator|+
name|GRPC_TEST_PORT
operator|+
literal|"/org.apache.camel.component.grpc.PingPong?method=pingSyncSync"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:grpc-sync-async"
argument_list|)
operator|.
name|to
argument_list|(
literal|"grpc://localhost:"
operator|+
name|GRPC_TEST_PORT
operator|+
literal|"/org.apache.camel.component.grpc.PingPong?method=pingSyncAsync"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:grpc-async-sync"
argument_list|)
operator|.
name|to
argument_list|(
literal|"grpc://localhost:"
operator|+
name|GRPC_TEST_PORT
operator|+
literal|"/org.apache.camel.component.grpc.PingPong?method=pingAsyncSync"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:grpc-async-async"
argument_list|)
operator|.
name|to
argument_list|(
literal|"grpc://localhost:"
operator|+
name|GRPC_TEST_PORT
operator|+
literal|"/org.apache.camel.component.grpc.PingPong?method=pingAsyncAsync"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
comment|/**      * Test gRPC PingPong server implementation      */
DECL|class|PingPongImpl
specifier|static
class|class
name|PingPongImpl
extends|extends
name|PingPongGrpc
operator|.
name|PingPongImplBase
block|{
annotation|@
name|Override
DECL|method|pingSyncSync (PingRequest request, StreamObserver<PongResponse> responseObserver)
specifier|public
name|void
name|pingSyncSync
parameter_list|(
name|PingRequest
name|request
parameter_list|,
name|StreamObserver
argument_list|<
name|PongResponse
argument_list|>
name|responseObserver
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"gRPC server received data from PingPong service PingId={} PingName={}"
argument_list|,
name|request
operator|.
name|getPingId
argument_list|()
argument_list|,
name|request
operator|.
name|getPingName
argument_list|()
argument_list|)
expr_stmt|;
name|PongResponse
name|response
init|=
name|PongResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPongName
argument_list|(
name|request
operator|.
name|getPingName
argument_list|()
operator|+
name|GRPC_TEST_PONG_VALUE
argument_list|)
operator|.
name|setPongId
argument_list|(
name|request
operator|.
name|getPingId
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|responseObserver
operator|.
name|onNext
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|responseObserver
operator|.
name|onCompleted
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|pingSyncAsync (PingRequest request, StreamObserver<PongResponse> responseObserver)
specifier|public
name|void
name|pingSyncAsync
parameter_list|(
name|PingRequest
name|request
parameter_list|,
name|StreamObserver
argument_list|<
name|PongResponse
argument_list|>
name|responseObserver
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"gRPC server received data from PingAsyncResponse service PingId={} PingName={}"
argument_list|,
name|request
operator|.
name|getPingId
argument_list|()
argument_list|,
name|request
operator|.
name|getPingName
argument_list|()
argument_list|)
expr_stmt|;
name|PongResponse
name|response01
init|=
name|PongResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPongName
argument_list|(
name|request
operator|.
name|getPingName
argument_list|()
operator|+
name|GRPC_TEST_PONG_VALUE
argument_list|)
operator|.
name|setPongId
argument_list|(
name|GRPC_TEST_PONG_ID01
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|PongResponse
name|response02
init|=
name|PongResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPongName
argument_list|(
name|request
operator|.
name|getPingName
argument_list|()
operator|+
name|GRPC_TEST_PONG_VALUE
argument_list|)
operator|.
name|setPongId
argument_list|(
name|GRPC_TEST_PONG_ID02
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|responseObserver
operator|.
name|onNext
argument_list|(
name|response01
argument_list|)
expr_stmt|;
name|responseObserver
operator|.
name|onNext
argument_list|(
name|response02
argument_list|)
expr_stmt|;
name|responseObserver
operator|.
name|onCompleted
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|pingAsyncSync (StreamObserver<PongResponse> responseObserver)
specifier|public
name|StreamObserver
argument_list|<
name|PingRequest
argument_list|>
name|pingAsyncSync
parameter_list|(
name|StreamObserver
argument_list|<
name|PongResponse
argument_list|>
name|responseObserver
parameter_list|)
block|{
name|StreamObserver
argument_list|<
name|PingRequest
argument_list|>
name|requestObserver
init|=
operator|new
name|StreamObserver
argument_list|<
name|PingRequest
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onNext
parameter_list|(
name|PingRequest
name|request
parameter_list|)
block|{
name|PongResponse
name|response
init|=
name|PongResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPongName
argument_list|(
name|request
operator|.
name|getPingName
argument_list|()
operator|+
name|GRPC_TEST_PONG_VALUE
argument_list|)
operator|.
name|setPongId
argument_list|(
name|request
operator|.
name|getPingId
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|responseObserver
operator|.
name|onNext
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onError
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Error in pingAsyncSync() "
operator|+
name|t
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onCompleted
parameter_list|()
block|{
name|responseObserver
operator|.
name|onCompleted
argument_list|()
expr_stmt|;
block|}
block|}
decl_stmt|;
return|return
name|requestObserver
return|;
block|}
annotation|@
name|Override
DECL|method|pingAsyncAsync (StreamObserver<PongResponse> responseObserver)
specifier|public
name|StreamObserver
argument_list|<
name|PingRequest
argument_list|>
name|pingAsyncAsync
parameter_list|(
name|StreamObserver
argument_list|<
name|PongResponse
argument_list|>
name|responseObserver
parameter_list|)
block|{
name|StreamObserver
argument_list|<
name|PingRequest
argument_list|>
name|requestObserver
init|=
operator|new
name|StreamObserver
argument_list|<
name|PingRequest
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onNext
parameter_list|(
name|PingRequest
name|request
parameter_list|)
block|{
name|PongResponse
name|response
init|=
name|PongResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPongName
argument_list|(
name|request
operator|.
name|getPingName
argument_list|()
operator|+
name|GRPC_TEST_PONG_VALUE
argument_list|)
operator|.
name|setPongId
argument_list|(
name|request
operator|.
name|getPingId
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|responseObserver
operator|.
name|onNext
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onError
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Error in pingAsyncAsync() "
operator|+
name|t
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onCompleted
parameter_list|()
block|{
name|responseObserver
operator|.
name|onCompleted
argument_list|()
expr_stmt|;
block|}
block|}
decl_stmt|;
return|return
name|requestObserver
return|;
block|}
block|}
block|}
end_class

end_unit

