begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.nitrite.operation.collection
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|collection
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|AbstractNitriteOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|NitriteConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|NitriteEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|CollectionOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dizitart
operator|.
name|no2
operator|.
name|Filter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dizitart
operator|.
name|no2
operator|.
name|NitriteCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dizitart
operator|.
name|no2
operator|.
name|RemoveOptions
import|;
end_import

begin_comment
comment|/**  * Remove documents matching Filter  */
end_comment

begin_class
DECL|class|RemoveCollectionOperation
specifier|public
class|class
name|RemoveCollectionOperation
extends|extends
name|AbstractNitriteOperation
implements|implements
name|CollectionOperation
block|{
DECL|field|filter
specifier|private
name|Filter
name|filter
decl_stmt|;
DECL|field|removeOptions
specifier|private
name|RemoveOptions
name|removeOptions
decl_stmt|;
DECL|method|RemoveCollectionOperation (Filter filter)
specifier|public
name|RemoveCollectionOperation
parameter_list|(
name|Filter
name|filter
parameter_list|)
block|{
name|this
operator|.
name|filter
operator|=
name|filter
expr_stmt|;
block|}
DECL|method|RemoveCollectionOperation (Filter filter, RemoveOptions removeOptions)
specifier|public
name|RemoveCollectionOperation
parameter_list|(
name|Filter
name|filter
parameter_list|,
name|RemoveOptions
name|removeOptions
parameter_list|)
block|{
name|this
operator|.
name|filter
operator|=
name|filter
expr_stmt|;
name|this
operator|.
name|removeOptions
operator|=
name|removeOptions
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|execute (Exchange exchange, NitriteEndpoint endpoint)
specifier|protected
name|void
name|execute
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|NitriteEndpoint
name|endpoint
parameter_list|)
throws|throws
name|Exception
block|{
name|NitriteCollection
name|collection
init|=
operator|(
name|NitriteCollection
operator|)
name|endpoint
operator|.
name|getNitriteCollection
argument_list|()
decl_stmt|;
if|if
condition|(
name|filter
operator|!=
literal|null
operator|&&
name|removeOptions
operator|!=
literal|null
condition|)
block|{
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NitriteConstants
operator|.
name|WRITE_RESULT
argument_list|,
name|collection
operator|.
name|remove
argument_list|(
name|filter
argument_list|,
name|removeOptions
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NitriteConstants
operator|.
name|WRITE_RESULT
argument_list|,
name|collection
operator|.
name|remove
argument_list|(
name|filter
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

