begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.nitrite
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|collection
operator|.
name|FindCollectionOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|collection
operator|.
name|RemoveCollectionOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|common
operator|.
name|InsertOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dizitart
operator|.
name|no2
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dizitart
operator|.
name|no2
operator|.
name|event
operator|.
name|ChangeType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dizitart
operator|.
name|no2
operator|.
name|filters
operator|.
name|Filters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|NitriteConsumerCollectionTest
specifier|public
class|class
name|NitriteConsumerCollectionTest
extends|extends
name|AbstractNitriteTest
block|{
annotation|@
name|Test
DECL|method|testCollectionUpsertInsert ()
specifier|public
name|void
name|testCollectionUpsertInsert
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMinimumMessageCount
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|Document
operator|.
name|createDocument
argument_list|(
literal|"key1"
argument_list|,
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|Document
operator|.
name|createDocument
argument_list|(
literal|"key2"
argument_list|,
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
name|mock
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Exchange
argument_list|>
name|sorted
init|=
name|sortByChangeTimestamp
argument_list|(
name|mock
operator|.
name|getExchanges
argument_list|()
argument_list|)
decl_stmt|;
name|Exchange
name|change1
init|=
name|sorted
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Exchange
name|change2
init|=
name|sorted
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ChangeType
operator|.
name|INSERT
argument_list|,
name|change1
operator|.
name|getMessage
argument_list|()
operator|.
name|getHeader
argument_list|(
name|NitriteConstants
operator|.
name|CHANGE_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ChangeType
operator|.
name|INSERT
argument_list|,
name|change2
operator|.
name|getMessage
argument_list|()
operator|.
name|getHeader
argument_list|(
name|NitriteConstants
operator|.
name|CHANGE_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|change1
operator|.
name|getMessage
argument_list|()
operator|.
name|getHeader
argument_list|(
name|NitriteConstants
operator|.
name|CHANGE_TIMESTAMP
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|change2
operator|.
name|getMessage
argument_list|()
operator|.
name|getHeader
argument_list|(
name|NitriteConstants
operator|.
name|CHANGE_TIMESTAMP
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|change1
operator|.
name|getMessage
argument_list|()
operator|.
name|getBody
argument_list|(
name|Map
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|(
literal|"key1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value1"
argument_list|,
name|change1
operator|.
name|getMessage
argument_list|()
operator|.
name|getBody
argument_list|(
name|Map
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|(
literal|"key1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|change2
operator|.
name|getMessage
argument_list|()
operator|.
name|getBody
argument_list|(
name|Map
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|(
literal|"key2"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value2"
argument_list|,
name|change2
operator|.
name|getMessage
argument_list|()
operator|.
name|getBody
argument_list|(
name|Map
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|(
literal|"key2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCollectionUpsertUpdate ()
specifier|public
name|void
name|testCollectionUpsertUpdate
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMinimumMessageCount
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|Document
operator|.
name|createDocument
argument_list|(
literal|"key1"
argument_list|,
literal|"value1"
argument_list|)
operator|.
name|put
argument_list|(
literal|"_id"
argument_list|,
literal|123L
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|Document
operator|.
name|createDocument
argument_list|(
literal|"key2"
argument_list|,
literal|"value2"
argument_list|)
operator|.
name|put
argument_list|(
literal|"_id"
argument_list|,
literal|123L
argument_list|)
argument_list|)
expr_stmt|;
name|mock
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Exchange
argument_list|>
name|sorted
init|=
name|sortByChangeTimestamp
argument_list|(
name|mock
operator|.
name|getExchanges
argument_list|()
argument_list|)
decl_stmt|;
name|Exchange
name|change1
init|=
name|sorted
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Exchange
name|change2
init|=
name|sorted
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ChangeType
operator|.
name|INSERT
argument_list|,
name|change1
operator|.
name|getMessage
argument_list|()
operator|.
name|getHeader
argument_list|(
name|NitriteConstants
operator|.
name|CHANGE_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ChangeType
operator|.
name|UPDATE
argument_list|,
name|change2
operator|.
name|getMessage
argument_list|()
operator|.
name|getHeader
argument_list|(
name|NitriteConstants
operator|.
name|CHANGE_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|change1
operator|.
name|getMessage
argument_list|()
operator|.
name|getHeader
argument_list|(
name|NitriteConstants
operator|.
name|CHANGE_TIMESTAMP
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|change2
operator|.
name|getMessage
argument_list|()
operator|.
name|getHeader
argument_list|(
name|NitriteConstants
operator|.
name|CHANGE_TIMESTAMP
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|change1
operator|.
name|getMessage
argument_list|()
operator|.
name|getBody
argument_list|(
name|Map
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|(
literal|"key1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value1"
argument_list|,
name|change1
operator|.
name|getMessage
argument_list|()
operator|.
name|getBody
argument_list|(
name|Map
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|(
literal|"key1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|change2
operator|.
name|getMessage
argument_list|()
operator|.
name|getBody
argument_list|(
name|Map
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|(
literal|"key2"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value2"
argument_list|,
name|change2
operator|.
name|getMessage
argument_list|()
operator|.
name|getBody
argument_list|(
name|Map
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|(
literal|"key2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCollectionInsert ()
specifier|public
name|void
name|testCollectionInsert
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMinimumMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBodyAndHeader
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|Document
operator|.
name|createDocument
argument_list|(
literal|"key1"
argument_list|,
literal|"value1"
argument_list|)
argument_list|,
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|InsertOperation
argument_list|()
argument_list|)
expr_stmt|;
name|mock
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
name|Exchange
name|change1
init|=
name|mock
operator|.
name|getExchanges
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ChangeType
operator|.
name|INSERT
argument_list|,
name|change1
operator|.
name|getMessage
argument_list|()
operator|.
name|getHeader
argument_list|(
name|NitriteConstants
operator|.
name|CHANGE_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|change1
operator|.
name|getMessage
argument_list|()
operator|.
name|getHeader
argument_list|(
name|NitriteConstants
operator|.
name|CHANGE_TIMESTAMP
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|change1
operator|.
name|getMessage
argument_list|()
operator|.
name|getBody
argument_list|(
name|Map
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|(
literal|"key1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value1"
argument_list|,
name|change1
operator|.
name|getMessage
argument_list|()
operator|.
name|getBody
argument_list|(
name|Map
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|(
literal|"key1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCollectionRemove ()
specifier|public
name|void
name|testCollectionRemove
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMinimumMessageCount
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBodyAndHeader
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|Document
operator|.
name|createDocument
argument_list|(
literal|"key1"
argument_list|,
literal|"value1"
argument_list|)
argument_list|,
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|InsertOperation
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBodyAndHeader
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
literal|null
argument_list|,
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|RemoveCollectionOperation
argument_list|(
name|Filters
operator|.
name|eq
argument_list|(
literal|"key1"
argument_list|,
literal|"value1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:listAll"
argument_list|,
literal|null
argument_list|,
name|List
operator|.
name|class
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|mock
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Exchange
argument_list|>
name|sorted
init|=
name|sortByChangeTimestamp
argument_list|(
name|mock
operator|.
name|getExchanges
argument_list|()
argument_list|)
decl_stmt|;
name|Exchange
name|insert
init|=
name|sorted
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Exchange
name|remove
init|=
name|sorted
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ChangeType
operator|.
name|INSERT
argument_list|,
name|insert
operator|.
name|getMessage
argument_list|()
operator|.
name|getHeader
argument_list|(
name|NitriteConstants
operator|.
name|CHANGE_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ChangeType
operator|.
name|REMOVE
argument_list|,
name|remove
operator|.
name|getMessage
argument_list|()
operator|.
name|getHeader
argument_list|(
name|NitriteConstants
operator|.
name|CHANGE_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|insert
operator|.
name|getMessage
argument_list|()
operator|.
name|getHeader
argument_list|(
name|NitriteConstants
operator|.
name|CHANGE_TIMESTAMP
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|remove
operator|.
name|getMessage
argument_list|()
operator|.
name|getHeader
argument_list|(
name|NitriteConstants
operator|.
name|CHANGE_TIMESTAMP
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|fromF
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:result"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:listAll"
argument_list|)
operator|.
name|setHeader
argument_list|(
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
name|constant
argument_list|(
operator|new
name|FindCollectionOperation
argument_list|()
argument_list|)
argument_list|)
operator|.
name|toF
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

