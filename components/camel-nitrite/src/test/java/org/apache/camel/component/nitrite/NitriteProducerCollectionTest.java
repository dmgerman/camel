begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.nitrite
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|collection
operator|.
name|FindCollectionOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|collection
operator|.
name|RemoveCollectionOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|collection
operator|.
name|UpdateCollectionOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|common
operator|.
name|CreateIndexOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|common
operator|.
name|DropIndexOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|common
operator|.
name|ExportDatabaseOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|common
operator|.
name|GetAttributesOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|common
operator|.
name|GetByIdOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|common
operator|.
name|ImportDatabaseOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|common
operator|.
name|InsertOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|common
operator|.
name|ListIndicesOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|common
operator|.
name|RebuildIndexOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|common
operator|.
name|UpdateOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|common
operator|.
name|UpsertOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|repository
operator|.
name|FindRepositoryOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
operator|.
name|operation
operator|.
name|repository
operator|.
name|UpdateRepositoryOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|DefaultExchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|FileUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dizitart
operator|.
name|no2
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dizitart
operator|.
name|no2
operator|.
name|IndexOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dizitart
operator|.
name|no2
operator|.
name|IndexType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dizitart
operator|.
name|no2
operator|.
name|NitriteId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dizitart
operator|.
name|no2
operator|.
name|WriteResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dizitart
operator|.
name|no2
operator|.
name|filters
operator|.
name|Filters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dizitart
operator|.
name|no2
operator|.
name|meta
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|NitriteProducerCollectionTest
specifier|public
class|class
name|NitriteProducerCollectionTest
extends|extends
name|AbstractNitriteTest
block|{
annotation|@
name|Before
DECL|method|insertData ()
specifier|public
name|void
name|insertData
parameter_list|()
block|{
name|template
operator|.
name|sendBody
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|Document
operator|.
name|createDocument
argument_list|(
literal|"key1"
argument_list|,
literal|"value1-a"
argument_list|)
operator|.
name|put
argument_list|(
literal|"key2"
argument_list|,
literal|"value2-a"
argument_list|)
operator|.
name|put
argument_list|(
literal|"key3"
argument_list|,
literal|"value3-a"
argument_list|)
operator|.
name|put
argument_list|(
literal|"_id"
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|Document
operator|.
name|createDocument
argument_list|(
literal|"key1"
argument_list|,
literal|"value1-b"
argument_list|)
operator|.
name|put
argument_list|(
literal|"key2"
argument_list|,
literal|"value2-b"
argument_list|)
operator|.
name|put
argument_list|(
literal|"key3"
argument_list|,
literal|"value3-b"
argument_list|)
operator|.
name|put
argument_list|(
literal|"_id"
argument_list|,
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|Document
operator|.
name|createDocument
argument_list|(
literal|"key1"
argument_list|,
literal|"value1-c"
argument_list|)
operator|.
name|put
argument_list|(
literal|"key2"
argument_list|,
literal|"value2-c"
argument_list|)
operator|.
name|put
argument_list|(
literal|"key3"
argument_list|,
literal|"value3-c"
argument_list|)
operator|.
name|put
argument_list|(
literal|"_id"
argument_list|,
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|findCollectionOperation ()
specifier|public
name|void
name|findCollectionOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Document
argument_list|>
name|result
init|=
name|template
operator|.
name|requestBodyAndHeader
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
literal|null
argument_list|,
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|FindCollectionOperation
argument_list|(
name|Filters
operator|.
name|eq
argument_list|(
literal|"key1"
argument_list|,
literal|"value1-a"
argument_list|)
argument_list|)
argument_list|,
name|List
operator|.
name|class
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|result
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value1-a"
argument_list|,
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|(
literal|"key1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value2-a"
argument_list|,
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|(
literal|"key2"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value3-a"
argument_list|,
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|(
literal|"key3"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|removeCollectionOperation ()
specifier|public
name|void
name|removeCollectionOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|RemoveCollectionOperation
argument_list|(
name|Filters
operator|.
name|eq
argument_list|(
literal|"key2"
argument_list|,
literal|"value2-b"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|getHeader
argument_list|(
name|NitriteConstants
operator|.
name|WRITE_RESULT
argument_list|,
name|WriteResult
operator|.
name|class
argument_list|)
operator|.
name|getAffectedCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|updateCollectionOperation ()
specifier|public
name|void
name|updateCollectionOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|UpdateCollectionOperation
argument_list|(
name|Filters
operator|.
name|eq
argument_list|(
literal|"key2"
argument_list|,
literal|"value2-b"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|setBody
argument_list|(
name|Document
operator|.
name|createDocument
argument_list|(
literal|"key3"
argument_list|,
literal|"updatedValue"
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|getHeader
argument_list|(
name|NitriteConstants
operator|.
name|WRITE_RESULT
argument_list|,
name|WriteResult
operator|.
name|class
argument_list|)
operator|.
name|getAffectedCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createIndexOperation ()
specifier|public
name|void
name|createIndexOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|CreateIndexOperation
argument_list|(
literal|"key3"
argument_list|,
name|IndexOptions
operator|.
name|indexOptions
argument_list|(
name|IndexType
operator|.
name|Unique
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
name|Exchange
name|listIndices
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|listIndices
operator|.
name|getMessage
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|ListIndicesOperation
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|listIndices
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|listIndices
operator|.
name|getMessage
argument_list|()
operator|.
name|getBody
argument_list|(
name|List
operator|.
name|class
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|dropIndexOperation ()
specifier|public
name|void
name|dropIndexOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexOperation
argument_list|()
expr_stmt|;
name|Exchange
name|exchange
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|DropIndexOperation
argument_list|(
literal|"key3"
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
name|Exchange
name|listIndices
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|listIndices
operator|.
name|getMessage
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|ListIndicesOperation
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|listIndices
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|listIndices
operator|.
name|getMessage
argument_list|()
operator|.
name|getBody
argument_list|(
name|List
operator|.
name|class
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getAttributesOperation ()
specifier|public
name|void
name|getAttributesOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|GetAttributesOperation
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|getBody
argument_list|(
name|Attributes
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getByIdOperation ()
specifier|public
name|void
name|getByIdOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|GetByIdOperation
argument_list|(
name|NitriteId
operator|.
name|createId
argument_list|(
literal|1L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|getBody
argument_list|(
name|Document
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|insertOperation ()
specifier|public
name|void
name|insertOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|InsertOperation
argument_list|(
name|Document
operator|.
name|createDocument
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|getHeader
argument_list|(
name|NitriteConstants
operator|.
name|WRITE_RESULT
argument_list|,
name|WriteResult
operator|.
name|class
argument_list|)
operator|.
name|getAffectedCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|listIndicesOperation ()
specifier|public
name|void
name|listIndicesOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexOperation
argument_list|()
expr_stmt|;
name|Exchange
name|listIndices
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|listIndices
operator|.
name|getMessage
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|ListIndicesOperation
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|listIndices
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|listIndices
operator|.
name|getMessage
argument_list|()
operator|.
name|getBody
argument_list|(
name|List
operator|.
name|class
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|rebuildIndexOperation ()
specifier|public
name|void
name|rebuildIndexOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndexOperation
argument_list|()
expr_stmt|;
name|Exchange
name|exchange
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|RebuildIndexOperation
argument_list|(
literal|"key3"
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|updateOperation ()
specifier|public
name|void
name|updateOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|UpdateOperation
argument_list|(
name|Document
operator|.
name|createDocument
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
operator|.
name|put
argument_list|(
literal|"_id"
argument_list|,
literal|1L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|getHeader
argument_list|(
name|NitriteConstants
operator|.
name|WRITE_RESULT
argument_list|,
name|WriteResult
operator|.
name|class
argument_list|)
operator|.
name|getAffectedCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|upsertOperation ()
specifier|public
name|void
name|upsertOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|UpsertOperation
argument_list|(
name|Document
operator|.
name|createDocument
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
operator|.
name|put
argument_list|(
literal|"_id"
argument_list|,
literal|1L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|getHeader
argument_list|(
name|NitriteConstants
operator|.
name|WRITE_RESULT
argument_list|,
name|WriteResult
operator|.
name|class
argument_list|)
operator|.
name|getAffectedCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|importDatabaseOperation ()
specifier|public
name|void
name|importDatabaseOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|FileUtil
operator|.
name|deleteFile
argument_list|(
operator|new
name|File
argument_list|(
name|tempDb
argument_list|()
operator|+
literal|"clone"
argument_list|)
argument_list|)
expr_stmt|;
name|byte
index|[]
name|ddl
init|=
name|template
operator|.
name|requestBodyAndHeader
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
literal|null
argument_list|,
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|ExportDatabaseOperation
argument_list|()
argument_list|,
name|byte
index|[]
operator|.
expr|class
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|ddl
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBodyAndHeader
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
operator|+
literal|"clone"
argument_list|)
argument_list|,
name|ddl
argument_list|,
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|ImportDatabaseOperation
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|template
operator|.
name|requestBodyAndHeader
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
operator|+
literal|"clone"
argument_list|)
argument_list|,
literal|null
argument_list|,
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|FindCollectionOperation
argument_list|()
argument_list|,
name|List
operator|.
name|class
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testForbiddenOperation ()
specifier|public
name|void
name|testForbiddenOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getMessage
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NitriteConstants
operator|.
name|OPERATION
argument_list|,
operator|new
name|FindRepositoryOperation
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"nitrite://%s?collection=collection"
argument_list|,
name|tempDb
argument_list|()
argument_list|)
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"Expected exception of type IllegalArgumentException, %s given"
argument_list|,
name|exchange
operator|.
name|getException
argument_list|()
argument_list|)
argument_list|,
name|exchange
operator|.
name|getException
argument_list|()
operator|instanceof
name|IllegalArgumentException
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

