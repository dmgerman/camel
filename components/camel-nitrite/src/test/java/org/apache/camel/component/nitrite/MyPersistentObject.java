begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.nitrite
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|nitrite
package|;
end_package

begin_import
import|import
name|org
operator|.
name|dizitart
operator|.
name|no2
operator|.
name|IndexType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dizitart
operator|.
name|no2
operator|.
name|objects
operator|.
name|Id
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dizitart
operator|.
name|no2
operator|.
name|objects
operator|.
name|Index
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dizitart
operator|.
name|no2
operator|.
name|objects
operator|.
name|Indices
import|;
end_import

begin_class
annotation|@
name|Indices
argument_list|(
block|{
annotation|@
name|Index
argument_list|(
name|value
operator|=
literal|"key1"
argument_list|,
name|type
operator|=
name|IndexType
operator|.
name|NonUnique
argument_list|)
block|,
annotation|@
name|Index
argument_list|(
name|value
operator|=
literal|"key2"
argument_list|,
name|type
operator|=
name|IndexType
operator|.
name|Unique
argument_list|)
block|}
argument_list|)
DECL|class|MyPersistentObject
specifier|public
class|class
name|MyPersistentObject
block|{
annotation|@
name|Id
DECL|field|id
specifier|private
name|long
name|id
decl_stmt|;
DECL|field|key1
specifier|private
name|String
name|key1
decl_stmt|;
DECL|field|key2
specifier|private
name|String
name|key2
decl_stmt|;
DECL|field|key3
specifier|private
name|String
name|key3
decl_stmt|;
DECL|method|MyPersistentObject ()
specifier|public
name|MyPersistentObject
parameter_list|()
block|{     }
DECL|method|MyPersistentObject (long id, String key1, String key2, String key3)
specifier|public
name|MyPersistentObject
parameter_list|(
name|long
name|id
parameter_list|,
name|String
name|key1
parameter_list|,
name|String
name|key2
parameter_list|,
name|String
name|key3
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
name|this
operator|.
name|key1
operator|=
name|key1
expr_stmt|;
name|this
operator|.
name|key2
operator|=
name|key2
expr_stmt|;
name|this
operator|.
name|key3
operator|=
name|key3
expr_stmt|;
block|}
DECL|method|getId ()
specifier|public
name|long
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
DECL|method|setId (long id)
specifier|public
name|void
name|setId
parameter_list|(
name|long
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
DECL|method|getKey1 ()
specifier|public
name|String
name|getKey1
parameter_list|()
block|{
return|return
name|key1
return|;
block|}
DECL|method|setKey1 (String key1)
specifier|public
name|void
name|setKey1
parameter_list|(
name|String
name|key1
parameter_list|)
block|{
name|this
operator|.
name|key1
operator|=
name|key1
expr_stmt|;
block|}
DECL|method|getKey2 ()
specifier|public
name|String
name|getKey2
parameter_list|()
block|{
return|return
name|key2
return|;
block|}
DECL|method|setKey2 (String key2)
specifier|public
name|void
name|setKey2
parameter_list|(
name|String
name|key2
parameter_list|)
block|{
name|this
operator|.
name|key2
operator|=
name|key2
expr_stmt|;
block|}
DECL|method|getKey3 ()
specifier|public
name|String
name|getKey3
parameter_list|()
block|{
return|return
name|key3
return|;
block|}
DECL|method|setKey3 (String key3)
specifier|public
name|void
name|setKey3
parameter_list|(
name|String
name|key3
parameter_list|)
block|{
name|this
operator|.
name|key3
operator|=
name|key3
expr_stmt|;
block|}
block|}
end_class

end_unit

