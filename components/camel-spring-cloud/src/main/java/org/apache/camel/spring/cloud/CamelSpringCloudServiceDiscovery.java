begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.spring.cloud
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|cloud
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|cloud
operator|.
name|ServiceDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|cloud
operator|.
name|ServiceDiscovery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|cloud
operator|.
name|DefaultServiceDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|cloud
operator|.
name|client
operator|.
name|discovery
operator|.
name|DiscoveryClient
import|;
end_import

begin_class
DECL|class|CamelSpringCloudServiceDiscovery
specifier|public
class|class
name|CamelSpringCloudServiceDiscovery
implements|implements
name|ServiceDiscovery
block|{
DECL|field|discoveryClient
specifier|private
specifier|final
name|DiscoveryClient
name|discoveryClient
decl_stmt|;
DECL|method|CamelSpringCloudServiceDiscovery (DiscoveryClient discoveryClient)
specifier|public
name|CamelSpringCloudServiceDiscovery
parameter_list|(
name|DiscoveryClient
name|discoveryClient
parameter_list|)
block|{
name|this
operator|.
name|discoveryClient
operator|=
name|discoveryClient
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getServices (String name)
specifier|public
name|List
argument_list|<
name|ServiceDefinition
argument_list|>
name|getServices
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|discoveryClient
operator|.
name|getInstances
argument_list|(
name|name
argument_list|)
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|si
lambda|->
block|{
return|return
name|DefaultServiceDefinition
operator|.
name|builder
argument_list|()
operator|.
name|withName
argument_list|(
name|si
operator|.
name|getServiceId
argument_list|()
argument_list|)
operator|.
name|withHost
argument_list|(
name|si
operator|.
name|getHost
argument_list|()
argument_list|)
operator|.
name|withPort
argument_list|(
name|si
operator|.
name|getPort
argument_list|()
argument_list|)
operator|.
name|withId
argument_list|(
name|name
argument_list|)
operator|.
name|withMeta
argument_list|(
name|si
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

