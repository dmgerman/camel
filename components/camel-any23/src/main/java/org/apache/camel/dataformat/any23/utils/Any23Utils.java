begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.dataformat.any23.utils
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|any23
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|any23
operator|.
name|writer
operator|.
name|JSONLDWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|any23
operator|.
name|writer
operator|.
name|JSONWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|any23
operator|.
name|writer
operator|.
name|NQuadsWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|any23
operator|.
name|writer
operator|.
name|NTriplesWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|any23
operator|.
name|writer
operator|.
name|RDFXMLWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|any23
operator|.
name|writer
operator|.
name|TripleHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|any23
operator|.
name|writer
operator|.
name|TurtleWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|any23
operator|.
name|Any23OutputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|any23
operator|.
name|writer
operator|.
name|RDF4JModelWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|rdf4j
operator|.
name|model
operator|.
name|impl
operator|.
name|LinkedHashModel
import|;
end_import

begin_class
DECL|class|Any23Utils
specifier|public
specifier|final
class|class
name|Any23Utils
block|{
DECL|method|Any23Utils ()
specifier|private
name|Any23Utils
parameter_list|()
block|{     }
DECL|method|obtainHandler (Any23OutputFormat format, OutputStream outputStream)
specifier|public
specifier|static
name|TripleHandler
name|obtainHandler
parameter_list|(
name|Any23OutputFormat
name|format
parameter_list|,
name|OutputStream
name|outputStream
parameter_list|)
block|{
name|TripleHandler
name|handler
decl_stmt|;
switch|switch
condition|(
name|format
condition|)
block|{
case|case
name|NTRIPLES
case|:
name|handler
operator|=
operator|new
name|NTriplesWriter
argument_list|(
name|outputStream
argument_list|)
expr_stmt|;
break|break;
case|case
name|TURTLE
case|:
name|handler
operator|=
operator|new
name|TurtleWriter
argument_list|(
name|outputStream
argument_list|)
expr_stmt|;
break|break;
case|case
name|NQUADS
case|:
name|handler
operator|=
operator|new
name|NQuadsWriter
argument_list|(
name|outputStream
argument_list|)
expr_stmt|;
break|break;
case|case
name|RDFXML
case|:
name|handler
operator|=
operator|new
name|RDFXMLWriter
argument_list|(
name|outputStream
argument_list|)
expr_stmt|;
break|break;
case|case
name|JSONLD
case|:
name|handler
operator|=
operator|new
name|JSONLDWriter
argument_list|(
name|outputStream
argument_list|)
expr_stmt|;
break|break;
case|case
name|RDFJSON
case|:
name|handler
operator|=
operator|new
name|JSONWriter
argument_list|(
name|outputStream
argument_list|)
expr_stmt|;
break|break;
case|case
name|RDF4JMODEL
case|:
name|handler
operator|=
operator|new
name|RDF4JModelWriter
argument_list|(
operator|new
name|LinkedHashModel
argument_list|()
argument_list|)
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|AssertionError
argument_list|(
name|format
operator|.
name|name
argument_list|()
argument_list|)
throw|;
block|}
return|return
name|handler
return|;
block|}
block|}
end_class

end_unit

