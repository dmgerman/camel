begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.bam.model
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|bam
operator|.
name|model
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|CascadeType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Column
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|FetchType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|ManyToOne
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Table
import|;
end_import

begin_comment
comment|/**  * @version   */
end_comment

begin_class
annotation|@
name|Entity
annotation|@
name|Table
argument_list|(
name|name
operator|=
literal|"CAMEL_ACTIVITYDEFINITION"
argument_list|)
DECL|class|ActivityDefinition
specifier|public
class|class
name|ActivityDefinition
extends|extends
name|EntitySupport
block|{
DECL|field|name
specifier|private
name|String
name|name
decl_stmt|;
DECL|field|processDefinition
specifier|private
name|ProcessDefinition
name|processDefinition
decl_stmt|;
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"Activity["
operator|+
name|getId
argument_list|()
operator|+
literal|" name: "
operator|+
name|getName
argument_list|()
operator|+
literal|"]"
return|;
block|}
annotation|@
name|Column
argument_list|(
name|unique
operator|=
literal|true
argument_list|)
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|setName (String name)
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
annotation|@
name|ManyToOne
argument_list|(
name|fetch
operator|=
name|FetchType
operator|.
name|LAZY
argument_list|,
name|cascade
operator|=
block|{
name|CascadeType
operator|.
name|PERSIST
block|,
name|CascadeType
operator|.
name|MERGE
block|}
argument_list|)
DECL|method|getProcessDefinition ()
specifier|public
name|ProcessDefinition
name|getProcessDefinition
parameter_list|()
block|{
return|return
name|processDefinition
return|;
block|}
DECL|method|setProcessDefinition (ProcessDefinition processDefinition)
specifier|public
name|void
name|setProcessDefinition
parameter_list|(
name|ProcessDefinition
name|processDefinition
parameter_list|)
block|{
name|this
operator|.
name|processDefinition
operator|=
name|processDefinition
expr_stmt|;
block|}
block|}
end_class

end_unit

