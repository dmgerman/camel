begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.bam.rules
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|bam
operator|.
name|rules
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|bam
operator|.
name|ProcessBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|bam
operator|.
name|model
operator|.
name|ActivityDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|bam
operator|.
name|model
operator|.
name|ActivityState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|bam
operator|.
name|model
operator|.
name|ProcessInstance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|ServiceSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ServiceHelper
import|;
end_import

begin_comment
comment|/**  * Represents a activity which is typically a system or could be an endpoint  *  * @version   */
end_comment

begin_class
DECL|class|ActivityRules
specifier|public
class|class
name|ActivityRules
extends|extends
name|ServiceSupport
block|{
DECL|field|expectedMessages
specifier|private
name|int
name|expectedMessages
init|=
literal|1
decl_stmt|;
DECL|field|processRules
specifier|private
name|ProcessRules
name|processRules
decl_stmt|;
DECL|field|rules
specifier|private
name|List
argument_list|<
name|TemporalRule
argument_list|>
name|rules
init|=
operator|new
name|ArrayList
argument_list|<
name|TemporalRule
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|activityName
specifier|private
name|String
name|activityName
decl_stmt|;
DECL|field|builder
specifier|private
specifier|final
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|bam
operator|.
name|ProcessBuilder
name|builder
decl_stmt|;
DECL|method|ActivityRules (ProcessBuilder builder)
specifier|public
name|ActivityRules
parameter_list|(
name|ProcessBuilder
name|builder
parameter_list|)
block|{
name|this
operator|.
name|builder
operator|=
name|builder
expr_stmt|;
name|this
operator|.
name|processRules
operator|=
name|builder
operator|.
name|getProcessRules
argument_list|()
expr_stmt|;
name|processRules
operator|.
name|getActivities
argument_list|()
operator|.
name|add
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
DECL|method|addRule (TemporalRule rule)
specifier|public
name|void
name|addRule
parameter_list|(
name|TemporalRule
name|rule
parameter_list|)
block|{
name|rules
operator|.
name|add
argument_list|(
name|rule
argument_list|)
expr_stmt|;
block|}
comment|/**      * Handles overdue activities      */
DECL|method|processExpired (ActivityState activityState)
specifier|public
name|void
name|processExpired
parameter_list|(
name|ActivityState
name|activityState
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|TemporalRule
name|rule
range|:
name|rules
control|)
block|{
name|rule
operator|.
name|processExpired
argument_list|(
name|activityState
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|processExchange (Exchange exchange, ProcessInstance process)
specifier|public
name|void
name|processExchange
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|ProcessInstance
name|process
parameter_list|)
block|{
for|for
control|(
name|TemporalRule
name|rule
range|:
name|rules
control|)
block|{
name|rule
operator|.
name|processExchange
argument_list|(
name|exchange
argument_list|,
name|process
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Properties
comment|//-------------------------------------------------------------------------
DECL|method|getActivityDefinition ()
specifier|public
name|ActivityDefinition
name|getActivityDefinition
parameter_list|()
block|{
comment|// lets always query for it, to avoid issues with refreshing before a commit etc
return|return
name|builder
operator|.
name|findOrCreateActivityDefinition
argument_list|(
name|activityName
argument_list|)
return|;
block|}
DECL|method|setActivityDefinition (ActivityDefinition activityDefinition)
specifier|public
name|void
name|setActivityDefinition
parameter_list|(
name|ActivityDefinition
name|activityDefinition
parameter_list|)
block|{     }
DECL|method|getExpectedMessages ()
specifier|public
name|int
name|getExpectedMessages
parameter_list|()
block|{
return|return
name|expectedMessages
return|;
block|}
DECL|method|setExpectedMessages (int expectedMessages)
specifier|public
name|void
name|setExpectedMessages
parameter_list|(
name|int
name|expectedMessages
parameter_list|)
block|{
name|this
operator|.
name|expectedMessages
operator|=
name|expectedMessages
expr_stmt|;
block|}
DECL|method|getProcessRules ()
specifier|public
name|ProcessRules
name|getProcessRules
parameter_list|()
block|{
return|return
name|processRules
return|;
block|}
DECL|method|setActivityName (String activityName)
specifier|public
name|void
name|setActivityName
parameter_list|(
name|String
name|activityName
parameter_list|)
block|{
name|this
operator|.
name|activityName
operator|=
name|activityName
expr_stmt|;
block|}
comment|// Implementation methods
comment|//-------------------------------------------------------------------------
DECL|method|doStart ()
specifier|protected
name|void
name|doStart
parameter_list|()
throws|throws
name|Exception
block|{
name|ServiceHelper
operator|.
name|startServices
argument_list|(
name|rules
argument_list|)
expr_stmt|;
block|}
DECL|method|doStop ()
specifier|protected
name|void
name|doStop
parameter_list|()
throws|throws
name|Exception
block|{
name|ServiceHelper
operator|.
name|stopServices
argument_list|(
name|rules
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

