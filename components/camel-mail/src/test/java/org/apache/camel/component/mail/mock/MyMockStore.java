begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.mail.mock
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mail
operator|.
name|mock
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|Folder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|MessagingException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|URLName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jvnet
operator|.
name|mock_javamail
operator|.
name|Aliases
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jvnet
operator|.
name|mock_javamail
operator|.
name|Mailbox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jvnet
operator|.
name|mock_javamail
operator|.
name|MockStore
import|;
end_import

begin_class
DECL|class|MyMockStore
specifier|public
class|class
name|MyMockStore
extends|extends
name|MockStore
block|{
DECL|field|folders
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Folder
argument_list|>
name|folders
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|address
specifier|private
name|String
name|address
decl_stmt|;
DECL|method|MyMockStore (Session session, URLName urlname)
specifier|public
name|MyMockStore
parameter_list|(
name|Session
name|session
parameter_list|,
name|URLName
name|urlname
parameter_list|)
block|{
name|super
argument_list|(
name|session
argument_list|,
name|urlname
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|protocolConnect (String host, int port, String user, String password)
specifier|protected
name|boolean
name|protocolConnect
parameter_list|(
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|,
name|String
name|user
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|MessagingException
block|{
name|address
operator|=
name|user
operator|+
literal|'@'
operator|+
name|host
expr_stmt|;
return|return
name|super
operator|.
name|protocolConnect
argument_list|(
name|host
argument_list|,
name|port
argument_list|,
name|user
argument_list|,
name|password
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getFolder (String name)
specifier|public
name|Folder
name|getFolder
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|MessagingException
block|{
if|if
condition|(
literal|"INBOX"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
return|return
name|super
operator|.
name|getFolder
argument_list|(
name|name
argument_list|)
return|;
block|}
name|Folder
name|folder
init|=
name|folders
operator|.
name|get
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|folder
operator|==
literal|null
condition|)
block|{
comment|// need a new mailbox as its a sub folder
name|String
name|adr
init|=
name|name
operator|+
literal|"-"
operator|+
name|address
decl_stmt|;
name|Mailbox
name|mailbox
init|=
name|Mailbox
operator|.
name|get
argument_list|(
name|Aliases
operator|.
name|getInstance
argument_list|()
operator|.
name|resolve
argument_list|(
name|adr
argument_list|)
argument_list|)
decl_stmt|;
name|folder
operator|=
operator|new
name|MyMockFolder
argument_list|(
name|this
argument_list|,
name|mailbox
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|folders
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|folder
argument_list|)
expr_stmt|;
block|}
return|return
name|folder
return|;
block|}
block|}
end_class

end_unit

