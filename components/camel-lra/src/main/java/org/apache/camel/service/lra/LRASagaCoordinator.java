begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.service.lra
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|service
operator|.
name|lra
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CompletableFuture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|saga
operator|.
name|CamelSagaCoordinator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|saga
operator|.
name|CamelSagaStep
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|LRASagaCoordinator
specifier|public
class|class
name|LRASagaCoordinator
implements|implements
name|CamelSagaCoordinator
block|{
DECL|field|sagaService
specifier|private
name|LRASagaService
name|sagaService
decl_stmt|;
DECL|field|lraURL
specifier|private
name|URL
name|lraURL
decl_stmt|;
DECL|method|LRASagaCoordinator (LRASagaService sagaService, URL lraURL)
specifier|public
name|LRASagaCoordinator
parameter_list|(
name|LRASagaService
name|sagaService
parameter_list|,
name|URL
name|lraURL
parameter_list|)
block|{
name|this
operator|.
name|sagaService
operator|=
name|ObjectHelper
operator|.
name|notNull
argument_list|(
name|sagaService
argument_list|,
literal|"sagaService"
argument_list|)
expr_stmt|;
name|this
operator|.
name|lraURL
operator|=
name|ObjectHelper
operator|.
name|notNull
argument_list|(
name|lraURL
argument_list|,
literal|"lraURL"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|beginStep (Exchange exchange, CamelSagaStep step)
specifier|public
name|CompletableFuture
argument_list|<
name|Void
argument_list|>
name|beginStep
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|CamelSagaStep
name|step
parameter_list|)
block|{
name|LRASagaStep
name|sagaStep
init|=
name|LRASagaStep
operator|.
name|fromCamelSagaStep
argument_list|(
name|step
argument_list|,
name|exchange
argument_list|)
decl_stmt|;
return|return
name|sagaService
operator|.
name|getClient
argument_list|()
operator|.
name|join
argument_list|(
name|this
operator|.
name|lraURL
argument_list|,
name|sagaStep
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|compensate ()
specifier|public
name|CompletableFuture
argument_list|<
name|Void
argument_list|>
name|compensate
parameter_list|()
block|{
return|return
name|sagaService
operator|.
name|getClient
argument_list|()
operator|.
name|compensate
argument_list|(
name|this
operator|.
name|lraURL
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|complete ()
specifier|public
name|CompletableFuture
argument_list|<
name|Void
argument_list|>
name|complete
parameter_list|()
block|{
return|return
name|sagaService
operator|.
name|getClient
argument_list|()
operator|.
name|complete
argument_list|(
name|this
operator|.
name|lraURL
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getId ()
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|this
operator|.
name|lraURL
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

