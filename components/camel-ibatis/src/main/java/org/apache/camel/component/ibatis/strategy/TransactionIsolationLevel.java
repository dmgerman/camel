begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.ibatis.strategy
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ibatis
operator|.
name|strategy
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_enum
DECL|enum|TransactionIsolationLevel
specifier|public
enum|enum
name|TransactionIsolationLevel
block|{
DECL|enumConstant|TRANSACTION_NONE
name|TRANSACTION_NONE
argument_list|(
literal|0
argument_list|)
block|,
DECL|enumConstant|TRANSACTION_READ_UNCOMMITTED
name|TRANSACTION_READ_UNCOMMITTED
argument_list|(
literal|1
argument_list|)
block|,
DECL|enumConstant|TRANSACTION_READ_COMMITTED
name|TRANSACTION_READ_COMMITTED
argument_list|(
literal|2
argument_list|)
block|,
DECL|enumConstant|TRANSACTION_REPEATABLE_READ
name|TRANSACTION_REPEATABLE_READ
argument_list|(
literal|4
argument_list|)
block|,
DECL|enumConstant|TRANSACTION_SERIALIZABLE
name|TRANSACTION_SERIALIZABLE
argument_list|(
literal|8
argument_list|)
block|;
DECL|field|MAP
specifier|protected
specifier|static
specifier|final
name|Map
argument_list|<
name|Integer
argument_list|,
name|TransactionIsolationLevel
argument_list|>
name|MAP
init|=
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|TransactionIsolationLevel
argument_list|>
argument_list|()
decl_stmt|;
static|static
block|{
for|for
control|(
name|TransactionIsolationLevel
name|transactionIsolationLevel
range|:
name|values
argument_list|()
control|)
block|{
name|MAP
operator|.
name|put
argument_list|(
name|transactionIsolationLevel
operator|.
name|getValue
argument_list|()
argument_list|,
name|transactionIsolationLevel
argument_list|)
expr_stmt|;
block|}
block|}
DECL|field|value
name|int
name|value
decl_stmt|;
DECL|method|TransactionIsolationLevel (int value)
name|TransactionIsolationLevel
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
DECL|method|intValueOf (String name)
specifier|public
specifier|static
name|int
name|intValueOf
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|valueOf
argument_list|(
name|name
argument_list|)
operator|.
name|getValue
argument_list|()
return|;
block|}
DECL|method|nameOf (int level)
specifier|public
specifier|static
name|String
name|nameOf
parameter_list|(
name|int
name|level
parameter_list|)
block|{
return|return
name|MAP
operator|.
name|get
argument_list|(
name|level
argument_list|)
operator|.
name|name
argument_list|()
return|;
block|}
DECL|method|getValue ()
specifier|public
name|int
name|getValue
parameter_list|()
block|{
return|return
name|value
return|;
block|}
block|}
end_enum

end_unit

