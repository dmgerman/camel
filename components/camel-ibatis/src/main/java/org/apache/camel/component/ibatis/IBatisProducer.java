begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.ibatis
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ibatis
package|;
end_package

begin_import
import|import
name|com
operator|.
name|ibatis
operator|.
name|sqlmap
operator|.
name|client
operator|.
name|SqlMapClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ExchangeHelper
import|;
end_import

begin_comment
comment|/**  * @version $Revision: 1.1 $  */
end_comment

begin_class
DECL|class|IBatisProducer
specifier|public
class|class
name|IBatisProducer
extends|extends
name|DefaultProducer
block|{
DECL|field|sqlClient
specifier|private
name|SqlMapClient
name|sqlClient
decl_stmt|;
DECL|field|endpoint
specifier|private
specifier|final
name|IBatisEndpoint
name|endpoint
decl_stmt|;
DECL|method|IBatisProducer (IBatisEndpoint endpoint)
specifier|public
name|IBatisProducer
parameter_list|(
name|IBatisEndpoint
name|endpoint
parameter_list|)
block|{
name|super
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
name|this
operator|.
name|endpoint
operator|=
name|endpoint
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getEndpoint ()
specifier|public
name|IBatisEndpoint
name|getEndpoint
parameter_list|()
block|{
return|return
operator|(
name|IBatisEndpoint
operator|)
name|super
operator|.
name|getEndpoint
argument_list|()
return|;
block|}
DECL|method|process (Exchange exchange)
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|sqlClient
operator|==
literal|null
condition|)
block|{
name|sqlClient
operator|=
name|endpoint
operator|.
name|getSqlClient
argument_list|()
expr_stmt|;
block|}
name|Object
name|body
init|=
name|ExchangeHelper
operator|.
name|getMandatoryInBody
argument_list|(
name|exchange
argument_list|)
decl_stmt|;
name|String
name|operation
init|=
name|getOperationName
argument_list|(
name|exchange
argument_list|)
decl_stmt|;
name|sqlClient
operator|.
name|insert
argument_list|(
name|operation
argument_list|,
name|body
argument_list|)
expr_stmt|;
block|}
comment|/**      * Returns the iBatis insert operation name      */
DECL|method|getOperationName (Exchange exchange)
specifier|protected
name|String
name|getOperationName
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
return|return
name|endpoint
operator|.
name|getEntityName
argument_list|()
return|;
block|}
block|}
end_class

end_unit

