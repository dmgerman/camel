begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.ibatis
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ibatis
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|ibatis
operator|.
name|sqlmap
operator|.
name|client
operator|.
name|SqlMapClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|ibatis
operator|.
name|sqlmap
operator|.
name|client
operator|.
name|SqlMapClientBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|ClassPathResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|Resource
import|;
end_import

begin_comment
comment|/**  * An<a href="http://activemq.apache.org/camel/ibatis.html>iBatis Component</a>  * for performing SQL operations using an XML mapping file to abstract away the SQL  *  * @version $Revision: 1.1 $  */
end_comment

begin_class
DECL|class|IBatisComponent
specifier|public
class|class
name|IBatisComponent
extends|extends
name|DefaultComponent
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
specifier|transient
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|IBatisComponent
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|DEFAULT_CONFIG_URI
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_CONFIG_URI
init|=
literal|"SqlMapConfig.xml"
decl_stmt|;
DECL|field|sqlMapClient
specifier|private
name|SqlMapClient
name|sqlMapClient
decl_stmt|;
DECL|field|sqlMapResource
specifier|private
name|Resource
name|sqlMapResource
decl_stmt|;
DECL|method|IBatisComponent ()
specifier|public
name|IBatisComponent
parameter_list|()
block|{     }
DECL|method|IBatisComponent (SqlMapClient sqlMapClient)
specifier|public
name|IBatisComponent
parameter_list|(
name|SqlMapClient
name|sqlMapClient
parameter_list|)
block|{
name|this
operator|.
name|sqlMapClient
operator|=
name|sqlMapClient
expr_stmt|;
block|}
comment|// Properties
comment|//-------------------------------------------------------------------------
DECL|method|getSqlMapClient ()
specifier|public
name|SqlMapClient
name|getSqlMapClient
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|sqlMapClient
operator|==
literal|null
condition|)
block|{
name|sqlMapClient
operator|=
name|createSqlMapClient
argument_list|()
expr_stmt|;
block|}
return|return
name|sqlMapClient
return|;
block|}
DECL|method|setSqlMapClient (SqlMapClient sqlMapClient)
specifier|public
name|void
name|setSqlMapClient
parameter_list|(
name|SqlMapClient
name|sqlMapClient
parameter_list|)
block|{
name|this
operator|.
name|sqlMapClient
operator|=
name|sqlMapClient
expr_stmt|;
block|}
DECL|method|getSqlMapResource ()
specifier|public
name|Resource
name|getSqlMapResource
parameter_list|()
block|{
if|if
condition|(
name|sqlMapResource
operator|==
literal|null
condition|)
block|{
name|sqlMapResource
operator|=
operator|new
name|ClassPathResource
argument_list|(
name|DEFAULT_CONFIG_URI
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Defaulting to use the iBatis configuration from: "
operator|+
name|sqlMapResource
argument_list|)
expr_stmt|;
block|}
return|return
name|sqlMapResource
return|;
block|}
DECL|method|setSqlMapResource (Resource sqlMapResource)
specifier|public
name|void
name|setSqlMapResource
parameter_list|(
name|Resource
name|sqlMapResource
parameter_list|)
block|{
name|this
operator|.
name|sqlMapResource
operator|=
name|sqlMapResource
expr_stmt|;
block|}
comment|// Implementation methods
comment|//-------------------------------------------------------------------------
DECL|method|createEndpoint (String uri, String remaining, Map parameters)
specifier|protected
name|Endpoint
name|createEndpoint
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|remaining
parameter_list|,
name|Map
name|parameters
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|new
name|IBatisEndpoint
argument_list|(
name|uri
argument_list|,
name|this
argument_list|,
name|remaining
argument_list|)
return|;
block|}
DECL|method|createSqlMapClient ()
specifier|protected
name|SqlMapClient
name|createSqlMapClient
parameter_list|()
throws|throws
name|IOException
block|{
name|InputStream
name|in
init|=
name|getSqlMapResource
argument_list|()
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
return|return
name|SqlMapClientBuilder
operator|.
name|buildSqlMapClient
argument_list|(
name|in
argument_list|)
return|;
block|}
block|}
end_class

end_unit

