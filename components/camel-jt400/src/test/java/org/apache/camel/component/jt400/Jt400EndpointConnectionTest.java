begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jt400
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jt400
package|;
end_package

begin_import
import|import
name|com
operator|.
name|ibm
operator|.
name|as400
operator|.
name|access
operator|.
name|AS400
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|Jt400EndpointConnectionTest
specifier|public
class|class
name|Jt400EndpointConnectionTest
extends|extends
name|Jt400TestSupport
block|{
DECL|field|jt400Endpoint
specifier|private
name|Jt400Endpoint
name|jt400Endpoint
decl_stmt|;
DECL|field|connection
specifier|private
name|AS400
name|connection
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|jt400Endpoint
operator|=
operator|new
name|Jt400Endpoint
argument_list|(
literal|"jt400://USER:password@host/QSYS.LIB/LIBRARY.LIB/QUEUE.DTAQ"
argument_list|,
name|getConnectionPool
argument_list|()
argument_list|)
expr_stmt|;
name|jt400Endpoint
operator|.
name|setCcsid
argument_list|(
literal|37
argument_list|)
expr_stmt|;
name|connection
operator|=
name|jt400Endpoint
operator|.
name|getConnection
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|connection
operator|!=
literal|null
condition|)
block|{
name|jt400Endpoint
operator|.
name|releaseConnection
argument_list|(
name|connection
argument_list|)
expr_stmt|;
block|}
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSystemName ()
specifier|public
name|void
name|testSystemName
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"host"
argument_list|,
name|connection
operator|.
name|getSystemName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUserId ()
specifier|public
name|void
name|testUserId
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"USER"
argument_list|,
name|connection
operator|.
name|getUserId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCssid ()
specifier|public
name|void
name|testCssid
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|37
argument_list|,
name|connection
operator|.
name|getCcsid
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGuiAvailable ()
specifier|public
name|void
name|testGuiAvailable
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|connection
operator|.
name|isGuiAvailable
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

