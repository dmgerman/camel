begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.aws.swf
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|aws
operator|.
name|swf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|flow
operator|.
name|DynamicWorkflowClientExternal
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|flow
operator|.
name|DynamicWorkflowClientExternalImpl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|flow
operator|.
name|StartWorkflowOptions
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|flow
operator|.
name|common
operator|.
name|FlowHelpers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|flow
operator|.
name|common
operator|.
name|WorkflowExecutionUtils
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|flow
operator|.
name|worker
operator|.
name|GenericWorkflowClientExternalImpl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|model
operator|.
name|ChildPolicy
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|model
operator|.
name|DescribeWorkflowExecutionRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|model
operator|.
name|HistoryEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|model
operator|.
name|WorkflowExecution
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|model
operator|.
name|WorkflowExecutionDetail
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|model
operator|.
name|WorkflowExecutionInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|model
operator|.
name|WorkflowType
import|;
end_import

begin_class
DECL|class|CamelSWFWorkflowClient
specifier|public
class|class
name|CamelSWFWorkflowClient
block|{
DECL|field|endpoint
specifier|private
specifier|final
name|SWFEndpoint
name|endpoint
decl_stmt|;
DECL|field|configuration
specifier|private
specifier|final
name|SWFConfiguration
name|configuration
decl_stmt|;
DECL|method|CamelSWFWorkflowClient (SWFEndpoint endpoint, SWFConfiguration configuration)
specifier|public
name|CamelSWFWorkflowClient
parameter_list|(
name|SWFEndpoint
name|endpoint
parameter_list|,
name|SWFConfiguration
name|configuration
parameter_list|)
block|{
name|this
operator|.
name|endpoint
operator|=
name|endpoint
expr_stmt|;
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
block|}
DECL|method|signalWorkflowExecution (String workflowId, String runId, String signalName, Object arguments)
specifier|public
name|void
name|signalWorkflowExecution
parameter_list|(
name|String
name|workflowId
parameter_list|,
name|String
name|runId
parameter_list|,
name|String
name|signalName
parameter_list|,
name|Object
name|arguments
parameter_list|)
block|{
name|DynamicWorkflowClientExternal
name|dynamicWorkflowClientExternal
init|=
name|getDynamicWorkflowClient
argument_list|(
name|workflowId
argument_list|,
name|runId
argument_list|)
decl_stmt|;
name|dynamicWorkflowClientExternal
operator|.
name|signalWorkflowExecution
argument_list|(
name|signalName
argument_list|,
name|toArray
argument_list|(
name|arguments
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getWorkflowExecutionState (String workflowId, String runId, Class<?> aClass)
specifier|public
name|Object
name|getWorkflowExecutionState
parameter_list|(
name|String
name|workflowId
parameter_list|,
name|String
name|runId
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|aClass
parameter_list|)
throws|throws
name|Throwable
block|{
name|DynamicWorkflowClientExternal
name|dynamicWorkflowClientExternal
init|=
name|getDynamicWorkflowClient
argument_list|(
name|workflowId
argument_list|,
name|runId
argument_list|)
decl_stmt|;
return|return
name|dynamicWorkflowClientExternal
operator|.
name|getWorkflowExecutionState
argument_list|(
name|aClass
argument_list|)
return|;
block|}
DECL|method|requestCancelWorkflowExecution (String workflowId, String runId)
specifier|public
name|void
name|requestCancelWorkflowExecution
parameter_list|(
name|String
name|workflowId
parameter_list|,
name|String
name|runId
parameter_list|)
block|{
name|DynamicWorkflowClientExternal
name|dynamicWorkflowClientExternal
init|=
name|getDynamicWorkflowClient
argument_list|(
name|workflowId
argument_list|,
name|runId
argument_list|)
decl_stmt|;
name|dynamicWorkflowClientExternal
operator|.
name|requestCancelWorkflowExecution
argument_list|()
expr_stmt|;
block|}
DECL|method|terminateWorkflowExecution (String workflowId, String runId, String reason, String details, String childPolicy)
specifier|public
name|void
name|terminateWorkflowExecution
parameter_list|(
name|String
name|workflowId
parameter_list|,
name|String
name|runId
parameter_list|,
name|String
name|reason
parameter_list|,
name|String
name|details
parameter_list|,
name|String
name|childPolicy
parameter_list|)
block|{
name|DynamicWorkflowClientExternal
name|dynamicWorkflowClientExternal
init|=
name|getDynamicWorkflowClient
argument_list|(
name|workflowId
argument_list|,
name|runId
argument_list|)
decl_stmt|;
name|ChildPolicy
name|policy
init|=
name|childPolicy
operator|!=
literal|null
condition|?
name|ChildPolicy
operator|.
name|valueOf
argument_list|(
name|childPolicy
argument_list|)
else|:
literal|null
decl_stmt|;
name|dynamicWorkflowClientExternal
operator|.
name|terminateWorkflowExecution
argument_list|(
name|reason
argument_list|,
name|details
argument_list|,
name|policy
argument_list|)
expr_stmt|;
block|}
DECL|method|startWorkflowExecution (String workflowId, String runId, String eventName, String version, Object arguments, List<String> tags)
specifier|public
name|String
index|[]
name|startWorkflowExecution
parameter_list|(
name|String
name|workflowId
parameter_list|,
name|String
name|runId
parameter_list|,
name|String
name|eventName
parameter_list|,
name|String
name|version
parameter_list|,
name|Object
name|arguments
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|tags
parameter_list|)
block|{
name|DynamicWorkflowClientExternalImpl
name|dynamicWorkflowClientExternal
init|=
operator|(
name|DynamicWorkflowClientExternalImpl
operator|)
name|getDynamicWorkflowClient
argument_list|(
name|workflowId
argument_list|,
name|runId
argument_list|)
decl_stmt|;
name|WorkflowType
name|workflowType
init|=
operator|new
name|WorkflowType
argument_list|()
decl_stmt|;
name|workflowType
operator|.
name|setName
argument_list|(
name|eventName
argument_list|)
expr_stmt|;
name|workflowType
operator|.
name|setVersion
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|dynamicWorkflowClientExternal
operator|.
name|setWorkflowType
argument_list|(
name|workflowType
argument_list|)
expr_stmt|;
name|StartWorkflowOptions
name|startWorkflowOptions
init|=
operator|new
name|StartWorkflowOptions
argument_list|()
decl_stmt|;
name|startWorkflowOptions
operator|.
name|setTaskStartToCloseTimeoutSeconds
argument_list|(
name|FlowHelpers
operator|.
name|durationToSeconds
argument_list|(
name|configuration
operator|.
name|getTaskStartToCloseTimeout
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|startWorkflowOptions
operator|.
name|setExecutionStartToCloseTimeoutSeconds
argument_list|(
name|FlowHelpers
operator|.
name|durationToSeconds
argument_list|(
name|configuration
operator|.
name|getExecutionStartToCloseTimeout
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|startWorkflowOptions
operator|.
name|setTagList
argument_list|(
name|tags
argument_list|)
expr_stmt|;
name|dynamicWorkflowClientExternal
operator|.
name|setSchedulingOptions
argument_list|(
name|startWorkflowOptions
argument_list|)
expr_stmt|;
name|dynamicWorkflowClientExternal
operator|.
name|startWorkflowExecution
argument_list|(
name|toArray
argument_list|(
name|arguments
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|newWorkflowId
init|=
name|dynamicWorkflowClientExternal
operator|.
name|getWorkflowExecution
argument_list|()
operator|.
name|getWorkflowId
argument_list|()
decl_stmt|;
name|String
name|newRunId
init|=
name|dynamicWorkflowClientExternal
operator|.
name|getWorkflowExecution
argument_list|()
operator|.
name|getRunId
argument_list|()
decl_stmt|;
return|return
operator|new
name|String
index|[]
block|{
name|newWorkflowId
block|,
name|newRunId
block|}
return|;
block|}
DECL|method|describeWorkflowInstance (String workflowId, String runId)
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|describeWorkflowInstance
parameter_list|(
name|String
name|workflowId
parameter_list|,
name|String
name|runId
parameter_list|)
block|{
name|DescribeWorkflowExecutionRequest
name|describeRequest
init|=
operator|new
name|DescribeWorkflowExecutionRequest
argument_list|()
decl_stmt|;
name|describeRequest
operator|.
name|setDomain
argument_list|(
name|configuration
operator|.
name|getDomainName
argument_list|()
argument_list|)
expr_stmt|;
name|describeRequest
operator|.
name|setExecution
argument_list|(
operator|new
name|WorkflowExecution
argument_list|()
operator|.
name|withWorkflowId
argument_list|(
name|workflowId
argument_list|)
operator|.
name|withRunId
argument_list|(
name|runId
argument_list|)
argument_list|)
expr_stmt|;
name|WorkflowExecutionDetail
name|executionDetail
init|=
name|endpoint
operator|.
name|getSWClient
argument_list|()
operator|.
name|describeWorkflowExecution
argument_list|(
name|describeRequest
argument_list|)
decl_stmt|;
name|WorkflowExecutionInfo
name|instanceMetadata
init|=
name|executionDetail
operator|.
name|getExecutionInfo
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|info
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|info
operator|.
name|put
argument_list|(
literal|"closeStatus"
argument_list|,
name|instanceMetadata
operator|.
name|getCloseStatus
argument_list|()
argument_list|)
expr_stmt|;
name|info
operator|.
name|put
argument_list|(
literal|"closeTimestamp"
argument_list|,
name|instanceMetadata
operator|.
name|getCloseTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|info
operator|.
name|put
argument_list|(
literal|"executionStatus"
argument_list|,
name|instanceMetadata
operator|.
name|getExecutionStatus
argument_list|()
argument_list|)
expr_stmt|;
name|info
operator|.
name|put
argument_list|(
literal|"tagList"
argument_list|,
name|instanceMetadata
operator|.
name|getTagList
argument_list|()
argument_list|)
expr_stmt|;
name|info
operator|.
name|put
argument_list|(
literal|"executionDetail"
argument_list|,
name|executionDetail
argument_list|)
expr_stmt|;
return|return
name|info
return|;
block|}
DECL|method|getWorkflowExecutionHistory (String workflowId, String runId)
specifier|public
name|List
argument_list|<
name|HistoryEvent
argument_list|>
name|getWorkflowExecutionHistory
parameter_list|(
name|String
name|workflowId
parameter_list|,
name|String
name|runId
parameter_list|)
block|{
return|return
name|WorkflowExecutionUtils
operator|.
name|getHistory
argument_list|(
name|endpoint
operator|.
name|getSWClient
argument_list|()
argument_list|,
name|configuration
operator|.
name|getDomainName
argument_list|()
argument_list|,
operator|new
name|WorkflowExecution
argument_list|()
operator|.
name|withWorkflowId
argument_list|(
name|workflowId
argument_list|)
operator|.
name|withRunId
argument_list|(
name|runId
argument_list|)
argument_list|)
return|;
block|}
DECL|method|getDynamicWorkflowClient (String workflowId, String runId)
name|DynamicWorkflowClientExternal
name|getDynamicWorkflowClient
parameter_list|(
name|String
name|workflowId
parameter_list|,
name|String
name|runId
parameter_list|)
block|{
name|GenericWorkflowClientExternalImpl
name|genericClient
init|=
operator|new
name|GenericWorkflowClientExternalImpl
argument_list|(
name|endpoint
operator|.
name|getSWClient
argument_list|()
argument_list|,
name|configuration
operator|.
name|getDomainName
argument_list|()
argument_list|)
decl_stmt|;
name|WorkflowExecution
name|workflowExecution
init|=
operator|new
name|WorkflowExecution
argument_list|()
decl_stmt|;
name|workflowExecution
operator|.
name|setWorkflowId
argument_list|(
name|workflowId
operator|!=
literal|null
condition|?
name|workflowId
else|:
name|genericClient
operator|.
name|generateUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|workflowExecution
operator|.
name|setRunId
argument_list|(
name|runId
argument_list|)
expr_stmt|;
return|return
operator|new
name|DynamicWorkflowClientExternalImpl
argument_list|(
name|workflowExecution
argument_list|,
literal|null
argument_list|,
name|endpoint
operator|.
name|getStartWorkflowOptions
argument_list|()
argument_list|,
name|configuration
operator|.
name|getDataConverter
argument_list|()
argument_list|,
name|genericClient
argument_list|)
return|;
block|}
DECL|method|toArray (Object input)
specifier|private
name|Object
index|[]
name|toArray
parameter_list|(
name|Object
name|input
parameter_list|)
block|{
name|Object
index|[]
name|inputArray
decl_stmt|;
if|if
condition|(
name|input
operator|instanceof
name|Object
index|[]
condition|)
block|{
name|inputArray
operator|=
operator|(
name|Object
index|[]
operator|)
name|input
expr_stmt|;
block|}
else|else
block|{
name|inputArray
operator|=
operator|new
name|Object
index|[
literal|1
index|]
expr_stmt|;
name|inputArray
index|[
literal|0
index|]
operator|=
name|input
expr_stmt|;
block|}
return|return
name|inputArray
return|;
block|}
block|}
end_class

end_unit

