begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.aws.ec2
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|aws
operator|.
name|ec2
package|;
end_package

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|ec2
operator|.
name|AmazonEC2Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriParams
import|;
end_import

begin_class
annotation|@
name|UriParams
DECL|class|EC2Configuration
specifier|public
class|class
name|EC2Configuration
block|{
annotation|@
name|UriParam
DECL|field|amazonEc2Client
specifier|private
name|AmazonEC2Client
name|amazonEc2Client
decl_stmt|;
annotation|@
name|UriParam
DECL|field|accessKey
specifier|private
name|String
name|accessKey
decl_stmt|;
annotation|@
name|UriParam
DECL|field|secretKey
specifier|private
name|String
name|secretKey
decl_stmt|;
annotation|@
name|UriParam
DECL|field|amazonEc2Endpoint
specifier|private
name|String
name|amazonEc2Endpoint
decl_stmt|;
annotation|@
name|UriParam
DECL|field|operation
specifier|private
name|EC2Operations
name|operation
decl_stmt|;
DECL|method|getAmazonEc2Client ()
specifier|public
name|AmazonEC2Client
name|getAmazonEc2Client
parameter_list|()
block|{
return|return
name|amazonEc2Client
return|;
block|}
DECL|method|setAmazonEc2Client (AmazonEC2Client amazonEc2Client)
specifier|public
name|void
name|setAmazonEc2Client
parameter_list|(
name|AmazonEC2Client
name|amazonEc2Client
parameter_list|)
block|{
name|this
operator|.
name|amazonEc2Client
operator|=
name|amazonEc2Client
expr_stmt|;
block|}
DECL|method|getAccessKey ()
specifier|public
name|String
name|getAccessKey
parameter_list|()
block|{
return|return
name|accessKey
return|;
block|}
DECL|method|setAccessKey (String accessKey)
specifier|public
name|void
name|setAccessKey
parameter_list|(
name|String
name|accessKey
parameter_list|)
block|{
name|this
operator|.
name|accessKey
operator|=
name|accessKey
expr_stmt|;
block|}
DECL|method|getSecretKey ()
specifier|public
name|String
name|getSecretKey
parameter_list|()
block|{
return|return
name|secretKey
return|;
block|}
DECL|method|setSecretKey (String secretKey)
specifier|public
name|void
name|setSecretKey
parameter_list|(
name|String
name|secretKey
parameter_list|)
block|{
name|this
operator|.
name|secretKey
operator|=
name|secretKey
expr_stmt|;
block|}
DECL|method|getAmazonEc2Endpoint ()
specifier|public
name|String
name|getAmazonEc2Endpoint
parameter_list|()
block|{
return|return
name|amazonEc2Endpoint
return|;
block|}
DECL|method|setAmazonEc2Endpoint (String amazonEc2Endpoint)
specifier|public
name|void
name|setAmazonEc2Endpoint
parameter_list|(
name|String
name|amazonEc2Endpoint
parameter_list|)
block|{
name|this
operator|.
name|amazonEc2Endpoint
operator|=
name|amazonEc2Endpoint
expr_stmt|;
block|}
DECL|method|getOperation ()
specifier|public
name|EC2Operations
name|getOperation
parameter_list|()
block|{
return|return
name|operation
return|;
block|}
DECL|method|setOperation (EC2Operations operation)
specifier|public
name|void
name|setOperation
parameter_list|(
name|EC2Operations
name|operation
parameter_list|)
block|{
name|this
operator|.
name|operation
operator|=
name|operation
expr_stmt|;
block|}
block|}
end_class

end_unit

