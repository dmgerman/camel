begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.aws.sqs
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|aws
operator|.
name|sqs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|sqs
operator|.
name|AmazonSQSClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|sqs
operator|.
name|model
operator|.
name|SendMessageRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|sqs
operator|.
name|model
operator|.
name|SendMessageResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ExchangePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|HeaderFilterStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|ArgumentCaptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|runners
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|RETURNS_DEEP_STUBS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
DECL|class|SqsProducerTest
specifier|public
class|class
name|SqsProducerTest
block|{
DECL|field|SAMPLE_MESSAGE_BODY
specifier|private
specifier|static
specifier|final
name|String
name|SAMPLE_MESSAGE_BODY
init|=
literal|"this is a body"
decl_stmt|;
DECL|field|MESSAGE_MD5
specifier|private
specifier|static
specifier|final
name|String
name|MESSAGE_MD5
init|=
literal|"00000000000000000000000000000000"
decl_stmt|;
DECL|field|MESSAGE_ID
specifier|private
specifier|static
specifier|final
name|String
name|MESSAGE_ID
init|=
literal|"11111111111111111111111111111111"
decl_stmt|;
DECL|field|QUEUE_URL
specifier|private
specifier|static
specifier|final
name|String
name|QUEUE_URL
init|=
literal|"some://queue/url"
decl_stmt|;
DECL|field|SAMPLE_MESSAGE_HEADER_NAME_1
specifier|private
specifier|static
specifier|final
name|String
name|SAMPLE_MESSAGE_HEADER_NAME_1
init|=
literal|"header_name_1"
decl_stmt|;
DECL|field|SAMPLE_MESSAGE_HEADER_VALUE_1
specifier|private
specifier|static
specifier|final
name|String
name|SAMPLE_MESSAGE_HEADER_VALUE_1
init|=
literal|"heder_value_1"
decl_stmt|;
DECL|field|SAMPLE_MESSAGE_HEADER_NAME_2
specifier|private
specifier|static
specifier|final
name|String
name|SAMPLE_MESSAGE_HEADER_NAME_2
init|=
literal|"header_name_2"
decl_stmt|;
DECL|field|SAMPLE_MESSAGE_HEADER_VALUE_2
specifier|private
specifier|static
specifier|final
name|ByteBuffer
name|SAMPLE_MESSAGE_HEADER_VALUE_2
init|=
name|ByteBuffer
operator|.
name|wrap
argument_list|(
operator|new
name|byte
index|[
literal|10
index|]
argument_list|)
decl_stmt|;
DECL|field|SAMPLE_MESSAGE_HEADER_NAME_3
specifier|private
specifier|static
specifier|final
name|String
name|SAMPLE_MESSAGE_HEADER_NAME_3
init|=
literal|"header_name_3"
decl_stmt|;
DECL|field|SAMPLE_MESSAGE_HEADER_VALUE_3
specifier|private
specifier|static
specifier|final
name|String
name|SAMPLE_MESSAGE_HEADER_VALUE_3
init|=
literal|"heder_value_3"
decl_stmt|;
DECL|field|SAMPLE_MESSAGE_HEADER_NAME_4
specifier|private
specifier|static
specifier|final
name|String
name|SAMPLE_MESSAGE_HEADER_NAME_4
init|=
literal|"CamelHeader_1"
decl_stmt|;
DECL|field|SAMPLE_MESSAGE_HEADER_VALUE_4
specifier|private
specifier|static
specifier|final
name|String
name|SAMPLE_MESSAGE_HEADER_VALUE_4
init|=
literal|"testValue"
decl_stmt|;
DECL|field|SAMPLE_EXCHANGE_ID
specifier|private
specifier|static
specifier|final
name|String
name|SAMPLE_EXCHANGE_ID
init|=
literal|"ID:whatever-the-hostname-is-32818-1506943497897-1:1:8:1:75939"
decl_stmt|;
DECL|field|exchange
name|Exchange
name|exchange
init|=
name|mock
argument_list|(
name|Exchange
operator|.
name|class
argument_list|,
name|RETURNS_DEEP_STUBS
argument_list|)
decl_stmt|;
DECL|field|sqsEndpoint
annotation|@
name|Mock
specifier|private
name|SqsEndpoint
name|sqsEndpoint
decl_stmt|;
DECL|field|amazonSQSClient
annotation|@
name|Mock
specifier|private
name|AmazonSQSClient
name|amazonSQSClient
decl_stmt|;
DECL|field|outMessage
annotation|@
name|Mock
specifier|private
name|Message
name|outMessage
decl_stmt|;
DECL|field|inMessage
annotation|@
name|Mock
specifier|private
name|Message
name|inMessage
decl_stmt|;
DECL|field|sendMessageResult
specifier|private
name|SendMessageResult
name|sendMessageResult
decl_stmt|;
DECL|field|sqsConfiguration
specifier|private
name|SqsConfiguration
name|sqsConfiguration
decl_stmt|;
DECL|field|underTest
specifier|private
name|SqsProducer
name|underTest
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|underTest
operator|=
operator|new
name|SqsProducer
argument_list|(
name|sqsEndpoint
argument_list|)
expr_stmt|;
name|sendMessageResult
operator|=
operator|new
name|SendMessageResult
argument_list|()
operator|.
name|withMD5OfMessageBody
argument_list|(
name|MESSAGE_MD5
argument_list|)
operator|.
name|withMessageId
argument_list|(
name|MESSAGE_ID
argument_list|)
expr_stmt|;
name|sqsConfiguration
operator|=
operator|new
name|SqsConfiguration
argument_list|()
expr_stmt|;
name|HeaderFilterStrategy
name|headerFilterStrategy
init|=
operator|new
name|SqsHeaderFilterStrategy
argument_list|()
decl_stmt|;
name|sqsConfiguration
operator|.
name|setDelaySeconds
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|sqsConfiguration
operator|.
name|setQueueName
argument_list|(
literal|"queueName"
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|sqsEndpoint
operator|.
name|getClient
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|amazonSQSClient
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|sqsEndpoint
operator|.
name|getConfiguration
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|sqsConfiguration
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|amazonSQSClient
operator|.
name|sendMessage
argument_list|(
name|any
argument_list|(
name|SendMessageRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|sendMessageResult
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|exchange
operator|.
name|getOut
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|outMessage
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|inMessage
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|exchange
operator|.
name|getPattern
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ExchangePattern
operator|.
name|InOnly
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|exchange
operator|.
name|getExchangeId
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|SAMPLE_EXCHANGE_ID
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|inMessage
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|SAMPLE_MESSAGE_BODY
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|sqsEndpoint
operator|.
name|getQueueUrl
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|QUEUE_URL
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|sqsEndpoint
operator|.
name|getHeaderFilterStrategy
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|headerFilterStrategy
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|itSendsTheBodyFromAnExchange ()
specifier|public
name|void
name|itSendsTheBodyFromAnExchange
parameter_list|()
throws|throws
name|Exception
block|{
name|underTest
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|SendMessageRequest
argument_list|>
name|capture
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|SendMessageRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|amazonSQSClient
argument_list|)
operator|.
name|sendMessage
argument_list|(
name|capture
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|SAMPLE_MESSAGE_BODY
argument_list|,
name|capture
operator|.
name|getValue
argument_list|()
operator|.
name|getMessageBody
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|itSendsTheCorrectQueueUrl ()
specifier|public
name|void
name|itSendsTheCorrectQueueUrl
parameter_list|()
throws|throws
name|Exception
block|{
name|underTest
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|SendMessageRequest
argument_list|>
name|capture
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|SendMessageRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|amazonSQSClient
argument_list|)
operator|.
name|sendMessage
argument_list|(
name|capture
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|QUEUE_URL
argument_list|,
name|capture
operator|.
name|getValue
argument_list|()
operator|.
name|getQueueUrl
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|itSetsTheDelayFromTheConfigurationOnTheRequest ()
specifier|public
name|void
name|itSetsTheDelayFromTheConfigurationOnTheRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|sqsConfiguration
operator|.
name|setDelaySeconds
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|9001
argument_list|)
argument_list|)
expr_stmt|;
name|underTest
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|SendMessageRequest
argument_list|>
name|capture
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|SendMessageRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|amazonSQSClient
argument_list|)
operator|.
name|sendMessage
argument_list|(
name|capture
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9001
argument_list|,
name|capture
operator|.
name|getValue
argument_list|()
operator|.
name|getDelaySeconds
argument_list|()
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|itSetsTheDelayFromMessageHeaderOnTheRequest ()
specifier|public
name|void
name|itSetsTheDelayFromMessageHeaderOnTheRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|inMessage
operator|.
name|getHeader
argument_list|(
name|SqsConstants
operator|.
name|DELAY_HEADER
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|2000
argument_list|)
argument_list|)
expr_stmt|;
name|underTest
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|SendMessageRequest
argument_list|>
name|capture
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|SendMessageRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|amazonSQSClient
argument_list|)
operator|.
name|sendMessage
argument_list|(
name|capture
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2000
argument_list|,
name|capture
operator|.
name|getValue
argument_list|()
operator|.
name|getDelaySeconds
argument_list|()
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|itSetsTheMessageIdOnTheExchangeMessage ()
specifier|public
name|void
name|itSetsTheMessageIdOnTheExchangeMessage
parameter_list|()
throws|throws
name|Exception
block|{
name|underTest
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|inMessage
argument_list|)
operator|.
name|setHeader
argument_list|(
name|SqsConstants
operator|.
name|MESSAGE_ID
argument_list|,
name|MESSAGE_ID
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|itSetsTheMd5SumOnTheExchangeMessage ()
specifier|public
name|void
name|itSetsTheMd5SumOnTheExchangeMessage
parameter_list|()
throws|throws
name|Exception
block|{
name|underTest
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|inMessage
argument_list|)
operator|.
name|setHeader
argument_list|(
name|SqsConstants
operator|.
name|MD5_OF_BODY
argument_list|,
name|MESSAGE_MD5
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|isAttributeMessageStringHeaderOnTheRequest ()
specifier|public
name|void
name|isAttributeMessageStringHeaderOnTheRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
name|SAMPLE_MESSAGE_HEADER_NAME_1
argument_list|,
name|SAMPLE_MESSAGE_HEADER_VALUE_1
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|inMessage
operator|.
name|getHeaders
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|headers
argument_list|)
expr_stmt|;
name|underTest
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|SendMessageRequest
argument_list|>
name|capture
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|SendMessageRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|amazonSQSClient
argument_list|)
operator|.
name|sendMessage
argument_list|(
name|capture
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|SAMPLE_MESSAGE_HEADER_VALUE_1
argument_list|,
name|capture
operator|.
name|getValue
argument_list|()
operator|.
name|getMessageAttributes
argument_list|()
operator|.
name|get
argument_list|(
name|SAMPLE_MESSAGE_HEADER_NAME_1
argument_list|)
operator|.
name|getStringValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|capture
operator|.
name|getValue
argument_list|()
operator|.
name|getMessageAttributes
argument_list|()
operator|.
name|get
argument_list|(
name|SAMPLE_MESSAGE_HEADER_NAME_1
argument_list|)
operator|.
name|getBinaryValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|isAttributeMessageByteBufferHeaderOnTheRequest ()
specifier|public
name|void
name|isAttributeMessageByteBufferHeaderOnTheRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
name|SAMPLE_MESSAGE_HEADER_NAME_2
argument_list|,
name|SAMPLE_MESSAGE_HEADER_VALUE_2
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|inMessage
operator|.
name|getHeaders
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|headers
argument_list|)
expr_stmt|;
name|underTest
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|SendMessageRequest
argument_list|>
name|capture
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|SendMessageRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|amazonSQSClient
argument_list|)
operator|.
name|sendMessage
argument_list|(
name|capture
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|SAMPLE_MESSAGE_HEADER_VALUE_2
argument_list|,
name|capture
operator|.
name|getValue
argument_list|()
operator|.
name|getMessageAttributes
argument_list|()
operator|.
name|get
argument_list|(
name|SAMPLE_MESSAGE_HEADER_NAME_2
argument_list|)
operator|.
name|getBinaryValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|capture
operator|.
name|getValue
argument_list|()
operator|.
name|getMessageAttributes
argument_list|()
operator|.
name|get
argument_list|(
name|SAMPLE_MESSAGE_HEADER_NAME_2
argument_list|)
operator|.
name|getStringValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|isAllAttributeMessagesOnTheRequest ()
specifier|public
name|void
name|isAllAttributeMessagesOnTheRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
name|SAMPLE_MESSAGE_HEADER_NAME_1
argument_list|,
name|SAMPLE_MESSAGE_HEADER_VALUE_1
argument_list|)
expr_stmt|;
name|headers
operator|.
name|put
argument_list|(
name|SAMPLE_MESSAGE_HEADER_NAME_2
argument_list|,
name|SAMPLE_MESSAGE_HEADER_VALUE_2
argument_list|)
expr_stmt|;
name|headers
operator|.
name|put
argument_list|(
name|SAMPLE_MESSAGE_HEADER_NAME_3
argument_list|,
name|SAMPLE_MESSAGE_HEADER_VALUE_3
argument_list|)
expr_stmt|;
name|headers
operator|.
name|put
argument_list|(
name|SAMPLE_MESSAGE_HEADER_NAME_4
argument_list|,
name|SAMPLE_MESSAGE_HEADER_VALUE_4
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|inMessage
operator|.
name|getHeaders
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|headers
argument_list|)
expr_stmt|;
name|underTest
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|SendMessageRequest
argument_list|>
name|capture
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|SendMessageRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|amazonSQSClient
argument_list|)
operator|.
name|sendMessage
argument_list|(
name|capture
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|SAMPLE_MESSAGE_HEADER_VALUE_1
argument_list|,
name|capture
operator|.
name|getValue
argument_list|()
operator|.
name|getMessageAttributes
argument_list|()
operator|.
name|get
argument_list|(
name|SAMPLE_MESSAGE_HEADER_NAME_1
argument_list|)
operator|.
name|getStringValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|SAMPLE_MESSAGE_HEADER_VALUE_2
argument_list|,
name|capture
operator|.
name|getValue
argument_list|()
operator|.
name|getMessageAttributes
argument_list|()
operator|.
name|get
argument_list|(
name|SAMPLE_MESSAGE_HEADER_NAME_2
argument_list|)
operator|.
name|getBinaryValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|SAMPLE_MESSAGE_HEADER_VALUE_3
argument_list|,
name|capture
operator|.
name|getValue
argument_list|()
operator|.
name|getMessageAttributes
argument_list|()
operator|.
name|get
argument_list|(
name|SAMPLE_MESSAGE_HEADER_NAME_3
argument_list|)
operator|.
name|getStringValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|capture
operator|.
name|getValue
argument_list|()
operator|.
name|getMessageAttributes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|itSetsMessageGroupIdUsingConstantStrategy ()
specifier|public
name|void
name|itSetsMessageGroupIdUsingConstantStrategy
parameter_list|()
throws|throws
name|Exception
block|{
name|sqsConfiguration
operator|.
name|setQueueName
argument_list|(
literal|"queueName.fifo"
argument_list|)
expr_stmt|;
name|sqsConfiguration
operator|.
name|setMessageGroupIdStrategy
argument_list|(
literal|"useConstant"
argument_list|)
expr_stmt|;
name|underTest
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|SendMessageRequest
argument_list|>
name|capture
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|SendMessageRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|amazonSQSClient
argument_list|)
operator|.
name|sendMessage
argument_list|(
name|capture
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CamelSingleMessageGroup"
argument_list|,
name|capture
operator|.
name|getValue
argument_list|()
operator|.
name|getMessageGroupId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|itSetsMessageGroupIdUsingExchangeIdStrategy ()
specifier|public
name|void
name|itSetsMessageGroupIdUsingExchangeIdStrategy
parameter_list|()
throws|throws
name|Exception
block|{
name|sqsConfiguration
operator|.
name|setQueueName
argument_list|(
literal|"queueName.fifo"
argument_list|)
expr_stmt|;
name|sqsConfiguration
operator|.
name|setMessageGroupIdStrategy
argument_list|(
literal|"useExchangeId"
argument_list|)
expr_stmt|;
name|underTest
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|SendMessageRequest
argument_list|>
name|capture
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|SendMessageRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|amazonSQSClient
argument_list|)
operator|.
name|sendMessage
argument_list|(
name|capture
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|SAMPLE_EXCHANGE_ID
argument_list|,
name|capture
operator|.
name|getValue
argument_list|()
operator|.
name|getMessageGroupId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|itSetsMessageGroupIdUsingHeaderValueStrategy ()
specifier|public
name|void
name|itSetsMessageGroupIdUsingHeaderValueStrategy
parameter_list|()
throws|throws
name|Exception
block|{
name|sqsConfiguration
operator|.
name|setQueueName
argument_list|(
literal|"queueName.fifo"
argument_list|)
expr_stmt|;
name|sqsConfiguration
operator|.
name|setMessageGroupIdStrategy
argument_list|(
literal|"usePropertyValue"
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|exchange
operator|.
name|getProperty
argument_list|(
name|SqsConstants
operator|.
name|MESSAGE_GROUP_ID_PROPERTY
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"my-group-id"
argument_list|)
expr_stmt|;
name|underTest
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|SendMessageRequest
argument_list|>
name|capture
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|SendMessageRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|amazonSQSClient
argument_list|)
operator|.
name|sendMessage
argument_list|(
name|capture
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"my-group-id"
argument_list|,
name|capture
operator|.
name|getValue
argument_list|()
operator|.
name|getMessageGroupId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|itSetsMessageDedpulicationIdUsingExchangeIdStrategy ()
specifier|public
name|void
name|itSetsMessageDedpulicationIdUsingExchangeIdStrategy
parameter_list|()
throws|throws
name|Exception
block|{
name|sqsConfiguration
operator|.
name|setQueueName
argument_list|(
literal|"queueName.fifo"
argument_list|)
expr_stmt|;
name|sqsConfiguration
operator|.
name|setMessageGroupIdStrategy
argument_list|(
literal|"useConstant"
argument_list|)
expr_stmt|;
name|sqsConfiguration
operator|.
name|setMessageDeduplicationIdStrategy
argument_list|(
literal|"useExchangeId"
argument_list|)
expr_stmt|;
name|underTest
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|SendMessageRequest
argument_list|>
name|capture
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|SendMessageRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|amazonSQSClient
argument_list|)
operator|.
name|sendMessage
argument_list|(
name|capture
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|SAMPLE_EXCHANGE_ID
argument_list|,
name|capture
operator|.
name|getValue
argument_list|()
operator|.
name|getMessageDeduplicationId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|itSetsMessageDedpulicationIdUsingExchangeIdStrategyAsDefault ()
specifier|public
name|void
name|itSetsMessageDedpulicationIdUsingExchangeIdStrategyAsDefault
parameter_list|()
throws|throws
name|Exception
block|{
name|sqsConfiguration
operator|.
name|setQueueName
argument_list|(
literal|"queueName.fifo"
argument_list|)
expr_stmt|;
name|sqsConfiguration
operator|.
name|setMessageGroupIdStrategy
argument_list|(
literal|"useConstant"
argument_list|)
expr_stmt|;
name|underTest
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|SendMessageRequest
argument_list|>
name|capture
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|SendMessageRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|amazonSQSClient
argument_list|)
operator|.
name|sendMessage
argument_list|(
name|capture
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|SAMPLE_EXCHANGE_ID
argument_list|,
name|capture
operator|.
name|getValue
argument_list|()
operator|.
name|getMessageDeduplicationId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|itDoesNotSetMessageDedpulicationIdUsingContentBasedDeduplicationStrategy ()
specifier|public
name|void
name|itDoesNotSetMessageDedpulicationIdUsingContentBasedDeduplicationStrategy
parameter_list|()
throws|throws
name|Exception
block|{
name|sqsConfiguration
operator|.
name|setQueueName
argument_list|(
literal|"queueName.fifo"
argument_list|)
expr_stmt|;
name|sqsConfiguration
operator|.
name|setMessageGroupIdStrategy
argument_list|(
literal|"useConstant"
argument_list|)
expr_stmt|;
name|sqsConfiguration
operator|.
name|setMessageDeduplicationIdStrategy
argument_list|(
literal|"useContentBasedDeduplication"
argument_list|)
expr_stmt|;
name|underTest
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|SendMessageRequest
argument_list|>
name|capture
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|SendMessageRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|amazonSQSClient
argument_list|)
operator|.
name|sendMessage
argument_list|(
name|capture
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|capture
operator|.
name|getValue
argument_list|()
operator|.
name|getMessageDeduplicationId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

