begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.aws.s3
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|aws
operator|.
name|s3
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|aws
operator|.
name|s3
operator|.
name|client
operator|.
name|AWSS3Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|aws
operator|.
name|s3
operator|.
name|client
operator|.
name|AWSS3ClientFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|aws
operator|.
name|s3
operator|.
name|client
operator|.
name|impl
operator|.
name|IAMOptimizedAWSS3ClientImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|aws
operator|.
name|s3
operator|.
name|client
operator|.
name|impl
operator|.
name|StandardAWSS3ClientImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|AWSS3ClientFactoryTest
specifier|public
class|class
name|AWSS3ClientFactoryTest
block|{
DECL|field|MAX_CONNECTIONS
specifier|private
specifier|static
specifier|final
name|int
name|MAX_CONNECTIONS
init|=
literal|1
decl_stmt|;
annotation|@
name|Test
DECL|method|getStandardS3ClientDefault ()
specifier|public
name|void
name|getStandardS3ClientDefault
parameter_list|()
block|{
name|S3Configuration
name|s3Configuration
init|=
operator|new
name|S3Configuration
argument_list|()
decl_stmt|;
name|AWSS3Client
name|awss3Client
init|=
name|AWSS3ClientFactory
operator|.
name|getAWSS3Client
argument_list|(
name|s3Configuration
argument_list|,
name|MAX_CONNECTIONS
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|awss3Client
operator|instanceof
name|StandardAWSS3ClientImpl
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getStandardS3Client ()
specifier|public
name|void
name|getStandardS3Client
parameter_list|()
block|{
name|S3Configuration
name|s3Configuration
init|=
operator|new
name|S3Configuration
argument_list|()
decl_stmt|;
name|s3Configuration
operator|.
name|setUseIAMCredentials
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|AWSS3Client
name|awss3Client
init|=
name|AWSS3ClientFactory
operator|.
name|getAWSS3Client
argument_list|(
name|s3Configuration
argument_list|,
name|MAX_CONNECTIONS
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|awss3Client
operator|instanceof
name|StandardAWSS3ClientImpl
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getIAMOptimizedS3Client ()
specifier|public
name|void
name|getIAMOptimizedS3Client
parameter_list|()
block|{
name|S3Configuration
name|s3Configuration
init|=
operator|new
name|S3Configuration
argument_list|()
decl_stmt|;
name|s3Configuration
operator|.
name|setUseIAMCredentials
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|AWSS3Client
name|awss3Client
init|=
name|AWSS3ClientFactory
operator|.
name|getAWSS3Client
argument_list|(
name|s3Configuration
argument_list|,
name|MAX_CONNECTIONS
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|awss3Client
operator|instanceof
name|IAMOptimizedAWSS3ClientImpl
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

