begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jetty
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jetty
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|handler
operator|.
name|ErrorHandler
import|;
end_import

begin_class
DECL|class|MyErrorHandler
specifier|public
class|class
name|MyErrorHandler
extends|extends
name|ErrorHandler
block|{
DECL|method|writeErrorPageBody (HttpServletRequest request, Writer writer, int code, String message, boolean showStacks)
specifier|protected
name|void
name|writeErrorPageBody
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|Writer
name|writer
parameter_list|,
name|int
name|code
parameter_list|,
name|String
name|message
parameter_list|,
name|boolean
name|showStacks
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|uri
init|=
name|request
operator|.
name|getRequestURI
argument_list|()
decl_stmt|;
name|writeErrorPageMessage
argument_list|(
name|request
argument_list|,
name|writer
argument_list|,
name|code
argument_list|,
name|message
argument_list|,
name|uri
argument_list|)
expr_stmt|;
if|if
condition|(
name|showStacks
condition|)
block|{
name|writeErrorPageStacks
argument_list|(
name|request
argument_list|,
name|writer
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|write
argument_list|(
literal|"<hr /><i><small>MyErrorHandler</small></i>"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|20
condition|;
name|i
operator|++
control|)
block|{
name|writer
operator|.
name|write
argument_list|(
literal|"<br/>                                                \n"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

