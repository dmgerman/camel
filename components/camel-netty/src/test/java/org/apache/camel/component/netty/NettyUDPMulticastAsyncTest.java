begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.netty
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|netty
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * To run this test manually through Maven first remove the {@link Ignore}  * annotation below, then make sure you've got a network interface with the name  *<code>en0</code> as given by the route below. If this is not the case run  * your OS specific command to find out which network interfaces you've got  * supporting IPv4 (e.g. on OS-X that would be the {@code ifconfig -a} command.  * Next you need to enable UDP multicast on your OS for the given multicast  * address of this test ({@code 224.1.2.3}). For this purpose e.g. on OS-X  * follow the steps being described<a href=  * "http://blogs.agilefaqs.com/2009/11/08/enabling-multicast-on-your-macos-unix/"  *>here</a>. Now running the test manually should succeed (<b>but only</b> when  * using Java7+):  *   *<pre>  *   mvn test -Djava.net.preferIPv4Stack=true -Dtest=NettyUDPMulticastAsyncTest  *</pre>  *   * Please note that using the JUnit {@link BeforeClass} annotation together with  * the corresponding {@link System#setProperty(String, String) Java API} to set  * the {@code java.net.preferIPv4Stack} system property would not work here as  * at that moment it would be too<b>late</b> to set this system property. On  * the other hand setting such a system property through the surefire-plugin  * would cause side effect by the other tests of this component.  */
end_comment

begin_class
annotation|@
name|Ignore
argument_list|(
literal|"See the Javadoc"
argument_list|)
DECL|class|NettyUDPMulticastAsyncTest
specifier|public
class|class
name|NettyUDPMulticastAsyncTest
extends|extends
name|BaseNettyTest
block|{
DECL|method|sendFile (String uri)
specifier|private
name|void
name|sendFile
parameter_list|(
name|String
name|uri
parameter_list|)
throws|throws
name|Exception
block|{
name|template
operator|.
name|send
argument_list|(
name|uri
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|byte
index|[]
name|buffer
init|=
name|exchange
operator|.
name|getContext
argument_list|()
operator|.
name|getTypeConverter
argument_list|()
operator|.
name|mandatoryConvertTo
argument_list|(
name|byte
index|[]
operator|.
expr|class
argument_list|,
operator|new
name|File
argument_list|(
literal|"src/test/resources/test.txt"
argument_list|)
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|setProperty
argument_list|(
name|Exchange
operator|.
name|CHARSET_NAME
argument_list|,
literal|"ASCII"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUDPInOnlyMulticastWithNettyConsumer ()
specifier|public
name|void
name|testUDPInOnlyMulticastWithNettyConsumer
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|mock
operator|.
name|message
argument_list|(
literal|0
argument_list|)
operator|.
name|body
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"Song Of A Dream"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
comment|// any IP in the range of 224.0.0.0 through 239.255.255.255 does the job
name|sendFile
argument_list|(
literal|"netty:udp://224.1.2.3:{{port}}?sync=false"
argument_list|)
expr_stmt|;
name|mock
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
literal|"netty:udp://224.1.2.3:{{port}}?sync=false&networkInterface=en0"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:result"
argument_list|)
operator|.
name|to
argument_list|(
literal|"log:Message"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

