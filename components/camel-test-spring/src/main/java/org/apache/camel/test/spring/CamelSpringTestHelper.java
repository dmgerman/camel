begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.test.spring
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|spring
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|SpringCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContext
import|;
end_import

begin_comment
comment|/**  * Helper that provides state information across the levels of Spring Test that do not expose the  * necessary context/state for integration of Camel testing features into Spring test.  Also  * provides utility methods.  *<p/>  * Note that this class makes use of {@link ThreadLocal}s to maintain some state.  It is imperative  * that the state setters and getters are accessed within the scope of a single thread in order  * for this class to work right.  */
end_comment

begin_class
DECL|class|CamelSpringTestHelper
specifier|public
specifier|final
class|class
name|CamelSpringTestHelper
block|{
DECL|field|originalJmxDisabledValue
specifier|private
specifier|static
name|ThreadLocal
argument_list|<
name|String
argument_list|>
name|originalJmxDisabledValue
init|=
operator|new
name|ThreadLocal
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|testClazz
specifier|private
specifier|static
name|ThreadLocal
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|testClazz
init|=
operator|new
name|ThreadLocal
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
DECL|method|CamelSpringTestHelper ()
specifier|private
name|CamelSpringTestHelper
parameter_list|()
block|{     }
DECL|method|getOriginalJmxDisabled ()
specifier|public
specifier|static
name|String
name|getOriginalJmxDisabled
parameter_list|()
block|{
return|return
name|originalJmxDisabledValue
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|setOriginalJmxDisabledValue (String originalValue)
specifier|public
specifier|static
name|void
name|setOriginalJmxDisabledValue
parameter_list|(
name|String
name|originalValue
parameter_list|)
block|{
name|originalJmxDisabledValue
operator|.
name|set
argument_list|(
name|originalValue
argument_list|)
expr_stmt|;
block|}
DECL|method|getTestClass ()
specifier|public
specifier|static
name|Class
argument_list|<
name|?
argument_list|>
name|getTestClass
parameter_list|()
block|{
return|return
name|testClazz
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|setTestClass (Class<?> testClass)
specifier|public
specifier|static
name|void
name|setTestClass
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|testClass
parameter_list|)
block|{
name|testClazz
operator|.
name|set
argument_list|(
name|testClass
argument_list|)
expr_stmt|;
block|}
comment|/**      * Returns all methods defined in {@code clazz} and its superclasses/interfaces.      */
DECL|method|getAllMethods (Class<?> clazz)
specifier|public
specifier|static
name|Collection
argument_list|<
name|Method
argument_list|>
name|getAllMethods
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
parameter_list|)
block|{
name|Set
argument_list|<
name|Method
argument_list|>
name|methods
init|=
operator|new
name|HashSet
argument_list|<
name|Method
argument_list|>
argument_list|()
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|currentClass
init|=
name|clazz
decl_stmt|;
while|while
condition|(
name|currentClass
operator|!=
literal|null
condition|)
block|{
name|methods
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|clazz
operator|.
name|getMethods
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|currentClass
operator|=
name|currentClass
operator|.
name|getSuperclass
argument_list|()
expr_stmt|;
block|}
return|return
name|methods
return|;
block|}
comment|/**      * Executes {@code strategy} against all {@link SpringCamelContext}s found in the Spring context.      * This method reduces the amount of repeated find and loop code throughout this class.      *      * @param context the Spring context to search      * @param strategy the strategy to execute against the found {@link SpringCamelContext}s      *      * @throws Exception if there is an error executing any of the strategies      */
DECL|method|doToSpringCamelContexts (ApplicationContext context, DoToSpringCamelContextsStrategy strategy)
specifier|public
specifier|static
name|void
name|doToSpringCamelContexts
parameter_list|(
name|ApplicationContext
name|context
parameter_list|,
name|DoToSpringCamelContextsStrategy
name|strategy
parameter_list|)
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|SpringCamelContext
argument_list|>
name|contexts
init|=
name|context
operator|.
name|getBeansOfType
argument_list|(
name|SpringCamelContext
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|SpringCamelContext
argument_list|>
name|entry
range|:
name|contexts
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|strategy
operator|.
name|execute
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|interface|DoToSpringCamelContextsStrategy
specifier|public
interface|interface
name|DoToSpringCamelContextsStrategy
block|{
DECL|method|execute (String contextName, SpringCamelContext camelContext)
name|void
name|execute
parameter_list|(
name|String
name|contextName
parameter_list|,
name|SpringCamelContext
name|camelContext
parameter_list|)
throws|throws
name|Exception
function_decl|;
block|}
block|}
end_class

end_unit

