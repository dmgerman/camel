begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.stomp.springboot
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|stomp
operator|.
name|springboot
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|stomp
operator|.
name|StompConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|context
operator|.
name|properties
operator|.
name|ConfigurationProperties
import|;
end_import

begin_comment
comment|/**  * The stomp component is used for communicating with Stomp compliant message  * brokers.  *   * Generated by camel-package-maven-plugin - do not edit this file!  */
end_comment

begin_class
annotation|@
name|ConfigurationProperties
argument_list|(
name|prefix
operator|=
literal|"camel.component.stomp"
argument_list|)
DECL|class|StompComponentConfiguration
specifier|public
class|class
name|StompComponentConfiguration
block|{
comment|/**      * To use the shared stomp configuration      */
DECL|field|configuration
specifier|private
name|StompConfiguration
name|configuration
decl_stmt|;
comment|/**      * The URI of the Stomp broker to connect to      */
DECL|field|brokerURL
specifier|private
name|String
name|brokerURL
decl_stmt|;
comment|/**      * The username      */
DECL|field|login
specifier|private
name|String
name|login
decl_stmt|;
comment|/**      * The password      */
DECL|field|passcode
specifier|private
name|String
name|passcode
decl_stmt|;
comment|/**      * The virtual host      */
DECL|field|host
specifier|private
name|String
name|host
decl_stmt|;
DECL|method|getConfiguration ()
specifier|public
name|StompConfiguration
name|getConfiguration
parameter_list|()
block|{
return|return
name|configuration
return|;
block|}
DECL|method|setConfiguration (StompConfiguration configuration)
specifier|public
name|void
name|setConfiguration
parameter_list|(
name|StompConfiguration
name|configuration
parameter_list|)
block|{
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
block|}
DECL|method|getBrokerURL ()
specifier|public
name|String
name|getBrokerURL
parameter_list|()
block|{
return|return
name|brokerURL
return|;
block|}
DECL|method|setBrokerURL (String brokerURL)
specifier|public
name|void
name|setBrokerURL
parameter_list|(
name|String
name|brokerURL
parameter_list|)
block|{
name|this
operator|.
name|brokerURL
operator|=
name|brokerURL
expr_stmt|;
block|}
DECL|method|getLogin ()
specifier|public
name|String
name|getLogin
parameter_list|()
block|{
return|return
name|login
return|;
block|}
DECL|method|setLogin (String login)
specifier|public
name|void
name|setLogin
parameter_list|(
name|String
name|login
parameter_list|)
block|{
name|this
operator|.
name|login
operator|=
name|login
expr_stmt|;
block|}
DECL|method|getPasscode ()
specifier|public
name|String
name|getPasscode
parameter_list|()
block|{
return|return
name|passcode
return|;
block|}
DECL|method|setPasscode (String passcode)
specifier|public
name|void
name|setPasscode
parameter_list|(
name|String
name|passcode
parameter_list|)
block|{
name|this
operator|.
name|passcode
operator|=
name|passcode
expr_stmt|;
block|}
DECL|method|getHost ()
specifier|public
name|String
name|getHost
parameter_list|()
block|{
return|return
name|host
return|;
block|}
DECL|method|setHost (String host)
specifier|public
name|void
name|setHost
parameter_list|(
name|String
name|host
parameter_list|)
block|{
name|this
operator|.
name|host
operator|=
name|host
expr_stmt|;
block|}
block|}
end_class

end_unit

