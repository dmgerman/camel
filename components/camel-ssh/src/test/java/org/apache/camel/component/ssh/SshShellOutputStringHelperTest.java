begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.ssh
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ssh
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|SshShellOutputStringHelperTest
specifier|public
class|class
name|SshShellOutputStringHelperTest
extends|extends
name|Assert
block|{
annotation|@
name|Test
DECL|method|testBeforeLast ()
specifier|public
name|void
name|testBeforeLast
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"Hello "
argument_list|,
name|SshShellOutputStringHelper
operator|.
name|beforeLast
argument_list|(
literal|"Hello World"
argument_list|,
literal|"World"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Hello World "
argument_list|,
name|SshShellOutputStringHelper
operator|.
name|beforeLast
argument_list|(
literal|"Hello World World"
argument_list|,
literal|"World"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Hello "
argument_list|,
name|SshShellOutputStringHelper
operator|.
name|beforeLast
argument_list|(
literal|"Hello World Again"
argument_list|,
literal|"World"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|SshShellOutputStringHelper
operator|.
name|beforeLast
argument_list|(
literal|"Hello Again"
argument_list|,
literal|"Foo"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|SshShellOutputStringHelper
operator|.
name|beforeLast
argument_list|(
literal|"mykey:ignore:hello"
argument_list|,
literal|":"
argument_list|,
literal|"mykey:ignore"
operator|::
name|equals
argument_list|)
operator|.
name|orElse
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|SshShellOutputStringHelper
operator|.
name|beforeLast
argument_list|(
literal|"ignore:ignore:world"
argument_list|,
literal|":"
argument_list|,
literal|"mykey"
operator|::
name|equals
argument_list|)
operator|.
name|orElse
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBetweenBeforeLast ()
specifier|public
name|void
name|testBetweenBeforeLast
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"foo bar' how are"
argument_list|,
name|SshShellOutputStringHelper
operator|.
name|betweenBeforeLast
argument_list|(
literal|"Hello 'foo bar' how are' you"
argument_list|,
literal|"'"
argument_list|,
literal|"'"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"foo bar"
argument_list|,
name|SshShellOutputStringHelper
operator|.
name|betweenBeforeLast
argument_list|(
literal|"Hello ${foo bar} how are you"
argument_list|,
literal|"${"
argument_list|,
literal|"}"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|SshShellOutputStringHelper
operator|.
name|betweenBeforeLast
argument_list|(
literal|"Hello ${foo bar} how are you"
argument_list|,
literal|"'"
argument_list|,
literal|"'"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|SshShellOutputStringHelper
operator|.
name|betweenBeforeLast
argument_list|(
literal|"begin:mykey:end:end"
argument_list|,
literal|"begin:"
argument_list|,
literal|":end"
argument_list|,
literal|"mykey:end"
operator|::
name|equals
argument_list|)
operator|.
name|orElse
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|SshShellOutputStringHelper
operator|.
name|betweenBeforeLast
argument_list|(
literal|"begin:ignore:end:end"
argument_list|,
literal|"begin:"
argument_list|,
literal|":end"
argument_list|,
literal|"mykey"
operator|::
name|equals
argument_list|)
operator|.
name|orElse
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

