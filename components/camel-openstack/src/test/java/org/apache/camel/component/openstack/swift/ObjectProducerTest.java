begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.openstack.swift
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|openstack
operator|.
name|swift
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|openstack
operator|.
name|common
operator|.
name|OpenstackConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|openstack
operator|.
name|swift
operator|.
name|producer
operator|.
name|ObjectProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|ArgumentCaptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openstack4j
operator|.
name|model
operator|.
name|common
operator|.
name|ActionResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openstack4j
operator|.
name|model
operator|.
name|common
operator|.
name|Payload
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openstack4j
operator|.
name|model
operator|.
name|common
operator|.
name|Payloads
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openstack4j
operator|.
name|model
operator|.
name|storage
operator|.
name|object
operator|.
name|SwiftObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openstack4j
operator|.
name|model
operator|.
name|storage
operator|.
name|object
operator|.
name|options
operator|.
name|ObjectLocation
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|anyString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doReturn
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
DECL|class|ObjectProducerTest
specifier|public
class|class
name|ObjectProducerTest
extends|extends
name|SwiftProducerTestSupport
block|{
DECL|field|CONTAINER_NAME
specifier|private
specifier|static
specifier|final
name|String
name|CONTAINER_NAME
init|=
literal|"containerName"
decl_stmt|;
DECL|field|OBJECT_NAME
specifier|private
specifier|static
specifier|final
name|String
name|OBJECT_NAME
init|=
literal|"objectName"
decl_stmt|;
DECL|field|ETAG
specifier|private
specifier|static
specifier|final
name|String
name|ETAG
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
annotation|@
name|Mock
DECL|field|mockOsObject
specifier|private
name|SwiftObject
name|mockOsObject
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|producer
operator|=
operator|new
name|ObjectProducer
argument_list|(
name|endpoint
argument_list|,
name|client
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockOsObject
operator|.
name|getETag
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ETAG
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createTest ()
specifier|public
name|void
name|createTest
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|objectService
operator|.
name|put
argument_list|(
name|anyString
argument_list|()
argument_list|,
name|anyString
argument_list|()
argument_list|,
name|any
argument_list|(
name|Payload
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ETAG
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|OpenstackConstants
operator|.
name|OPERATION
argument_list|,
name|OpenstackConstants
operator|.
name|CREATE
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|SwiftConstants
operator|.
name|CONTAINER_NAME
argument_list|,
name|CONTAINER_NAME
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|SwiftConstants
operator|.
name|OBJECT_NAME
argument_list|,
name|OBJECT_NAME
argument_list|)
expr_stmt|;
specifier|final
name|Payload
name|payload
init|=
name|getTmpPayload
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setBody
argument_list|(
name|payload
argument_list|)
expr_stmt|;
name|producer
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|String
argument_list|>
name|containerNameCaptor
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|ArgumentCaptor
argument_list|<
name|String
argument_list|>
name|objectNameCaptor
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|ArgumentCaptor
argument_list|<
name|Payload
argument_list|>
name|payloadArgumentCaptor
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|Payload
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|objectService
argument_list|)
operator|.
name|put
argument_list|(
name|containerNameCaptor
operator|.
name|capture
argument_list|()
argument_list|,
name|objectNameCaptor
operator|.
name|capture
argument_list|()
argument_list|,
name|payloadArgumentCaptor
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|CONTAINER_NAME
argument_list|,
name|containerNameCaptor
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OBJECT_NAME
argument_list|,
name|objectNameCaptor
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|payload
argument_list|,
name|payloadArgumentCaptor
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ETAG
argument_list|,
name|msg
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getTest ()
specifier|public
name|void
name|getTest
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|objectService
operator|.
name|get
argument_list|(
name|CONTAINER_NAME
argument_list|,
name|OBJECT_NAME
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockOsObject
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|endpoint
operator|.
name|getOperation
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|OpenstackConstants
operator|.
name|GET
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|SwiftConstants
operator|.
name|CONTAINER_NAME
argument_list|,
name|CONTAINER_NAME
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|SwiftConstants
operator|.
name|OBJECT_NAME
argument_list|,
name|OBJECT_NAME
argument_list|)
expr_stmt|;
name|producer
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ETAG
argument_list|,
name|msg
operator|.
name|getBody
argument_list|(
name|SwiftObject
operator|.
name|class
argument_list|)
operator|.
name|getETag
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getAllFromContainerTest ()
specifier|public
name|void
name|getAllFromContainerTest
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|SwiftObject
argument_list|>
name|objectsList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|objectsList
operator|.
name|add
argument_list|(
name|mockOsObject
argument_list|)
expr_stmt|;
name|doReturn
argument_list|(
name|objectsList
argument_list|)
operator|.
name|when
argument_list|(
name|objectService
argument_list|)
operator|.
name|list
argument_list|(
name|CONTAINER_NAME
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|endpoint
operator|.
name|getOperation
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|OpenstackConstants
operator|.
name|GET_ALL
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|SwiftConstants
operator|.
name|CONTAINER_NAME
argument_list|,
name|CONTAINER_NAME
argument_list|)
expr_stmt|;
name|producer
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mockOsObject
argument_list|,
name|msg
operator|.
name|getBody
argument_list|(
name|List
operator|.
name|class
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteObjectTest ()
specifier|public
name|void
name|deleteObjectTest
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|failMessage
init|=
literal|"fail"
decl_stmt|;
name|when
argument_list|(
name|objectService
operator|.
name|delete
argument_list|(
name|anyString
argument_list|()
argument_list|,
name|anyString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ActionResponse
operator|.
name|actionSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|OpenstackConstants
operator|.
name|OPERATION
argument_list|,
name|OpenstackConstants
operator|.
name|DELETE
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|SwiftConstants
operator|.
name|CONTAINER_NAME
argument_list|,
name|CONTAINER_NAME
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|SwiftConstants
operator|.
name|OBJECT_NAME
argument_list|,
name|OBJECT_NAME
argument_list|)
expr_stmt|;
name|producer
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|String
argument_list|>
name|containerNameCaptor
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|ArgumentCaptor
argument_list|<
name|String
argument_list|>
name|objectNameCaptor
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|objectService
argument_list|)
operator|.
name|delete
argument_list|(
name|containerNameCaptor
operator|.
name|capture
argument_list|()
argument_list|,
name|objectNameCaptor
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|CONTAINER_NAME
argument_list|,
name|containerNameCaptor
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OBJECT_NAME
argument_list|,
name|objectNameCaptor
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|msg
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteObjectFailTest ()
specifier|public
name|void
name|deleteObjectFailTest
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|failMessage
init|=
literal|"fail"
decl_stmt|;
name|when
argument_list|(
name|objectService
operator|.
name|delete
argument_list|(
name|anyString
argument_list|()
argument_list|,
name|anyString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ActionResponse
operator|.
name|actionFailed
argument_list|(
name|failMessage
argument_list|,
literal|401
argument_list|)
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|OpenstackConstants
operator|.
name|OPERATION
argument_list|,
name|OpenstackConstants
operator|.
name|DELETE
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|SwiftConstants
operator|.
name|CONTAINER_NAME
argument_list|,
name|CONTAINER_NAME
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|SwiftConstants
operator|.
name|OBJECT_NAME
argument_list|,
name|OBJECT_NAME
argument_list|)
expr_stmt|;
name|producer
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|msg
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
operator|.
name|contains
argument_list|(
name|failMessage
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|updateMetadataTest ()
specifier|public
name|void
name|updateMetadataTest
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|md
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|md
operator|.
name|put
argument_list|(
literal|"key"
argument_list|,
literal|"val"
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|OpenstackConstants
operator|.
name|OPERATION
argument_list|,
name|SwiftConstants
operator|.
name|CREATE_UPDATE_METADATA
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|SwiftConstants
operator|.
name|CONTAINER_NAME
argument_list|,
name|CONTAINER_NAME
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|SwiftConstants
operator|.
name|OBJECT_NAME
argument_list|,
name|OBJECT_NAME
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setBody
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|producer
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|ObjectLocation
argument_list|>
name|locationCaptor
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|ObjectLocation
operator|.
name|class
argument_list|)
decl_stmt|;
name|ArgumentCaptor
argument_list|<
name|Map
argument_list|>
name|dataCaptor
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|objectService
argument_list|)
operator|.
name|updateMetadata
argument_list|(
name|locationCaptor
operator|.
name|capture
argument_list|()
argument_list|,
name|dataCaptor
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|ObjectLocation
name|location
init|=
name|locationCaptor
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|CONTAINER_NAME
argument_list|,
name|location
operator|.
name|getContainerName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OBJECT_NAME
argument_list|,
name|location
operator|.
name|getObjectName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|md
argument_list|,
name|dataCaptor
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getMetadataTest ()
specifier|public
name|void
name|getMetadataTest
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|md
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|md
operator|.
name|put
argument_list|(
literal|"key"
argument_list|,
literal|"val"
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|objectService
operator|.
name|getMetadata
argument_list|(
name|CONTAINER_NAME
argument_list|,
name|OBJECT_NAME
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|OpenstackConstants
operator|.
name|OPERATION
argument_list|,
name|SwiftConstants
operator|.
name|GET_METADATA
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|SwiftConstants
operator|.
name|CONTAINER_NAME
argument_list|,
name|CONTAINER_NAME
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|SwiftConstants
operator|.
name|OBJECT_NAME
argument_list|,
name|OBJECT_NAME
argument_list|)
expr_stmt|;
name|producer
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|md
argument_list|,
name|msg
operator|.
name|getBody
argument_list|(
name|Map
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getTmpPayload ()
specifier|private
name|Payload
name|getTmpPayload
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|Payloads
operator|.
name|create
argument_list|(
name|File
operator|.
name|createTempFile
argument_list|(
literal|"payloadPreffix"
argument_list|,
literal|".txt"
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

