begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.osgi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|osgi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ResolverUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Bundle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|osgi
operator|.
name|util
operator|.
name|BundleDelegatingClassLoader
import|;
end_import

begin_class
DECL|class|OsgiResolverUtil
specifier|public
class|class
name|OsgiResolverUtil
extends|extends
name|ResolverUtil
block|{
DECL|field|bundle
specifier|private
name|Bundle
name|bundle
decl_stmt|;
DECL|method|OsgiResolverUtil (BundleContext context)
specifier|public
name|OsgiResolverUtil
parameter_list|(
name|BundleContext
name|context
parameter_list|)
block|{
name|bundle
operator|=
name|context
operator|.
name|getBundle
argument_list|()
expr_stmt|;
block|}
comment|/**      * Returns the classloaders that will be used for scanning for classes.       * Here we just add BundleDelegatingClassLoader here      *      * @return the ClassLoader instances that will be used to scan for classes      */
DECL|method|getClassLoaders ()
specifier|public
name|Set
argument_list|<
name|ClassLoader
argument_list|>
name|getClassLoaders
parameter_list|()
block|{
name|Set
argument_list|<
name|ClassLoader
argument_list|>
name|classLoaders
init|=
name|super
operator|.
name|getClassLoaders
argument_list|()
decl_stmt|;
comment|// Using the Activator's bundle to make up a class loader
name|ClassLoader
name|osgiLoader
init|=
name|BundleDelegatingClassLoader
operator|.
name|createBundleClassLoaderFor
argument_list|(
name|bundle
argument_list|)
decl_stmt|;
name|classLoaders
operator|.
name|add
argument_list|(
name|osgiLoader
argument_list|)
expr_stmt|;
return|return
name|classLoaders
return|;
block|}
block|}
end_class

end_unit

