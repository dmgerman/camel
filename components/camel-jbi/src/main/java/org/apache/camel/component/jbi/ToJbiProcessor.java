begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jbi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jbi
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|servicemix
operator|.
name|jbi
operator|.
name|resolver
operator|.
name|URIResolver
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|component
operator|.
name|ComponentContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|messaging
operator|.
name|DeliveryChannel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|messaging
operator|.
name|MessageExchange
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|messaging
operator|.
name|MessageExchangeFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|messaging
operator|.
name|MessagingException
import|;
end_import

begin_comment
comment|/**  * A @{link Processor} which takes a Camel {@link Exchange} and invokes it into JBI using the straight JBI API  *  * @version $Revision$  */
end_comment

begin_class
DECL|class|ToJbiProcessor
specifier|public
class|class
name|ToJbiProcessor
implements|implements
name|Processor
block|{
DECL|field|binding
specifier|private
name|JbiBinding
name|binding
decl_stmt|;
DECL|field|componentContext
specifier|private
name|ComponentContext
name|componentContext
decl_stmt|;
DECL|field|destinationUri
specifier|private
name|String
name|destinationUri
decl_stmt|;
DECL|method|ToJbiProcessor (JbiBinding binding, ComponentContext componentContext, String destinationUri)
specifier|public
name|ToJbiProcessor
parameter_list|(
name|JbiBinding
name|binding
parameter_list|,
name|ComponentContext
name|componentContext
parameter_list|,
name|String
name|destinationUri
parameter_list|)
block|{
name|this
operator|.
name|binding
operator|=
name|binding
expr_stmt|;
name|this
operator|.
name|componentContext
operator|=
name|componentContext
expr_stmt|;
name|this
operator|.
name|destinationUri
operator|=
name|destinationUri
expr_stmt|;
block|}
DECL|method|process (Exchange exchange)
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
try|try
block|{
name|DeliveryChannel
name|deliveryChannel
init|=
name|componentContext
operator|.
name|getDeliveryChannel
argument_list|()
decl_stmt|;
name|MessageExchangeFactory
name|exchangeFactory
init|=
name|deliveryChannel
operator|.
name|createExchangeFactory
argument_list|()
decl_stmt|;
name|MessageExchange
name|messageExchange
init|=
name|binding
operator|.
name|makeJbiMessageExchange
argument_list|(
name|exchange
argument_list|,
name|exchangeFactory
argument_list|)
decl_stmt|;
name|URIResolver
operator|.
name|configureExchange
argument_list|(
name|messageExchange
argument_list|,
name|componentContext
argument_list|,
name|destinationUri
argument_list|)
expr_stmt|;
name|deliveryChannel
operator|.
name|sendSync
argument_list|(
name|messageExchange
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MessagingException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|JbiException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

