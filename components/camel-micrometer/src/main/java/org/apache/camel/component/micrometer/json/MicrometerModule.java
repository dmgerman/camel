begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.micrometer.json
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|micrometer
operator|.
name|json
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|JsonGenerator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|Module
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|SerializerProvider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|module
operator|.
name|SimpleSerializers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ser
operator|.
name|std
operator|.
name|StdSerializer
import|;
end_import

begin_import
import|import
name|io
operator|.
name|micrometer
operator|.
name|core
operator|.
name|instrument
operator|.
name|*
import|;
end_import

begin_import
import|import
name|io
operator|.
name|micrometer
operator|.
name|core
operator|.
name|instrument
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|io
operator|.
name|micrometer
operator|.
name|core
operator|.
name|instrument
operator|.
name|composite
operator|.
name|CompositeMeterRegistry
import|;
end_import

begin_import
import|import
name|io
operator|.
name|micrometer
operator|.
name|core
operator|.
name|instrument
operator|.
name|distribution
operator|.
name|HistogramSnapshot
import|;
end_import

begin_import
import|import
name|io
operator|.
name|micrometer
operator|.
name|core
operator|.
name|instrument
operator|.
name|search
operator|.
name|Search
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Stream
import|;
end_import

begin_comment
comment|/**  * @author Christian Ohr  */
end_comment

begin_class
DECL|class|MicrometerModule
specifier|public
class|class
name|MicrometerModule
extends|extends
name|Module
block|{
DECL|field|VERSION
specifier|static
specifier|final
name|Version
name|VERSION
init|=
operator|new
name|Version
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
literal|"io.micrometer"
argument_list|,
literal|"micrometer-core"
argument_list|)
decl_stmt|;
DECL|field|timeUnit
specifier|private
specifier|final
name|TimeUnit
name|timeUnit
decl_stmt|;
DECL|field|supportAggregablePercentiles
specifier|private
specifier|final
name|boolean
name|supportAggregablePercentiles
decl_stmt|;
DECL|method|MicrometerModule (TimeUnit timeUnit, boolean supportAggregablePercentiles)
specifier|public
name|MicrometerModule
parameter_list|(
name|TimeUnit
name|timeUnit
parameter_list|,
name|boolean
name|supportAggregablePercentiles
parameter_list|)
block|{
name|this
operator|.
name|timeUnit
operator|=
name|timeUnit
expr_stmt|;
name|this
operator|.
name|supportAggregablePercentiles
operator|=
name|supportAggregablePercentiles
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getModuleName ()
specifier|public
name|String
name|getModuleName
parameter_list|()
block|{
return|return
literal|"micrometer"
return|;
block|}
annotation|@
name|Override
DECL|method|version ()
specifier|public
name|Version
name|version
parameter_list|()
block|{
return|return
name|VERSION
return|;
block|}
DECL|class|IdSerializer
specifier|private
specifier|static
class|class
name|IdSerializer
extends|extends
name|StdSerializer
argument_list|<
name|Meter
operator|.
name|Id
argument_list|>
block|{
DECL|method|IdSerializer ()
specifier|private
name|IdSerializer
parameter_list|()
block|{
name|super
argument_list|(
name|Meter
operator|.
name|Id
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serialize (Meter.Id id, JsonGenerator json, SerializerProvider provider)
specifier|public
name|void
name|serialize
parameter_list|(
name|Meter
operator|.
name|Id
name|id
parameter_list|,
name|JsonGenerator
name|json
parameter_list|,
name|SerializerProvider
name|provider
parameter_list|)
throws|throws
name|IOException
block|{
name|json
operator|.
name|writeStartObject
argument_list|()
expr_stmt|;
name|json
operator|.
name|writeStringField
argument_list|(
literal|"name"
argument_list|,
name|id
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeObjectField
argument_list|(
literal|"tags"
argument_list|,
name|id
operator|.
name|getTags
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeEndObject
argument_list|()
expr_stmt|;
block|}
block|}
DECL|class|TagSerializer
specifier|private
specifier|static
class|class
name|TagSerializer
extends|extends
name|StdSerializer
argument_list|<
name|Tag
argument_list|>
block|{
DECL|method|TagSerializer ()
specifier|private
name|TagSerializer
parameter_list|()
block|{
name|super
argument_list|(
name|Tag
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serialize (Tag tag, JsonGenerator json, SerializerProvider provider)
specifier|public
name|void
name|serialize
parameter_list|(
name|Tag
name|tag
parameter_list|,
name|JsonGenerator
name|json
parameter_list|,
name|SerializerProvider
name|provider
parameter_list|)
throws|throws
name|IOException
block|{
name|json
operator|.
name|writeStartObject
argument_list|()
expr_stmt|;
name|json
operator|.
name|writeStringField
argument_list|(
name|tag
operator|.
name|getKey
argument_list|()
argument_list|,
name|tag
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeEndObject
argument_list|()
expr_stmt|;
block|}
block|}
DECL|class|MeterSerializer
specifier|private
specifier|abstract
specifier|static
class|class
name|MeterSerializer
parameter_list|<
name|T
extends|extends
name|Meter
parameter_list|>
extends|extends
name|StdSerializer
argument_list|<
name|T
argument_list|>
block|{
DECL|method|MeterSerializer (Class<T> clazz)
specifier|private
name|MeterSerializer
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|)
block|{
name|super
argument_list|(
name|clazz
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serialize (T meter, JsonGenerator json, SerializerProvider provider)
specifier|public
specifier|final
name|void
name|serialize
parameter_list|(
name|T
name|meter
parameter_list|,
name|JsonGenerator
name|json
parameter_list|,
name|SerializerProvider
name|provider
parameter_list|)
throws|throws
name|IOException
block|{
name|json
operator|.
name|writeStartObject
argument_list|()
expr_stmt|;
name|json
operator|.
name|writeObjectField
argument_list|(
literal|"id"
argument_list|,
name|meter
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|serializeStatistics
argument_list|(
name|meter
argument_list|,
name|json
argument_list|,
name|provider
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeEndObject
argument_list|()
expr_stmt|;
block|}
DECL|method|serializeStatistics (T meter, JsonGenerator json, SerializerProvider provider)
specifier|protected
specifier|abstract
name|void
name|serializeStatistics
parameter_list|(
name|T
name|meter
parameter_list|,
name|JsonGenerator
name|json
parameter_list|,
name|SerializerProvider
name|provider
parameter_list|)
throws|throws
name|IOException
function_decl|;
block|}
DECL|class|GaugeSerializer
specifier|private
specifier|static
class|class
name|GaugeSerializer
extends|extends
name|MeterSerializer
argument_list|<
name|Gauge
argument_list|>
block|{
DECL|method|GaugeSerializer ()
specifier|private
name|GaugeSerializer
parameter_list|()
block|{
name|super
argument_list|(
name|Gauge
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serializeStatistics (Gauge gauge, JsonGenerator json, SerializerProvider provider)
specifier|protected
name|void
name|serializeStatistics
parameter_list|(
name|Gauge
name|gauge
parameter_list|,
name|JsonGenerator
name|json
parameter_list|,
name|SerializerProvider
name|provider
parameter_list|)
throws|throws
name|IOException
block|{
name|json
operator|.
name|writeNumberField
argument_list|(
literal|"value"
argument_list|,
name|gauge
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|CounterSerializer
specifier|private
specifier|static
class|class
name|CounterSerializer
extends|extends
name|MeterSerializer
argument_list|<
name|Counter
argument_list|>
block|{
DECL|method|CounterSerializer ()
specifier|private
name|CounterSerializer
parameter_list|()
block|{
name|super
argument_list|(
name|Counter
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serializeStatistics (Counter counter, JsonGenerator json, SerializerProvider provider)
specifier|protected
name|void
name|serializeStatistics
parameter_list|(
name|Counter
name|counter
parameter_list|,
name|JsonGenerator
name|json
parameter_list|,
name|SerializerProvider
name|provider
parameter_list|)
throws|throws
name|IOException
block|{
name|json
operator|.
name|writeNumberField
argument_list|(
literal|"count"
argument_list|,
name|counter
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|FunctionCounterSerializer
specifier|private
specifier|static
class|class
name|FunctionCounterSerializer
extends|extends
name|MeterSerializer
argument_list|<
name|FunctionCounter
argument_list|>
block|{
DECL|method|FunctionCounterSerializer ()
specifier|private
name|FunctionCounterSerializer
parameter_list|()
block|{
name|super
argument_list|(
name|FunctionCounter
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serializeStatistics (FunctionCounter counter, JsonGenerator json, SerializerProvider provider)
specifier|protected
name|void
name|serializeStatistics
parameter_list|(
name|FunctionCounter
name|counter
parameter_list|,
name|JsonGenerator
name|json
parameter_list|,
name|SerializerProvider
name|provider
parameter_list|)
throws|throws
name|IOException
block|{
name|json
operator|.
name|writeNumberField
argument_list|(
literal|"count"
argument_list|,
name|counter
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|TimerSerializer
specifier|private
specifier|static
class|class
name|TimerSerializer
extends|extends
name|MeterSerializer
argument_list|<
name|AbstractTimer
argument_list|>
block|{
DECL|field|timeUnit
specifier|private
specifier|final
name|TimeUnit
name|timeUnit
decl_stmt|;
DECL|field|supportAggregablePercentiles
specifier|private
specifier|final
name|boolean
name|supportAggregablePercentiles
decl_stmt|;
DECL|method|TimerSerializer (TimeUnit timeUnit, boolean supportAggregablePercentiles)
specifier|private
name|TimerSerializer
parameter_list|(
name|TimeUnit
name|timeUnit
parameter_list|,
name|boolean
name|supportAggregablePercentiles
parameter_list|)
block|{
name|super
argument_list|(
name|AbstractTimer
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|timeUnit
operator|=
name|timeUnit
expr_stmt|;
name|this
operator|.
name|supportAggregablePercentiles
operator|=
name|supportAggregablePercentiles
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serializeStatistics (AbstractTimer timer, JsonGenerator json, SerializerProvider provider)
specifier|protected
name|void
name|serializeStatistics
parameter_list|(
name|AbstractTimer
name|timer
parameter_list|,
name|JsonGenerator
name|json
parameter_list|,
name|SerializerProvider
name|provider
parameter_list|)
throws|throws
name|IOException
block|{
name|HistogramSnapshot
name|snapshot
init|=
name|timer
operator|.
name|takeSnapshot
argument_list|(
name|supportAggregablePercentiles
argument_list|)
decl_stmt|;
name|json
operator|.
name|writeNumberField
argument_list|(
literal|"count"
argument_list|,
name|snapshot
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeNumberField
argument_list|(
literal|"max"
argument_list|,
name|snapshot
operator|.
name|max
argument_list|(
name|timeUnit
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeNumberField
argument_list|(
literal|"mean"
argument_list|,
name|snapshot
operator|.
name|mean
argument_list|(
name|timeUnit
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeNumberField
argument_list|(
literal|"total"
argument_list|,
name|snapshot
operator|.
name|total
argument_list|(
name|timeUnit
argument_list|)
argument_list|)
expr_stmt|;
name|double
index|[]
name|percentiles
init|=
name|timer
operator|.
name|statsConfig
argument_list|()
operator|.
name|getPercentiles
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
name|percentiles
operator|.
name|length
condition|;
name|idx
operator|++
control|)
block|{
name|json
operator|.
name|writeNumberField
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"p%0.3d"
argument_list|,
name|percentiles
index|[
name|idx
index|]
argument_list|)
argument_list|,
name|snapshot
operator|.
name|percentileValues
argument_list|()
index|[
name|idx
index|]
operator|.
name|value
argument_list|(
name|timeUnit
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|class|FunctionTimerSerializer
specifier|private
specifier|static
class|class
name|FunctionTimerSerializer
extends|extends
name|MeterSerializer
argument_list|<
name|FunctionTimer
argument_list|>
block|{
DECL|field|timeUnit
specifier|private
specifier|final
name|TimeUnit
name|timeUnit
decl_stmt|;
DECL|method|FunctionTimerSerializer (TimeUnit timeUnit)
specifier|private
name|FunctionTimerSerializer
parameter_list|(
name|TimeUnit
name|timeUnit
parameter_list|)
block|{
name|super
argument_list|(
name|FunctionTimer
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|timeUnit
operator|=
name|timeUnit
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serializeStatistics (FunctionTimer timer, JsonGenerator json, SerializerProvider provider)
specifier|protected
name|void
name|serializeStatistics
parameter_list|(
name|FunctionTimer
name|timer
parameter_list|,
name|JsonGenerator
name|json
parameter_list|,
name|SerializerProvider
name|provider
parameter_list|)
throws|throws
name|IOException
block|{
name|json
operator|.
name|writeNumberField
argument_list|(
literal|"count"
argument_list|,
name|timer
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeNumberField
argument_list|(
literal|"mean"
argument_list|,
name|timer
operator|.
name|mean
argument_list|(
name|timeUnit
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeNumberField
argument_list|(
literal|"total"
argument_list|,
name|timer
operator|.
name|totalTime
argument_list|(
name|timeUnit
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|LongTaskTimerSerializer
specifier|private
specifier|static
class|class
name|LongTaskTimerSerializer
extends|extends
name|MeterSerializer
argument_list|<
name|LongTaskTimer
argument_list|>
block|{
DECL|field|timeUnit
specifier|private
specifier|final
name|TimeUnit
name|timeUnit
decl_stmt|;
DECL|method|LongTaskTimerSerializer (TimeUnit timeUnit)
specifier|private
name|LongTaskTimerSerializer
parameter_list|(
name|TimeUnit
name|timeUnit
parameter_list|)
block|{
name|super
argument_list|(
name|LongTaskTimer
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|timeUnit
operator|=
name|timeUnit
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serializeStatistics (LongTaskTimer timer, JsonGenerator json, SerializerProvider provider)
specifier|protected
name|void
name|serializeStatistics
parameter_list|(
name|LongTaskTimer
name|timer
parameter_list|,
name|JsonGenerator
name|json
parameter_list|,
name|SerializerProvider
name|provider
parameter_list|)
throws|throws
name|IOException
block|{
name|json
operator|.
name|writeNumberField
argument_list|(
literal|"activeTasks"
argument_list|,
name|timer
operator|.
name|activeTasks
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeNumberField
argument_list|(
literal|"duration"
argument_list|,
name|timer
operator|.
name|duration
argument_list|(
name|timeUnit
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|DistributionSummarySerializer
specifier|private
specifier|static
class|class
name|DistributionSummarySerializer
extends|extends
name|MeterSerializer
argument_list|<
name|AbstractDistributionSummary
argument_list|>
block|{
DECL|field|timeUnit
specifier|private
specifier|final
name|TimeUnit
name|timeUnit
decl_stmt|;
DECL|field|supportAggregablePercentiles
specifier|private
specifier|final
name|boolean
name|supportAggregablePercentiles
decl_stmt|;
DECL|method|DistributionSummarySerializer (TimeUnit timeUnit, boolean supportAggregablePercentiles)
specifier|public
name|DistributionSummarySerializer
parameter_list|(
name|TimeUnit
name|timeUnit
parameter_list|,
name|boolean
name|supportAggregablePercentiles
parameter_list|)
block|{
name|super
argument_list|(
name|AbstractDistributionSummary
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|timeUnit
operator|=
name|timeUnit
expr_stmt|;
name|this
operator|.
name|supportAggregablePercentiles
operator|=
name|supportAggregablePercentiles
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serializeStatistics (AbstractDistributionSummary distributionSummary, JsonGenerator json, SerializerProvider provider)
specifier|protected
name|void
name|serializeStatistics
parameter_list|(
name|AbstractDistributionSummary
name|distributionSummary
parameter_list|,
name|JsonGenerator
name|json
parameter_list|,
name|SerializerProvider
name|provider
parameter_list|)
throws|throws
name|IOException
block|{
name|HistogramSnapshot
name|snapshot
init|=
name|distributionSummary
operator|.
name|takeSnapshot
argument_list|(
name|supportAggregablePercentiles
argument_list|)
decl_stmt|;
name|json
operator|.
name|writeNumberField
argument_list|(
literal|"count"
argument_list|,
name|snapshot
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeNumberField
argument_list|(
literal|"max"
argument_list|,
name|snapshot
operator|.
name|max
argument_list|(
name|timeUnit
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeNumberField
argument_list|(
literal|"mean"
argument_list|,
name|snapshot
operator|.
name|mean
argument_list|(
name|timeUnit
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeNumberField
argument_list|(
literal|"total"
argument_list|,
name|snapshot
operator|.
name|total
argument_list|(
name|timeUnit
argument_list|)
argument_list|)
expr_stmt|;
name|double
index|[]
name|percentiles
init|=
name|distributionSummary
operator|.
name|statsConfig
argument_list|()
operator|.
name|getPercentiles
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
name|percentiles
operator|.
name|length
condition|;
name|idx
operator|++
control|)
block|{
name|json
operator|.
name|writeNumberField
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"p%0.3d"
argument_list|,
name|percentiles
index|[
name|idx
index|]
argument_list|)
argument_list|,
name|snapshot
operator|.
name|percentileValues
argument_list|()
index|[
name|idx
index|]
operator|.
name|value
argument_list|(
name|timeUnit
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|class|MeterRegistrySerializer
specifier|private
specifier|static
class|class
name|MeterRegistrySerializer
extends|extends
name|StdSerializer
argument_list|<
name|MeterRegistry
argument_list|>
block|{
DECL|method|MeterRegistrySerializer ()
specifier|private
name|MeterRegistrySerializer
parameter_list|()
block|{
name|super
argument_list|(
name|MeterRegistry
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serialize (MeterRegistry registry, JsonGenerator json, SerializerProvider provider)
specifier|public
name|void
name|serialize
parameter_list|(
name|MeterRegistry
name|registry
parameter_list|,
name|JsonGenerator
name|json
parameter_list|,
name|SerializerProvider
name|provider
parameter_list|)
throws|throws
name|IOException
block|{
name|json
operator|.
name|writeStartObject
argument_list|()
expr_stmt|;
name|json
operator|.
name|writeStringField
argument_list|(
literal|"version"
argument_list|,
name|VERSION
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeObjectField
argument_list|(
literal|"gauges"
argument_list|,
name|meters
argument_list|(
name|registry
argument_list|,
name|Gauge
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeObjectField
argument_list|(
literal|"counters"
argument_list|,
name|meters
argument_list|(
name|registry
argument_list|,
name|Counter
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeObjectField
argument_list|(
literal|"functionCounters"
argument_list|,
name|meters
argument_list|(
name|registry
argument_list|,
name|FunctionCounter
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeObjectField
argument_list|(
literal|"timers"
argument_list|,
name|meters
argument_list|(
name|registry
argument_list|,
name|Timer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeObjectField
argument_list|(
literal|"functionTimers"
argument_list|,
name|meters
argument_list|(
name|registry
argument_list|,
name|FunctionTimer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeObjectField
argument_list|(
literal|"longTaskTimers"
argument_list|,
name|meters
argument_list|(
name|registry
argument_list|,
name|LongTaskTimer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeObjectField
argument_list|(
literal|"distributionSummaries"
argument_list|,
name|meters
argument_list|(
name|registry
argument_list|,
name|DistributionSummary
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|writeEndObject
argument_list|()
expr_stmt|;
block|}
DECL|method|meters (MeterRegistry meterRegistry, Class<? extends Meter> clazz)
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Meter
argument_list|>
argument_list|>
name|meters
parameter_list|(
name|MeterRegistry
name|meterRegistry
parameter_list|,
name|Class
argument_list|<
name|?
extends|extends
name|Meter
argument_list|>
name|clazz
parameter_list|)
block|{
if|if
condition|(
name|meterRegistry
operator|instanceof
name|CompositeMeterRegistry
condition|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Meter
argument_list|>
argument_list|>
name|map
init|=
operator|new
name|TreeMap
argument_list|<>
argument_list|()
decl_stmt|;
operator|(
operator|(
name|CompositeMeterRegistry
operator|)
name|meterRegistry
operator|)
operator|.
name|getRegistries
argument_list|()
operator|.
name|forEach
argument_list|(
name|reg
lambda|->
name|meters
argument_list|(
name|meterRegistry
argument_list|,
name|clazz
argument_list|)
operator|.
name|entrySet
argument_list|()
operator|.
name|forEach
argument_list|(
name|entry
lambda|->
name|map
operator|.
name|merge
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|,
parameter_list|(
name|m1
parameter_list|,
name|m2
parameter_list|)
lambda|->
name|Stream
operator|.
name|concat
argument_list|(
name|m1
operator|.
name|stream
argument_list|()
argument_list|,
name|m2
operator|.
name|stream
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
return|return
name|Search
operator|.
name|in
argument_list|(
name|meterRegistry
argument_list|)
operator|.
name|meters
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|clazz
operator|::
name|isInstance
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toMap
argument_list|(
name|meter
lambda|->
name|meter
operator|.
name|getId
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|meter
lambda|->
name|Collections
operator|.
name|singletonList
argument_list|(
name|meter
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|setupModule (SetupContext setupContext)
specifier|public
name|void
name|setupModule
parameter_list|(
name|SetupContext
name|setupContext
parameter_list|)
block|{
name|setupContext
operator|.
name|addSerializers
argument_list|(
operator|new
name|SimpleSerializers
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|IdSerializer
argument_list|()
argument_list|,
operator|new
name|TagSerializer
argument_list|()
argument_list|,
operator|new
name|GaugeSerializer
argument_list|()
argument_list|,
operator|new
name|CounterSerializer
argument_list|()
argument_list|,
operator|new
name|FunctionCounterSerializer
argument_list|()
argument_list|,
operator|new
name|TimerSerializer
argument_list|(
name|timeUnit
argument_list|,
name|supportAggregablePercentiles
argument_list|)
argument_list|,
operator|new
name|FunctionTimerSerializer
argument_list|(
name|timeUnit
argument_list|)
argument_list|,
operator|new
name|LongTaskTimerSerializer
argument_list|(
name|timeUnit
argument_list|)
argument_list|,
operator|new
name|DistributionSummarySerializer
argument_list|(
name|timeUnit
argument_list|,
name|supportAggregablePercentiles
argument_list|)
argument_list|,
operator|new
name|MeterRegistrySerializer
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

