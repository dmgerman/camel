begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.paho
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|paho
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|lang
operator|.
name|System
operator|.
name|nanoTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Consumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Producer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriPath
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|paho
operator|.
name|client
operator|.
name|mqttv3
operator|.
name|MqttClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|paho
operator|.
name|client
operator|.
name|mqttv3
operator|.
name|MqttClientPersistence
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|paho
operator|.
name|client
operator|.
name|mqttv3
operator|.
name|MqttConnectOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|paho
operator|.
name|client
operator|.
name|mqttv3
operator|.
name|MqttMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|paho
operator|.
name|client
operator|.
name|mqttv3
operator|.
name|persist
operator|.
name|MemoryPersistence
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|paho
operator|.
name|client
operator|.
name|mqttv3
operator|.
name|persist
operator|.
name|MqttDefaultFilePersistence
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|paho
operator|.
name|PahoPersistence
operator|.
name|MEMORY
import|;
end_import

begin_class
annotation|@
name|UriEndpoint
argument_list|(
name|scheme
operator|=
literal|"paho"
argument_list|,
name|title
operator|=
literal|"Paho"
argument_list|,
name|consumerClass
operator|=
name|PahoConsumer
operator|.
name|class
argument_list|,
name|label
operator|=
literal|"messaging"
argument_list|,
name|syntax
operator|=
literal|"paho:topic"
argument_list|)
DECL|class|PahoEndpoint
specifier|public
class|class
name|PahoEndpoint
extends|extends
name|DefaultEndpoint
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|PahoEndpoint
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Constants
DECL|field|DEFAULT_BROKER_URL
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_BROKER_URL
init|=
literal|"tcp://localhost:1883"
decl_stmt|;
DECL|field|DEFAULT_QOS
specifier|private
specifier|static
specifier|final
name|int
name|DEFAULT_QOS
init|=
literal|2
decl_stmt|;
DECL|field|DEFAULT_QOS_STRING
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_QOS_STRING
init|=
name|DEFAULT_QOS
operator|+
literal|""
decl_stmt|;
comment|// Configuration members
annotation|@
name|UriPath
annotation|@
name|Metadata
argument_list|(
name|required
operator|=
literal|"true"
argument_list|)
DECL|field|topic
specifier|private
name|String
name|topic
decl_stmt|;
annotation|@
name|UriParam
DECL|field|clientId
specifier|private
name|String
name|clientId
init|=
literal|"camel-"
operator|+
name|nanoTime
argument_list|()
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|defaultValue
operator|=
name|DEFAULT_BROKER_URL
argument_list|)
DECL|field|brokerUrl
specifier|private
name|String
name|brokerUrl
init|=
name|DEFAULT_BROKER_URL
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|defaultValue
operator|=
name|DEFAULT_QOS_STRING
argument_list|)
DECL|field|qos
specifier|private
name|int
name|qos
init|=
name|DEFAULT_QOS
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|defaultValue
operator|=
literal|"MEMORY"
argument_list|)
DECL|field|persistence
specifier|private
name|PahoPersistence
name|persistence
init|=
name|MEMORY
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|description
operator|=
literal|"Base directory used by file persistence."
argument_list|,
name|defaultValue
operator|=
literal|"Current directory"
argument_list|)
DECL|field|filePersistenceDirectory
specifier|private
name|String
name|filePersistenceDirectory
decl_stmt|;
comment|// Collaboration members
annotation|@
name|UriParam
DECL|field|connectOptions
specifier|private
name|MqttConnectOptions
name|connectOptions
decl_stmt|;
comment|// Auto-configuration members
DECL|field|client
specifier|private
specifier|transient
name|MqttClient
name|client
decl_stmt|;
DECL|method|PahoEndpoint (String uri, String topic, Component component)
specifier|public
name|PahoEndpoint
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|topic
parameter_list|,
name|Component
name|component
parameter_list|)
block|{
name|super
argument_list|(
name|uri
argument_list|,
name|component
argument_list|)
expr_stmt|;
name|this
operator|.
name|topic
operator|=
name|topic
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doStart ()
specifier|protected
name|void
name|doStart
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|doStart
argument_list|()
expr_stmt|;
name|client
operator|=
operator|new
name|MqttClient
argument_list|(
name|getBrokerUrl
argument_list|()
argument_list|,
name|getClientId
argument_list|()
argument_list|,
name|resolvePersistence
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|connect
argument_list|(
name|resolveMqttConnectOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doStop ()
specifier|protected
name|void
name|doStop
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|getClient
argument_list|()
operator|.
name|isConnected
argument_list|()
condition|)
block|{
name|getClient
argument_list|()
operator|.
name|disconnect
argument_list|()
expr_stmt|;
block|}
name|super
operator|.
name|doStop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createProducer ()
specifier|public
name|Producer
name|createProducer
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|PahoProducer
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|createConsumer (Processor processor)
specifier|public
name|Consumer
name|createConsumer
parameter_list|(
name|Processor
name|processor
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|new
name|PahoConsumer
argument_list|(
name|this
argument_list|,
name|processor
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|isSingleton ()
specifier|public
name|boolean
name|isSingleton
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
DECL|method|getComponent ()
specifier|public
name|PahoComponent
name|getComponent
parameter_list|()
block|{
return|return
operator|(
name|PahoComponent
operator|)
name|super
operator|.
name|getComponent
argument_list|()
return|;
block|}
comment|// Resolvers
DECL|method|resolvePersistence ()
specifier|protected
name|MqttClientPersistence
name|resolvePersistence
parameter_list|()
block|{
if|if
condition|(
name|persistence
operator|==
name|MEMORY
condition|)
block|{
return|return
operator|new
name|MemoryPersistence
argument_list|()
return|;
block|}
else|else
block|{
if|if
condition|(
name|filePersistenceDirectory
operator|!=
literal|null
condition|)
block|{
return|return
operator|new
name|MqttDefaultFilePersistence
argument_list|(
name|filePersistenceDirectory
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|MqttDefaultFilePersistence
argument_list|()
return|;
block|}
block|}
block|}
DECL|method|resolveMqttConnectOptions ()
specifier|protected
name|MqttConnectOptions
name|resolveMqttConnectOptions
parameter_list|()
block|{
if|if
condition|(
name|connectOptions
operator|!=
literal|null
condition|)
block|{
return|return
name|connectOptions
return|;
block|}
name|Set
argument_list|<
name|MqttConnectOptions
argument_list|>
name|connectOptions
init|=
name|getCamelContext
argument_list|()
operator|.
name|getRegistry
argument_list|()
operator|.
name|findByType
argument_list|(
name|MqttConnectOptions
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|connectOptions
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Single MqttConnectOptions instance found in the registry. It will be used by the endpoint."
argument_list|)
expr_stmt|;
return|return
name|connectOptions
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
return|;
block|}
elseif|else
if|if
condition|(
name|connectOptions
operator|.
name|size
argument_list|()
operator|>
literal|1
condition|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Found {} instances of the MqttConnectOptions in the registry. None of these will be used by the endpoint. "
operator|+
literal|"Please use 'connectOptions' endpoint option to select one."
argument_list|,
name|connectOptions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|MqttConnectOptions
argument_list|()
return|;
block|}
DECL|method|createExchange (MqttMessage mqttMessage, String topic)
specifier|public
name|Exchange
name|createExchange
parameter_list|(
name|MqttMessage
name|mqttMessage
parameter_list|,
name|String
name|topic
parameter_list|)
block|{
name|PahoMessage
name|paho
init|=
operator|new
name|PahoMessage
argument_list|()
decl_stmt|;
name|paho
operator|.
name|setMqttMessage
argument_list|(
name|mqttMessage
argument_list|)
expr_stmt|;
name|paho
operator|.
name|setBody
argument_list|(
name|mqttMessage
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|paho
operator|.
name|setHeader
argument_list|(
name|PahoConstants
operator|.
name|MQTT_TOPIC
argument_list|,
name|topic
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|createExchange
argument_list|()
decl_stmt|;
name|exchange
operator|.
name|setIn
argument_list|(
name|paho
argument_list|)
expr_stmt|;
return|return
name|exchange
return|;
block|}
comment|// Configuration getters& setters
DECL|method|getClientId ()
specifier|public
name|String
name|getClientId
parameter_list|()
block|{
return|return
name|clientId
return|;
block|}
comment|/**      * MQTT client identifier.      */
DECL|method|setClientId (String clientId)
specifier|public
name|void
name|setClientId
parameter_list|(
name|String
name|clientId
parameter_list|)
block|{
name|this
operator|.
name|clientId
operator|=
name|clientId
expr_stmt|;
block|}
DECL|method|getBrokerUrl ()
specifier|public
name|String
name|getBrokerUrl
parameter_list|()
block|{
return|return
name|brokerUrl
return|;
block|}
comment|/**      * The URL of the MQTT broker.      */
DECL|method|setBrokerUrl (String brokerUrl)
specifier|public
name|void
name|setBrokerUrl
parameter_list|(
name|String
name|brokerUrl
parameter_list|)
block|{
name|this
operator|.
name|brokerUrl
operator|=
name|brokerUrl
expr_stmt|;
block|}
DECL|method|getTopic ()
specifier|public
name|String
name|getTopic
parameter_list|()
block|{
return|return
name|topic
return|;
block|}
comment|/**      * Name of the topic      */
DECL|method|setTopic (String topic)
specifier|public
name|void
name|setTopic
parameter_list|(
name|String
name|topic
parameter_list|)
block|{
name|this
operator|.
name|topic
operator|=
name|topic
expr_stmt|;
block|}
DECL|method|getQos ()
specifier|public
name|int
name|getQos
parameter_list|()
block|{
return|return
name|qos
return|;
block|}
comment|/**      * Client quality of service level (0-2).      */
DECL|method|setQos (int qos)
specifier|public
name|void
name|setQos
parameter_list|(
name|int
name|qos
parameter_list|)
block|{
name|this
operator|.
name|qos
operator|=
name|qos
expr_stmt|;
block|}
comment|// Auto-configuration getters& setters
DECL|method|getPersistence ()
specifier|public
name|PahoPersistence
name|getPersistence
parameter_list|()
block|{
return|return
name|persistence
return|;
block|}
comment|/**      * Client persistence to be used - memory or file.      */
DECL|method|setPersistence (PahoPersistence persistence)
specifier|public
name|void
name|setPersistence
parameter_list|(
name|PahoPersistence
name|persistence
parameter_list|)
block|{
name|this
operator|.
name|persistence
operator|=
name|persistence
expr_stmt|;
block|}
DECL|method|getFilePersistenceDirectory ()
specifier|public
name|String
name|getFilePersistenceDirectory
parameter_list|()
block|{
return|return
name|filePersistenceDirectory
return|;
block|}
comment|/**      * Base directory used by the file persistence provider.      */
DECL|method|setFilePersistenceDirectory (String filePersistenceDirectory)
specifier|public
name|void
name|setFilePersistenceDirectory
parameter_list|(
name|String
name|filePersistenceDirectory
parameter_list|)
block|{
name|this
operator|.
name|filePersistenceDirectory
operator|=
name|filePersistenceDirectory
expr_stmt|;
block|}
DECL|method|getClient ()
specifier|public
name|MqttClient
name|getClient
parameter_list|()
block|{
return|return
name|client
return|;
block|}
comment|/**      * To use the existing MqttClient instance as client.      */
DECL|method|setClient (MqttClient client)
specifier|public
name|void
name|setClient
parameter_list|(
name|MqttClient
name|client
parameter_list|)
block|{
name|this
operator|.
name|client
operator|=
name|client
expr_stmt|;
block|}
DECL|method|getConnectOptions ()
specifier|public
name|MqttConnectOptions
name|getConnectOptions
parameter_list|()
block|{
return|return
name|connectOptions
return|;
block|}
comment|/**      * Client connection options      */
DECL|method|setConnectOptions (MqttConnectOptions connOpts)
specifier|public
name|void
name|setConnectOptions
parameter_list|(
name|MqttConnectOptions
name|connOpts
parameter_list|)
block|{
name|this
operator|.
name|connectOptions
operator|=
name|connOpts
expr_stmt|;
block|}
block|}
end_class

end_unit

