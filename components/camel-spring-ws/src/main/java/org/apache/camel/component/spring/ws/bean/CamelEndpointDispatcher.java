begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.spring.ws.bean
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|spring
operator|.
name|ws
operator|.
name|bean
package|;
end_package

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|util
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ws
operator|.
name|context
operator|.
name|MessageContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ws
operator|.
name|server
operator|.
name|endpoint
operator|.
name|MessageEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ws
operator|.
name|server
operator|.
name|endpoint
operator|.
name|mapping
operator|.
name|AbstractMapBasedEndpointMapping
import|;
end_import

begin_comment
comment|/**  * Spring {@link MessageEndpoint} for dispatching messages received by Spring-WS to a Camel  * endpoint. This class needs to be registered in the Spring<tt>ApplicationContext</tt>  * when consuming messages using the<tt>spring-ws:beanname:</tt> URI scheme.  *<p/>  * For example, when using a route such as<tt>from("spring-ws:beanname:stockQuote").to("...");</tt>  * the following bean definition needs to be present in the<tt>ApplicationContext</tt>:  *<p/>  * {@code  *<bean id="stockQuote" class="org.apache.camel.component.spring.ws.bean.CamelEndpointDispatcher" />  * }  *  * @see AbstractMapBasedEndpointMapping#setMappings(java.util.Properties)  * @see AbstractMapBasedEndpointMapping#setEndpointMap(java.util.Map)  */
end_comment

begin_class
DECL|class|CamelEndpointDispatcher
specifier|public
class|class
name|CamelEndpointDispatcher
implements|implements
name|MessageEndpoint
block|{
DECL|field|consumerMessageEndpoint
specifier|private
name|MessageEndpoint
name|consumerMessageEndpoint
decl_stmt|;
annotation|@
name|Override
DECL|method|invoke (MessageContext messageContext)
specifier|public
name|void
name|invoke
parameter_list|(
name|MessageContext
name|messageContext
parameter_list|)
throws|throws
name|Exception
block|{
name|Assert
operator|.
name|notNull
argument_list|(
name|consumerMessageEndpoint
argument_list|)
expr_stmt|;
name|consumerMessageEndpoint
operator|.
name|invoke
argument_list|(
name|messageContext
argument_list|)
expr_stmt|;
block|}
DECL|method|getConsumerMessageEndpoint ()
specifier|public
name|MessageEndpoint
name|getConsumerMessageEndpoint
parameter_list|()
block|{
return|return
name|consumerMessageEndpoint
return|;
block|}
DECL|method|setConsumerMessageEndpoint (MessageEndpoint consumer)
specifier|public
name|void
name|setConsumerMessageEndpoint
parameter_list|(
name|MessageEndpoint
name|consumer
parameter_list|)
block|{
name|this
operator|.
name|consumerMessageEndpoint
operator|=
name|consumer
expr_stmt|;
block|}
block|}
end_class

end_unit

