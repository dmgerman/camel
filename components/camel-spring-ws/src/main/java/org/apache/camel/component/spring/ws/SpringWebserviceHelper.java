begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.spring.ws
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|spring
operator|.
name|ws
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Transformer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stax
operator|.
name|StAXSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|builder
operator|.
name|xml
operator|.
name|StAX2SAXSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|builder
operator|.
name|xml
operator|.
name|XMLConverterHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_class
DECL|class|SpringWebserviceHelper
specifier|public
specifier|final
class|class
name|SpringWebserviceHelper
block|{
DECL|field|defaultCharset
specifier|private
specifier|static
name|String
name|defaultCharset
init|=
name|ObjectHelper
operator|.
name|getSystemProperty
argument_list|(
literal|"org.apache.camel.default.charset"
argument_list|,
literal|"UTF-8"
argument_list|)
decl_stmt|;
DECL|method|SpringWebserviceHelper ()
specifier|private
name|SpringWebserviceHelper
parameter_list|()
block|{     }
DECL|method|toResult (Source source, Result result)
specifier|public
specifier|static
name|void
name|toResult
parameter_list|(
name|Source
name|source
parameter_list|,
name|Result
name|result
parameter_list|)
throws|throws
name|TransformerException
block|{
if|if
condition|(
name|source
operator|!=
literal|null
condition|)
block|{
name|XMLConverterHelper
name|xml
init|=
operator|new
name|XMLConverterHelper
argument_list|()
decl_stmt|;
name|TransformerFactory
name|factory
init|=
name|xml
operator|.
name|getTransformerFactory
argument_list|()
decl_stmt|;
name|Transformer
name|transformer
init|=
name|factory
operator|.
name|newTransformer
argument_list|()
decl_stmt|;
if|if
condition|(
name|transformer
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|TransformerException
argument_list|(
literal|"Could not create a transformer - JAXP is misconfigured!"
argument_list|)
throw|;
block|}
else|else
block|{
name|Properties
name|outputProperties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|outputProperties
operator|.
name|put
argument_list|(
literal|"encoding"
argument_list|,
name|defaultCharset
argument_list|)
expr_stmt|;
name|outputProperties
operator|.
name|put
argument_list|(
literal|"omit-xml-declaration"
argument_list|,
literal|"yes"
argument_list|)
expr_stmt|;
name|transformer
operator|.
name|setOutputProperties
argument_list|(
name|outputProperties
argument_list|)
expr_stmt|;
if|if
condition|(
name|factory
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"org.apache.xalan.processor.TransformerFactoryImpl"
argument_list|)
operator|&&
name|source
operator|instanceof
name|StAXSource
condition|)
block|{
name|source
operator|=
operator|new
name|StAX2SAXSource
argument_list|(
operator|(
operator|(
name|StAXSource
operator|)
name|source
operator|)
operator|.
name|getXMLStreamReader
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|transformer
operator|.
name|transform
argument_list|(
name|source
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

