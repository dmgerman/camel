begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.spring.ws.addressing
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|spring
operator|.
name|ws
operator|.
name|addressing
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Produce
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ProducerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|spring
operator|.
name|ws
operator|.
name|utils
operator|.
name|OutputChannelReceiver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|spring
operator|.
name|ws
operator|.
name|utils
operator|.
name|TestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|spring
operator|.
name|CamelSpringTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fest
operator|.
name|assertions
operator|.
name|Assertions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|AbstractXmlApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|ClassPathXmlApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ws
operator|.
name|soap
operator|.
name|SoapMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ws
operator|.
name|soap
operator|.
name|addressing
operator|.
name|core
operator|.
name|MessageAddressingProperties
import|;
end_import

begin_class
DECL|class|ProducerParamsBasicTest
specifier|public
class|class
name|ProducerParamsBasicTest
extends|extends
name|CamelSpringTestSupport
block|{
DECL|field|anonymousUri
specifier|private
specifier|static
name|URI
name|anonymousUri
decl_stmt|;
DECL|field|xmlBody
specifier|private
specifier|final
name|String
name|xmlBody
init|=
literal|"<GetQuote xmlns=\"http://www.webserviceX.NET/\"><symbol>GOOG</symbol></GetQuote>"
decl_stmt|;
DECL|field|sender
specifier|private
name|OutputChannelReceiver
name|sender
decl_stmt|;
annotation|@
name|Produce
DECL|field|template
specifier|private
name|ProducerTemplate
name|template
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|sender
operator|=
name|getMandatoryBean
argument_list|(
name|OutputChannelReceiver
operator|.
name|class
argument_list|,
literal|"senderReceiver"
argument_list|)
expr_stmt|;
name|sender
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|BeforeClass
DECL|method|setUpConstants ()
specifier|public
specifier|static
name|void
name|setUpConstants
parameter_list|()
throws|throws
name|Exception
block|{
name|anonymousUri
operator|=
operator|new
name|URI
argument_list|(
literal|"http://www.w3.org/2005/08/addressing/anonymous"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDefaultReplyTo ()
specifier|public
name|void
name|testDefaultReplyTo
parameter_list|()
throws|throws
name|Exception
block|{
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:defaultOk"
argument_list|,
name|xmlBody
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|sender
operator|.
name|getMessageContext
argument_list|()
argument_list|)
expr_stmt|;
comment|// check default actions
name|Assertions
operator|.
name|assertThat
argument_list|(
name|sender
operator|.
name|getMessageContext
argument_list|()
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|MessageAddressingProperties
name|wsaProperties
init|=
name|TestUtil
operator|.
name|getWSAProperties
argument_list|(
operator|(
name|SoapMessage
operator|)
name|sender
operator|.
name|getMessageContext
argument_list|()
operator|.
name|getRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
operator|.
name|getReplyTo
argument_list|()
operator|.
name|getAddress
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|anonymousUri
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
operator|.
name|getFaultTo
argument_list|()
operator|.
name|getAddress
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|anonymousUri
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDefaulFaultTo ()
specifier|public
name|void
name|testDefaulFaultTo
parameter_list|()
throws|throws
name|Exception
block|{
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:defaultFault"
argument_list|,
name|xmlBody
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|sender
operator|.
name|getMessageContext
argument_list|()
argument_list|)
expr_stmt|;
comment|// check default actions
name|Assertions
operator|.
name|assertThat
argument_list|(
name|sender
operator|.
name|getMessageContext
argument_list|()
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|MessageAddressingProperties
name|wsaProperties
init|=
name|TestUtil
operator|.
name|getWSAProperties
argument_list|(
operator|(
name|SoapMessage
operator|)
name|sender
operator|.
name|getMessageContext
argument_list|()
operator|.
name|getRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
operator|.
name|getReplyTo
argument_list|()
operator|.
name|getAddress
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|anonymousUri
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
operator|.
name|getFaultTo
argument_list|()
operator|.
name|getAddress
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|anonymousUri
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReplyTo ()
specifier|public
name|void
name|testReplyTo
parameter_list|()
throws|throws
name|Exception
block|{
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:replyTo"
argument_list|,
name|xmlBody
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|sender
operator|.
name|getMessageContext
argument_list|()
argument_list|)
expr_stmt|;
comment|// check default actions
name|Assertions
operator|.
name|assertThat
argument_list|(
name|sender
operator|.
name|getMessageContext
argument_list|()
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|MessageAddressingProperties
name|wsaProperties
init|=
name|TestUtil
operator|.
name|getWSAProperties
argument_list|(
operator|(
name|SoapMessage
operator|)
name|sender
operator|.
name|getMessageContext
argument_list|()
operator|.
name|getRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
operator|.
name|getReplyTo
argument_list|()
operator|.
name|getAddress
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
operator|new
name|URI
argument_list|(
literal|"mailto://replyTo@chocolatejar.eu"
argument_list|)
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
operator|.
name|getFaultTo
argument_list|()
operator|.
name|getAddress
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://fault.to"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFaultTo ()
specifier|public
name|void
name|testFaultTo
parameter_list|()
throws|throws
name|Exception
block|{
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:faultTo"
argument_list|,
name|xmlBody
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|sender
operator|.
name|getMessageContext
argument_list|()
argument_list|)
expr_stmt|;
comment|// check default actions
name|Assertions
operator|.
name|assertThat
argument_list|(
name|sender
operator|.
name|getMessageContext
argument_list|()
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|MessageAddressingProperties
name|wsaProperties
init|=
name|TestUtil
operator|.
name|getWSAProperties
argument_list|(
operator|(
name|SoapMessage
operator|)
name|sender
operator|.
name|getMessageContext
argument_list|()
operator|.
name|getRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
operator|.
name|getReplyTo
argument_list|()
operator|.
name|getAddress
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|anonymousUri
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
operator|.
name|getFaultTo
argument_list|()
operator|.
name|getAddress
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://fault.to"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFaultFollowsReply ()
specifier|public
name|void
name|testFaultFollowsReply
parameter_list|()
throws|throws
name|Exception
block|{
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:omittedFaultTo"
argument_list|,
name|xmlBody
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|sender
operator|.
name|getMessageContext
argument_list|()
argument_list|)
expr_stmt|;
comment|// check default actions
name|Assertions
operator|.
name|assertThat
argument_list|(
name|sender
operator|.
name|getMessageContext
argument_list|()
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|MessageAddressingProperties
name|wsaProperties
init|=
name|TestUtil
operator|.
name|getWSAProperties
argument_list|(
operator|(
name|SoapMessage
operator|)
name|sender
operator|.
name|getMessageContext
argument_list|()
operator|.
name|getRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
operator|.
name|getReplyTo
argument_list|()
operator|.
name|getAddress
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://reply.to"
argument_list|)
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
operator|.
name|getFaultTo
argument_list|()
operator|.
name|getAddress
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://reply.to"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReplyDoesntFollowFault ()
specifier|public
name|void
name|testReplyDoesntFollowFault
parameter_list|()
throws|throws
name|Exception
block|{
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:omittedReplyTo"
argument_list|,
name|xmlBody
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|sender
operator|.
name|getMessageContext
argument_list|()
argument_list|)
expr_stmt|;
comment|// check default actions
name|Assertions
operator|.
name|assertThat
argument_list|(
name|sender
operator|.
name|getMessageContext
argument_list|()
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|MessageAddressingProperties
name|wsaProperties
init|=
name|TestUtil
operator|.
name|getWSAProperties
argument_list|(
operator|(
name|SoapMessage
operator|)
name|sender
operator|.
name|getMessageContext
argument_list|()
operator|.
name|getRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
operator|.
name|getReplyTo
argument_list|()
operator|.
name|getAddress
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|anonymousUri
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
operator|.
name|getFaultTo
argument_list|()
operator|.
name|getAddress
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://fault.to"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEmptyReplyAndFaultAndActionMustBePresent ()
specifier|public
name|void
name|testEmptyReplyAndFaultAndActionMustBePresent
parameter_list|()
throws|throws
name|Exception
block|{
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:empty"
argument_list|,
name|xmlBody
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|sender
operator|.
name|getMessageContext
argument_list|()
argument_list|)
expr_stmt|;
comment|// check default actions
name|Assertions
operator|.
name|assertThat
argument_list|(
name|sender
operator|.
name|getMessageContext
argument_list|()
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|MessageAddressingProperties
name|wsaProperties
init|=
name|TestUtil
operator|.
name|getWSAProperties
argument_list|(
operator|(
name|SoapMessage
operator|)
name|sender
operator|.
name|getMessageContext
argument_list|()
operator|.
name|getRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
operator|.
name|getAction
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://turnOnWSA.com"
argument_list|)
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
operator|.
name|getReplyTo
argument_list|()
operator|.
name|getAddress
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|anonymousUri
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
operator|.
name|getFaultTo
argument_list|()
operator|.
name|getAddress
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|anonymousUri
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNoAction ()
specifier|public
name|void
name|testNoAction
parameter_list|()
throws|throws
name|Exception
block|{
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:noAction"
argument_list|,
name|xmlBody
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|sender
operator|.
name|getMessageContext
argument_list|()
argument_list|)
expr_stmt|;
comment|// WSA is not supported, if there is no ws action
name|Assertions
operator|.
name|assertThat
argument_list|(
name|sender
operator|.
name|getMessageContext
argument_list|()
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|MessageAddressingProperties
name|wsaProperties
init|=
name|TestUtil
operator|.
name|getWSAProperties
argument_list|(
operator|(
name|SoapMessage
operator|)
name|sender
operator|.
name|getMessageContext
argument_list|()
operator|.
name|getRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|wsaProperties
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createApplicationContext ()
specifier|protected
name|AbstractXmlApplicationContext
name|createApplicationContext
parameter_list|()
block|{
return|return
operator|new
name|ClassPathXmlApplicationContext
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"org/apache/camel/component/spring/ws/addresing/ProducerParamsBasicTest-context.xml"
block|}
argument_list|)
return|;
block|}
block|}
end_class

end_unit

