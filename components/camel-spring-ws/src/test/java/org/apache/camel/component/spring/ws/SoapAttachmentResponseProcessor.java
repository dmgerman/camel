begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.spring.ws
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|spring
operator|.
name|ws
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|activation
operator|.
name|DataHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|attachment
operator|.
name|AttachmentMessage
import|;
end_import

begin_comment
comment|/**  * Returns the request as the response so it can be analysed (eg. for presence  * of SOAP Headers).   * Also adds 2 attachments to the out message, which could be returned in a soap message by a ws request.  */
end_comment

begin_class
DECL|class|SoapAttachmentResponseProcessor
specifier|public
class|class
name|SoapAttachmentResponseProcessor
implements|implements
name|Processor
block|{
annotation|@
name|Override
DECL|method|process (Exchange exchange)
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|setOut
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|(
name|AttachmentMessage
operator|.
name|class
argument_list|)
operator|.
name|addAttachment
argument_list|(
literal|"responseAttachment1.txt"
argument_list|,
operator|new
name|DataHandler
argument_list|(
literal|"responseAttachment1"
argument_list|,
literal|"text/plain"
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|(
name|AttachmentMessage
operator|.
name|class
argument_list|)
operator|.
name|addAttachment
argument_list|(
literal|"responseAttachment2.xml"
argument_list|,
operator|new
name|DataHandler
argument_list|(
literal|"<responseAttachment2/>"
argument_list|,
literal|"application/xml"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

