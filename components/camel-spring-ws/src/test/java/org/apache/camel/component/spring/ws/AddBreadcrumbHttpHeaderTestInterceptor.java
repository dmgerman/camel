begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.spring.ws
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|spring
operator|.
name|ws
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|PostMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ws
operator|.
name|client
operator|.
name|WebServiceClientException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ws
operator|.
name|client
operator|.
name|support
operator|.
name|interceptor
operator|.
name|ClientInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ws
operator|.
name|context
operator|.
name|MessageContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ws
operator|.
name|transport
operator|.
name|context
operator|.
name|TransportContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ws
operator|.
name|transport
operator|.
name|context
operator|.
name|TransportContextHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ws
operator|.
name|transport
operator|.
name|http
operator|.
name|CommonsHttpConnection
import|;
end_import

begin_class
DECL|class|AddBreadcrumbHttpHeaderTestInterceptor
specifier|public
class|class
name|AddBreadcrumbHttpHeaderTestInterceptor
implements|implements
name|ClientInterceptor
block|{
annotation|@
name|Override
DECL|method|handleRequest (MessageContext messageContext)
specifier|public
name|boolean
name|handleRequest
parameter_list|(
name|MessageContext
name|messageContext
parameter_list|)
throws|throws
name|WebServiceClientException
block|{
comment|// no extra op
name|TransportContext
name|context
init|=
name|TransportContextHolder
operator|.
name|getTransportContext
argument_list|()
decl_stmt|;
name|CommonsHttpConnection
name|connection
init|=
operator|(
name|CommonsHttpConnection
operator|)
name|context
operator|.
name|getConnection
argument_list|()
decl_stmt|;
name|PostMethod
name|postMethod
init|=
name|connection
operator|.
name|getPostMethod
argument_list|()
decl_stmt|;
name|postMethod
operator|.
name|addRequestHeader
argument_list|(
literal|"breadcrumbId"
argument_list|,
literal|"ID-Ralfs-MacBook-Pro-local-50523-1423553069254-0-5"
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|Override
DECL|method|handleResponse (MessageContext messageContext)
specifier|public
name|boolean
name|handleResponse
parameter_list|(
name|MessageContext
name|messageContext
parameter_list|)
throws|throws
name|WebServiceClientException
block|{
comment|// no extra op
return|return
literal|true
return|;
block|}
annotation|@
name|Override
DECL|method|handleFault (MessageContext messageContext)
specifier|public
name|boolean
name|handleFault
parameter_list|(
name|MessageContext
name|messageContext
parameter_list|)
throws|throws
name|WebServiceClientException
block|{
comment|// no extra op
return|return
literal|true
return|;
block|}
annotation|@
name|Override
DECL|method|afterCompletion (MessageContext messageContext, Exception ex)
specifier|public
name|void
name|afterCompletion
parameter_list|(
name|MessageContext
name|messageContext
parameter_list|,
name|Exception
name|ex
parameter_list|)
throws|throws
name|WebServiceClientException
block|{
comment|// noop
block|}
block|}
end_class

end_unit

