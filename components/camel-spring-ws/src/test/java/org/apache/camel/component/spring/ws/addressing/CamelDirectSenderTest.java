begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.spring.ws.addressing
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|spring
operator|.
name|ws
operator|.
name|addressing
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|EndpointInject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|spring
operator|.
name|ws
operator|.
name|utils
operator|.
name|OutputChannelReceiver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|spring
operator|.
name|ws
operator|.
name|utils
operator|.
name|TestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fest
operator|.
name|assertions
operator|.
name|Assertions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|AbstractXmlApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|ClassPathXmlApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ws
operator|.
name|soap
operator|.
name|SoapMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ws
operator|.
name|soap
operator|.
name|addressing
operator|.
name|client
operator|.
name|ActionCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ws
operator|.
name|soap
operator|.
name|addressing
operator|.
name|core
operator|.
name|MessageAddressingProperties
import|;
end_import

begin_comment
comment|/**  * Provides abstract test for fault and output params for spring-ws:to: and  * spring-ws:action: endpoints  */
end_comment

begin_class
DECL|class|CamelDirectSenderTest
specifier|public
class|class
name|CamelDirectSenderTest
extends|extends
name|AbstractWSATests
block|{
DECL|field|customChannel
specifier|private
name|OutputChannelReceiver
name|customChannel
decl_stmt|;
annotation|@
name|EndpointInject
argument_list|(
name|uri
operator|=
literal|"mock:camelDirect"
argument_list|)
DECL|field|endpointCamelDirect
specifier|private
name|MockEndpoint
name|endpointCamelDirect
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
comment|// initialize beans for catching results
name|customChannel
operator|=
name|getMandatoryBean
argument_list|(
name|OutputChannelReceiver
operator|.
name|class
argument_list|,
literal|"customReceiver"
argument_list|)
expr_stmt|;
name|customChannel
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
comment|/**      * Only response is allow using a brand custom channel      *       * @return      */
DECL|method|customChannelParams ()
specifier|private
name|MessageAddressingProperties
name|customChannelParams
parameter_list|()
block|{
name|assertNotNull
argument_list|(
name|customChannel
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|customChannel
operator|.
name|getMessageContext
argument_list|()
argument_list|)
expr_stmt|;
name|SoapMessage
name|request
init|=
operator|(
name|SoapMessage
operator|)
name|customChannel
operator|.
name|getMessageContext
argument_list|()
operator|.
name|getRequest
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|MessageAddressingProperties
name|wsaProperties
init|=
name|TestUtil
operator|.
name|getWSAProperties
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|wsaProperties
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|wsaProperties
operator|.
name|getTo
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|wsaProperties
return|;
block|}
annotation|@
name|Override
DECL|method|channelIn (String actionUri)
specifier|public
name|ActionCallback
name|channelIn
parameter_list|(
name|String
name|actionUri
parameter_list|)
throws|throws
name|URISyntaxException
block|{
comment|// new channel
return|return
name|toAndReplyTo
argument_list|(
name|actionUri
argument_list|,
literal|"mailto:andrej@chocolatejar.eu"
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|channelOut ()
specifier|public
name|MessageAddressingProperties
name|channelOut
parameter_list|()
block|{
return|return
name|newChannelParams
argument_list|()
return|;
block|}
annotation|@
name|Test
DECL|method|endpointSender ()
specifier|public
name|void
name|endpointSender
parameter_list|()
throws|throws
name|Exception
block|{
name|ActionCallback
name|requestCallback
init|=
name|channelIn
argument_list|(
literal|"http://sender-default.com"
argument_list|)
decl_stmt|;
name|webServiceTemplate
operator|.
name|sendSourceAndReceiveToResult
argument_list|(
name|source
argument_list|,
name|requestCallback
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|channelOut
argument_list|()
operator|.
name|getTo
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
operator|new
name|URI
argument_list|(
literal|"mailto:andrej@chocolatejar.eu"
argument_list|)
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|endpointCamelDirect
operator|.
name|getReceivedCounter
argument_list|()
argument_list|)
operator|.
name|isZero
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|customSender ()
specifier|public
name|void
name|customSender
parameter_list|()
throws|throws
name|Exception
block|{
name|ActionCallback
name|requestCallback
init|=
name|channelIn
argument_list|(
literal|"http://sender-custom.com"
argument_list|)
decl_stmt|;
name|webServiceTemplate
operator|.
name|sendSourceAndReceiveToResult
argument_list|(
name|source
argument_list|,
name|requestCallback
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|customChannelParams
argument_list|()
operator|.
name|getTo
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
operator|new
name|URI
argument_list|(
literal|"mailto:andrej@chocolatejar.eu"
argument_list|)
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|endpointCamelDirect
operator|.
name|getReceivedCounter
argument_list|()
argument_list|)
operator|.
name|isZero
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|camelInvalid ()
specifier|public
name|void
name|camelInvalid
parameter_list|()
throws|throws
name|Exception
block|{
name|ActionCallback
name|requestCallback
init|=
name|toAndReplyTo
argument_list|(
literal|"http://sender-camel.com"
argument_list|,
literal|"mailto:not-mappped-address@chocolatejar.eu"
argument_list|)
decl_stmt|;
name|webServiceTemplate
operator|.
name|sendSourceAndReceiveToResult
argument_list|(
name|source
argument_list|,
name|requestCallback
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|endpointCamelDirect
operator|.
name|getReceivedCounter
argument_list|()
argument_list|)
operator|.
name|isZero
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|camelReceivedReplyTo ()
specifier|public
name|void
name|camelReceivedReplyTo
parameter_list|()
throws|throws
name|Exception
block|{
name|ActionCallback
name|requestCallback
init|=
name|channelIn
argument_list|(
literal|"http://sender-camel.com"
argument_list|)
decl_stmt|;
name|webServiceTemplate
operator|.
name|sendSourceAndReceiveToResult
argument_list|(
name|source
argument_list|,
name|requestCallback
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|endpointCamelDirect
operator|.
name|assertExchangeReceived
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|endpointCamelDirect
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|customMessageIdGenerator ()
specifier|public
name|void
name|customMessageIdGenerator
parameter_list|()
throws|throws
name|Exception
block|{
name|ActionCallback
name|requestCallback
init|=
name|channelIn
argument_list|(
literal|"http://messageIdStrategy-custom.com"
argument_list|)
decl_stmt|;
name|webServiceTemplate
operator|.
name|sendSourceAndReceiveToResult
argument_list|(
name|source
argument_list|,
name|requestCallback
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|channelOut
argument_list|()
operator|.
name|getMessageId
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
operator|new
name|URI
argument_list|(
literal|"staticTestId"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|defaultMessageIdGenerator ()
specifier|public
name|void
name|defaultMessageIdGenerator
parameter_list|()
throws|throws
name|Exception
block|{
name|ActionCallback
name|requestCallback
init|=
name|channelIn
argument_list|(
literal|"http://messageIdStrategy-default.com"
argument_list|)
decl_stmt|;
name|webServiceTemplate
operator|.
name|sendSourceAndReceiveToResult
argument_list|(
name|source
argument_list|,
name|requestCallback
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertThat
argument_list|(
name|channelOut
argument_list|()
operator|.
name|getMessageId
argument_list|()
argument_list|)
operator|.
name|isNotEqualTo
argument_list|(
operator|new
name|URI
argument_list|(
literal|"staticTestId"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createApplicationContext ()
specifier|protected
name|AbstractXmlApplicationContext
name|createApplicationContext
parameter_list|()
block|{
return|return
operator|new
name|ClassPathXmlApplicationContext
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"org/apache/camel/component/spring/ws/addresing/CamelDirectSenderTest-context.xml"
block|}
argument_list|)
return|;
block|}
block|}
end_class

end_unit

