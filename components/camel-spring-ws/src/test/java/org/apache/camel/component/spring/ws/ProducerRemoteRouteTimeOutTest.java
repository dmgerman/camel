begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.spring.ws
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|spring
operator|.
name|ws
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|SocketTimeoutException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelExecutionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Produce
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ProducerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|junit4
operator|.
name|AbstractJUnit4SpringContextTests
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_class
annotation|@
name|Ignore
argument_list|(
literal|"Run manually, makes connection to external webservice"
argument_list|)
annotation|@
name|ContextConfiguration
DECL|class|ProducerRemoteRouteTimeOutTest
specifier|public
class|class
name|ProducerRemoteRouteTimeOutTest
extends|extends
name|AbstractJUnit4SpringContextTests
block|{
DECL|field|xmlRequestForGoogleStockQuote
specifier|private
specifier|final
name|String
name|xmlRequestForGoogleStockQuote
init|=
literal|"<GetQuote xmlns=\"http://www.webserviceX.NET/\"><symbol>GOOG</symbol></GetQuote>"
decl_stmt|;
annotation|@
name|Produce
DECL|field|template
specifier|private
name|ProducerTemplate
name|template
decl_stmt|;
annotation|@
name|Test
DECL|method|callStockQuoteWebserviceCosmmonsHttpWith3MillSecondsTimeout ()
specifier|public
name|void
name|callStockQuoteWebserviceCosmmonsHttpWith3MillSecondsTimeout
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:stockQuoteWebserviceCommonsHttpWith3MillSecondsTimeout"
argument_list|,
name|xmlRequestForGoogleStockQuote
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Miss the expected exception in chain"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CamelExecutionException
name|cee
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|hasThrowableInChain
argument_list|(
name|cee
argument_list|,
name|SocketTimeoutException
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|callStockQuoteWebserviceCommonsHttpWith5000MillSecondsTimeout ()
specifier|public
name|void
name|callStockQuoteWebserviceCommonsHttpWith5000MillSecondsTimeout
parameter_list|()
throws|throws
name|Exception
block|{
name|Object
name|result
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:stockQuoteWebserviceCommonsHttpWith5000MillSecondsTimeout"
argument_list|,
name|xmlRequestForGoogleStockQuote
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|String
argument_list|)
expr_stmt|;
name|String
name|resultMessage
init|=
operator|(
name|String
operator|)
name|result
decl_stmt|;
name|assertTrue
argument_list|(
name|resultMessage
operator|.
name|contains
argument_list|(
literal|"Google Inc."
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|callStockQuoteWebserviceJDKWith3MillSecondsTimeout ()
specifier|public
name|void
name|callStockQuoteWebserviceJDKWith3MillSecondsTimeout
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:stockQuoteWebserviceJDKWith3MillSecondsTimeout"
argument_list|,
name|xmlRequestForGoogleStockQuote
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Miss the expected exception in chain"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CamelExecutionException
name|cee
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|hasThrowableInChain
argument_list|(
name|cee
argument_list|,
name|SocketTimeoutException
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|callStockQuoteWebserviceJDKWith5000MillSecondsTimeout ()
specifier|public
name|void
name|callStockQuoteWebserviceJDKWith5000MillSecondsTimeout
parameter_list|()
throws|throws
name|Exception
block|{
name|Object
name|result
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:stockQuoteWebserviceJDKWith5000MillSecondsTimeout"
argument_list|,
name|xmlRequestForGoogleStockQuote
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|String
argument_list|)
expr_stmt|;
name|String
name|resultMessage
init|=
operator|(
name|String
operator|)
name|result
decl_stmt|;
name|assertTrue
argument_list|(
name|resultMessage
operator|.
name|contains
argument_list|(
literal|"Google Inc."
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|hasThrowableInChain (Throwable throwable, Class<? extends Throwable> clazz)
specifier|private
specifier|static
name|boolean
name|hasThrowableInChain
parameter_list|(
name|Throwable
name|throwable
parameter_list|,
name|Class
argument_list|<
name|?
extends|extends
name|Throwable
argument_list|>
name|clazz
parameter_list|)
block|{
if|if
condition|(
name|throwable
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
elseif|else
if|if
condition|(
name|clazz
operator|.
name|isAssignableFrom
argument_list|(
name|throwable
operator|.
name|getClass
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
name|hasThrowableInChain
argument_list|(
name|throwable
operator|.
name|getCause
argument_list|()
argument_list|,
name|clazz
argument_list|)
return|;
block|}
block|}
end_class

end_unit

