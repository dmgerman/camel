begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.processor.aggregate.hazelcast
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|aggregate
operator|.
name|hazelcast
package|;
end_package

begin_import
import|import
name|com
operator|.
name|hazelcast
operator|.
name|config
operator|.
name|Config
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hazelcast
operator|.
name|core
operator|.
name|Hazelcast
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hazelcast
operator|.
name|core
operator|.
name|HazelcastInstance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_class
DECL|class|HazelcastAggregationRepositoryCamelTestSupport
specifier|public
class|class
name|HazelcastAggregationRepositoryCamelTestSupport
extends|extends
name|CamelTestSupport
block|{
DECL|field|hzOne
specifier|private
specifier|static
name|HazelcastInstance
name|hzOne
decl_stmt|;
DECL|field|hzTwo
specifier|private
specifier|static
name|HazelcastInstance
name|hzTwo
decl_stmt|;
DECL|method|getFirstInstance ()
specifier|protected
specifier|static
name|HazelcastInstance
name|getFirstInstance
parameter_list|()
block|{
return|return
name|hzOne
return|;
block|}
DECL|method|getSecondInstance ()
specifier|protected
specifier|static
name|HazelcastInstance
name|getSecondInstance
parameter_list|()
block|{
return|return
name|hzTwo
return|;
block|}
annotation|@
name|BeforeClass
DECL|method|setUpHazelcastCluster ()
specifier|public
specifier|static
name|void
name|setUpHazelcastCluster
parameter_list|()
block|{
name|hzOne
operator|=
name|Hazelcast
operator|.
name|newHazelcastInstance
argument_list|(
name|createConfig
argument_list|(
literal|"hzOne"
argument_list|)
argument_list|)
expr_stmt|;
name|hzTwo
operator|=
name|Hazelcast
operator|.
name|newHazelcastInstance
argument_list|(
name|createConfig
argument_list|(
literal|"hzTwo"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|shutDownHazelcastCluster ()
specifier|public
specifier|static
name|void
name|shutDownHazelcastCluster
parameter_list|()
block|{
name|Hazelcast
operator|.
name|shutdownAll
argument_list|()
expr_stmt|;
block|}
DECL|method|createConfig (String name)
specifier|private
specifier|static
name|Config
name|createConfig
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|Config
name|config
init|=
operator|new
name|Config
argument_list|()
decl_stmt|;
name|config
operator|.
name|setInstanceName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|config
operator|.
name|getNetworkConfig
argument_list|()
operator|.
name|getJoin
argument_list|()
operator|.
name|getMulticastConfig
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|config
operator|.
name|getNetworkConfig
argument_list|()
operator|.
name|getJoin
argument_list|()
operator|.
name|getTcpIpConfig
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
operator|.
name|addMember
argument_list|(
literal|"127.0.0.1"
argument_list|)
expr_stmt|;
return|return
name|config
return|;
block|}
block|}
end_class

end_unit

