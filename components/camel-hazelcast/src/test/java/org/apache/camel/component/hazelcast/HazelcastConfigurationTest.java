begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.hazelcast
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hazelcast
package|;
end_package

begin_import
import|import
name|com
operator|.
name|hazelcast
operator|.
name|config
operator|.
name|Config
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hazelcast
operator|.
name|core
operator|.
name|Hazelcast
import|;
end_import

begin_import
import|import
name|com
operator|.
name|hazelcast
operator|.
name|core
operator|.
name|HazelcastInstance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|SimpleRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|HazelcastConfigurationTest
specifier|public
class|class
name|HazelcastConfigurationTest
block|{
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|Hazelcast
operator|.
name|shutdownAll
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCustomConfigurationUri ()
specifier|public
name|void
name|testCustomConfigurationUri
parameter_list|()
throws|throws
name|Exception
block|{
name|DefaultCamelContext
name|context
init|=
literal|null
decl_stmt|;
try|try
block|{
name|context
operator|=
operator|new
name|DefaultCamelContext
argument_list|()
expr_stmt|;
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"hazelcast:map:my-cache?hazelcastConfigUri=classpath:hazelcast-custom.xml"
argument_list|)
expr_stmt|;
name|HazelcastComponent
name|component
init|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"hazelcast"
argument_list|,
name|HazelcastComponent
operator|.
name|class
argument_list|)
decl_stmt|;
name|HazelcastInstance
name|hz
init|=
name|component
operator|.
name|getHazelcastInstance
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|hz
operator|.
name|getConfig
argument_list|()
operator|.
name|getNetworkConfig
argument_list|()
operator|.
name|getJoin
argument_list|()
operator|.
name|getAwsConfig
argument_list|()
operator|.
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|hz
operator|.
name|getConfig
argument_list|()
operator|.
name|getNetworkConfig
argument_list|()
operator|.
name|getJoin
argument_list|()
operator|.
name|getMulticastConfig
argument_list|()
operator|.
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|hz
operator|.
name|getConfig
argument_list|()
operator|.
name|getNetworkConfig
argument_list|()
operator|.
name|getJoin
argument_list|()
operator|.
name|getTcpIpConfig
argument_list|()
operator|.
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|9876
argument_list|,
name|hz
operator|.
name|getConfig
argument_list|()
operator|.
name|getNetworkConfig
argument_list|()
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|context
operator|!=
literal|null
condition|)
block|{
name|context
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
DECL|method|testCustomConfiguration ()
specifier|public
name|void
name|testCustomConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|DefaultCamelContext
name|context
init|=
literal|null
decl_stmt|;
try|try
block|{
name|Config
name|config
init|=
operator|new
name|Config
argument_list|()
decl_stmt|;
name|config
operator|.
name|getNetworkConfig
argument_list|()
operator|.
name|setPort
argument_list|(
literal|6789
argument_list|)
expr_stmt|;
name|config
operator|.
name|getNetworkConfig
argument_list|()
operator|.
name|getJoin
argument_list|()
operator|.
name|getAwsConfig
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|config
operator|.
name|getNetworkConfig
argument_list|()
operator|.
name|getJoin
argument_list|()
operator|.
name|getMulticastConfig
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|config
operator|.
name|getNetworkConfig
argument_list|()
operator|.
name|getJoin
argument_list|()
operator|.
name|getTcpIpConfig
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|SimpleRegistry
name|reg
init|=
operator|new
name|SimpleRegistry
argument_list|()
decl_stmt|;
name|reg
operator|.
name|put
argument_list|(
literal|"my-config"
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|context
operator|=
operator|new
name|DefaultCamelContext
argument_list|(
name|reg
argument_list|)
expr_stmt|;
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"hazelcast:map:my-cache?hazelcastConfig=#my-config"
argument_list|)
expr_stmt|;
name|HazelcastComponent
name|component
init|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"hazelcast"
argument_list|,
name|HazelcastComponent
operator|.
name|class
argument_list|)
decl_stmt|;
name|HazelcastInstance
name|hz
init|=
name|component
operator|.
name|getHazelcastInstance
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|hz
operator|.
name|getConfig
argument_list|()
operator|.
name|getNetworkConfig
argument_list|()
operator|.
name|getJoin
argument_list|()
operator|.
name|getAwsConfig
argument_list|()
operator|.
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|hz
operator|.
name|getConfig
argument_list|()
operator|.
name|getNetworkConfig
argument_list|()
operator|.
name|getJoin
argument_list|()
operator|.
name|getMulticastConfig
argument_list|()
operator|.
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|hz
operator|.
name|getConfig
argument_list|()
operator|.
name|getNetworkConfig
argument_list|()
operator|.
name|getJoin
argument_list|()
operator|.
name|getTcpIpConfig
argument_list|()
operator|.
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|6789
argument_list|,
name|hz
operator|.
name|getConfig
argument_list|()
operator|.
name|getNetworkConfig
argument_list|()
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|context
operator|!=
literal|null
condition|)
block|{
name|context
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

