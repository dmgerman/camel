begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.hazelcast
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hazelcast
package|;
end_package

begin_import
import|import
name|com
operator|.
name|hazelcast
operator|.
name|core
operator|.
name|HazelcastInstance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hazelcast
operator|.
name|atomicnumber
operator|.
name|HazelcastAtomicnumberComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hazelcast
operator|.
name|instance
operator|.
name|HazelcastInstanceComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hazelcast
operator|.
name|list
operator|.
name|HazelcastListComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hazelcast
operator|.
name|map
operator|.
name|HazelcastMapComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hazelcast
operator|.
name|multimap
operator|.
name|HazelcastMultimapComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hazelcast
operator|.
name|queue
operator|.
name|HazelcastQueueComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hazelcast
operator|.
name|replicatedmap
operator|.
name|HazelcastReplicatedmapComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hazelcast
operator|.
name|ringbuffer
operator|.
name|HazelcastRingbufferComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hazelcast
operator|.
name|seda
operator|.
name|HazelcastSedaComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hazelcast
operator|.
name|set
operator|.
name|HazelcastSetComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hazelcast
operator|.
name|topic
operator|.
name|HazelcastTopicComponent
import|;
end_import

begin_class
DECL|class|HazelcastCamelTestHelper
specifier|public
specifier|final
class|class
name|HazelcastCamelTestHelper
block|{
DECL|method|HazelcastCamelTestHelper ()
specifier|private
name|HazelcastCamelTestHelper
parameter_list|()
block|{     }
DECL|method|registerHazelcastComponents (CamelContext context, HazelcastInstance hazelcastInstance)
specifier|public
specifier|static
name|void
name|registerHazelcastComponents
parameter_list|(
name|CamelContext
name|context
parameter_list|,
name|HazelcastInstance
name|hazelcastInstance
parameter_list|)
block|{
name|HazelcastAtomicnumberComponent
name|atomic
init|=
operator|new
name|HazelcastAtomicnumberComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|atomic
operator|.
name|setHazelcastInstance
argument_list|(
name|hazelcastInstance
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
literal|"hazelcast-atomicvalue"
argument_list|,
name|atomic
argument_list|)
expr_stmt|;
name|HazelcastInstanceComponent
name|instance
init|=
operator|new
name|HazelcastInstanceComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|instance
operator|.
name|setHazelcastInstance
argument_list|(
name|hazelcastInstance
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
literal|"hazelcast-instance"
argument_list|,
name|instance
argument_list|)
expr_stmt|;
name|HazelcastListComponent
name|list
init|=
operator|new
name|HazelcastListComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|list
operator|.
name|setHazelcastInstance
argument_list|(
name|hazelcastInstance
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
literal|"hazelcast-list"
argument_list|,
name|list
argument_list|)
expr_stmt|;
name|HazelcastMapComponent
name|map
init|=
operator|new
name|HazelcastMapComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|map
operator|.
name|setHazelcastInstance
argument_list|(
name|hazelcastInstance
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
literal|"hazelcast-map"
argument_list|,
name|map
argument_list|)
expr_stmt|;
name|HazelcastMultimapComponent
name|multimap
init|=
operator|new
name|HazelcastMultimapComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|multimap
operator|.
name|setHazelcastInstance
argument_list|(
name|hazelcastInstance
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
literal|"hazelcast-multimap"
argument_list|,
name|multimap
argument_list|)
expr_stmt|;
name|HazelcastQueueComponent
name|queue
init|=
operator|new
name|HazelcastQueueComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|queue
operator|.
name|setHazelcastInstance
argument_list|(
name|hazelcastInstance
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
literal|"hazelcast-queue"
argument_list|,
name|queue
argument_list|)
expr_stmt|;
name|HazelcastReplicatedmapComponent
name|replicatedmap
init|=
operator|new
name|HazelcastReplicatedmapComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|replicatedmap
operator|.
name|setHazelcastInstance
argument_list|(
name|hazelcastInstance
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
literal|"hazelcast-replicatedmap"
argument_list|,
name|replicatedmap
argument_list|)
expr_stmt|;
name|HazelcastRingbufferComponent
name|ringbuffer
init|=
operator|new
name|HazelcastRingbufferComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|ringbuffer
operator|.
name|setHazelcastInstance
argument_list|(
name|hazelcastInstance
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
literal|"hazelcast-ringbuffer"
argument_list|,
name|ringbuffer
argument_list|)
expr_stmt|;
name|HazelcastSedaComponent
name|seda
init|=
operator|new
name|HazelcastSedaComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|seda
operator|.
name|setHazelcastInstance
argument_list|(
name|hazelcastInstance
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
literal|"hazelcast-seda"
argument_list|,
name|seda
argument_list|)
expr_stmt|;
name|HazelcastSetComponent
name|set
init|=
operator|new
name|HazelcastSetComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|set
operator|.
name|setHazelcastInstance
argument_list|(
name|hazelcastInstance
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
literal|"hazelcast-set"
argument_list|,
name|set
argument_list|)
expr_stmt|;
name|HazelcastTopicComponent
name|topic
init|=
operator|new
name|HazelcastTopicComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|topic
operator|.
name|setHazelcastInstance
argument_list|(
name|hazelcastInstance
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
literal|"hazelcast-topic"
argument_list|,
name|topic
argument_list|)
expr_stmt|;
name|HazelcastComponent
name|old
init|=
operator|new
name|HazelcastComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|old
operator|.
name|setHazelcastInstance
argument_list|(
name|hazelcastInstance
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
literal|"hazelcast"
argument_list|,
name|old
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

