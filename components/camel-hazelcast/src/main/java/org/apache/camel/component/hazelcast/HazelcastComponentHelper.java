begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.hazelcast
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hazelcast
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_class
DECL|class|HazelcastComponentHelper
specifier|public
specifier|final
class|class
name|HazelcastComponentHelper
block|{
DECL|method|HazelcastComponentHelper ()
specifier|private
name|HazelcastComponentHelper
parameter_list|()
block|{     }
DECL|method|copyHeaders (Exchange ex)
specifier|public
specifier|static
name|void
name|copyHeaders
parameter_list|(
name|Exchange
name|ex
parameter_list|)
block|{
comment|// get in headers
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
name|ex
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
decl_stmt|;
comment|// DELETE item id
if|if
condition|(
name|headers
operator|.
name|containsKey
argument_list|(
name|HazelcastConstants
operator|.
name|OBJECT_ID
argument_list|)
condition|)
block|{
name|headers
operator|.
name|remove
argument_list|(
name|HazelcastConstants
operator|.
name|OBJECT_ID
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|headers
operator|.
name|containsKey
argument_list|(
name|HazelcastConstants
operator|.
name|OPERATION
argument_list|)
condition|)
block|{
name|headers
operator|.
name|remove
argument_list|(
name|HazelcastConstants
operator|.
name|OPERATION
argument_list|)
expr_stmt|;
block|}
comment|// propagate headers if OUT message created
if|if
condition|(
name|ex
operator|.
name|hasOut
argument_list|()
condition|)
block|{
name|ex
operator|.
name|getOut
argument_list|()
operator|.
name|setHeaders
argument_list|(
name|headers
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|setListenerHeaders (Exchange ex, String listenerType, String listenerAction, String cacheName)
specifier|public
specifier|static
name|void
name|setListenerHeaders
parameter_list|(
name|Exchange
name|ex
parameter_list|,
name|String
name|listenerType
parameter_list|,
name|String
name|listenerAction
parameter_list|,
name|String
name|cacheName
parameter_list|)
block|{
name|ex
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|HazelcastConstants
operator|.
name|CACHE_NAME
argument_list|,
name|cacheName
argument_list|)
expr_stmt|;
name|HazelcastComponentHelper
operator|.
name|setListenerHeaders
argument_list|(
name|ex
argument_list|,
name|listenerType
argument_list|,
name|listenerAction
argument_list|)
expr_stmt|;
block|}
DECL|method|setListenerHeaders (Exchange ex, String listenerType, String listenerAction)
specifier|public
specifier|static
name|void
name|setListenerHeaders
parameter_list|(
name|Exchange
name|ex
parameter_list|,
name|String
name|listenerType
parameter_list|,
name|String
name|listenerAction
parameter_list|)
block|{
name|ex
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|HazelcastConstants
operator|.
name|LISTENER_ACTION
argument_list|,
name|listenerAction
argument_list|)
expr_stmt|;
name|ex
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|HazelcastConstants
operator|.
name|LISTENER_TYPE
argument_list|,
name|listenerType
argument_list|)
expr_stmt|;
name|ex
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|HazelcastConstants
operator|.
name|LISTENER_TIME
argument_list|,
operator|new
name|Date
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|lookupOperation (Exchange exchange, HazelcastOperation defaultOperation)
specifier|public
specifier|static
name|HazelcastOperation
name|lookupOperation
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|HazelcastOperation
name|defaultOperation
parameter_list|)
block|{
name|String
name|operationName
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|HazelcastConstants
operator|.
name|OPERATION
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|ObjectHelper
operator|.
name|isEmpty
argument_list|(
name|operationName
argument_list|)
condition|?
name|defaultOperation
else|:
name|HazelcastOperation
operator|.
name|getHazelcastOperation
argument_list|(
name|operationName
argument_list|)
return|;
block|}
block|}
end_class

end_unit

