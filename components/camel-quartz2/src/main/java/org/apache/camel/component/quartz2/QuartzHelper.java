begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.quartz2
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|quartz2
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|quartz
operator|.
name|JobDataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|quartz
operator|.
name|JobDetail
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|QuartzHelper
specifier|public
specifier|final
class|class
name|QuartzHelper
block|{
DECL|field|LOG
specifier|public
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|QuartzHelper
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|method|QuartzHelper ()
specifier|private
name|QuartzHelper
parameter_list|()
block|{
comment|// prevent instantiation
block|}
DECL|method|getQuartzContextName (CamelContext camelContext)
specifier|public
specifier|static
name|String
name|getQuartzContextName
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|)
block|{
comment|// favour using the actual management name which was registered in JMX (if JMX is enabled)
if|if
condition|(
name|camelContext
operator|.
name|getManagementName
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|camelContext
operator|.
name|getManagementName
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|camelContext
operator|.
name|getManagementNameStrategy
argument_list|()
operator|.
name|getName
argument_list|()
return|;
block|}
block|}
comment|/**      * Adds the current CamelContext name and endpoint URI to the Job's jobData      * map.      *       * @param camelContext The currently active camelContext      * @param jobDetail The job for which the jobData map shall be updated      * @param endpointUri URI of the endpoint name, if any. May be {@code null}      */
DECL|method|updateJobDataMap (CamelContext camelContext, JobDetail jobDetail, String endpointUri)
specifier|public
specifier|static
name|void
name|updateJobDataMap
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|,
name|JobDetail
name|jobDetail
parameter_list|,
name|String
name|endpointUri
parameter_list|)
block|{
comment|// Store this camelContext name into the job data
name|JobDataMap
name|jobDataMap
init|=
name|jobDetail
operator|.
name|getJobDataMap
argument_list|()
decl_stmt|;
name|String
name|camelContextName
init|=
name|QuartzHelper
operator|.
name|getQuartzContextName
argument_list|(
name|camelContext
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Adding camelContextName={}, endpointUri={} into job data map."
argument_list|,
name|camelContextName
argument_list|,
name|endpointUri
argument_list|)
expr_stmt|;
name|jobDataMap
operator|.
name|put
argument_list|(
name|QuartzConstants
operator|.
name|QUARTZ_CAMEL_CONTEXT_NAME
argument_list|,
name|camelContextName
argument_list|)
expr_stmt|;
name|jobDataMap
operator|.
name|put
argument_list|(
name|QuartzConstants
operator|.
name|QUARTZ_ENDPOINT_URI
argument_list|,
name|endpointUri
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

