begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.quartz2
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|quartz2
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|quartz
operator|.
name|SchedulerException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_comment
comment|/**  * @version   */
end_comment

begin_class
DECL|class|QuartzPropertiesTest
specifier|public
class|class
name|QuartzPropertiesTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|quartz
specifier|private
name|QuartzComponent
name|quartz
decl_stmt|;
annotation|@
name|Override
DECL|method|isUseRouteBuilder ()
specifier|public
name|boolean
name|isUseRouteBuilder
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|quartz
operator|.
name|stop
argument_list|()
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testQuartzPropertiesFile ()
specifier|public
name|void
name|testQuartzPropertiesFile
parameter_list|()
throws|throws
name|Exception
block|{
name|quartz
operator|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"quartz2"
argument_list|,
name|QuartzComponent
operator|.
name|class
argument_list|)
expr_stmt|;
name|quartz
operator|.
name|setPropertiesFile
argument_list|(
literal|"org/apache/camel/component/quartz2/myquartz.properties"
argument_list|)
expr_stmt|;
name|quartz
operator|.
name|start
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"MyScheduler"
argument_list|,
name|quartz
operator|.
name|getScheduler
argument_list|()
operator|.
name|getSchedulerName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|quartz
operator|.
name|getScheduler
argument_list|()
operator|.
name|getSchedulerInstanceId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testQuartzPropertiesFileNotFound ()
specifier|public
name|void
name|testQuartzPropertiesFileNotFound
parameter_list|()
throws|throws
name|Exception
block|{
name|quartz
operator|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"quartz2"
argument_list|,
name|QuartzComponent
operator|.
name|class
argument_list|)
expr_stmt|;
name|quartz
operator|.
name|setPropertiesFile
argument_list|(
literal|"doesnotexist.properties"
argument_list|)
expr_stmt|;
try|try
block|{
name|quartz
operator|.
name|start
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SchedulerException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"Quartz properties file not found in classpath: doesnotexist.properties"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testQuartzProperties ()
specifier|public
name|void
name|testQuartzProperties
parameter_list|()
throws|throws
name|Exception
block|{
name|quartz
operator|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"quartz2"
argument_list|,
name|QuartzComponent
operator|.
name|class
argument_list|)
expr_stmt|;
name|Properties
name|prop
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|InputStream
name|is
init|=
name|context
operator|.
name|getClassResolver
argument_list|()
operator|.
name|loadResourceAsStream
argument_list|(
literal|"org/apache/camel/component/quartz2/myquartz.properties"
argument_list|)
decl_stmt|;
name|prop
operator|.
name|load
argument_list|(
name|is
argument_list|)
expr_stmt|;
name|quartz
operator|.
name|setProperties
argument_list|(
name|prop
argument_list|)
expr_stmt|;
name|quartz
operator|.
name|start
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"MyScheduler"
argument_list|,
name|quartz
operator|.
name|getScheduler
argument_list|()
operator|.
name|getSchedulerName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|quartz
operator|.
name|getScheduler
argument_list|()
operator|.
name|getSchedulerInstanceId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

