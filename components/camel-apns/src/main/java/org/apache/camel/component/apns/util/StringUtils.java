begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.apns.util
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|apns
operator|.
name|util
package|;
end_package

begin_class
DECL|class|StringUtils
specifier|public
specifier|final
class|class
name|StringUtils
block|{
DECL|method|StringUtils ()
specifier|private
name|StringUtils
parameter_list|()
block|{     }
DECL|method|isNotEmpty (String stringValue)
specifier|public
specifier|static
name|boolean
name|isNotEmpty
parameter_list|(
name|String
name|stringValue
parameter_list|)
block|{
if|if
condition|(
name|stringValue
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
name|stringValue
operator|.
name|length
argument_list|()
operator|>
literal|0
return|;
block|}
DECL|method|isEmpty (String stringValue)
specifier|public
specifier|static
name|boolean
name|isEmpty
parameter_list|(
name|String
name|stringValue
parameter_list|)
block|{
return|return
operator|!
name|isNotEmpty
argument_list|(
name|stringValue
argument_list|)
return|;
block|}
DECL|method|trim (String stringValue)
specifier|public
specifier|static
name|String
name|trim
parameter_list|(
name|String
name|stringValue
parameter_list|)
block|{
if|if
condition|(
name|stringValue
operator|==
literal|null
condition|)
block|{
return|return
name|stringValue
return|;
block|}
return|return
name|stringValue
operator|.
name|trim
argument_list|()
return|;
block|}
block|}
end_class

end_unit

