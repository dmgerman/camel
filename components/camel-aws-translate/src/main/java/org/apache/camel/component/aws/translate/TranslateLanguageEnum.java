begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.aws.translate
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|aws
operator|.
name|translate
package|;
end_package

begin_enum
DECL|enum|TranslateLanguageEnum
specifier|public
enum|enum
name|TranslateLanguageEnum
block|{
DECL|enumConstant|ARABIC
name|ARABIC
argument_list|(
literal|"ar"
argument_list|)
block|,
DECL|enumConstant|CHINESE_SIMPLIFIED
name|CHINESE_SIMPLIFIED
argument_list|(
literal|"zh"
argument_list|)
block|,
DECL|enumConstant|CHINESE_TRADITIONAL
name|CHINESE_TRADITIONAL
argument_list|(
literal|"zh-TW"
argument_list|)
block|,
DECL|enumConstant|CZECH
name|CZECH
argument_list|(
literal|"cs"
argument_list|)
block|,
DECL|enumConstant|DANISH
name|DANISH
argument_list|(
literal|"da"
argument_list|)
block|,
DECL|enumConstant|DUTCH
name|DUTCH
argument_list|(
literal|"nl"
argument_list|)
block|,
DECL|enumConstant|ENGLISH
name|ENGLISH
argument_list|(
literal|"en"
argument_list|)
block|,
DECL|enumConstant|FINNISH
name|FINNISH
argument_list|(
literal|"fi"
argument_list|)
block|,
DECL|enumConstant|FRENCH
name|FRENCH
argument_list|(
literal|"fr"
argument_list|)
block|,
DECL|enumConstant|GERMAN
name|GERMAN
argument_list|(
literal|"de"
argument_list|)
block|,
DECL|enumConstant|HEBREW
name|HEBREW
argument_list|(
literal|"he"
argument_list|)
block|,
DECL|enumConstant|HINDI
name|HINDI
argument_list|(
literal|"hi"
argument_list|)
block|,
DECL|enumConstant|INDONESIAN
name|INDONESIAN
argument_list|(
literal|"id"
argument_list|)
block|,
DECL|enumConstant|ITALIAN
name|ITALIAN
argument_list|(
literal|"it"
argument_list|)
block|,
DECL|enumConstant|JAPANESE
name|JAPANESE
argument_list|(
literal|"ja"
argument_list|)
block|,
DECL|enumConstant|KOREAN
name|KOREAN
argument_list|(
literal|"ko"
argument_list|)
block|,
DECL|enumConstant|MALAY
name|MALAY
argument_list|(
literal|"ms"
argument_list|)
block|,
DECL|enumConstant|NORWEGIAN
name|NORWEGIAN
argument_list|(
literal|"no"
argument_list|)
block|,
DECL|enumConstant|PERSIAN
name|PERSIAN
argument_list|(
literal|"fa"
argument_list|)
block|,
DECL|enumConstant|POLISH
name|POLISH
argument_list|(
literal|"pl"
argument_list|)
block|,
DECL|enumConstant|PORTUGUESE
name|PORTUGUESE
argument_list|(
literal|"pt"
argument_list|)
block|,
DECL|enumConstant|RUSSIAN
name|RUSSIAN
argument_list|(
literal|"ru"
argument_list|)
block|,
DECL|enumConstant|SPANISH
name|SPANISH
argument_list|(
literal|"es"
argument_list|)
block|,
DECL|enumConstant|SWEDISH
name|SWEDISH
argument_list|(
literal|"sv"
argument_list|)
block|,
DECL|enumConstant|TURKISH
name|TURKISH
argument_list|(
literal|"tr"
argument_list|)
block|;
DECL|field|language
specifier|private
specifier|final
name|String
name|language
decl_stmt|;
DECL|method|TranslateLanguageEnum (final String language)
name|TranslateLanguageEnum
parameter_list|(
specifier|final
name|String
name|language
parameter_list|)
block|{
name|this
operator|.
name|language
operator|=
name|language
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|language
return|;
block|}
block|}
end_enum

end_unit

