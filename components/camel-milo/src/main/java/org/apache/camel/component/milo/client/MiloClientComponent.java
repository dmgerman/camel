begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.milo.client
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|milo
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|GeneralSecurityException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Consumer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Supplier
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|HashMultimap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Multimap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|milo
operator|.
name|KeyStoreLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|milo
operator|.
name|KeyStoreLoader
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|client
operator|.
name|api
operator|.
name|config
operator|.
name|OpcUaClientConfigBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|builtin
operator|.
name|LocalizedText
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|builtin
operator|.
name|unsigned
operator|.
name|UInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|builtin
operator|.
name|unsigned
operator|.
name|Unsigned
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|MiloClientComponent
specifier|public
class|class
name|MiloClientComponent
extends|extends
name|DefaultComponent
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MiloClientComponent
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|cache
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|MiloClientConnection
argument_list|>
name|cache
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|connectionMap
specifier|private
specifier|final
name|Multimap
argument_list|<
name|String
argument_list|,
name|MiloClientEndpoint
argument_list|>
name|connectionMap
init|=
name|HashMultimap
operator|.
name|create
argument_list|()
decl_stmt|;
DECL|field|defaultConfiguration
specifier|private
name|MiloClientConfiguration
name|defaultConfiguration
init|=
operator|new
name|MiloClientConfiguration
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|createEndpoint (final String uri, final String remaining, final Map<String, Object> parameters)
specifier|protected
name|Endpoint
name|createEndpoint
parameter_list|(
specifier|final
name|String
name|uri
parameter_list|,
specifier|final
name|String
name|remaining
parameter_list|,
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|parameters
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|MiloClientConfiguration
name|configuration
init|=
operator|new
name|MiloClientConfiguration
argument_list|(
name|this
operator|.
name|defaultConfiguration
argument_list|)
decl_stmt|;
name|configuration
operator|.
name|setEndpointUri
argument_list|(
name|remaining
argument_list|)
expr_stmt|;
name|setProperties
argument_list|(
name|configuration
argument_list|,
name|parameters
argument_list|)
expr_stmt|;
return|return
name|createEndpoint
argument_list|(
name|uri
argument_list|,
name|configuration
argument_list|,
name|parameters
argument_list|)
return|;
block|}
DECL|method|createEndpoint (final String uri, final MiloClientConfiguration configuration, final Map<String, Object> parameters)
specifier|private
specifier|synchronized
name|MiloClientEndpoint
name|createEndpoint
parameter_list|(
specifier|final
name|String
name|uri
parameter_list|,
specifier|final
name|MiloClientConfiguration
name|configuration
parameter_list|,
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|parameters
parameter_list|)
throws|throws
name|Exception
block|{
name|MiloClientConnection
name|connection
init|=
name|this
operator|.
name|cache
operator|.
name|get
argument_list|(
name|configuration
operator|.
name|toCacheId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|connection
operator|==
literal|null
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Cache miss - creating new connection instance: {}"
argument_list|,
name|configuration
operator|.
name|toCacheId
argument_list|()
argument_list|)
expr_stmt|;
name|connection
operator|=
operator|new
name|MiloClientConnection
argument_list|(
name|configuration
argument_list|,
name|mapToClientConfiguration
argument_list|(
name|configuration
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|cache
operator|.
name|put
argument_list|(
name|configuration
operator|.
name|toCacheId
argument_list|()
argument_list|,
name|connection
argument_list|)
expr_stmt|;
block|}
specifier|final
name|MiloClientEndpoint
name|endpoint
init|=
operator|new
name|MiloClientEndpoint
argument_list|(
name|uri
argument_list|,
name|this
argument_list|,
name|connection
argument_list|,
name|configuration
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
decl_stmt|;
name|setProperties
argument_list|(
name|endpoint
argument_list|,
name|parameters
argument_list|)
expr_stmt|;
comment|// register connection with endpoint
name|this
operator|.
name|connectionMap
operator|.
name|put
argument_list|(
name|configuration
operator|.
name|toCacheId
argument_list|()
argument_list|,
name|endpoint
argument_list|)
expr_stmt|;
return|return
name|endpoint
return|;
block|}
DECL|method|mapToClientConfiguration (final MiloClientConfiguration configuration)
specifier|private
name|OpcUaClientConfigBuilder
name|mapToClientConfiguration
parameter_list|(
specifier|final
name|MiloClientConfiguration
name|configuration
parameter_list|)
block|{
specifier|final
name|OpcUaClientConfigBuilder
name|builder
init|=
operator|new
name|OpcUaClientConfigBuilder
argument_list|()
decl_stmt|;
name|whenHasText
argument_list|(
name|configuration
operator|::
name|getApplicationName
argument_list|,
name|value
lambda|->
name|builder
operator|.
name|setApplicationName
argument_list|(
name|LocalizedText
operator|.
name|english
argument_list|(
name|value
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|whenHasText
argument_list|(
name|configuration
operator|::
name|getApplicationUri
argument_list|,
name|builder
operator|::
name|setApplicationUri
argument_list|)
expr_stmt|;
name|whenHasText
argument_list|(
name|configuration
operator|::
name|getProductUri
argument_list|,
name|builder
operator|::
name|setProductUri
argument_list|)
expr_stmt|;
if|if
condition|(
name|configuration
operator|.
name|getRequestTimeout
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setRequestTimeout
argument_list|(
name|Unsigned
operator|.
name|uint
argument_list|(
name|configuration
operator|.
name|getRequestTimeout
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|configuration
operator|.
name|getChannelLifetime
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setChannelLifetime
argument_list|(
name|Unsigned
operator|.
name|uint
argument_list|(
name|configuration
operator|.
name|getChannelLifetime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|whenHasText
argument_list|(
name|configuration
operator|::
name|getSessionName
argument_list|,
name|value
lambda|->
name|builder
operator|.
name|setSessionName
argument_list|(
parameter_list|()
lambda|->
name|value
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|configuration
operator|.
name|getSessionTimeout
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setSessionTimeout
argument_list|(
name|UInteger
operator|.
name|valueOf
argument_list|(
name|configuration
operator|.
name|getSessionTimeout
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|configuration
operator|.
name|getMaxPendingPublishRequests
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setMaxPendingPublishRequests
argument_list|(
name|UInteger
operator|.
name|valueOf
argument_list|(
name|configuration
operator|.
name|getMaxPendingPublishRequests
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|configuration
operator|.
name|getMaxResponseMessageSize
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setMaxResponseMessageSize
argument_list|(
name|UInteger
operator|.
name|valueOf
argument_list|(
name|configuration
operator|.
name|getMaxPendingPublishRequests
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|configuration
operator|.
name|getKeyStoreUrl
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|setKey
argument_list|(
name|configuration
argument_list|,
name|builder
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
return|;
block|}
DECL|method|setKey (final MiloClientConfiguration configuration, final OpcUaClientConfigBuilder builder)
specifier|private
name|void
name|setKey
parameter_list|(
specifier|final
name|MiloClientConfiguration
name|configuration
parameter_list|,
specifier|final
name|OpcUaClientConfigBuilder
name|builder
parameter_list|)
block|{
specifier|final
name|KeyStoreLoader
name|loader
init|=
operator|new
name|KeyStoreLoader
argument_list|()
decl_stmt|;
specifier|final
name|Result
name|result
decl_stmt|;
try|try
block|{
comment|// key store properties
name|loader
operator|.
name|setType
argument_list|(
name|configuration
operator|.
name|getKeyStoreType
argument_list|()
argument_list|)
expr_stmt|;
name|loader
operator|.
name|setUrl
argument_list|(
name|configuration
operator|.
name|getKeyStoreUrl
argument_list|()
argument_list|)
expr_stmt|;
name|loader
operator|.
name|setKeyStorePassword
argument_list|(
name|configuration
operator|.
name|getKeyStorePassword
argument_list|()
argument_list|)
expr_stmt|;
comment|// key properties
name|loader
operator|.
name|setKeyAlias
argument_list|(
name|configuration
operator|.
name|getKeyAlias
argument_list|()
argument_list|)
expr_stmt|;
name|loader
operator|.
name|setKeyPassword
argument_list|(
name|configuration
operator|.
name|getKeyPassword
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|loader
operator|.
name|load
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|GeneralSecurityException
decl||
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Failed to load key"
argument_list|,
name|e
argument_list|)
throw|;
block|}
if|if
condition|(
name|result
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Key not found in keystore"
argument_list|)
throw|;
block|}
name|builder
operator|.
name|setCertificate
argument_list|(
name|result
operator|.
name|getCertificate
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setKeyPair
argument_list|(
name|result
operator|.
name|getKeyPair
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|whenHasText (final Supplier<String> valueSupplier, final Consumer<String> valueConsumer)
specifier|private
name|void
name|whenHasText
parameter_list|(
specifier|final
name|Supplier
argument_list|<
name|String
argument_list|>
name|valueSupplier
parameter_list|,
specifier|final
name|Consumer
argument_list|<
name|String
argument_list|>
name|valueConsumer
parameter_list|)
block|{
specifier|final
name|String
name|value
init|=
name|valueSupplier
operator|.
name|get
argument_list|()
decl_stmt|;
if|if
condition|(
name|value
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|valueConsumer
operator|.
name|accept
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * All default options for client      */
DECL|method|setDefaultConfiguration (final MiloClientConfiguration defaultConfiguration)
specifier|public
name|void
name|setDefaultConfiguration
parameter_list|(
specifier|final
name|MiloClientConfiguration
name|defaultConfiguration
parameter_list|)
block|{
name|this
operator|.
name|defaultConfiguration
operator|=
name|defaultConfiguration
expr_stmt|;
block|}
comment|/**      * Default application name      */
DECL|method|setApplicationName (final String applicationName)
specifier|public
name|void
name|setApplicationName
parameter_list|(
specifier|final
name|String
name|applicationName
parameter_list|)
block|{
name|this
operator|.
name|defaultConfiguration
operator|.
name|setApplicationName
argument_list|(
name|applicationName
argument_list|)
expr_stmt|;
block|}
comment|/**      * Default application URI      */
DECL|method|setApplicationUri (final String applicationUri)
specifier|public
name|void
name|setApplicationUri
parameter_list|(
specifier|final
name|String
name|applicationUri
parameter_list|)
block|{
name|this
operator|.
name|defaultConfiguration
operator|.
name|setApplicationUri
argument_list|(
name|applicationUri
argument_list|)
expr_stmt|;
block|}
comment|/**      * Default product URI      */
DECL|method|setProductUri (final String productUri)
specifier|public
name|void
name|setProductUri
parameter_list|(
specifier|final
name|String
name|productUri
parameter_list|)
block|{
name|this
operator|.
name|defaultConfiguration
operator|.
name|setProductUri
argument_list|(
name|productUri
argument_list|)
expr_stmt|;
block|}
comment|/**      * Default reconnect timeout      */
DECL|method|setReconnectTimeout (final Long reconnectTimeout)
specifier|public
name|void
name|setReconnectTimeout
parameter_list|(
specifier|final
name|Long
name|reconnectTimeout
parameter_list|)
block|{
name|this
operator|.
name|defaultConfiguration
operator|.
name|setRequestTimeout
argument_list|(
name|reconnectTimeout
argument_list|)
expr_stmt|;
block|}
DECL|method|disposed (final MiloClientEndpoint endpoint)
specifier|public
specifier|synchronized
name|void
name|disposed
parameter_list|(
specifier|final
name|MiloClientEndpoint
name|endpoint
parameter_list|)
block|{
specifier|final
name|MiloClientConnection
name|connection
init|=
name|endpoint
operator|.
name|getConnection
argument_list|()
decl_stmt|;
comment|// unregister usage of connection
name|this
operator|.
name|connectionMap
operator|.
name|remove
argument_list|(
name|connection
operator|.
name|getConnectionId
argument_list|()
argument_list|,
name|endpoint
argument_list|)
expr_stmt|;
comment|// test if this was the last endpoint using this connection
if|if
condition|(
operator|!
name|this
operator|.
name|connectionMap
operator|.
name|containsKey
argument_list|(
name|connection
operator|.
name|getConnectionId
argument_list|()
argument_list|)
condition|)
block|{
comment|// this was the last endpoint using the connection ...
comment|// ... remove from the cache
name|this
operator|.
name|cache
operator|.
name|remove
argument_list|(
name|connection
operator|.
name|getConnectionId
argument_list|()
argument_list|)
expr_stmt|;
comment|// ... and close
try|try
block|{
name|connection
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Failed to close connection"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

