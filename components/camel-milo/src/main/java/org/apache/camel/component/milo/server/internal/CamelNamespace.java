begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.milo.server.internal
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|milo
operator|.
name|server
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CompletableFuture
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|milo
operator|.
name|client
operator|.
name|MiloClientConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|core
operator|.
name|Reference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|server
operator|.
name|OpcUaServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|server
operator|.
name|api
operator|.
name|AccessContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|server
operator|.
name|api
operator|.
name|DataItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|server
operator|.
name|api
operator|.
name|MonitoredItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|server
operator|.
name|api
operator|.
name|Namespace
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|server
operator|.
name|api
operator|.
name|ServerNodeMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|server
operator|.
name|nodes
operator|.
name|AttributeContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|server
operator|.
name|nodes
operator|.
name|ServerNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|server
operator|.
name|nodes
operator|.
name|UaFolderNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|server
operator|.
name|nodes
operator|.
name|UaObjectNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|server
operator|.
name|util
operator|.
name|SubscriptionModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|Identifiers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|StatusCodes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|UaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|builtin
operator|.
name|DataValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|builtin
operator|.
name|LocalizedText
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|builtin
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|builtin
operator|.
name|QualifiedName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|builtin
operator|.
name|StatusCode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|builtin
operator|.
name|Variant
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|builtin
operator|.
name|unsigned
operator|.
name|UShort
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|enumerated
operator|.
name|NodeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|enumerated
operator|.
name|TimestampsToReturn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|structured
operator|.
name|ReadValueId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|structured
operator|.
name|WriteValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|CamelNamespace
specifier|public
class|class
name|CamelNamespace
implements|implements
name|Namespace
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MiloClientConsumer
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|namespaceIndex
specifier|private
specifier|final
name|UShort
name|namespaceIndex
decl_stmt|;
DECL|field|namespaceUri
specifier|private
specifier|final
name|String
name|namespaceUri
decl_stmt|;
DECL|field|nodeManager
specifier|private
specifier|final
name|ServerNodeMap
name|nodeManager
decl_stmt|;
DECL|field|subscriptionModel
specifier|private
specifier|final
name|SubscriptionModel
name|subscriptionModel
decl_stmt|;
DECL|field|folder
specifier|private
specifier|final
name|UaFolderNode
name|folder
decl_stmt|;
DECL|field|itemsObject
specifier|private
specifier|final
name|UaObjectNode
name|itemsObject
decl_stmt|;
DECL|field|itemMap
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|CamelServerItem
argument_list|>
name|itemMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|CamelNamespace (final UShort namespaceIndex, final String namespaceUri, final OpcUaServer server)
specifier|public
name|CamelNamespace
parameter_list|(
specifier|final
name|UShort
name|namespaceIndex
parameter_list|,
specifier|final
name|String
name|namespaceUri
parameter_list|,
specifier|final
name|OpcUaServer
name|server
parameter_list|)
block|{
name|this
operator|.
name|namespaceIndex
operator|=
name|namespaceIndex
expr_stmt|;
name|this
operator|.
name|namespaceUri
operator|=
name|namespaceUri
expr_stmt|;
name|this
operator|.
name|nodeManager
operator|=
name|server
operator|.
name|getNodeMap
argument_list|()
expr_stmt|;
name|this
operator|.
name|subscriptionModel
operator|=
operator|new
name|SubscriptionModel
argument_list|(
name|server
argument_list|,
name|this
argument_list|)
expr_stmt|;
comment|// create structure
block|{
specifier|final
name|NodeId
name|nodeId
init|=
operator|new
name|NodeId
argument_list|(
name|namespaceIndex
argument_list|,
literal|"camel"
argument_list|)
decl_stmt|;
specifier|final
name|QualifiedName
name|name
init|=
operator|new
name|QualifiedName
argument_list|(
name|namespaceIndex
argument_list|,
literal|"camel"
argument_list|)
decl_stmt|;
specifier|final
name|LocalizedText
name|displayName
init|=
name|LocalizedText
operator|.
name|english
argument_list|(
literal|"Camel"
argument_list|)
decl_stmt|;
name|this
operator|.
name|folder
operator|=
operator|new
name|UaFolderNode
argument_list|(
name|this
operator|.
name|nodeManager
argument_list|,
name|nodeId
argument_list|,
name|name
argument_list|,
name|displayName
argument_list|)
expr_stmt|;
name|this
operator|.
name|nodeManager
operator|.
name|addNode
argument_list|(
name|this
operator|.
name|folder
argument_list|)
expr_stmt|;
block|}
block|{
specifier|final
name|NodeId
name|nodeId
init|=
operator|new
name|NodeId
argument_list|(
name|namespaceIndex
argument_list|,
literal|"items"
argument_list|)
decl_stmt|;
specifier|final
name|QualifiedName
name|name
init|=
operator|new
name|QualifiedName
argument_list|(
name|namespaceIndex
argument_list|,
literal|"items"
argument_list|)
decl_stmt|;
specifier|final
name|LocalizedText
name|displayName
init|=
name|LocalizedText
operator|.
name|english
argument_list|(
literal|"Items"
argument_list|)
decl_stmt|;
name|this
operator|.
name|itemsObject
operator|=
operator|new
name|UaObjectNode
argument_list|(
name|this
operator|.
name|nodeManager
argument_list|,
name|nodeId
argument_list|,
name|name
argument_list|,
name|displayName
argument_list|)
expr_stmt|;
name|this
operator|.
name|folder
operator|.
name|addComponent
argument_list|(
name|this
operator|.
name|itemsObject
argument_list|)
expr_stmt|;
block|}
comment|// register reference to structure
try|try
block|{
name|server
operator|.
name|getUaNamespace
argument_list|()
operator|.
name|addReference
argument_list|(
name|Identifiers
operator|.
name|ObjectsFolder
argument_list|,
name|Identifiers
operator|.
name|Organizes
argument_list|,
literal|true
argument_list|,
name|this
operator|.
name|folder
operator|.
name|getNodeId
argument_list|()
operator|.
name|expanded
argument_list|()
argument_list|,
name|NodeClass
operator|.
name|Object
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|UaException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Failed to register folder"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getNamespaceIndex ()
specifier|public
name|UShort
name|getNamespaceIndex
parameter_list|()
block|{
return|return
name|this
operator|.
name|namespaceIndex
return|;
block|}
annotation|@
name|Override
DECL|method|getNamespaceUri ()
specifier|public
name|String
name|getNamespaceUri
parameter_list|()
block|{
return|return
name|this
operator|.
name|namespaceUri
return|;
block|}
annotation|@
name|Override
DECL|method|browse (final AccessContext context, final NodeId nodeId)
specifier|public
name|CompletableFuture
argument_list|<
name|List
argument_list|<
name|Reference
argument_list|>
argument_list|>
name|browse
parameter_list|(
specifier|final
name|AccessContext
name|context
parameter_list|,
specifier|final
name|NodeId
name|nodeId
parameter_list|)
block|{
specifier|final
name|ServerNode
name|node
init|=
name|this
operator|.
name|nodeManager
operator|.
name|get
argument_list|(
name|nodeId
argument_list|)
decl_stmt|;
if|if
condition|(
name|node
operator|!=
literal|null
condition|)
block|{
return|return
name|CompletableFuture
operator|.
name|completedFuture
argument_list|(
name|node
operator|.
name|getReferences
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
specifier|final
name|CompletableFuture
argument_list|<
name|List
argument_list|<
name|Reference
argument_list|>
argument_list|>
name|f
init|=
operator|new
name|CompletableFuture
argument_list|<>
argument_list|()
decl_stmt|;
name|f
operator|.
name|completeExceptionally
argument_list|(
operator|new
name|UaException
argument_list|(
name|StatusCodes
operator|.
name|Bad_NodeIdUnknown
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|f
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|read (final ReadContext context, final Double maxAge, final TimestampsToReturn timestamps, final List<ReadValueId> readValueIds)
specifier|public
name|void
name|read
parameter_list|(
specifier|final
name|ReadContext
name|context
parameter_list|,
specifier|final
name|Double
name|maxAge
parameter_list|,
specifier|final
name|TimestampsToReturn
name|timestamps
parameter_list|,
specifier|final
name|List
argument_list|<
name|ReadValueId
argument_list|>
name|readValueIds
parameter_list|)
block|{
specifier|final
name|List
argument_list|<
name|DataValue
argument_list|>
name|results
init|=
name|Lists
operator|.
name|newArrayListWithCapacity
argument_list|(
name|readValueIds
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
specifier|final
name|ReadValueId
name|id
range|:
name|readValueIds
control|)
block|{
specifier|final
name|ServerNode
name|node
init|=
name|this
operator|.
name|nodeManager
operator|.
name|get
argument_list|(
name|id
operator|.
name|getNodeId
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|DataValue
name|value
decl_stmt|;
if|if
condition|(
name|node
operator|!=
literal|null
condition|)
block|{
name|value
operator|=
name|node
operator|.
name|readAttribute
argument_list|(
operator|new
name|AttributeContext
argument_list|(
name|context
argument_list|)
argument_list|,
name|id
operator|.
name|getAttributeId
argument_list|()
argument_list|,
name|timestamps
argument_list|,
name|id
operator|.
name|getIndexRange
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|value
operator|=
operator|new
name|DataValue
argument_list|(
name|StatusCodes
operator|.
name|Bad_NodeIdUnknown
argument_list|)
expr_stmt|;
block|}
name|results
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|context
operator|.
name|complete
argument_list|(
name|results
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|write (final WriteContext context, final List<WriteValue> writeValues)
specifier|public
name|void
name|write
parameter_list|(
specifier|final
name|WriteContext
name|context
parameter_list|,
specifier|final
name|List
argument_list|<
name|WriteValue
argument_list|>
name|writeValues
parameter_list|)
block|{
specifier|final
name|List
argument_list|<
name|StatusCode
argument_list|>
name|results
init|=
name|Lists
operator|.
name|newArrayListWithCapacity
argument_list|(
name|writeValues
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
specifier|final
name|WriteValue
name|writeValue
range|:
name|writeValues
control|)
block|{
try|try
block|{
specifier|final
name|ServerNode
name|node
init|=
name|this
operator|.
name|nodeManager
operator|.
name|getNode
argument_list|(
name|writeValue
operator|.
name|getNodeId
argument_list|()
argument_list|)
operator|.
name|orElseThrow
argument_list|(
parameter_list|()
lambda|->
operator|new
name|UaException
argument_list|(
name|StatusCodes
operator|.
name|Bad_NodeIdUnknown
argument_list|)
argument_list|)
decl_stmt|;
name|node
operator|.
name|writeAttribute
argument_list|(
operator|new
name|AttributeContext
argument_list|(
name|context
argument_list|)
argument_list|,
name|writeValue
operator|.
name|getAttributeId
argument_list|()
argument_list|,
name|writeValue
operator|.
name|getValue
argument_list|()
argument_list|,
name|writeValue
operator|.
name|getIndexRange
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|LOG
operator|.
name|isTraceEnabled
argument_list|()
condition|)
block|{
specifier|final
name|Variant
name|variant
init|=
name|writeValue
operator|.
name|getValue
argument_list|()
operator|.
name|getValue
argument_list|()
decl_stmt|;
specifier|final
name|Object
name|o
init|=
name|variant
operator|!=
literal|null
condition|?
name|variant
operator|.
name|getValue
argument_list|()
else|:
literal|null
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Wrote value={} to attributeId={} of {}"
argument_list|,
name|o
argument_list|,
name|writeValue
operator|.
name|getAttributeId
argument_list|()
argument_list|,
name|writeValue
operator|.
name|getNodeId
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|results
operator|.
name|add
argument_list|(
name|StatusCode
operator|.
name|GOOD
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|UaException
name|e
parameter_list|)
block|{
name|results
operator|.
name|add
argument_list|(
name|e
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|context
operator|.
name|complete
argument_list|(
name|results
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onDataItemsCreated (final List<DataItem> dataItems)
specifier|public
name|void
name|onDataItemsCreated
parameter_list|(
specifier|final
name|List
argument_list|<
name|DataItem
argument_list|>
name|dataItems
parameter_list|)
block|{
name|this
operator|.
name|subscriptionModel
operator|.
name|onDataItemsCreated
argument_list|(
name|dataItems
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onDataItemsModified (final List<DataItem> dataItems)
specifier|public
name|void
name|onDataItemsModified
parameter_list|(
specifier|final
name|List
argument_list|<
name|DataItem
argument_list|>
name|dataItems
parameter_list|)
block|{
name|this
operator|.
name|subscriptionModel
operator|.
name|onDataItemsModified
argument_list|(
name|dataItems
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onDataItemsDeleted (final List<DataItem> dataItems)
specifier|public
name|void
name|onDataItemsDeleted
parameter_list|(
specifier|final
name|List
argument_list|<
name|DataItem
argument_list|>
name|dataItems
parameter_list|)
block|{
name|this
operator|.
name|subscriptionModel
operator|.
name|onDataItemsDeleted
argument_list|(
name|dataItems
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onMonitoringModeChanged (final List<MonitoredItem> monitoredItems)
specifier|public
name|void
name|onMonitoringModeChanged
parameter_list|(
specifier|final
name|List
argument_list|<
name|MonitoredItem
argument_list|>
name|monitoredItems
parameter_list|)
block|{
name|this
operator|.
name|subscriptionModel
operator|.
name|onMonitoringModeChanged
argument_list|(
name|monitoredItems
argument_list|)
expr_stmt|;
block|}
DECL|method|getOrAddItem (final String itemId)
specifier|public
name|CamelServerItem
name|getOrAddItem
parameter_list|(
specifier|final
name|String
name|itemId
parameter_list|)
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
name|CamelServerItem
name|item
init|=
name|this
operator|.
name|itemMap
operator|.
name|get
argument_list|(
name|itemId
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|==
literal|null
condition|)
block|{
name|item
operator|=
operator|new
name|CamelServerItem
argument_list|(
name|itemId
argument_list|,
name|this
operator|.
name|nodeManager
argument_list|,
name|this
operator|.
name|namespaceIndex
argument_list|,
name|this
operator|.
name|itemsObject
argument_list|)
expr_stmt|;
name|this
operator|.
name|itemMap
operator|.
name|put
argument_list|(
name|itemId
argument_list|,
name|item
argument_list|)
expr_stmt|;
block|}
return|return
name|item
return|;
block|}
block|}
block|}
end_class

end_unit

