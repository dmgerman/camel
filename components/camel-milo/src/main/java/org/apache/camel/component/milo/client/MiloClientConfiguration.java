begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.milo.client
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|milo
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|milo
operator|.
name|KeyStoreLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriParams
import|;
end_import

begin_class
annotation|@
name|UriParams
DECL|class|MiloClientConfiguration
specifier|public
class|class
name|MiloClientConfiguration
implements|implements
name|Cloneable
block|{
DECL|field|DEFAULT_APPLICATION_URI
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_APPLICATION_URI
init|=
literal|"http://camel.apache.org/EclipseMilo/Client"
decl_stmt|;
DECL|field|DEFAULT_APPLICATION_NAME
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_APPLICATION_NAME
init|=
literal|"Apache Camel adapter for Eclipse Milo"
decl_stmt|;
DECL|field|DEFAULT_PRODUCT_URI
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_PRODUCT_URI
init|=
literal|"http://camel.apache.org/EclipseMilo"
decl_stmt|;
DECL|field|endpointUri
specifier|private
name|String
name|endpointUri
decl_stmt|;
annotation|@
name|UriParam
DECL|field|clientId
specifier|private
name|String
name|clientId
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"client"
argument_list|,
name|defaultValue
operator|=
name|DEFAULT_APPLICATION_NAME
argument_list|)
DECL|field|applicationName
specifier|private
name|String
name|applicationName
init|=
name|DEFAULT_APPLICATION_NAME
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"client"
argument_list|,
name|defaultValue
operator|=
name|DEFAULT_APPLICATION_URI
argument_list|)
DECL|field|applicationUri
specifier|private
name|String
name|applicationUri
init|=
name|DEFAULT_APPLICATION_URI
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"client"
argument_list|,
name|defaultValue
operator|=
name|DEFAULT_PRODUCT_URI
argument_list|)
DECL|field|productUri
specifier|private
name|String
name|productUri
init|=
name|DEFAULT_PRODUCT_URI
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"client"
argument_list|)
DECL|field|requestTimeout
specifier|private
name|Long
name|requestTimeout
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"client"
argument_list|)
DECL|field|channelLifetime
specifier|private
name|Long
name|channelLifetime
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"client"
argument_list|)
DECL|field|sessionName
specifier|private
name|String
name|sessionName
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"client"
argument_list|)
DECL|field|sessionTimeout
specifier|private
name|Long
name|sessionTimeout
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"client"
argument_list|)
DECL|field|maxPendingPublishRequests
specifier|private
name|Long
name|maxPendingPublishRequests
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"client"
argument_list|)
DECL|field|maxResponseMessageSize
specifier|private
name|Long
name|maxResponseMessageSize
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"client"
argument_list|)
DECL|field|secureChannelReauthenticationEnabled
specifier|private
name|Boolean
name|secureChannelReauthenticationEnabled
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"client"
argument_list|)
DECL|field|keyStoreUrl
specifier|private
name|URL
name|keyStoreUrl
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"client"
argument_list|)
DECL|field|keyStoreType
specifier|private
name|String
name|keyStoreType
init|=
name|KeyStoreLoader
operator|.
name|DEFAULT_KEY_STORE_TYPE
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"client"
argument_list|)
DECL|field|keyAlias
specifier|private
name|String
name|keyAlias
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"client"
argument_list|)
DECL|field|keyStorePassword
specifier|private
name|String
name|keyStorePassword
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"client"
argument_list|)
DECL|field|keyPassword
specifier|private
name|String
name|keyPassword
decl_stmt|;
DECL|method|MiloClientConfiguration ()
specifier|public
name|MiloClientConfiguration
parameter_list|()
block|{ 	}
DECL|method|MiloClientConfiguration (final MiloClientConfiguration other)
specifier|public
name|MiloClientConfiguration
parameter_list|(
specifier|final
name|MiloClientConfiguration
name|other
parameter_list|)
block|{
name|this
operator|.
name|clientId
operator|=
name|other
operator|.
name|clientId
expr_stmt|;
name|this
operator|.
name|endpointUri
operator|=
name|other
operator|.
name|endpointUri
expr_stmt|;
name|this
operator|.
name|applicationName
operator|=
name|other
operator|.
name|applicationName
expr_stmt|;
name|this
operator|.
name|productUri
operator|=
name|other
operator|.
name|productUri
expr_stmt|;
name|this
operator|.
name|requestTimeout
operator|=
name|other
operator|.
name|requestTimeout
expr_stmt|;
block|}
DECL|method|setEndpointUri (final String endpointUri)
specifier|public
name|void
name|setEndpointUri
parameter_list|(
specifier|final
name|String
name|endpointUri
parameter_list|)
block|{
name|this
operator|.
name|endpointUri
operator|=
name|endpointUri
expr_stmt|;
block|}
DECL|method|getEndpointUri ()
specifier|public
name|String
name|getEndpointUri
parameter_list|()
block|{
return|return
name|this
operator|.
name|endpointUri
return|;
block|}
comment|/** 	 * A virtual client id to force the creation of a new connection instance 	 */
DECL|method|setClientId (final String clientId)
specifier|public
name|void
name|setClientId
parameter_list|(
specifier|final
name|String
name|clientId
parameter_list|)
block|{
name|this
operator|.
name|clientId
operator|=
name|clientId
expr_stmt|;
block|}
DECL|method|getClientId ()
specifier|public
name|String
name|getClientId
parameter_list|()
block|{
return|return
name|this
operator|.
name|clientId
return|;
block|}
comment|/** 	 * The application name 	 */
DECL|method|setApplicationName (final String applicationName)
specifier|public
name|void
name|setApplicationName
parameter_list|(
specifier|final
name|String
name|applicationName
parameter_list|)
block|{
name|this
operator|.
name|applicationName
operator|=
name|applicationName
expr_stmt|;
block|}
DECL|method|getApplicationName ()
specifier|public
name|String
name|getApplicationName
parameter_list|()
block|{
return|return
name|this
operator|.
name|applicationName
return|;
block|}
comment|/** 	 * The application URI 	 */
DECL|method|setApplicationUri (final String applicationUri)
specifier|public
name|void
name|setApplicationUri
parameter_list|(
specifier|final
name|String
name|applicationUri
parameter_list|)
block|{
name|this
operator|.
name|applicationUri
operator|=
name|applicationUri
expr_stmt|;
block|}
DECL|method|getApplicationUri ()
specifier|public
name|String
name|getApplicationUri
parameter_list|()
block|{
return|return
name|this
operator|.
name|applicationUri
return|;
block|}
comment|/** 	 * The product URI 	 */
DECL|method|setProductUri (final String productUri)
specifier|public
name|void
name|setProductUri
parameter_list|(
specifier|final
name|String
name|productUri
parameter_list|)
block|{
name|this
operator|.
name|productUri
operator|=
name|productUri
expr_stmt|;
block|}
DECL|method|getProductUri ()
specifier|public
name|String
name|getProductUri
parameter_list|()
block|{
return|return
name|this
operator|.
name|productUri
return|;
block|}
comment|/** 	 * Request timeout in milliseconds 	 */
DECL|method|setRequestTimeout (final Long reconnectTimeout)
specifier|public
name|void
name|setRequestTimeout
parameter_list|(
specifier|final
name|Long
name|reconnectTimeout
parameter_list|)
block|{
name|this
operator|.
name|requestTimeout
operator|=
name|reconnectTimeout
expr_stmt|;
block|}
DECL|method|getRequestTimeout ()
specifier|public
name|Long
name|getRequestTimeout
parameter_list|()
block|{
return|return
name|this
operator|.
name|requestTimeout
return|;
block|}
comment|/** 	 * Channel lifetime in milliseconds 	 */
DECL|method|setChannelLifetime (final Long channelLifetime)
specifier|public
name|void
name|setChannelLifetime
parameter_list|(
specifier|final
name|Long
name|channelLifetime
parameter_list|)
block|{
name|this
operator|.
name|channelLifetime
operator|=
name|channelLifetime
expr_stmt|;
block|}
DECL|method|getChannelLifetime ()
specifier|public
name|Long
name|getChannelLifetime
parameter_list|()
block|{
return|return
name|this
operator|.
name|channelLifetime
return|;
block|}
comment|/** 	 * Session name 	 */
DECL|method|setSessionName (final String sessionName)
specifier|public
name|void
name|setSessionName
parameter_list|(
specifier|final
name|String
name|sessionName
parameter_list|)
block|{
name|this
operator|.
name|sessionName
operator|=
name|sessionName
expr_stmt|;
block|}
DECL|method|getSessionName ()
specifier|public
name|String
name|getSessionName
parameter_list|()
block|{
return|return
name|this
operator|.
name|sessionName
return|;
block|}
comment|/** 	 * Session timeout in milliseconds 	 */
DECL|method|setSessionTimeout (final Long sessionTimeout)
specifier|public
name|void
name|setSessionTimeout
parameter_list|(
specifier|final
name|Long
name|sessionTimeout
parameter_list|)
block|{
name|this
operator|.
name|sessionTimeout
operator|=
name|sessionTimeout
expr_stmt|;
block|}
DECL|method|getSessionTimeout ()
specifier|public
name|Long
name|getSessionTimeout
parameter_list|()
block|{
return|return
name|this
operator|.
name|sessionTimeout
return|;
block|}
comment|/** 	 * The maximum number of pending publish requests 	 */
DECL|method|setMaxPendingPublishRequests (final Long maxPendingPublishRequests)
specifier|public
name|void
name|setMaxPendingPublishRequests
parameter_list|(
specifier|final
name|Long
name|maxPendingPublishRequests
parameter_list|)
block|{
name|this
operator|.
name|maxPendingPublishRequests
operator|=
name|maxPendingPublishRequests
expr_stmt|;
block|}
DECL|method|getMaxPendingPublishRequests ()
specifier|public
name|Long
name|getMaxPendingPublishRequests
parameter_list|()
block|{
return|return
name|this
operator|.
name|maxPendingPublishRequests
return|;
block|}
comment|/** 	 * The maximum number of bytes a response message may have 	 */
DECL|method|setMaxResponseMessageSize (final Long maxResponseMessageSize)
specifier|public
name|void
name|setMaxResponseMessageSize
parameter_list|(
specifier|final
name|Long
name|maxResponseMessageSize
parameter_list|)
block|{
name|this
operator|.
name|maxResponseMessageSize
operator|=
name|maxResponseMessageSize
expr_stmt|;
block|}
DECL|method|getMaxResponseMessageSize ()
specifier|public
name|Long
name|getMaxResponseMessageSize
parameter_list|()
block|{
return|return
name|this
operator|.
name|maxResponseMessageSize
return|;
block|}
comment|/** 	 * Whether secure channel re-authentication is enabled 	 */
DECL|method|setSecureChannelReauthenticationEnabled (final Boolean secureChannelReauthenticationEnabled)
specifier|public
name|void
name|setSecureChannelReauthenticationEnabled
parameter_list|(
specifier|final
name|Boolean
name|secureChannelReauthenticationEnabled
parameter_list|)
block|{
name|this
operator|.
name|secureChannelReauthenticationEnabled
operator|=
name|secureChannelReauthenticationEnabled
expr_stmt|;
block|}
DECL|method|getSecureChannelReauthenticationEnabled ()
specifier|public
name|Boolean
name|getSecureChannelReauthenticationEnabled
parameter_list|()
block|{
return|return
name|this
operator|.
name|secureChannelReauthenticationEnabled
return|;
block|}
comment|/** 	 * The URL where the key should be loaded from 	 */
DECL|method|setKeyStoreUrl (final String keyStoreUrl)
specifier|public
name|void
name|setKeyStoreUrl
parameter_list|(
specifier|final
name|String
name|keyStoreUrl
parameter_list|)
throws|throws
name|MalformedURLException
block|{
name|this
operator|.
name|keyStoreUrl
operator|=
name|keyStoreUrl
operator|!=
literal|null
condition|?
operator|new
name|URL
argument_list|(
name|keyStoreUrl
argument_list|)
else|:
literal|null
expr_stmt|;
block|}
DECL|method|getKeyStoreUrl ()
specifier|public
name|URL
name|getKeyStoreUrl
parameter_list|()
block|{
return|return
name|this
operator|.
name|keyStoreUrl
return|;
block|}
comment|/** 	 * The key store type 	 */
DECL|method|setKeyStoreType (final String keyStoreType)
specifier|public
name|void
name|setKeyStoreType
parameter_list|(
specifier|final
name|String
name|keyStoreType
parameter_list|)
block|{
name|this
operator|.
name|keyStoreType
operator|=
name|keyStoreType
expr_stmt|;
block|}
DECL|method|getKeyStoreType ()
specifier|public
name|String
name|getKeyStoreType
parameter_list|()
block|{
return|return
name|this
operator|.
name|keyStoreType
return|;
block|}
comment|/** 	 * The name of the key in the keystore file 	 */
DECL|method|setKeyAlias (final String keyAlias)
specifier|public
name|void
name|setKeyAlias
parameter_list|(
specifier|final
name|String
name|keyAlias
parameter_list|)
block|{
name|this
operator|.
name|keyAlias
operator|=
name|keyAlias
expr_stmt|;
block|}
DECL|method|getKeyAlias ()
specifier|public
name|String
name|getKeyAlias
parameter_list|()
block|{
return|return
name|this
operator|.
name|keyAlias
return|;
block|}
comment|/** 	 * The keystore password 	 */
DECL|method|setKeyStorePassword (final String keyStorePassword)
specifier|public
name|void
name|setKeyStorePassword
parameter_list|(
specifier|final
name|String
name|keyStorePassword
parameter_list|)
block|{
name|this
operator|.
name|keyStorePassword
operator|=
name|keyStorePassword
expr_stmt|;
block|}
DECL|method|getKeyStorePassword ()
specifier|public
name|String
name|getKeyStorePassword
parameter_list|()
block|{
return|return
name|this
operator|.
name|keyStorePassword
return|;
block|}
comment|/** 	 * The key password 	 */
DECL|method|setKeyPassword (final String keyPassword)
specifier|public
name|void
name|setKeyPassword
parameter_list|(
specifier|final
name|String
name|keyPassword
parameter_list|)
block|{
name|this
operator|.
name|keyPassword
operator|=
name|keyPassword
expr_stmt|;
block|}
DECL|method|getKeyPassword ()
specifier|public
name|String
name|getKeyPassword
parameter_list|()
block|{
return|return
name|this
operator|.
name|keyPassword
return|;
block|}
annotation|@
name|Override
DECL|method|clone ()
specifier|public
name|MiloClientConfiguration
name|clone
parameter_list|()
block|{
return|return
operator|new
name|MiloClientConfiguration
argument_list|(
name|this
argument_list|)
return|;
block|}
DECL|method|toCacheId ()
specifier|public
name|String
name|toCacheId
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|clientId
operator|!=
literal|null
operator|&&
operator|!
name|this
operator|.
name|clientId
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
name|this
operator|.
name|endpointUri
operator|+
literal|"|"
operator|+
name|this
operator|.
name|clientId
return|;
block|}
else|else
block|{
return|return
name|this
operator|.
name|endpointUri
return|;
block|}
block|}
block|}
end_class

end_unit

