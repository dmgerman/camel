begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.milo.client
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|milo
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Consumer
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Objects
operator|.
name|requireNonNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|milo
operator|.
name|NamespaceId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|milo
operator|.
name|PartialNodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|milo
operator|.
name|client
operator|.
name|internal
operator|.
name|SubscriptionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|client
operator|.
name|api
operator|.
name|config
operator|.
name|OpcUaClientConfigBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|Stack
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|builtin
operator|.
name|DataValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|builtin
operator|.
name|Variant
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|builtin
operator|.
name|unsigned
operator|.
name|UInteger
import|;
end_import

begin_class
DECL|class|MiloClientConnection
specifier|public
class|class
name|MiloClientConnection
implements|implements
name|AutoCloseable
block|{
DECL|field|configuration
specifier|private
specifier|final
name|MiloClientConfiguration
name|configuration
decl_stmt|;
DECL|field|manager
specifier|private
name|SubscriptionManager
name|manager
decl_stmt|;
DECL|field|initialized
specifier|private
name|boolean
name|initialized
decl_stmt|;
DECL|field|clientConfiguration
specifier|private
specifier|final
name|OpcUaClientConfigBuilder
name|clientConfiguration
decl_stmt|;
DECL|method|MiloClientConnection (final MiloClientConfiguration configuration, final OpcUaClientConfigBuilder clientConfiguration)
specifier|public
name|MiloClientConnection
parameter_list|(
specifier|final
name|MiloClientConfiguration
name|configuration
parameter_list|,
specifier|final
name|OpcUaClientConfigBuilder
name|clientConfiguration
parameter_list|)
block|{
name|requireNonNull
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
comment|// make a copy since the configuration is mutable
name|this
operator|.
name|configuration
operator|=
name|configuration
operator|.
name|clone
argument_list|()
expr_stmt|;
name|this
operator|.
name|clientConfiguration
operator|=
name|clientConfiguration
expr_stmt|;
block|}
DECL|method|init ()
specifier|protected
name|void
name|init
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|manager
operator|=
operator|new
name|SubscriptionManager
argument_list|(
name|this
operator|.
name|configuration
argument_list|,
name|this
operator|.
name|clientConfiguration
argument_list|,
name|Stack
operator|.
name|sharedScheduledExecutor
argument_list|()
argument_list|,
literal|10_000
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|this
operator|.
name|manager
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|manager
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|this
operator|.
name|manager
operator|=
literal|null
expr_stmt|;
block|}
block|}
DECL|method|checkInit ()
specifier|protected
specifier|synchronized
name|void
name|checkInit
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|initialized
condition|)
block|{
return|return;
block|}
try|try
block|{
name|init
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
name|this
operator|.
name|initialized
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|FunctionalInterface
DECL|interface|MonitorHandle
specifier|public
interface|interface
name|MonitorHandle
block|{
DECL|method|unregister ()
name|void
name|unregister
parameter_list|()
function_decl|;
block|}
DECL|method|monitorValue (final MiloClientItemConfiguration configuration, final Consumer<DataValue> valueConsumer)
specifier|public
name|MonitorHandle
name|monitorValue
parameter_list|(
specifier|final
name|MiloClientItemConfiguration
name|configuration
parameter_list|,
specifier|final
name|Consumer
argument_list|<
name|DataValue
argument_list|>
name|valueConsumer
parameter_list|)
block|{
name|requireNonNull
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|requireNonNull
argument_list|(
name|valueConsumer
argument_list|)
expr_stmt|;
name|checkInit
argument_list|()
expr_stmt|;
specifier|final
name|NamespaceId
name|namespaceId
init|=
name|configuration
operator|.
name|makeNamespaceId
argument_list|()
decl_stmt|;
specifier|final
name|PartialNodeId
name|partialNodeId
init|=
name|configuration
operator|.
name|makePartialNodeId
argument_list|()
decl_stmt|;
specifier|final
name|UInteger
name|handle
init|=
name|this
operator|.
name|manager
operator|.
name|registerItem
argument_list|(
name|namespaceId
argument_list|,
name|partialNodeId
argument_list|,
name|configuration
operator|.
name|getSamplingInterval
argument_list|()
argument_list|,
name|valueConsumer
argument_list|)
decl_stmt|;
return|return
parameter_list|()
lambda|->
name|MiloClientConnection
operator|.
name|this
operator|.
name|manager
operator|.
name|unregisterItem
argument_list|(
name|handle
argument_list|)
return|;
block|}
DECL|method|getConnectionId ()
specifier|public
name|String
name|getConnectionId
parameter_list|()
block|{
return|return
name|this
operator|.
name|configuration
operator|.
name|toCacheId
argument_list|()
return|;
block|}
DECL|method|writeValue (final NamespaceId namespaceId, final PartialNodeId partialNodeId, final Object value, final boolean await)
specifier|public
name|void
name|writeValue
parameter_list|(
specifier|final
name|NamespaceId
name|namespaceId
parameter_list|,
specifier|final
name|PartialNodeId
name|partialNodeId
parameter_list|,
specifier|final
name|Object
name|value
parameter_list|,
specifier|final
name|boolean
name|await
parameter_list|)
block|{
name|checkInit
argument_list|()
expr_stmt|;
name|this
operator|.
name|manager
operator|.
name|write
argument_list|(
name|namespaceId
argument_list|,
name|partialNodeId
argument_list|,
name|mapValue
argument_list|(
name|value
argument_list|)
argument_list|,
name|await
argument_list|)
expr_stmt|;
block|}
comment|/**      * Map the incoming value to some value writable to the milo client      *      * @param value the incoming value      * @return the outgoing value      */
DECL|method|mapValue (final Object value)
specifier|private
name|DataValue
name|mapValue
parameter_list|(
specifier|final
name|Object
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|instanceof
name|DataValue
condition|)
block|{
return|return
operator|(
name|DataValue
operator|)
name|value
return|;
block|}
if|if
condition|(
name|value
operator|instanceof
name|Variant
condition|)
block|{
return|return
operator|new
name|DataValue
argument_list|(
operator|(
name|Variant
operator|)
name|value
argument_list|)
return|;
block|}
return|return
operator|new
name|DataValue
argument_list|(
operator|new
name|Variant
argument_list|(
name|value
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

