begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.milo.server
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|milo
operator|.
name|server
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test setting security policies  */
end_comment

begin_class
DECL|class|ServerSetSecurityPoliciesTest
specifier|public
class|class
name|ServerSetSecurityPoliciesTest
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Test
DECL|method|testSetSecurityPolicies1 ()
specifier|public
name|void
name|testSetSecurityPolicies1
parameter_list|()
block|{
specifier|final
name|MiloServerComponent
name|component
init|=
operator|new
name|MiloServerComponent
argument_list|()
decl_stmt|;
name|component
operator|.
name|setSecurityPoliciesById
argument_list|(
literal|"None"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetSecurityPolicies2 ()
specifier|public
name|void
name|testSetSecurityPolicies2
parameter_list|()
block|{
specifier|final
name|MiloServerComponent
name|component
init|=
operator|new
name|MiloServerComponent
argument_list|()
decl_stmt|;
name|component
operator|.
name|setSecurityPoliciesById
argument_list|(
literal|"http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetSecurityPolicies3 ()
specifier|public
name|void
name|testSetSecurityPolicies3
parameter_list|()
block|{
specifier|final
name|MiloServerComponent
name|component
init|=
operator|new
name|MiloServerComponent
argument_list|()
decl_stmt|;
name|component
operator|.
name|setSecurityPoliciesById
argument_list|(
literal|"None"
argument_list|,
literal|"http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
DECL|method|testSetSecurityPolicies4 ()
specifier|public
name|void
name|testSetSecurityPolicies4
parameter_list|()
block|{
specifier|final
name|MiloServerComponent
name|component
init|=
operator|new
name|MiloServerComponent
argument_list|()
decl_stmt|;
name|component
operator|.
name|setSecurityPoliciesById
argument_list|(
literal|"I just made that up"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

