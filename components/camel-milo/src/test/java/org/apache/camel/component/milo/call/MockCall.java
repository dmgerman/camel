begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.milo.call
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|milo
operator|.
name|call
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|server
operator|.
name|annotations
operator|.
name|UaInputArgument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|server
operator|.
name|annotations
operator|.
name|UaMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|server
operator|.
name|annotations
operator|.
name|UaOutputArgument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|server
operator|.
name|api
operator|.
name|ServerNodeMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|server
operator|.
name|nodes
operator|.
name|UaMethodNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|server
operator|.
name|util
operator|.
name|AnnotationBasedInvocationHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|server
operator|.
name|util
operator|.
name|AnnotationBasedInvocationHandler
operator|.
name|InvocationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|sdk
operator|.
name|server
operator|.
name|util
operator|.
name|AnnotationBasedInvocationHandler
operator|.
name|Out
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|builtin
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|builtin
operator|.
name|QualifiedName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|builtin
operator|.
name|unsigned
operator|.
name|UInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|builtin
operator|.
name|unsigned
operator|.
name|UShort
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|eclipse
operator|.
name|milo
operator|.
name|opcua
operator|.
name|stack
operator|.
name|core
operator|.
name|types
operator|.
name|builtin
operator|.
name|LocalizedText
operator|.
name|english
import|;
end_import

begin_class
DECL|class|MockCall
specifier|public
specifier|final
class|class
name|MockCall
block|{
DECL|method|MockCall ()
specifier|private
name|MockCall
parameter_list|()
block|{     }
comment|// in: str1[String], out: out1[String]
DECL|class|Call1
specifier|public
specifier|static
class|class
name|Call1
block|{
DECL|field|calls
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|calls
init|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|UaMethod
DECL|method|call (final InvocationContext context, @UaInputArgument(name = R) final String in1, @UaOutputArgument(name = R) final Out<String> out1)
specifier|public
name|void
name|call
parameter_list|(
specifier|final
name|InvocationContext
name|context
parameter_list|,
annotation|@
name|UaInputArgument
argument_list|(
name|name
operator|=
literal|"in1"
argument_list|)
specifier|final
name|String
name|in1
parameter_list|,
annotation|@
name|UaOutputArgument
argument_list|(
name|name
operator|=
literal|"out1"
argument_list|)
specifier|final
name|Out
argument_list|<
name|String
argument_list|>
name|out1
parameter_list|)
block|{
name|this
operator|.
name|calls
operator|.
name|add
argument_list|(
name|in1
argument_list|)
expr_stmt|;
name|out1
operator|.
name|set
argument_list|(
literal|"out-"
operator|+
name|in1
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|fromNode (final UShort index, final ServerNodeMap nodeMap, final String nodeId, final String name, final Object methodObject)
specifier|public
specifier|static
name|UaMethodNode
name|fromNode
parameter_list|(
specifier|final
name|UShort
name|index
parameter_list|,
specifier|final
name|ServerNodeMap
name|nodeMap
parameter_list|,
specifier|final
name|String
name|nodeId
parameter_list|,
specifier|final
name|String
name|name
parameter_list|,
specifier|final
name|Object
name|methodObject
parameter_list|)
block|{
try|try
block|{
specifier|final
name|UaMethodNode
name|method
init|=
operator|new
name|UaMethodNode
argument_list|(
name|nodeMap
argument_list|,
operator|new
name|NodeId
argument_list|(
name|index
argument_list|,
name|nodeId
argument_list|)
argument_list|,
operator|new
name|QualifiedName
argument_list|(
name|index
argument_list|,
name|name
argument_list|)
argument_list|,
name|english
argument_list|(
name|name
argument_list|)
argument_list|,
name|english
argument_list|(
name|nodeId
argument_list|)
argument_list|,
name|UInteger
operator|.
name|MIN
argument_list|,
name|UInteger
operator|.
name|MIN
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
specifier|final
name|AnnotationBasedInvocationHandler
name|handler
init|=
name|AnnotationBasedInvocationHandler
operator|.
name|fromAnnotatedObject
argument_list|(
name|nodeMap
argument_list|,
name|methodObject
argument_list|)
decl_stmt|;
name|method
operator|.
name|setInputArguments
argument_list|(
name|handler
operator|.
name|getInputArguments
argument_list|()
argument_list|)
expr_stmt|;
name|method
operator|.
name|setOutputArguments
argument_list|(
name|handler
operator|.
name|getOutputArguments
argument_list|()
argument_list|)
expr_stmt|;
name|method
operator|.
name|setInvocationHandler
argument_list|(
name|handler
argument_list|)
expr_stmt|;
return|return
name|method
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

