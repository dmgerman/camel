begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.atomix.ha
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|atomix
operator|.
name|ha
package|;
end_package

begin_import
import|import
name|io
operator|.
name|atomix
operator|.
name|group
operator|.
name|DistributedGroup
import|;
end_import

begin_import
import|import
name|io
operator|.
name|atomix
operator|.
name|group
operator|.
name|GroupMember
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ha
operator|.
name|CamelClusterMember
import|;
end_import

begin_class
DECL|class|AtomixClusterMember
class|class
name|AtomixClusterMember
parameter_list|<
name|M
extends|extends
name|GroupMember
parameter_list|>
implements|implements
name|CamelClusterMember
block|{
DECL|field|group
specifier|private
specifier|final
name|DistributedGroup
name|group
decl_stmt|;
DECL|field|member
specifier|private
specifier|final
name|M
name|member
decl_stmt|;
DECL|method|AtomixClusterMember (DistributedGroup group, M member)
name|AtomixClusterMember
parameter_list|(
name|DistributedGroup
name|group
parameter_list|,
name|M
name|member
parameter_list|)
block|{
name|this
operator|.
name|group
operator|=
name|group
expr_stmt|;
name|this
operator|.
name|member
operator|=
name|member
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getId ()
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|member
operator|.
name|id
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|isMaster ()
specifier|public
name|boolean
name|isMaster
parameter_list|()
block|{
return|return
name|group
operator|.
name|election
argument_list|()
operator|.
name|term
argument_list|()
operator|.
name|leader
argument_list|()
operator|.
name|equals
argument_list|(
name|member
argument_list|)
return|;
block|}
DECL|method|getGroupMember ()
name|M
name|getGroupMember
parameter_list|()
block|{
return|return
name|member
return|;
block|}
block|}
end_class

end_unit

