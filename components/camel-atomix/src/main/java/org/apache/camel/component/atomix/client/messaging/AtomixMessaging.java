begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.atomix.client.messaging
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|atomix
operator|.
name|client
operator|.
name|messaging
package|;
end_package

begin_import
import|import
name|io
operator|.
name|atomix
operator|.
name|group
operator|.
name|messaging
operator|.
name|MessageProducer
import|;
end_import

begin_class
DECL|class|AtomixMessaging
specifier|public
specifier|final
class|class
name|AtomixMessaging
block|{
comment|// ****************************************
comment|// Constants
comment|// ****************************************
DECL|field|OPTIONS_DIRECT
specifier|static
specifier|final
name|MessageProducer
operator|.
name|Options
name|OPTIONS_DIRECT
init|=
operator|new
name|MessageProducer
operator|.
name|Options
argument_list|()
operator|.
name|withExecution
argument_list|(
name|MessageProducer
operator|.
name|Execution
operator|.
name|SYNC
argument_list|)
operator|.
name|withDelivery
argument_list|(
name|MessageProducer
operator|.
name|Delivery
operator|.
name|DIRECT
argument_list|)
decl_stmt|;
DECL|field|OPTIONS_BROADCAST
specifier|static
specifier|final
name|MessageProducer
operator|.
name|Options
name|OPTIONS_BROADCAST
init|=
operator|new
name|MessageProducer
operator|.
name|Options
argument_list|()
operator|.
name|withExecution
argument_list|(
name|MessageProducer
operator|.
name|Execution
operator|.
name|ASYNC
argument_list|)
operator|.
name|withDelivery
argument_list|(
name|MessageProducer
operator|.
name|Delivery
operator|.
name|BROADCAST
argument_list|)
decl_stmt|;
DECL|field|OPTIONS_BROADCAST_RANDOM
specifier|static
specifier|final
name|MessageProducer
operator|.
name|Options
name|OPTIONS_BROADCAST_RANDOM
init|=
operator|new
name|MessageProducer
operator|.
name|Options
argument_list|()
operator|.
name|withExecution
argument_list|(
name|MessageProducer
operator|.
name|Execution
operator|.
name|ASYNC
argument_list|)
operator|.
name|withDelivery
argument_list|(
name|MessageProducer
operator|.
name|Delivery
operator|.
name|RANDOM
argument_list|)
decl_stmt|;
comment|// ****************************************
comment|// Emums
comment|// ****************************************
DECL|enum|BroadcastType
specifier|public
enum|enum
name|BroadcastType
block|{
DECL|enumConstant|ALL
name|ALL
block|,
DECL|enumConstant|RANDOM
name|RANDOM
block|}
DECL|enum|Action
specifier|public
enum|enum
name|Action
block|{
DECL|enumConstant|DIRECT
name|DIRECT
block|,
DECL|enumConstant|BROADCAST
name|BROADCAST
comment|//TODO: REQUEST_REPLY
block|}
comment|// ****************************************
comment|//
comment|// ****************************************
DECL|method|AtomixMessaging ()
specifier|private
name|AtomixMessaging
parameter_list|()
block|{     }
block|}
end_class

end_unit

