begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.metrics.spi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|metrics
operator|.
name|spi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutorService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ScheduledExecutorService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ThreadFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|InstrumentedExecutorService
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|InstrumentedScheduledExecutorService
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|MetricRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ThreadPoolFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ThreadPoolProfile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ThreadPoolRejectedPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|InOrder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|junit
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|instanceOf
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|notNullValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
DECL|class|InstrumentedThreadPoolFactoryTest
specifier|public
class|class
name|InstrumentedThreadPoolFactoryTest
block|{
DECL|field|METRICS_NAME
specifier|private
specifier|static
specifier|final
name|String
name|METRICS_NAME
init|=
literal|"metrics.name"
decl_stmt|;
annotation|@
name|Mock
DECL|field|registry
specifier|private
name|MetricRegistry
name|registry
decl_stmt|;
annotation|@
name|Mock
DECL|field|threadPoolFactory
specifier|private
name|ThreadPoolFactory
name|threadPoolFactory
decl_stmt|;
annotation|@
name|Mock
DECL|field|threadFactory
specifier|private
name|ThreadFactory
name|threadFactory
decl_stmt|;
DECL|field|profile
specifier|private
name|ThreadPoolProfile
name|profile
decl_stmt|;
DECL|field|instrumentedThreadPoolFactory
specifier|private
name|InstrumentedThreadPoolFactory
name|instrumentedThreadPoolFactory
decl_stmt|;
DECL|field|inOrder
specifier|private
name|InOrder
name|inOrder
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|profile
operator|=
operator|new
name|ThreadPoolProfile
argument_list|(
name|METRICS_NAME
argument_list|)
expr_stmt|;
name|profile
operator|.
name|setDefaultProfile
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|profile
operator|.
name|setMaxPoolSize
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|profile
operator|.
name|setMaxQueueSize
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|profile
operator|.
name|setPoolSize
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|profile
operator|.
name|setKeepAliveTime
argument_list|(
literal|5L
argument_list|)
expr_stmt|;
name|profile
operator|.
name|setTimeUnit
argument_list|(
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
name|profile
operator|.
name|setRejectedPolicy
argument_list|(
name|ThreadPoolRejectedPolicy
operator|.
name|CallerRuns
argument_list|)
expr_stmt|;
name|instrumentedThreadPoolFactory
operator|=
operator|new
name|InstrumentedThreadPoolFactory
argument_list|(
name|registry
argument_list|,
name|threadPoolFactory
argument_list|)
expr_stmt|;
name|inOrder
operator|=
name|Mockito
operator|.
name|inOrder
argument_list|(
name|registry
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNewCacheThreadPool ()
specifier|public
name|void
name|testNewCacheThreadPool
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|ExecutorService
name|executorService
init|=
name|instrumentedThreadPoolFactory
operator|.
name|newCachedThreadPool
argument_list|(
name|threadFactory
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|executorService
argument_list|,
name|is
argument_list|(
name|notNullValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|executorService
argument_list|,
name|is
argument_list|(
name|instanceOf
argument_list|(
name|InstrumentedExecutorService
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|registry
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|meter
argument_list|(
name|anyString
argument_list|()
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|registry
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|counter
argument_list|(
name|anyString
argument_list|()
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|registry
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|meter
argument_list|(
name|anyString
argument_list|()
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|registry
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|timer
argument_list|(
name|anyString
argument_list|()
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNewThreadPool ()
specifier|public
name|void
name|testNewThreadPool
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|ExecutorService
name|executorService
init|=
name|instrumentedThreadPoolFactory
operator|.
name|newThreadPool
argument_list|(
name|profile
argument_list|,
name|threadFactory
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|executorService
argument_list|,
name|is
argument_list|(
name|notNullValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|executorService
argument_list|,
name|is
argument_list|(
name|instanceOf
argument_list|(
name|InstrumentedExecutorService
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|registry
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|meter
argument_list|(
name|MetricRegistry
operator|.
name|name
argument_list|(
name|METRICS_NAME
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"submitted"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|registry
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|counter
argument_list|(
name|MetricRegistry
operator|.
name|name
argument_list|(
name|METRICS_NAME
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"running"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|registry
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|meter
argument_list|(
name|MetricRegistry
operator|.
name|name
argument_list|(
name|METRICS_NAME
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"completed"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|registry
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|timer
argument_list|(
name|MetricRegistry
operator|.
name|name
argument_list|(
name|METRICS_NAME
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"duration"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNewScheduledThreadPool ()
specifier|public
name|void
name|testNewScheduledThreadPool
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|ScheduledExecutorService
name|scheduledExecutorService
init|=
name|instrumentedThreadPoolFactory
operator|.
name|newScheduledThreadPool
argument_list|(
name|profile
argument_list|,
name|threadFactory
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|scheduledExecutorService
argument_list|,
name|is
argument_list|(
name|notNullValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|scheduledExecutorService
argument_list|,
name|is
argument_list|(
name|instanceOf
argument_list|(
name|InstrumentedScheduledExecutorService
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|registry
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|meter
argument_list|(
name|MetricRegistry
operator|.
name|name
argument_list|(
name|METRICS_NAME
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"submitted"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|registry
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|counter
argument_list|(
name|MetricRegistry
operator|.
name|name
argument_list|(
name|METRICS_NAME
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"running"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|registry
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|meter
argument_list|(
name|MetricRegistry
operator|.
name|name
argument_list|(
name|METRICS_NAME
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"completed"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|registry
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|timer
argument_list|(
name|MetricRegistry
operator|.
name|name
argument_list|(
name|METRICS_NAME
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"duration"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|registry
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|meter
argument_list|(
name|MetricRegistry
operator|.
name|name
argument_list|(
name|METRICS_NAME
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"scheduled.once"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|registry
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|meter
argument_list|(
name|MetricRegistry
operator|.
name|name
argument_list|(
name|METRICS_NAME
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"scheduled.repetitively"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|registry
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|counter
argument_list|(
name|MetricRegistry
operator|.
name|name
argument_list|(
name|METRICS_NAME
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"scheduled.overrun"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|registry
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|histogram
argument_list|(
name|MetricRegistry
operator|.
name|name
argument_list|(
name|METRICS_NAME
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"scheduled.percent-of-period"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

