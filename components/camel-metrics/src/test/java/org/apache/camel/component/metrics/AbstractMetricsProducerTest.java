begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.metrics
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|metrics
package|;
end_package

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|MetricRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|InOrder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|runners
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|metrics
operator|.
name|AbstractMetricsProducer
operator|.
name|HEADER_PATTERN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|metrics
operator|.
name|MetricsComponent
operator|.
name|HEADER_HISTOGRAM_VALUE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|metrics
operator|.
name|MetricsComponent
operator|.
name|HEADER_METRIC_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|MatcherAssert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
DECL|class|AbstractMetricsProducerTest
specifier|public
class|class
name|AbstractMetricsProducerTest
block|{
DECL|field|METRIC_NAME
specifier|public
specifier|static
specifier|final
name|String
name|METRIC_NAME
init|=
literal|"a metric"
decl_stmt|;
annotation|@
name|Mock
DECL|field|endpoint
specifier|private
name|AbstractMetricsEndpoint
name|endpoint
decl_stmt|;
annotation|@
name|Mock
DECL|field|exchange
specifier|private
name|Exchange
name|exchange
decl_stmt|;
annotation|@
name|Mock
DECL|field|in
specifier|private
name|Message
name|in
decl_stmt|;
annotation|@
name|Mock
DECL|field|registry
specifier|private
name|MetricRegistry
name|registry
decl_stmt|;
DECL|field|okProducer
specifier|private
name|AbstractMetricsProducer
argument_list|<
name|AbstractMetricsEndpoint
argument_list|>
name|okProducer
decl_stmt|;
DECL|field|failProducer
specifier|private
name|AbstractMetricsProducer
argument_list|<
name|AbstractMetricsEndpoint
argument_list|>
name|failProducer
decl_stmt|;
DECL|field|inOrder
specifier|private
name|InOrder
name|inOrder
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|okProducer
operator|=
operator|new
name|AbstractMetricsProducer
argument_list|<
name|AbstractMetricsEndpoint
argument_list|>
argument_list|(
name|endpoint
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|void
name|doProcess
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|AbstractMetricsEndpoint
name|endpoint
parameter_list|,
name|MetricRegistry
name|registry
parameter_list|,
name|String
name|metricsName
parameter_list|)
throws|throws
name|Exception
block|{             }
block|}
expr_stmt|;
name|failProducer
operator|=
operator|new
name|AbstractMetricsProducer
argument_list|<
name|AbstractMetricsEndpoint
argument_list|>
argument_list|(
name|endpoint
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|void
name|doProcess
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|AbstractMetricsEndpoint
name|endpoint
parameter_list|,
name|MetricRegistry
name|registry
parameter_list|,
name|String
name|metricsName
parameter_list|)
throws|throws
name|Exception
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Muchos problemos"
argument_list|)
throw|;
block|}
block|}
expr_stmt|;
name|inOrder
operator|=
name|Mockito
operator|.
name|inOrder
argument_list|(
name|endpoint
argument_list|,
name|exchange
argument_list|,
name|in
argument_list|,
name|registry
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|endpoint
operator|.
name|getMetricsName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|METRIC_NAME
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|endpoint
operator|.
name|getRegistry
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|registry
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDoProcess ()
specifier|public
name|void
name|testDoProcess
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|in
operator|.
name|getHeader
argument_list|(
name|HEADER_METRIC_NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|in
operator|.
name|removeHeaders
argument_list|(
name|HEADER_PATTERN
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|okProducer
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|exchange
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getIn
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|endpoint
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getMetricsName
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|in
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getHeader
argument_list|(
name|HEADER_METRIC_NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|endpoint
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getRegistry
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|in
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|removeHeaders
argument_list|(
name|HEADER_PATTERN
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDoProcessWithException ()
specifier|public
name|void
name|testDoProcessWithException
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|in
operator|.
name|getHeader
argument_list|(
name|HEADER_METRIC_NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|in
operator|.
name|removeHeaders
argument_list|(
name|HEADER_PATTERN
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|failProducer
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|exchange
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getIn
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|endpoint
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getMetricsName
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|in
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getHeader
argument_list|(
name|HEADER_METRIC_NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|endpoint
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getRegistry
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|in
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|removeHeaders
argument_list|(
name|HEADER_PATTERN
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetMetricsName ()
specifier|public
name|void
name|testGetMetricsName
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|in
operator|.
name|getHeader
argument_list|(
name|HEADER_METRIC_NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"A"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|okProducer
operator|.
name|getMetricsName
argument_list|(
name|in
argument_list|,
literal|"value"
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"A"
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|in
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getHeader
argument_list|(
name|HEADER_METRIC_NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetMetricsNameNotSet ()
specifier|public
name|void
name|testGetMetricsNameNotSet
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|in
operator|.
name|getHeader
argument_list|(
name|HEADER_METRIC_NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|okProducer
operator|.
name|getMetricsName
argument_list|(
name|in
argument_list|,
literal|"name"
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|in
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getHeader
argument_list|(
name|HEADER_METRIC_NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetStringHeader ()
specifier|public
name|void
name|testGetStringHeader
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|in
operator|.
name|getHeader
argument_list|(
name|HEADER_METRIC_NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"A"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|okProducer
operator|.
name|getStringHeader
argument_list|(
name|in
argument_list|,
name|HEADER_METRIC_NAME
argument_list|,
literal|"value"
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"A"
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|in
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getHeader
argument_list|(
name|HEADER_METRIC_NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetStringHeaderWithNullValue ()
specifier|public
name|void
name|testGetStringHeaderWithNullValue
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|in
operator|.
name|getHeader
argument_list|(
name|HEADER_METRIC_NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|okProducer
operator|.
name|getStringHeader
argument_list|(
name|in
argument_list|,
name|HEADER_METRIC_NAME
argument_list|,
literal|"value"
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|in
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getHeader
argument_list|(
name|HEADER_METRIC_NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetStringHeaderWithWhiteSpaces ()
specifier|public
name|void
name|testGetStringHeaderWithWhiteSpaces
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|in
operator|.
name|getHeader
argument_list|(
name|HEADER_METRIC_NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|okProducer
operator|.
name|getStringHeader
argument_list|(
name|in
argument_list|,
name|HEADER_METRIC_NAME
argument_list|,
literal|"value"
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|in
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getHeader
argument_list|(
name|HEADER_METRIC_NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetStringHeaderWithEmptySrting ()
specifier|public
name|void
name|testGetStringHeaderWithEmptySrting
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|in
operator|.
name|getHeader
argument_list|(
name|HEADER_METRIC_NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|okProducer
operator|.
name|getStringHeader
argument_list|(
name|in
argument_list|,
name|HEADER_METRIC_NAME
argument_list|,
literal|"value"
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|in
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getHeader
argument_list|(
name|HEADER_METRIC_NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetLongHeader ()
specifier|public
name|void
name|testGetLongHeader
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|in
operator|.
name|getHeader
argument_list|(
name|HEADER_HISTOGRAM_VALUE
argument_list|,
literal|19L
argument_list|,
name|Long
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|201L
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|okProducer
operator|.
name|getLongHeader
argument_list|(
name|in
argument_list|,
name|HEADER_HISTOGRAM_VALUE
argument_list|,
literal|19L
argument_list|)
argument_list|,
name|is
argument_list|(
literal|201L
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|in
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getHeader
argument_list|(
name|HEADER_HISTOGRAM_VALUE
argument_list|,
literal|19L
argument_list|,
name|Long
operator|.
name|class
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testClearMetricsHeaders ()
specifier|public
name|void
name|testClearMetricsHeaders
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|in
operator|.
name|removeHeaders
argument_list|(
name|HEADER_PATTERN
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|okProducer
operator|.
name|clearMetricsHeaders
argument_list|(
name|in
argument_list|)
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|in
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|removeHeaders
argument_list|(
name|HEADER_PATTERN
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testClearRealHeaders ()
specifier|public
name|void
name|testClearRealHeaders
parameter_list|()
throws|throws
name|Exception
block|{
name|Message
name|msg
init|=
operator|new
name|DefaultMessage
argument_list|()
decl_stmt|;
name|Object
name|val
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|HEADER_HISTOGRAM_VALUE
argument_list|,
literal|109L
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
name|HEADER_METRIC_NAME
argument_list|,
literal|"the metric"
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setHeader
argument_list|(
literal|"notRemoved"
argument_list|,
name|val
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|msg
operator|.
name|getHeaders
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|msg
operator|.
name|getHeader
argument_list|(
name|HEADER_HISTOGRAM_VALUE
argument_list|,
name|Long
operator|.
name|class
argument_list|)
argument_list|,
name|is
argument_list|(
literal|109L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|msg
operator|.
name|getHeader
argument_list|(
name|HEADER_METRIC_NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"the metric"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|msg
operator|.
name|getHeader
argument_list|(
literal|"notRemoved"
argument_list|)
argument_list|,
name|is
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
name|okProducer
operator|.
name|clearMetricsHeaders
argument_list|(
name|msg
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|msg
operator|.
name|getHeaders
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|msg
operator|.
name|getHeader
argument_list|(
literal|"notRemoved"
argument_list|)
argument_list|,
name|is
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

