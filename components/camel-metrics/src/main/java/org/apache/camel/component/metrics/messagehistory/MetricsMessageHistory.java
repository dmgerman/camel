begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.metrics.messagehistory
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|metrics
operator|.
name|messagehistory
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|MessageHistory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|NamedNode
import|;
end_import

begin_comment
comment|/**  * A codahale metrics based {@link MessageHistory}  */
end_comment

begin_class
DECL|class|MetricsMessageHistory
specifier|public
class|class
name|MetricsMessageHistory
implements|implements
name|MessageHistory
block|{
DECL|field|routeId
specifier|private
specifier|final
name|String
name|routeId
decl_stmt|;
DECL|field|namedNode
specifier|private
specifier|final
name|NamedNode
name|namedNode
decl_stmt|;
DECL|field|timer
specifier|private
specifier|final
name|Timer
name|timer
decl_stmt|;
DECL|field|context
specifier|private
specifier|final
name|Timer
operator|.
name|Context
name|context
decl_stmt|;
DECL|method|MetricsMessageHistory (String routeId, NamedNode namedNode, Timer timer)
specifier|public
name|MetricsMessageHistory
parameter_list|(
name|String
name|routeId
parameter_list|,
name|NamedNode
name|namedNode
parameter_list|,
name|Timer
name|timer
parameter_list|)
block|{
name|this
operator|.
name|routeId
operator|=
name|routeId
expr_stmt|;
name|this
operator|.
name|namedNode
operator|=
name|namedNode
expr_stmt|;
name|this
operator|.
name|timer
operator|=
name|timer
expr_stmt|;
name|this
operator|.
name|context
operator|=
name|timer
operator|.
name|time
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getRouteId ()
specifier|public
name|String
name|getRouteId
parameter_list|()
block|{
return|return
name|routeId
return|;
block|}
annotation|@
name|Override
DECL|method|getNode ()
specifier|public
name|NamedNode
name|getNode
parameter_list|()
block|{
return|return
name|namedNode
return|;
block|}
annotation|@
name|Override
DECL|method|getTimestamp ()
specifier|public
name|Date
name|getTimestamp
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getElapsed ()
specifier|public
name|long
name|getElapsed
parameter_list|()
block|{
return|return
name|timer
operator|.
name|getCount
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|nodeProcessingDone ()
specifier|public
name|void
name|nodeProcessingDone
parameter_list|()
block|{
name|context
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

