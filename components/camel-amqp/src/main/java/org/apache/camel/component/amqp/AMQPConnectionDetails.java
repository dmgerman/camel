begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.amqp
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|amqp
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|PropertiesComponent
import|;
end_import

begin_class
DECL|class|AMQPConnectionDetails
specifier|public
class|class
name|AMQPConnectionDetails
block|{
DECL|field|AMQP_HOST
specifier|public
specifier|static
specifier|final
name|String
name|AMQP_HOST
init|=
literal|"AMQP_SERVICE_HOST"
decl_stmt|;
DECL|field|AMQP_PORT
specifier|public
specifier|static
specifier|final
name|String
name|AMQP_PORT
init|=
literal|"AMQP_SERVICE_PORT"
decl_stmt|;
DECL|field|AMQP_USERNAME
specifier|public
specifier|static
specifier|final
name|String
name|AMQP_USERNAME
init|=
literal|"AMQP_SERVICE_USERNAME"
decl_stmt|;
DECL|field|AMQP_PASSWORD
specifier|public
specifier|static
specifier|final
name|String
name|AMQP_PASSWORD
init|=
literal|"AMQP_SERVICE_PASSWORD"
decl_stmt|;
DECL|field|AMQP_SET_TOPIC_PREFIX
specifier|public
specifier|static
specifier|final
name|String
name|AMQP_SET_TOPIC_PREFIX
init|=
literal|"AMQP_SET_TOPIC_PREFIX"
decl_stmt|;
DECL|field|uri
specifier|private
specifier|final
name|String
name|uri
decl_stmt|;
DECL|field|username
specifier|private
specifier|final
name|String
name|username
decl_stmt|;
DECL|field|password
specifier|private
specifier|final
name|String
name|password
decl_stmt|;
DECL|field|setTopicPrefix
specifier|private
specifier|final
name|boolean
name|setTopicPrefix
decl_stmt|;
DECL|method|AMQPConnectionDetails (String uri, String username, String password)
specifier|public
name|AMQPConnectionDetails
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|)
block|{
name|this
operator|.
name|uri
operator|=
name|uri
expr_stmt|;
name|this
operator|.
name|username
operator|=
name|username
expr_stmt|;
name|this
operator|.
name|password
operator|=
name|password
expr_stmt|;
name|this
operator|.
name|setTopicPrefix
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|AMQPConnectionDetails (String uri, String username, String password, boolean setTopicPrefix)
specifier|public
name|AMQPConnectionDetails
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|,
name|boolean
name|setTopicPrefix
parameter_list|)
block|{
name|this
operator|.
name|uri
operator|=
name|uri
expr_stmt|;
name|this
operator|.
name|username
operator|=
name|username
expr_stmt|;
name|this
operator|.
name|password
operator|=
name|password
expr_stmt|;
name|this
operator|.
name|setTopicPrefix
operator|=
name|setTopicPrefix
expr_stmt|;
block|}
DECL|method|AMQPConnectionDetails (String uri)
specifier|public
name|AMQPConnectionDetails
parameter_list|(
name|String
name|uri
parameter_list|)
block|{
name|this
argument_list|(
name|uri
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|discoverAMQP (CamelContext camelContext)
specifier|public
specifier|static
name|AMQPConnectionDetails
name|discoverAMQP
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|)
block|{
try|try
block|{
name|PropertiesComponent
name|propertiesComponent
init|=
name|camelContext
operator|.
name|getComponent
argument_list|(
literal|"properties"
argument_list|,
name|PropertiesComponent
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|host
init|=
name|property
argument_list|(
name|propertiesComponent
argument_list|,
name|AMQP_HOST
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|int
name|port
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|property
argument_list|(
name|propertiesComponent
argument_list|,
name|AMQP_PORT
argument_list|,
literal|"5672"
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|username
init|=
name|property
argument_list|(
name|propertiesComponent
argument_list|,
name|AMQP_USERNAME
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|String
name|password
init|=
name|property
argument_list|(
name|propertiesComponent
argument_list|,
name|AMQP_PASSWORD
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|boolean
name|setTopicPrefix
init|=
name|Boolean
operator|.
name|parseBoolean
argument_list|(
name|property
argument_list|(
name|propertiesComponent
argument_list|,
name|AMQP_SET_TOPIC_PREFIX
argument_list|,
literal|"true"
argument_list|)
argument_list|)
decl_stmt|;
return|return
operator|new
name|AMQPConnectionDetails
argument_list|(
literal|"amqp://"
operator|+
name|host
operator|+
literal|":"
operator|+
name|port
argument_list|,
name|username
argument_list|,
name|password
argument_list|,
name|setTopicPrefix
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|uri ()
specifier|public
name|String
name|uri
parameter_list|()
block|{
return|return
name|uri
return|;
block|}
DECL|method|username ()
specifier|public
name|String
name|username
parameter_list|()
block|{
return|return
name|username
return|;
block|}
DECL|method|password ()
specifier|public
name|String
name|password
parameter_list|()
block|{
return|return
name|password
return|;
block|}
DECL|method|setTopicPrefix ()
specifier|public
name|boolean
name|setTopicPrefix
parameter_list|()
block|{
return|return
name|setTopicPrefix
return|;
block|}
comment|// Helpers
DECL|method|property (PropertiesComponent propertiesComponent, String key, String defaultValue)
specifier|private
specifier|static
name|String
name|property
parameter_list|(
name|PropertiesComponent
name|propertiesComponent
parameter_list|,
name|String
name|key
parameter_list|,
name|String
name|defaultValue
parameter_list|)
block|{
try|try
block|{
return|return
name|propertiesComponent
operator|.
name|parseUri
argument_list|(
name|propertiesComponent
operator|.
name|getPrefixToken
argument_list|()
operator|+
name|key
operator|+
name|propertiesComponent
operator|.
name|getSuffixToken
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
return|return
name|defaultValue
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

