begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.docker
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|docker
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|docker
operator|.
name|exception
operator|.
name|DockerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_comment
comment|/**  * The elements representing a client initiating a connection to Docker  */
end_comment

begin_class
DECL|class|DockerClientProfile
specifier|public
class|class
name|DockerClientProfile
block|{
DECL|field|host
specifier|private
name|String
name|host
decl_stmt|;
DECL|field|port
specifier|private
name|Integer
name|port
decl_stmt|;
DECL|field|username
specifier|private
name|String
name|username
decl_stmt|;
DECL|field|password
specifier|private
name|String
name|password
decl_stmt|;
DECL|field|email
specifier|private
name|String
name|email
decl_stmt|;
DECL|field|serverAddress
specifier|private
name|String
name|serverAddress
decl_stmt|;
DECL|field|requestTimeout
specifier|private
name|Integer
name|requestTimeout
decl_stmt|;
DECL|field|secure
specifier|private
name|Boolean
name|secure
decl_stmt|;
DECL|field|certPath
specifier|private
name|String
name|certPath
decl_stmt|;
DECL|field|maxTotalConnections
specifier|private
name|Integer
name|maxTotalConnections
decl_stmt|;
DECL|field|maxPerRouteConnections
specifier|private
name|Integer
name|maxPerRouteConnections
decl_stmt|;
DECL|field|tlsVerify
specifier|private
name|Boolean
name|tlsVerify
decl_stmt|;
DECL|field|socket
specifier|private
name|Boolean
name|socket
decl_stmt|;
DECL|field|cmdExecFactory
specifier|private
name|String
name|cmdExecFactory
decl_stmt|;
DECL|method|getHost ()
specifier|public
name|String
name|getHost
parameter_list|()
block|{
return|return
name|host
return|;
block|}
DECL|method|setHost (String host)
specifier|public
name|void
name|setHost
parameter_list|(
name|String
name|host
parameter_list|)
block|{
name|this
operator|.
name|host
operator|=
name|host
expr_stmt|;
block|}
DECL|method|getPort ()
specifier|public
name|Integer
name|getPort
parameter_list|()
block|{
return|return
name|port
return|;
block|}
DECL|method|setPort (Integer port)
specifier|public
name|void
name|setPort
parameter_list|(
name|Integer
name|port
parameter_list|)
block|{
name|this
operator|.
name|port
operator|=
name|port
expr_stmt|;
block|}
DECL|method|getUsername ()
specifier|public
name|String
name|getUsername
parameter_list|()
block|{
return|return
name|username
return|;
block|}
DECL|method|setUsername (String username)
specifier|public
name|void
name|setUsername
parameter_list|(
name|String
name|username
parameter_list|)
block|{
name|this
operator|.
name|username
operator|=
name|username
expr_stmt|;
block|}
DECL|method|getPassword ()
specifier|public
name|String
name|getPassword
parameter_list|()
block|{
return|return
name|password
return|;
block|}
DECL|method|setPassword (String password)
specifier|public
name|void
name|setPassword
parameter_list|(
name|String
name|password
parameter_list|)
block|{
name|this
operator|.
name|password
operator|=
name|password
expr_stmt|;
block|}
DECL|method|getEmail ()
specifier|public
name|String
name|getEmail
parameter_list|()
block|{
return|return
name|email
return|;
block|}
DECL|method|setEmail (String email)
specifier|public
name|void
name|setEmail
parameter_list|(
name|String
name|email
parameter_list|)
block|{
name|this
operator|.
name|email
operator|=
name|email
expr_stmt|;
block|}
DECL|method|getServerAddress ()
specifier|public
name|String
name|getServerAddress
parameter_list|()
block|{
return|return
name|serverAddress
return|;
block|}
DECL|method|setServerAddress (String serverAddress)
specifier|public
name|void
name|setServerAddress
parameter_list|(
name|String
name|serverAddress
parameter_list|)
block|{
name|this
operator|.
name|serverAddress
operator|=
name|serverAddress
expr_stmt|;
block|}
DECL|method|getRequestTimeout ()
specifier|public
name|Integer
name|getRequestTimeout
parameter_list|()
block|{
return|return
name|requestTimeout
return|;
block|}
DECL|method|setRequestTimeout (Integer requestTimeout)
specifier|public
name|void
name|setRequestTimeout
parameter_list|(
name|Integer
name|requestTimeout
parameter_list|)
block|{
name|this
operator|.
name|requestTimeout
operator|=
name|requestTimeout
expr_stmt|;
block|}
DECL|method|isSecure ()
specifier|public
name|Boolean
name|isSecure
parameter_list|()
block|{
return|return
name|secure
return|;
block|}
DECL|method|setSecure (Boolean secure)
specifier|public
name|void
name|setSecure
parameter_list|(
name|Boolean
name|secure
parameter_list|)
block|{
name|this
operator|.
name|secure
operator|=
name|secure
expr_stmt|;
block|}
DECL|method|getCertPath ()
specifier|public
name|String
name|getCertPath
parameter_list|()
block|{
return|return
name|certPath
return|;
block|}
DECL|method|setCertPath (String certPath)
specifier|public
name|void
name|setCertPath
parameter_list|(
name|String
name|certPath
parameter_list|)
block|{
name|this
operator|.
name|certPath
operator|=
name|certPath
expr_stmt|;
block|}
DECL|method|getMaxTotalConnections ()
specifier|public
name|Integer
name|getMaxTotalConnections
parameter_list|()
block|{
return|return
name|maxTotalConnections
return|;
block|}
DECL|method|setMaxTotalConnections (Integer maxTotalConnections)
specifier|public
name|void
name|setMaxTotalConnections
parameter_list|(
name|Integer
name|maxTotalConnections
parameter_list|)
block|{
name|this
operator|.
name|maxTotalConnections
operator|=
name|maxTotalConnections
expr_stmt|;
block|}
DECL|method|getMaxPerRouteConnections ()
specifier|public
name|Integer
name|getMaxPerRouteConnections
parameter_list|()
block|{
return|return
name|maxPerRouteConnections
return|;
block|}
DECL|method|setMaxPerRouteConnections (Integer maxPerRouteConnections)
specifier|public
name|void
name|setMaxPerRouteConnections
parameter_list|(
name|Integer
name|maxPerRouteConnections
parameter_list|)
block|{
name|this
operator|.
name|maxPerRouteConnections
operator|=
name|maxPerRouteConnections
expr_stmt|;
block|}
DECL|method|toUrl ()
specifier|public
name|String
name|toUrl
parameter_list|()
throws|throws
name|DockerException
block|{
name|ObjectHelper
operator|.
name|notNull
argument_list|(
name|this
operator|.
name|host
argument_list|,
literal|"host"
argument_list|)
expr_stmt|;
name|ObjectHelper
operator|.
name|notNull
argument_list|(
name|this
operator|.
name|port
argument_list|,
literal|"port"
argument_list|)
expr_stmt|;
return|return
operator|(
operator|(
name|this
operator|.
name|socket
operator|)
condition|?
literal|"unix"
else|:
literal|"tcp"
operator|)
operator|+
literal|"://"
operator|+
name|host
operator|+
literal|":"
operator|+
name|port
return|;
block|}
DECL|method|isTlsVerify ()
specifier|public
name|Boolean
name|isTlsVerify
parameter_list|()
block|{
return|return
name|tlsVerify
return|;
block|}
DECL|method|setTlsVerify (Boolean tlsVerify)
specifier|public
name|void
name|setTlsVerify
parameter_list|(
name|Boolean
name|tlsVerify
parameter_list|)
block|{
name|this
operator|.
name|tlsVerify
operator|=
name|tlsVerify
expr_stmt|;
block|}
DECL|method|isSocket ()
specifier|public
name|Boolean
name|isSocket
parameter_list|()
block|{
return|return
name|socket
return|;
block|}
DECL|method|setSocket (Boolean socket)
specifier|public
name|void
name|setSocket
parameter_list|(
name|Boolean
name|socket
parameter_list|)
block|{
name|this
operator|.
name|socket
operator|=
name|socket
expr_stmt|;
block|}
DECL|method|getCmdExecFactory ()
specifier|public
name|String
name|getCmdExecFactory
parameter_list|()
block|{
return|return
name|cmdExecFactory
return|;
block|}
DECL|method|setCmdExecFactory (String cmdExecFactory)
specifier|public
name|void
name|setCmdExecFactory
parameter_list|(
name|String
name|cmdExecFactory
parameter_list|)
block|{
name|this
operator|.
name|cmdExecFactory
operator|=
name|cmdExecFactory
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
specifier|final
name|int
name|prime
init|=
literal|31
decl_stmt|;
name|int
name|result
init|=
literal|1
decl_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|certPath
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|certPath
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|email
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|email
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|tlsVerify
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|tlsVerify
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|host
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|host
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|socket
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|socket
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|maxPerRouteConnections
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|maxPerRouteConnections
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|maxTotalConnections
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|maxTotalConnections
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|password
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|password
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|port
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|port
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|requestTimeout
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|requestTimeout
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|secure
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|secure
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|serverAddress
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|serverAddress
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|username
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|username
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|cmdExecFactory
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|cmdExecFactory
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object obj)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|obj
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|getClass
argument_list|()
operator|!=
name|obj
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|DockerClientProfile
name|other
init|=
operator|(
name|DockerClientProfile
operator|)
name|obj
decl_stmt|;
if|if
condition|(
name|certPath
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|certPath
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|certPath
operator|.
name|equals
argument_list|(
name|other
operator|.
name|certPath
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|email
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|email
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|email
operator|.
name|equals
argument_list|(
name|other
operator|.
name|email
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|socket
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|socket
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|socket
operator|.
name|equals
argument_list|(
name|other
operator|.
name|socket
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|host
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|host
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|host
operator|.
name|equals
argument_list|(
name|other
operator|.
name|host
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|tlsVerify
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|tlsVerify
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|tlsVerify
operator|.
name|equals
argument_list|(
name|other
operator|.
name|tlsVerify
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|maxPerRouteConnections
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|maxPerRouteConnections
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|maxPerRouteConnections
operator|.
name|equals
argument_list|(
name|other
operator|.
name|maxPerRouteConnections
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|maxTotalConnections
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|maxTotalConnections
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|maxTotalConnections
operator|.
name|equals
argument_list|(
name|other
operator|.
name|maxTotalConnections
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|password
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|password
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|password
operator|.
name|equals
argument_list|(
name|other
operator|.
name|password
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|port
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|port
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|port
operator|.
name|equals
argument_list|(
name|other
operator|.
name|port
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|requestTimeout
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|requestTimeout
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|requestTimeout
operator|.
name|equals
argument_list|(
name|other
operator|.
name|requestTimeout
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|secure
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|secure
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|secure
operator|.
name|equals
argument_list|(
name|other
operator|.
name|secure
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|serverAddress
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|serverAddress
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|serverAddress
operator|.
name|equals
argument_list|(
name|other
operator|.
name|serverAddress
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|username
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|username
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|username
operator|.
name|equals
argument_list|(
name|other
operator|.
name|username
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|cmdExecFactory
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|cmdExecFactory
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|cmdExecFactory
operator|.
name|equals
argument_list|(
name|other
operator|.
name|cmdExecFactory
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
block|}
end_class

end_unit

