begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.docker.producer
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|docker
operator|.
name|producer
package|;
end_package

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|DockerClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|AttachContainerCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|AuthCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|BuildImageCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|CommitCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|ContainerDiffCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|CopyFileFromContainerCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|CreateContainerCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|CreateImageCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|DockerCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|InfoCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|InspectContainerCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|InspectImageCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|KillContainerCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|ListContainersCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|ListImagesCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|LogContainerCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|PauseContainerCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|PingCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|PullImageCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|PushImageCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|RemoveContainerCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|RemoveImageCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|RestartContainerCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|SearchImagesCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|StartContainerCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|StopContainerCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|TagImageCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|TopContainerCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|UnpauseContainerCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|VersionCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|command
operator|.
name|WaitContainerCmd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|model
operator|.
name|AuthConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|model
operator|.
name|Bind
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|model
operator|.
name|Device
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|model
operator|.
name|ExposedPort
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|model
operator|.
name|ExposedPorts
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|model
operator|.
name|Link
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|model
operator|.
name|LxcConf
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|model
operator|.
name|Ports
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|model
operator|.
name|RestartPolicy
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|model
operator|.
name|Volume
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dockerjava
operator|.
name|api
operator|.
name|model
operator|.
name|Volumes
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|docker
operator|.
name|DockerClientFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|docker
operator|.
name|DockerConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|docker
operator|.
name|DockerConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|docker
operator|.
name|DockerEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|docker
operator|.
name|DockerHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|docker
operator|.
name|DockerOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|docker
operator|.
name|exception
operator|.
name|DockerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * The Docker producer.  */
end_comment

begin_class
DECL|class|DockerProducer
specifier|public
class|class
name|DockerProducer
extends|extends
name|DefaultProducer
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|DockerProducer
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|configuration
specifier|private
name|DockerConfiguration
name|configuration
decl_stmt|;
DECL|method|DockerProducer (DockerEndpoint endpoint)
specifier|public
name|DockerProducer
parameter_list|(
name|DockerEndpoint
name|endpoint
parameter_list|)
block|{
name|super
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
name|this
operator|.
name|configuration
operator|=
name|endpoint
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
block|}
DECL|method|process (Exchange exchange)
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerCmd
argument_list|<
name|?
argument_list|>
name|dockerCmd
init|=
literal|null
decl_stmt|;
name|Message
name|message
init|=
name|exchange
operator|.
name|getIn
argument_list|()
decl_stmt|;
name|DockerClient
name|client
init|=
name|DockerClientFactory
operator|.
name|getDockerClient
argument_list|(
name|configuration
argument_list|,
name|message
argument_list|)
decl_stmt|;
name|DockerOperation
name|operation
init|=
name|configuration
operator|.
name|getOperation
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|operation
condition|)
block|{
case|case
name|AUTH
case|:
name|dockerCmd
operator|=
name|executeAuthRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|INFO
case|:
name|dockerCmd
operator|=
name|executeInfoRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|LIST_IMAGES
case|:
name|dockerCmd
operator|=
name|executeListImagesRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|PING
case|:
name|dockerCmd
operator|=
name|executePingRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|VERSION
case|:
name|dockerCmd
operator|=
name|executeVersionRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|PULL_IMAGE
case|:
name|dockerCmd
operator|=
name|executePullImageRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|PUSH_IMAGE
case|:
name|dockerCmd
operator|=
name|executePushImageRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|CREATE_IMAGE
case|:
name|dockerCmd
operator|=
name|executeCreateImageRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|SEARCH_IMAGES
case|:
name|dockerCmd
operator|=
name|executeSearchImageRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|REMOVE_IMAGE
case|:
name|dockerCmd
operator|=
name|executeRemoveImageRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|INSPECT_IMAGE
case|:
name|dockerCmd
operator|=
name|executeInspectImageRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|LIST_CONTAINERS
case|:
name|dockerCmd
operator|=
name|executeListContainersRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|REMOVE_CONTAINER
case|:
name|dockerCmd
operator|=
name|executeRemoveContainerRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|INSPECT_CONTAINER
case|:
name|dockerCmd
operator|=
name|executeInspectContainerRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|WAIT_CONTAINER
case|:
name|dockerCmd
operator|=
name|executeWaitContainerRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|ATTACH_CONTAINER
case|:
name|dockerCmd
operator|=
name|executeAttachContainerRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|LOG_CONTAINER
case|:
name|dockerCmd
operator|=
name|executeLogContainerRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|CONTAINER_COPY_FILE
case|:
name|dockerCmd
operator|=
name|executeCopyFileContainerRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|DIFF_CONTAINER
case|:
name|dockerCmd
operator|=
name|executeDiffContainerRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|STOP_CONTAINER
case|:
name|dockerCmd
operator|=
name|executeStopContainerRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|KILL_CONTAINER
case|:
name|dockerCmd
operator|=
name|executeKillContainerRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|RESTART_CONTAINER
case|:
name|dockerCmd
operator|=
name|executeRestartContainerRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|TOP_CONTAINER
case|:
name|dockerCmd
operator|=
name|executeTopContainerRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|TAG_IMAGE
case|:
name|dockerCmd
operator|=
name|executeTagImageRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|PAUSE_CONTAINER
case|:
name|dockerCmd
operator|=
name|executePauseContainerRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|UNPAUSE_CONTAINER
case|:
name|dockerCmd
operator|=
name|executeUnpauseContainerRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|BUILD_IMAGE
case|:
name|dockerCmd
operator|=
name|executeBuildImageRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|COMMIT_CONTAINER
case|:
name|dockerCmd
operator|=
name|executeCommitContainerRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|CREATE_CONTAINER
case|:
name|dockerCmd
operator|=
name|executeCreateContainerRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
case|case
name|START_CONTAINER
case|:
name|dockerCmd
operator|=
name|executeStartContainerRequest
argument_list|(
name|client
argument_list|,
name|message
argument_list|)
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|DockerException
argument_list|(
literal|"Invalid operation: "
operator|+
name|operation
argument_list|)
throw|;
block|}
name|Object
name|result
init|=
name|dockerCmd
operator|.
name|exec
argument_list|()
decl_stmt|;
comment|// If request included a response, set as body
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*********************      * Misc Requests      ********************/
comment|/**      * Produces a Authorization request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeAuthRequest (DockerClient client, Message message)
specifier|private
name|AuthCmd
name|executeAuthRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Auth Request"
argument_list|)
expr_stmt|;
return|return
name|client
operator|.
name|authCmd
argument_list|()
return|;
block|}
comment|/**      * Produces a platform information request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeInfoRequest (DockerClient client, Message message)
specifier|private
name|InfoCmd
name|executeInfoRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Info Request"
argument_list|)
expr_stmt|;
name|InfoCmd
name|infoCmd
init|=
name|client
operator|.
name|infoCmd
argument_list|()
decl_stmt|;
return|return
name|infoCmd
return|;
block|}
comment|/**      * Executes a ping platform request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executePingRequest (DockerClient client, Message message)
specifier|private
name|PingCmd
name|executePingRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Ping Request"
argument_list|)
expr_stmt|;
name|PingCmd
name|pingCmd
init|=
name|client
operator|.
name|pingCmd
argument_list|()
decl_stmt|;
return|return
name|pingCmd
return|;
block|}
comment|/**      * Executes a platform version request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeVersionRequest (DockerClient client, Message message)
specifier|private
name|VersionCmd
name|executeVersionRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Version Request"
argument_list|)
expr_stmt|;
name|VersionCmd
name|versionCmd
init|=
name|client
operator|.
name|versionCmd
argument_list|()
decl_stmt|;
return|return
name|versionCmd
return|;
block|}
comment|/*********************      * Image Requests      ********************/
comment|/**      * Performs a list images request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeListImagesRequest (DockerClient client, Message message)
specifier|private
name|ListImagesCmd
name|executeListImagesRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Images List Request"
argument_list|)
expr_stmt|;
name|ListImagesCmd
name|listImagesCmd
init|=
name|client
operator|.
name|listImagesCmd
argument_list|()
decl_stmt|;
name|String
name|filter
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_FILTER
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|filter
operator|!=
literal|null
condition|)
block|{
name|listImagesCmd
operator|.
name|withFilter
argument_list|(
name|filter
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|showAll
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_SHOW_ALL
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|showAll
operator|!=
literal|null
operator|&&
name|showAll
condition|)
block|{
name|listImagesCmd
operator|.
name|withShowAll
argument_list|(
name|showAll
argument_list|)
expr_stmt|;
block|}
return|return
name|listImagesCmd
return|;
block|}
comment|/**      * Performs a create image request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeCreateImageRequest (DockerClient client, Message message)
specifier|private
name|CreateImageCmd
name|executeCreateImageRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Create Image Request"
argument_list|)
expr_stmt|;
name|String
name|repository
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_REPOSITORY
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|InputStream
name|inputStream
init|=
name|message
operator|.
name|getBody
argument_list|(
name|InputStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|CreateImageCmd
name|createImageCmd
init|=
name|client
operator|.
name|createImageCmd
argument_list|(
name|repository
argument_list|,
name|inputStream
argument_list|)
decl_stmt|;
return|return
name|createImageCmd
return|;
block|}
comment|/**      * Produces a build image request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeBuildImageRequest (DockerClient client, Message message)
specifier|private
name|BuildImageCmd
name|executeBuildImageRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Build Image Request"
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|message
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|BuildImageCmd
name|buildImageCmd
decl_stmt|;
if|if
condition|(
name|body
operator|!=
literal|null
operator|&&
name|body
operator|instanceof
name|InputStream
condition|)
block|{
name|buildImageCmd
operator|=
name|client
operator|.
name|buildImageCmd
argument_list|(
operator|(
name|InputStream
operator|)
name|body
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|body
operator|!=
literal|null
operator|&&
name|body
operator|instanceof
name|File
condition|)
block|{
name|buildImageCmd
operator|=
name|client
operator|.
name|buildImageCmd
argument_list|(
operator|(
name|File
operator|)
name|body
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|DockerException
argument_list|(
literal|"Unable to location source Image"
argument_list|)
throw|;
block|}
name|Boolean
name|noCache
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_NO_CACHE
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|noCache
operator|!=
literal|null
operator|&&
name|noCache
condition|)
block|{
name|buildImageCmd
operator|.
name|withNoCache
argument_list|()
expr_stmt|;
block|}
name|Boolean
name|quiet
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_QUIET
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|quiet
operator|!=
literal|null
operator|&&
name|quiet
condition|)
block|{
name|buildImageCmd
operator|.
name|withQuiet
argument_list|()
expr_stmt|;
block|}
name|Boolean
name|remove
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_REMOVE
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|remove
operator|!=
literal|null
operator|&&
name|remove
condition|)
block|{
name|buildImageCmd
operator|.
name|withRemove
argument_list|()
expr_stmt|;
block|}
name|String
name|tag
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_TAG
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|tag
operator|!=
literal|null
condition|)
block|{
name|buildImageCmd
operator|.
name|withTag
argument_list|(
name|tag
argument_list|)
expr_stmt|;
block|}
return|return
name|buildImageCmd
return|;
block|}
comment|/**      * Produces a pull image request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executePullImageRequest (DockerClient client, Message message)
specifier|private
name|PullImageCmd
name|executePullImageRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Pull Image Request"
argument_list|)
expr_stmt|;
name|String
name|repository
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_REPOSITORY
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|PullImageCmd
name|pullImageCmd
init|=
name|client
operator|.
name|pullImageCmd
argument_list|(
name|repository
argument_list|)
decl_stmt|;
name|String
name|registry
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_REGISTRY
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|registry
operator|!=
literal|null
condition|)
block|{
name|pullImageCmd
operator|.
name|withRegistry
argument_list|(
name|registry
argument_list|)
expr_stmt|;
block|}
name|String
name|tag
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_TAG
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|tag
operator|!=
literal|null
condition|)
block|{
name|pullImageCmd
operator|.
name|withTag
argument_list|(
name|tag
argument_list|)
expr_stmt|;
block|}
return|return
name|pullImageCmd
return|;
block|}
comment|/**      * Produces a push image request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executePushImageRequest (DockerClient client, Message message)
specifier|private
name|PushImageCmd
name|executePushImageRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Push Image Request"
argument_list|)
expr_stmt|;
name|String
name|name
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_NAME
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|PushImageCmd
name|pushImageCmd
init|=
name|client
operator|.
name|pushImageCmd
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|AuthConfig
name|authConfig
init|=
name|getAuthConfig
argument_list|(
name|client
argument_list|)
decl_stmt|;
if|if
condition|(
name|authConfig
operator|!=
literal|null
condition|)
block|{
name|pushImageCmd
operator|.
name|withAuthConfig
argument_list|(
name|authConfig
argument_list|)
expr_stmt|;
block|}
return|return
name|pushImageCmd
return|;
block|}
comment|/**      * Produces a search image request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeSearchImageRequest (DockerClient client, Message message)
specifier|private
name|SearchImagesCmd
name|executeSearchImageRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Search Image Request"
argument_list|)
expr_stmt|;
name|String
name|term
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_TERM
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|SearchImagesCmd
name|searchImagesCmd
init|=
name|client
operator|.
name|searchImagesCmd
argument_list|(
name|term
argument_list|)
decl_stmt|;
return|return
name|searchImagesCmd
return|;
block|}
comment|/**      * Produces a remove image request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeRemoveImageRequest (DockerClient client, Message message)
specifier|private
name|RemoveImageCmd
name|executeRemoveImageRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Remove Image Request"
argument_list|)
expr_stmt|;
name|String
name|imageId
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_IMAGE_ID
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|RemoveImageCmd
name|removeImagesCmd
init|=
name|client
operator|.
name|removeImageCmd
argument_list|(
name|imageId
argument_list|)
decl_stmt|;
name|Boolean
name|force
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_FORCE
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|force
operator|!=
literal|null
operator|&&
name|force
condition|)
block|{
name|removeImagesCmd
operator|.
name|withForce
argument_list|()
expr_stmt|;
block|}
name|Boolean
name|prune
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_NO_PRUNE
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|prune
operator|!=
literal|null
operator|&&
name|prune
condition|)
block|{
name|removeImagesCmd
operator|.
name|withNoPrune
argument_list|()
expr_stmt|;
block|}
return|return
name|removeImagesCmd
return|;
block|}
comment|/**      * Produces a tag image request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeTagImageRequest (DockerClient client, Message message)
specifier|private
name|TagImageCmd
name|executeTagImageRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Tag Image Request"
argument_list|)
expr_stmt|;
name|String
name|imageId
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_IMAGE_ID
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|repository
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_REPOSITORY
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|tag
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_TAG
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|TagImageCmd
name|tagImageCmd
init|=
name|client
operator|.
name|tagImageCmd
argument_list|(
name|imageId
argument_list|,
name|repository
argument_list|,
name|tag
argument_list|)
decl_stmt|;
name|Boolean
name|force
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_FORCE
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|force
operator|!=
literal|null
operator|&&
name|force
condition|)
block|{
name|tagImageCmd
operator|.
name|withForce
argument_list|()
expr_stmt|;
block|}
return|return
name|tagImageCmd
return|;
block|}
comment|/**      * Produces a inspect image request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeInspectImageRequest (DockerClient client, Message message)
specifier|private
name|InspectImageCmd
name|executeInspectImageRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Inspect Image Request"
argument_list|)
expr_stmt|;
name|String
name|imageId
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_IMAGE_ID
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|InspectImageCmd
name|inspectImageCmd
init|=
name|client
operator|.
name|inspectImageCmd
argument_list|(
name|imageId
argument_list|)
decl_stmt|;
return|return
name|inspectImageCmd
return|;
block|}
comment|/*********************      * Container Requests      ********************/
comment|/**      * Produces a list containers request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeListContainersRequest (DockerClient client, Message message)
specifier|private
name|ListContainersCmd
name|executeListContainersRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker List Container Request"
argument_list|)
expr_stmt|;
name|ListContainersCmd
name|listContainersCmd
init|=
name|client
operator|.
name|listContainersCmd
argument_list|()
decl_stmt|;
name|Boolean
name|showSize
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_SHOW_SIZE
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|showSize
operator|!=
literal|null
operator|&&
name|showSize
condition|)
block|{
name|listContainersCmd
operator|.
name|withShowSize
argument_list|(
name|showSize
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|showAll
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_SHOW_ALL
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|showAll
operator|!=
literal|null
operator|&&
name|showAll
condition|)
block|{
name|listContainersCmd
operator|.
name|withShowAll
argument_list|(
name|showAll
argument_list|)
expr_stmt|;
block|}
name|String
name|before
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_BEFORE
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|before
operator|!=
literal|null
condition|)
block|{
name|listContainersCmd
operator|.
name|withBefore
argument_list|(
name|before
argument_list|)
expr_stmt|;
block|}
name|Integer
name|limit
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_LIMIT
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|limit
operator|!=
literal|null
condition|)
block|{
name|listContainersCmd
operator|.
name|withLimit
argument_list|(
name|limit
argument_list|)
expr_stmt|;
block|}
name|String
name|since
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_SINCE
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|since
operator|!=
literal|null
condition|)
block|{
name|listContainersCmd
operator|.
name|withSince
argument_list|(
name|since
argument_list|)
expr_stmt|;
block|}
return|return
name|listContainersCmd
return|;
block|}
comment|/**      * Produce a create container request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeCreateContainerRequest (DockerClient client, Message message)
specifier|private
name|CreateContainerCmd
name|executeCreateContainerRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker List Container Request"
argument_list|)
expr_stmt|;
name|String
name|imageId
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_IMAGE_ID
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|CreateContainerCmd
name|createContainerCmd
init|=
name|client
operator|.
name|createContainerCmd
argument_list|(
name|imageId
argument_list|)
decl_stmt|;
name|String
name|name
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_NAME
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|name
operator|!=
literal|null
condition|)
block|{
name|createContainerCmd
operator|.
name|withName
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
name|ExposedPort
index|[]
name|exposedPorts
init|=
name|DockerHelper
operator|.
name|getArrayProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_EXPOSED_PORTS
argument_list|,
name|message
argument_list|,
name|ExposedPort
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|exposedPorts
operator|!=
literal|null
condition|)
block|{
name|createContainerCmd
operator|.
name|withExposedPorts
argument_list|(
name|exposedPorts
argument_list|)
expr_stmt|;
block|}
name|String
name|workingDir
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_WORKING_DIR
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|workingDir
operator|!=
literal|null
condition|)
block|{
name|createContainerCmd
operator|.
name|withWorkingDir
argument_list|(
name|workingDir
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|disabledNetwork
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_DISABLE_NETWORK
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|disabledNetwork
operator|!=
literal|null
operator|&&
name|disabledNetwork
condition|)
block|{
name|createContainerCmd
operator|.
name|withDisableNetwork
argument_list|(
name|disabledNetwork
argument_list|)
expr_stmt|;
block|}
name|String
name|hostName
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_HOSTNAME
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|hostName
operator|!=
literal|null
condition|)
block|{
name|createContainerCmd
operator|.
name|withHostName
argument_list|(
name|hostName
argument_list|)
expr_stmt|;
block|}
name|String
index|[]
name|portSpecs
init|=
name|DockerHelper
operator|.
name|parseDelimitedStringHeader
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_PORT_SPECS
argument_list|,
name|message
argument_list|)
decl_stmt|;
if|if
condition|(
name|portSpecs
operator|!=
literal|null
condition|)
block|{
name|createContainerCmd
operator|.
name|withPortSpecs
argument_list|(
name|portSpecs
argument_list|)
expr_stmt|;
block|}
name|String
name|user
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_USER
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|hostName
operator|!=
literal|null
condition|)
block|{
name|createContainerCmd
operator|.
name|withUser
argument_list|(
name|user
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|tty
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_TTY
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|tty
operator|!=
literal|null
operator|&&
name|tty
condition|)
block|{
name|createContainerCmd
operator|.
name|withTty
argument_list|(
name|tty
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|stdInOpen
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_STD_IN_OPEN
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|stdInOpen
operator|!=
literal|null
operator|&&
name|stdInOpen
condition|)
block|{
name|createContainerCmd
operator|.
name|withStdinOpen
argument_list|(
name|stdInOpen
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|stdInOnce
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_STD_IN_ONCE
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|stdInOnce
operator|!=
literal|null
operator|&&
name|stdInOnce
condition|)
block|{
name|createContainerCmd
operator|.
name|withStdInOnce
argument_list|(
name|stdInOnce
argument_list|)
expr_stmt|;
block|}
name|Long
name|memoryLimit
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_MEMORY_LIMIT
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Long
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|memoryLimit
operator|!=
literal|null
condition|)
block|{
name|createContainerCmd
operator|.
name|withMemoryLimit
argument_list|(
name|memoryLimit
argument_list|)
expr_stmt|;
block|}
name|Long
name|memorySwap
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_MEMORY_SWAP
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Long
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|memorySwap
operator|!=
literal|null
condition|)
block|{
name|createContainerCmd
operator|.
name|withMemorySwap
argument_list|(
name|memorySwap
argument_list|)
expr_stmt|;
block|}
name|Integer
name|cpuShares
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CPU_SHARES
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|cpuShares
operator|!=
literal|null
condition|)
block|{
name|createContainerCmd
operator|.
name|withCpuShares
argument_list|(
name|cpuShares
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|attachStdIn
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_ATTACH_STD_IN
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|attachStdIn
operator|!=
literal|null
operator|&&
name|attachStdIn
condition|)
block|{
name|createContainerCmd
operator|.
name|withAttachStdin
argument_list|(
name|attachStdIn
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|attachStdOut
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_ATTACH_STD_OUT
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|attachStdOut
operator|!=
literal|null
operator|&&
name|attachStdOut
condition|)
block|{
name|createContainerCmd
operator|.
name|withAttachStdout
argument_list|(
name|attachStdOut
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|attachStdErr
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_ATTACH_STD_ERR
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|attachStdErr
operator|!=
literal|null
operator|&&
name|attachStdErr
condition|)
block|{
name|createContainerCmd
operator|.
name|withAttachStderr
argument_list|(
name|attachStdErr
argument_list|)
expr_stmt|;
block|}
name|String
index|[]
name|env
init|=
name|DockerHelper
operator|.
name|parseDelimitedStringHeader
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_ENV
argument_list|,
name|message
argument_list|)
decl_stmt|;
if|if
condition|(
name|env
operator|!=
literal|null
condition|)
block|{
name|createContainerCmd
operator|.
name|withEnv
argument_list|(
name|env
argument_list|)
expr_stmt|;
block|}
name|String
index|[]
name|cmd
init|=
name|DockerHelper
operator|.
name|parseDelimitedStringHeader
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CMD
argument_list|,
name|message
argument_list|)
decl_stmt|;
if|if
condition|(
name|cmd
operator|!=
literal|null
condition|)
block|{
name|createContainerCmd
operator|.
name|withCmd
argument_list|(
name|env
argument_list|)
expr_stmt|;
block|}
name|String
index|[]
name|dns
init|=
name|DockerHelper
operator|.
name|parseDelimitedStringHeader
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_DNS
argument_list|,
name|message
argument_list|)
decl_stmt|;
if|if
condition|(
name|dns
operator|!=
literal|null
condition|)
block|{
name|createContainerCmd
operator|.
name|withDns
argument_list|(
name|dns
argument_list|)
expr_stmt|;
block|}
name|String
name|image
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_IMAGE
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|image
operator|!=
literal|null
condition|)
block|{
name|createContainerCmd
operator|.
name|withImage
argument_list|(
name|image
argument_list|)
expr_stmt|;
block|}
name|Volume
index|[]
name|volume
init|=
name|DockerHelper
operator|.
name|getArrayProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_VOLUMES
argument_list|,
name|message
argument_list|,
name|Volume
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|volume
operator|!=
literal|null
condition|)
block|{
name|createContainerCmd
operator|.
name|withVolumes
argument_list|(
name|volume
argument_list|)
expr_stmt|;
block|}
name|String
index|[]
name|volumesFrom
init|=
name|DockerHelper
operator|.
name|parseDelimitedStringHeader
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_VOLUMES_FROM
argument_list|,
name|message
argument_list|)
decl_stmt|;
if|if
condition|(
name|volumesFrom
operator|!=
literal|null
condition|)
block|{
name|createContainerCmd
operator|.
name|withVolumesFrom
argument_list|(
name|volumesFrom
argument_list|)
expr_stmt|;
block|}
return|return
name|createContainerCmd
return|;
block|}
comment|/**      * Produce a start container request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeStartContainerRequest (DockerClient client, Message message)
specifier|private
name|StartContainerCmd
name|executeStartContainerRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Start Container Request"
argument_list|)
expr_stmt|;
name|String
name|containerId
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CONTAINER_ID
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|StartContainerCmd
name|startContainerCmd
init|=
name|client
operator|.
name|startContainerCmd
argument_list|(
name|containerId
argument_list|)
decl_stmt|;
name|Bind
index|[]
name|binds
init|=
name|DockerHelper
operator|.
name|getArrayProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_BINDS
argument_list|,
name|message
argument_list|,
name|Bind
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|binds
operator|!=
literal|null
condition|)
block|{
name|startContainerCmd
operator|.
name|withBinds
argument_list|(
name|binds
argument_list|)
expr_stmt|;
block|}
name|Link
index|[]
name|links
init|=
name|DockerHelper
operator|.
name|getArrayProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_LINKS
argument_list|,
name|message
argument_list|,
name|Link
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|links
operator|!=
literal|null
condition|)
block|{
name|startContainerCmd
operator|.
name|withLinks
argument_list|(
name|links
argument_list|)
expr_stmt|;
block|}
name|LxcConf
index|[]
name|lxcConf
init|=
name|DockerHelper
operator|.
name|getArrayProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_LXC_CONF
argument_list|,
name|message
argument_list|,
name|LxcConf
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|lxcConf
operator|!=
literal|null
condition|)
block|{
name|startContainerCmd
operator|.
name|withLxcConf
argument_list|(
name|lxcConf
argument_list|)
expr_stmt|;
block|}
name|Ports
name|ports
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_PORT_BINDINGS
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Ports
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|ports
operator|!=
literal|null
condition|)
block|{
name|startContainerCmd
operator|.
name|withPortBindings
argument_list|(
name|ports
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|privileged
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_PRIVILEGED
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|privileged
operator|!=
literal|null
operator|&&
name|privileged
condition|)
block|{
name|startContainerCmd
operator|.
name|withPrivileged
argument_list|(
name|privileged
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|publishAllPorts
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_PUBLISH_ALL_PORTS
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|publishAllPorts
operator|!=
literal|null
operator|&&
name|publishAllPorts
condition|)
block|{
name|startContainerCmd
operator|.
name|withPublishAllPorts
argument_list|(
name|publishAllPorts
argument_list|)
expr_stmt|;
block|}
name|String
index|[]
name|dns
init|=
name|DockerHelper
operator|.
name|parseDelimitedStringHeader
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_DNS
argument_list|,
name|message
argument_list|)
decl_stmt|;
if|if
condition|(
name|dns
operator|!=
literal|null
condition|)
block|{
name|startContainerCmd
operator|.
name|withDns
argument_list|(
name|dns
argument_list|)
expr_stmt|;
block|}
name|String
index|[]
name|dnsSearch
init|=
name|DockerHelper
operator|.
name|parseDelimitedStringHeader
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_DNS_SEARCH
argument_list|,
name|message
argument_list|)
decl_stmt|;
if|if
condition|(
name|dnsSearch
operator|!=
literal|null
condition|)
block|{
name|startContainerCmd
operator|.
name|withDnsSearch
argument_list|(
name|dnsSearch
argument_list|)
expr_stmt|;
block|}
name|String
name|volumesFrom
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_VOLUMES_FROM
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|volumesFrom
operator|!=
literal|null
condition|)
block|{
name|startContainerCmd
operator|.
name|withVolumesFrom
argument_list|(
name|volumesFrom
argument_list|)
expr_stmt|;
block|}
name|String
name|networkMode
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_NETWORK_MODE
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|networkMode
operator|!=
literal|null
condition|)
block|{
name|startContainerCmd
operator|.
name|withNetworkMode
argument_list|(
name|networkMode
argument_list|)
expr_stmt|;
block|}
name|Device
index|[]
name|devices
init|=
name|DockerHelper
operator|.
name|getArrayProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_DEVICES
argument_list|,
name|message
argument_list|,
name|Device
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|devices
operator|!=
literal|null
condition|)
block|{
name|startContainerCmd
operator|.
name|withDevices
argument_list|(
name|devices
argument_list|)
expr_stmt|;
block|}
name|RestartPolicy
name|restartPolicy
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_RESTART_POLICY
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|RestartPolicy
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|restartPolicy
operator|!=
literal|null
condition|)
block|{
name|startContainerCmd
operator|.
name|withRestartPolicy
argument_list|(
name|restartPolicy
argument_list|)
expr_stmt|;
block|}
name|String
index|[]
name|capAdd
init|=
name|DockerHelper
operator|.
name|parseDelimitedStringHeader
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CAP_ADD
argument_list|,
name|message
argument_list|)
decl_stmt|;
if|if
condition|(
name|capAdd
operator|!=
literal|null
condition|)
block|{
name|startContainerCmd
operator|.
name|withCapAdd
argument_list|(
name|capAdd
argument_list|)
expr_stmt|;
block|}
name|String
index|[]
name|capDrop
init|=
name|DockerHelper
operator|.
name|parseDelimitedStringHeader
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CAP_DROP
argument_list|,
name|message
argument_list|)
decl_stmt|;
if|if
condition|(
name|capDrop
operator|!=
literal|null
condition|)
block|{
name|startContainerCmd
operator|.
name|withCapDrop
argument_list|(
name|capDrop
argument_list|)
expr_stmt|;
block|}
return|return
name|startContainerCmd
return|;
block|}
comment|/**      * Produce a inspect container request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeInspectContainerRequest (DockerClient client, Message message)
specifier|private
name|InspectContainerCmd
name|executeInspectContainerRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Inspect Container Request"
argument_list|)
expr_stmt|;
name|String
name|containerId
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CONTAINER_ID
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|InspectContainerCmd
name|inspectContainerCmd
init|=
name|client
operator|.
name|inspectContainerCmd
argument_list|(
name|containerId
argument_list|)
decl_stmt|;
return|return
name|inspectContainerCmd
return|;
block|}
comment|/**      * Produce a wait container request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeWaitContainerRequest (DockerClient client, Message message)
specifier|private
name|WaitContainerCmd
name|executeWaitContainerRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Wait Container Request"
argument_list|)
expr_stmt|;
name|String
name|containerId
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CONTAINER_ID
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|WaitContainerCmd
name|waitContainerCmd
init|=
name|client
operator|.
name|waitContainerCmd
argument_list|(
name|containerId
argument_list|)
decl_stmt|;
return|return
name|waitContainerCmd
return|;
block|}
comment|/**      * Produce a log container request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeLogContainerRequest (DockerClient client, Message message)
specifier|private
name|LogContainerCmd
name|executeLogContainerRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Log Container Request"
argument_list|)
expr_stmt|;
name|String
name|containerId
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CONTAINER_ID
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|LogContainerCmd
name|logContainerCmd
init|=
name|client
operator|.
name|logContainerCmd
argument_list|(
name|containerId
argument_list|)
decl_stmt|;
name|Boolean
name|stdOut
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_STD_OUT
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|stdOut
operator|!=
literal|null
operator|&&
name|stdOut
condition|)
block|{
name|logContainerCmd
operator|.
name|withStdOut
argument_list|(
name|stdOut
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|stdErr
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_STD_ERR
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|stdErr
operator|!=
literal|null
operator|&&
name|stdErr
condition|)
block|{
name|logContainerCmd
operator|.
name|withStdErr
argument_list|(
name|stdErr
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|timestamps
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_TIMESTAMPS
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|timestamps
operator|!=
literal|null
operator|&&
name|timestamps
condition|)
block|{
name|logContainerCmd
operator|.
name|withTimestamps
argument_list|(
name|timestamps
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|followStream
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_FOLLOW_STREAM
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|followStream
operator|!=
literal|null
operator|&&
name|followStream
condition|)
block|{
name|logContainerCmd
operator|.
name|withFollowStream
argument_list|(
name|followStream
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|tailAll
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_TAIL_ALL
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|tailAll
operator|!=
literal|null
operator|&&
name|tailAll
condition|)
block|{
name|logContainerCmd
operator|.
name|withTailAll
argument_list|()
expr_stmt|;
block|}
name|Integer
name|tail
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_TAIL
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|tailAll
operator|!=
literal|null
condition|)
block|{
name|logContainerCmd
operator|.
name|withTail
argument_list|(
name|tail
argument_list|)
expr_stmt|;
block|}
return|return
name|logContainerCmd
return|;
block|}
comment|/**      * Produce a attach container request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeAttachContainerRequest (DockerClient client, Message message)
specifier|private
name|AttachContainerCmd
name|executeAttachContainerRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Attach Container Request"
argument_list|)
expr_stmt|;
name|String
name|containerId
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CONTAINER_ID
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|AttachContainerCmd
name|attachContainerCmd
init|=
name|client
operator|.
name|attachContainerCmd
argument_list|(
name|containerId
argument_list|)
decl_stmt|;
name|Boolean
name|stdOut
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_STD_OUT
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|stdOut
operator|!=
literal|null
operator|&&
name|stdOut
condition|)
block|{
name|attachContainerCmd
operator|.
name|withStdOut
argument_list|(
name|stdOut
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|stdErr
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_STD_ERR
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|stdErr
operator|!=
literal|null
operator|&&
name|stdErr
condition|)
block|{
name|attachContainerCmd
operator|.
name|withStdErr
argument_list|(
name|stdErr
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|logs
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_LOGS
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|logs
operator|!=
literal|null
operator|&&
name|logs
condition|)
block|{
name|attachContainerCmd
operator|.
name|withLogs
argument_list|(
name|logs
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|timestamps
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_TIMESTAMPS
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|timestamps
operator|!=
literal|null
operator|&&
name|timestamps
condition|)
block|{
name|attachContainerCmd
operator|.
name|withTimestamps
argument_list|(
name|timestamps
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|followStream
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_FOLLOW_STREAM
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|followStream
operator|!=
literal|null
operator|&&
name|followStream
condition|)
block|{
name|attachContainerCmd
operator|.
name|withFollowStream
argument_list|(
name|followStream
argument_list|)
expr_stmt|;
block|}
return|return
name|attachContainerCmd
return|;
block|}
comment|/**      * Produces a stop container request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeStopContainerRequest (DockerClient client, Message message)
specifier|private
name|StopContainerCmd
name|executeStopContainerRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Kill Container Request"
argument_list|)
expr_stmt|;
name|String
name|containerId
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CONTAINER_ID
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|StopContainerCmd
name|stopContainerCmd
init|=
name|client
operator|.
name|stopContainerCmd
argument_list|(
name|containerId
argument_list|)
decl_stmt|;
name|Integer
name|timeout
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_TIMEOUT
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|timeout
operator|!=
literal|null
condition|)
block|{
name|stopContainerCmd
operator|.
name|withTimeout
argument_list|(
name|timeout
argument_list|)
expr_stmt|;
block|}
return|return
name|stopContainerCmd
return|;
block|}
comment|/**      * Produces a restart container request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeRestartContainerRequest (DockerClient client, Message message)
specifier|private
name|RestartContainerCmd
name|executeRestartContainerRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Restart Container Request"
argument_list|)
expr_stmt|;
name|String
name|containerId
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CONTAINER_ID
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|RestartContainerCmd
name|restartContainerCmd
init|=
name|client
operator|.
name|restartContainerCmd
argument_list|(
name|containerId
argument_list|)
decl_stmt|;
name|Integer
name|timeout
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_TIMEOUT
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|timeout
operator|!=
literal|null
condition|)
block|{
name|restartContainerCmd
operator|.
name|withtTimeout
argument_list|(
name|timeout
argument_list|)
expr_stmt|;
block|}
return|return
name|restartContainerCmd
return|;
block|}
comment|/**      * Produces a diff container request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeDiffContainerRequest (DockerClient client, Message message)
specifier|private
name|ContainerDiffCmd
name|executeDiffContainerRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Diff Container Request"
argument_list|)
expr_stmt|;
name|String
name|containerId
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CONTAINER_ID
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|ContainerDiffCmd
name|diffContainerCmd
init|=
name|client
operator|.
name|containerDiffCmd
argument_list|(
name|containerId
argument_list|)
decl_stmt|;
return|return
name|diffContainerCmd
return|;
block|}
comment|/**      * Produces a kill container request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeKillContainerRequest (DockerClient client, Message message)
specifier|private
name|KillContainerCmd
name|executeKillContainerRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Kill Container Request"
argument_list|)
expr_stmt|;
name|String
name|containerId
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CONTAINER_ID
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|KillContainerCmd
name|killContainerCmd
init|=
name|client
operator|.
name|killContainerCmd
argument_list|(
name|containerId
argument_list|)
decl_stmt|;
name|String
name|signal
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_SIGNAL
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|!=
literal|null
condition|)
block|{
name|killContainerCmd
operator|.
name|withSignal
argument_list|(
name|signal
argument_list|)
expr_stmt|;
block|}
return|return
name|killContainerCmd
return|;
block|}
comment|/**      * Produces a top container request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeTopContainerRequest (DockerClient client, Message message)
specifier|private
name|TopContainerCmd
name|executeTopContainerRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Top Container Request"
argument_list|)
expr_stmt|;
name|String
name|containerId
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CONTAINER_ID
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|TopContainerCmd
name|topContainerCmd
init|=
name|client
operator|.
name|topContainerCmd
argument_list|(
name|containerId
argument_list|)
decl_stmt|;
name|String
name|psArgs
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_PS_ARGS
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|psArgs
operator|!=
literal|null
condition|)
block|{
name|topContainerCmd
operator|.
name|withPsArgs
argument_list|(
name|psArgs
argument_list|)
expr_stmt|;
block|}
return|return
name|topContainerCmd
return|;
block|}
comment|/**      * Produces a pause container request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executePauseContainerRequest (DockerClient client, Message message)
specifier|private
name|PauseContainerCmd
name|executePauseContainerRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Pause Container Request"
argument_list|)
expr_stmt|;
name|String
name|containerId
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CONTAINER_ID
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|PauseContainerCmd
name|pauseContainerCmd
init|=
name|client
operator|.
name|pauseContainerCmd
argument_list|(
name|containerId
argument_list|)
decl_stmt|;
return|return
name|pauseContainerCmd
return|;
block|}
comment|/**      * Produces a unpause container request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeUnpauseContainerRequest (DockerClient client, Message message)
specifier|private
name|UnpauseContainerCmd
name|executeUnpauseContainerRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Unpause Container Request"
argument_list|)
expr_stmt|;
name|String
name|containerId
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CONTAINER_ID
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|UnpauseContainerCmd
name|unpauseContainerCmd
init|=
name|client
operator|.
name|unpauseContainerCmd
argument_list|(
name|containerId
argument_list|)
decl_stmt|;
return|return
name|unpauseContainerCmd
return|;
block|}
comment|/**      * Produces a commit container request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeCommitContainerRequest (DockerClient client, Message message)
specifier|private
name|CommitCmd
name|executeCommitContainerRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Commit Container Request"
argument_list|)
expr_stmt|;
name|String
name|containerId
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CONTAINER_ID
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|CommitCmd
name|commitCmd
init|=
name|client
operator|.
name|commitCmd
argument_list|(
name|containerId
argument_list|)
decl_stmt|;
name|String
name|repository
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_REPOSITORY
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|repository
operator|!=
literal|null
condition|)
block|{
name|commitCmd
operator|.
name|withRepository
argument_list|(
name|repository
argument_list|)
expr_stmt|;
block|}
name|String
name|msg
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_MESSAGE
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|message
operator|!=
literal|null
condition|)
block|{
name|commitCmd
operator|.
name|withMessage
argument_list|(
name|msg
argument_list|)
expr_stmt|;
block|}
name|String
name|tag
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_TAG
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|tag
operator|!=
literal|null
condition|)
block|{
name|commitCmd
operator|.
name|withTag
argument_list|(
name|tag
argument_list|)
expr_stmt|;
block|}
name|String
name|author
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_TAG
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|author
operator|!=
literal|null
condition|)
block|{
name|commitCmd
operator|.
name|withAuthor
argument_list|(
name|tag
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|attachStdIn
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_ATTACH_STD_IN
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|attachStdIn
operator|!=
literal|null
operator|&&
name|attachStdIn
condition|)
block|{
name|commitCmd
operator|.
name|withAttachStdin
argument_list|()
expr_stmt|;
block|}
name|Boolean
name|attachStdOut
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_ATTACH_STD_OUT
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|attachStdOut
operator|!=
literal|null
operator|&&
name|attachStdOut
condition|)
block|{
name|commitCmd
operator|.
name|withAttachStdout
argument_list|()
expr_stmt|;
block|}
name|Boolean
name|attachStdErr
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_ATTACH_STD_ERR
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|attachStdErr
operator|!=
literal|null
operator|&&
name|attachStdErr
condition|)
block|{
name|commitCmd
operator|.
name|withAttachStderr
argument_list|()
expr_stmt|;
block|}
name|String
index|[]
name|cmds
init|=
name|DockerHelper
operator|.
name|parseDelimitedStringHeader
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CMD
argument_list|,
name|message
argument_list|)
decl_stmt|;
if|if
condition|(
name|cmds
operator|!=
literal|null
condition|)
block|{
name|commitCmd
operator|.
name|withCmd
argument_list|(
name|cmds
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|disableNetwork
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_DISABLE_NETWORK
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|disableNetwork
operator|!=
literal|null
operator|&&
name|disableNetwork
condition|)
block|{
name|commitCmd
operator|.
name|withDisableNetwork
argument_list|(
name|disableNetwork
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|pause
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_PAUSE
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|pause
operator|!=
literal|null
operator|&&
name|pause
condition|)
block|{
name|commitCmd
operator|.
name|withPause
argument_list|(
name|pause
argument_list|)
expr_stmt|;
block|}
name|String
index|[]
name|envs
init|=
name|DockerHelper
operator|.
name|parseDelimitedStringHeader
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_ENV
argument_list|,
name|message
argument_list|)
decl_stmt|;
if|if
condition|(
name|envs
operator|!=
literal|null
condition|)
block|{
name|commitCmd
operator|.
name|withEnv
argument_list|(
name|envs
argument_list|)
expr_stmt|;
block|}
name|ExposedPorts
name|exposedPorts
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_EXPOSED_PORTS
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|ExposedPorts
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|exposedPorts
operator|!=
literal|null
condition|)
block|{
name|commitCmd
operator|.
name|withExposedPorts
argument_list|(
name|exposedPorts
argument_list|)
expr_stmt|;
block|}
name|String
name|hostname
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_HOSTNAME
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|hostname
operator|!=
literal|null
condition|)
block|{
name|commitCmd
operator|.
name|withHostname
argument_list|(
name|hostname
argument_list|)
expr_stmt|;
block|}
name|Integer
name|memory
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_MEMORY
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|memory
operator|!=
literal|null
condition|)
block|{
name|commitCmd
operator|.
name|withMemory
argument_list|(
name|memory
argument_list|)
expr_stmt|;
block|}
name|Integer
name|memorySwap
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_MEMORY_SWAP
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|memorySwap
operator|!=
literal|null
condition|)
block|{
name|commitCmd
operator|.
name|withMemorySwap
argument_list|(
name|memorySwap
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|openStdIn
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_OPEN_STD_IN
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|openStdIn
operator|!=
literal|null
operator|&&
name|openStdIn
condition|)
block|{
name|commitCmd
operator|.
name|withOpenStdin
argument_list|(
name|openStdIn
argument_list|)
expr_stmt|;
block|}
name|String
index|[]
name|portSpecs
init|=
name|DockerHelper
operator|.
name|parseDelimitedStringHeader
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_PORT_SPECS
argument_list|,
name|message
argument_list|)
decl_stmt|;
if|if
condition|(
name|portSpecs
operator|!=
literal|null
condition|)
block|{
name|commitCmd
operator|.
name|withPortSpecs
argument_list|(
name|portSpecs
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|stdInOnce
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_STD_IN_ONCE
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|stdInOnce
operator|!=
literal|null
operator|&&
name|stdInOnce
condition|)
block|{
name|commitCmd
operator|.
name|withStdinOnce
argument_list|(
name|stdInOnce
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|tty
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_TTY
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|tty
operator|!=
literal|null
operator|&&
name|tty
condition|)
block|{
name|commitCmd
operator|.
name|withTty
argument_list|(
name|tty
argument_list|)
expr_stmt|;
block|}
name|String
name|user
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_USER
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|user
operator|!=
literal|null
condition|)
block|{
name|commitCmd
operator|.
name|withUser
argument_list|(
name|user
argument_list|)
expr_stmt|;
block|}
name|Volumes
name|volumes
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_VOLUMES
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Volumes
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|volumes
operator|!=
literal|null
condition|)
block|{
name|commitCmd
operator|.
name|withVolumes
argument_list|(
name|volumes
argument_list|)
expr_stmt|;
block|}
name|String
name|workingDir
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_HOSTNAME
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|workingDir
operator|!=
literal|null
condition|)
block|{
name|commitCmd
operator|.
name|withWorkingDir
argument_list|(
name|workingDir
argument_list|)
expr_stmt|;
block|}
return|return
name|commitCmd
return|;
block|}
comment|/**      * Produces a copy file/folder from container request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeCopyFileContainerRequest (DockerClient client, Message message)
specifier|private
name|CopyFileFromContainerCmd
name|executeCopyFileContainerRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Copy File/Folder Container Request"
argument_list|)
expr_stmt|;
name|String
name|containerId
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CONTAINER_ID
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|resource
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_RESOURCE
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|CopyFileFromContainerCmd
name|copyFileContainerCmd
init|=
name|client
operator|.
name|copyFileFromContainerCmd
argument_list|(
name|containerId
argument_list|,
name|resource
argument_list|)
decl_stmt|;
name|String
name|hostPath
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_HOST_PATH
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|hostPath
operator|!=
literal|null
condition|)
block|{
name|copyFileContainerCmd
operator|.
name|withHostPath
argument_list|(
name|hostPath
argument_list|)
expr_stmt|;
block|}
return|return
name|copyFileContainerCmd
return|;
block|}
comment|/**      * Produces a remove container request      *       * @param client      * @param message      * @return      * @throws DockerException      */
DECL|method|executeRemoveContainerRequest (DockerClient client, Message message)
specifier|private
name|RemoveContainerCmd
name|executeRemoveContainerRequest
parameter_list|(
name|DockerClient
name|client
parameter_list|,
name|Message
name|message
parameter_list|)
throws|throws
name|DockerException
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Executing Docker Remove Container Request"
argument_list|)
expr_stmt|;
name|String
name|containerId
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_CONTAINER_ID
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|RemoveContainerCmd
name|removeContainerCmd
init|=
name|client
operator|.
name|removeContainerCmd
argument_list|(
name|containerId
argument_list|)
decl_stmt|;
name|Boolean
name|force
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_FORCE
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|force
operator|!=
literal|null
operator|&&
name|force
condition|)
block|{
name|removeContainerCmd
operator|.
name|withForce
argument_list|(
name|force
argument_list|)
expr_stmt|;
block|}
name|Boolean
name|removeVolumes
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_REMOVE_VOLUMES
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|removeVolumes
operator|!=
literal|null
operator|&&
name|removeVolumes
condition|)
block|{
name|removeContainerCmd
operator|.
name|withRemoveVolumes
argument_list|(
name|removeVolumes
argument_list|)
expr_stmt|;
block|}
return|return
name|removeContainerCmd
return|;
block|}
annotation|@
name|Override
DECL|method|doStop ()
specifier|protected
name|void
name|doStop
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|doStop
argument_list|()
expr_stmt|;
block|}
comment|/**      * Attempt to retrieve authorization details from the client      *       * @param client      * @return      */
DECL|method|getAuthConfig (DockerClient client)
specifier|private
name|AuthConfig
name|getAuthConfig
parameter_list|(
name|DockerClient
name|client
parameter_list|)
block|{
name|AuthConfig
name|authConfig
init|=
literal|null
decl_stmt|;
try|try
block|{
name|authConfig
operator|=
name|client
operator|.
name|authConfig
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{}
return|return
name|authConfig
return|;
block|}
block|}
end_class

end_unit

