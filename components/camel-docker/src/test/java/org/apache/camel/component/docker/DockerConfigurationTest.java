begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.docker
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|docker
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
DECL|class|DockerConfigurationTest
specifier|public
class|class
name|DockerConfigurationTest
block|{
DECL|field|configuration
specifier|private
name|DockerConfiguration
name|configuration
decl_stmt|;
annotation|@
name|Before
DECL|method|setupTest ()
specifier|public
name|void
name|setupTest
parameter_list|()
block|{
name|configuration
operator|=
operator|new
name|DockerConfiguration
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPropertyFromHeader ()
specifier|public
name|void
name|testPropertyFromHeader
parameter_list|()
block|{
name|String
name|host
init|=
literal|"camelhost"
decl_stmt|;
name|Message
name|message
init|=
operator|new
name|DefaultMessage
argument_list|()
decl_stmt|;
name|message
operator|.
name|setHeader
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_HOST
argument_list|,
name|host
argument_list|)
expr_stmt|;
name|String
name|configurationProp
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_HOST
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|host
argument_list|,
name|configurationProp
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPropertyfromEndpointProperties ()
specifier|public
name|void
name|testPropertyfromEndpointProperties
parameter_list|()
block|{
name|String
name|host
init|=
literal|"camelhost"
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|parameters
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|parameters
operator|.
name|put
argument_list|(
name|DockerHelper
operator|.
name|transformFromHeaderName
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_HOST
argument_list|)
argument_list|,
name|host
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setParameters
argument_list|(
name|parameters
argument_list|)
expr_stmt|;
name|Message
name|message
init|=
operator|new
name|DefaultMessage
argument_list|()
decl_stmt|;
name|String
name|configurationProp
init|=
name|DockerHelper
operator|.
name|getProperty
argument_list|(
name|DockerConstants
operator|.
name|DOCKER_HOST
argument_list|,
name|configuration
argument_list|,
name|message
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|host
argument_list|,
name|configurationProp
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

