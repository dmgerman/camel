begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.test.blueprint
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|blueprint
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|TimeoutInflightRepository
import|;
end_import

begin_class
DECL|class|MyInflightRepository
specifier|public
class|class
name|MyInflightRepository
extends|extends
name|TimeoutInflightRepository
block|{
DECL|field|exchanges
name|Map
argument_list|<
name|String
argument_list|,
name|Exchange
argument_list|>
name|exchanges
init|=
operator|new
name|ConcurrentHashMap
argument_list|<
name|String
argument_list|,
name|Exchange
argument_list|>
argument_list|()
decl_stmt|;
DECL|method|processTimeoutExchange (Exchange exchange, long processingTime)
specifier|protected
name|void
name|processTimeoutExchange
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|long
name|processingTime
parameter_list|)
block|{
name|super
operator|.
name|processTimeoutExchange
argument_list|(
name|exchange
argument_list|,
name|processingTime
argument_list|)
expr_stmt|;
name|exchanges
operator|.
name|put
argument_list|(
name|exchange
operator|.
name|getExchangeId
argument_list|()
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
block|}
DECL|method|getTimeoutExchange ()
specifier|public
name|long
name|getTimeoutExchange
parameter_list|()
block|{
return|return
name|exchanges
operator|.
name|size
argument_list|()
return|;
block|}
block|}
end_class

end_unit

