begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.web3j.integration
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|integration
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|web3j
operator|.
name|protocol
operator|.
name|core
operator|.
name|methods
operator|.
name|response
operator|.
name|EthBlock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|OPERATION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|REPLAY_BLOCKS_OBSERVABLE
import|;
end_import

begin_class
annotation|@
name|Ignore
argument_list|(
literal|"Requires a local node or registration at Infura"
argument_list|)
DECL|class|Web3jConsumerMainnetTest
specifier|public
class|class
name|Web3jConsumerMainnetTest
extends|extends
name|Web3jIntegrationTestSupport
block|{
DECL|method|getUrl ()
specifier|protected
name|String
name|getUrl
parameter_list|()
block|{
return|return
literal|"https://mainnet.infura.io/YOUR_INFURA_ID?"
return|;
block|}
annotation|@
name|Test
DECL|method|consumerTest ()
specifier|public
name|void
name|consumerTest
parameter_list|()
throws|throws
name|Exception
block|{
name|mockResult
operator|.
name|expectedMinimumMessageCount
argument_list|(
literal|261
argument_list|)
expr_stmt|;
comment|// block 5713030 and 5713031 have 261 transactions in total
name|mockError
operator|.
name|expectedMessageCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|MockEndpoint
operator|.
name|assertIsSatisfied
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|errorHandler
argument_list|(
name|deadLetterChannel
argument_list|(
literal|"mock:error"
argument_list|)
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"web3j://"
operator|+
name|getUrl
argument_list|()
operator|+
name|OPERATION
operator|.
name|toLowerCase
argument_list|()
operator|+
literal|"="
operator|+
name|REPLAY_BLOCKS_OBSERVABLE
operator|+
literal|"&"
operator|+
literal|"fromBlock=5713030&"
operator|+
literal|"toBlock=5713031&"
operator|+
literal|"fullTransactionObjects=false"
argument_list|)
operator|.
name|choice
argument_list|()
operator|.
name|when
argument_list|(
name|simple
argument_list|(
literal|"${in.header.status} != 'done'"
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"log:foo?showAll=true&multiline=true&level=INFO"
argument_list|)
operator|.
name|process
argument_list|(
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|EthBlock
operator|.
name|Block
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|EthBlock
operator|.
name|Block
operator|.
name|class
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|EthBlock
operator|.
name|TransactionResult
argument_list|>
name|transactions
init|=
name|body
operator|.
name|getTransactions
argument_list|()
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|transactions
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
operator|.
name|split
argument_list|(
name|body
argument_list|()
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:result"
argument_list|)
operator|.
name|endChoice
argument_list|()
operator|.
name|otherwise
argument_list|()
operator|.
name|log
argument_list|(
literal|"DONE"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

