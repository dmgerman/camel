begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.web3j.integration
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|integration
package|;
end_package

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigInteger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Produce
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ProducerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|web3j
operator|.
name|protocol
operator|.
name|core
operator|.
name|methods
operator|.
name|response
operator|.
name|EthBlock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|web3j
operator|.
name|protocol
operator|.
name|core
operator|.
name|methods
operator|.
name|response
operator|.
name|EthCompileSolidity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|web3j
operator|.
name|protocol
operator|.
name|core
operator|.
name|methods
operator|.
name|response
operator|.
name|EthLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|web3j
operator|.
name|protocol
operator|.
name|core
operator|.
name|methods
operator|.
name|response
operator|.
name|ShhMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|web3j
operator|.
name|protocol
operator|.
name|core
operator|.
name|methods
operator|.
name|response
operator|.
name|Transaction
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ADDRESS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ADDRESSES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|AT_BLOCK
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|BLOCK_HASH
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|CLIENT_ID
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|DATA
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_ACCOUNTS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_BLOCK_NUMBER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_CALL
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_COINBASE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_COMPILE_LLL
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_COMPILE_SERPENT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_COMPILE_SOLIDITY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_ESTIMATE_GAS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GAS_PRICE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GET_BALANCE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GET_BLOCK_BY_HASH
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GET_BLOCK_BY_NUMBER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GET_BLOCK_TRANSACTION_COUNT_BY_HASH
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GET_BLOCK_TRANSACTION_COUNT_BY_NUMBER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GET_CODE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GET_COMPILERS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GET_FILTER_CHANGES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GET_FILTER_LOGS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GET_LOGS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GET_STORAGE_AT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GET_TRANSACTION_BY_HASH
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GET_TRANSACTION_COUNT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GET_UNCLE_BY_BLOCK_HASH_AND_INDEX
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GET_UNCLE_BY_BLOCK_NUMBER_AND_INDEX
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GET_UNCLE_COUNT_BY_BLOCK_HASH
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_GET_WORK
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_HASHRATE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_MINING
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_NEW_BLOCK_FILTER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_NEW_FILTER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_NEW_PENDING_TRANSACTION_FILTER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_PROTOCOL_VERSION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_SEND_RAW_TRANSACTION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_SEND_TRANSACTION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_SIGN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_SUBMIT_HASHRATE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_SUBMIT_WORK
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_SYNCING
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|ETH_UNINSTALL_FILTER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|FILTER_ID
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|FROM_ADDRESS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|FROM_BLOCK
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|FULL_TRANSACTION_OBJECTS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|GAS_LIMIT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|GAS_PRICE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|HEADER_POW_HASH
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|INDEX
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|MIX_DIGEST
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|NET_LISTENING
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|NET_PEER_COUNT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|NET_VERSION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|NONCE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|OPERATION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|POSITION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|PRIORITY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|SHA3_HASH_OF_DATA_TO_SIGN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|SHH_ADD_TO_GROUP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|SHH_GET_FILTER_CHANGES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|SHH_GET_MESSAGES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|SHH_HAS_IDENTITY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|SHH_NEW_FILTER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|SHH_NEW_GROUP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|SHH_NEW_IDENTITY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|SHH_POST
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|SHH_UNINSTALL_FILTER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|SHH_VERSION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|SIGNED_TRANSACTION_DATA
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|SOURCE_CODE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|TOPICS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|TO_ADDRESS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|TO_BLOCK
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|TRANSACTION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|TRANSACTION_HASH
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|TTL
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|VALUE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|WEB3_CLIENT_VERSION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
operator|.
name|Web3jConstants
operator|.
name|WEB3_SHA3
import|;
end_import

begin_class
annotation|@
name|Ignore
argument_list|(
literal|"Requires a locally running Ganache instance"
argument_list|)
DECL|class|Web3jProducerGanacheTest
specifier|public
class|class
name|Web3jProducerGanacheTest
extends|extends
name|Web3jIntegrationTestSupport
block|{
annotation|@
name|Produce
argument_list|(
literal|"direct:start"
argument_list|)
DECL|field|template
specifier|protected
name|ProducerTemplate
name|template
decl_stmt|;
annotation|@
name|Test
DECL|method|ethClientVersionTest ()
specifier|public
name|void
name|ethClientVersionTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|WEB3_CLIENT_VERSION
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|String
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethNetWeb3Sha3Test ()
specifier|public
name|void
name|ethNetWeb3Sha3Test
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|WEB3_SHA3
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"0x68656c6c6f20776f726c64"
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|String
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|equals
argument_list|(
literal|"0x47173285a8d7341e5e972fc677286384f802f8ef42a5ec5f03bbfa254cb01fad"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethNetVersionTest ()
specifier|public
name|void
name|ethNetVersionTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|NET_VERSION
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|String
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethNetListeningTest ()
specifier|public
name|void
name|ethNetListeningTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|NET_LISTENING
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Boolean
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
comment|//a bug in Ganache returns wrong formatted data
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|ethNetPeerCountTest ()
specifier|public
name|void
name|ethNetPeerCountTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|NET_PEER_COUNT
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|BigInteger
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|BigInteger
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethProtocolVersionTest ()
specifier|public
name|void
name|ethProtocolVersionTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_PROTOCOL_VERSION
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|String
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethSyncingTest ()
specifier|public
name|void
name|ethSyncingTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_SYNCING
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Boolean
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethCoinbaseTest ()
specifier|public
name|void
name|ethCoinbaseTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_COINBASE
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|String
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethMiningTest ()
specifier|public
name|void
name|ethMiningTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_MINING
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Boolean
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethHashrateTest ()
specifier|public
name|void
name|ethHashrateTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_HASHRATE
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|BigInteger
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|BigInteger
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethGasPriceTest ()
specifier|public
name|void
name|ethGasPriceTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GAS_PRICE
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|BigInteger
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|BigInteger
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethAccountsTest ()
specifier|public
name|void
name|ethAccountsTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_ACCOUNTS
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|List
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethBlockNumberTest ()
specifier|public
name|void
name|ethBlockNumberTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_BLOCK_NUMBER
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|BigInteger
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|BigInteger
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethGetBalanceTest ()
specifier|public
name|void
name|ethGetBalanceTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_BALANCE
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|ADDRESS
argument_list|,
literal|"0xc8CDceCE5d006dAB638029EBCf6Dd666efF5A952"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|AT_BLOCK
argument_list|,
literal|"0"
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|BigInteger
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|BigInteger
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
comment|// Given this contract created at address 0x3B558E3a9ae7944FEe7a3A1010DD10f05a01034B:
comment|//    pragma solidity ^0.4.23;
comment|//    contract Storage {
comment|//        uint pos0;
comment|//        function Storage() {
comment|//            pos0 = 5;
comment|//        }
comment|//    }
annotation|@
name|Test
DECL|method|ethGetStorageAtTest ()
specifier|public
name|void
name|ethGetStorageAtTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_STORAGE_AT
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|ADDRESS
argument_list|,
literal|"0x3B558E3a9ae7944FEe7a3A1010DD10f05a01034B"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|AT_BLOCK
argument_list|,
literal|"6"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|POSITION
argument_list|,
name|BigInteger
operator|.
name|ZERO
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|String
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethGetTransactionCountTest ()
specifier|public
name|void
name|ethGetTransactionCountTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_TRANSACTION_COUNT
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|ADDRESS
argument_list|,
literal|"0xc8CDceCE5d006dAB638029EBCf6Dd666efF5A952"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|AT_BLOCK
argument_list|,
literal|"latest"
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|BigInteger
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|BigInteger
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
comment|//a bug in Ganache returns wrong formatted data
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|ethGetBlockTransactionCountByHashTest ()
specifier|public
name|void
name|ethGetBlockTransactionCountByHashTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_BLOCK_TRANSACTION_COUNT_BY_HASH
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|BLOCK_HASH
argument_list|,
literal|"0x1fab3a1cc7f016029e41e72363362caf9bd09388ba94070d6ada37b8757ab19a"
argument_list|)
expr_stmt|;
comment|// Ganache block 0
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|BigInteger
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|BigInteger
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
comment|//a bug in Ganache returns wrong formatted data
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|ethGetBlockTransactionCountByNumberTest ()
specifier|public
name|void
name|ethGetBlockTransactionCountByNumberTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_BLOCK_TRANSACTION_COUNT_BY_NUMBER
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|AT_BLOCK
argument_list|,
literal|"latest"
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|BigInteger
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|BigInteger
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
comment|//not supported operation by Ganache
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|ethGetUncleCountByBlockHashTest ()
specifier|public
name|void
name|ethGetUncleCountByBlockHashTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_UNCLE_COUNT_BY_BLOCK_HASH
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|BLOCK_HASH
argument_list|,
literal|"0x1fab3a1cc7f016029e41e72363362caf9bd09388ba94070d6ada37b8757ab19a"
argument_list|)
expr_stmt|;
comment|// Ganache block 0
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|BigInteger
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|BigInteger
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
comment|//not supported operation by Ganache
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|ethGetUncleCountByBlockNumberTest ()
specifier|public
name|void
name|ethGetUncleCountByBlockNumberTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_UNCLE_COUNT_BY_BLOCK_HASH
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|AT_BLOCK
argument_list|,
literal|"latest"
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|BigInteger
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|BigInteger
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethGetCodeTest ()
specifier|public
name|void
name|ethGetCodeTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_CODE
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|ADDRESS
argument_list|,
literal|"0x3B558E3a9ae7944FEe7a3A1010DD10f05a01034B"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|AT_BLOCK
argument_list|,
literal|"latest"
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|String
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethSignTest ()
specifier|public
name|void
name|ethSignTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_SIGN
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|ADDRESS
argument_list|,
literal|"0xc8CDceCE5d006dAB638029EBCf6Dd666efF5A952"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|SHA3_HASH_OF_DATA_TO_SIGN
argument_list|,
literal|"hello"
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|String
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethSendTransactionTest ()
specifier|public
name|void
name|ethSendTransactionTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_SEND_TRANSACTION
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|FROM_ADDRESS
argument_list|,
literal|"0xc8CDceCE5d006dAB638029EBCf6Dd666efF5A952"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|TO_ADDRESS
argument_list|,
literal|"0x883E97F42e3cfC2b233DC684574F33B96a0329C4"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NONCE
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|9L
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|GAS_PRICE
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|10000000000000L
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|GAS_LIMIT
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|30400L
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|VALUE
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|50000000000000L
argument_list|)
argument_list|)
expr_stmt|;
comment|//        String data = message.getHeader(Web3jConstants.DATA, configuration::getData, String.class);
comment|//
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|String
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
comment|//wrong reminder
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|ethSendRawTransactionTest ()
specifier|public
name|void
name|ethSendRawTransactionTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_SEND_RAW_TRANSACTION
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|SIGNED_TRANSACTION_DATA
argument_list|,
literal|"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675"
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|String
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethCallTest ()
specifier|public
name|void
name|ethCallTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_CALL
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|FROM_ADDRESS
argument_list|,
literal|"0xc8CDceCE5d006dAB638029EBCf6Dd666efF5A952"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|TO_ADDRESS
argument_list|,
literal|"0x3B558E3a9ae7944FEe7a3A1010DD10f05a01034B"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NONCE
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|9L
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|GAS_PRICE
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|10000000000000L
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|GAS_LIMIT
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|30400L
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|VALUE
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|50000000000000L
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|String
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethEstimateGasTest ()
specifier|public
name|void
name|ethEstimateGasTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_ESTIMATE_GAS
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|FROM_ADDRESS
argument_list|,
literal|"0xc8CDceCE5d006dAB638029EBCf6Dd666efF5A952"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|TO_ADDRESS
argument_list|,
literal|"0x3B558E3a9ae7944FEe7a3A1010DD10f05a01034B"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NONCE
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|9L
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|GAS_PRICE
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|10000000000000L
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|GAS_LIMIT
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|30400L
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|VALUE
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|50000000000000L
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|String
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethGetBlockByHashTest ()
specifier|public
name|void
name|ethGetBlockByHashTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_BLOCK_BY_HASH
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|FULL_TRANSACTION_OBJECTS
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|BLOCK_HASH
argument_list|,
literal|"0x1fab3a1cc7f016029e41e72363362caf9bd09388ba94070d6ada37b8757ab19a"
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|String
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethGetBlockByNumberTest ()
specifier|public
name|void
name|ethGetBlockByNumberTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_BLOCK_BY_NUMBER
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|FULL_TRANSACTION_OBJECTS
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|AT_BLOCK
argument_list|,
literal|"latest"
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|String
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethGetTransactionByHashTest ()
specifier|public
name|void
name|ethGetTransactionByHashTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_TRANSACTION_BY_HASH
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|TRANSACTION_HASH
argument_list|,
literal|"0xb082f44cb2faa0f33056d5a341d1a7be73ecfcc6eb3bcb643ab03016ce4b6772"
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Transaction
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Transaction
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethGetTransactionByBlockHashAndIndexTest ()
specifier|public
name|void
name|ethGetTransactionByBlockHashAndIndexTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|BLOCK_HASH
argument_list|,
literal|"0x226aa81c5a7c86caff96af0bdb58739491d4730b629932ca80f3530558282e1d"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|INDEX
argument_list|,
name|BigInteger
operator|.
name|ZERO
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Transaction
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Transaction
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethGetTransactionByBlockNumberAndIndexTest ()
specifier|public
name|void
name|ethGetTransactionByBlockNumberAndIndexTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|AT_BLOCK
argument_list|,
literal|"latest"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|INDEX
argument_list|,
name|BigInteger
operator|.
name|ZERO
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Transaction
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Transaction
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
comment|//not supported operation by Ganache
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|ethGetUncleByBlockHashAndIndexTest ()
specifier|public
name|void
name|ethGetUncleByBlockHashAndIndexTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_UNCLE_BY_BLOCK_HASH_AND_INDEX
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|BLOCK_HASH
argument_list|,
literal|"0x226aa81c5a7c86caff96af0bdb58739491d4730b629932ca80f3530558282e1d"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|INDEX
argument_list|,
name|BigInteger
operator|.
name|ZERO
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|EthBlock
operator|.
name|Block
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|EthBlock
operator|.
name|Block
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
comment|//not supported operation by Ganache
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|ethGetUncleByBlockNumberAndIndexTest ()
specifier|public
name|void
name|ethGetUncleByBlockNumberAndIndexTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_UNCLE_BY_BLOCK_NUMBER_AND_INDEX
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|AT_BLOCK
argument_list|,
literal|"latest"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|INDEX
argument_list|,
name|BigInteger
operator|.
name|ZERO
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|EthBlock
operator|.
name|Block
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|EthBlock
operator|.
name|Block
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethGetCompilers ()
specifier|public
name|void
name|ethGetCompilers
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_COMPILERS
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|List
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
comment|//not supported operation by Ganache
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|ethCompileSolidityTest ()
specifier|public
name|void
name|ethCompileSolidityTest
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|soliditySample
init|=
literal|"pragma solidity ^0.4.23;"
operator|+
literal|"contract Storage {"
operator|+
literal|"    uint pos0;"
operator|+
literal|"    function Storage() {"
operator|+
literal|"        pos0 = 5;"
operator|+
literal|"    }"
operator|+
literal|"}"
decl_stmt|;
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_COMPILE_SOLIDITY
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|SOURCE_CODE
argument_list|,
name|soliditySample
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|EthCompileSolidity
operator|.
name|Code
argument_list|>
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
comment|//not supported operation by Ganache
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|ethCompileLLLTest ()
specifier|public
name|void
name|ethCompileLLLTest
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|sampleCode
init|=
literal|"(returnlll (suicide (caller)))"
decl_stmt|;
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_COMPILE_LLL
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|SOURCE_CODE
argument_list|,
name|sampleCode
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|EthCompileSolidity
operator|.
name|Code
argument_list|>
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
comment|//not supported operation by Ganache
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|ethCompileSerpentTest ()
specifier|public
name|void
name|ethCompileSerpentTest
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|serpentSample
init|=
literal|"(returnlll (suicide (caller)))"
decl_stmt|;
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_COMPILE_SERPENT
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|SOURCE_CODE
argument_list|,
name|serpentSample
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|EthCompileSolidity
operator|.
name|Code
argument_list|>
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethNewFilterTest ()
specifier|public
name|void
name|ethNewFilterTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_NEW_FILTER
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|FROM_BLOCK
argument_list|,
literal|"earliest"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|TO_BLOCK
argument_list|,
literal|"latest"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|ADDRESSES
argument_list|,
literal|"0xc8CDceCE5d006dAB638029EBCf6Dd666efF5A952"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|TOPICS
argument_list|,
literal|"0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b"
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|BigInteger
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|BigInteger
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethNewBlockFilterTest ()
specifier|public
name|void
name|ethNewBlockFilterTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_NEW_BLOCK_FILTER
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|BigInteger
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|BigInteger
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethNewPendingTransactionFilterTest ()
specifier|public
name|void
name|ethNewPendingTransactionFilterTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_NEW_PENDING_TRANSACTION_FILTER
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|BigInteger
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|BigInteger
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethUninstallFilterTest ()
specifier|public
name|void
name|ethUninstallFilterTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_UNINSTALL_FILTER
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|FILTER_ID
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Boolean
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethGetFilterChangesTest ()
specifier|public
name|void
name|ethGetFilterChangesTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_FILTER_CHANGES
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|FILTER_ID
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|EthLog
operator|.
name|LogResult
argument_list|>
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|List
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethGetFilterLogsTest ()
specifier|public
name|void
name|ethGetFilterLogsTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_FILTER_LOGS
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|FILTER_ID
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|EthLog
operator|.
name|LogResult
argument_list|>
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|List
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethGetLogsTest ()
specifier|public
name|void
name|ethGetLogsTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_LOGS
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|FROM_BLOCK
argument_list|,
literal|"earliest"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|TO_BLOCK
argument_list|,
literal|"latest"
argument_list|)
expr_stmt|;
comment|//        exchange.getIn().setHeader(ADDRESSES, "0xc8CDceCE5d006dAB638029EBCf6Dd666efF5A952");
comment|//        exchange.getIn().setHeader(TOPICS, "0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b");
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|EthLog
operator|.
name|LogResult
argument_list|>
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|List
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethGetWorkTest ()
specifier|public
name|void
name|ethGetWorkTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_GET_WORK
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|List
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethSubmitWorkTest ()
specifier|public
name|void
name|ethSubmitWorkTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_SUBMIT_WORK
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|NONCE
argument_list|,
literal|"0x0000000000000001"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|HEADER_POW_HASH
argument_list|,
literal|"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|MIX_DIGEST
argument_list|,
literal|"0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000"
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Boolean
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ethSubmitHashrateTest ()
specifier|public
name|void
name|ethSubmitHashrateTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ETH_SUBMIT_HASHRATE
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|ETH_HASHRATE
argument_list|,
literal|"0x0000000000000000000000000000000000000000000000000000000000500000"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|CLIENT_ID
argument_list|,
literal|"0x59daa26581d0acd1fce254fb7e85952f4c09d0915afd33d3886cd914bc7d283c"
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Boolean
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shhVersionTest ()
specifier|public
name|void
name|shhVersionTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|SHH_VERSION
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|String
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
comment|//not supported operation by Ganache
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|shhPostTest ()
specifier|public
name|void
name|shhPostTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|SHH_POST
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|FROM_ADDRESS
argument_list|,
literal|"0x04f96a5e25610293e42a73908e93ccc8c4d4dc0edcfa9fa872f50cb214e08ebf61a03e245533f97284d442460f2998cd41858798ddfd4d661997d3940272b717b1"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|TO_ADDRESS
argument_list|,
literal|"0x3e245533f97284d442460f2998cd41858798ddf04f96a5e25610293e42a73908e93ccc8c4d4dc0edcfa9fa872f50cb214e08ebf61a0d4d661997d3940272b717b1"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|TOPICS
argument_list|,
literal|"0x776869737065722d636861742d636c69656e74"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|DATA
argument_list|,
literal|"0x7b2274797065223a226d6"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|PRIORITY
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|TTL
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Boolean
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
comment|//not supported operation by Ganache
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|shhNewIdentityTest ()
specifier|public
name|void
name|shhNewIdentityTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|SHH_NEW_IDENTITY
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|String
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
comment|//not supported operation by Ganache
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|shhHasIdentityTest ()
specifier|public
name|void
name|shhHasIdentityTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|SHH_HAS_IDENTITY
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|ADDRESS
argument_list|,
literal|"0xc8CDceCE5d006dAB638029EBCf6Dd666efF5A952"
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Boolean
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
comment|//not supported operation by Ganache
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|shhNewGroupTest ()
specifier|public
name|void
name|shhNewGroupTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|SHH_NEW_GROUP
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|String
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
comment|//not supported operation by Ganache
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|shhAddToGroupTest ()
specifier|public
name|void
name|shhAddToGroupTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|SHH_ADD_TO_GROUP
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|ADDRESS
argument_list|,
literal|"0xc8CDceCE5d006dAB638029EBCf6Dd666efF5A952"
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Boolean
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
comment|//not supported operation by Ganache
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|shhNewFilterTest ()
specifier|public
name|void
name|shhNewFilterTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|SHH_NEW_FILTER
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|DATA
argument_list|,
literal|"0x04f96a5e25610293e42a73908e93ccc8c4d4dc0edcfa9fa872f50cb214e08ebf61a03e245533f97284d442460f2998cd41858798ddfd4d661997d3940272b717b1"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|TOPICS
argument_list|,
literal|"0x12341234bf4b564f"
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|BigInteger
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|BigInteger
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
comment|//not supported operation by Ganache
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|shhUninstallFilterTest ()
specifier|public
name|void
name|shhUninstallFilterTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|SHH_UNINSTALL_FILTER
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|FILTER_ID
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|123
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Boolean
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shhGetFilterChangesTest ()
specifier|public
name|void
name|shhGetFilterChangesTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|SHH_GET_FILTER_CHANGES
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|FILTER_ID
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|123
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ShhMessages
operator|.
name|SshMessage
argument_list|>
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|List
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shhGetMessagesTest ()
specifier|public
name|void
name|shhGetMessagesTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|SHH_GET_MESSAGES
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|FILTER_ID
argument_list|,
name|BigInteger
operator|.
name|valueOf
argument_list|(
literal|123
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ShhMessages
operator|.
name|SshMessage
argument_list|>
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|List
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|body
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"direct:start"
argument_list|)
operator|.
name|to
argument_list|(
literal|"web3j://"
operator|+
name|getUrl
argument_list|()
operator|+
name|OPERATION
operator|.
name|toLowerCase
argument_list|()
operator|+
literal|"="
operator|+
name|TRANSACTION
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

