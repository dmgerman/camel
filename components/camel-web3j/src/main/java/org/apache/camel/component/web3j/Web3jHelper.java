begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.web3j
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|web3j
package|;
end_package

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|web3j
operator|.
name|protocol
operator|.
name|core
operator|.
name|DefaultBlockParameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|web3j
operator|.
name|protocol
operator|.
name|core
operator|.
name|DefaultBlockParameterName
import|;
end_import

begin_class
DECL|class|Web3jHelper
specifier|public
specifier|final
class|class
name|Web3jHelper
block|{
DECL|method|Web3jHelper ()
specifier|private
name|Web3jHelper
parameter_list|()
block|{     }
DECL|method|toDefaultBlockParameter (String block)
specifier|public
specifier|static
name|DefaultBlockParameter
name|toDefaultBlockParameter
parameter_list|(
name|String
name|block
parameter_list|)
block|{
name|DefaultBlockParameter
name|defaultBlockParameter
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|block
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|DefaultBlockParameterName
name|defaultBlockParameterName
range|:
name|DefaultBlockParameterName
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|block
operator|.
name|equalsIgnoreCase
argument_list|(
name|defaultBlockParameterName
operator|.
name|getValue
argument_list|()
argument_list|)
condition|)
block|{
name|defaultBlockParameter
operator|=
name|defaultBlockParameterName
expr_stmt|;
block|}
block|}
if|if
condition|(
name|defaultBlockParameter
operator|==
literal|null
condition|)
block|{
name|defaultBlockParameter
operator|=
name|DefaultBlockParameter
operator|.
name|valueOf
argument_list|(
operator|new
name|BigInteger
argument_list|(
name|block
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|defaultBlockParameter
return|;
block|}
block|}
end_class

end_unit

