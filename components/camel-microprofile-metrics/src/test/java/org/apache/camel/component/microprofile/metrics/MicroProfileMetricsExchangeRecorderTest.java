begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.microprofile.metrics
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|ExchangeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|gauge
operator|.
name|AtomicIntegerGauge
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|Counter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|Tag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MicroProfileMetricsConstants
operator|.
name|CAMEL_METRIC_PREFIX
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MicroProfileMetricsConstants
operator|.
name|EXCHANGES_COMPLETED_METRIC_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MicroProfileMetricsConstants
operator|.
name|EXCHANGES_EXTERNAL_REDELIVERIES_METRIC_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MicroProfileMetricsConstants
operator|.
name|EXCHANGES_FAILED_METRIC_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MicroProfileMetricsConstants
operator|.
name|EXCHANGES_FAILURES_HANDLED_METRIC_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MicroProfileMetricsConstants
operator|.
name|EXCHANGES_INFLIGHT_METRIC_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MicroProfileMetricsConstants
operator|.
name|EXCHANGES_TOTAL_METRIC_NAME
import|;
end_import

begin_class
DECL|class|MicroProfileMetricsExchangeRecorderTest
specifier|public
class|class
name|MicroProfileMetricsExchangeRecorderTest
extends|extends
name|MicroProfileMetricsTestSupport
block|{
DECL|field|TAGS
specifier|private
specifier|static
specifier|final
name|Tag
index|[]
name|TAGS
init|=
operator|new
name|Tag
index|[]
block|{
operator|new
name|Tag
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
block|}
decl_stmt|;
DECL|field|recorder
specifier|private
name|MicroProfileMetricsExchangeRecorder
name|recorder
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|recorder
operator|=
operator|new
name|MicroProfileMetricsExchangeRecorder
argument_list|(
name|metricRegistry
argument_list|,
name|CAMEL_METRIC_PREFIX
argument_list|,
name|TAGS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMetricsRecorderExchangeComplete ()
specifier|public
name|void
name|testMetricsRecorderExchangeComplete
parameter_list|()
block|{
name|recorder
operator|.
name|recordExchangeBegin
argument_list|()
expr_stmt|;
name|Exchange
name|exchange
init|=
name|ExchangeBuilder
operator|.
name|anExchange
argument_list|(
name|context
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|recorder
operator|.
name|recordExchangeComplete
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Counter
name|exchangesCompleted
init|=
name|getCounter
argument_list|(
name|CAMEL_METRIC_PREFIX
operator|+
name|EXCHANGES_COMPLETED_METRIC_NAME
argument_list|,
name|TAGS
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exchangesCompleted
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|Counter
name|exchangesFailed
init|=
name|getCounter
argument_list|(
name|CAMEL_METRIC_PREFIX
operator|+
name|EXCHANGES_FAILED_METRIC_NAME
argument_list|,
name|TAGS
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exchangesFailed
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|Counter
name|exchangesTotal
init|=
name|getCounter
argument_list|(
name|CAMEL_METRIC_PREFIX
operator|+
name|EXCHANGES_TOTAL_METRIC_NAME
argument_list|,
name|TAGS
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exchangesTotal
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|AtomicIntegerGauge
name|exchangesInflight
init|=
name|getAtomicIntegerGauge
argument_list|(
name|CAMEL_METRIC_PREFIX
operator|+
name|EXCHANGES_INFLIGHT_METRIC_NAME
argument_list|,
name|TAGS
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exchangesInflight
operator|.
name|getValue
argument_list|()
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|Counter
name|externalRedeliveries
init|=
name|getCounter
argument_list|(
name|CAMEL_METRIC_PREFIX
operator|+
name|EXCHANGES_EXTERNAL_REDELIVERIES_METRIC_NAME
argument_list|,
name|TAGS
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|externalRedeliveries
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
name|Counter
name|failuresHandled
init|=
name|getCounter
argument_list|(
name|CAMEL_METRIC_PREFIX
operator|+
name|EXCHANGES_FAILURES_HANDLED_METRIC_NAME
argument_list|,
name|TAGS
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|failuresHandled
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMetricsRecorderExchangeInflight ()
specifier|public
name|void
name|testMetricsRecorderExchangeInflight
parameter_list|()
block|{
name|recorder
operator|.
name|recordExchangeBegin
argument_list|()
expr_stmt|;
name|AtomicIntegerGauge
name|exchangesInflight
init|=
name|getAtomicIntegerGauge
argument_list|(
name|CAMEL_METRIC_PREFIX
operator|+
name|EXCHANGES_INFLIGHT_METRIC_NAME
argument_list|,
name|TAGS
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exchangesInflight
operator|.
name|getValue
argument_list|()
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|ExchangeBuilder
operator|.
name|anExchange
argument_list|(
name|context
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|recorder
operator|.
name|recordExchangeComplete
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|exchangesInflight
operator|.
name|getValue
argument_list|()
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMetricsRecorderExternalRedeliveries ()
specifier|public
name|void
name|testMetricsRecorderExternalRedeliveries
parameter_list|()
block|{
name|Exchange
name|exchange
init|=
name|ExchangeBuilder
operator|.
name|anExchange
argument_list|(
name|context
argument_list|)
operator|.
name|withProperty
argument_list|(
name|Exchange
operator|.
name|EXTERNAL_REDELIVERED
argument_list|,
literal|true
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|recorder
operator|.
name|recordExchangeComplete
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Counter
name|externalRedeliveries
init|=
name|getCounter
argument_list|(
name|CAMEL_METRIC_PREFIX
operator|+
name|EXCHANGES_EXTERNAL_REDELIVERIES_METRIC_NAME
argument_list|,
name|TAGS
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|externalRedeliveries
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMetricsRecorderFailuresHandled ()
specifier|public
name|void
name|testMetricsRecorderFailuresHandled
parameter_list|()
block|{
name|Exchange
name|exchange
init|=
name|ExchangeBuilder
operator|.
name|anExchange
argument_list|(
name|context
argument_list|)
operator|.
name|withProperty
argument_list|(
name|Exchange
operator|.
name|FAILURE_HANDLED
argument_list|,
literal|true
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|recorder
operator|.
name|recordExchangeComplete
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Counter
name|failuresHandled
init|=
name|getCounter
argument_list|(
name|CAMEL_METRIC_PREFIX
operator|+
name|EXCHANGES_FAILURES_HANDLED_METRIC_NAME
argument_list|,
name|TAGS
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|failuresHandled
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMetricsRecorderExchangesFailed ()
specifier|public
name|void
name|testMetricsRecorderExchangesFailed
parameter_list|()
block|{
name|Exchange
name|exchange
init|=
name|ExchangeBuilder
operator|.
name|anExchange
argument_list|(
name|context
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|exchange
operator|.
name|setException
argument_list|(
operator|new
name|Exception
argument_list|()
argument_list|)
expr_stmt|;
name|recorder
operator|.
name|recordExchangeComplete
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Counter
name|exchangesFailed
init|=
name|getCounter
argument_list|(
name|CAMEL_METRIC_PREFIX
operator|+
name|EXCHANGES_FAILED_METRIC_NAME
argument_list|,
name|TAGS
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exchangesFailed
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

