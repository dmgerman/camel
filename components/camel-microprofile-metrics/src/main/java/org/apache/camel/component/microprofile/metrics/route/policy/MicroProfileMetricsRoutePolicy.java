begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.microprofile.metrics.route.policy
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|route
operator|.
name|policy
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|NonManagedService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Route
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RuntimeCamelException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MicroProfileMetricsHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|RoutePolicySupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|service
operator|.
name|ServiceHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MetricRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|Timer
operator|.
name|Context
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MicroProfileMetricsConstants
operator|.
name|DEFAULT_CAMEL_ROUTE_POLICY_METRIC_NAME
import|;
end_import

begin_class
DECL|class|MicroProfileMetricsRoutePolicy
specifier|public
class|class
name|MicroProfileMetricsRoutePolicy
extends|extends
name|RoutePolicySupport
implements|implements
name|NonManagedService
block|{
DECL|field|metricRegistry
specifier|private
name|MetricRegistry
name|metricRegistry
decl_stmt|;
DECL|field|statistics
specifier|private
name|MetricsStatistics
name|statistics
decl_stmt|;
DECL|field|namingStrategy
specifier|private
name|MicroProfileMetricsRoutePolicyNamingStrategy
name|namingStrategy
init|=
name|MicroProfileMetricsRoutePolicyNamingStrategy
operator|.
name|DEFAULT
decl_stmt|;
DECL|class|MetricsStatistics
specifier|private
specifier|static
specifier|final
class|class
name|MetricsStatistics
block|{
DECL|field|metricRegistry
specifier|private
specifier|final
name|MetricRegistry
name|metricRegistry
decl_stmt|;
DECL|field|route
specifier|private
specifier|final
name|Route
name|route
decl_stmt|;
DECL|field|namingStrategy
specifier|private
specifier|final
name|MicroProfileMetricsRoutePolicyNamingStrategy
name|namingStrategy
decl_stmt|;
DECL|method|MetricsStatistics (MetricRegistry metricRegistry, Route route, MicroProfileMetricsRoutePolicyNamingStrategy namingStrategy)
specifier|private
name|MetricsStatistics
parameter_list|(
name|MetricRegistry
name|metricRegistry
parameter_list|,
name|Route
name|route
parameter_list|,
name|MicroProfileMetricsRoutePolicyNamingStrategy
name|namingStrategy
parameter_list|)
block|{
name|this
operator|.
name|metricRegistry
operator|=
name|ObjectHelper
operator|.
name|notNull
argument_list|(
name|metricRegistry
argument_list|,
literal|"metricRegistry"
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|this
operator|.
name|namingStrategy
operator|=
name|ObjectHelper
operator|.
name|notNull
argument_list|(
name|namingStrategy
argument_list|,
literal|"MicroProfileMetricsRoutePolicyNamingStrategy"
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|this
operator|.
name|route
operator|=
name|route
expr_stmt|;
block|}
DECL|method|onExchangeBegin (Exchange exchange)
specifier|public
name|void
name|onExchangeBegin
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
name|namingStrategy
operator|.
name|getName
argument_list|(
name|route
argument_list|)
expr_stmt|;
name|Timer
name|timer
init|=
name|metricRegistry
operator|.
name|timer
argument_list|(
name|namingStrategy
operator|.
name|getName
argument_list|(
name|route
argument_list|)
argument_list|,
name|namingStrategy
operator|.
name|getTags
argument_list|(
name|route
argument_list|,
name|exchange
argument_list|)
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|setProperty
argument_list|(
name|propertyName
argument_list|(
name|exchange
argument_list|)
argument_list|,
name|timer
operator|.
name|time
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|onExchangeDone (Exchange exchange)
specifier|public
name|void
name|onExchangeDone
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
name|Context
name|context
init|=
operator|(
name|Context
operator|)
name|exchange
operator|.
name|removeProperty
argument_list|(
name|propertyName
argument_list|(
name|exchange
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|context
operator|!=
literal|null
condition|)
block|{
name|context
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|propertyName (Exchange exchange)
specifier|private
name|String
name|propertyName
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"%s.%s.%s"
argument_list|,
name|DEFAULT_CAMEL_ROUTE_POLICY_METRIC_NAME
argument_list|,
name|route
operator|.
name|getId
argument_list|()
argument_list|,
name|exchange
operator|.
name|getExchangeId
argument_list|()
argument_list|)
return|;
block|}
block|}
DECL|method|getMetricRegistry ()
specifier|public
name|MetricRegistry
name|getMetricRegistry
parameter_list|()
block|{
return|return
name|metricRegistry
return|;
block|}
DECL|method|setMetricRegistry (MetricRegistry metricRegistry)
specifier|public
name|void
name|setMetricRegistry
parameter_list|(
name|MetricRegistry
name|metricRegistry
parameter_list|)
block|{
name|this
operator|.
name|metricRegistry
operator|=
name|metricRegistry
expr_stmt|;
block|}
DECL|method|getNamingStrategy ()
specifier|public
name|MicroProfileMetricsRoutePolicyNamingStrategy
name|getNamingStrategy
parameter_list|()
block|{
return|return
name|namingStrategy
return|;
block|}
DECL|method|setNamingStrategy (MicroProfileMetricsRoutePolicyNamingStrategy namingStrategy)
specifier|public
name|void
name|setNamingStrategy
parameter_list|(
name|MicroProfileMetricsRoutePolicyNamingStrategy
name|namingStrategy
parameter_list|)
block|{
name|this
operator|.
name|namingStrategy
operator|=
name|namingStrategy
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onInit (Route route)
specifier|public
name|void
name|onInit
parameter_list|(
name|Route
name|route
parameter_list|)
block|{
name|super
operator|.
name|onInit
argument_list|(
name|route
argument_list|)
expr_stmt|;
name|MetricRegistry
name|metricRegistry
init|=
name|getMetricRegistry
argument_list|()
decl_stmt|;
if|if
condition|(
name|metricRegistry
operator|==
literal|null
condition|)
block|{
name|metricRegistry
operator|=
name|MicroProfileMetricsHelper
operator|.
name|getMetricRegistry
argument_list|(
name|route
operator|.
name|getCamelContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|MicroProfileMetricsRoutePolicyService
name|registryService
init|=
name|route
operator|.
name|getCamelContext
argument_list|()
operator|.
name|hasService
argument_list|(
name|MicroProfileMetricsRoutePolicyService
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|registryService
operator|==
literal|null
condition|)
block|{
name|registryService
operator|=
operator|new
name|MicroProfileMetricsRoutePolicyService
argument_list|()
expr_stmt|;
name|registryService
operator|.
name|setMetricRegistry
argument_list|(
name|metricRegistry
argument_list|)
expr_stmt|;
name|route
operator|.
name|getCamelContext
argument_list|()
operator|.
name|addService
argument_list|(
name|registryService
argument_list|)
expr_stmt|;
name|ServiceHelper
operator|.
name|startService
argument_list|(
name|registryService
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|RuntimeCamelException
operator|.
name|wrapRuntimeCamelException
argument_list|(
name|e
argument_list|)
throw|;
block|}
name|statistics
operator|=
operator|new
name|MetricsStatistics
argument_list|(
name|metricRegistry
argument_list|,
name|route
argument_list|,
name|getNamingStrategy
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onExchangeBegin (Route route, Exchange exchange)
specifier|public
name|void
name|onExchangeBegin
parameter_list|(
name|Route
name|route
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
block|{
if|if
condition|(
name|statistics
operator|!=
literal|null
condition|)
block|{
name|statistics
operator|.
name|onExchangeBegin
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onExchangeDone (Route route, Exchange exchange)
specifier|public
name|void
name|onExchangeDone
parameter_list|(
name|Route
name|route
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
block|{
if|if
condition|(
name|statistics
operator|!=
literal|null
condition|)
block|{
name|statistics
operator|.
name|onExchangeDone
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

