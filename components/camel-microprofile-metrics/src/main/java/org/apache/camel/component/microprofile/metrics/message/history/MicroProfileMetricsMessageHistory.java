begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.microprofile.metrics.message.history
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|message
operator|.
name|history
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|NamedNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Route
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|DefaultMessageHistory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MetricRegistry
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|Timer
operator|.
name|Context
import|;
end_import

begin_class
DECL|class|MicroProfileMetricsMessageHistory
specifier|public
class|class
name|MicroProfileMetricsMessageHistory
extends|extends
name|DefaultMessageHistory
block|{
DECL|field|route
specifier|private
specifier|final
name|Route
name|route
decl_stmt|;
DECL|field|context
specifier|private
specifier|final
name|Context
name|context
decl_stmt|;
DECL|field|metricRegistry
specifier|private
specifier|final
name|MetricRegistry
name|metricRegistry
decl_stmt|;
DECL|field|namingStrategy
specifier|private
specifier|final
name|MicroProfileMetricsMessageHistoryNamingStrategy
name|namingStrategy
decl_stmt|;
DECL|method|MicroProfileMetricsMessageHistory (MetricRegistry metricRegistry, Route route, NamedNode namedNode, MicroProfileMetricsMessageHistoryNamingStrategy namingStrategy, long timestamp, Message message)
specifier|public
name|MicroProfileMetricsMessageHistory
parameter_list|(
name|MetricRegistry
name|metricRegistry
parameter_list|,
name|Route
name|route
parameter_list|,
name|NamedNode
name|namedNode
parameter_list|,
name|MicroProfileMetricsMessageHistoryNamingStrategy
name|namingStrategy
parameter_list|,
name|long
name|timestamp
parameter_list|,
name|Message
name|message
parameter_list|)
block|{
name|super
argument_list|(
name|route
operator|.
name|getId
argument_list|()
argument_list|,
name|namedNode
argument_list|,
name|timestamp
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|this
operator|.
name|metricRegistry
operator|=
name|metricRegistry
expr_stmt|;
name|this
operator|.
name|route
operator|=
name|route
expr_stmt|;
name|this
operator|.
name|namingStrategy
operator|=
name|namingStrategy
expr_stmt|;
name|this
operator|.
name|context
operator|=
name|metricRegistry
operator|.
name|timer
argument_list|(
name|namingStrategy
operator|.
name|getName
argument_list|(
name|route
argument_list|,
name|getNode
argument_list|()
argument_list|)
argument_list|,
name|namingStrategy
operator|.
name|getTags
argument_list|(
name|route
argument_list|,
name|getNode
argument_list|()
argument_list|)
argument_list|)
operator|.
name|time
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|nodeProcessingDone ()
specifier|public
name|void
name|nodeProcessingDone
parameter_list|()
block|{
name|super
operator|.
name|nodeProcessingDone
argument_list|()
expr_stmt|;
name|context
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"MicroProfileMetricsMessageHistory[routeId="
operator|+
name|getRouteId
argument_list|()
operator|+
literal|", node="
operator|+
name|getNode
argument_list|()
operator|.
name|getId
argument_list|()
operator|+
literal|']'
return|;
block|}
block|}
end_class

end_unit

