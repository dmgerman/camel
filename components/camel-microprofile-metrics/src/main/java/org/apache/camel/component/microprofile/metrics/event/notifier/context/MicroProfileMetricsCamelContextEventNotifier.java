begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.microprofile.metrics.event.notifier.context
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|event
operator|.
name|notifier
operator|.
name|context
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MicroProfileMetricsHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|event
operator|.
name|notifier
operator|.
name|AbstractMicroProfileMetricsEventNotifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|gauge
operator|.
name|LambdaGauge
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|CamelEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|CamelEvent
operator|.
name|CamelContextStartingEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MetadataBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MetricRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MetricType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MetricUnits
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|Tag
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MicroProfileMetricsConstants
operator|.
name|CAMEL_CONTEXT_STATUS_DESCRIPTION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MicroProfileMetricsConstants
operator|.
name|CAMEL_CONTEXT_STATUS_DISPLAY_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MicroProfileMetricsConstants
operator|.
name|CAMEL_CONTEXT_TAG
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MicroProfileMetricsConstants
operator|.
name|CAMEL_CONTEXT_UPTIME_DESCRIPTION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|microprofile
operator|.
name|metrics
operator|.
name|MicroProfileMetricsConstants
operator|.
name|CAMEL_CONTEXT_UPTIME_DISPLAY_NAME
import|;
end_import

begin_class
DECL|class|MicroProfileMetricsCamelContextEventNotifier
specifier|public
class|class
name|MicroProfileMetricsCamelContextEventNotifier
extends|extends
name|AbstractMicroProfileMetricsEventNotifier
argument_list|<
name|CamelContextStartingEvent
argument_list|>
block|{
DECL|field|namingStrategy
specifier|private
name|MicroProfileMetricsCamelContextEventNotifierNamingStrategy
name|namingStrategy
init|=
name|MicroProfileMetricsCamelContextEventNotifierNamingStrategy
operator|.
name|DEFAULT
decl_stmt|;
DECL|method|MicroProfileMetricsCamelContextEventNotifier ()
specifier|public
name|MicroProfileMetricsCamelContextEventNotifier
parameter_list|()
block|{
name|super
argument_list|(
name|CamelContextStartingEvent
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
DECL|method|getNamingStrategy ()
specifier|public
name|MicroProfileMetricsCamelContextEventNotifierNamingStrategy
name|getNamingStrategy
parameter_list|()
block|{
return|return
name|namingStrategy
return|;
block|}
DECL|method|setNamingStrategy (MicroProfileMetricsCamelContextEventNotifierNamingStrategy namingStrategy)
specifier|public
name|void
name|setNamingStrategy
parameter_list|(
name|MicroProfileMetricsCamelContextEventNotifierNamingStrategy
name|namingStrategy
parameter_list|)
block|{
name|this
operator|.
name|namingStrategy
operator|=
name|namingStrategy
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|notify (CamelEvent event)
specifier|public
name|void
name|notify
parameter_list|(
name|CamelEvent
name|event
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|event
operator|instanceof
name|CamelContextStartingEvent
condition|)
block|{
name|registerCamelContextMetrics
argument_list|(
operator|(
operator|(
name|CamelContextStartingEvent
operator|)
name|event
operator|)
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|registerCamelContextMetrics (CamelContext camelContext)
specifier|public
name|void
name|registerCamelContextMetrics
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|)
block|{
name|MetricRegistry
name|metricRegistry
init|=
name|getMetricRegistry
argument_list|()
decl_stmt|;
name|Tag
index|[]
name|tags
init|=
name|namingStrategy
operator|.
name|getTags
argument_list|(
name|camelContext
argument_list|)
decl_stmt|;
name|Metadata
name|uptimeMetadata
init|=
operator|new
name|MetadataBuilder
argument_list|()
operator|.
name|withName
argument_list|(
name|namingStrategy
operator|.
name|getCamelContextUptimeName
argument_list|()
argument_list|)
operator|.
name|withDisplayName
argument_list|(
name|CAMEL_CONTEXT_UPTIME_DISPLAY_NAME
argument_list|)
operator|.
name|withDescription
argument_list|(
name|CAMEL_CONTEXT_UPTIME_DESCRIPTION
argument_list|)
operator|.
name|withType
argument_list|(
name|MetricType
operator|.
name|GAUGE
argument_list|)
operator|.
name|withUnit
argument_list|(
name|MetricUnits
operator|.
name|MILLISECONDS
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|metricRegistry
operator|.
name|register
argument_list|(
name|uptimeMetadata
argument_list|,
operator|new
name|LambdaGauge
argument_list|(
parameter_list|()
lambda|->
name|camelContext
operator|.
name|getUptimeMillis
argument_list|()
argument_list|)
argument_list|,
name|tags
argument_list|)
expr_stmt|;
name|Metadata
name|statusMetadata
init|=
operator|new
name|MetadataBuilder
argument_list|()
operator|.
name|withName
argument_list|(
name|namingStrategy
operator|.
name|getCamelContextStatusName
argument_list|()
argument_list|)
operator|.
name|withDisplayName
argument_list|(
name|CAMEL_CONTEXT_STATUS_DISPLAY_NAME
argument_list|)
operator|.
name|withDescription
argument_list|(
name|CAMEL_CONTEXT_STATUS_DESCRIPTION
argument_list|)
operator|.
name|withType
argument_list|(
name|MetricType
operator|.
name|GAUGE
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|metricRegistry
operator|.
name|register
argument_list|(
name|statusMetadata
argument_list|,
operator|new
name|LambdaGauge
argument_list|(
parameter_list|()
lambda|->
name|camelContext
operator|.
name|getStatus
argument_list|()
operator|.
name|ordinal
argument_list|()
argument_list|)
argument_list|,
name|tags
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doStop ()
specifier|protected
name|void
name|doStop
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|doStop
argument_list|()
expr_stmt|;
name|MicroProfileMetricsHelper
operator|.
name|removeMetricsFromRegistry
argument_list|(
name|getMetricRegistry
argument_list|()
argument_list|,
parameter_list|(
name|metricID
parameter_list|,
name|metric
parameter_list|)
lambda|->
block|{
name|String
name|name
init|=
name|metricID
operator|.
name|getName
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|tags
init|=
name|metricID
operator|.
name|getTags
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
name|namingStrategy
operator|.
name|getCamelContextStatusName
argument_list|()
argument_list|)
operator|||
name|name
operator|.
name|equals
argument_list|(
name|namingStrategy
operator|.
name|getCamelContextUptimeName
argument_list|()
argument_list|)
condition|)
block|{
if|if
condition|(
name|tags
operator|.
name|containsKey
argument_list|(
name|CAMEL_CONTEXT_TAG
argument_list|)
condition|)
block|{
return|return
name|tags
operator|.
name|get
argument_list|(
name|CAMEL_CONTEXT_TAG
argument_list|)
operator|.
name|equals
argument_list|(
name|getCamelContext
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

