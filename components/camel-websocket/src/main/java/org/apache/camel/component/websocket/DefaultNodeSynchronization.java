begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.websocket
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|websocket
package|;
end_package

begin_class
DECL|class|DefaultNodeSynchronization
specifier|public
class|class
name|DefaultNodeSynchronization
implements|implements
name|NodeSynchronization
block|{
DECL|field|memoryStore
specifier|private
name|WebsocketStore
name|memoryStore
decl_stmt|;
DECL|field|globalStore
specifier|private
name|WebsocketStore
name|globalStore
decl_stmt|;
DECL|method|DefaultNodeSynchronization (WebsocketStore memoryStore, WebsocketStore globalStore)
specifier|public
name|DefaultNodeSynchronization
parameter_list|(
name|WebsocketStore
name|memoryStore
parameter_list|,
name|WebsocketStore
name|globalStore
parameter_list|)
block|{
name|this
operator|.
name|memoryStore
operator|=
name|memoryStore
expr_stmt|;
name|this
operator|.
name|globalStore
operator|=
name|globalStore
expr_stmt|;
block|}
DECL|method|DefaultNodeSynchronization (WebsocketStore memoryStore)
specifier|public
name|DefaultNodeSynchronization
parameter_list|(
name|WebsocketStore
name|memoryStore
parameter_list|)
block|{
name|this
operator|.
name|memoryStore
operator|=
name|memoryStore
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addSocket (DefaultWebsocket socket)
specifier|public
name|void
name|addSocket
parameter_list|(
name|DefaultWebsocket
name|socket
parameter_list|)
block|{
name|memoryStore
operator|.
name|add
argument_list|(
name|socket
argument_list|)
expr_stmt|;
if|if
condition|(
name|globalStore
operator|!=
literal|null
condition|)
block|{
name|globalStore
operator|.
name|add
argument_list|(
name|socket
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|removeSocket (String id)
specifier|public
name|void
name|removeSocket
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|memoryStore
operator|.
name|remove
argument_list|(
name|id
argument_list|)
expr_stmt|;
if|if
condition|(
name|globalStore
operator|!=
literal|null
condition|)
block|{
name|globalStore
operator|.
name|remove
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|removeSocket (DefaultWebsocket socket)
specifier|public
name|void
name|removeSocket
parameter_list|(
name|DefaultWebsocket
name|socket
parameter_list|)
block|{
name|memoryStore
operator|.
name|remove
argument_list|(
name|socket
argument_list|)
expr_stmt|;
if|if
condition|(
name|globalStore
operator|!=
literal|null
condition|)
block|{
name|globalStore
operator|.
name|remove
argument_list|(
name|socket
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

