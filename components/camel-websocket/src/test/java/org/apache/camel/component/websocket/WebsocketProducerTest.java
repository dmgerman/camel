begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.websocket
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|websocket
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutionException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Future
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|websocket
operator|.
name|api
operator|.
name|RemoteEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|websocket
operator|.
name|api
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|InOrder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|runners
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doThrow
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|inOrder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
DECL|class|WebsocketProducerTest
specifier|public
class|class
name|WebsocketProducerTest
block|{
DECL|field|MESSAGE
specifier|private
specifier|static
specifier|final
name|String
name|MESSAGE
init|=
literal|"MESSAGE"
decl_stmt|;
DECL|field|SESSION_KEY
specifier|private
specifier|static
specifier|final
name|String
name|SESSION_KEY
init|=
literal|"random-session-key"
decl_stmt|;
annotation|@
name|Mock
DECL|field|endpoint
specifier|private
name|WebsocketEndpoint
name|endpoint
decl_stmt|;
annotation|@
name|Mock
DECL|field|store
specifier|private
name|WebsocketStore
name|store
decl_stmt|;
annotation|@
name|Mock
DECL|field|session
specifier|private
name|Session
name|session
decl_stmt|;
annotation|@
name|Mock
DECL|field|defaultWebsocket1
specifier|private
name|DefaultWebsocket
name|defaultWebsocket1
decl_stmt|;
annotation|@
name|Mock
DECL|field|defaultWebsocket2
specifier|private
name|DefaultWebsocket
name|defaultWebsocket2
decl_stmt|;
annotation|@
name|Mock
DECL|field|exchange
specifier|private
name|Exchange
name|exchange
decl_stmt|;
annotation|@
name|Mock
DECL|field|inMessage
specifier|private
name|Message
name|inMessage
decl_stmt|;
annotation|@
name|Mock
DECL|field|remoteEndpoint
specifier|private
name|RemoteEndpoint
name|remoteEndpoint
decl_stmt|;
annotation|@
name|Mock
DECL|field|future
specifier|private
name|Future
argument_list|<
name|Void
argument_list|>
name|future
decl_stmt|;
DECL|field|ioException
specifier|private
name|IOException
name|ioException
init|=
operator|new
name|IOException
argument_list|(
literal|"BAD NEWS EVERYONE!"
argument_list|)
decl_stmt|;
DECL|field|exception
specifier|private
name|ExecutionException
name|exception
init|=
operator|new
name|ExecutionException
argument_list|(
literal|"Failure"
argument_list|,
name|ioException
argument_list|)
decl_stmt|;
DECL|field|websocketProducer
specifier|private
name|WebsocketProducer
name|websocketProducer
decl_stmt|;
DECL|field|sockets
specifier|private
name|Collection
argument_list|<
name|DefaultWebsocket
argument_list|>
name|sockets
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|websocketProducer
operator|=
operator|new
name|WebsocketProducer
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
name|websocketProducer
operator|.
name|setStore
argument_list|(
name|store
argument_list|)
expr_stmt|;
name|sockets
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
name|defaultWebsocket1
argument_list|,
name|defaultWebsocket2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testProcessSingleMessage ()
specifier|public
name|void
name|testProcessSingleMessage
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|inMessage
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|inMessage
operator|.
name|getMandatoryBody
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|MESSAGE
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|inMessage
operator|.
name|getHeader
argument_list|(
name|WebsocketConstants
operator|.
name|SEND_TO_ALL
argument_list|,
literal|false
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|inMessage
operator|.
name|getHeader
argument_list|(
name|WebsocketConstants
operator|.
name|CONNECTION_KEY
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|SESSION_KEY
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|store
operator|.
name|get
argument_list|(
name|SESSION_KEY
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|defaultWebsocket1
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|defaultWebsocket1
operator|.
name|getSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|session
operator|.
name|isOpen
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|session
operator|.
name|getRemote
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|remoteEndpoint
argument_list|)
expr_stmt|;
name|websocketProducer
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|endpoint
argument_list|,
name|store
argument_list|,
name|session
argument_list|,
name|defaultWebsocket1
argument_list|,
name|defaultWebsocket2
argument_list|,
name|exchange
argument_list|,
name|inMessage
argument_list|,
name|remoteEndpoint
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|exchange
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getIn
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|inMessage
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getMandatoryBody
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|inMessage
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getHeader
argument_list|(
name|WebsocketConstants
operator|.
name|SEND_TO_ALL
argument_list|,
literal|false
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|inMessage
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getHeader
argument_list|(
name|WebsocketConstants
operator|.
name|CONNECTION_KEY
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|store
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
name|SESSION_KEY
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|defaultWebsocket1
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|session
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|isOpen
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|defaultWebsocket1
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|remoteEndpoint
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|sendStringByFuture
argument_list|(
name|MESSAGE
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testProcessSingleMessageWithException ()
specifier|public
name|void
name|testProcessSingleMessageWithException
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|inMessage
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|inMessage
operator|.
name|getMandatoryBody
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|MESSAGE
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|inMessage
operator|.
name|getHeader
argument_list|(
name|WebsocketConstants
operator|.
name|SEND_TO_ALL
argument_list|,
literal|false
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|inMessage
operator|.
name|getHeader
argument_list|(
name|WebsocketConstants
operator|.
name|CONNECTION_KEY
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|SESSION_KEY
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|store
operator|.
name|get
argument_list|(
name|SESSION_KEY
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|defaultWebsocket1
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|defaultWebsocket1
operator|.
name|getSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|session
operator|.
name|isOpen
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|session
operator|.
name|getRemote
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|remoteEndpoint
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|remoteEndpoint
operator|.
name|sendStringByFuture
argument_list|(
name|MESSAGE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|future
argument_list|)
expr_stmt|;
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|future
argument_list|)
operator|.
name|get
argument_list|(
literal|60000
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
try|try
block|{
name|websocketProducer
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Exception expected"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// expected
block|}
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|endpoint
argument_list|,
name|store
argument_list|,
name|session
argument_list|,
name|defaultWebsocket1
argument_list|,
name|defaultWebsocket2
argument_list|,
name|exchange
argument_list|,
name|inMessage
argument_list|,
name|remoteEndpoint
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|exchange
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getIn
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|inMessage
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getMandatoryBody
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|inMessage
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getHeader
argument_list|(
name|WebsocketConstants
operator|.
name|SEND_TO_ALL
argument_list|,
literal|false
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|inMessage
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getHeader
argument_list|(
name|WebsocketConstants
operator|.
name|CONNECTION_KEY
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|store
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
name|SESSION_KEY
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|defaultWebsocket1
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|session
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|isOpen
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|defaultWebsocket1
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|remoteEndpoint
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|sendStringByFuture
argument_list|(
name|MESSAGE
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|endpoint
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|getSendTimeout
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testProcessMultipleMessages ()
specifier|public
name|void
name|testProcessMultipleMessages
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|inMessage
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|inMessage
operator|.
name|getMandatoryBody
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|MESSAGE
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|inMessage
operator|.
name|getHeader
argument_list|(
name|WebsocketConstants
operator|.
name|SEND_TO_ALL
argument_list|,
literal|false
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|store
operator|.
name|getAll
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|sockets
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|defaultWebsocket1
operator|.
name|getSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|defaultWebsocket2
operator|.
name|getSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|session
operator|.
name|isOpen
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|session
operator|.
name|getRemote
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|remoteEndpoint
argument_list|)
expr_stmt|;
name|websocketProducer
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|endpoint
argument_list|,
name|store
argument_list|,
name|session
argument_list|,
name|defaultWebsocket1
argument_list|,
name|defaultWebsocket2
argument_list|,
name|exchange
argument_list|,
name|inMessage
argument_list|,
name|remoteEndpoint
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|exchange
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getIn
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|inMessage
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getMandatoryBody
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|inMessage
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getHeader
argument_list|(
name|WebsocketConstants
operator|.
name|SEND_TO_ALL
argument_list|,
literal|false
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|store
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getAll
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|defaultWebsocket1
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|session
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|isOpen
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|defaultWebsocket1
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|remoteEndpoint
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|sendStringByFuture
argument_list|(
name|MESSAGE
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|defaultWebsocket2
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|session
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|isOpen
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|defaultWebsocket2
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|remoteEndpoint
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|sendStringByFuture
argument_list|(
name|MESSAGE
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testProcessSingleMessageNoConnectionKey ()
specifier|public
name|void
name|testProcessSingleMessageNoConnectionKey
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|inMessage
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|inMessage
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|MESSAGE
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|inMessage
operator|.
name|getHeader
argument_list|(
name|WebsocketConstants
operator|.
name|SEND_TO_ALL
argument_list|,
literal|false
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|inMessage
operator|.
name|getHeader
argument_list|(
name|WebsocketConstants
operator|.
name|CONNECTION_KEY
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
try|try
block|{
name|websocketProducer
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Exception expected"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|,
name|e
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|e
operator|.
name|getCause
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|endpoint
argument_list|,
name|store
argument_list|,
name|session
argument_list|,
name|defaultWebsocket1
argument_list|,
name|defaultWebsocket2
argument_list|,
name|exchange
argument_list|,
name|inMessage
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|exchange
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getIn
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|inMessage
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getMandatoryBody
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|inMessage
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getHeader
argument_list|(
name|WebsocketConstants
operator|.
name|SEND_TO_ALL
argument_list|,
literal|false
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|inMessage
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getHeader
argument_list|(
name|WebsocketConstants
operator|.
name|CONNECTION_KEY
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSendMessage ()
specifier|public
name|void
name|testSendMessage
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|defaultWebsocket1
operator|.
name|getSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|session
operator|.
name|isOpen
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|session
operator|.
name|getRemote
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|remoteEndpoint
argument_list|)
expr_stmt|;
name|websocketProducer
operator|.
name|sendMessage
argument_list|(
name|defaultWebsocket1
argument_list|,
name|MESSAGE
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|endpoint
argument_list|,
name|store
argument_list|,
name|session
argument_list|,
name|defaultWebsocket1
argument_list|,
name|defaultWebsocket2
argument_list|,
name|exchange
argument_list|,
name|inMessage
argument_list|,
name|remoteEndpoint
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|defaultWebsocket1
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|session
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|isOpen
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|defaultWebsocket1
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|remoteEndpoint
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|sendStringByFuture
argument_list|(
name|MESSAGE
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSendMessageConnetionIsClosed ()
specifier|public
name|void
name|testSendMessageConnetionIsClosed
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|defaultWebsocket1
operator|.
name|getSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|session
operator|.
name|isOpen
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|session
operator|.
name|getRemote
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|remoteEndpoint
argument_list|)
expr_stmt|;
name|websocketProducer
operator|.
name|sendMessage
argument_list|(
name|defaultWebsocket1
argument_list|,
name|MESSAGE
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|endpoint
argument_list|,
name|store
argument_list|,
name|session
argument_list|,
name|defaultWebsocket1
argument_list|,
name|defaultWebsocket2
argument_list|,
name|exchange
argument_list|,
name|inMessage
argument_list|,
name|remoteEndpoint
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|defaultWebsocket1
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|session
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|isOpen
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIsSendToAllSet ()
specifier|public
name|void
name|testIsSendToAllSet
parameter_list|()
block|{
name|when
argument_list|(
name|inMessage
operator|.
name|getHeader
argument_list|(
name|WebsocketConstants
operator|.
name|SEND_TO_ALL
argument_list|,
literal|false
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|websocketProducer
operator|.
name|isSendToAllSet
argument_list|(
name|inMessage
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|websocketProducer
operator|.
name|isSendToAllSet
argument_list|(
name|inMessage
argument_list|)
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|inMessage
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|inMessage
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|getHeader
argument_list|(
name|WebsocketConstants
operator|.
name|SEND_TO_ALL
argument_list|,
literal|false
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIsSendToAllSetHeaderNull ()
specifier|public
name|void
name|testIsSendToAllSetHeaderNull
parameter_list|()
block|{
name|when
argument_list|(
name|inMessage
operator|.
name|getHeader
argument_list|(
name|WebsocketConstants
operator|.
name|SEND_TO_ALL
argument_list|,
literal|false
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|websocketProducer
operator|.
name|isSendToAllSet
argument_list|(
name|inMessage
argument_list|)
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|inMessage
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|inMessage
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getHeader
argument_list|(
name|WebsocketConstants
operator|.
name|SEND_TO_ALL
argument_list|,
literal|false
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSendToAll ()
specifier|public
name|void
name|testSendToAll
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|store
operator|.
name|getAll
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|sockets
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|defaultWebsocket1
operator|.
name|getSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|defaultWebsocket2
operator|.
name|getSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|session
operator|.
name|getRemote
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|remoteEndpoint
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|session
operator|.
name|isOpen
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|websocketProducer
operator|.
name|sendToAll
argument_list|(
name|store
argument_list|,
name|MESSAGE
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|store
argument_list|,
name|session
argument_list|,
name|defaultWebsocket1
argument_list|,
name|defaultWebsocket2
argument_list|,
name|remoteEndpoint
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|store
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getAll
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|defaultWebsocket1
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|session
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|isOpen
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|defaultWebsocket1
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|remoteEndpoint
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|sendStringByFuture
argument_list|(
name|MESSAGE
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|defaultWebsocket2
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|session
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|isOpen
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|defaultWebsocket2
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|remoteEndpoint
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|sendStringByFuture
argument_list|(
name|MESSAGE
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSendToAllWithException ()
specifier|public
name|void
name|testSendToAllWithException
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|inMessage
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|inMessage
operator|.
name|getMandatoryBody
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|MESSAGE
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|inMessage
operator|.
name|getHeader
argument_list|(
name|WebsocketConstants
operator|.
name|SEND_TO_ALL
argument_list|,
literal|false
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|store
operator|.
name|getAll
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|sockets
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|defaultWebsocket1
operator|.
name|getSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|defaultWebsocket2
operator|.
name|getSession
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|session
operator|.
name|getRemote
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|remoteEndpoint
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|session
operator|.
name|isOpen
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|remoteEndpoint
operator|.
name|sendStringByFuture
argument_list|(
name|MESSAGE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|future
argument_list|)
expr_stmt|;
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|future
argument_list|)
operator|.
name|get
argument_list|(
literal|60000
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
try|try
block|{
name|websocketProducer
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Exception expected"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// expected
block|}
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|store
argument_list|,
name|session
argument_list|,
name|defaultWebsocket1
argument_list|,
name|defaultWebsocket2
argument_list|,
name|remoteEndpoint
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|store
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getAll
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|defaultWebsocket1
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|session
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|isOpen
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|defaultWebsocket1
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|remoteEndpoint
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|sendStringByFuture
argument_list|(
name|MESSAGE
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|defaultWebsocket2
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|session
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|isOpen
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|defaultWebsocket2
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|remoteEndpoint
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|sendStringByFuture
argument_list|(
name|MESSAGE
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

