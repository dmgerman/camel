begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.websocket
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|websocket
package|;
end_package

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|websocket
operator|.
name|api
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|InOrder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|junit
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|inOrder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
DECL|class|DefaultWebsocketTest
specifier|public
class|class
name|DefaultWebsocketTest
block|{
DECL|field|CLOSE_CODE
specifier|private
specifier|static
specifier|final
name|int
name|CLOSE_CODE
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|MESSAGE
specifier|private
specifier|static
specifier|final
name|String
name|MESSAGE
init|=
literal|"message"
decl_stmt|;
DECL|field|CONNECTION_KEY
specifier|private
specifier|static
specifier|final
name|String
name|CONNECTION_KEY
init|=
literal|"random-connection-key"
decl_stmt|;
annotation|@
name|Mock
DECL|field|session
specifier|private
name|Session
name|session
decl_stmt|;
annotation|@
name|Mock
DECL|field|consumer
specifier|private
name|WebsocketConsumer
name|consumer
decl_stmt|;
annotation|@
name|Mock
DECL|field|sync
specifier|private
name|NodeSynchronization
name|sync
decl_stmt|;
DECL|field|defaultWebsocket
specifier|private
name|DefaultWebsocket
name|defaultWebsocket
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|defaultWebsocket
operator|=
operator|new
name|DefaultWebsocket
argument_list|(
name|sync
argument_list|,
literal|null
argument_list|,
name|consumer
argument_list|)
expr_stmt|;
name|defaultWebsocket
operator|.
name|setConnectionKey
argument_list|(
name|CONNECTION_KEY
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testOnClose ()
specifier|public
name|void
name|testOnClose
parameter_list|()
block|{
name|defaultWebsocket
operator|.
name|onClose
argument_list|(
name|CLOSE_CODE
argument_list|,
name|MESSAGE
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|session
argument_list|,
name|consumer
argument_list|,
name|sync
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|sync
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|removeSocket
argument_list|(
name|defaultWebsocket
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testOnConnect ()
specifier|public
name|void
name|testOnConnect
parameter_list|()
block|{
name|defaultWebsocket
operator|.
name|onConnect
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|session
argument_list|,
name|consumer
argument_list|,
name|sync
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|sync
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|addSocket
argument_list|(
name|defaultWebsocket
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|session
argument_list|,
name|defaultWebsocket
operator|.
name|getSession
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testOnMessage ()
specifier|public
name|void
name|testOnMessage
parameter_list|()
block|{
name|defaultWebsocket
operator|.
name|setConnectionKey
argument_list|(
name|CONNECTION_KEY
argument_list|)
expr_stmt|;
name|defaultWebsocket
operator|.
name|onMessage
argument_list|(
name|MESSAGE
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|session
argument_list|,
name|consumer
argument_list|,
name|sync
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|consumer
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|sendMessage
argument_list|(
name|CONNECTION_KEY
argument_list|,
name|MESSAGE
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testOnMessageWithNullConsumer ()
specifier|public
name|void
name|testOnMessageWithNullConsumer
parameter_list|()
block|{
name|defaultWebsocket
operator|=
operator|new
name|DefaultWebsocket
argument_list|(
name|sync
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|defaultWebsocket
operator|.
name|setConnectionKey
argument_list|(
name|CONNECTION_KEY
argument_list|)
expr_stmt|;
name|defaultWebsocket
operator|.
name|onMessage
argument_list|(
name|MESSAGE
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|session
argument_list|,
name|consumer
argument_list|,
name|sync
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|consumer
argument_list|,
name|times
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|sendMessage
argument_list|(
name|CONNECTION_KEY
argument_list|,
name|MESSAGE
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verifyNoMoreInteractions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetConnection ()
specifier|public
name|void
name|testGetConnection
parameter_list|()
block|{
name|assertNull
argument_list|(
name|defaultWebsocket
operator|.
name|getSession
argument_list|()
argument_list|)
expr_stmt|;
name|defaultWebsocket
operator|.
name|onConnect
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|session
argument_list|,
name|defaultWebsocket
operator|.
name|getSession
argument_list|()
argument_list|)
expr_stmt|;
name|defaultWebsocket
operator|.
name|setSession
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|defaultWebsocket
operator|.
name|getSession
argument_list|()
argument_list|)
expr_stmt|;
name|defaultWebsocket
operator|.
name|setSession
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|session
argument_list|,
name|defaultWebsocket
operator|.
name|getSession
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetConnection ()
specifier|public
name|void
name|testSetConnection
parameter_list|()
block|{
name|testGetConnection
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetConnectionKey ()
specifier|public
name|void
name|testGetConnectionKey
parameter_list|()
block|{
name|defaultWebsocket
operator|.
name|setConnectionKey
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|defaultWebsocket
operator|.
name|getConnectionKey
argument_list|()
argument_list|)
expr_stmt|;
name|defaultWebsocket
operator|.
name|onConnect
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|defaultWebsocket
operator|.
name|getConnectionKey
argument_list|()
argument_list|)
expr_stmt|;
name|defaultWebsocket
operator|.
name|setConnectionKey
argument_list|(
name|CONNECTION_KEY
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|CONNECTION_KEY
argument_list|,
name|defaultWebsocket
operator|.
name|getConnectionKey
argument_list|()
argument_list|)
expr_stmt|;
name|defaultWebsocket
operator|.
name|setConnectionKey
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|defaultWebsocket
operator|.
name|getConnectionKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetConnectionKey ()
specifier|public
name|void
name|testSetConnectionKey
parameter_list|()
block|{
name|testGetConnectionKey
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

