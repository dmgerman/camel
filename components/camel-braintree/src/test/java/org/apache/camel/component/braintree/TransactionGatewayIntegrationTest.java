begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.braintree
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|braintree
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigDecimal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|braintreegateway
operator|.
name|BraintreeGateway
import|;
end_import

begin_import
import|import
name|com
operator|.
name|braintreegateway
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|com
operator|.
name|braintreegateway
operator|.
name|Transaction
import|;
end_import

begin_import
import|import
name|com
operator|.
name|braintreegateway
operator|.
name|TransactionCloneRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|braintreegateway
operator|.
name|TransactionRefundRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|braintreegateway
operator|.
name|TransactionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|braintree
operator|.
name|internal
operator|.
name|BraintreeApiCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|braintree
operator|.
name|internal
operator|.
name|TransactionGatewayApiMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|TransactionGatewayIntegrationTest
specifier|public
class|class
name|TransactionGatewayIntegrationTest
extends|extends
name|AbstractBraintreeTestSupport
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TransactionGatewayIntegrationTest
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|PATH_PREFIX
specifier|private
specifier|static
specifier|final
name|String
name|PATH_PREFIX
init|=
name|BraintreeApiCollection
operator|.
name|getCollection
argument_list|()
operator|.
name|getApiName
argument_list|(
name|TransactionGatewayApiMethod
operator|.
name|class
argument_list|)
operator|.
name|getName
argument_list|()
decl_stmt|;
DECL|field|gateway
specifier|private
name|BraintreeGateway
name|gateway
decl_stmt|;
DECL|field|transactionIds
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|transactionIds
decl_stmt|;
comment|// *************************************************************************
comment|//
comment|// *************************************************************************
DECL|method|TransactionGatewayIntegrationTest ()
specifier|public
name|TransactionGatewayIntegrationTest
parameter_list|()
block|{
name|this
operator|.
name|gateway
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|transactionIds
operator|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doPostSetup ()
specifier|protected
name|void
name|doPostSetup
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|gateway
operator|=
name|getGateway
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|this
operator|.
name|gateway
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|String
name|token
range|:
name|this
operator|.
name|transactionIds
control|)
block|{
comment|// TODO: cleanup
block|}
block|}
name|this
operator|.
name|transactionIds
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
comment|// *************************************************************************
comment|//
comment|// *************************************************************************
annotation|@
name|Test
DECL|method|testSale ()
specifier|public
name|void
name|testSale
parameter_list|()
throws|throws
name|Exception
block|{
name|assertNotNull
argument_list|(
literal|"BraintreeGateway can't be null"
argument_list|,
name|this
operator|.
name|gateway
argument_list|)
expr_stmt|;
specifier|final
name|Result
argument_list|<
name|Transaction
argument_list|>
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://SALE"
argument_list|,
operator|new
name|TransactionRequest
argument_list|()
operator|.
name|amount
argument_list|(
operator|new
name|BigDecimal
argument_list|(
literal|"100.00"
argument_list|)
argument_list|)
operator|.
name|paymentMethodNonce
argument_list|(
literal|"fake-valid-nonce"
argument_list|)
operator|.
name|options
argument_list|()
operator|.
name|submitForSettlement
argument_list|(
literal|true
argument_list|)
operator|.
name|done
argument_list|()
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"sale result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Transaction done - id={}"
argument_list|,
name|result
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|transactionIds
operator|.
name|add
argument_list|(
name|result
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCloneTransaction ()
specifier|public
name|void
name|testCloneTransaction
parameter_list|()
throws|throws
name|Exception
block|{
name|assertNotNull
argument_list|(
literal|"BraintreeGateway can't be null"
argument_list|,
name|this
operator|.
name|gateway
argument_list|)
expr_stmt|;
specifier|final
name|Result
argument_list|<
name|Transaction
argument_list|>
name|createResult
init|=
name|requestBody
argument_list|(
literal|"direct://SALE"
argument_list|,
operator|new
name|TransactionRequest
argument_list|()
operator|.
name|amount
argument_list|(
operator|new
name|BigDecimal
argument_list|(
literal|"100.00"
argument_list|)
argument_list|)
operator|.
name|paymentMethodNonce
argument_list|(
literal|"fake-valid-nonce"
argument_list|)
operator|.
name|options
argument_list|()
operator|.
name|submitForSettlement
argument_list|(
literal|false
argument_list|)
operator|.
name|done
argument_list|()
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"sale result"
argument_list|,
name|createResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|createResult
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Transaction done - id={}"
argument_list|,
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|transactionIds
operator|.
name|add
argument_list|(
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Result
argument_list|<
name|Transaction
argument_list|>
name|cloneResult
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://CLONETRANSACTION"
argument_list|,
literal|null
argument_list|,
operator|new
name|BraintreeHeaderBuilder
argument_list|()
operator|.
name|add
argument_list|(
literal|"id"
argument_list|,
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
literal|"cloneRequest"
argument_list|,
operator|new
name|TransactionCloneRequest
argument_list|()
operator|.
name|amount
argument_list|(
operator|new
name|BigDecimal
argument_list|(
literal|"99.00"
argument_list|)
argument_list|)
operator|.
name|options
argument_list|()
operator|.
name|submitForSettlement
argument_list|(
literal|true
argument_list|)
operator|.
name|done
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"clone result"
argument_list|,
name|cloneResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|cloneResult
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Clone Transaction done - clonedId={}, id={}"
argument_list|,
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|cloneResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|transactionIds
operator|.
name|add
argument_list|(
name|cloneResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFind ()
specifier|public
name|void
name|testFind
parameter_list|()
throws|throws
name|Exception
block|{
name|assertNotNull
argument_list|(
literal|"BraintreeGateway can't be null"
argument_list|,
name|this
operator|.
name|gateway
argument_list|)
expr_stmt|;
specifier|final
name|Result
argument_list|<
name|Transaction
argument_list|>
name|createResult
init|=
name|requestBody
argument_list|(
literal|"direct://SALE"
argument_list|,
operator|new
name|TransactionRequest
argument_list|()
operator|.
name|amount
argument_list|(
operator|new
name|BigDecimal
argument_list|(
literal|"100.00"
argument_list|)
argument_list|)
operator|.
name|paymentMethodNonce
argument_list|(
literal|"fake-valid-nonce"
argument_list|)
operator|.
name|options
argument_list|()
operator|.
name|submitForSettlement
argument_list|(
literal|false
argument_list|)
operator|.
name|done
argument_list|()
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"sale result"
argument_list|,
name|createResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|createResult
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Transaction done - id={}"
argument_list|,
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|transactionIds
operator|.
name|add
argument_list|(
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|// using String message body for single parameter "id"
specifier|final
name|Transaction
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://FIND"
argument_list|,
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"find result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Transaction found - id={}"
argument_list|,
name|result
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSubmitForSettlementWithId ()
specifier|public
name|void
name|testSubmitForSettlementWithId
parameter_list|()
throws|throws
name|Exception
block|{
name|assertNotNull
argument_list|(
literal|"BraintreeGateway can't be null"
argument_list|,
name|this
operator|.
name|gateway
argument_list|)
expr_stmt|;
specifier|final
name|Result
argument_list|<
name|Transaction
argument_list|>
name|createResult
init|=
name|requestBody
argument_list|(
literal|"direct://SALE"
argument_list|,
operator|new
name|TransactionRequest
argument_list|()
operator|.
name|amount
argument_list|(
operator|new
name|BigDecimal
argument_list|(
literal|"100.00"
argument_list|)
argument_list|)
operator|.
name|paymentMethodNonce
argument_list|(
literal|"fake-valid-nonce"
argument_list|)
operator|.
name|options
argument_list|()
operator|.
name|submitForSettlement
argument_list|(
literal|false
argument_list|)
operator|.
name|done
argument_list|()
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"sale result"
argument_list|,
name|createResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|createResult
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Transaction done - id={}"
argument_list|,
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|transactionIds
operator|.
name|add
argument_list|(
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Result
argument_list|<
name|Transaction
argument_list|>
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://SUBMITFORSETTLEMENT_WITH_ID"
argument_list|,
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Submit For Settlement result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Transaction submitted for settlement - id={}"
operator|+
name|result
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSubmitForSettlementWithIdAndAmount ()
specifier|public
name|void
name|testSubmitForSettlementWithIdAndAmount
parameter_list|()
throws|throws
name|Exception
block|{
name|assertNotNull
argument_list|(
literal|"BraintreeGateway can't be null"
argument_list|,
name|this
operator|.
name|gateway
argument_list|)
expr_stmt|;
specifier|final
name|Result
argument_list|<
name|Transaction
argument_list|>
name|createResult
init|=
name|requestBody
argument_list|(
literal|"direct://SALE"
argument_list|,
operator|new
name|TransactionRequest
argument_list|()
operator|.
name|amount
argument_list|(
operator|new
name|BigDecimal
argument_list|(
literal|"100.00"
argument_list|)
argument_list|)
operator|.
name|paymentMethodNonce
argument_list|(
literal|"fake-valid-nonce"
argument_list|)
operator|.
name|options
argument_list|()
operator|.
name|submitForSettlement
argument_list|(
literal|false
argument_list|)
operator|.
name|done
argument_list|()
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"sale result"
argument_list|,
name|createResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|createResult
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Transaction done - id={}"
argument_list|,
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|transactionIds
operator|.
name|add
argument_list|(
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Result
argument_list|<
name|Transaction
argument_list|>
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://SUBMITFORSETTLEMENT_WITH_ID_ADN_AMOUNT"
argument_list|,
literal|null
argument_list|,
operator|new
name|BraintreeHeaderBuilder
argument_list|()
operator|.
name|add
argument_list|(
literal|"id"
argument_list|,
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
literal|"amount"
argument_list|,
operator|new
name|BigDecimal
argument_list|(
literal|"100.00"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Submit For Settlement result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Transaction submitted for settlement - id={}"
operator|+
name|result
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSubmitForSettlementWithRequest ()
specifier|public
name|void
name|testSubmitForSettlementWithRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|assertNotNull
argument_list|(
literal|"BraintreeGateway can't be null"
argument_list|,
name|this
operator|.
name|gateway
argument_list|)
expr_stmt|;
specifier|final
name|Result
argument_list|<
name|Transaction
argument_list|>
name|createResult
init|=
name|requestBody
argument_list|(
literal|"direct://SALE"
argument_list|,
operator|new
name|TransactionRequest
argument_list|()
operator|.
name|amount
argument_list|(
operator|new
name|BigDecimal
argument_list|(
literal|"100.00"
argument_list|)
argument_list|)
operator|.
name|paymentMethodNonce
argument_list|(
literal|"fake-valid-nonce"
argument_list|)
operator|.
name|options
argument_list|()
operator|.
name|submitForSettlement
argument_list|(
literal|false
argument_list|)
operator|.
name|done
argument_list|()
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"sale result"
argument_list|,
name|createResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|createResult
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Transaction done - id={}"
argument_list|,
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|transactionIds
operator|.
name|add
argument_list|(
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Result
argument_list|<
name|Transaction
argument_list|>
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://SUBMITFORSETTLEMENT_WITH_REQUEST"
argument_list|,
literal|null
argument_list|,
operator|new
name|BraintreeHeaderBuilder
argument_list|()
operator|.
name|add
argument_list|(
literal|"id"
argument_list|,
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
literal|"request"
argument_list|,
operator|new
name|TransactionRequest
argument_list|()
operator|.
name|amount
argument_list|(
operator|new
name|BigDecimal
argument_list|(
literal|"100.00"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Submit For Settlement result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Transaction submitted for settlement - id={}"
operator|+
name|result
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRefund ()
specifier|public
name|void
name|testRefund
parameter_list|()
throws|throws
name|Exception
block|{
name|assertNotNull
argument_list|(
literal|"BraintreeGateway can't be null"
argument_list|,
name|this
operator|.
name|gateway
argument_list|)
expr_stmt|;
specifier|final
name|Result
argument_list|<
name|Transaction
argument_list|>
name|createResult
init|=
name|requestBody
argument_list|(
literal|"direct://SALE"
argument_list|,
operator|new
name|TransactionRequest
argument_list|()
operator|.
name|amount
argument_list|(
operator|new
name|BigDecimal
argument_list|(
literal|"100.00"
argument_list|)
argument_list|)
operator|.
name|paymentMethodNonce
argument_list|(
literal|"fake-valid-nonce"
argument_list|)
operator|.
name|options
argument_list|()
operator|.
name|submitForSettlement
argument_list|(
literal|true
argument_list|)
operator|.
name|done
argument_list|()
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"sale result"
argument_list|,
name|createResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|createResult
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|createId
init|=
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
specifier|final
name|Result
argument_list|<
name|Transaction
argument_list|>
name|settleResult
init|=
name|this
operator|.
name|gateway
operator|.
name|testing
argument_list|()
operator|.
name|settle
argument_list|(
name|createId
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"settle result"
argument_list|,
name|settleResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|settleResult
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Result
argument_list|<
name|Transaction
argument_list|>
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://REFUND_WITH_ID"
argument_list|,
name|createId
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Request Refund result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"Refund id(%s) created for transaction id(%s)"
argument_list|,
name|result
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|createId
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRefundWithAmount ()
specifier|public
name|void
name|testRefundWithAmount
parameter_list|()
throws|throws
name|Exception
block|{
name|assertNotNull
argument_list|(
literal|"BraintreeGateway can't be null"
argument_list|,
name|this
operator|.
name|gateway
argument_list|)
expr_stmt|;
specifier|final
name|Result
argument_list|<
name|Transaction
argument_list|>
name|createResult
init|=
name|requestBody
argument_list|(
literal|"direct://SALE"
argument_list|,
operator|new
name|TransactionRequest
argument_list|()
operator|.
name|amount
argument_list|(
operator|new
name|BigDecimal
argument_list|(
literal|"100.00"
argument_list|)
argument_list|)
operator|.
name|paymentMethodNonce
argument_list|(
literal|"fake-valid-nonce"
argument_list|)
operator|.
name|options
argument_list|()
operator|.
name|submitForSettlement
argument_list|(
literal|true
argument_list|)
operator|.
name|done
argument_list|()
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"sale result"
argument_list|,
name|createResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|createResult
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|createId
init|=
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
specifier|final
name|Result
argument_list|<
name|Transaction
argument_list|>
name|settleResult
init|=
name|this
operator|.
name|gateway
operator|.
name|testing
argument_list|()
operator|.
name|settle
argument_list|(
name|createId
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"settle result"
argument_list|,
name|settleResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|settleResult
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Result
argument_list|<
name|Transaction
argument_list|>
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://REFUND"
argument_list|,
literal|null
argument_list|,
operator|new
name|BraintreeHeaderBuilder
argument_list|()
operator|.
name|add
argument_list|(
literal|"id"
argument_list|,
name|createId
argument_list|)
operator|.
name|add
argument_list|(
literal|"amount"
argument_list|,
operator|new
name|BigDecimal
argument_list|(
literal|"99.00"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Request Refund result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"Refund id(%s) created for transaction id(%s)"
argument_list|,
name|result
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|createId
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRefundWithRequest ()
specifier|public
name|void
name|testRefundWithRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|assertNotNull
argument_list|(
literal|"BraintreeGateway can't be null"
argument_list|,
name|this
operator|.
name|gateway
argument_list|)
expr_stmt|;
specifier|final
name|Result
argument_list|<
name|Transaction
argument_list|>
name|createResult
init|=
name|requestBody
argument_list|(
literal|"direct://SALE"
argument_list|,
operator|new
name|TransactionRequest
argument_list|()
operator|.
name|amount
argument_list|(
operator|new
name|BigDecimal
argument_list|(
literal|"100.00"
argument_list|)
argument_list|)
operator|.
name|paymentMethodNonce
argument_list|(
literal|"fake-valid-nonce"
argument_list|)
operator|.
name|options
argument_list|()
operator|.
name|submitForSettlement
argument_list|(
literal|true
argument_list|)
operator|.
name|done
argument_list|()
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"sale result"
argument_list|,
name|createResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|createResult
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|createId
init|=
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
specifier|final
name|Result
argument_list|<
name|Transaction
argument_list|>
name|settleResult
init|=
name|this
operator|.
name|gateway
operator|.
name|testing
argument_list|()
operator|.
name|settle
argument_list|(
name|createId
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"settle result"
argument_list|,
name|settleResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|settleResult
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Result
argument_list|<
name|Transaction
argument_list|>
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://REFUND"
argument_list|,
literal|null
argument_list|,
operator|new
name|BraintreeHeaderBuilder
argument_list|()
operator|.
name|add
argument_list|(
literal|"id"
argument_list|,
name|createId
argument_list|)
operator|.
name|add
argument_list|(
literal|"refundRequest"
argument_list|,
operator|new
name|TransactionRefundRequest
argument_list|()
operator|.
name|amount
argument_list|(
operator|new
name|BigDecimal
argument_list|(
literal|"100.00"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Request Refund result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"Refund id(%s) created for transaction id(%s)"
argument_list|,
name|result
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|createId
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// *************************************************************************
comment|// Auto generated tests
comment|// *************************************************************************
comment|// TODO provide parameter values for cancelRelease
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testCancelRelease ()
specifier|public
name|void
name|testCancelRelease
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using String message body for single parameter "id"
specifier|final
name|com
operator|.
name|braintreegateway
operator|.
name|Result
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://CANCELRELEASE"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"cancelRelease result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"cancelRelease: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for credit
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testCredit ()
specifier|public
name|void
name|testCredit
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using com.braintreegateway.TransactionRequest message body for single parameter "request"
specifier|final
name|com
operator|.
name|braintreegateway
operator|.
name|Result
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://CREDIT"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"credit result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"credit: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for holdInEscrow
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testHoldInEscrow ()
specifier|public
name|void
name|testHoldInEscrow
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using String message body for single parameter "id"
specifier|final
name|com
operator|.
name|braintreegateway
operator|.
name|Result
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://HOLDINESCROW"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"holdInEscrow result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"holdInEscrow: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for releaseFromEscrow
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testReleaseFromEscrow ()
specifier|public
name|void
name|testReleaseFromEscrow
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using String message body for single parameter "id"
specifier|final
name|com
operator|.
name|braintreegateway
operator|.
name|Result
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://RELEASEFROMESCROW"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"releaseFromEscrow result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"releaseFromEscrow: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for search
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testSearch ()
specifier|public
name|void
name|testSearch
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using com.braintreegateway.TransactionSearchRequest message body for single parameter "query"
specifier|final
name|com
operator|.
name|braintreegateway
operator|.
name|ResourceCollection
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://SEARCH"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"search result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"search: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for submitForPartialSettlement
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testSubmitForPartialSettlement ()
specifier|public
name|void
name|testSubmitForPartialSettlement
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBraintree.id"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is java.math.BigDecimal
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBraintree.amount"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
specifier|final
name|com
operator|.
name|braintreegateway
operator|.
name|Result
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://SUBMITFORPARTIALSETTLEMENT"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"submitForPartialSettlement result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"submitForPartialSettlement: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for voidTransaction
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testVoidTransaction ()
specifier|public
name|void
name|testVoidTransaction
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using String message body for single parameter "id"
specifier|final
name|com
operator|.
name|braintreegateway
operator|.
name|Result
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://VOIDTRANSACTION"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"voidTransaction result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"voidTransaction: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
comment|// *************************************************************************
comment|// ROUTES
comment|// *************************************************************************
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
comment|// test route for cancelRelease
name|from
argument_list|(
literal|"direct://CANCELRELEASE"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/cancelRelease?inBody=id"
argument_list|)
expr_stmt|;
comment|// test route for cloneTransaction
name|from
argument_list|(
literal|"direct://CLONETRANSACTION"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/cloneTransaction"
argument_list|)
expr_stmt|;
comment|// test route for credit
name|from
argument_list|(
literal|"direct://CREDIT"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/credit?inBody=request"
argument_list|)
expr_stmt|;
comment|// test route for find
name|from
argument_list|(
literal|"direct://FIND"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/find?inBody=id"
argument_list|)
expr_stmt|;
comment|// test route for holdInEscrow
name|from
argument_list|(
literal|"direct://HOLDINESCROW"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/holdInEscrow?inBody=id"
argument_list|)
expr_stmt|;
comment|// test route for refund
name|from
argument_list|(
literal|"direct://REFUND"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/refund"
argument_list|)
expr_stmt|;
comment|// test route for refund
name|from
argument_list|(
literal|"direct://REFUND_WITH_ID"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/refund?inBody=id"
argument_list|)
expr_stmt|;
comment|// test route for releaseFromEscrow
name|from
argument_list|(
literal|"direct://RELEASEFROMESCROW"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/releaseFromEscrow?inBody=id"
argument_list|)
expr_stmt|;
comment|// test route for sale
name|from
argument_list|(
literal|"direct://SALE"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/sale?inBody=request"
argument_list|)
expr_stmt|;
comment|// test route for search
name|from
argument_list|(
literal|"direct://SEARCH"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/search?inBody=query"
argument_list|)
expr_stmt|;
comment|// test route for submitForPartialSettlement
name|from
argument_list|(
literal|"direct://SUBMITFORPARTIALSETTLEMENT"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/submitForPartialSettlement"
argument_list|)
expr_stmt|;
comment|// test route for submitForSettlement
name|from
argument_list|(
literal|"direct://SUBMITFORSETTLEMENT_WITH_ID"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/submitForSettlement?inBody=id"
argument_list|)
expr_stmt|;
comment|// test route for submitForSettlement
name|from
argument_list|(
literal|"direct://SUBMITFORSETTLEMENT_WITH_ID_ADN_AMOUNT"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/submitForSettlement"
argument_list|)
expr_stmt|;
comment|// test route for submitForSettlement
name|from
argument_list|(
literal|"direct://SUBMITFORSETTLEMENT_WITH_REQUEST"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/submitForSettlement"
argument_list|)
expr_stmt|;
comment|// test route for voidTransaction
name|from
argument_list|(
literal|"direct://VOIDTRANSACTION"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/voidTransaction?inBody=id"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

