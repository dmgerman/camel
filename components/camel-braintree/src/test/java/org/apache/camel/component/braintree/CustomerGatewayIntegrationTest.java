begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.braintree
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|braintree
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|com
operator|.
name|braintreegateway
operator|.
name|Customer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|braintreegateway
operator|.
name|CustomerRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|braintreegateway
operator|.
name|CustomerSearchRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|braintreegateway
operator|.
name|ResourceCollection
import|;
end_import

begin_import
import|import
name|com
operator|.
name|braintreegateway
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|com
operator|.
name|braintreegateway
operator|.
name|ValidationError
import|;
end_import

begin_import
import|import
name|com
operator|.
name|braintreegateway
operator|.
name|ValidationErrorCode
import|;
end_import

begin_import
import|import
name|com
operator|.
name|braintreegateway
operator|.
name|ValidationErrors
import|;
end_import

begin_import
import|import
name|com
operator|.
name|braintreegateway
operator|.
name|exceptions
operator|.
name|NotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelExecutionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|braintree
operator|.
name|internal
operator|.
name|CustomerGatewayApiMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|CustomerGatewayIntegrationTest
specifier|public
class|class
name|CustomerGatewayIntegrationTest
extends|extends
name|AbstractBraintreeTestSupport
block|{
DECL|field|PATH_PREFIX
specifier|private
specifier|static
specifier|final
name|String
name|PATH_PREFIX
init|=
name|getApiNameAsString
argument_list|(
name|CustomerGatewayApiMethod
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|CustomerGatewayIntegrationTest
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**      * Customers management workflow:      * - create a customer      * - lookup by id      * - update first name      * - delete by id      * - confirm deletion by searching again      *      * @throws Exception      */
annotation|@
name|Test
DECL|method|testCustomerManagementWorkflow ()
specifier|public
name|void
name|testCustomerManagementWorkflow
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|customerLastName
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|customerId
init|=
literal|null
decl_stmt|;
comment|// Create customer
name|Result
argument_list|<
name|Customer
argument_list|>
name|createResult
init|=
name|requestBody
argument_list|(
literal|"direct://CREATE_IN_BODY"
argument_list|,
operator|new
name|CustomerRequest
argument_list|()
operator|.
name|firstName
argument_list|(
literal|"user"
argument_list|)
operator|.
name|lastName
argument_list|(
name|customerLastName
argument_list|)
operator|.
name|company
argument_list|(
literal|"Apache"
argument_list|)
operator|.
name|email
argument_list|(
literal|"user@braintree.camel"
argument_list|)
operator|.
name|website
argument_list|(
literal|"http://user.braintree.camel"
argument_list|)
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|createResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|createResult
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|createResult
operator|.
name|getTarget
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|customerId
operator|=
name|createResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getId
argument_list|()
expr_stmt|;
comment|// Find customer by ID
name|Customer
name|customer1
init|=
name|requestBody
argument_list|(
literal|"direct://FIND_IN_BODY"
argument_list|,
name|customerId
argument_list|,
name|Customer
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|customer1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"user"
argument_list|,
name|customer1
operator|.
name|getFirstName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|customerLastName
argument_list|,
name|customer1
operator|.
name|getLastName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Apache"
argument_list|,
name|customer1
operator|.
name|getCompany
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"user@braintree.camel"
argument_list|,
name|customer1
operator|.
name|getEmail
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://user.braintree.camel"
argument_list|,
name|customer1
operator|.
name|getWebsite
argument_list|()
argument_list|)
expr_stmt|;
comment|// Update customer
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBraintree.id"
argument_list|,
name|customerId
argument_list|)
expr_stmt|;
name|Result
argument_list|<
name|Customer
argument_list|>
name|updateResult
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://UPDATE_IN_BODY"
argument_list|,
operator|new
name|CustomerRequest
argument_list|()
operator|.
name|firstName
argument_list|(
literal|"user-mod"
argument_list|)
argument_list|,
name|headers
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|updateResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|updateResult
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|updateResult
operator|.
name|getTarget
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"user-mod"
argument_list|,
name|updateResult
operator|.
name|getTarget
argument_list|()
operator|.
name|getFirstName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Delete customer
name|Result
argument_list|<
name|Customer
argument_list|>
name|customerResult
init|=
name|requestBody
argument_list|(
literal|"direct://DELETE_IN_BODY"
argument_list|,
name|customerId
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|customerResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|customerResult
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|customerResult
operator|.
name|getTarget
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check if customer has been deleted customer
name|ResourceCollection
argument_list|<
name|Customer
argument_list|>
name|customers
init|=
name|requestBody
argument_list|(
literal|"direct://SEARCH_IN_BODY"
argument_list|,
operator|new
name|CustomerSearchRequest
argument_list|()
operator|.
name|id
argument_list|()
operator|.
name|is
argument_list|(
name|customerId
argument_list|)
argument_list|,
name|ResourceCollection
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|customers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|customers
operator|.
name|getMaximumSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateUnknownCustomer ()
specifier|public
name|void
name|testUpdateUnknownCustomer
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|String
name|id
init|=
literal|"unknown-"
operator|+
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBraintree.id"
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|requestBodyAndHeaders
argument_list|(
literal|"direct://UPDATE_IN_BODY"
argument_list|,
operator|new
name|CustomerRequest
argument_list|()
operator|.
name|firstName
argument_list|(
name|id
argument_list|)
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown NotFoundException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CamelExecutionException
name|e
parameter_list|)
block|{
name|assertIsInstanceOf
argument_list|(
name|NotFoundException
operator|.
name|class
argument_list|,
name|e
operator|.
name|getCause
argument_list|()
operator|.
name|getCause
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testSearchUnknownCustomer ()
specifier|public
name|void
name|testSearchUnknownCustomer
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|requestBody
argument_list|(
literal|"direct://FIND_IN_BODY"
argument_list|,
literal|"unknown-"
operator|+
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown NotFoundException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CamelExecutionException
name|e
parameter_list|)
block|{
name|assertIsInstanceOf
argument_list|(
name|NotFoundException
operator|.
name|class
argument_list|,
name|e
operator|.
name|getCause
argument_list|()
operator|.
name|getCause
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testWrongCustomerCreateRequest ()
specifier|public
name|void
name|testWrongCustomerCreateRequest
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Create customer
name|Result
argument_list|<
name|Customer
argument_list|>
name|createResult
init|=
name|requestBody
argument_list|(
literal|"direct://CREATE_IN_BODY"
argument_list|,
operator|new
name|CustomerRequest
argument_list|()
operator|.
name|firstName
argument_list|(
literal|"user"
argument_list|)
operator|.
name|lastName
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|company
argument_list|(
literal|"Apache"
argument_list|)
operator|.
name|email
argument_list|(
literal|"wrongEmail"
argument_list|)
operator|.
name|website
argument_list|(
literal|"http://user.braintree.camel"
argument_list|)
argument_list|,
name|Result
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|createResult
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|createResult
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|ValidationErrors
name|errors
init|=
name|createResult
operator|.
name|getErrors
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|errors
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|errors
operator|.
name|getAllDeepValidationErrors
argument_list|()
argument_list|)
expr_stmt|;
name|ValidationError
name|invalidMailError
init|=
literal|null
decl_stmt|;
for|for
control|(
name|ValidationError
name|error
range|:
name|errors
operator|.
name|getAllDeepValidationErrors
argument_list|()
control|)
block|{
if|if
condition|(
name|error
operator|.
name|getCode
argument_list|()
operator|==
name|ValidationErrorCode
operator|.
name|CUSTOMER_EMAIL_FORMAT_IS_INVALID
condition|)
block|{
name|invalidMailError
operator|=
name|error
expr_stmt|;
break|break;
block|}
block|}
name|assertNotNull
argument_list|(
name|invalidMailError
argument_list|)
expr_stmt|;
block|}
comment|// *************************************************************************
comment|// Routes
comment|// *************************************************************************
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"direct://CREATE_IN_BODY"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/create?inBody=request"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct://DELETE_IN_BODY"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/delete?inBody=id"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct://FIND_IN_BODY"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/find?inBody=id"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct://SEARCH_IN_BODY"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/search?inBody=query"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct://UPDATE_IN_BODY"
argument_list|)
operator|.
name|to
argument_list|(
literal|"braintree://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/update?inBody=request"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

