begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.graphql.server
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|graphql
operator|.
name|server
package|;
end_package

begin_import
import|import
name|graphql
operator|.
name|GraphQL
import|;
end_import

begin_import
import|import
name|graphql
operator|.
name|schema
operator|.
name|GraphQLSchema
import|;
end_import

begin_import
import|import
name|graphql
operator|.
name|schema
operator|.
name|idl
operator|.
name|RuntimeWiring
import|;
end_import

begin_import
import|import
name|graphql
operator|.
name|schema
operator|.
name|idl
operator|.
name|SchemaGenerator
import|;
end_import

begin_import
import|import
name|graphql
operator|.
name|schema
operator|.
name|idl
operator|.
name|SchemaParser
import|;
end_import

begin_import
import|import
name|graphql
operator|.
name|schema
operator|.
name|idl
operator|.
name|TypeDefinitionRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|IOHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_import
import|import static
name|graphql
operator|.
name|schema
operator|.
name|idl
operator|.
name|TypeRuntimeWiring
operator|.
name|newTypeWiring
import|;
end_import

begin_class
DECL|class|GraphqlFactory
specifier|public
specifier|final
class|class
name|GraphqlFactory
block|{
DECL|method|GraphqlFactory ()
specifier|private
name|GraphqlFactory
parameter_list|()
block|{     }
DECL|method|newGraphQL ()
specifier|public
specifier|static
name|GraphQL
name|newGraphQL
parameter_list|()
block|{
try|try
block|{
name|String
name|schema
init|=
name|IOHelper
operator|.
name|loadText
argument_list|(
name|ObjectHelper
operator|.
name|loadResourceAsStream
argument_list|(
literal|"schema.graphqls"
argument_list|)
argument_list|)
decl_stmt|;
name|GraphQLSchema
name|graphQLSchema
init|=
name|buildSchema
argument_list|(
name|schema
argument_list|)
decl_stmt|;
return|return
name|GraphQL
operator|.
name|newGraphQL
argument_list|(
name|graphQLSchema
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|buildSchema (String schema)
specifier|private
specifier|static
name|GraphQLSchema
name|buildSchema
parameter_list|(
name|String
name|schema
parameter_list|)
block|{
name|TypeDefinitionRegistry
name|typeDefinitionRegistry
init|=
operator|new
name|SchemaParser
argument_list|()
operator|.
name|parse
argument_list|(
name|schema
argument_list|)
decl_stmt|;
name|RuntimeWiring
name|runtimeWiring
init|=
name|buildWiring
argument_list|()
decl_stmt|;
return|return
operator|new
name|SchemaGenerator
argument_list|()
operator|.
name|makeExecutableSchema
argument_list|(
name|typeDefinitionRegistry
argument_list|,
name|runtimeWiring
argument_list|)
return|;
block|}
DECL|method|buildWiring ()
specifier|private
specifier|static
name|RuntimeWiring
name|buildWiring
parameter_list|()
block|{
return|return
name|RuntimeWiring
operator|.
name|newRuntimeWiring
argument_list|()
operator|.
name|type
argument_list|(
name|newTypeWiring
argument_list|(
literal|"Query"
argument_list|)
operator|.
name|dataFetcher
argument_list|(
literal|"books"
argument_list|,
name|GraphqlDataFetchers
operator|.
name|getBooksDataFetcher
argument_list|()
argument_list|)
argument_list|)
operator|.
name|type
argument_list|(
name|newTypeWiring
argument_list|(
literal|"Query"
argument_list|)
operator|.
name|dataFetcher
argument_list|(
literal|"bookById"
argument_list|,
name|GraphqlDataFetchers
operator|.
name|getBookByIdDataFetcher
argument_list|()
argument_list|)
argument_list|)
operator|.
name|type
argument_list|(
name|newTypeWiring
argument_list|(
literal|"Book"
argument_list|)
operator|.
name|dataFetcher
argument_list|(
literal|"author"
argument_list|,
name|GraphqlDataFetchers
operator|.
name|getAuthorDataFetcher
argument_list|()
argument_list|)
argument_list|)
operator|.
name|type
argument_list|(
name|newTypeWiring
argument_list|(
literal|"Mutation"
argument_list|)
operator|.
name|dataFetcher
argument_list|(
literal|"addBook"
argument_list|,
name|GraphqlDataFetchers
operator|.
name|addBookDataFetcher
argument_list|()
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

