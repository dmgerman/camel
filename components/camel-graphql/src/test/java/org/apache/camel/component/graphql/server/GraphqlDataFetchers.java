begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.graphql.server
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|graphql
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|graphql
operator|.
name|schema
operator|.
name|DataFetcher
import|;
end_import

begin_class
DECL|class|GraphqlDataFetchers
specifier|public
class|class
name|GraphqlDataFetchers
block|{
DECL|field|books
specifier|private
specifier|static
name|List
argument_list|<
name|Book
argument_list|>
name|books
init|=
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|Book
argument_list|(
literal|"book-1"
argument_list|,
literal|"Harry Potter and the Philosopher's Stone"
argument_list|,
literal|"author-1"
argument_list|)
argument_list|,
operator|new
name|Book
argument_list|(
literal|"book-2"
argument_list|,
literal|"Moby Dick"
argument_list|,
literal|"author-2"
argument_list|)
argument_list|,
operator|new
name|Book
argument_list|(
literal|"book-3"
argument_list|,
literal|"Interview with the vampire"
argument_list|,
literal|"author-3"
argument_list|)
argument_list|)
decl_stmt|;
DECL|field|authors
specifier|private
specifier|static
name|List
argument_list|<
name|Author
argument_list|>
name|authors
init|=
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|Author
argument_list|(
literal|"author-1"
argument_list|,
literal|"Joanne Rowling"
argument_list|)
argument_list|,
operator|new
name|Author
argument_list|(
literal|"author-2"
argument_list|,
literal|"Herman Melville"
argument_list|)
argument_list|,
operator|new
name|Author
argument_list|(
literal|"author-3"
argument_list|,
literal|"Anne Rice"
argument_list|)
argument_list|)
decl_stmt|;
DECL|method|getBooksDataFetcher ()
specifier|public
specifier|static
name|DataFetcher
argument_list|<
name|List
argument_list|<
name|Book
argument_list|>
argument_list|>
name|getBooksDataFetcher
parameter_list|()
block|{
return|return
name|dataFetchingEnvironment
lambda|->
name|books
return|;
block|}
DECL|method|getBookByIdDataFetcher ()
specifier|public
specifier|static
name|DataFetcher
argument_list|<
name|Book
argument_list|>
name|getBookByIdDataFetcher
parameter_list|()
block|{
return|return
name|dataFetchingEnvironment
lambda|->
block|{
name|String
name|bookId
init|=
name|dataFetchingEnvironment
operator|.
name|getArgument
argument_list|(
literal|"id"
argument_list|)
decl_stmt|;
return|return
name|books
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|book
lambda|->
name|book
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|bookId
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|()
operator|.
name|orElse
argument_list|(
literal|null
argument_list|)
return|;
block|}
return|;
block|}
DECL|method|getAuthorDataFetcher ()
specifier|public
specifier|static
name|DataFetcher
argument_list|<
name|Author
argument_list|>
name|getAuthorDataFetcher
parameter_list|()
block|{
return|return
name|dataFetchingEnvironment
lambda|->
block|{
name|Book
name|book
init|=
name|dataFetchingEnvironment
operator|.
name|getSource
argument_list|()
decl_stmt|;
name|String
name|authorId
init|=
name|book
operator|.
name|getAuthorId
argument_list|()
decl_stmt|;
return|return
name|authors
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|author
lambda|->
name|author
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|authorId
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|()
operator|.
name|orElse
argument_list|(
literal|null
argument_list|)
return|;
block|}
return|;
block|}
DECL|method|addBookDataFetcher ()
specifier|public
specifier|static
name|DataFetcher
argument_list|<
name|Book
argument_list|>
name|addBookDataFetcher
parameter_list|()
block|{
return|return
name|dataFetchingEnvironment
lambda|->
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|bookInput
init|=
name|dataFetchingEnvironment
operator|.
name|getArgument
argument_list|(
literal|"bookInput"
argument_list|)
decl_stmt|;
name|String
name|id
init|=
literal|"book-"
operator|+
operator|(
name|books
operator|.
name|size
argument_list|()
operator|+
literal|1
operator|)
decl_stmt|;
name|String
name|name
init|=
operator|(
name|String
operator|)
name|bookInput
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
decl_stmt|;
name|String
name|authorId
init|=
operator|(
name|String
operator|)
name|bookInput
operator|.
name|get
argument_list|(
literal|"authorId"
argument_list|)
decl_stmt|;
name|Book
name|book
init|=
operator|new
name|Book
argument_list|(
name|id
argument_list|,
name|name
argument_list|,
name|authorId
argument_list|)
decl_stmt|;
return|return
name|book
return|;
block|}
return|;
block|}
block|}
end_class

end_unit

