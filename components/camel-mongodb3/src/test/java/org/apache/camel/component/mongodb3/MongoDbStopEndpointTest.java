begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.component.mongodb3
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mongodb3
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mongodb3
operator|.
name|MongoDbConstants
operator|.
name|MONGO_ID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|EndpointInject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|bson
operator|.
name|Document
import|;
end_import

begin_class
DECL|class|MongoDbStopEndpointTest
specifier|public
class|class
name|MongoDbStopEndpointTest
extends|extends
name|AbstractMongoDbTest
block|{
DECL|field|MY_ID
specifier|private
specifier|static
specifier|final
name|String
name|MY_ID
init|=
literal|"myId"
decl_stmt|;
annotation|@
name|EndpointInject
argument_list|(
name|uri
operator|=
literal|"mongodb3:myDb?database={{mongodb.testDb}}&collection={{mongodb.testCollection}}&operation=insert"
argument_list|)
DECL|field|endpoint
name|MongoDbEndpoint
name|endpoint
decl_stmt|;
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"direct:insertJsonString"
argument_list|)
operator|.
name|routeId
argument_list|(
literal|"insert"
argument_list|)
operator|.
name|to
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:findById"
argument_list|)
operator|.
name|routeId
argument_list|(
literal|"find"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mongodb3:myDb?database={{mongodb.testDb}}&collection={{mongodb.testCollection}}&operation=findById&dynamicity=true"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
annotation|@
name|Test
DECL|method|testStopEndpoint ()
specifier|public
name|void
name|testStopEndpoint
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|testCollection
operator|.
name|countDocuments
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:insertJsonString"
argument_list|,
literal|"{\"scientist\": \"Newton\", \"_id\": \""
operator|+
name|MY_ID
operator|+
literal|"\"}"
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|stop
argument_list|()
expr_stmt|;
name|Document
name|result
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:findById"
argument_list|,
name|MY_ID
argument_list|,
name|Document
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MY_ID
argument_list|,
name|result
operator|.
name|get
argument_list|(
name|MONGO_ID
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Newton"
argument_list|,
name|result
operator|.
name|get
argument_list|(
literal|"scientist"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

