begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.influxdb.converters
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|influxdb
operator|.
name|converters
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Converter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|influxdb
operator|.
name|CamelInfluxDbException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|influxdb
operator|.
name|InfluxDbConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|influxdb
operator|.
name|dto
operator|.
name|Point
import|;
end_import

begin_class
annotation|@
name|Converter
argument_list|(
name|loader
operator|=
literal|true
argument_list|)
DECL|class|CamelInfluxDbConverters
specifier|public
specifier|final
class|class
name|CamelInfluxDbConverters
block|{
DECL|method|CamelInfluxDbConverters ()
specifier|private
name|CamelInfluxDbConverters
parameter_list|()
block|{      }
annotation|@
name|Converter
DECL|method|fromMapToPoint (Map<String, Object> map)
specifier|public
specifier|static
name|Point
name|fromMapToPoint
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|map
parameter_list|)
block|{
name|Object
name|measurenmentName
init|=
name|map
operator|.
name|get
argument_list|(
name|InfluxDbConstants
operator|.
name|MEASUREMENT_NAME
argument_list|)
decl_stmt|;
if|if
condition|(
name|measurenmentName
operator|==
literal|null
condition|)
block|{
name|String
name|format
init|=
name|String
operator|.
name|format
argument_list|(
literal|"Unable to find the header for the measurement in:"
operator|+
name|map
operator|.
name|keySet
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|CamelInfluxDbException
argument_list|(
name|format
argument_list|)
throw|;
block|}
name|String
name|measurenmentNameString
init|=
name|measurenmentName
operator|.
name|toString
argument_list|()
decl_stmt|;
name|Point
operator|.
name|Builder
name|pointBuilder
init|=
name|Point
operator|.
name|measurement
argument_list|(
name|measurenmentNameString
argument_list|)
decl_stmt|;
name|map
operator|.
name|remove
argument_list|(
name|InfluxDbConstants
operator|.
name|MEASUREMENT_NAME
argument_list|)
expr_stmt|;
name|pointBuilder
operator|.
name|fields
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|InfluxDbConstants
operator|.
name|MEASUREMENT_NAME
argument_list|,
name|measurenmentName
argument_list|)
expr_stmt|;
return|return
name|pointBuilder
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

