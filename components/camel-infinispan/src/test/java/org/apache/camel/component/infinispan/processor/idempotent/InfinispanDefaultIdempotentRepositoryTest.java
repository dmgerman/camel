begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.component.infinispan.processor.idempotent
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|infinispan
operator|.
name|processor
operator|.
name|idempotent
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|jgroups
operator|.
name|util
operator|.
name|Util
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|jgroups
operator|.
name|util
operator|.
name|Util
operator|.
name|assertTrue
import|;
end_import

begin_class
DECL|class|InfinispanDefaultIdempotentRepositoryTest
specifier|public
class|class
name|InfinispanDefaultIdempotentRepositoryTest
block|{
annotation|@
name|Test
DECL|method|createsRepositoryUsingInternalCache ()
specifier|public
name|void
name|createsRepositoryUsingInternalCache
parameter_list|()
throws|throws
name|Exception
block|{
name|InfinispanIdempotentRepository
name|repository
init|=
name|InfinispanIdempotentRepository
operator|.
name|infinispanIdempotentRepository
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|repository
operator|.
name|contains
argument_list|(
literal|"One"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|repository
operator|.
name|remove
argument_list|(
literal|"One"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|repository
operator|.
name|add
argument_list|(
literal|"One"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|repository
operator|.
name|contains
argument_list|(
literal|"One"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|repository
operator|.
name|remove
argument_list|(
literal|"One"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|repository
operator|.
name|contains
argument_list|(
literal|"One"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|repository
operator|.
name|remove
argument_list|(
literal|"One"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

