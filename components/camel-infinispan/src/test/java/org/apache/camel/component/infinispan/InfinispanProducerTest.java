begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.infinispan
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|infinispan
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|commons
operator|.
name|util
operator|.
name|concurrent
operator|.
name|NotifyingFuture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|InfinispanProducerTest
specifier|public
class|class
name|InfinispanProducerTest
extends|extends
name|InfinispanTestSupport
block|{
DECL|field|COMMAND_VALUE
specifier|private
specifier|static
specifier|final
name|String
name|COMMAND_VALUE
init|=
literal|"commandValue"
decl_stmt|;
DECL|field|COMMAND_KEY
specifier|private
specifier|static
specifier|final
name|String
name|COMMAND_KEY
init|=
literal|"commandKey1"
decl_stmt|;
DECL|field|LIFESPAN_TIME
specifier|private
specifier|static
specifier|final
name|long
name|LIFESPAN_TIME
init|=
literal|5
decl_stmt|;
DECL|field|LIFESPAN_FOR_MAX_IDLE
specifier|private
specifier|static
specifier|final
name|long
name|LIFESPAN_FOR_MAX_IDLE
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|MAX_IDLE_TIME
specifier|private
specifier|static
specifier|final
name|long
name|MAX_IDLE_TIME
init|=
literal|3
decl_stmt|;
annotation|@
name|Test
DECL|method|keyAndValueArePublishedWithDefaultOperation ()
specifier|public
name|void
name|keyAndValueArePublishedWithDefaultOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|template
operator|.
name|send
argument_list|(
literal|"direct:start"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|cacheSizeTest ()
specifier|public
name|void
name|cacheSizeTest
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_TWO
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:size"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|SIZE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|Integer
name|cacheSize
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|cacheSize
argument_list|,
operator|new
name|Integer
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|publishKeyAndValueByExplicitlySpecifyingTheOperation ()
specifier|public
name|void
name|publishKeyAndValueByExplicitlySpecifyingTheOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|template
operator|.
name|send
argument_list|(
literal|"direct:start"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|PUT
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|publishKeyAndValueAsync ()
specifier|public
name|void
name|publishKeyAndValueAsync
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:putasync"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
name|NotifyingFuture
name|resultPutAsync
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|NotifyingFuture
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|,
name|resultPutAsync
operator|.
name|isDone
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|publishKeyAndValueAsyncWithLifespan ()
specifier|public
name|void
name|publishKeyAndValueAsyncWithLifespan
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:putasync"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|LIFESPAN_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|NotifyingFuture
name|resultPutAsync
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|NotifyingFuture
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|,
name|resultPutAsync
operator|.
name|isDone
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|value
operator|.
name|toString
argument_list|()
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|6000
argument_list|)
expr_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|String
name|resultGet
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|resultGet
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|publishKeyAndValueAsyncWithLifespanAndMaxIdle ()
specifier|public
name|void
name|publishKeyAndValueAsyncWithLifespanAndMaxIdle
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:putasync"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|LIFESPAN_FOR_MAX_IDLE
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAX_IDLE_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|MAX_IDLE_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAX_IDLE_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|NotifyingFuture
name|resultPutAsync
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|NotifyingFuture
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|,
name|resultPutAsync
operator|.
name|isDone
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|String
name|resultGet
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|resultGet
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|publishMapNormal ()
specifier|public
name|void
name|publishMapNormal
parameter_list|()
throws|throws
name|Exception
block|{
name|template
operator|.
name|send
argument_list|(
literal|"direct:start"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|KEY_TWO
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAP
argument_list|,
name|map
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|PUT_ALL
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|currentCache
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_TWO
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_TWO
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|publishMapWithLifespan ()
specifier|public
name|void
name|publishMapWithLifespan
parameter_list|()
throws|throws
name|Exception
block|{
name|template
operator|.
name|send
argument_list|(
literal|"direct:start"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|KEY_TWO
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAP
argument_list|,
name|map
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|PUT_ALL
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|LIFESPAN_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|currentCache
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_TWO
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_TWO
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
name|LIFESPAN_TIME
operator|*
literal|1000
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|String
name|resultGet
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|resultGet
argument_list|)
expr_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_TWO
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|resultGet
operator|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|resultGet
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|publishMapWithLifespanAndMaxIdleTime ()
specifier|public
name|void
name|publishMapWithLifespanAndMaxIdleTime
parameter_list|()
throws|throws
name|Exception
block|{
name|template
operator|.
name|send
argument_list|(
literal|"direct:start"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|KEY_TWO
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAP
argument_list|,
name|map
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|PUT_ALL
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|LIFESPAN_FOR_MAX_IDLE
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAX_IDLE_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|MAX_IDLE_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAX_IDLE_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|currentCache
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|String
name|resultGet
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|resultGet
argument_list|)
expr_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_TWO
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|resultGet
operator|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|publishMapNormalAsync ()
specifier|public
name|void
name|publishMapNormalAsync
parameter_list|()
throws|throws
name|Exception
block|{
name|template
operator|.
name|send
argument_list|(
literal|"direct:putallasync"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|KEY_TWO
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAP
argument_list|,
name|map
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|currentCache
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_TWO
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_TWO
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|publishMapWithLifespanAsync ()
specifier|public
name|void
name|publishMapWithLifespanAsync
parameter_list|()
throws|throws
name|Exception
block|{
name|template
operator|.
name|send
argument_list|(
literal|"direct:putallasync"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|KEY_TWO
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAP
argument_list|,
name|map
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|PUT_ALL
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|LIFESPAN_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|currentCache
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_TWO
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_TWO
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
name|LIFESPAN_TIME
operator|*
literal|1000
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|String
name|resultGet
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|resultGet
argument_list|)
expr_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_TWO
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|resultGet
operator|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|resultGet
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|publishMapWithLifespanAndMaxIdleTimeAsync ()
specifier|public
name|void
name|publishMapWithLifespanAndMaxIdleTimeAsync
parameter_list|()
throws|throws
name|Exception
block|{
name|template
operator|.
name|send
argument_list|(
literal|"direct:putallasync"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|KEY_TWO
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAP
argument_list|,
name|map
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|PUT_ALL
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|LIFESPAN_FOR_MAX_IDLE
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAX_IDLE_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|MAX_IDLE_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAX_IDLE_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|currentCache
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|String
name|resultGet
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|resultGet
argument_list|)
expr_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_TWO
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|resultGet
operator|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|resultGet
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|putIfAbsentAlreadyExists ()
specifier|public
name|void
name|putIfAbsentAlreadyExists
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
literal|"direct:putifabsent"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|PUT_IF_ABSENT
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|currentCache
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|putIfAbsentNotExists ()
specifier|public
name|void
name|putIfAbsentNotExists
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
literal|"direct:putifabsent"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|PUT_IF_ABSENT
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_TWO
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_TWO
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|currentCache
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|putIfAbsentKeyAndValueAsync ()
specifier|public
name|void
name|putIfAbsentKeyAndValueAsync
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:putifabsentasync"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
name|NotifyingFuture
name|resultPutAsync
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|NotifyingFuture
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|,
name|resultPutAsync
operator|.
name|isDone
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|putIfAbsentKeyAndValueAsyncWithLifespan ()
specifier|public
name|void
name|putIfAbsentKeyAndValueAsyncWithLifespan
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:putifabsentasync"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|LIFESPAN_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|NotifyingFuture
name|resultPutAsync
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|NotifyingFuture
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|,
name|resultPutAsync
operator|.
name|isDone
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|6000
argument_list|)
expr_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|String
name|resultGet
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|resultGet
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|putIfAbsentKeyAndValueAsyncWithLifespanAndMaxIdle ()
specifier|public
name|void
name|putIfAbsentKeyAndValueAsyncWithLifespanAndMaxIdle
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:putifabsentasync"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|LIFESPAN_FOR_MAX_IDLE
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAX_IDLE_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|MAX_IDLE_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAX_IDLE_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|NotifyingFuture
name|resultPutAsync
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|NotifyingFuture
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|,
name|resultPutAsync
operator|.
name|isDone
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|String
name|resultGet
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|resultGet
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|notContainsKeyTest ()
specifier|public
name|void
name|notContainsKeyTest
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:containskey"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|CONTAINS_KEY
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|Boolean
name|cacheContainsKey
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|cacheContainsKey
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|containsKeyTest ()
specifier|public
name|void
name|containsKeyTest
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:containskey"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|CONTAINS_KEY
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|Boolean
name|cacheContainsKey
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cacheContainsKey
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|notContainsValueTest ()
specifier|public
name|void
name|notContainsValueTest
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:containsvalue"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|CONTAINS_VALUE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|Boolean
name|cacheContainsValue
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|cacheContainsValue
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|containsValueTest ()
specifier|public
name|void
name|containsValueTest
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:containsvalue"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|CONTAINS_VALUE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|Boolean
name|cacheContainsValue
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cacheContainsValue
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|publishKeyAndValueWithLifespan ()
specifier|public
name|void
name|publishKeyAndValueWithLifespan
parameter_list|()
throws|throws
name|Exception
block|{
name|template
operator|.
name|send
argument_list|(
literal|"direct:start"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|LIFESPAN_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|PUT
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
decl_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|String
name|resultGet
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|resultGet
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
name|LIFESPAN_TIME
operator|*
literal|1000
argument_list|)
expr_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|resultGet
operator|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|resultGet
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|putOperationReturnsThePreviousValue ()
specifier|public
name|void
name|putOperationReturnsThePreviousValue
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
literal|"existing value"
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:start"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|PUT
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|String
name|result
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"existing value"
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|retrievesAValueByKey ()
specifier|public
name|void
name|retrievesAValueByKey
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:start"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|GET
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|replaceAValueByKey ()
specifier|public
name|void
name|replaceAValueByKey
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:replace"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|REPLACE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_TWO
argument_list|,
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|replaceAValueByKeyWithLifespan ()
specifier|public
name|void
name|replaceAValueByKeyWithLifespan
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:replace"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|LIFESPAN_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|REPLACE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_TWO
argument_list|,
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
name|LIFESPAN_TIME
operator|*
literal|1000
argument_list|)
expr_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|String
name|resultGet
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|resultGet
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|replaceAValueByKeyWithLifespanAndMaxIdleTime ()
specifier|public
name|void
name|replaceAValueByKeyWithLifespanAndMaxIdleTime
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:replace"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|LIFESPAN_FOR_MAX_IDLE
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAX_IDLE_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|MAX_IDLE_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAX_IDLE_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|REPLACE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_TWO
argument_list|,
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|String
name|resultGet
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|resultGet
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|replaceAValueByKeyWithOldValue ()
specifier|public
name|void
name|replaceAValueByKeyWithOldValue
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:replace"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OLD_VALUE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|REPLACE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_TWO
argument_list|,
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|replaceAValueByKeyWithLifespanWithOldValue ()
specifier|public
name|void
name|replaceAValueByKeyWithLifespanWithOldValue
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:replace"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OLD_VALUE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|LIFESPAN_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|REPLACE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_TWO
argument_list|,
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
name|LIFESPAN_TIME
operator|*
literal|1100
argument_list|)
expr_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|String
name|resultGet
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|resultGet
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|replaceAValueByKeyWithLifespanAndMaxIdleTimeWithOldValue ()
specifier|public
name|void
name|replaceAValueByKeyWithLifespanAndMaxIdleTimeWithOldValue
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:replace"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OLD_VALUE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|LIFESPAN_FOR_MAX_IDLE
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAX_IDLE_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|MAX_IDLE_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAX_IDLE_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|REPLACE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_TWO
argument_list|,
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|String
name|resultGet
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|resultGet
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|replaceAValueByKeyAsync ()
specifier|public
name|void
name|replaceAValueByKeyAsync
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:replaceasync"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_TWO
argument_list|,
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|replaceAValueByKeyWithLifespanAsync ()
specifier|public
name|void
name|replaceAValueByKeyWithLifespanAsync
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:replaceasync"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|LIFESPAN_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_TWO
argument_list|,
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
name|LIFESPAN_TIME
operator|*
literal|1000
argument_list|)
expr_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|String
name|resultGet
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
literal|null
argument_list|,
name|resultGet
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|replaceAValueByKeyWithLifespanAndMaxIdleTimeAsync ()
specifier|public
name|void
name|replaceAValueByKeyWithLifespanAndMaxIdleTimeAsync
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:replaceasync"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|LIFESPAN_FOR_MAX_IDLE
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAX_IDLE_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|MAX_IDLE_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAX_IDLE_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_TWO
argument_list|,
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|String
name|resultGet
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|resultGet
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|replaceAValueByKeyAsyncWithOldValue ()
specifier|public
name|void
name|replaceAValueByKeyAsyncWithOldValue
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:replaceasync"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OLD_VALUE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_TWO
argument_list|,
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|replaceAValueByKeyWithLifespanAsyncWithOldValue ()
specifier|public
name|void
name|replaceAValueByKeyWithLifespanAsyncWithOldValue
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:replaceasync"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OLD_VALUE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|LIFESPAN_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_TWO
argument_list|,
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
name|LIFESPAN_TIME
operator|*
literal|1100
argument_list|)
expr_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|String
name|resultGet
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|resultGet
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|replaceAValueByKeyWithLifespanAndMaxIdleTimeAsyncWithOldValue ()
specifier|public
name|void
name|replaceAValueByKeyWithLifespanAndMaxIdleTimeAsyncWithOldValue
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:replaceasync"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OLD_VALUE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|LIFESPAN_FOR_MAX_IDLE
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|LIFESPAN_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAX_IDLE_TIME
argument_list|,
operator|new
name|Long
argument_list|(
name|MAX_IDLE_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|MAX_IDLE_TIME_UNIT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_TWO
argument_list|,
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|String
name|resultGet
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|resultGet
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deletesExistingValueByKey ()
specifier|public
name|void
name|deletesExistingValueByKey
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:start"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|REMOVE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|VALUE_ONE
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deletesExistingValueByKeyAsync ()
specifier|public
name|void
name|deletesExistingValueByKeyAsync
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:removeasync"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|REMOVE_ASYNC
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|NotifyingFuture
name|fut
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|NotifyingFuture
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|fut
operator|.
name|isDone
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deletesExistingValueByKeyWithValue ()
specifier|public
name|void
name|deletesExistingValueByKeyWithValue
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:start"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|REMOVE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deletesExistingValueByKeyAsyncWithValue ()
specifier|public
name|void
name|deletesExistingValueByKeyAsyncWithValue
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:removeasync"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|KEY_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|REMOVE_ASYNC
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|NotifyingFuture
name|fut
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|NotifyingFuture
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|fut
operator|.
name|isDone
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|KEY_ONE
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|clearsAllValues ()
specifier|public
name|void
name|clearsAllValues
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|currentCache
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
literal|"direct:start"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|CLEAR
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|currentCache
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUriCommandOption ()
specifier|public
name|void
name|testUriCommandOption
parameter_list|()
throws|throws
name|Exception
block|{
name|template
operator|.
name|send
argument_list|(
literal|"direct:put"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|COMMAND_KEY
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|VALUE
argument_list|,
name|COMMAND_VALUE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|String
name|result
init|=
operator|(
name|String
operator|)
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|COMMAND_KEY
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|COMMAND_VALUE
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
decl_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:get"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|COMMAND_KEY
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|String
name|resultGet
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|COMMAND_VALUE
argument_list|,
name|resultGet
argument_list|)
expr_stmt|;
name|exchange
operator|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:remove"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|KEY
argument_list|,
name|COMMAND_KEY
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|String
name|resultRemove
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|COMMAND_VALUE
argument_list|,
name|resultRemove
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|currentCache
argument_list|()
operator|.
name|get
argument_list|(
name|COMMAND_KEY
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|currentCache
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|COMMAND_KEY
argument_list|,
name|COMMAND_VALUE
argument_list|)
expr_stmt|;
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
literal|"keyTest"
argument_list|,
literal|"valueTest"
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
literal|"direct:clear"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{              }
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|currentCache
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|clearAsyncTest ()
specifier|public
name|void
name|clearAsyncTest
parameter_list|()
throws|throws
name|Exception
block|{
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_ONE
argument_list|,
name|VALUE_ONE
argument_list|)
expr_stmt|;
name|currentCache
argument_list|()
operator|.
name|put
argument_list|(
name|KEY_TWO
argument_list|,
name|VALUE_TWO
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|request
argument_list|(
literal|"direct:clearasync"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|InfinispanConstants
operator|.
name|OPERATION
argument_list|,
name|InfinispanConstants
operator|.
name|CLEAR_ASYNC
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|NotifyingFuture
name|fut
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|InfinispanConstants
operator|.
name|RESULT
argument_list|,
name|NotifyingFuture
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|fut
operator|.
name|isDone
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|currentCache
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"direct:start"
argument_list|)
operator|.
name|to
argument_list|(
literal|"infinispan://localhost?cacheContainer=#cacheContainer"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:put"
argument_list|)
operator|.
name|to
argument_list|(
literal|"infinispan://localhost?cacheContainer=#cacheContainer&command=PUT"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:putifabsent"
argument_list|)
operator|.
name|to
argument_list|(
literal|"infinispan://localhost?cacheContainer=#cacheContainer&command=PUTIFABSENT"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:get"
argument_list|)
operator|.
name|to
argument_list|(
literal|"infinispan://localhost?cacheContainer=#cacheContainer&command=GET"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:remove"
argument_list|)
operator|.
name|to
argument_list|(
literal|"infinispan://localhost?cacheContainer=#cacheContainer&command=REMOVE"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:clear"
argument_list|)
operator|.
name|to
argument_list|(
literal|"infinispan://localhost?cacheContainer=#cacheContainer&command=CLEAR"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:replace"
argument_list|)
operator|.
name|to
argument_list|(
literal|"infinispan://localhost?cacheContainer=#cacheContainer&command=REPLACE"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:containskey"
argument_list|)
operator|.
name|to
argument_list|(
literal|"infinispan://localhost?cacheContainer=#cacheContainer&command=CONTAINSKEY"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:containsvalue"
argument_list|)
operator|.
name|to
argument_list|(
literal|"infinispan://localhost?cacheContainer=#cacheContainer&command=CONTAINSVALUE"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:size"
argument_list|)
operator|.
name|to
argument_list|(
literal|"infinispan://localhost?cacheContainer=#cacheContainer&command=SIZE"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:putasync"
argument_list|)
operator|.
name|to
argument_list|(
literal|"infinispan://localhost?cacheContainer=#cacheContainer&command=PUTASYNC"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:putallasync"
argument_list|)
operator|.
name|to
argument_list|(
literal|"infinispan://localhost?cacheContainer=#cacheContainer&command=PUTALLASYNC"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:putifabsentasync"
argument_list|)
operator|.
name|to
argument_list|(
literal|"infinispan://localhost?cacheContainer=#cacheContainer&command=PUTIFABSENTASYNC"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:replaceasync"
argument_list|)
operator|.
name|to
argument_list|(
literal|"infinispan://localhost?cacheContainer=#cacheContainer&command=REPLACEASYNC"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:removeasync"
argument_list|)
operator|.
name|to
argument_list|(
literal|"infinispan://localhost?cacheContainer=#cacheContainer&command=REMOVEASYNC"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:clearasync"
argument_list|)
operator|.
name|to
argument_list|(
literal|"infinispan://localhost?cacheContainer=#cacheContainer&command=CLEARASYNC"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

