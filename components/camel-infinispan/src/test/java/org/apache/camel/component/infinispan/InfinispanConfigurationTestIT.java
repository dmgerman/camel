begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.infinispan
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|infinispan
package|;
end_package

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|client
operator|.
name|hotrod
operator|.
name|RemoteCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|commons
operator|.
name|api
operator|.
name|BasicCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|configuration
operator|.
name|cache
operator|.
name|ConfigurationBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|manager
operator|.
name|DefaultCacheManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
DECL|class|InfinispanConfigurationTestIT
specifier|public
class|class
name|InfinispanConfigurationTestIT
block|{
annotation|@
name|Test
DECL|method|embeddedCacheWithFlagsTest ()
specifier|public
name|void
name|embeddedCacheWithFlagsTest
parameter_list|()
throws|throws
name|Exception
block|{
name|InfinispanConfiguration
name|configuration
init|=
operator|new
name|InfinispanConfiguration
argument_list|()
decl_stmt|;
name|configuration
operator|.
name|setHosts
argument_list|(
literal|"localhost"
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setCacheContainer
argument_list|(
operator|new
name|DefaultCacheManager
argument_list|(
operator|new
name|ConfigurationBuilder
argument_list|()
operator|.
name|build
argument_list|()
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|InfinispanManager
name|manager
init|=
operator|new
name|InfinispanManager
argument_list|(
name|configuration
argument_list|)
decl_stmt|;
name|manager
operator|.
name|start
argument_list|()
expr_stmt|;
name|BasicCache
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|cache
init|=
name|manager
operator|.
name|getCache
argument_list|(
literal|"misc_cache"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|cache
argument_list|)
expr_stmt|;
name|manager
operator|.
name|getCacheContainer
argument_list|()
operator|.
name|stop
argument_list|()
expr_stmt|;
name|manager
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|remoteCacheWithoutProperties ()
specifier|public
name|void
name|remoteCacheWithoutProperties
parameter_list|()
throws|throws
name|Exception
block|{
name|InfinispanConfiguration
name|configuration
init|=
operator|new
name|InfinispanConfiguration
argument_list|()
decl_stmt|;
name|configuration
operator|.
name|setHosts
argument_list|(
literal|"localhost"
argument_list|)
expr_stmt|;
name|InfinispanManager
name|manager
init|=
operator|new
name|InfinispanManager
argument_list|(
name|configuration
argument_list|)
decl_stmt|;
name|manager
operator|.
name|start
argument_list|()
expr_stmt|;
name|BasicCache
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|cache
init|=
name|manager
operator|.
name|getCache
argument_list|(
literal|"misc_cache"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|cache
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|cache
operator|instanceof
name|RemoteCache
argument_list|)
expr_stmt|;
name|RemoteCache
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|remoteCache
init|=
name|InfinispanUtil
operator|.
name|asRemote
argument_list|(
name|cache
argument_list|)
decl_stmt|;
name|String
name|key
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|remoteCache
operator|.
name|put
argument_list|(
name|key
argument_list|,
literal|"val1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|remoteCache
operator|.
name|put
argument_list|(
name|key
argument_list|,
literal|"val2"
argument_list|)
argument_list|)
expr_stmt|;
name|manager
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|remoteCacheWithPropertiesTest ()
specifier|public
name|void
name|remoteCacheWithPropertiesTest
parameter_list|()
throws|throws
name|Exception
block|{
name|InfinispanConfiguration
name|configuration
init|=
operator|new
name|InfinispanConfiguration
argument_list|()
decl_stmt|;
name|configuration
operator|.
name|setHosts
argument_list|(
literal|"localhost"
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setConfigurationUri
argument_list|(
literal|"infinispan/client.properties"
argument_list|)
expr_stmt|;
name|InfinispanManager
name|manager
init|=
operator|new
name|InfinispanManager
argument_list|(
name|configuration
argument_list|)
decl_stmt|;
name|manager
operator|.
name|start
argument_list|()
expr_stmt|;
name|BasicCache
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|cache
init|=
name|manager
operator|.
name|getCache
argument_list|(
literal|"misc_cache"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|cache
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|cache
operator|instanceof
name|RemoteCache
argument_list|)
expr_stmt|;
name|String
name|key
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|cache
operator|.
name|put
argument_list|(
name|key
argument_list|,
literal|"val1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|cache
operator|.
name|put
argument_list|(
name|key
argument_list|,
literal|"val2"
argument_list|)
argument_list|)
expr_stmt|;
name|manager
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

