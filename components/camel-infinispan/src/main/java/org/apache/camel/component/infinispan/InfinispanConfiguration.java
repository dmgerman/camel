begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.component.infinispan
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|infinispan
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|commons
operator|.
name|api
operator|.
name|BasicCacheContainer
import|;
end_import

begin_class
DECL|class|InfinispanConfiguration
specifier|public
class|class
name|InfinispanConfiguration
block|{
DECL|field|cacheContainer
specifier|private
name|BasicCacheContainer
name|cacheContainer
decl_stmt|;
DECL|field|caseName
specifier|private
name|String
name|caseName
decl_stmt|;
DECL|field|host
specifier|private
name|String
name|host
decl_stmt|;
DECL|field|command
specifier|private
name|String
name|command
decl_stmt|;
DECL|field|sync
specifier|private
name|boolean
name|sync
init|=
literal|true
decl_stmt|;
DECL|field|eventTypes
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|eventTypes
decl_stmt|;
DECL|method|getCommand ()
specifier|public
name|String
name|getCommand
parameter_list|()
block|{
return|return
name|command
return|;
block|}
DECL|method|setCommand (String command)
specifier|public
name|void
name|setCommand
parameter_list|(
name|String
name|command
parameter_list|)
block|{
name|this
operator|.
name|command
operator|=
name|command
expr_stmt|;
block|}
DECL|method|getHost ()
specifier|public
name|String
name|getHost
parameter_list|()
block|{
return|return
name|host
return|;
block|}
DECL|method|setHost (String host)
specifier|public
name|void
name|setHost
parameter_list|(
name|String
name|host
parameter_list|)
block|{
name|this
operator|.
name|host
operator|=
name|host
expr_stmt|;
block|}
DECL|method|getCacheContainer ()
specifier|public
name|BasicCacheContainer
name|getCacheContainer
parameter_list|()
block|{
return|return
name|cacheContainer
return|;
block|}
DECL|method|setCacheContainer (BasicCacheContainer cacheContainer)
specifier|public
name|void
name|setCacheContainer
parameter_list|(
name|BasicCacheContainer
name|cacheContainer
parameter_list|)
block|{
name|this
operator|.
name|cacheContainer
operator|=
name|cacheContainer
expr_stmt|;
block|}
DECL|method|getCasheName ()
specifier|public
name|String
name|getCasheName
parameter_list|()
block|{
return|return
name|caseName
return|;
block|}
DECL|method|setCaseName (String caseName)
specifier|public
name|void
name|setCaseName
parameter_list|(
name|String
name|caseName
parameter_list|)
block|{
name|this
operator|.
name|caseName
operator|=
name|caseName
expr_stmt|;
block|}
DECL|method|isSync ()
specifier|public
name|boolean
name|isSync
parameter_list|()
block|{
return|return
name|sync
return|;
block|}
DECL|method|setSync (boolean sync)
specifier|public
name|void
name|setSync
parameter_list|(
name|boolean
name|sync
parameter_list|)
block|{
name|this
operator|.
name|sync
operator|=
name|sync
expr_stmt|;
block|}
DECL|method|getEventTypes ()
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getEventTypes
parameter_list|()
block|{
return|return
name|eventTypes
return|;
block|}
DECL|method|setEventTypes (Set<String> eventTypes)
specifier|public
name|void
name|setEventTypes
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|eventTypes
parameter_list|)
block|{
name|this
operator|.
name|eventTypes
operator|=
name|eventTypes
expr_stmt|;
block|}
DECL|method|setEventTypes (String eventTypes)
specifier|public
name|void
name|setEventTypes
parameter_list|(
name|String
name|eventTypes
parameter_list|)
block|{
name|this
operator|.
name|eventTypes
operator|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|eventTypes
operator|.
name|split
argument_list|(
literal|","
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

