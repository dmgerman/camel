begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jacksonxml
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jacksonxml
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|dataformat
operator|.
name|xml
operator|.
name|XmlMapper
import|;
end_import

begin_comment
comment|/**  * A {@link org.apache.camel.component.jacksonxml.JacksonXMLDataFormat} that is using a list  */
end_comment

begin_class
DECL|class|ListJacksonXMLDataFormat
specifier|public
class|class
name|ListJacksonXMLDataFormat
extends|extends
name|JacksonXMLDataFormat
block|{
DECL|method|ListJacksonXMLDataFormat ()
specifier|public
name|ListJacksonXMLDataFormat
parameter_list|()
block|{
name|useList
argument_list|()
expr_stmt|;
block|}
DECL|method|ListJacksonXMLDataFormat (Class<?> unmarshalType)
specifier|public
name|ListJacksonXMLDataFormat
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|unmarshalType
parameter_list|)
block|{
name|super
argument_list|(
name|unmarshalType
argument_list|)
expr_stmt|;
name|useList
argument_list|()
expr_stmt|;
block|}
DECL|method|ListJacksonXMLDataFormat (Class<?> unmarshalType, Class<?> jsonView)
specifier|public
name|ListJacksonXMLDataFormat
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|unmarshalType
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|jsonView
parameter_list|)
block|{
name|super
argument_list|(
name|unmarshalType
argument_list|,
name|jsonView
argument_list|)
expr_stmt|;
name|useList
argument_list|()
expr_stmt|;
block|}
DECL|method|ListJacksonXMLDataFormat (Class<?> unmarshalType, Class<?> jsonView, boolean enableJaxbAnnotationModule)
specifier|public
name|ListJacksonXMLDataFormat
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|unmarshalType
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|jsonView
parameter_list|,
name|boolean
name|enableJaxbAnnotationModule
parameter_list|)
block|{
name|super
argument_list|(
name|unmarshalType
argument_list|,
name|jsonView
argument_list|,
name|enableJaxbAnnotationModule
argument_list|)
expr_stmt|;
name|useList
argument_list|()
expr_stmt|;
block|}
DECL|method|ListJacksonXMLDataFormat (XmlMapper mapper, Class<?> unmarshalType)
specifier|public
name|ListJacksonXMLDataFormat
parameter_list|(
name|XmlMapper
name|mapper
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|unmarshalType
parameter_list|)
block|{
name|super
argument_list|(
name|mapper
argument_list|,
name|unmarshalType
argument_list|)
expr_stmt|;
name|useList
argument_list|()
expr_stmt|;
block|}
DECL|method|ListJacksonXMLDataFormat (XmlMapper mapper, Class<?> unmarshalType, Class<?> jsonView)
specifier|public
name|ListJacksonXMLDataFormat
parameter_list|(
name|XmlMapper
name|mapper
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|unmarshalType
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|jsonView
parameter_list|)
block|{
name|super
argument_list|(
name|mapper
argument_list|,
name|unmarshalType
argument_list|,
name|jsonView
argument_list|)
expr_stmt|;
name|useList
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

