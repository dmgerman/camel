begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.component.atmosphere.websocket
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|atmosphere
operator|.
name|websocket
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|atmosphere
operator|.
name|cpr
operator|.
name|AtmosphereRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|atmosphere
operator|.
name|websocket
operator|.
name|WebSocket
import|;
end_import

begin_import
import|import
name|org
operator|.
name|atmosphere
operator|.
name|websocket
operator|.
name|WebSocketProtocolStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|WebsocketStreamHandler
specifier|public
class|class
name|WebsocketStreamHandler
extends|extends
name|WebsocketHandler
implements|implements
name|WebSocketProtocolStream
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
specifier|transient
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|WebsocketStreamHandler
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
DECL|method|onTextStream (WebSocket webSocket, Reader data)
specifier|public
name|List
argument_list|<
name|AtmosphereRequest
argument_list|>
name|onTextStream
parameter_list|(
name|WebSocket
name|webSocket
parameter_list|,
name|Reader
name|data
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"processing reader message {}"
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|String
name|connectionKey
init|=
name|store
operator|.
name|getConnectionKey
argument_list|(
name|webSocket
argument_list|)
decl_stmt|;
name|consumer
operator|.
name|sendMessage
argument_list|(
name|connectionKey
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"reader message sent"
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|onBinaryStream (WebSocket webSocket, InputStream data)
specifier|public
name|List
argument_list|<
name|AtmosphereRequest
argument_list|>
name|onBinaryStream
parameter_list|(
name|WebSocket
name|webSocket
parameter_list|,
name|InputStream
name|data
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"processing inputstream message {}"
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|String
name|connectionKey
init|=
name|store
operator|.
name|getConnectionKey
argument_list|(
name|webSocket
argument_list|)
decl_stmt|;
name|consumer
operator|.
name|sendMessage
argument_list|(
name|connectionKey
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"reader message sent"
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

