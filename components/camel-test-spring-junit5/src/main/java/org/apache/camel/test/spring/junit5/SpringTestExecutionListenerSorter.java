begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.test.spring.junit5
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|spring
operator|.
name|junit5
package|;
end_package

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|Ordered
import|;
end_import

begin_comment
comment|/**  * This class centralizes the order of execution of spring test execution listeners:  *<ol>  *<li>{@link CamelSpringTestContextLoaderTestExecutionListener}</li>  *<li>{@link DisableJmxTestExecutionListener}</li>  *<li>{@link CamelSpringBootExecutionListener}</li>  *<li>{@link StopWatchTestExecutionListener}</li>  *<li>Spring default listeners</li>  *</ol>  */
end_comment

begin_class
DECL|class|SpringTestExecutionListenerSorter
specifier|public
specifier|final
class|class
name|SpringTestExecutionListenerSorter
block|{
DECL|method|SpringTestExecutionListenerSorter ()
specifier|private
name|SpringTestExecutionListenerSorter
parameter_list|()
block|{     }
DECL|method|getPrecedence (Class<?> clazz)
specifier|public
specifier|static
name|int
name|getPrecedence
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
parameter_list|)
block|{
if|if
condition|(
name|clazz
operator|==
name|StopWatchTestExecutionListener
operator|.
name|class
condition|)
block|{
return|return
name|Ordered
operator|.
name|HIGHEST_PRECEDENCE
operator|+
literal|4000
return|;
block|}
elseif|else
if|if
condition|(
name|clazz
operator|==
name|CamelSpringBootExecutionListener
operator|.
name|class
condition|)
block|{
return|return
name|Ordered
operator|.
name|HIGHEST_PRECEDENCE
operator|+
literal|3000
return|;
block|}
elseif|else
if|if
condition|(
name|clazz
operator|==
name|DisableJmxTestExecutionListener
operator|.
name|class
condition|)
block|{
return|return
name|Ordered
operator|.
name|HIGHEST_PRECEDENCE
operator|+
literal|2000
return|;
block|}
elseif|else
if|if
condition|(
name|clazz
operator|==
name|CamelSpringTestContextLoaderTestExecutionListener
operator|.
name|class
condition|)
block|{
return|return
name|Ordered
operator|.
name|HIGHEST_PRECEDENCE
operator|+
literal|1000
return|;
block|}
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Impossible to get the precedence of the class "
operator|+
name|clazz
operator|.
name|getName
argument_list|()
operator|+
literal|"."
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

