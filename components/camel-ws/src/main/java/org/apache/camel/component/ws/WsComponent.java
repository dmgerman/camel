begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.ws
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ws
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|ning
operator|.
name|http
operator|.
name|client
operator|.
name|AsyncHttpClientConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|ning
operator|.
name|http
operator|.
name|client
operator|.
name|Realm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|IntrospectionSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|URISupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|UnsafeUriCharactersEncoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|jsse
operator|.
name|SSLContextParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  *  Defines the<a href="http://camel.apache.org/ahc.html">Async HTTP Client Component</a>  */
end_comment

begin_class
DECL|class|WsComponent
specifier|public
class|class
name|WsComponent
extends|extends
name|DefaultComponent
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|WsComponent
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|CLIENT_CONFIG_PREFIX
specifier|private
specifier|static
specifier|final
name|String
name|CLIENT_CONFIG_PREFIX
init|=
literal|"clientConfig."
decl_stmt|;
DECL|field|CLIENT_REALM_CONFIG_PREFIX
specifier|private
specifier|static
specifier|final
name|String
name|CLIENT_REALM_CONFIG_PREFIX
init|=
literal|"clientConfig.realm."
decl_stmt|;
DECL|field|clientConfig
specifier|private
name|AsyncHttpClientConfig
name|clientConfig
decl_stmt|;
DECL|field|sslContextParameters
specifier|private
name|SSLContextParameters
name|sslContextParameters
decl_stmt|;
annotation|@
name|Override
DECL|method|createEndpoint (String uri, String remaining, Map<String, Object> parameters)
specifier|protected
name|Endpoint
name|createEndpoint
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|remaining
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|parameters
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|addressUri
init|=
name|uri
decl_stmt|;
comment|// Do not set the URI because we still have all of the Camel internal
comment|// parameters in the URI at this point.
name|WsEndpoint
name|endpoint
init|=
operator|new
name|WsEndpoint
argument_list|(
name|uri
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|setClientConfig
argument_list|(
name|getClientConfig
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setSslContextParameters
argument_list|(
name|getSslContextParameters
argument_list|()
argument_list|)
expr_stmt|;
name|setProperties
argument_list|(
name|endpoint
argument_list|,
name|parameters
argument_list|)
expr_stmt|;
if|if
condition|(
name|IntrospectionSupport
operator|.
name|hasProperties
argument_list|(
name|parameters
argument_list|,
name|CLIENT_CONFIG_PREFIX
argument_list|)
condition|)
block|{
name|AsyncHttpClientConfig
operator|.
name|Builder
name|builder
init|=
name|endpoint
operator|.
name|getClientConfig
argument_list|()
operator|==
literal|null
condition|?
operator|new
name|AsyncHttpClientConfig
operator|.
name|Builder
argument_list|()
else|:
name|WsComponent
operator|.
name|cloneConfig
argument_list|(
name|endpoint
operator|.
name|getClientConfig
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|endpoint
operator|.
name|getClientConfig
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"The user explicitly set an AsyncHttpClientConfig instance on the component or "
operator|+
literal|"endpoint, but this endpoint URI contains client configuration parameters.  "
operator|+
literal|"Are you sure that this is what was intended?  The URI parameters will be applied"
operator|+
literal|" to a clone of the supplied AsyncHttpClientConfig in order to prevent unintended modification"
operator|+
literal|" of the explicitly configured AsyncHttpClientConfig.  That is, the URI parameters override the"
operator|+
literal|" settings on the explicitly configured AsyncHttpClientConfig for this endpoint."
argument_list|)
expr_stmt|;
block|}
comment|// special for realm builder
name|Realm
operator|.
name|RealmBuilder
name|realmBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|IntrospectionSupport
operator|.
name|hasProperties
argument_list|(
name|parameters
argument_list|,
name|CLIENT_REALM_CONFIG_PREFIX
argument_list|)
condition|)
block|{
name|realmBuilder
operator|=
operator|new
name|Realm
operator|.
name|RealmBuilder
argument_list|()
expr_stmt|;
comment|// set and validate additional parameters on client config
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|realmParams
init|=
name|IntrospectionSupport
operator|.
name|extractProperties
argument_list|(
name|parameters
argument_list|,
name|CLIENT_REALM_CONFIG_PREFIX
argument_list|)
decl_stmt|;
name|setProperties
argument_list|(
name|realmBuilder
argument_list|,
name|realmParams
argument_list|)
expr_stmt|;
name|validateParameters
argument_list|(
name|uri
argument_list|,
name|realmParams
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
comment|// set and validate additional parameters on client config
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|clientParams
init|=
name|IntrospectionSupport
operator|.
name|extractProperties
argument_list|(
name|parameters
argument_list|,
name|CLIENT_CONFIG_PREFIX
argument_list|)
decl_stmt|;
name|setProperties
argument_list|(
name|builder
argument_list|,
name|clientParams
argument_list|)
expr_stmt|;
name|validateParameters
argument_list|(
name|uri
argument_list|,
name|clientParams
argument_list|,
literal|null
argument_list|)
expr_stmt|;
if|if
condition|(
name|realmBuilder
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setRealm
argument_list|(
name|realmBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|endpoint
operator|.
name|setClientConfig
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|SSLContextParameters
name|sslparams
init|=
name|resolveAndRemoveReferenceParameter
argument_list|(
name|parameters
argument_list|,
literal|"sslContextParameters"
argument_list|,
name|SSLContextParameters
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// prefer to use endpoint configured over component configured
if|if
condition|(
name|sslparams
operator|==
literal|null
condition|)
block|{
comment|// fallback to component configured
name|sslparams
operator|=
name|getSslContextParameters
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|sslparams
operator|!=
literal|null
condition|)
block|{
name|endpoint
operator|.
name|setSslContextParameters
argument_list|(
name|sslparams
argument_list|)
expr_stmt|;
block|}
comment|// restructure uri to be based on the parameters left as we dont want to include the Camel internal options
name|addressUri
operator|=
name|UnsafeUriCharactersEncoder
operator|.
name|encode
argument_list|(
name|addressUri
argument_list|)
expr_stmt|;
name|URI
name|wsuri
init|=
name|URISupport
operator|.
name|createRemainingURI
argument_list|(
operator|new
name|URI
argument_list|(
name|addressUri
argument_list|)
argument_list|,
name|parameters
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|setWsUri
argument_list|(
name|wsuri
argument_list|)
expr_stmt|;
return|return
name|endpoint
return|;
block|}
DECL|method|getClientConfig ()
specifier|public
name|AsyncHttpClientConfig
name|getClientConfig
parameter_list|()
block|{
return|return
name|clientConfig
return|;
block|}
DECL|method|setClientConfig (AsyncHttpClientConfig clientConfig)
specifier|public
name|void
name|setClientConfig
parameter_list|(
name|AsyncHttpClientConfig
name|clientConfig
parameter_list|)
block|{
name|this
operator|.
name|clientConfig
operator|=
name|clientConfig
expr_stmt|;
block|}
DECL|method|getSslContextParameters ()
specifier|public
name|SSLContextParameters
name|getSslContextParameters
parameter_list|()
block|{
return|return
name|sslContextParameters
return|;
block|}
DECL|method|setSslContextParameters (SSLContextParameters sslContextParameters)
specifier|public
name|void
name|setSslContextParameters
parameter_list|(
name|SSLContextParameters
name|sslContextParameters
parameter_list|)
block|{
name|this
operator|.
name|sslContextParameters
operator|=
name|sslContextParameters
expr_stmt|;
block|}
comment|/**      * Creates a new client configuration builder using {@code clientConfig} as a template for      * the builder.      *      * @param clientConfig the instance to serve as a template for the builder      *      * @return a builder configured with the same options as the supplied config      */
DECL|method|cloneConfig (AsyncHttpClientConfig clientConfig)
specifier|static
name|AsyncHttpClientConfig
operator|.
name|Builder
name|cloneConfig
parameter_list|(
name|AsyncHttpClientConfig
name|clientConfig
parameter_list|)
block|{
name|AsyncHttpClientConfig
operator|.
name|Builder
name|builder
init|=
operator|new
name|AsyncHttpClientConfig
operator|.
name|Builder
argument_list|(
name|clientConfig
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
block|}
end_class

end_unit

