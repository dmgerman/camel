begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.hystrix.processor
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hystrix
operator|.
name|processor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|SimpleRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|HystrixConfigurationDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|HystrixDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|ModelCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|HystrixHierarchicalConfigTest
specifier|public
class|class
name|HystrixHierarchicalConfigTest
block|{
annotation|@
name|Test
DECL|method|testRegistryConfiguration ()
specifier|public
name|void
name|testRegistryConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|SimpleRegistry
name|registry
init|=
operator|new
name|SimpleRegistry
argument_list|()
decl_stmt|;
specifier|final
name|CamelContext
name|context
init|=
operator|new
name|DefaultCamelContext
argument_list|(
name|registry
argument_list|)
decl_stmt|;
name|HystrixConfigurationDefinition
name|def
init|=
operator|new
name|HystrixConfigurationDefinition
argument_list|()
decl_stmt|;
name|def
operator|.
name|setGroupKey
argument_list|(
literal|"global-group-key"
argument_list|)
expr_stmt|;
name|def
operator|.
name|setThreadPoolKey
argument_list|(
literal|"global-thread-key"
argument_list|)
expr_stmt|;
name|def
operator|.
name|setCorePoolSize
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|HystrixConfigurationDefinition
name|ref
init|=
operator|new
name|HystrixConfigurationDefinition
argument_list|()
decl_stmt|;
name|ref
operator|.
name|setGroupKey
argument_list|(
literal|"ref-group-key"
argument_list|)
expr_stmt|;
name|ref
operator|.
name|setCorePoolSize
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|registry
operator|.
name|put
argument_list|(
name|HystrixConstants
operator|.
name|DEFAULT_HYSTRIX_CONFIGURATION_ID
argument_list|,
name|def
argument_list|)
expr_stmt|;
name|registry
operator|.
name|put
argument_list|(
literal|"ref-hystrix"
argument_list|,
name|ref
argument_list|)
expr_stmt|;
specifier|final
name|HystrixReifier
name|reifier
init|=
operator|new
name|HystrixReifier
argument_list|(
operator|new
name|HystrixDefinition
argument_list|()
operator|.
name|hystrixConfiguration
argument_list|(
literal|"ref-hystrix"
argument_list|)
operator|.
name|hystrixConfiguration
argument_list|()
operator|.
name|groupKey
argument_list|(
literal|"local-conf-group-key"
argument_list|)
operator|.
name|requestLogEnabled
argument_list|(
literal|false
argument_list|)
operator|.
name|end
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|HystrixConfigurationDefinition
name|config
init|=
name|reifier
operator|.
name|buildHystrixConfiguration
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"local-conf-group-key"
argument_list|,
name|config
operator|.
name|getGroupKey
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"global-thread-key"
argument_list|,
name|config
operator|.
name|getThreadPoolKey
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|Integer
argument_list|(
literal|5
argument_list|)
argument_list|,
name|config
operator|.
name|getCorePoolSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testContextConfiguration ()
specifier|public
name|void
name|testContextConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|CamelContext
name|context
init|=
operator|new
name|DefaultCamelContext
argument_list|()
decl_stmt|;
name|HystrixConfigurationDefinition
name|def
init|=
operator|new
name|HystrixConfigurationDefinition
argument_list|()
decl_stmt|;
name|def
operator|.
name|setGroupKey
argument_list|(
literal|"global-group-key"
argument_list|)
expr_stmt|;
name|def
operator|.
name|setThreadPoolKey
argument_list|(
literal|"global-thread-key"
argument_list|)
expr_stmt|;
name|def
operator|.
name|setCorePoolSize
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|HystrixConfigurationDefinition
name|ref
init|=
operator|new
name|HystrixConfigurationDefinition
argument_list|()
decl_stmt|;
name|ref
operator|.
name|setGroupKey
argument_list|(
literal|"ref-group-key"
argument_list|)
expr_stmt|;
name|ref
operator|.
name|setCorePoolSize
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|context
operator|.
name|adapt
argument_list|(
name|ModelCamelContext
operator|.
name|class
argument_list|)
operator|.
name|setHystrixConfiguration
argument_list|(
name|def
argument_list|)
expr_stmt|;
name|context
operator|.
name|adapt
argument_list|(
name|ModelCamelContext
operator|.
name|class
argument_list|)
operator|.
name|addHystrixConfiguration
argument_list|(
literal|"ref-hystrix"
argument_list|,
name|ref
argument_list|)
expr_stmt|;
specifier|final
name|HystrixReifier
name|reifier
init|=
operator|new
name|HystrixReifier
argument_list|(
operator|new
name|HystrixDefinition
argument_list|()
operator|.
name|hystrixConfiguration
argument_list|(
literal|"ref-hystrix"
argument_list|)
operator|.
name|hystrixConfiguration
argument_list|()
operator|.
name|groupKey
argument_list|(
literal|"local-conf-group-key"
argument_list|)
operator|.
name|requestLogEnabled
argument_list|(
literal|false
argument_list|)
operator|.
name|end
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|HystrixConfigurationDefinition
name|config
init|=
name|reifier
operator|.
name|buildHystrixConfiguration
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"local-conf-group-key"
argument_list|,
name|config
operator|.
name|getGroupKey
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"global-thread-key"
argument_list|,
name|config
operator|.
name|getThreadPoolKey
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|Integer
argument_list|(
literal|5
argument_list|)
argument_list|,
name|config
operator|.
name|getCorePoolSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMixedConfiguration ()
specifier|public
name|void
name|testMixedConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|SimpleRegistry
name|registry
init|=
operator|new
name|SimpleRegistry
argument_list|()
decl_stmt|;
specifier|final
name|CamelContext
name|context
init|=
operator|new
name|DefaultCamelContext
argument_list|(
name|registry
argument_list|)
decl_stmt|;
name|HystrixConfigurationDefinition
name|def
init|=
operator|new
name|HystrixConfigurationDefinition
argument_list|()
decl_stmt|;
name|def
operator|.
name|setGroupKey
argument_list|(
literal|"global-group-key"
argument_list|)
expr_stmt|;
name|def
operator|.
name|setThreadPoolKey
argument_list|(
literal|"global-thread-key"
argument_list|)
expr_stmt|;
name|def
operator|.
name|setCorePoolSize
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|HystrixConfigurationDefinition
name|ref
init|=
operator|new
name|HystrixConfigurationDefinition
argument_list|()
decl_stmt|;
name|ref
operator|.
name|setGroupKey
argument_list|(
literal|"ref-group-key"
argument_list|)
expr_stmt|;
name|ref
operator|.
name|setCorePoolSize
argument_list|(
literal|5
argument_list|)
expr_stmt|;
comment|// this should be ignored
name|HystrixConfigurationDefinition
name|defReg
init|=
operator|new
name|HystrixConfigurationDefinition
argument_list|()
decl_stmt|;
name|defReg
operator|.
name|setGroupKey
argument_list|(
literal|"global-reg-group-key"
argument_list|)
expr_stmt|;
name|defReg
operator|.
name|setThreadPoolKey
argument_list|(
literal|"global-reg-thread-key"
argument_list|)
expr_stmt|;
name|defReg
operator|.
name|setCorePoolSize
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|context
operator|.
name|adapt
argument_list|(
name|ModelCamelContext
operator|.
name|class
argument_list|)
operator|.
name|setHystrixConfiguration
argument_list|(
name|def
argument_list|)
expr_stmt|;
name|registry
operator|.
name|put
argument_list|(
name|HystrixConstants
operator|.
name|DEFAULT_HYSTRIX_CONFIGURATION_ID
argument_list|,
name|defReg
argument_list|)
expr_stmt|;
name|registry
operator|.
name|put
argument_list|(
literal|"ref-hystrix"
argument_list|,
name|ref
argument_list|)
expr_stmt|;
specifier|final
name|HystrixReifier
name|reifier
init|=
operator|new
name|HystrixReifier
argument_list|(
operator|new
name|HystrixDefinition
argument_list|()
operator|.
name|hystrixConfiguration
argument_list|(
literal|"ref-hystrix"
argument_list|)
operator|.
name|hystrixConfiguration
argument_list|()
operator|.
name|groupKey
argument_list|(
literal|"local-conf-group-key"
argument_list|)
operator|.
name|requestLogEnabled
argument_list|(
literal|false
argument_list|)
operator|.
name|end
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|HystrixConfigurationDefinition
name|config
init|=
name|reifier
operator|.
name|buildHystrixConfiguration
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"local-conf-group-key"
argument_list|,
name|config
operator|.
name|getGroupKey
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"global-thread-key"
argument_list|,
name|config
operator|.
name|getThreadPoolKey
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|Integer
argument_list|(
literal|5
argument_list|)
argument_list|,
name|config
operator|.
name|getCorePoolSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

