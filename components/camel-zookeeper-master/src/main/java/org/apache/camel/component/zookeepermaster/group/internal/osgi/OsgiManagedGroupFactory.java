begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.zookeepermaster.group.internal.osgi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|zookeepermaster
operator|.
name|group
operator|.
name|internal
operator|.
name|osgi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ThreadFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|zookeepermaster
operator|.
name|group
operator|.
name|Group
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|zookeepermaster
operator|.
name|group
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|zookeepermaster
operator|.
name|group
operator|.
name|internal
operator|.
name|DelegateZooKeeperGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|zookeepermaster
operator|.
name|group
operator|.
name|internal
operator|.
name|DelegateZooKeeperMultiGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|zookeepermaster
operator|.
name|group
operator|.
name|internal
operator|.
name|ManagedGroupFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|curator
operator|.
name|framework
operator|.
name|CuratorFramework
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|ServiceReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|util
operator|.
name|tracker
operator|.
name|ServiceTracker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|util
operator|.
name|tracker
operator|.
name|ServiceTrackerCustomizer
import|;
end_import

begin_class
DECL|class|OsgiManagedGroupFactory
specifier|public
class|class
name|OsgiManagedGroupFactory
implements|implements
name|ManagedGroupFactory
block|{
DECL|field|delegate
specifier|private
name|ManagedGroupFactory
name|delegate
decl_stmt|;
DECL|method|OsgiManagedGroupFactory ()
specifier|public
name|OsgiManagedGroupFactory
parameter_list|()
block|{     }
DECL|method|setClassLoader (ClassLoader loader)
specifier|public
name|void
name|setClassLoader
parameter_list|(
name|ClassLoader
name|loader
parameter_list|)
block|{
name|this
operator|.
name|delegate
operator|=
operator|new
name|OsgiTrackingManagedGroupFactory
argument_list|(
name|loader
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getCurator ()
specifier|public
name|CuratorFramework
name|getCurator
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|getCurator
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|createGroup (String path, Class<T> clazz)
specifier|public
parameter_list|<
name|T
extends|extends
name|NodeState
parameter_list|>
name|Group
argument_list|<
name|T
argument_list|>
name|createGroup
parameter_list|(
name|String
name|path
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|createGroup
argument_list|(
name|path
argument_list|,
name|clazz
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|createGroup (String path, Class<T> clazz, ThreadFactory threadFactory)
specifier|public
parameter_list|<
name|T
extends|extends
name|NodeState
parameter_list|>
name|Group
argument_list|<
name|T
argument_list|>
name|createGroup
parameter_list|(
name|String
name|path
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|,
name|ThreadFactory
name|threadFactory
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|createGroup
argument_list|(
name|path
argument_list|,
name|clazz
argument_list|,
name|threadFactory
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|createMultiGroup (String path, Class<T> clazz)
specifier|public
parameter_list|<
name|T
extends|extends
name|NodeState
parameter_list|>
name|Group
argument_list|<
name|T
argument_list|>
name|createMultiGroup
parameter_list|(
name|String
name|path
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"not supported"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createMultiGroup (String path, Class<T> clazz, ThreadFactory threadFactory)
specifier|public
parameter_list|<
name|T
extends|extends
name|NodeState
parameter_list|>
name|Group
argument_list|<
name|T
argument_list|>
name|createMultiGroup
parameter_list|(
name|String
name|path
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|,
name|ThreadFactory
name|threadFactory
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"not supported"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
block|{
name|delegate
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|class|OsgiTrackingManagedGroupFactory
specifier|static
class|class
name|OsgiTrackingManagedGroupFactory
implements|implements
name|ManagedGroupFactory
implements|,
name|ServiceTrackerCustomizer
argument_list|<
name|CuratorFramework
argument_list|,
name|CuratorFramework
argument_list|>
block|{
DECL|field|bundleContext
specifier|private
specifier|final
name|BundleContext
name|bundleContext
decl_stmt|;
DECL|field|tracker
specifier|private
specifier|final
name|ServiceTracker
argument_list|<
name|CuratorFramework
argument_list|,
name|CuratorFramework
argument_list|>
name|tracker
decl_stmt|;
DECL|field|curator
specifier|private
name|CuratorFramework
name|curator
decl_stmt|;
DECL|field|groups
specifier|private
specifier|final
name|List
argument_list|<
name|DelegateZooKeeperGroup
argument_list|<
name|?
argument_list|>
argument_list|>
name|groups
init|=
operator|new
name|ArrayList
argument_list|<
name|DelegateZooKeeperGroup
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
DECL|method|OsgiTrackingManagedGroupFactory (ClassLoader loader)
name|OsgiTrackingManagedGroupFactory
parameter_list|(
name|ClassLoader
name|loader
parameter_list|)
block|{
name|this
argument_list|(
name|getBundleContext
argument_list|(
name|loader
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|OsgiTrackingManagedGroupFactory (BundleContext bundleContext)
name|OsgiTrackingManagedGroupFactory
parameter_list|(
name|BundleContext
name|bundleContext
parameter_list|)
block|{
name|this
operator|.
name|bundleContext
operator|=
name|bundleContext
expr_stmt|;
name|this
operator|.
name|tracker
operator|=
operator|new
name|ServiceTracker
argument_list|<
name|CuratorFramework
argument_list|,
name|CuratorFramework
argument_list|>
argument_list|(
name|bundleContext
argument_list|,
name|CuratorFramework
operator|.
name|class
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|this
operator|.
name|tracker
operator|.
name|open
argument_list|()
expr_stmt|;
block|}
DECL|method|getBundleContext (ClassLoader loader)
specifier|static
name|BundleContext
name|getBundleContext
parameter_list|(
name|ClassLoader
name|loader
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|loader
operator|instanceof
name|BundleReference
operator|)
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Not an OSGi ClassLoader"
argument_list|)
throw|;
block|}
return|return
operator|(
operator|(
name|BundleReference
operator|)
name|loader
operator|)
operator|.
name|getBundle
argument_list|()
operator|.
name|getBundleContext
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|addingService (ServiceReference<CuratorFramework> reference)
specifier|public
name|CuratorFramework
name|addingService
parameter_list|(
name|ServiceReference
argument_list|<
name|CuratorFramework
argument_list|>
name|reference
parameter_list|)
block|{
name|CuratorFramework
name|curator
init|=
name|OsgiTrackingManagedGroupFactory
operator|.
name|this
operator|.
name|bundleContext
operator|.
name|getService
argument_list|(
name|reference
argument_list|)
decl_stmt|;
name|useCurator
argument_list|(
name|curator
argument_list|)
expr_stmt|;
return|return
name|curator
return|;
block|}
annotation|@
name|Override
DECL|method|modifiedService (ServiceReference<CuratorFramework> reference, CuratorFramework service)
specifier|public
name|void
name|modifiedService
parameter_list|(
name|ServiceReference
argument_list|<
name|CuratorFramework
argument_list|>
name|reference
parameter_list|,
name|CuratorFramework
name|service
parameter_list|)
block|{         }
annotation|@
name|Override
DECL|method|removedService (ServiceReference<CuratorFramework> reference, CuratorFramework service)
specifier|public
name|void
name|removedService
parameter_list|(
name|ServiceReference
argument_list|<
name|CuratorFramework
argument_list|>
name|reference
parameter_list|,
name|CuratorFramework
name|service
parameter_list|)
block|{
name|useCurator
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|OsgiTrackingManagedGroupFactory
operator|.
name|this
operator|.
name|bundleContext
operator|.
name|ungetService
argument_list|(
name|reference
argument_list|)
expr_stmt|;
block|}
DECL|method|useCurator (CuratorFramework curator)
specifier|protected
name|void
name|useCurator
parameter_list|(
name|CuratorFramework
name|curator
parameter_list|)
block|{
name|this
operator|.
name|curator
operator|=
name|curator
expr_stmt|;
for|for
control|(
name|DelegateZooKeeperGroup
argument_list|<
name|?
argument_list|>
name|group
range|:
name|groups
control|)
block|{
name|group
operator|.
name|useCurator
argument_list|(
name|curator
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|getCurator ()
specifier|public
name|CuratorFramework
name|getCurator
parameter_list|()
block|{
return|return
name|curator
return|;
block|}
annotation|@
name|Override
DECL|method|createGroup (String path, Class<T> clazz)
specifier|public
parameter_list|<
name|T
extends|extends
name|NodeState
parameter_list|>
name|Group
argument_list|<
name|T
argument_list|>
name|createGroup
parameter_list|(
name|String
name|path
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|)
block|{
return|return
operator|new
name|DelegateZooKeeperGroup
argument_list|<
name|T
argument_list|>
argument_list|(
name|path
argument_list|,
name|clazz
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|start
parameter_list|()
block|{
name|useCurator
argument_list|(
name|curator
argument_list|)
expr_stmt|;
name|groups
operator|.
name|add
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|super
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|groups
operator|.
name|remove
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|super
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
return|;
block|}
annotation|@
name|Override
DECL|method|createGroup (String path, Class<T> clazz, ThreadFactory threadFactory)
specifier|public
parameter_list|<
name|T
extends|extends
name|NodeState
parameter_list|>
name|Group
argument_list|<
name|T
argument_list|>
name|createGroup
parameter_list|(
name|String
name|path
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|,
name|ThreadFactory
name|threadFactory
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"not supported"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createMultiGroup (String path, Class<T> clazz)
specifier|public
parameter_list|<
name|T
extends|extends
name|NodeState
parameter_list|>
name|Group
argument_list|<
name|T
argument_list|>
name|createMultiGroup
parameter_list|(
name|String
name|path
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|)
block|{
return|return
operator|new
name|DelegateZooKeeperMultiGroup
argument_list|<
name|T
argument_list|>
argument_list|(
name|path
argument_list|,
name|clazz
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|start
parameter_list|()
block|{
name|useCurator
argument_list|(
name|curator
argument_list|)
expr_stmt|;
name|groups
operator|.
name|add
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|super
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|groups
operator|.
name|remove
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|super
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
return|;
block|}
annotation|@
name|Override
DECL|method|createMultiGroup (String path, Class<T> clazz, ThreadFactory threadFactory)
specifier|public
parameter_list|<
name|T
extends|extends
name|NodeState
parameter_list|>
name|Group
argument_list|<
name|T
argument_list|>
name|createMultiGroup
parameter_list|(
name|String
name|path
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|,
name|ThreadFactory
name|threadFactory
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"not supported"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
block|{
name|this
operator|.
name|tracker
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

