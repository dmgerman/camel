begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.pgevent
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pgevent
package|;
end_package

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|impossibl
operator|.
name|postgres
operator|.
name|api
operator|.
name|jdbc
operator|.
name|PGConnection
import|;
end_import

begin_class
DECL|class|PgEventHelper
specifier|public
specifier|final
class|class
name|PgEventHelper
block|{
DECL|method|PgEventHelper ()
specifier|private
name|PgEventHelper
parameter_list|()
block|{     }
DECL|method|toPGConnection (Connection connection)
specifier|public
specifier|static
name|PGConnection
name|toPGConnection
parameter_list|(
name|Connection
name|connection
parameter_list|)
throws|throws
name|SQLException
block|{
if|if
condition|(
name|connection
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Connection must not be null"
argument_list|)
throw|;
block|}
name|PGConnection
name|conn
decl_stmt|;
if|if
condition|(
name|connection
operator|instanceof
name|PGConnection
condition|)
block|{
name|conn
operator|=
operator|(
name|PGConnection
operator|)
name|connection
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|connection
operator|.
name|isWrapperFor
argument_list|(
name|PGConnection
operator|.
name|class
argument_list|)
condition|)
block|{
name|conn
operator|=
name|connection
operator|.
name|unwrap
argument_list|(
name|PGConnection
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Cannot obtain PGConnection"
argument_list|)
throw|;
block|}
return|return
name|conn
return|;
block|}
block|}
end_class

end_unit

