begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.pgevent
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|pgevent
package|;
end_package

begin_import
import|import
name|com
operator|.
name|impossibl
operator|.
name|postgres
operator|.
name|jdbc
operator|.
name|PGDataSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|main
operator|.
name|Main
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|IntegrationTest
specifier|public
class|class
name|IntegrationTest
block|{
DECL|field|host
specifier|private
name|String
name|host
decl_stmt|;
DECL|field|port
specifier|private
name|String
name|port
decl_stmt|;
DECL|field|database
specifier|private
name|String
name|database
decl_stmt|;
DECL|field|user
specifier|private
name|String
name|user
decl_stmt|;
DECL|field|password
specifier|private
name|String
name|password
decl_stmt|;
DECL|field|main
specifier|private
name|Main
name|main
decl_stmt|;
DECL|field|ds
specifier|private
name|PGDataSource
name|ds
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|host
operator|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"pgjdbc.test.server"
argument_list|,
literal|"localhost"
argument_list|)
expr_stmt|;
name|this
operator|.
name|port
operator|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"pgjdbc.test.port"
argument_list|,
literal|"5432"
argument_list|)
expr_stmt|;
name|this
operator|.
name|database
operator|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"pgjdbc.test.db"
argument_list|,
literal|"event_tests"
argument_list|)
expr_stmt|;
name|this
operator|.
name|user
operator|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"pgjdbc.test.user"
argument_list|,
literal|"dphillips"
argument_list|)
expr_stmt|;
name|this
operator|.
name|password
operator|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"pgjdbc.test.password"
argument_list|)
expr_stmt|;
name|ds
operator|=
operator|new
name|PGDataSource
argument_list|()
expr_stmt|;
name|ds
operator|.
name|setHost
argument_list|(
name|this
operator|.
name|host
argument_list|)
expr_stmt|;
name|ds
operator|.
name|setPort
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|this
operator|.
name|port
argument_list|)
argument_list|)
expr_stmt|;
name|ds
operator|.
name|setDatabase
argument_list|(
name|this
operator|.
name|database
argument_list|)
expr_stmt|;
name|ds
operator|.
name|setUser
argument_list|(
name|this
operator|.
name|user
argument_list|)
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|password
operator|!=
literal|null
condition|)
block|{
name|ds
operator|.
name|setPassword
argument_list|(
name|this
operator|.
name|password
argument_list|)
expr_stmt|;
block|}
name|main
operator|=
operator|new
name|Main
argument_list|()
expr_stmt|;
name|main
operator|.
name|enableHangupSupport
argument_list|()
expr_stmt|;
name|main
operator|.
name|bind
argument_list|(
literal|"test"
argument_list|,
name|ds
argument_list|)
expr_stmt|;
name|main
operator|.
name|addRouteBuilder
argument_list|(
name|buildConsumer
argument_list|()
argument_list|)
expr_stmt|;
name|main
operator|.
name|addRouteBuilder
argument_list|(
name|buildProducer
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|buildConsumer ()
name|RouteBuilder
name|buildConsumer
parameter_list|()
block|{
name|RouteBuilder
name|builder
init|=
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|fromF
argument_list|(
literal|"pgevent://%s:%s/%s/testchannel?user=%s&pass=%s"
argument_list|,
name|host
argument_list|,
name|port
argument_list|,
name|database
argument_list|,
name|user
argument_list|,
name|password
argument_list|)
operator|.
name|to
argument_list|(
literal|"log:org.apache.camel.pgevent.PgEventConsumer?level=DEBUG"
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
return|return
name|builder
return|;
block|}
DECL|method|buildProducer ()
name|RouteBuilder
name|buildProducer
parameter_list|()
block|{
name|RouteBuilder
name|builder
init|=
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
literal|"timer://test?fixedRate=true&period=5000"
argument_list|)
operator|.
name|setBody
argument_list|(
name|header
argument_list|(
name|Exchange
operator|.
name|TIMER_FIRED_TIME
argument_list|)
argument_list|)
operator|.
name|toF
argument_list|(
literal|"pgevent://%s:%s/%s/testchannel?user=%s&pass=%s"
argument_list|,
name|host
argument_list|,
name|port
argument_list|,
name|database
argument_list|,
name|user
argument_list|,
name|password
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
return|return
name|builder
return|;
block|}
annotation|@
name|Test
DECL|method|waitHere ()
specifier|public
name|void
name|waitHere
parameter_list|()
throws|throws
name|Exception
block|{
name|main
operator|.
name|run
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

