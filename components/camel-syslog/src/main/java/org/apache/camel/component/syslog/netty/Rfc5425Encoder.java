begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  */
end_comment

begin_package
DECL|package|org.apache.camel.component.syslog.netty
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|syslog
operator|.
name|netty
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|netty
operator|.
name|buffer
operator|.
name|ChannelBuffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|netty
operator|.
name|channel
operator|.
name|Channel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|netty
operator|.
name|channel
operator|.
name|ChannelHandler
operator|.
name|Sharable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|netty
operator|.
name|channel
operator|.
name|ChannelHandlerContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jboss
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|oneone
operator|.
name|OneToOneEncoder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|jboss
operator|.
name|netty
operator|.
name|buffer
operator|.
name|ChannelBuffers
operator|.
name|wrappedBuffer
import|;
end_import

begin_class
annotation|@
name|Sharable
DECL|class|Rfc5425Encoder
specifier|public
class|class
name|Rfc5425Encoder
extends|extends
name|OneToOneEncoder
block|{
annotation|@
name|Override
DECL|method|encode (ChannelHandlerContext ctx, Channel channel, Object msg)
specifier|protected
name|Object
name|encode
parameter_list|(
name|ChannelHandlerContext
name|ctx
parameter_list|,
name|Channel
name|channel
parameter_list|,
name|Object
name|msg
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
operator|!
operator|(
name|msg
operator|instanceof
name|ChannelBuffer
operator|)
condition|)
block|{
return|return
name|msg
return|;
block|}
name|ChannelBuffer
name|src
init|=
operator|(
name|ChannelBuffer
operator|)
name|msg
decl_stmt|;
name|int
name|length
init|=
name|src
operator|.
name|readableBytes
argument_list|()
decl_stmt|;
name|String
name|headerString
init|=
name|length
operator|+
literal|" "
decl_stmt|;
name|ChannelBuffer
name|header
init|=
name|channel
operator|.
name|getConfig
argument_list|()
operator|.
name|getBufferFactory
argument_list|()
operator|.
name|getBuffer
argument_list|(
name|src
operator|.
name|order
argument_list|()
argument_list|,
name|headerString
operator|.
name|getBytes
argument_list|(
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF8"
argument_list|)
argument_list|)
operator|.
name|length
argument_list|)
decl_stmt|;
name|header
operator|.
name|writeBytes
argument_list|(
name|headerString
operator|.
name|getBytes
argument_list|(
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF8"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|wrappedBuffer
argument_list|(
name|header
argument_list|,
name|src
argument_list|)
return|;
block|}
block|}
end_class

end_unit

