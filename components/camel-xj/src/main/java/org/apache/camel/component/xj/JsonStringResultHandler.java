begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.xj
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|xj
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|JsonFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|JsonGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|xslt
operator|.
name|ResultHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stax
operator|.
name|StAXResult
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_class
DECL|class|JsonStringResultHandler
specifier|public
class|class
name|JsonStringResultHandler
implements|implements
name|ResultHandler
block|{
DECL|field|stringWriter
specifier|private
specifier|final
name|StringWriter
name|stringWriter
decl_stmt|;
DECL|field|result
specifier|private
specifier|final
name|Result
name|result
decl_stmt|;
DECL|method|JsonStringResultHandler (JsonFactory jsonFactory)
specifier|public
name|JsonStringResultHandler
parameter_list|(
name|JsonFactory
name|jsonFactory
parameter_list|)
throws|throws
name|Exception
block|{
name|this
operator|.
name|stringWriter
operator|=
operator|new
name|StringWriter
argument_list|()
expr_stmt|;
specifier|final
name|JsonGenerator
name|jsonGenerator
init|=
name|jsonFactory
operator|.
name|createGenerator
argument_list|(
name|this
operator|.
name|stringWriter
argument_list|)
decl_stmt|;
name|this
operator|.
name|result
operator|=
operator|new
name|StAXResult
argument_list|(
operator|new
name|XmlJsonStreamWriter
argument_list|(
name|jsonGenerator
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getResult ()
specifier|public
name|Result
name|getResult
parameter_list|()
block|{
return|return
name|this
operator|.
name|result
return|;
block|}
annotation|@
name|Override
DECL|method|setBody (Message in)
specifier|public
name|void
name|setBody
parameter_list|(
name|Message
name|in
parameter_list|)
block|{
name|in
operator|.
name|setBody
argument_list|(
name|this
operator|.
name|stringWriter
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

