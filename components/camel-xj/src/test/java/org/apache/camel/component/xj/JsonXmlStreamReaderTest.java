begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.xj
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|xj
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|JsonXmlStreamReaderTest
specifier|public
class|class
name|JsonXmlStreamReaderTest
block|{
annotation|@
name|Test
DECL|method|test1 ()
specifier|public
name|void
name|test1
parameter_list|()
throws|throws
name|Exception
block|{
name|XJTestUtils
operator|.
name|transformJson2XmlAndCompare
argument_list|(
literal|null
argument_list|,
literal|"json2xml/test1"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|test2 ()
specifier|public
name|void
name|test2
parameter_list|()
throws|throws
name|Exception
block|{
name|XJTestUtils
operator|.
name|transformJson2XmlAndCompare
argument_list|(
literal|null
argument_list|,
literal|"json2xml/test2"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|test3 ()
specifier|public
name|void
name|test3
parameter_list|()
throws|throws
name|Exception
block|{
name|XJTestUtils
operator|.
name|transformJson2XmlAndCompare
argument_list|(
literal|null
argument_list|,
literal|"json2xml/test3"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|test4 ()
specifier|public
name|void
name|test4
parameter_list|()
throws|throws
name|Exception
block|{
name|XJTestUtils
operator|.
name|transformJson2XmlAndCompare
argument_list|(
literal|null
argument_list|,
literal|"json2xml/test4"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|test5 ()
specifier|public
name|void
name|test5
parameter_list|()
throws|throws
name|Exception
block|{
name|XJTestUtils
operator|.
name|transformJson2XmlAndCompare
argument_list|(
literal|null
argument_list|,
literal|"json2xml/test5"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|test6 ()
specifier|public
name|void
name|test6
parameter_list|()
throws|throws
name|Exception
block|{
name|XJTestUtils
operator|.
name|transformJson2XmlAndCompare
argument_list|(
literal|null
argument_list|,
literal|"json2xml/test6"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|test7 ()
specifier|public
name|void
name|test7
parameter_list|()
throws|throws
name|Exception
block|{
name|XJTestUtils
operator|.
name|transformJson2XmlAndCompare
argument_list|(
literal|null
argument_list|,
literal|"json2xml/test7"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|test8 ()
specifier|public
name|void
name|test8
parameter_list|()
throws|throws
name|Exception
block|{
name|XJTestUtils
operator|.
name|transformJson2XmlAndCompare
argument_list|(
literal|null
argument_list|,
literal|"json2xml/test8"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|test9 ()
specifier|public
name|void
name|test9
parameter_list|()
throws|throws
name|Exception
block|{
name|XJTestUtils
operator|.
name|transformJson2XmlAndCompare
argument_list|(
literal|null
argument_list|,
literal|"json2xml/test9"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|test10 ()
specifier|public
name|void
name|test10
parameter_list|()
throws|throws
name|Exception
block|{
name|XJTestUtils
operator|.
name|transformJson2XmlAndCompare
argument_list|(
literal|null
argument_list|,
literal|"json2xml/test10"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|test11 ()
specifier|public
name|void
name|test11
parameter_list|()
throws|throws
name|Exception
block|{
name|XJTestUtils
operator|.
name|transformJson2XmlAndCompare
argument_list|(
literal|null
argument_list|,
literal|"json2xml/test11"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

