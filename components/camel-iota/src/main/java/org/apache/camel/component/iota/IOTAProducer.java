begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.iota
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|iota
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|DefaultProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|iota
operator|.
name|jota
operator|.
name|builder
operator|.
name|AddressRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|iota
operator|.
name|jota
operator|.
name|dto
operator|.
name|response
operator|.
name|GetNewAddressResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|iota
operator|.
name|jota
operator|.
name|dto
operator|.
name|response
operator|.
name|GetTransferResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|iota
operator|.
name|jota
operator|.
name|dto
operator|.
name|response
operator|.
name|SendTransferResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|iota
operator|.
name|jota
operator|.
name|model
operator|.
name|Transfer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|iota
operator|.
name|jota
operator|.
name|utils
operator|.
name|TrytesConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * The IOTA producer.  */
end_comment

begin_class
DECL|class|IOTAProducer
specifier|public
class|class
name|IOTAProducer
extends|extends
name|DefaultProducer
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|IOTAProducer
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|endpoint
specifier|private
name|IOTAEndpoint
name|endpoint
decl_stmt|;
DECL|method|IOTAProducer (IOTAEndpoint endpoint)
specifier|public
name|IOTAProducer
parameter_list|(
name|IOTAEndpoint
name|endpoint
parameter_list|)
block|{
name|super
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
name|this
operator|.
name|endpoint
operator|=
name|endpoint
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|process (Exchange exchange)
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|seed
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|IOTAConstants
operator|.
name|SEED_HEADER
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|endpoint
operator|.
name|getOperation
argument_list|()
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"IOTAProducer operation cannot be null!"
argument_list|)
throw|;
block|}
if|if
condition|(
name|endpoint
operator|.
name|getOperation
argument_list|()
operator|.
name|equals
argument_list|(
name|IOTAConstants
operator|.
name|SEND_TRANSFER_OPERATION
argument_list|)
condition|)
block|{
name|String
name|address
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|IOTAConstants
operator|.
name|TO_ADDRESS_HEADER
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|Integer
name|value
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|IOTAConstants
operator|.
name|VALUE_HEADER
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
decl_stmt|;
name|value
operator|=
name|value
operator|!=
literal|null
condition|?
name|value
else|:
literal|0
expr_stmt|;
name|String
name|tag
init|=
name|StringUtils
operator|.
name|rightPad
argument_list|(
name|endpoint
operator|.
name|getTag
argument_list|()
argument_list|,
name|IOTAConstants
operator|.
name|TAG_LENGTH
argument_list|,
literal|'9'
argument_list|)
decl_stmt|;
name|String
name|message
init|=
name|TrytesConverter
operator|.
name|asciiToTrytes
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"endpoint: security level {} depth {} minWeightMagnitude {} tag {} "
argument_list|,
name|endpoint
operator|.
name|getSecurityLevel
argument_list|()
argument_list|,
name|endpoint
operator|.
name|getDepth
argument_list|()
argument_list|,
name|endpoint
operator|.
name|getMinWeightMagnitude
argument_list|()
argument_list|,
name|tag
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Sending value {} with message {} to address {}"
argument_list|,
name|value
argument_list|,
name|message
argument_list|,
name|address
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|Transfer
argument_list|>
name|transfers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|transfers
operator|.
name|add
argument_list|(
operator|new
name|Transfer
argument_list|(
name|address
argument_list|,
name|value
argument_list|,
name|message
argument_list|,
name|tag
argument_list|)
argument_list|)
expr_stmt|;
name|SendTransferResponse
name|response
init|=
name|endpoint
operator|.
name|getApiClient
argument_list|()
operator|.
name|sendTransfer
argument_list|(
name|seed
argument_list|,
name|endpoint
operator|.
name|getSecurityLevel
argument_list|()
argument_list|,
name|endpoint
operator|.
name|getDepth
argument_list|()
argument_list|,
name|endpoint
operator|.
name|getMinWeightMagnitude
argument_list|()
argument_list|,
name|transfers
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|response
operator|.
name|getTransactions
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|endpoint
operator|.
name|getOperation
argument_list|()
operator|.
name|equals
argument_list|(
name|IOTAConstants
operator|.
name|GET_NEW_ADDRESS_OPERATION
argument_list|)
condition|)
block|{
name|Integer
name|index
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|IOTAConstants
operator|.
name|ADDRESS_INDEX_HEADER
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
decl_stmt|;
name|AddressRequest
name|addressRequest
init|=
operator|new
name|AddressRequest
operator|.
name|Builder
argument_list|(
name|seed
argument_list|,
name|endpoint
operator|.
name|getSecurityLevel
argument_list|()
argument_list|)
operator|.
name|index
argument_list|(
name|index
argument_list|)
operator|.
name|checksum
argument_list|(
literal|true
argument_list|)
operator|.
name|amount
argument_list|(
literal|1
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|GetNewAddressResponse
name|response
init|=
name|endpoint
operator|.
name|getApiClient
argument_list|()
operator|.
name|generateNewAddresses
argument_list|(
name|addressRequest
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|response
operator|.
name|getAddresses
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|endpoint
operator|.
name|getOperation
argument_list|()
operator|.
name|equals
argument_list|(
name|IOTAConstants
operator|.
name|GET_TRANSFERS_OPERATION
argument_list|)
condition|)
block|{
name|Integer
name|startIdx
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|IOTAConstants
operator|.
name|ADDRESS_START_INDEX_HEADER
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
decl_stmt|;
name|Integer
name|endIdx
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|IOTAConstants
operator|.
name|ADDRESS_END_INDEX_HEADER
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
decl_stmt|;
name|GetTransferResponse
name|response
init|=
name|endpoint
operator|.
name|getApiClient
argument_list|()
operator|.
name|getTransfers
argument_list|(
name|seed
argument_list|,
name|endpoint
operator|.
name|getSecurityLevel
argument_list|()
argument_list|,
name|startIdx
argument_list|,
name|endIdx
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|response
operator|.
name|getTransfers
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

