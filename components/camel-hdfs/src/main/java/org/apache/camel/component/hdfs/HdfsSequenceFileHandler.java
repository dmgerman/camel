begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.hdfs
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hdfs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RuntimeCamelException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|SequenceFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Writable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|ReflectionUtils
import|;
end_import

begin_class
DECL|class|HdfsSequenceFileHandler
class|class
name|HdfsSequenceFileHandler
extends|extends
name|DefaultHdfsFile
argument_list|<
name|SequenceFile
operator|.
name|Writer
argument_list|,
name|SequenceFile
operator|.
name|Reader
argument_list|>
block|{
annotation|@
name|Override
DECL|method|createOutputStream (String hdfsPath, HdfsInfoFactory hdfsInfoFactory)
specifier|public
name|SequenceFile
operator|.
name|Writer
name|createOutputStream
parameter_list|(
name|String
name|hdfsPath
parameter_list|,
name|HdfsInfoFactory
name|hdfsInfoFactory
parameter_list|)
block|{
try|try
block|{
name|SequenceFile
operator|.
name|Writer
name|rout
decl_stmt|;
name|HdfsInfo
name|hdfsInfo
init|=
name|hdfsInfoFactory
operator|.
name|newHdfsInfo
argument_list|(
name|hdfsPath
argument_list|)
decl_stmt|;
name|HdfsConfiguration
name|endpointConfig
init|=
name|hdfsInfoFactory
operator|.
name|getEndpointConfig
argument_list|()
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|keyWritableClass
init|=
name|endpointConfig
operator|.
name|getKeyType
argument_list|()
operator|.
name|getWritableClass
argument_list|()
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|valueWritableClass
init|=
name|endpointConfig
operator|.
name|getValueType
argument_list|()
operator|.
name|getWritableClass
argument_list|()
decl_stmt|;
name|rout
operator|=
name|SequenceFile
operator|.
name|createWriter
argument_list|(
name|hdfsInfo
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|SequenceFile
operator|.
name|Writer
operator|.
name|file
argument_list|(
name|hdfsInfo
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|,
name|SequenceFile
operator|.
name|Writer
operator|.
name|keyClass
argument_list|(
name|keyWritableClass
argument_list|)
argument_list|,
name|SequenceFile
operator|.
name|Writer
operator|.
name|valueClass
argument_list|(
name|valueWritableClass
argument_list|)
argument_list|,
name|SequenceFile
operator|.
name|Writer
operator|.
name|bufferSize
argument_list|(
name|endpointConfig
operator|.
name|getBufferSize
argument_list|()
argument_list|)
argument_list|,
name|SequenceFile
operator|.
name|Writer
operator|.
name|replication
argument_list|(
name|endpointConfig
operator|.
name|getReplication
argument_list|()
argument_list|)
argument_list|,
name|SequenceFile
operator|.
name|Writer
operator|.
name|blockSize
argument_list|(
name|endpointConfig
operator|.
name|getBlockSize
argument_list|()
argument_list|)
argument_list|,
name|SequenceFile
operator|.
name|Writer
operator|.
name|compression
argument_list|(
name|endpointConfig
operator|.
name|getCompressionType
argument_list|()
argument_list|,
name|endpointConfig
operator|.
name|getCompressionCodec
argument_list|()
operator|.
name|getCodec
argument_list|()
argument_list|)
argument_list|,
name|SequenceFile
operator|.
name|Writer
operator|.
name|progressable
argument_list|(
parameter_list|()
lambda|->
block|{                     }
argument_list|)
argument_list|,
name|SequenceFile
operator|.
name|Writer
operator|.
name|metadata
argument_list|(
operator|new
name|SequenceFile
operator|.
name|Metadata
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|rout
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|append (HdfsOutputStream hdfsOutputStream, Object key, Object value, Exchange exchange)
specifier|public
name|long
name|append
parameter_list|(
name|HdfsOutputStream
name|hdfsOutputStream
parameter_list|,
name|Object
name|key
parameter_list|,
name|Object
name|value
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
block|{
try|try
block|{
name|Holder
argument_list|<
name|Integer
argument_list|>
name|keySize
init|=
operator|new
name|Holder
argument_list|<>
argument_list|()
decl_stmt|;
name|Writable
name|keyWritable
init|=
name|getWritable
argument_list|(
name|key
argument_list|,
name|exchange
argument_list|,
name|keySize
argument_list|)
decl_stmt|;
name|Holder
argument_list|<
name|Integer
argument_list|>
name|valueSize
init|=
operator|new
name|Holder
argument_list|<>
argument_list|()
decl_stmt|;
name|Writable
name|valueWritable
init|=
name|getWritable
argument_list|(
name|value
argument_list|,
name|exchange
argument_list|,
name|valueSize
argument_list|)
decl_stmt|;
name|SequenceFile
operator|.
name|Writer
name|writer
init|=
operator|(
name|SequenceFile
operator|.
name|Writer
operator|)
name|hdfsOutputStream
operator|.
name|getOut
argument_list|()
decl_stmt|;
name|writer
operator|.
name|append
argument_list|(
name|keyWritable
argument_list|,
name|valueWritable
argument_list|)
expr_stmt|;
name|writer
operator|.
name|sync
argument_list|()
expr_stmt|;
return|return
name|Long
operator|.
name|sum
argument_list|(
name|keySize
operator|.
name|value
argument_list|,
name|valueSize
operator|.
name|value
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|createInputStream (String hdfsPath, HdfsInfoFactory hdfsInfoFactory)
specifier|public
name|SequenceFile
operator|.
name|Reader
name|createInputStream
parameter_list|(
name|String
name|hdfsPath
parameter_list|,
name|HdfsInfoFactory
name|hdfsInfoFactory
parameter_list|)
block|{
try|try
block|{
name|SequenceFile
operator|.
name|Reader
name|rin
decl_stmt|;
name|HdfsInfo
name|hdfsInfo
init|=
name|hdfsInfoFactory
operator|.
name|newHdfsInfo
argument_list|(
name|hdfsPath
argument_list|)
decl_stmt|;
name|rin
operator|=
operator|new
name|SequenceFile
operator|.
name|Reader
argument_list|(
name|hdfsInfo
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|SequenceFile
operator|.
name|Reader
operator|.
name|file
argument_list|(
name|hdfsInfo
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|rin
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|next (HdfsInputStream hdfsInputStream, Holder<Object> key, Holder<Object> value)
specifier|public
name|long
name|next
parameter_list|(
name|HdfsInputStream
name|hdfsInputStream
parameter_list|,
name|Holder
argument_list|<
name|Object
argument_list|>
name|key
parameter_list|,
name|Holder
argument_list|<
name|Object
argument_list|>
name|value
parameter_list|)
block|{
try|try
block|{
name|SequenceFile
operator|.
name|Reader
name|reader
init|=
operator|(
name|SequenceFile
operator|.
name|Reader
operator|)
name|hdfsInputStream
operator|.
name|getIn
argument_list|()
decl_stmt|;
name|Holder
argument_list|<
name|Integer
argument_list|>
name|keySize
init|=
operator|new
name|Holder
argument_list|<>
argument_list|()
decl_stmt|;
name|Writable
name|keyWritable
init|=
operator|(
name|Writable
operator|)
name|ReflectionUtils
operator|.
name|newInstance
argument_list|(
name|reader
operator|.
name|getKeyClass
argument_list|()
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|)
decl_stmt|;
name|Holder
argument_list|<
name|Integer
argument_list|>
name|valueSize
init|=
operator|new
name|Holder
argument_list|<>
argument_list|()
decl_stmt|;
name|Writable
name|valueWritable
init|=
operator|(
name|Writable
operator|)
name|ReflectionUtils
operator|.
name|newInstance
argument_list|(
name|reader
operator|.
name|getValueClass
argument_list|()
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|reader
operator|.
name|next
argument_list|(
name|keyWritable
argument_list|,
name|valueWritable
argument_list|)
condition|)
block|{
name|key
operator|.
name|value
operator|=
name|getObject
argument_list|(
name|keyWritable
argument_list|,
name|keySize
argument_list|)
expr_stmt|;
name|value
operator|.
name|value
operator|=
name|getObject
argument_list|(
name|valueWritable
argument_list|,
name|valueSize
argument_list|)
expr_stmt|;
return|return
name|Long
operator|.
name|sum
argument_list|(
name|keySize
operator|.
name|value
argument_list|,
name|valueSize
operator|.
name|value
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|0
return|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

