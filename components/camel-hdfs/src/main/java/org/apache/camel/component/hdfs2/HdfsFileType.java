begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.hdfs2
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hdfs2
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Closeable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RuntimeCamelException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|TypeConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|IOHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FSDataOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|ArrayFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|BloomMapFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|BooleanWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|ByteWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|BytesWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|DoubleWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|FloatWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|IntWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|LongWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|MapFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|NullWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|SequenceFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|SequenceFile
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|SequenceFile
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Writable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|WritableComparable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Progressable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|ReflectionUtils
import|;
end_import

begin_enum
DECL|enum|HdfsFileType
specifier|public
enum|enum
name|HdfsFileType
block|{
DECL|enumConstant|NORMAL_FILE
name|NORMAL_FILE
block|{
annotation|@
name|Override
specifier|public
name|long
name|append
parameter_list|(
name|HdfsOutputStream
name|hdfsostr
parameter_list|,
name|Object
name|key
parameter_list|,
name|Object
name|value
parameter_list|,
name|TypeConverter
name|typeConverter
parameter_list|)
block|{
name|InputStream
name|is
init|=
literal|null
decl_stmt|;
try|try
block|{
name|is
operator|=
name|typeConverter
operator|.
name|convertTo
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
name|value
argument_list|)
expr_stmt|;
return|return
name|copyBytes
argument_list|(
name|is
argument_list|,
operator|(
name|FSDataOutputStream
operator|)
name|hdfsostr
operator|.
name|getOut
argument_list|()
argument_list|,
name|HdfsConstants
operator|.
name|DEFAULT_BUFFERSIZE
argument_list|,
literal|false
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
finally|finally
block|{
name|IOHelper
operator|.
name|close
argument_list|(
name|is
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|long
name|next
parameter_list|(
name|HdfsInputStream
name|hdfsistr
parameter_list|,
name|Holder
argument_list|<
name|Object
argument_list|>
name|key
parameter_list|,
name|Holder
argument_list|<
name|Object
argument_list|>
name|value
parameter_list|)
block|{
try|try
block|{
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|(
name|hdfsistr
operator|.
name|getChunkSize
argument_list|()
argument_list|)
decl_stmt|;
name|byte
name|buf
index|[]
init|=
operator|new
name|byte
index|[
name|hdfsistr
operator|.
name|getChunkSize
argument_list|()
index|]
decl_stmt|;
name|int
name|bytesRead
init|=
operator|(
operator|(
name|InputStream
operator|)
name|hdfsistr
operator|.
name|getIn
argument_list|()
operator|)
operator|.
name|read
argument_list|(
name|buf
argument_list|)
decl_stmt|;
if|if
condition|(
name|bytesRead
operator|>=
literal|0
condition|)
block|{
name|bos
operator|.
name|write
argument_list|(
name|buf
argument_list|,
literal|0
argument_list|,
name|bytesRead
argument_list|)
expr_stmt|;
name|key
operator|.
name|value
operator|=
literal|null
expr_stmt|;
name|value
operator|.
name|value
operator|=
name|bos
expr_stmt|;
return|return
name|bytesRead
return|;
block|}
else|else
block|{
name|key
operator|.
name|value
operator|=
literal|null
expr_stmt|;
comment|// indication that we may have read from empty file
name|value
operator|.
name|value
operator|=
name|bos
expr_stmt|;
return|return
literal|0
return|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Closeable
name|createOutputStream
parameter_list|(
name|String
name|hdfsPath
parameter_list|,
name|HdfsConfiguration
name|configuration
parameter_list|)
block|{
try|try
block|{
name|Closeable
name|rout
decl_stmt|;
name|HdfsInfo
name|hdfsInfo
init|=
name|HdfsInfoFactory
operator|.
name|newHdfsInfo
argument_list|(
name|hdfsPath
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|configuration
operator|.
name|isAppend
argument_list|()
condition|)
block|{
name|rout
operator|=
name|hdfsInfo
operator|.
name|getFileSystem
argument_list|()
operator|.
name|create
argument_list|(
name|hdfsInfo
operator|.
name|getPath
argument_list|()
argument_list|,
name|configuration
operator|.
name|isOverwrite
argument_list|()
argument_list|,
name|configuration
operator|.
name|getBufferSize
argument_list|()
argument_list|,
name|configuration
operator|.
name|getReplication
argument_list|()
argument_list|,
name|configuration
operator|.
name|getBlockSize
argument_list|()
argument_list|,
operator|new
name|Progressable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|progress
parameter_list|()
block|{                                 }
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rout
operator|=
name|hdfsInfo
operator|.
name|getFileSystem
argument_list|()
operator|.
name|append
argument_list|(
name|hdfsInfo
operator|.
name|getPath
argument_list|()
argument_list|,
name|configuration
operator|.
name|getBufferSize
argument_list|()
argument_list|,
operator|new
name|Progressable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|progress
parameter_list|()
block|{                         }
block|}
argument_list|)
expr_stmt|;
block|}
return|return
name|rout
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Closeable
name|createInputStream
parameter_list|(
name|String
name|hdfsPath
parameter_list|,
name|HdfsConfiguration
name|configuration
parameter_list|)
block|{
try|try
block|{
name|Closeable
name|rin
decl_stmt|;
if|if
condition|(
name|configuration
operator|.
name|getFileSystemType
argument_list|()
operator|.
name|equals
argument_list|(
name|HdfsFileSystemType
operator|.
name|LOCAL
argument_list|)
condition|)
block|{
name|HdfsInfo
name|hdfsInfo
init|=
name|HdfsInfoFactory
operator|.
name|newHdfsInfo
argument_list|(
name|hdfsPath
argument_list|)
decl_stmt|;
name|rin
operator|=
name|hdfsInfo
operator|.
name|getFileSystem
argument_list|()
operator|.
name|open
argument_list|(
name|hdfsInfo
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rin
operator|=
operator|new
name|FileInputStream
argument_list|(
name|getHfdsFileToTmpFile
argument_list|(
name|hdfsPath
argument_list|,
name|configuration
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|rin
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
specifier|private
name|File
name|getHfdsFileToTmpFile
parameter_list|(
name|String
name|hdfsPath
parameter_list|,
name|HdfsConfiguration
name|configuration
parameter_list|)
block|{
try|try
block|{
name|String
name|fname
init|=
name|hdfsPath
operator|.
name|substring
argument_list|(
name|hdfsPath
operator|.
name|lastIndexOf
argument_list|(
literal|'/'
argument_list|)
argument_list|)
decl_stmt|;
comment|// [CAMEL-13711] Files.createTempFile not equivalent to File.createTempFile
name|File
name|outputDest
decl_stmt|;
try|try
block|{
comment|// First trying: Files.createTempFile
name|outputDest
operator|=
name|Files
operator|.
name|createTempFile
argument_list|(
name|fname
argument_list|,
literal|".hdfs"
argument_list|)
operator|.
name|toFile
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// Now trying: File.createTempFile
name|outputDest
operator|=
name|File
operator|.
name|createTempFile
argument_list|(
name|fname
argument_list|,
literal|".hdfs"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|outputDest
operator|.
name|exists
argument_list|()
condition|)
block|{
name|outputDest
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
name|HdfsInfo
name|hdfsInfo
init|=
name|HdfsInfoFactory
operator|.
name|newHdfsInfo
argument_list|(
name|hdfsPath
argument_list|)
decl_stmt|;
name|FileSystem
name|fileSystem
init|=
name|hdfsInfo
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
name|fileSystem
argument_list|,
operator|new
name|Path
argument_list|(
name|hdfsPath
argument_list|)
argument_list|,
name|outputDest
argument_list|,
literal|false
argument_list|,
name|fileSystem
operator|.
name|getConf
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|FileUtil
operator|.
name|copyMerge
argument_list|(
name|fileSystem
argument_list|,
comment|// src
operator|new
name|Path
argument_list|(
name|hdfsPath
argument_list|)
argument_list|,
name|FileSystem
operator|.
name|getLocal
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|)
argument_list|,
comment|// dest
operator|new
name|Path
argument_list|(
name|outputDest
operator|.
name|toURI
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|,
name|fileSystem
operator|.
name|getConf
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
return|return
name|outputDest
return|;
block|}
return|return
operator|new
name|File
argument_list|(
name|outputDest
argument_list|,
name|fname
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
block|}
block|,
DECL|enumConstant|SEQUENCE_FILE
name|SEQUENCE_FILE
block|{
annotation|@
name|Override
specifier|public
name|long
name|append
parameter_list|(
name|HdfsOutputStream
name|hdfsostr
parameter_list|,
name|Object
name|key
parameter_list|,
name|Object
name|value
parameter_list|,
name|TypeConverter
name|typeConverter
parameter_list|)
block|{
try|try
block|{
name|Holder
argument_list|<
name|Integer
argument_list|>
name|keySize
init|=
operator|new
name|Holder
argument_list|<>
argument_list|()
decl_stmt|;
name|Writable
name|keyWritable
init|=
name|getWritable
argument_list|(
name|key
argument_list|,
name|typeConverter
argument_list|,
name|keySize
argument_list|)
decl_stmt|;
name|Holder
argument_list|<
name|Integer
argument_list|>
name|valueSize
init|=
operator|new
name|Holder
argument_list|<>
argument_list|()
decl_stmt|;
name|Writable
name|valueWritable
init|=
name|getWritable
argument_list|(
name|value
argument_list|,
name|typeConverter
argument_list|,
name|valueSize
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
operator|(
name|SequenceFile
operator|.
name|Writer
operator|)
name|hdfsostr
operator|.
name|getOut
argument_list|()
decl_stmt|;
name|writer
operator|.
name|append
argument_list|(
name|keyWritable
argument_list|,
name|valueWritable
argument_list|)
expr_stmt|;
name|writer
operator|.
name|sync
argument_list|()
expr_stmt|;
return|return
name|keySize
operator|.
name|value
operator|+
name|valueSize
operator|.
name|value
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|long
name|next
parameter_list|(
name|HdfsInputStream
name|hdfsistr
parameter_list|,
name|Holder
argument_list|<
name|Object
argument_list|>
name|key
parameter_list|,
name|Holder
argument_list|<
name|Object
argument_list|>
name|value
parameter_list|)
block|{
try|try
block|{
name|SequenceFile
operator|.
name|Reader
name|reader
init|=
operator|(
name|SequenceFile
operator|.
name|Reader
operator|)
name|hdfsistr
operator|.
name|getIn
argument_list|()
decl_stmt|;
name|Holder
argument_list|<
name|Integer
argument_list|>
name|keySize
init|=
operator|new
name|Holder
argument_list|<>
argument_list|()
decl_stmt|;
name|Writable
name|keyWritable
init|=
operator|(
name|Writable
operator|)
name|ReflectionUtils
operator|.
name|newInstance
argument_list|(
name|reader
operator|.
name|getKeyClass
argument_list|()
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|)
decl_stmt|;
name|Holder
argument_list|<
name|Integer
argument_list|>
name|valueSize
init|=
operator|new
name|Holder
argument_list|<>
argument_list|()
decl_stmt|;
name|Writable
name|valueWritable
init|=
operator|(
name|Writable
operator|)
name|ReflectionUtils
operator|.
name|newInstance
argument_list|(
name|reader
operator|.
name|getValueClass
argument_list|()
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|reader
operator|.
name|next
argument_list|(
name|keyWritable
argument_list|,
name|valueWritable
argument_list|)
condition|)
block|{
name|key
operator|.
name|value
operator|=
name|getObject
argument_list|(
name|keyWritable
argument_list|,
name|keySize
argument_list|)
expr_stmt|;
name|value
operator|.
name|value
operator|=
name|getObject
argument_list|(
name|valueWritable
argument_list|,
name|valueSize
argument_list|)
expr_stmt|;
return|return
name|keySize
operator|.
name|value
operator|+
name|valueSize
operator|.
name|value
return|;
block|}
else|else
block|{
return|return
literal|0
return|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Closeable
name|createOutputStream
parameter_list|(
name|String
name|hdfsPath
parameter_list|,
name|HdfsConfiguration
name|configuration
parameter_list|)
block|{
try|try
block|{
name|Closeable
name|rout
decl_stmt|;
name|HdfsInfo
name|hdfsInfo
init|=
name|HdfsInfoFactory
operator|.
name|newHdfsInfo
argument_list|(
name|hdfsPath
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|keyWritableClass
init|=
name|configuration
operator|.
name|getKeyType
argument_list|()
operator|.
name|getWritableClass
argument_list|()
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|valueWritableClass
init|=
name|configuration
operator|.
name|getValueType
argument_list|()
operator|.
name|getWritableClass
argument_list|()
decl_stmt|;
name|rout
operator|=
name|SequenceFile
operator|.
name|createWriter
argument_list|(
name|hdfsInfo
operator|.
name|getConf
argument_list|()
argument_list|,
name|Writer
operator|.
name|file
argument_list|(
name|hdfsInfo
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|,
name|Writer
operator|.
name|keyClass
argument_list|(
name|keyWritableClass
argument_list|)
argument_list|,
name|Writer
operator|.
name|valueClass
argument_list|(
name|valueWritableClass
argument_list|)
argument_list|,
name|Writer
operator|.
name|bufferSize
argument_list|(
name|configuration
operator|.
name|getBufferSize
argument_list|()
argument_list|)
argument_list|,
name|Writer
operator|.
name|replication
argument_list|(
name|configuration
operator|.
name|getReplication
argument_list|()
argument_list|)
argument_list|,
name|Writer
operator|.
name|blockSize
argument_list|(
name|configuration
operator|.
name|getBlockSize
argument_list|()
argument_list|)
argument_list|,
name|Writer
operator|.
name|compression
argument_list|(
name|configuration
operator|.
name|getCompressionType
argument_list|()
argument_list|,
name|configuration
operator|.
name|getCompressionCodec
argument_list|()
operator|.
name|getCodec
argument_list|()
argument_list|)
argument_list|,
name|Writer
operator|.
name|progressable
argument_list|(
operator|new
name|Progressable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|progress
parameter_list|()
block|{                             }
block|}
argument_list|)
argument_list|,
name|Writer
operator|.
name|metadata
argument_list|(
operator|new
name|SequenceFile
operator|.
name|Metadata
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|rout
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Closeable
name|createInputStream
parameter_list|(
name|String
name|hdfsPath
parameter_list|,
name|HdfsConfiguration
name|configuration
parameter_list|)
block|{
try|try
block|{
name|Closeable
name|rin
decl_stmt|;
name|HdfsInfo
name|hdfsInfo
init|=
name|HdfsInfoFactory
operator|.
name|newHdfsInfo
argument_list|(
name|hdfsPath
argument_list|)
decl_stmt|;
name|rin
operator|=
operator|new
name|SequenceFile
operator|.
name|Reader
argument_list|(
name|hdfsInfo
operator|.
name|getConf
argument_list|()
argument_list|,
name|Reader
operator|.
name|file
argument_list|(
name|hdfsInfo
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|rin
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
block|}
block|,
DECL|enumConstant|MAP_FILE
name|MAP_FILE
block|{
annotation|@
name|Override
specifier|public
name|long
name|append
parameter_list|(
name|HdfsOutputStream
name|hdfsostr
parameter_list|,
name|Object
name|key
parameter_list|,
name|Object
name|value
parameter_list|,
name|TypeConverter
name|typeConverter
parameter_list|)
block|{
try|try
block|{
name|Holder
argument_list|<
name|Integer
argument_list|>
name|keySize
init|=
operator|new
name|Holder
argument_list|<>
argument_list|()
decl_stmt|;
name|Writable
name|keyWritable
init|=
name|getWritable
argument_list|(
name|key
argument_list|,
name|typeConverter
argument_list|,
name|keySize
argument_list|)
decl_stmt|;
name|Holder
argument_list|<
name|Integer
argument_list|>
name|valueSize
init|=
operator|new
name|Holder
argument_list|<>
argument_list|()
decl_stmt|;
name|Writable
name|valueWritable
init|=
name|getWritable
argument_list|(
name|value
argument_list|,
name|typeConverter
argument_list|,
name|valueSize
argument_list|)
decl_stmt|;
operator|(
operator|(
name|MapFile
operator|.
name|Writer
operator|)
name|hdfsostr
operator|.
name|getOut
argument_list|()
operator|)
operator|.
name|append
argument_list|(
operator|(
name|WritableComparable
argument_list|<
name|?
argument_list|>
operator|)
name|keyWritable
argument_list|,
name|valueWritable
argument_list|)
expr_stmt|;
return|return
name|keySize
operator|.
name|value
operator|+
name|valueSize
operator|.
name|value
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|long
name|next
parameter_list|(
name|HdfsInputStream
name|hdfsistr
parameter_list|,
name|Holder
argument_list|<
name|Object
argument_list|>
name|key
parameter_list|,
name|Holder
argument_list|<
name|Object
argument_list|>
name|value
parameter_list|)
block|{
try|try
block|{
name|MapFile
operator|.
name|Reader
name|reader
init|=
operator|(
name|MapFile
operator|.
name|Reader
operator|)
name|hdfsistr
operator|.
name|getIn
argument_list|()
decl_stmt|;
name|Holder
argument_list|<
name|Integer
argument_list|>
name|keySize
init|=
operator|new
name|Holder
argument_list|<>
argument_list|()
decl_stmt|;
name|WritableComparable
argument_list|<
name|?
argument_list|>
name|keyWritable
init|=
operator|(
name|WritableComparable
argument_list|<
name|?
argument_list|>
operator|)
name|ReflectionUtils
operator|.
name|newInstance
argument_list|(
name|reader
operator|.
name|getKeyClass
argument_list|()
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|)
decl_stmt|;
name|Holder
argument_list|<
name|Integer
argument_list|>
name|valueSize
init|=
operator|new
name|Holder
argument_list|<>
argument_list|()
decl_stmt|;
name|Writable
name|valueWritable
init|=
operator|(
name|Writable
operator|)
name|ReflectionUtils
operator|.
name|newInstance
argument_list|(
name|reader
operator|.
name|getValueClass
argument_list|()
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|reader
operator|.
name|next
argument_list|(
name|keyWritable
argument_list|,
name|valueWritable
argument_list|)
condition|)
block|{
name|key
operator|.
name|value
operator|=
name|getObject
argument_list|(
name|keyWritable
argument_list|,
name|keySize
argument_list|)
expr_stmt|;
name|value
operator|.
name|value
operator|=
name|getObject
argument_list|(
name|valueWritable
argument_list|,
name|valueSize
argument_list|)
expr_stmt|;
return|return
name|keySize
operator|.
name|value
operator|+
name|valueSize
operator|.
name|value
return|;
block|}
else|else
block|{
return|return
literal|0
return|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
specifier|public
name|Closeable
name|createOutputStream
parameter_list|(
name|String
name|hdfsPath
parameter_list|,
name|HdfsConfiguration
name|configuration
parameter_list|)
block|{
try|try
block|{
name|Closeable
name|rout
decl_stmt|;
name|HdfsInfo
name|hdfsInfo
init|=
name|HdfsInfoFactory
operator|.
name|newHdfsInfo
argument_list|(
name|hdfsPath
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|?
extends|extends
name|WritableComparable
argument_list|>
name|keyWritableClass
init|=
name|configuration
operator|.
name|getKeyType
argument_list|()
operator|.
name|getWritableClass
argument_list|()
decl_stmt|;
name|Class
argument_list|<
name|?
extends|extends
name|WritableComparable
argument_list|>
name|valueWritableClass
init|=
name|configuration
operator|.
name|getValueType
argument_list|()
operator|.
name|getWritableClass
argument_list|()
decl_stmt|;
name|rout
operator|=
operator|new
name|MapFile
operator|.
name|Writer
argument_list|(
name|hdfsInfo
operator|.
name|getConf
argument_list|()
argument_list|,
operator|new
name|Path
argument_list|(
name|hdfsPath
argument_list|)
argument_list|,
name|MapFile
operator|.
name|Writer
operator|.
name|keyClass
argument_list|(
name|keyWritableClass
argument_list|)
argument_list|,
name|MapFile
operator|.
name|Writer
operator|.
name|valueClass
argument_list|(
name|valueWritableClass
argument_list|)
argument_list|,
name|MapFile
operator|.
name|Writer
operator|.
name|compression
argument_list|(
name|configuration
operator|.
name|getCompressionType
argument_list|()
argument_list|,
name|configuration
operator|.
name|getCompressionCodec
argument_list|()
operator|.
name|getCodec
argument_list|()
argument_list|)
argument_list|,
name|MapFile
operator|.
name|Writer
operator|.
name|progressable
argument_list|(
operator|new
name|Progressable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|progress
parameter_list|()
block|{                         }
block|}
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|rout
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Closeable
name|createInputStream
parameter_list|(
name|String
name|hdfsPath
parameter_list|,
name|HdfsConfiguration
name|configuration
parameter_list|)
block|{
try|try
block|{
name|Closeable
name|rin
decl_stmt|;
name|HdfsInfo
name|hdfsInfo
init|=
name|HdfsInfoFactory
operator|.
name|newHdfsInfo
argument_list|(
name|hdfsPath
argument_list|)
decl_stmt|;
name|rin
operator|=
operator|new
name|MapFile
operator|.
name|Reader
argument_list|(
operator|new
name|Path
argument_list|(
name|hdfsPath
argument_list|)
argument_list|,
name|hdfsInfo
operator|.
name|getConf
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|rin
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
block|}
block|,
DECL|enumConstant|BLOOMMAP_FILE
name|BLOOMMAP_FILE
block|{
annotation|@
name|Override
specifier|public
name|long
name|append
parameter_list|(
name|HdfsOutputStream
name|hdfsostr
parameter_list|,
name|Object
name|key
parameter_list|,
name|Object
name|value
parameter_list|,
name|TypeConverter
name|typeConverter
parameter_list|)
block|{
try|try
block|{
name|Holder
argument_list|<
name|Integer
argument_list|>
name|keySize
init|=
operator|new
name|Holder
argument_list|<>
argument_list|()
decl_stmt|;
name|Writable
name|keyWritable
init|=
name|getWritable
argument_list|(
name|key
argument_list|,
name|typeConverter
argument_list|,
name|keySize
argument_list|)
decl_stmt|;
name|Holder
argument_list|<
name|Integer
argument_list|>
name|valueSize
init|=
operator|new
name|Holder
argument_list|<>
argument_list|()
decl_stmt|;
name|Writable
name|valueWritable
init|=
name|getWritable
argument_list|(
name|value
argument_list|,
name|typeConverter
argument_list|,
name|valueSize
argument_list|)
decl_stmt|;
operator|(
operator|(
name|BloomMapFile
operator|.
name|Writer
operator|)
name|hdfsostr
operator|.
name|getOut
argument_list|()
operator|)
operator|.
name|append
argument_list|(
operator|(
name|WritableComparable
argument_list|<
name|?
argument_list|>
operator|)
name|keyWritable
argument_list|,
name|valueWritable
argument_list|)
expr_stmt|;
return|return
name|keySize
operator|.
name|value
operator|+
name|valueSize
operator|.
name|value
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|long
name|next
parameter_list|(
name|HdfsInputStream
name|hdfsistr
parameter_list|,
name|Holder
argument_list|<
name|Object
argument_list|>
name|key
parameter_list|,
name|Holder
argument_list|<
name|Object
argument_list|>
name|value
parameter_list|)
block|{
try|try
block|{
name|MapFile
operator|.
name|Reader
name|reader
init|=
operator|(
name|BloomMapFile
operator|.
name|Reader
operator|)
name|hdfsistr
operator|.
name|getIn
argument_list|()
decl_stmt|;
name|Holder
argument_list|<
name|Integer
argument_list|>
name|keySize
init|=
operator|new
name|Holder
argument_list|<>
argument_list|()
decl_stmt|;
name|WritableComparable
argument_list|<
name|?
argument_list|>
name|keyWritable
init|=
operator|(
name|WritableComparable
argument_list|<
name|?
argument_list|>
operator|)
name|ReflectionUtils
operator|.
name|newInstance
argument_list|(
name|reader
operator|.
name|getKeyClass
argument_list|()
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|)
decl_stmt|;
name|Holder
argument_list|<
name|Integer
argument_list|>
name|valueSize
init|=
operator|new
name|Holder
argument_list|<>
argument_list|()
decl_stmt|;
name|Writable
name|valueWritable
init|=
operator|(
name|Writable
operator|)
name|ReflectionUtils
operator|.
name|newInstance
argument_list|(
name|reader
operator|.
name|getValueClass
argument_list|()
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|reader
operator|.
name|next
argument_list|(
name|keyWritable
argument_list|,
name|valueWritable
argument_list|)
condition|)
block|{
name|key
operator|.
name|value
operator|=
name|getObject
argument_list|(
name|keyWritable
argument_list|,
name|keySize
argument_list|)
expr_stmt|;
name|value
operator|.
name|value
operator|=
name|getObject
argument_list|(
name|valueWritable
argument_list|,
name|valueSize
argument_list|)
expr_stmt|;
return|return
name|keySize
operator|.
name|value
operator|+
name|valueSize
operator|.
name|value
return|;
block|}
else|else
block|{
return|return
literal|0
return|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
annotation|@
name|Override
specifier|public
name|Closeable
name|createOutputStream
parameter_list|(
name|String
name|hdfsPath
parameter_list|,
name|HdfsConfiguration
name|configuration
parameter_list|)
block|{
try|try
block|{
name|Closeable
name|rout
decl_stmt|;
name|HdfsInfo
name|hdfsInfo
init|=
name|HdfsInfoFactory
operator|.
name|newHdfsInfo
argument_list|(
name|hdfsPath
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|?
extends|extends
name|WritableComparable
argument_list|>
name|keyWritableClass
init|=
name|configuration
operator|.
name|getKeyType
argument_list|()
operator|.
name|getWritableClass
argument_list|()
decl_stmt|;
name|Class
argument_list|<
name|?
extends|extends
name|WritableComparable
argument_list|>
name|valueWritableClass
init|=
name|configuration
operator|.
name|getValueType
argument_list|()
operator|.
name|getWritableClass
argument_list|()
decl_stmt|;
name|rout
operator|=
operator|new
name|BloomMapFile
operator|.
name|Writer
argument_list|(
name|hdfsInfo
operator|.
name|getConf
argument_list|()
argument_list|,
operator|new
name|Path
argument_list|(
name|hdfsPath
argument_list|)
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|MapFile
operator|.
name|Writer
operator|.
name|keyClass
argument_list|(
name|keyWritableClass
argument_list|)
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|MapFile
operator|.
name|Writer
operator|.
name|valueClass
argument_list|(
name|valueWritableClass
argument_list|)
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|MapFile
operator|.
name|Writer
operator|.
name|compression
argument_list|(
name|configuration
operator|.
name|getCompressionType
argument_list|()
argument_list|,
name|configuration
operator|.
name|getCompressionCodec
argument_list|()
operator|.
name|getCodec
argument_list|()
argument_list|)
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|MapFile
operator|.
name|Writer
operator|.
name|progressable
argument_list|(
operator|new
name|Progressable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|progress
parameter_list|()
block|{                             }
block|}
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|rout
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Closeable
name|createInputStream
parameter_list|(
name|String
name|hdfsPath
parameter_list|,
name|HdfsConfiguration
name|configuration
parameter_list|)
block|{
try|try
block|{
name|Closeable
name|rin
decl_stmt|;
name|HdfsInfo
name|hdfsInfo
init|=
name|HdfsInfoFactory
operator|.
name|newHdfsInfo
argument_list|(
name|hdfsPath
argument_list|)
decl_stmt|;
name|rin
operator|=
operator|new
name|BloomMapFile
operator|.
name|Reader
argument_list|(
operator|new
name|Path
argument_list|(
name|hdfsPath
argument_list|)
argument_list|,
name|hdfsInfo
operator|.
name|getConf
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|rin
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
block|}
block|,
DECL|enumConstant|ARRAY_FILE
name|ARRAY_FILE
block|{
annotation|@
name|Override
specifier|public
name|long
name|append
parameter_list|(
name|HdfsOutputStream
name|hdfsostr
parameter_list|,
name|Object
name|key
parameter_list|,
name|Object
name|value
parameter_list|,
name|TypeConverter
name|typeConverter
parameter_list|)
block|{
try|try
block|{
name|Holder
argument_list|<
name|Integer
argument_list|>
name|valueSize
init|=
operator|new
name|Holder
argument_list|<>
argument_list|()
decl_stmt|;
name|Writable
name|valueWritable
init|=
name|getWritable
argument_list|(
name|value
argument_list|,
name|typeConverter
argument_list|,
name|valueSize
argument_list|)
decl_stmt|;
operator|(
operator|(
name|ArrayFile
operator|.
name|Writer
operator|)
name|hdfsostr
operator|.
name|getOut
argument_list|()
operator|)
operator|.
name|append
argument_list|(
name|valueWritable
argument_list|)
expr_stmt|;
return|return
name|valueSize
operator|.
name|value
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|long
name|next
parameter_list|(
name|HdfsInputStream
name|hdfsistr
parameter_list|,
name|Holder
argument_list|<
name|Object
argument_list|>
name|key
parameter_list|,
name|Holder
argument_list|<
name|Object
argument_list|>
name|value
parameter_list|)
block|{
try|try
block|{
name|ArrayFile
operator|.
name|Reader
name|reader
init|=
operator|(
name|ArrayFile
operator|.
name|Reader
operator|)
name|hdfsistr
operator|.
name|getIn
argument_list|()
decl_stmt|;
name|Holder
argument_list|<
name|Integer
argument_list|>
name|valueSize
init|=
operator|new
name|Holder
argument_list|<>
argument_list|()
decl_stmt|;
name|Writable
name|valueWritable
init|=
operator|(
name|Writable
operator|)
name|ReflectionUtils
operator|.
name|newInstance
argument_list|(
name|reader
operator|.
name|getValueClass
argument_list|()
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|reader
operator|.
name|next
argument_list|(
name|valueWritable
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|value
operator|.
name|value
operator|=
name|getObject
argument_list|(
name|valueWritable
argument_list|,
name|valueSize
argument_list|)
expr_stmt|;
return|return
name|valueSize
operator|.
name|value
return|;
block|}
else|else
block|{
return|return
literal|0
return|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
annotation|@
name|Override
specifier|public
name|Closeable
name|createOutputStream
parameter_list|(
name|String
name|hdfsPath
parameter_list|,
name|HdfsConfiguration
name|configuration
parameter_list|)
block|{
try|try
block|{
name|Closeable
name|rout
decl_stmt|;
name|HdfsInfo
name|hdfsInfo
init|=
name|HdfsInfoFactory
operator|.
name|newHdfsInfo
argument_list|(
name|hdfsPath
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|?
extends|extends
name|WritableComparable
argument_list|>
name|valueWritableClass
init|=
name|configuration
operator|.
name|getValueType
argument_list|()
operator|.
name|getWritableClass
argument_list|()
decl_stmt|;
name|rout
operator|=
operator|new
name|ArrayFile
operator|.
name|Writer
argument_list|(
name|hdfsInfo
operator|.
name|getConf
argument_list|()
argument_list|,
name|hdfsInfo
operator|.
name|getFileSystem
argument_list|()
argument_list|,
name|hdfsPath
argument_list|,
name|valueWritableClass
argument_list|,
name|configuration
operator|.
name|getCompressionType
argument_list|()
argument_list|,
operator|new
name|Progressable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|progress
parameter_list|()
block|{                             }
block|}
argument_list|)
expr_stmt|;
return|return
name|rout
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Closeable
name|createInputStream
parameter_list|(
name|String
name|hdfsPath
parameter_list|,
name|HdfsConfiguration
name|configuration
parameter_list|)
block|{
try|try
block|{
name|Closeable
name|rin
decl_stmt|;
name|HdfsInfo
name|hdfsInfo
init|=
name|HdfsInfoFactory
operator|.
name|newHdfsInfo
argument_list|(
name|hdfsPath
argument_list|)
decl_stmt|;
name|rin
operator|=
operator|new
name|ArrayFile
operator|.
name|Reader
argument_list|(
name|hdfsInfo
operator|.
name|getFileSystem
argument_list|()
argument_list|,
name|hdfsPath
argument_list|,
name|hdfsInfo
operator|.
name|getConf
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|rin
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
block|}
block|;
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"rawtypes"
block|}
argument_list|)
DECL|class|WritableCache
specifier|private
specifier|static
specifier|final
class|class
name|WritableCache
block|{
DECL|field|writables
specifier|private
specifier|static
name|Map
argument_list|<
name|Class
argument_list|,
name|HdfsWritableFactories
operator|.
name|HdfsWritableFactory
argument_list|>
name|writables
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|readables
specifier|private
specifier|static
name|Map
argument_list|<
name|Class
argument_list|,
name|HdfsWritableFactories
operator|.
name|HdfsWritableFactory
argument_list|>
name|readables
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|WritableCache ()
specifier|private
name|WritableCache
parameter_list|()
block|{         }
static|static
block|{
name|writables
operator|.
name|put
argument_list|(
name|Boolean
operator|.
name|class
argument_list|,
operator|new
name|HdfsWritableFactories
operator|.
name|HdfsBooleanWritableFactory
argument_list|()
argument_list|)
expr_stmt|;
name|writables
operator|.
name|put
argument_list|(
name|Byte
operator|.
name|class
argument_list|,
operator|new
name|HdfsWritableFactories
operator|.
name|HdfsByteWritableFactory
argument_list|()
argument_list|)
expr_stmt|;
name|writables
operator|.
name|put
argument_list|(
name|ByteBuffer
operator|.
name|class
argument_list|,
operator|new
name|HdfsWritableFactories
operator|.
name|HdfsBytesWritableFactory
argument_list|()
argument_list|)
expr_stmt|;
name|writables
operator|.
name|put
argument_list|(
name|Double
operator|.
name|class
argument_list|,
operator|new
name|HdfsWritableFactories
operator|.
name|HdfsDoubleWritableFactory
argument_list|()
argument_list|)
expr_stmt|;
name|writables
operator|.
name|put
argument_list|(
name|Float
operator|.
name|class
argument_list|,
operator|new
name|HdfsWritableFactories
operator|.
name|HdfsFloatWritableFactory
argument_list|()
argument_list|)
expr_stmt|;
name|writables
operator|.
name|put
argument_list|(
name|Integer
operator|.
name|class
argument_list|,
operator|new
name|HdfsWritableFactories
operator|.
name|HdfsIntWritableFactory
argument_list|()
argument_list|)
expr_stmt|;
name|writables
operator|.
name|put
argument_list|(
name|Long
operator|.
name|class
argument_list|,
operator|new
name|HdfsWritableFactories
operator|.
name|HdfsLongWritableFactory
argument_list|()
argument_list|)
expr_stmt|;
name|writables
operator|.
name|put
argument_list|(
name|String
operator|.
name|class
argument_list|,
operator|new
name|HdfsWritableFactories
operator|.
name|HdfsTextWritableFactory
argument_list|()
argument_list|)
expr_stmt|;
name|writables
operator|.
name|put
argument_list|(
literal|null
argument_list|,
operator|new
name|HdfsWritableFactories
operator|.
name|HdfsNullWritableFactory
argument_list|()
argument_list|)
expr_stmt|;
block|}
static|static
block|{
name|readables
operator|.
name|put
argument_list|(
name|BooleanWritable
operator|.
name|class
argument_list|,
operator|new
name|HdfsWritableFactories
operator|.
name|HdfsBooleanWritableFactory
argument_list|()
argument_list|)
expr_stmt|;
name|readables
operator|.
name|put
argument_list|(
name|ByteWritable
operator|.
name|class
argument_list|,
operator|new
name|HdfsWritableFactories
operator|.
name|HdfsByteWritableFactory
argument_list|()
argument_list|)
expr_stmt|;
name|readables
operator|.
name|put
argument_list|(
name|BytesWritable
operator|.
name|class
argument_list|,
operator|new
name|HdfsWritableFactories
operator|.
name|HdfsBytesWritableFactory
argument_list|()
argument_list|)
expr_stmt|;
name|readables
operator|.
name|put
argument_list|(
name|DoubleWritable
operator|.
name|class
argument_list|,
operator|new
name|HdfsWritableFactories
operator|.
name|HdfsDoubleWritableFactory
argument_list|()
argument_list|)
expr_stmt|;
name|readables
operator|.
name|put
argument_list|(
name|FloatWritable
operator|.
name|class
argument_list|,
operator|new
name|HdfsWritableFactories
operator|.
name|HdfsFloatWritableFactory
argument_list|()
argument_list|)
expr_stmt|;
name|readables
operator|.
name|put
argument_list|(
name|IntWritable
operator|.
name|class
argument_list|,
operator|new
name|HdfsWritableFactories
operator|.
name|HdfsIntWritableFactory
argument_list|()
argument_list|)
expr_stmt|;
name|readables
operator|.
name|put
argument_list|(
name|LongWritable
operator|.
name|class
argument_list|,
operator|new
name|HdfsWritableFactories
operator|.
name|HdfsLongWritableFactory
argument_list|()
argument_list|)
expr_stmt|;
name|readables
operator|.
name|put
argument_list|(
name|Text
operator|.
name|class
argument_list|,
operator|new
name|HdfsWritableFactories
operator|.
name|HdfsTextWritableFactory
argument_list|()
argument_list|)
expr_stmt|;
name|readables
operator|.
name|put
argument_list|(
name|NullWritable
operator|.
name|class
argument_list|,
operator|new
name|HdfsWritableFactories
operator|.
name|HdfsNullWritableFactory
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getWritable (Object obj, TypeConverter typeConverter, Holder<Integer> size)
specifier|private
specifier|static
name|Writable
name|getWritable
parameter_list|(
name|Object
name|obj
parameter_list|,
name|TypeConverter
name|typeConverter
parameter_list|,
name|Holder
argument_list|<
name|Integer
argument_list|>
name|size
parameter_list|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|objCls
init|=
name|obj
operator|==
literal|null
condition|?
literal|null
else|:
name|obj
operator|.
name|getClass
argument_list|()
decl_stmt|;
name|HdfsWritableFactories
operator|.
name|HdfsWritableFactory
name|objWritableFactory
init|=
name|WritableCache
operator|.
name|writables
operator|.
name|get
argument_list|(
name|objCls
argument_list|)
decl_stmt|;
if|if
condition|(
name|objWritableFactory
operator|==
literal|null
condition|)
block|{
name|objWritableFactory
operator|=
operator|new
name|HdfsWritableFactories
operator|.
name|HdfsObjectWritableFactory
argument_list|()
expr_stmt|;
block|}
return|return
name|objWritableFactory
operator|.
name|create
argument_list|(
name|obj
argument_list|,
name|typeConverter
argument_list|,
name|size
argument_list|)
return|;
block|}
DECL|method|getObject (Writable writable, Holder<Integer> size)
specifier|private
specifier|static
name|Object
name|getObject
parameter_list|(
name|Writable
name|writable
parameter_list|,
name|Holder
argument_list|<
name|Integer
argument_list|>
name|size
parameter_list|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|writableClass
init|=
name|NullWritable
operator|.
name|class
decl_stmt|;
if|if
condition|(
name|writable
operator|!=
literal|null
condition|)
block|{
name|writableClass
operator|=
name|writable
operator|.
name|getClass
argument_list|()
expr_stmt|;
block|}
name|HdfsWritableFactories
operator|.
name|HdfsWritableFactory
name|writableObjectFactory
init|=
name|WritableCache
operator|.
name|readables
operator|.
name|get
argument_list|(
name|writableClass
argument_list|)
decl_stmt|;
return|return
name|writableObjectFactory
operator|.
name|read
argument_list|(
name|writable
argument_list|,
name|size
argument_list|)
return|;
block|}
DECL|method|append (HdfsOutputStream hdfsostr, Object key, Object value, TypeConverter typeConverter)
specifier|public
specifier|abstract
name|long
name|append
parameter_list|(
name|HdfsOutputStream
name|hdfsostr
parameter_list|,
name|Object
name|key
parameter_list|,
name|Object
name|value
parameter_list|,
name|TypeConverter
name|typeConverter
parameter_list|)
function_decl|;
DECL|method|next (HdfsInputStream hdfsistr, Holder<Object> key, Holder<Object> value)
specifier|public
specifier|abstract
name|long
name|next
parameter_list|(
name|HdfsInputStream
name|hdfsistr
parameter_list|,
name|Holder
argument_list|<
name|Object
argument_list|>
name|key
parameter_list|,
name|Holder
argument_list|<
name|Object
argument_list|>
name|value
parameter_list|)
function_decl|;
DECL|method|createOutputStream (String hdfsPath, HdfsConfiguration configuration)
specifier|public
specifier|abstract
name|Closeable
name|createOutputStream
parameter_list|(
name|String
name|hdfsPath
parameter_list|,
name|HdfsConfiguration
name|configuration
parameter_list|)
function_decl|;
DECL|method|createInputStream (String hdfsPath, HdfsConfiguration configuration)
specifier|public
specifier|abstract
name|Closeable
name|createInputStream
parameter_list|(
name|String
name|hdfsPath
parameter_list|,
name|HdfsConfiguration
name|configuration
parameter_list|)
function_decl|;
DECL|method|copyBytes (InputStream in, OutputStream out, int buffSize, boolean close)
specifier|public
specifier|static
name|long
name|copyBytes
parameter_list|(
name|InputStream
name|in
parameter_list|,
name|OutputStream
name|out
parameter_list|,
name|int
name|buffSize
parameter_list|,
name|boolean
name|close
parameter_list|)
throws|throws
name|IOException
block|{
name|long
name|numBytes
init|=
literal|0
decl_stmt|;
name|PrintStream
name|ps
init|=
name|out
operator|instanceof
name|PrintStream
condition|?
operator|(
name|PrintStream
operator|)
name|out
else|:
literal|null
decl_stmt|;
name|byte
name|buf
index|[]
init|=
operator|new
name|byte
index|[
name|buffSize
index|]
decl_stmt|;
try|try
block|{
name|int
name|bytesRead
init|=
name|in
operator|.
name|read
argument_list|(
name|buf
argument_list|)
decl_stmt|;
while|while
condition|(
name|bytesRead
operator|>=
literal|0
condition|)
block|{
name|out
operator|.
name|write
argument_list|(
name|buf
argument_list|,
literal|0
argument_list|,
name|bytesRead
argument_list|)
expr_stmt|;
name|numBytes
operator|+=
name|bytesRead
expr_stmt|;
if|if
condition|(
operator|(
name|ps
operator|!=
literal|null
operator|)
operator|&&
name|ps
operator|.
name|checkError
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Unable to write to output stream."
argument_list|)
throw|;
block|}
name|bytesRead
operator|=
name|in
operator|.
name|read
argument_list|(
name|buf
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
if|if
condition|(
name|close
condition|)
block|{
name|IOHelper
operator|.
name|close
argument_list|(
name|out
argument_list|,
name|in
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|numBytes
return|;
block|}
block|}
end_enum

end_unit

