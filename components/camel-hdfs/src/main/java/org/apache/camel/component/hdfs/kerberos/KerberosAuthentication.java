begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.hdfs.kerberos
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hdfs
operator|.
name|kerberos
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|lang
operator|.
name|String
operator|.
name|format
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_class
DECL|class|KerberosAuthentication
specifier|public
class|class
name|KerberosAuthentication
block|{
DECL|field|username
specifier|private
specifier|final
name|String
name|username
decl_stmt|;
DECL|field|keyTabFileLocation
specifier|private
specifier|final
name|String
name|keyTabFileLocation
decl_stmt|;
DECL|field|configuration
specifier|private
specifier|final
name|Configuration
name|configuration
decl_stmt|;
comment|/**      * @param configuration      - hdfs configuration      * @param username           - Principal used to authenticate to the kerberos server      * @param keyTabFileLocation - keyTab file location      */
DECL|method|KerberosAuthentication (Configuration configuration, String username, String keyTabFileLocation)
specifier|public
name|KerberosAuthentication
parameter_list|(
name|Configuration
name|configuration
parameter_list|,
name|String
name|username
parameter_list|,
name|String
name|keyTabFileLocation
parameter_list|)
block|{
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
name|this
operator|.
name|username
operator|=
name|username
expr_stmt|;
name|this
operator|.
name|keyTabFileLocation
operator|=
name|keyTabFileLocation
expr_stmt|;
block|}
comment|/**      * In order to connect to a hadoop cluster using Kerberos you need to add your own filesystem to the cache of the FileSystem component.      * This is done by setting the uri that you use in your camel route as the URI that is used to setup the connection.      * The URI is used as key when adding it to the cache (default functionality of the static FileSystem.get(URI, Configuration) method).      *      * @throws IOException - In case of error      */
DECL|method|loginWithKeytab ()
specifier|public
name|void
name|loginWithKeytab
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
operator|new
name|File
argument_list|(
name|keyTabFileLocation
argument_list|)
operator|.
name|exists
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|FileNotFoundException
argument_list|(
name|format
argument_list|(
literal|"KeyTab file [%s] could not be found."
argument_list|,
name|keyTabFileLocation
argument_list|)
argument_list|)
throw|;
block|}
comment|// we need to log in otherwise you cannot connect to the filesystem later on
name|UserGroupInformation
operator|.
name|setConfiguration
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|UserGroupInformation
operator|.
name|loginUserFromKeytab
argument_list|(
name|username
argument_list|,
name|keyTabFileLocation
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

