begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.hdfs
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hdfs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|notNullValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_class
DECL|class|HaConfigurationBuilderTest
specifier|public
class|class
name|HaConfigurationBuilderTest
block|{
annotation|@
name|Test
DECL|method|withClusterConfiguration ()
specifier|public
name|void
name|withClusterConfiguration
parameter_list|()
block|{
comment|// given
name|Configuration
name|configuration
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|String
name|haClusterName
init|=
literal|"haCluster"
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|namedNodes
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"kerb_node_01.example.com:8021"
argument_list|,
literal|"kerb_node_02.example.com:8022"
argument_list|)
decl_stmt|;
name|int
name|replicationFactor
init|=
literal|3
decl_stmt|;
comment|// when
name|HaConfigurationBuilder
operator|.
name|withClusterConfiguration
argument_list|(
name|configuration
argument_list|,
name|haClusterName
argument_list|,
name|namedNodes
argument_list|,
name|replicationFactor
argument_list|)
expr_stmt|;
comment|// then
name|assertThat
argument_list|(
name|configuration
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|get
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_REPLICATION_KEY
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|get
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_NAMESERVICES
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"haCluster"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|get
argument_list|(
literal|"dfs.ha.namenodes.haCluster"
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"kerb_node_01_example_com,kerb_node_02_example_com"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|get
argument_list|(
literal|"dfs.namenode.rpc-address.haCluster.kerb_node_01_example_com"
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"kerb_node_01.example.com:8021"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|get
argument_list|(
literal|"dfs.namenode.rpc-address.haCluster.kerb_node_02_example_com"
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"kerb_node_02.example.com:8022"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|get
argument_list|(
literal|"dfs.client.failover.proxy.provider.haCluster"
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|get
argument_list|(
literal|"fs.defaultFS"
argument_list|)
argument_list|,
name|is
argument_list|(
literal|"hdfs://haCluster"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getSanitizedClusterNameWithNull ()
specifier|public
name|void
name|getSanitizedClusterNameWithNull
parameter_list|()
block|{
comment|// given
name|String
name|haClusterName
init|=
literal|null
decl_stmt|;
comment|// when
name|String
name|actual
init|=
name|HaConfigurationBuilder
operator|.
name|getSanitizedClusterName
argument_list|(
name|haClusterName
argument_list|)
decl_stmt|;
comment|// then
name|assertThat
argument_list|(
name|actual
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|actual
argument_list|,
name|is
argument_list|(
literal|"hfdsNamedService"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getSanitizedClusterNameWithHostName ()
specifier|public
name|void
name|getSanitizedClusterNameWithHostName
parameter_list|()
block|{
comment|// given
name|String
name|haClusterName
init|=
literal|"this.is.a.cluster.host"
decl_stmt|;
comment|// when
name|String
name|actual
init|=
name|HaConfigurationBuilder
operator|.
name|getSanitizedClusterName
argument_list|(
name|haClusterName
argument_list|)
decl_stmt|;
comment|// then
name|assertThat
argument_list|(
name|actual
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|actual
argument_list|,
name|is
argument_list|(
literal|"this_is_a_cluster_host"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

