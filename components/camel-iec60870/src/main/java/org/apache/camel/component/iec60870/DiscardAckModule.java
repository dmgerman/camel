begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.iec60870
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|iec60870
package|;
end_package

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|channel
operator|.
name|socket
operator|.
name|SocketChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|neoscada
operator|.
name|protocol
operator|.
name|iec60870
operator|.
name|apci
operator|.
name|MessageChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|neoscada
operator|.
name|protocol
operator|.
name|iec60870
operator|.
name|asdu
operator|.
name|MessageManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|neoscada
operator|.
name|protocol
operator|.
name|iec60870
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|neoscada
operator|.
name|protocol
operator|.
name|iec60870
operator|.
name|client
operator|.
name|ClientModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|neoscada
operator|.
name|protocol
operator|.
name|iec60870
operator|.
name|server
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|neoscada
operator|.
name|protocol
operator|.
name|iec60870
operator|.
name|server
operator|.
name|ServerModule
import|;
end_import

begin_class
DECL|class|DiscardAckModule
specifier|public
class|class
name|DiscardAckModule
implements|implements
name|ClientModule
implements|,
name|ServerModule
block|{
annotation|@
name|Override
DECL|method|initializeChannel (final SocketChannel channel, final MessageChannel messageChannel)
specifier|public
name|void
name|initializeChannel
parameter_list|(
specifier|final
name|SocketChannel
name|channel
parameter_list|,
specifier|final
name|MessageChannel
name|messageChannel
parameter_list|)
block|{
name|channel
operator|.
name|pipeline
argument_list|()
operator|.
name|addLast
argument_list|(
operator|new
name|DiscardAckChannelHandler
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|dispose ()
specifier|public
name|void
name|dispose
parameter_list|()
block|{     }
annotation|@
name|Override
DECL|method|initializeClient (final Client client, final MessageManager manager)
specifier|public
name|void
name|initializeClient
parameter_list|(
specifier|final
name|Client
name|client
parameter_list|,
specifier|final
name|MessageManager
name|manager
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|initializeServer (final Server server, final MessageManager manager)
specifier|public
name|void
name|initializeServer
parameter_list|(
specifier|final
name|Server
name|server
parameter_list|,
specifier|final
name|MessageManager
name|manager
parameter_list|)
block|{     }
block|}
end_class

end_unit

