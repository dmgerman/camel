begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.dns.cloud
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|dns
operator|.
name|cloud
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|cloud
operator|.
name|ServiceDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|dns
operator|.
name|DnsConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_class
DECL|class|DnsServiceDiscoveryTest
specifier|public
class|class
name|DnsServiceDiscoveryTest
block|{
annotation|@
name|Test
DECL|method|testServiceDiscovery ()
specifier|public
name|void
name|testServiceDiscovery
parameter_list|()
throws|throws
name|Exception
block|{
name|DnsConfiguration
name|configuration
init|=
operator|new
name|DnsConfiguration
argument_list|()
decl_stmt|;
name|DnsServiceDiscovery
name|discovery
init|=
operator|new
name|DnsServiceDiscovery
argument_list|(
name|configuration
argument_list|)
decl_stmt|;
name|configuration
operator|.
name|setDomain
argument_list|(
literal|"gmail.com"
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setProto
argument_list|(
literal|"_tcp"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ServiceDefinition
argument_list|>
name|services
init|=
name|discovery
operator|.
name|getServices
argument_list|(
literal|"_xmpp-server"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|services
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|services
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|ServiceDefinition
name|service
range|:
name|services
control|)
block|{
name|assertFalse
argument_list|(
name|service
operator|.
name|getMetadata
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|service
operator|.
name|getMetadata
argument_list|()
operator|.
name|get
argument_list|(
literal|"priority"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|service
operator|.
name|getMetadata
argument_list|()
operator|.
name|get
argument_list|(
literal|"weight"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

