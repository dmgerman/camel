begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *   */
end_comment

begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.dns.types
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|dns
operator|.
name|types
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xbill
operator|.
name|DNS
operator|.
name|DClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xbill
operator|.
name|DNS
operator|.
name|ExtendedResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xbill
operator|.
name|DNS
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xbill
operator|.
name|DNS
operator|.
name|Name
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xbill
operator|.
name|DNS
operator|.
name|Record
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xbill
operator|.
name|DNS
operator|.
name|Resolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xbill
operator|.
name|DNS
operator|.
name|ReverseMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xbill
operator|.
name|DNS
operator|.
name|Section
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xbill
operator|.
name|DNS
operator|.
name|Type
import|;
end_import

begin_comment
comment|/**  *   * More converters for all the DNS objects used by the DNS component.  *  */
end_comment

begin_class
DECL|class|DNSRecordConverter
specifier|public
class|class
name|DNSRecordConverter
block|{
comment|/**      * @param ip, like "192.168.1.1"      * @return the complete DNS record for that IP.      * @throws IOException      */
DECL|method|convert (String ip)
specifier|public
name|Record
name|convert
parameter_list|(
name|String
name|ip
parameter_list|)
throws|throws
name|IOException
block|{
name|Resolver
name|res
init|=
operator|new
name|ExtendedResolver
argument_list|()
decl_stmt|;
name|Name
name|name
init|=
name|ReverseMap
operator|.
name|fromAddress
argument_list|(
name|ip
argument_list|)
decl_stmt|;
name|int
name|type
init|=
name|Type
operator|.
name|PTR
decl_stmt|;
name|int
name|dclass
init|=
name|DClass
operator|.
name|IN
decl_stmt|;
name|Record
name|rec
init|=
name|Record
operator|.
name|newRecord
argument_list|(
name|name
argument_list|,
name|type
argument_list|,
name|dclass
argument_list|)
decl_stmt|;
name|Message
name|query
init|=
name|Message
operator|.
name|newQuery
argument_list|(
name|rec
argument_list|)
decl_stmt|;
name|Message
name|response
init|=
name|res
operator|.
name|send
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|Record
index|[]
name|answers
init|=
name|response
operator|.
name|getSectionArray
argument_list|(
name|Section
operator|.
name|ANSWER
argument_list|)
decl_stmt|;
if|if
condition|(
name|answers
operator|.
name|length
operator|==
literal|0
condition|)
return|return
literal|null
return|;
else|else
return|return
name|answers
index|[
literal|0
index|]
return|;
block|}
block|}
end_class

end_unit

