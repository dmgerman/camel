begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.dns.types
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|dns
operator|.
name|types
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|UnknownHostException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Converter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xbill
operator|.
name|DNS
operator|.
name|Address
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xbill
operator|.
name|DNS
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xbill
operator|.
name|DNS
operator|.
name|Record
import|;
end_import

begin_comment
comment|/**  * A converter for all the DNS objects used by the DNS component.  */
end_comment

begin_class
annotation|@
name|Converter
argument_list|(
name|loader
operator|=
literal|true
argument_list|)
DECL|class|DnsConverter
specifier|public
specifier|final
class|class
name|DnsConverter
block|{
DECL|method|DnsConverter ()
specifier|private
name|DnsConverter
parameter_list|()
block|{     }
annotation|@
name|Converter
DECL|method|toString (Record record)
specifier|public
specifier|static
name|String
name|toString
parameter_list|(
name|Record
name|record
parameter_list|)
block|{
return|return
name|record
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|Converter
DECL|method|toList (Record[] records)
specifier|public
specifier|static
name|List
argument_list|<
name|String
argument_list|>
name|toList
parameter_list|(
name|Record
index|[]
name|records
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Record
name|rec
range|:
name|records
control|)
block|{
name|list
operator|.
name|add
argument_list|(
name|toString
argument_list|(
name|rec
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|list
return|;
block|}
annotation|@
name|Converter
DECL|method|toString (Message message)
specifier|public
specifier|static
name|String
name|toString
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
return|return
name|message
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|Converter
DECL|method|toString (Address address)
specifier|public
specifier|static
name|String
name|toString
parameter_list|(
name|Address
name|address
parameter_list|)
block|{
return|return
name|address
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|Converter
DECL|method|toString (InetAddress address)
specifier|public
specifier|static
name|String
name|toString
parameter_list|(
name|InetAddress
name|address
parameter_list|)
block|{
return|return
name|address
operator|.
name|getHostAddress
argument_list|()
return|;
block|}
annotation|@
name|Converter
DECL|method|toInetAddress (String domain)
specifier|public
specifier|static
name|InetAddress
name|toInetAddress
parameter_list|(
name|String
name|domain
parameter_list|)
throws|throws
name|UnknownHostException
block|{
return|return
name|Address
operator|.
name|getByName
argument_list|(
name|domain
argument_list|)
return|;
block|}
block|}
end_class

end_unit

