begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.dns.processor.remote
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|dns
operator|.
name|processor
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Function
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RuntimeCamelException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|dns
operator|.
name|DnsConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xbill
operator|.
name|DNS
operator|.
name|Lookup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xbill
operator|.
name|DNS
operator|.
name|TextParseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xbill
operator|.
name|DNS
operator|.
name|Type
import|;
end_import

begin_class
DECL|class|DnsServiceLookupFactory
specifier|public
class|class
name|DnsServiceLookupFactory
implements|implements
name|Function
argument_list|<
name|String
argument_list|,
name|Lookup
argument_list|>
block|{
DECL|field|configuration
specifier|private
specifier|final
name|DnsConfiguration
name|configuration
decl_stmt|;
DECL|field|cache
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Lookup
argument_list|>
name|cache
decl_stmt|;
DECL|method|DnsServiceLookupFactory (DnsConfiguration configuration)
specifier|public
name|DnsServiceLookupFactory
parameter_list|(
name|DnsConfiguration
name|configuration
parameter_list|)
block|{
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
name|cache
operator|=
operator|new
name|ConcurrentHashMap
argument_list|<>
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|apply (String name)
specifier|public
name|Lookup
name|apply
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|Lookup
name|lookup
init|=
name|cache
operator|.
name|get
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|lookup
operator|==
literal|null
condition|)
block|{
synchronized|synchronized
init|(
name|cache
init|)
block|{
name|lookup
operator|=
name|cache
operator|.
name|computeIfAbsent
argument_list|(
name|name
argument_list|,
name|this
operator|::
name|createLookup
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|lookup
return|;
block|}
DECL|method|createLookup (String name)
specifier|private
name|Lookup
name|createLookup
parameter_list|(
name|String
name|name
parameter_list|)
block|{
try|try
block|{
return|return
operator|new
name|Lookup
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"%s.%s.%s"
argument_list|,
name|name
argument_list|,
name|configuration
operator|.
name|getProto
argument_list|()
argument_list|,
name|configuration
operator|.
name|getDomain
argument_list|()
argument_list|)
argument_list|,
name|Type
operator|.
name|SRV
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|TextParseException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

