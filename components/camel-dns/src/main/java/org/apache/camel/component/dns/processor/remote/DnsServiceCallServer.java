begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.dns.processor.remote
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|dns
operator|.
name|processor
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|remote
operator|.
name|DefaultServiceCallServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xbill
operator|.
name|DNS
operator|.
name|SRVRecord
import|;
end_import

begin_class
DECL|class|DnsServiceCallServer
specifier|public
class|class
name|DnsServiceCallServer
extends|extends
name|DefaultServiceCallServer
block|{
DECL|field|COMPARATOR
specifier|public
specifier|static
specifier|final
name|Comparator
argument_list|<
name|SRVRecord
argument_list|>
name|COMPARATOR
init|=
name|comparator
argument_list|()
decl_stmt|;
DECL|method|DnsServiceCallServer (SRVRecord record)
specifier|public
name|DnsServiceCallServer
parameter_list|(
name|SRVRecord
name|record
parameter_list|)
block|{
name|super
argument_list|(
name|record
operator|.
name|getTarget
argument_list|()
operator|.
name|toString
argument_list|(
literal|true
argument_list|)
argument_list|,
name|record
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|comparator ()
specifier|public
specifier|static
name|Comparator
argument_list|<
name|SRVRecord
argument_list|>
name|comparator
parameter_list|()
block|{
name|Comparator
argument_list|<
name|SRVRecord
argument_list|>
name|byPriority
init|=
parameter_list|(
name|e1
parameter_list|,
name|e2
parameter_list|)
lambda|->
name|Integer
operator|.
name|compare
argument_list|(
name|e2
operator|.
name|getPriority
argument_list|()
argument_list|,
name|e1
operator|.
name|getPriority
argument_list|()
argument_list|)
decl_stmt|;
name|Comparator
argument_list|<
name|SRVRecord
argument_list|>
name|byWeight
init|=
parameter_list|(
name|e1
parameter_list|,
name|e2
parameter_list|)
lambda|->
name|Integer
operator|.
name|compare
argument_list|(
name|e2
operator|.
name|getWeight
argument_list|()
argument_list|,
name|e1
operator|.
name|getWeight
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|byPriority
operator|.
name|thenComparing
argument_list|(
name|byWeight
argument_list|)
return|;
block|}
block|}
end_class

end_unit

