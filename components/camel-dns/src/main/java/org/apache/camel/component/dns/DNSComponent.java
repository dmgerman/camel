begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.dns
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|dns
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultComponent
import|;
end_import

begin_comment
comment|/**  *   *         The DNS components creates endpoints of the form:<br/>  *         dns:///...<br/>  *         At this point, the DNS component works with these operations:<br/>  *<p>  *         dns:///ip<br/>  *   *         This will return the IP address associated with the domain passed in  *         the header dns.domain.  *</p>  *<p>  *         dns:///lookup This endpoint accepts three parameters.  *<ul>  *<li>dns.name: the lookup name. Usually the domain. Mandatory.</li>  *<li>dns.type: the type of the lookup. Should match the values of  *         {@see org.xbill.dns.Type}. Optional.</li>  *<li>dns.class: the DNS class of the lookup. Should match the values  *         of {@see org.xbill.dns.DClass}. Optional.</li>  *</ul>  *</p>  *   *<p>  *         dns:///dig This endpoint takes a few parameters, most of them  *         optional :  *<ul>  *<li>dns.server: the server in particular for the query. If none is  *         given, the default one specified by the OS will be used.</li>  *<li>dns.query: the query itself. Mandatory.</li>  *<li>dns.type: the type of the lookup. Should match the values of  *         {@see org.xbill.dns.Type}. Optional.</li>  *<li>dns.class: the DNS class of the lookup. Should match the values  *         of {@see org.xbill.dns.DClass}. Optional.</li>  *</ul>  *   *</p>  *           *<p>  *         dns:///wikipedia This endpoint takes one paramter :  *<ul>  *<li>term: the search term on wikipedia</li>  *</ul>  *   *</p>  *   */
end_comment

begin_class
DECL|class|DNSComponent
specifier|public
class|class
name|DNSComponent
extends|extends
name|DefaultComponent
block|{
DECL|field|OPERATION_IP
specifier|private
specifier|static
specifier|final
name|String
name|OPERATION_IP
init|=
literal|"ip"
decl_stmt|;
DECL|field|OPERATION_LOOKUP
specifier|private
specifier|static
specifier|final
name|String
name|OPERATION_LOOKUP
init|=
literal|"lookup"
decl_stmt|;
DECL|field|OPERATION_DIG
specifier|private
specifier|static
specifier|final
name|String
name|OPERATION_DIG
init|=
literal|"dig"
decl_stmt|;
DECL|field|OPERATION_WIKIPEDIA
specifier|private
specifier|static
specifier|final
name|String
name|OPERATION_WIKIPEDIA
init|=
literal|"wikipedia"
decl_stmt|;
DECL|method|createEndpoint (String uri, String remaining, Map<String, Object> parameters)
specifier|protected
name|Endpoint
name|createEndpoint
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|remaining
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|parameters
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|OPERATION_IP
operator|.
name|equals
argument_list|(
name|remaining
argument_list|)
condition|)
block|{
return|return
operator|new
name|DNSIPEndpoint
argument_list|(
name|getCamelContext
argument_list|()
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|OPERATION_LOOKUP
operator|.
name|equals
argument_list|(
name|remaining
argument_list|)
condition|)
block|{
return|return
operator|new
name|DNSLookupEndpoint
argument_list|(
name|getCamelContext
argument_list|()
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|OPERATION_DIG
operator|.
name|equals
argument_list|(
name|remaining
argument_list|)
condition|)
block|{
return|return
operator|new
name|DNSDigEndpoint
argument_list|(
name|getCamelContext
argument_list|()
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|OPERATION_WIKIPEDIA
operator|.
name|equals
argument_list|(
name|remaining
argument_list|)
condition|)
block|{
return|return
operator|new
name|WikipediaEndpoint
argument_list|(
name|getCamelContext
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|uri
operator|+
literal|"is unsupported by the DNS component"
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

