begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.github.services
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|github
operator|.
name|services
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|egit
operator|.
name|github
operator|.
name|core
operator|.
name|CommitComment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|egit
operator|.
name|github
operator|.
name|core
operator|.
name|CommitFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|egit
operator|.
name|github
operator|.
name|core
operator|.
name|IRepositoryIdProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|egit
operator|.
name|github
operator|.
name|core
operator|.
name|PullRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|egit
operator|.
name|github
operator|.
name|core
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|egit
operator|.
name|github
operator|.
name|core
operator|.
name|service
operator|.
name|PullRequestService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|MockPullRequestService
specifier|public
class|class
name|MockPullRequestService
extends|extends
name|PullRequestService
block|{
DECL|field|LOG
specifier|protected
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MockPullRequestService
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|pullRequests
specifier|private
name|Map
argument_list|<
name|Long
argument_list|,
name|PullRequest
argument_list|>
name|pullRequests
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|emptyComments
specifier|private
name|List
argument_list|<
name|CommitComment
argument_list|>
name|emptyComments
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|pullRequestNumber
specifier|private
name|AtomicInteger
name|pullRequestNumber
init|=
operator|new
name|AtomicInteger
argument_list|(
literal|101
argument_list|)
decl_stmt|;
DECL|field|commentId
specifier|private
name|AtomicInteger
name|commentId
init|=
operator|new
name|AtomicInteger
argument_list|(
literal|500
argument_list|)
decl_stmt|;
DECL|field|allComments
specifier|private
name|Map
argument_list|<
name|Long
argument_list|,
name|List
argument_list|<
name|CommitComment
argument_list|>
argument_list|>
name|allComments
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|files
specifier|private
name|Map
argument_list|<
name|Integer
argument_list|,
name|List
argument_list|<
name|CommitFile
argument_list|>
argument_list|>
name|files
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|getComments (IRepositoryIdProvider repository, int pullRequestId)
specifier|public
name|List
argument_list|<
name|CommitComment
argument_list|>
name|getComments
parameter_list|(
name|IRepositoryIdProvider
name|repository
parameter_list|,
name|int
name|pullRequestId
parameter_list|)
block|{
name|Long
name|id
init|=
operator|new
name|Long
argument_list|(
name|pullRequestId
argument_list|)
decl_stmt|;
if|if
condition|(
name|allComments
operator|.
name|containsKey
argument_list|(
name|id
argument_list|)
condition|)
block|{
name|List
argument_list|<
name|CommitComment
argument_list|>
name|comments
init|=
name|allComments
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
return|return
name|comments
return|;
block|}
else|else
block|{
return|return
name|emptyComments
return|;
block|}
block|}
DECL|method|createAuthor ()
specifier|private
name|User
name|createAuthor
parameter_list|()
block|{
name|User
name|author
init|=
operator|new
name|User
argument_list|()
decl_stmt|;
name|author
operator|.
name|setEmail
argument_list|(
literal|"someguy@gmail.com"
argument_list|)
expr_stmt|;
name|author
operator|.
name|setHtmlUrl
argument_list|(
literal|"http://github/someguy"
argument_list|)
expr_stmt|;
name|author
operator|.
name|setLogin
argument_list|(
literal|"someguy"
argument_list|)
expr_stmt|;
return|return
name|author
return|;
block|}
DECL|method|addComment (Long pullRequestId, String bodyText)
specifier|public
name|CommitComment
name|addComment
parameter_list|(
name|Long
name|pullRequestId
parameter_list|,
name|String
name|bodyText
parameter_list|)
block|{
name|CommitComment
name|commitComment
init|=
operator|new
name|CommitComment
argument_list|()
decl_stmt|;
name|User
name|author
init|=
name|createAuthor
argument_list|()
decl_stmt|;
name|commitComment
operator|.
name|setUser
argument_list|(
name|author
argument_list|)
expr_stmt|;
name|commitComment
operator|.
name|setCommitId
argument_list|(
literal|""
operator|+
name|pullRequestId
argument_list|)
expr_stmt|;
name|commitComment
operator|.
name|setId
argument_list|(
name|commentId
operator|.
name|getAndIncrement
argument_list|()
argument_list|)
expr_stmt|;
name|commitComment
operator|.
name|setBody
argument_list|(
name|bodyText
argument_list|)
expr_stmt|;
name|commitComment
operator|.
name|setBodyText
argument_list|(
name|bodyText
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|CommitComment
argument_list|>
name|comments
decl_stmt|;
if|if
condition|(
name|allComments
operator|.
name|containsKey
argument_list|(
name|pullRequestId
argument_list|)
condition|)
block|{
name|comments
operator|=
name|allComments
operator|.
name|get
argument_list|(
name|pullRequestId
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|comments
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
name|comments
operator|.
name|add
argument_list|(
name|commitComment
argument_list|)
expr_stmt|;
name|allComments
operator|.
name|put
argument_list|(
name|pullRequestId
argument_list|,
name|comments
argument_list|)
expr_stmt|;
return|return
name|commitComment
return|;
block|}
DECL|method|addPullRequest (String title)
specifier|public
name|PullRequest
name|addPullRequest
parameter_list|(
name|String
name|title
parameter_list|)
block|{
name|User
name|author
init|=
name|createAuthor
argument_list|()
decl_stmt|;
name|PullRequest
name|pullRequest
init|=
operator|new
name|PullRequest
argument_list|()
decl_stmt|;
name|pullRequest
operator|.
name|setUser
argument_list|(
name|author
argument_list|)
expr_stmt|;
name|pullRequest
operator|.
name|setHtmlUrl
argument_list|(
literal|"https://github.com/someguy/somerepo/pull"
operator|+
name|pullRequestNumber
argument_list|)
expr_stmt|;
name|pullRequest
operator|.
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|pullRequest
operator|.
name|setNumber
argument_list|(
name|pullRequestNumber
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|pullRequest
operator|.
name|setId
argument_list|(
name|pullRequestNumber
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|pullRequest
operator|.
name|setState
argument_list|(
literal|"open"
argument_list|)
expr_stmt|;
name|pullRequests
operator|.
name|put
argument_list|(
name|pullRequest
operator|.
name|getId
argument_list|()
argument_list|,
name|pullRequest
argument_list|)
expr_stmt|;
name|pullRequestNumber
operator|.
name|incrementAndGet
argument_list|()
expr_stmt|;
return|return
name|pullRequest
return|;
block|}
annotation|@
name|Override
DECL|method|getPullRequest (IRepositoryIdProvider repository, int id)
specifier|public
name|PullRequest
name|getPullRequest
parameter_list|(
name|IRepositoryIdProvider
name|repository
parameter_list|,
name|int
name|id
parameter_list|)
throws|throws
name|IOException
block|{
name|PullRequest
name|pullRequest
init|=
name|pullRequests
operator|.
name|get
argument_list|(
operator|(
name|long
operator|)
name|id
argument_list|)
decl_stmt|;
return|return
name|pullRequest
return|;
block|}
annotation|@
name|Override
DECL|method|editPullRequest (IRepositoryIdProvider repository, PullRequest request)
specifier|public
name|PullRequest
name|editPullRequest
parameter_list|(
name|IRepositoryIdProvider
name|repository
parameter_list|,
name|PullRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|pullRequests
operator|.
name|put
argument_list|(
name|request
operator|.
name|getId
argument_list|()
argument_list|,
name|request
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
annotation|@
name|Override
DECL|method|getPullRequests (IRepositoryIdProvider repository, String state)
specifier|public
specifier|synchronized
name|List
argument_list|<
name|PullRequest
argument_list|>
name|getPullRequests
parameter_list|(
name|IRepositoryIdProvider
name|repository
parameter_list|,
name|String
name|state
parameter_list|)
block|{
name|List
argument_list|<
name|PullRequest
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|id
range|:
name|pullRequests
operator|.
name|keySet
argument_list|()
control|)
block|{
name|PullRequest
name|pr
init|=
name|pullRequests
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|pr
operator|.
name|getState
argument_list|()
operator|.
name|equals
argument_list|(
name|state
argument_list|)
condition|)
block|{
name|result
operator|.
name|add
argument_list|(
name|pr
argument_list|)
expr_stmt|;
block|}
block|}
name|LOG
operator|.
name|debug
argument_list|(
literal|"Returning list of "
operator|+
name|result
operator|.
name|size
argument_list|()
operator|+
literal|" pull requests with state "
operator|+
name|state
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
DECL|method|setFiles (int id, List<CommitFile> commitFiles)
specifier|public
name|void
name|setFiles
parameter_list|(
name|int
name|id
parameter_list|,
name|List
argument_list|<
name|CommitFile
argument_list|>
name|commitFiles
parameter_list|)
block|{
name|files
operator|.
name|put
argument_list|(
name|id
argument_list|,
name|commitFiles
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getFiles (IRepositoryIdProvider repository, int id)
specifier|public
name|List
argument_list|<
name|CommitFile
argument_list|>
name|getFiles
parameter_list|(
name|IRepositoryIdProvider
name|repository
parameter_list|,
name|int
name|id
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|files
operator|.
name|get
argument_list|(
name|id
argument_list|)
return|;
block|}
block|}
end_class

end_unit

