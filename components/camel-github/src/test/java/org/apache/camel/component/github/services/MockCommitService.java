begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.github.services
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|github
operator|.
name|services
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|egit
operator|.
name|github
operator|.
name|core
operator|.
name|CommitStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|egit
operator|.
name|github
operator|.
name|core
operator|.
name|IRepositoryIdProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|egit
operator|.
name|github
operator|.
name|core
operator|.
name|RepositoryCommit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|egit
operator|.
name|github
operator|.
name|core
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|egit
operator|.
name|github
operator|.
name|core
operator|.
name|service
operator|.
name|CommitService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|MockCommitService
specifier|public
class|class
name|MockCommitService
extends|extends
name|CommitService
block|{
DECL|field|LOG
specifier|protected
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MockCommitService
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|commitsList
specifier|private
name|List
argument_list|<
name|RepositoryCommit
argument_list|>
name|commitsList
init|=
operator|new
name|ArrayList
argument_list|<
name|RepositoryCommit
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|fakeSha
specifier|private
name|AtomicLong
name|fakeSha
init|=
operator|new
name|AtomicLong
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
decl_stmt|;
DECL|field|commitStatus
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|CommitStatus
argument_list|>
name|commitStatus
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|CommitStatus
argument_list|>
argument_list|()
decl_stmt|;
DECL|method|addRepositoryCommit ()
specifier|public
specifier|synchronized
name|RepositoryCommit
name|addRepositoryCommit
parameter_list|()
block|{
name|User
name|author
init|=
operator|new
name|User
argument_list|()
decl_stmt|;
name|author
operator|.
name|setEmail
argument_list|(
literal|"someguy@gmail.com"
argument_list|)
expr_stmt|;
comment|// TODO change
name|author
operator|.
name|setHtmlUrl
argument_list|(
literal|"http://github/someguy"
argument_list|)
expr_stmt|;
name|author
operator|.
name|setLogin
argument_list|(
literal|"someguy"
argument_list|)
expr_stmt|;
name|RepositoryCommit
name|rc
init|=
operator|new
name|RepositoryCommit
argument_list|()
decl_stmt|;
name|rc
operator|.
name|setAuthor
argument_list|(
name|author
argument_list|)
expr_stmt|;
name|rc
operator|.
name|setSha
argument_list|(
name|fakeSha
operator|.
name|incrementAndGet
argument_list|()
operator|+
literal|""
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"In MockCommitService added commit with sha "
operator|+
name|rc
operator|.
name|getSha
argument_list|()
argument_list|)
expr_stmt|;
name|commitsList
operator|.
name|add
argument_list|(
name|rc
argument_list|)
expr_stmt|;
return|return
name|rc
return|;
block|}
annotation|@
name|Override
DECL|method|getCommits (IRepositoryIdProvider repository, String sha, String path)
specifier|public
specifier|synchronized
name|List
argument_list|<
name|RepositoryCommit
argument_list|>
name|getCommits
parameter_list|(
name|IRepositoryIdProvider
name|repository
parameter_list|,
name|String
name|sha
parameter_list|,
name|String
name|path
parameter_list|)
throws|throws
name|IOException
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Returning list of size "
operator|+
name|commitsList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|commitsList
return|;
block|}
annotation|@
name|Override
DECL|method|createStatus (IRepositoryIdProvider repository, String sha, CommitStatus status)
specifier|public
name|CommitStatus
name|createStatus
parameter_list|(
name|IRepositoryIdProvider
name|repository
parameter_list|,
name|String
name|sha
parameter_list|,
name|CommitStatus
name|status
parameter_list|)
throws|throws
name|IOException
block|{
name|commitStatus
operator|.
name|put
argument_list|(
name|sha
argument_list|,
name|status
argument_list|)
expr_stmt|;
return|return
name|status
return|;
block|}
DECL|method|getNextSha ()
specifier|public
name|String
name|getNextSha
parameter_list|()
block|{
return|return
operator|(
name|fakeSha
operator|.
name|incrementAndGet
argument_list|()
operator|+
literal|""
operator|)
return|;
block|}
DECL|method|getCommitStatus (String sha)
specifier|public
name|CommitStatus
name|getCommitStatus
parameter_list|(
name|String
name|sha
parameter_list|)
block|{
return|return
name|commitStatus
operator|.
name|get
argument_list|(
name|sha
argument_list|)
return|;
block|}
block|}
end_class

end_unit

