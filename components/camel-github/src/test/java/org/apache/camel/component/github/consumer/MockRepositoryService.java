begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.github.consumer
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|github
operator|.
name|consumer
package|;
end_package

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|egit
operator|.
name|github
operator|.
name|core
operator|.
name|IRepositoryIdProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|egit
operator|.
name|github
operator|.
name|core
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|egit
operator|.
name|github
operator|.
name|core
operator|.
name|RepositoryTag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|egit
operator|.
name|github
operator|.
name|core
operator|.
name|service
operator|.
name|RepositoryService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
DECL|class|MockRepositoryService
specifier|public
class|class
name|MockRepositoryService
extends|extends
name|RepositoryService
block|{
DECL|field|LOG
specifier|protected
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MockRepositoryService
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|tags
specifier|private
name|List
argument_list|<
name|RepositoryTag
argument_list|>
name|tags
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|addTag (String tagName)
specifier|public
name|RepositoryTag
name|addTag
parameter_list|(
name|String
name|tagName
parameter_list|)
block|{
name|RepositoryTag
name|tag
init|=
operator|new
name|RepositoryTag
argument_list|()
decl_stmt|;
name|tag
operator|.
name|setName
argument_list|(
name|tagName
argument_list|)
expr_stmt|;
name|tags
operator|.
name|add
argument_list|(
name|tag
argument_list|)
expr_stmt|;
return|return
name|tag
return|;
block|}
annotation|@
name|Override
DECL|method|getRepository (final String owner, final String name)
specifier|public
name|Repository
name|getRepository
parameter_list|(
specifier|final
name|String
name|owner
parameter_list|,
specifier|final
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|Repository
name|repository
init|=
operator|new
name|Repository
argument_list|()
decl_stmt|;
name|repository
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
return|return
name|repository
return|;
block|}
annotation|@
name|Override
DECL|method|getTags (IRepositoryIdProvider repository)
specifier|public
name|List
argument_list|<
name|RepositoryTag
argument_list|>
name|getTags
parameter_list|(
name|IRepositoryIdProvider
name|repository
parameter_list|)
throws|throws
name|IOException
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"in MockRepositoryService returning "
operator|+
name|tags
operator|.
name|size
argument_list|()
operator|+
literal|" tags"
argument_list|)
expr_stmt|;
return|return
name|tags
return|;
block|}
block|}
end_class

end_unit

