begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jms.tuning
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jms
operator|.
name|tuning
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|spring
operator|.
name|CamelSpringTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xbean
operator|.
name|spring
operator|.
name|context
operator|.
name|ClassPathXmlApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|AbstractXmlApplicationContext
import|;
end_import

begin_class
annotation|@
name|Ignore
DECL|class|PerformanceRoutePojoTest
specifier|public
class|class
name|PerformanceRoutePojoTest
extends|extends
name|CamelSpringTestSupport
block|{
DECL|field|size
specifier|private
name|int
name|size
init|=
literal|200
decl_stmt|;
DECL|method|createApplicationContext ()
specifier|protected
name|AbstractXmlApplicationContext
name|createApplicationContext
parameter_list|()
block|{
return|return
operator|new
name|ClassPathXmlApplicationContext
argument_list|(
literal|"org/apache/camel/component/jms/tuning/PerformanceRoutePojoTest-context.xml"
argument_list|)
return|;
block|}
annotation|@
name|Test
DECL|method|testPojoPerformance ()
specifier|public
name|void
name|testPojoPerformance
parameter_list|()
throws|throws
name|Exception
block|{
name|long
name|start
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|getMockEndpoint
argument_list|(
literal|"mock:audit"
argument_list|)
operator|.
name|expectedMessageCount
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|getMockEndpoint
argument_list|(
literal|"mock:audit"
argument_list|)
operator|.
name|expectsNoDuplicates
argument_list|()
operator|.
name|body
argument_list|()
expr_stmt|;
name|getMockEndpoint
argument_list|(
literal|"mock:gold"
argument_list|)
operator|.
name|expectedMessageCount
argument_list|(
operator|(
name|size
operator|/
literal|2
operator|)
operator|-
operator|(
name|size
operator|/
literal|10
operator|)
argument_list|)
expr_stmt|;
name|getMockEndpoint
argument_list|(
literal|"mock:silver"
argument_list|)
operator|.
name|expectedMessageCount
argument_list|(
name|size
operator|/
literal|10
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|String
name|type
decl_stmt|;
if|if
condition|(
name|i
operator|%
literal|10
operator|==
literal|0
condition|)
block|{
name|type
operator|=
literal|"silver"
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|i
operator|%
literal|2
operator|==
literal|0
condition|)
block|{
name|type
operator|=
literal|"gold"
expr_stmt|;
block|}
else|else
block|{
name|type
operator|=
literal|"bronze"
expr_stmt|;
block|}
name|template
operator|.
name|sendBodyAndHeader
argument_list|(
literal|"activemq:queue:inbox"
argument_list|,
literal|"Message "
operator|+
name|i
argument_list|,
literal|"type"
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
name|long
name|delta
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|start
decl_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"RoutePerformancePojoTest: Sent: "
operator|+
name|size
operator|+
literal|" Took: "
operator|+
name|delta
operator|+
literal|" ms"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

