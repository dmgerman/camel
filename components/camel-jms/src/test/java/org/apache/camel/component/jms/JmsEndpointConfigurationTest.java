begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jms
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jms
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|DeliveryMode
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ExceptionListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ResolveEndpointFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|connection
operator|.
name|UserCredentialsConnectionFactoryAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|core
operator|.
name|JmsOperations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|core
operator|.
name|JmsTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|listener
operator|.
name|AbstractMessageListenerContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|listener
operator|.
name|DefaultMessageListenerContainer
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jms
operator|.
name|JmsComponent
operator|.
name|jmsComponentClientAcknowledge
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|support
operator|.
name|converter
operator|.
name|SimpleMessageConverter
import|;
end_import

begin_comment
comment|/**  * @version $Revision$  */
end_comment

begin_class
DECL|class|JmsEndpointConfigurationTest
specifier|public
class|class
name|JmsEndpointConfigurationTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|dummyProcessor
specifier|private
name|Processor
name|dummyProcessor
init|=
operator|new
name|Processor
argument_list|()
block|{
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Received: "
operator|+
name|exchange
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
annotation|@
name|Test
DECL|method|testDurableSubscriberConfiguredWithDoubleSlash ()
specifier|public
name|void
name|testDurableSubscriberConfiguredWithDoubleSlash
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms://topic:Foo.Bar?durableSubscriptionName=James&clientId=ABC"
argument_list|)
decl_stmt|;
name|assertDurableSubscriberEndpointIsValid
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDurableSubscriberConfiguredWithNoSlashes ()
specifier|public
name|void
name|testDurableSubscriberConfiguredWithNoSlashes
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms:topic:Foo.Bar?durableSubscriptionName=James&clientId=ABC"
argument_list|)
decl_stmt|;
name|assertDurableSubscriberEndpointIsValid
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetUsernameAndPassword ()
specifier|public
name|void
name|testSetUsernameAndPassword
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms:topic:Foo.Bar?username=James&password=ABC"
argument_list|)
decl_stmt|;
name|ConnectionFactory
name|cf
init|=
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getConnectionFactory
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"The connectionFactory should not be null"
argument_list|,
name|cf
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"The connectionFactory should be the instance of UserCredentialsConnectionFactoryAdapter"
argument_list|,
name|cf
operator|instanceof
name|UserCredentialsConnectionFactoryAdapter
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNotSetUsernameOrPassword ()
specifier|public
name|void
name|testNotSetUsernameOrPassword
parameter_list|()
block|{
try|try
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms:topic:Foo.Bar?username=James"
argument_list|)
decl_stmt|;
name|fail
argument_list|(
literal|"Expect the exception here"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ResolveEndpointFailedException
name|exception
parameter_list|)
block|{
comment|// Expect the exception here
block|}
try|try
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms:topic:Foo.Bar?password=ABC"
argument_list|)
decl_stmt|;
name|fail
argument_list|(
literal|"Expect the exception here"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ResolveEndpointFailedException
name|exception
parameter_list|)
block|{
comment|// Expect the exception here
block|}
block|}
annotation|@
name|Test
DECL|method|testSelector ()
specifier|public
name|void
name|testSelector
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms:Foo.Bar?selector=foo%3D'ABC'"
argument_list|)
decl_stmt|;
name|JmsConsumer
name|consumer
init|=
name|endpoint
operator|.
name|createConsumer
argument_list|(
name|dummyProcessor
argument_list|)
decl_stmt|;
name|AbstractMessageListenerContainer
name|container
init|=
name|consumer
operator|.
name|getListenerContainer
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"selector"
argument_list|,
literal|"foo='ABC'"
argument_list|,
name|container
operator|.
name|getMessageSelector
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|object
init|=
name|container
operator|.
name|getMessageListener
argument_list|()
decl_stmt|;
name|EndpointMessageListener
name|messageListener
init|=
name|assertIsInstanceOf
argument_list|(
name|EndpointMessageListener
operator|.
name|class
argument_list|,
name|object
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
literal|"Should not have replyToDisabled"
argument_list|,
name|messageListener
operator|.
name|isDisableReplyTo
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Should not have isEagerLoadingOfProperties()"
argument_list|,
name|messageListener
operator|.
name|isEagerLoadingOfProperties
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConfigureMessageListener ()
specifier|public
name|void
name|testConfigureMessageListener
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms:Foo.Bar?disableReplyTo=true&eagerLoadingOfProperties=true"
argument_list|)
decl_stmt|;
name|JmsConsumer
name|consumer
init|=
name|endpoint
operator|.
name|createConsumer
argument_list|(
name|dummyProcessor
argument_list|)
decl_stmt|;
name|AbstractMessageListenerContainer
name|container
init|=
name|consumer
operator|.
name|getListenerContainer
argument_list|()
decl_stmt|;
name|Object
name|object
init|=
name|container
operator|.
name|getMessageListener
argument_list|()
decl_stmt|;
name|EndpointMessageListener
name|messageListener
init|=
name|assertIsInstanceOf
argument_list|(
name|EndpointMessageListener
operator|.
name|class
argument_list|,
name|object
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Should have replyToDisabled"
argument_list|,
name|messageListener
operator|.
name|isDisableReplyTo
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Should have isEagerLoadingOfProperties()"
argument_list|,
name|messageListener
operator|.
name|isEagerLoadingOfProperties
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCacheConsumerEnabledForQueue ()
specifier|public
name|void
name|testCacheConsumerEnabledForQueue
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms:Foo.Bar"
argument_list|)
decl_stmt|;
name|assertCacheLevel
argument_list|(
name|endpoint
argument_list|,
name|DefaultMessageListenerContainer
operator|.
name|CACHE_CONSUMER
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCacheConsumerEnabledForTopic ()
specifier|public
name|void
name|testCacheConsumerEnabledForTopic
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms:topic:Foo.Bar"
argument_list|)
decl_stmt|;
name|assertCacheLevel
argument_list|(
name|endpoint
argument_list|,
name|DefaultMessageListenerContainer
operator|.
name|CACHE_CONSUMER
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReplyToPesistentDelivery ()
specifier|public
name|void
name|testReplyToPesistentDelivery
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms:queue:Foo"
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setDeliveryPersistent
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setReplyToDeliveryPersistent
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|JmsProducer
name|producer
init|=
name|endpoint
operator|.
name|createProducer
argument_list|()
decl_stmt|;
name|JmsConsumer
name|consumer
init|=
name|endpoint
operator|.
name|createConsumer
argument_list|(
name|dummyProcessor
argument_list|)
decl_stmt|;
name|JmsOperations
name|operations
init|=
name|consumer
operator|.
name|getEndpointMessageListener
argument_list|()
operator|.
name|getTemplate
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|operations
operator|instanceof
name|JmsTemplate
argument_list|)
expr_stmt|;
name|JmsTemplate
name|template
init|=
operator|(
name|JmsTemplate
operator|)
name|operations
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Wrong delivery mode on reply template; expected  "
operator|+
literal|" DeliveryMode.NON_PERSISTENT but was DeliveryMode.PERSISTENT"
argument_list|,
name|template
operator|.
name|getDeliveryMode
argument_list|()
operator|==
name|DeliveryMode
operator|.
name|NON_PERSISTENT
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMaxConcurrentConsumers ()
specifier|public
name|void
name|testMaxConcurrentConsumers
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms:queue:Foo?maxConcurrentConsumers=5"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|endpoint
operator|.
name|getMaxConcurrentConsumers
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConcurrentConsumers ()
specifier|public
name|void
name|testConcurrentConsumers
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms:queue:Foo?concurrentConsumers=4"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|endpoint
operator|.
name|getConcurrentConsumers
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIdleTaskExecutionLimit ()
specifier|public
name|void
name|testIdleTaskExecutionLimit
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms:queue:Foo?idleTaskExecutionLimit=50"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|50
argument_list|,
name|endpoint
operator|.
name|getIdleTaskExecutionLimit
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ConsumerType
operator|.
name|Default
argument_list|,
name|endpoint
operator|.
name|getConsumerType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isAutoStartup
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testLazyCreateTransactionManager ()
specifier|public
name|void
name|testLazyCreateTransactionManager
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms:queue:Foo?lazyCreateTransactionManager=true"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|isLazyCreateTransactionManager
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDefaultEndpointOptions ()
specifier|public
name|void
name|testDefaultEndpointOptions
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms:queue:Foo"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|endpoint
operator|.
name|getBinding
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|endpoint
operator|.
name|getCamelContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|endpoint
operator|.
name|getRecoveryInterval
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|endpoint
operator|.
name|getTimeToLive
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|endpoint
operator|.
name|getTransactionTimeout
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|endpoint
operator|.
name|getAcknowledgementModeName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|endpoint
operator|.
name|getAcknowledgementMode
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|endpoint
operator|.
name|getCacheLevel
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|endpoint
operator|.
name|getCacheLevelName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|endpoint
operator|.
name|getCamelId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|endpoint
operator|.
name|getClientId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|endpoint
operator|.
name|getConnectionFactory
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|endpoint
operator|.
name|getConcurrentConsumers
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ConsumerType
operator|.
name|Default
argument_list|,
name|endpoint
operator|.
name|getConsumerType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|endpoint
operator|.
name|getDestination
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Foo"
argument_list|,
name|endpoint
operator|.
name|getDestinationName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|endpoint
operator|.
name|getDestinationResolver
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|endpoint
operator|.
name|getDurableSubscriptionName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jms://queue:Foo"
argument_list|,
name|endpoint
operator|.
name|getEndpointKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jms://queue:Foo"
argument_list|,
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|endpoint
operator|.
name|getExceptionListener
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|endpoint
operator|.
name|getIdleTaskExecutionLimit
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|endpoint
operator|.
name|getJmsMessageType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|endpoint
operator|.
name|getJmsOperations
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|endpoint
operator|.
name|getListenerConnectionFactory
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|endpoint
operator|.
name|getMaxConcurrentConsumers
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|endpoint
operator|.
name|getMaxMessagesPerTask
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|endpoint
operator|.
name|getMessageConverter
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|endpoint
operator|.
name|getMetadataJmsOperations
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|endpoint
operator|.
name|getPriority
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|endpoint
operator|.
name|getProviderMetadata
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|endpoint
operator|.
name|getReceiveTimeout
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|endpoint
operator|.
name|getRecoveryInterval
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|endpoint
operator|.
name|getReplyTo
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|endpoint
operator|.
name|getReplyToDestinationSelectorName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|JmsConfiguration
operator|.
name|REPLYTO_TEMP_DEST_AFFINITY_PER_ENDPOINT
argument_list|,
name|endpoint
operator|.
name|getReplyToTempDestinationAffinity
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|endpoint
operator|.
name|getRequestMapPurgePollTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|endpoint
operator|.
name|getRequestor
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|20000
argument_list|,
name|endpoint
operator|.
name|getRequestTimeout
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|endpoint
operator|.
name|getSelector
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|endpoint
operator|.
name|getTimeToLive
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|endpoint
operator|.
name|getTransactionName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|endpoint
operator|.
name|getTransactionTimeout
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|endpoint
operator|.
name|getTaskExecutor
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|endpoint
operator|.
name|getTemplateConnectionFactory
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|endpoint
operator|.
name|getTransactionManager
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|endpoint
operator|.
name|isAcceptMessagesWhileStopping
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|endpoint
operator|.
name|isAlwaysCopyMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isAutoStartup
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isDeliveryPersistent
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|endpoint
operator|.
name|isDisableReplyTo
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|endpoint
operator|.
name|isEagerLoadingOfProperties
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|endpoint
operator|.
name|isExplicitQosEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isExposeListenerSession
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|endpoint
operator|.
name|isLenientProperties
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isMessageIdEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isMessageTimestampEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|endpoint
operator|.
name|isPreserveMessageQos
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|endpoint
operator|.
name|isPubSubDomain
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|endpoint
operator|.
name|isPubSubNoLocal
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isReplyToDeliveryPersistent
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|endpoint
operator|.
name|isUseMessageIDAsCorrelationID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|endpoint
operator|.
name|isUseVersion102
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isSingleton
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|endpoint
operator|.
name|isSubscriptionDurable
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|endpoint
operator|.
name|isTransacted
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|endpoint
operator|.
name|isTransactedInOut
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|endpoint
operator|.
name|isTransferException
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSettingEndpointOptions ()
specifier|public
name|void
name|testSettingEndpointOptions
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms:queue:Foo"
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|setAcceptMessagesWhileStopping
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isAcceptMessagesWhileStopping
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setAcknowledgementMode
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|endpoint
operator|.
name|getAcknowledgementMode
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setAcknowledgementModeName
argument_list|(
literal|"CLIENT_ACKNOWLEDGE"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CLIENT_ACKNOWLEDGE"
argument_list|,
name|endpoint
operator|.
name|getAcknowledgementModeName
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setAlwaysCopyMessage
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isAlwaysCopyMessage
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setCacheLevel
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|endpoint
operator|.
name|getCacheLevel
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setCacheLevelName
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|endpoint
operator|.
name|getCacheLevelName
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setClientId
argument_list|(
literal|"bar"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bar"
argument_list|,
name|endpoint
operator|.
name|getClientId
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setConcurrentConsumers
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|endpoint
operator|.
name|getConcurrentConsumers
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setConsumerType
argument_list|(
name|ConsumerType
operator|.
name|Default
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ConsumerType
operator|.
name|Default
argument_list|,
name|endpoint
operator|.
name|getConsumerType
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setDeliveryPersistent
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isDeliveryPersistent
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setDestinationName
argument_list|(
literal|"cool"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cool"
argument_list|,
name|endpoint
operator|.
name|getDestinationName
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setDisableReplyTo
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isDisableReplyTo
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setEagerLoadingOfProperties
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isEagerLoadingOfProperties
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setExceptionListener
argument_list|(
operator|new
name|ExceptionListener
argument_list|()
block|{
specifier|public
name|void
name|onException
parameter_list|(
name|JMSException
name|exception
parameter_list|)
block|{             }
block|}
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|endpoint
operator|.
name|getExceptionListener
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setExplicitQosEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isExplicitQosEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setExposeListenerSession
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isExposeListenerSession
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setIdleTaskExecutionLimit
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|endpoint
operator|.
name|getIdleTaskExecutionLimit
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setMaxConcurrentConsumers
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|endpoint
operator|.
name|getMaxConcurrentConsumers
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setMaxMessagesPerTask
argument_list|(
literal|9
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9
argument_list|,
name|endpoint
operator|.
name|getMaxMessagesPerTask
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setMessageConverter
argument_list|(
operator|new
name|SimpleMessageConverter
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|endpoint
operator|.
name|getMessageConverter
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setMessageIdEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isMessageIdEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setMessageTimestampEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isMessageTimestampEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setPreserveMessageQos
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isPreserveMessageQos
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setPriority
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|endpoint
operator|.
name|getPriority
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setPubSubNoLocal
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isPubSubNoLocal
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setPubSubNoLocal
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isPubSubNoLocal
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|endpoint
operator|.
name|isPubSubDomain
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setReceiveTimeout
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5000
argument_list|,
name|endpoint
operator|.
name|getReceiveTimeout
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setRecoveryInterval
argument_list|(
literal|6000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6000
argument_list|,
name|endpoint
operator|.
name|getRecoveryInterval
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setReplyTo
argument_list|(
literal|"bar"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bar"
argument_list|,
name|endpoint
operator|.
name|getReplyTo
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setReplyToDeliveryPersistent
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isReplyToDeliveryPersistent
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setReplyToDestinationSelectorName
argument_list|(
literal|"me"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"me"
argument_list|,
name|endpoint
operator|.
name|getReplyToDestinationSelectorName
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setReplyToTempDestinationAffinity
argument_list|(
literal|"endpoint"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"endpoint"
argument_list|,
name|endpoint
operator|.
name|getReplyToTempDestinationAffinity
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setRequestMapPurgePollTimeMillis
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2000
argument_list|,
name|endpoint
operator|.
name|getRequestMapPurgePollTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setRequestTimeout
argument_list|(
literal|3000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3000
argument_list|,
name|endpoint
operator|.
name|getRequestTimeout
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setSelector
argument_list|(
literal|"you"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"you"
argument_list|,
name|endpoint
operator|.
name|getSelector
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setTimeToLive
argument_list|(
literal|4000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4000
argument_list|,
name|endpoint
operator|.
name|getTimeToLive
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setTransacted
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isTransacted
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setTransactedInOut
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isTransactedInOut
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setTransferExchange
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isTransferExchange
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setTransferException
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isTransferException
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setJmsMessageType
argument_list|(
name|JmsMessageType
operator|.
name|Text
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|JmsMessageType
operator|.
name|Text
argument_list|,
name|endpoint
operator|.
name|getJmsMessageType
argument_list|()
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|setUseVersion102
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|endpoint
operator|.
name|isUseVersion102
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|assertCacheLevel (JmsEndpoint endpoint, int expected)
specifier|protected
name|void
name|assertCacheLevel
parameter_list|(
name|JmsEndpoint
name|endpoint
parameter_list|,
name|int
name|expected
parameter_list|)
throws|throws
name|Exception
block|{
name|JmsConsumer
name|consumer
init|=
name|endpoint
operator|.
name|createConsumer
argument_list|(
name|dummyProcessor
argument_list|)
decl_stmt|;
name|AbstractMessageListenerContainer
name|container
init|=
name|consumer
operator|.
name|getListenerContainer
argument_list|()
decl_stmt|;
name|DefaultMessageListenerContainer
name|defaultContainer
init|=
name|assertIsInstanceOf
argument_list|(
name|DefaultMessageListenerContainer
operator|.
name|class
argument_list|,
name|container
argument_list|)
decl_stmt|;
name|int
name|cacheLevel
init|=
name|defaultContainer
operator|.
name|getCacheLevel
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"CacheLevel"
argument_list|,
name|expected
argument_list|,
name|cacheLevel
argument_list|)
expr_stmt|;
block|}
DECL|method|assertDurableSubscriberEndpointIsValid (JmsEndpoint endpoint)
specifier|protected
name|void
name|assertDurableSubscriberEndpointIsValid
parameter_list|(
name|JmsEndpoint
name|endpoint
parameter_list|)
throws|throws
name|Exception
block|{
name|JmsConfiguration
name|configuration
init|=
name|endpoint
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"getDurableSubscriptionName()"
argument_list|,
literal|"James"
argument_list|,
name|configuration
operator|.
name|getDurableSubscriptionName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getClientId()"
argument_list|,
literal|"ABC"
argument_list|,
name|configuration
operator|.
name|getClientId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"isDeliveryPersistent()"
argument_list|,
literal|true
argument_list|,
name|configuration
operator|.
name|isDeliveryPersistent
argument_list|()
argument_list|)
expr_stmt|;
name|JmsConsumer
name|consumer
init|=
name|endpoint
operator|.
name|createConsumer
argument_list|(
operator|new
name|Processor
argument_list|()
block|{
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Received: "
operator|+
name|exchange
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|AbstractMessageListenerContainer
name|listenerContainer
init|=
name|consumer
operator|.
name|getListenerContainer
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"getDurableSubscriptionName()"
argument_list|,
literal|"James"
argument_list|,
name|listenerContainer
operator|.
name|getDurableSubscriptionName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getClientId()"
argument_list|,
literal|"ABC"
argument_list|,
name|listenerContainer
operator|.
name|getClientId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"isSubscriptionDurable()"
argument_list|,
literal|true
argument_list|,
name|listenerContainer
operator|.
name|isSubscriptionDurable
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createCamelContext ()
specifier|protected
name|CamelContext
name|createCamelContext
parameter_list|()
throws|throws
name|Exception
block|{
name|CamelContext
name|camelContext
init|=
name|super
operator|.
name|createCamelContext
argument_list|()
decl_stmt|;
name|ConnectionFactory
name|connectionFactory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"vm://localhost?broker.persistent=false"
argument_list|)
decl_stmt|;
name|camelContext
operator|.
name|addComponent
argument_list|(
literal|"jms"
argument_list|,
name|jmsComponentClientAcknowledge
argument_list|(
name|connectionFactory
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|camelContext
return|;
block|}
block|}
end_class

end_unit

