begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jms
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jms
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ContextTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jms
operator|.
name|JmsComponent
operator|.
name|jmsComponentClientAcknowledge
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|listener
operator|.
name|AbstractMessageListenerContainer
import|;
end_import

begin_comment
comment|/**  * @version $Revision: $  */
end_comment

begin_class
DECL|class|JmsEndpointConfigurationTest
specifier|public
class|class
name|JmsEndpointConfigurationTest
extends|extends
name|ContextTestSupport
block|{
DECL|field|dummyProcessor
specifier|private
name|Processor
name|dummyProcessor
init|=
operator|new
name|Processor
argument_list|()
block|{
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Received: "
operator|+
name|exchange
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
DECL|method|testDurableSubscriberConfiguredWithDoubleSlash ()
specifier|public
name|void
name|testDurableSubscriberConfiguredWithDoubleSlash
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms://topic:Foo.Bar?durableSubscriptionName=James&clientId=ABC"
argument_list|)
decl_stmt|;
name|assertDurableSubscriberEndpointIsValid
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
block|}
DECL|method|testDurableSubscriberConfiguredWithNoSlashes ()
specifier|public
name|void
name|testDurableSubscriberConfiguredWithNoSlashes
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms:topic:Foo.Bar?durableSubscriptionName=James&clientId=ABC"
argument_list|)
decl_stmt|;
name|assertDurableSubscriberEndpointIsValid
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
block|}
DECL|method|testSelector ()
specifier|public
name|void
name|testSelector
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms:Foo.Bar?selector=foo%3D'ABC'"
argument_list|)
decl_stmt|;
name|JmsConsumer
name|consumer
init|=
name|endpoint
operator|.
name|createConsumer
argument_list|(
name|dummyProcessor
argument_list|)
decl_stmt|;
name|AbstractMessageListenerContainer
name|container
init|=
name|consumer
operator|.
name|getListenerContainer
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"selector"
argument_list|,
literal|"foo='ABC'"
argument_list|,
name|container
operator|.
name|getMessageSelector
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|object
init|=
name|container
operator|.
name|getMessageListener
argument_list|()
decl_stmt|;
name|EndpointMessageListener
name|messageListener
init|=
name|assertIsInstanceOf
argument_list|(
name|EndpointMessageListener
operator|.
name|class
argument_list|,
name|object
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
literal|"Should not have replyToDisabled"
argument_list|,
name|messageListener
operator|.
name|isDisableReplyTo
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Should not have isEagerLoadingOfProperties()"
argument_list|,
name|messageListener
operator|.
name|isEagerLoadingOfProperties
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testConfigureMessageListener ()
specifier|public
name|void
name|testConfigureMessageListener
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsEndpoint
name|endpoint
init|=
operator|(
name|JmsEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"jms:Foo.Bar?disableReplyTo=true&eagerLoadingOfProperties=true"
argument_list|)
decl_stmt|;
name|JmsConsumer
name|consumer
init|=
name|endpoint
operator|.
name|createConsumer
argument_list|(
name|dummyProcessor
argument_list|)
decl_stmt|;
name|AbstractMessageListenerContainer
name|container
init|=
name|consumer
operator|.
name|getListenerContainer
argument_list|()
decl_stmt|;
name|Object
name|object
init|=
name|container
operator|.
name|getMessageListener
argument_list|()
decl_stmt|;
name|EndpointMessageListener
name|messageListener
init|=
name|assertIsInstanceOf
argument_list|(
name|EndpointMessageListener
operator|.
name|class
argument_list|,
name|object
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Should have replyToDisabled"
argument_list|,
name|messageListener
operator|.
name|isDisableReplyTo
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Should have isEagerLoadingOfProperties()"
argument_list|,
name|messageListener
operator|.
name|isEagerLoadingOfProperties
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|assertDurableSubscriberEndpointIsValid (JmsEndpoint endpoint)
specifier|protected
name|void
name|assertDurableSubscriberEndpointIsValid
parameter_list|(
name|JmsEndpoint
name|endpoint
parameter_list|)
throws|throws
name|Exception
block|{
name|JmsConfiguration
name|configuration
init|=
name|endpoint
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"getDurableSubscriptionName()"
argument_list|,
literal|"James"
argument_list|,
name|configuration
operator|.
name|getDurableSubscriptionName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getClientId()"
argument_list|,
literal|"ABC"
argument_list|,
name|configuration
operator|.
name|getClientId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"isDeliveryPersistent()"
argument_list|,
literal|true
argument_list|,
name|configuration
operator|.
name|isDeliveryPersistent
argument_list|()
argument_list|)
expr_stmt|;
name|JmsConsumer
name|consumer
init|=
name|endpoint
operator|.
name|createConsumer
argument_list|(
operator|new
name|Processor
argument_list|()
block|{
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Received: "
operator|+
name|exchange
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|AbstractMessageListenerContainer
name|listenerContainer
init|=
name|consumer
operator|.
name|getListenerContainer
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"getDurableSubscriptionName()"
argument_list|,
literal|"James"
argument_list|,
name|listenerContainer
operator|.
name|getDurableSubscriptionName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getClientId()"
argument_list|,
literal|"ABC"
argument_list|,
name|listenerContainer
operator|.
name|getClientId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"isSubscriptionDurable()"
argument_list|,
literal|true
argument_list|,
name|listenerContainer
operator|.
name|isSubscriptionDurable
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createCamelContext ()
specifier|protected
name|CamelContext
name|createCamelContext
parameter_list|()
throws|throws
name|Exception
block|{
name|CamelContext
name|camelContext
init|=
name|super
operator|.
name|createCamelContext
argument_list|()
decl_stmt|;
name|ConnectionFactory
name|connectionFactory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"vm://localhost?broker.persistent=false"
argument_list|)
decl_stmt|;
name|camelContext
operator|.
name|addComponent
argument_list|(
literal|"jms"
argument_list|,
name|jmsComponentClientAcknowledge
argument_list|(
name|connectionFactory
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|camelContext
return|;
block|}
block|}
end_class

end_unit

