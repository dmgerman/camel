begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jms.temp
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jms
operator|.
name|temp
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|broker
operator|.
name|BrokerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Produce
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jms
operator|.
name|JmsComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|CamelBeanPostProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test for issue CAMEL-3193. Camel should support reconnects in case of  * connection loss to jms server. After reconnect Temporary destinations have to  * be recreated as they may become invalid  */
end_comment

begin_class
DECL|class|JmsReconnectTest
specifier|public
class|class
name|JmsReconnectTest
block|{
DECL|interface|MyService
specifier|public
interface|interface
name|MyService
block|{
DECL|method|echo (String st)
name|String
name|echo
parameter_list|(
name|String
name|st
parameter_list|)
function_decl|;
block|}
DECL|class|EchoServiceImpl
specifier|private
specifier|static
specifier|final
class|class
name|EchoServiceImpl
implements|implements
name|MyService
block|{
annotation|@
name|Override
DECL|method|echo (String st)
specifier|public
name|String
name|echo
parameter_list|(
name|String
name|st
parameter_list|)
block|{
return|return
name|st
return|;
block|}
block|}
annotation|@
name|Produce
argument_list|(
literal|"direct:test"
argument_list|)
DECL|field|proxy
name|MyService
name|proxy
decl_stmt|;
comment|/**      * This test is disabled as the problem can currently not be reproduced using ActiveMQ.      * TODO Find a way to recreate the problem with ActiveMQ and fully automate the test      * @throws Exception      */
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testRequestReply ()
specifier|public
name|void
name|testRequestReply
parameter_list|()
throws|throws
name|Exception
block|{
name|BrokerService
name|broker
init|=
operator|new
name|BrokerService
argument_list|()
decl_stmt|;
name|broker
operator|.
name|addConnector
argument_list|(
literal|"tcp://localhost:61616"
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setPersistent
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|broker
operator|.
name|setTimeBeforePurgeTempDestinations
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|broker
operator|.
name|start
argument_list|()
expr_stmt|;
name|DefaultCamelContext
name|context
init|=
operator|new
name|DefaultCamelContext
argument_list|()
decl_stmt|;
name|JmsComponent
name|jmsComponent
init|=
operator|new
name|JmsComponent
argument_list|()
decl_stmt|;
comment|/**          *           */
name|ActiveMQConnectionFactory
name|connectionFactory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|()
decl_stmt|;
name|connectionFactory
operator|.
name|setBrokerURL
argument_list|(
literal|"failover://(tcp://localhost:61616)?maxReconnectAttempts=1"
argument_list|)
expr_stmt|;
comment|/**          * When using Tibco EMS the problem can be recreated. As the broker is          * external it has to be stopped and started by hand.          */
comment|// TibjmsConnectionFactory connectionFactory = new TibjmsConnectionFactory();
comment|// connectionFactory.setReconnAttemptCount(1);
name|jmsComponent
operator|.
name|setConnectionFactory
argument_list|(
name|connectionFactory
argument_list|)
expr_stmt|;
name|jmsComponent
operator|.
name|setRequestTimeout
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|jmsComponent
operator|.
name|setReceiveTimeout
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
literal|"jms"
argument_list|,
name|jmsComponent
argument_list|)
expr_stmt|;
name|context
operator|.
name|addRoutes
argument_list|(
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
literal|"jms:testqueue"
argument_list|)
operator|.
name|bean
argument_list|(
operator|new
name|EchoServiceImpl
argument_list|()
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:test"
argument_list|)
operator|.
name|to
argument_list|(
literal|"jms:testqueue"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|CamelBeanPostProcessor
name|processor
init|=
operator|new
name|CamelBeanPostProcessor
argument_list|()
decl_stmt|;
name|processor
operator|.
name|setCamelContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|processor
operator|.
name|postProcessBeforeInitialization
argument_list|(
name|this
argument_list|,
literal|"this"
argument_list|)
expr_stmt|;
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
name|String
name|ret
init|=
name|proxy
operator|.
name|echo
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|ret
argument_list|)
expr_stmt|;
name|broker
operator|.
name|stop
argument_list|()
expr_stmt|;
comment|/**          * Wait long enough for the jms client to do a full reconnect. In the          * Tibco EMS case this means that a Temporary Destination created before          * is invalid now          */
name|Thread
operator|.
name|sleep
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|System
operator|.
name|in
operator|.
name|read
argument_list|()
expr_stmt|;
name|broker
operator|.
name|start
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|/**          * Before the fix to this issue this call will throw a spring UncategorizedJmsException          * which contains an InvalidJmsDestination          */
name|String
name|ret2
init|=
name|proxy
operator|.
name|echo
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|ret2
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

