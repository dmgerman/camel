begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jms
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jms
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicBoolean
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ExchangeTimedOutException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RuntimeCamelException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jms
operator|.
name|JmsComponent
operator|.
name|jmsComponentAutoAcknowledge
import|;
end_import

begin_comment
comment|/**  * @version $Revision$  */
end_comment

begin_class
DECL|class|JmsRouteRequestReplyTest
specifier|public
class|class
name|JmsRouteRequestReplyTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|REPLY_TO_DESTINATION_SELECTOR_NAME
specifier|protected
specifier|static
specifier|final
name|String
name|REPLY_TO_DESTINATION_SELECTOR_NAME
init|=
literal|"camelProducer"
decl_stmt|;
DECL|field|componentName
specifier|protected
specifier|static
name|String
name|componentName
init|=
literal|"amq"
decl_stmt|;
DECL|field|componentName1
specifier|protected
specifier|static
name|String
name|componentName1
init|=
literal|"amq1"
decl_stmt|;
DECL|field|endpointUriA
specifier|protected
specifier|static
name|String
name|endpointUriA
init|=
name|componentName
operator|+
literal|":queue:test.a"
decl_stmt|;
DECL|field|endpointUriB
specifier|protected
specifier|static
name|String
name|endpointUriB
init|=
name|componentName
operator|+
literal|":queue:test.b"
decl_stmt|;
DECL|field|endpointUriB1
specifier|protected
specifier|static
name|String
name|endpointUriB1
init|=
name|componentName1
operator|+
literal|":queue:test.b"
decl_stmt|;
comment|// note that the replyTo both A and B endpoints share the persistent replyTo queue,
comment|// which is one more way to verify that reply listeners of A and B endpoints don't steal each other messages
DECL|field|endpointReplyToUriA
specifier|protected
specifier|static
name|String
name|endpointReplyToUriA
init|=
name|componentName
operator|+
literal|":queue:test.a?replyTo=queue:test.a.reply"
decl_stmt|;
DECL|field|endpointReplyToUriB
specifier|protected
specifier|static
name|String
name|endpointReplyToUriB
init|=
name|componentName
operator|+
literal|":queue:test.b?replyTo=queue:test.a.reply"
decl_stmt|;
DECL|field|request
specifier|protected
specifier|static
name|String
name|request
init|=
literal|"Hello World"
decl_stmt|;
DECL|field|expectedReply
specifier|protected
specifier|static
name|String
name|expectedReply
init|=
literal|"Re: "
operator|+
name|request
decl_stmt|;
DECL|field|maxTasks
specifier|protected
specifier|static
name|int
name|maxTasks
init|=
literal|100
decl_stmt|;
DECL|field|maxServerTasks
specifier|protected
specifier|static
name|int
name|maxServerTasks
init|=
literal|1
comment|/*maxTasks / 5*/
decl_stmt|;
DECL|field|maxCalls
specifier|protected
specifier|static
name|int
name|maxCalls
init|=
literal|10
decl_stmt|;
DECL|field|inited
specifier|protected
specifier|static
name|AtomicBoolean
name|inited
init|=
operator|new
name|AtomicBoolean
argument_list|(
literal|false
argument_list|)
decl_stmt|;
DECL|field|contextBuilders
specifier|protected
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|ContextBuilder
argument_list|>
name|contextBuilders
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|ContextBuilder
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|routeBuilders
specifier|protected
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|RouteBuilder
argument_list|>
name|routeBuilders
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|RouteBuilder
argument_list|>
argument_list|()
decl_stmt|;
DECL|interface|ContextBuilder
specifier|private
interface|interface
name|ContextBuilder
block|{
DECL|method|buildContext (CamelContext context)
name|CamelContext
name|buildContext
parameter_list|(
name|CamelContext
name|context
parameter_list|)
throws|throws
name|Exception
function_decl|;
block|}
DECL|class|SingleNodeDeadEndRouteBuilder
specifier|public
specifier|static
class|class
name|SingleNodeDeadEndRouteBuilder
extends|extends
name|RouteBuilder
block|{
DECL|method|configure ()
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
name|endpointUriA
argument_list|)
operator|.
name|process
argument_list|(
operator|new
name|Processor
argument_list|()
block|{
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|e
parameter_list|)
block|{
comment|// do nothing
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
empty_stmt|;
DECL|class|SingleNodeRouteBuilder
specifier|public
specifier|static
class|class
name|SingleNodeRouteBuilder
extends|extends
name|RouteBuilder
block|{
DECL|method|configure ()
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
name|endpointUriA
argument_list|)
operator|.
name|process
argument_list|(
operator|new
name|Processor
argument_list|()
block|{
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|e
parameter_list|)
block|{
name|String
name|request
init|=
name|e
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|e
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|expectedReply
operator|+
name|request
operator|.
name|substring
argument_list|(
name|request
operator|.
name|indexOf
argument_list|(
literal|'-'
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
empty_stmt|;
DECL|class|MultiNodeRouteBuilder
specifier|public
specifier|static
class|class
name|MultiNodeRouteBuilder
extends|extends
name|RouteBuilder
block|{
DECL|method|configure ()
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
name|endpointUriA
argument_list|)
operator|.
name|to
argument_list|(
name|endpointUriB
argument_list|)
expr_stmt|;
name|from
argument_list|(
name|endpointUriB
argument_list|)
operator|.
name|process
argument_list|(
operator|new
name|Processor
argument_list|()
block|{
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|e
parameter_list|)
block|{
name|String
name|request
init|=
name|e
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|e
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|expectedReply
operator|+
name|request
operator|.
name|substring
argument_list|(
name|request
operator|.
name|indexOf
argument_list|(
literal|'-'
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
empty_stmt|;
DECL|class|MultiNodeReplyToRouteBuilder
specifier|public
specifier|static
class|class
name|MultiNodeReplyToRouteBuilder
extends|extends
name|RouteBuilder
block|{
DECL|method|configure ()
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
name|endpointUriA
argument_list|)
operator|.
name|to
argument_list|(
name|endpointReplyToUriB
argument_list|)
expr_stmt|;
name|from
argument_list|(
name|endpointUriB
argument_list|)
operator|.
name|process
argument_list|(
operator|new
name|Processor
argument_list|()
block|{
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|e
parameter_list|)
block|{
name|Message
name|in
init|=
name|e
operator|.
name|getIn
argument_list|()
decl_stmt|;
name|Message
name|out
init|=
name|e
operator|.
name|getOut
argument_list|()
decl_stmt|;
name|String
name|selectorValue
init|=
name|in
operator|.
name|getHeader
argument_list|(
name|REPLY_TO_DESTINATION_SELECTOR_NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|request
init|=
name|in
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|out
operator|.
name|setHeader
argument_list|(
name|REPLY_TO_DESTINATION_SELECTOR_NAME
argument_list|,
name|selectorValue
argument_list|)
expr_stmt|;
name|out
operator|.
name|setBody
argument_list|(
name|expectedReply
operator|+
name|request
operator|.
name|substring
argument_list|(
name|request
operator|.
name|indexOf
argument_list|(
literal|'-'
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
empty_stmt|;
DECL|class|MultiNodeDiffCompRouteBuilder
specifier|public
specifier|static
class|class
name|MultiNodeDiffCompRouteBuilder
extends|extends
name|RouteBuilder
block|{
DECL|method|configure ()
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
name|endpointUriA
argument_list|)
operator|.
name|to
argument_list|(
name|endpointUriB1
argument_list|)
expr_stmt|;
name|from
argument_list|(
name|endpointUriB1
argument_list|)
operator|.
name|process
argument_list|(
operator|new
name|Processor
argument_list|()
block|{
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|e
parameter_list|)
block|{
name|String
name|request
init|=
name|e
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|e
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|expectedReply
operator|+
name|request
operator|.
name|substring
argument_list|(
name|request
operator|.
name|indexOf
argument_list|(
literal|'-'
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
empty_stmt|;
DECL|class|ContextBuilderMessageID
specifier|public
specifier|static
class|class
name|ContextBuilderMessageID
implements|implements
name|ContextBuilder
block|{
DECL|method|buildContext (CamelContext context)
specifier|public
name|CamelContext
name|buildContext
parameter_list|(
name|CamelContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
name|ConnectionFactory
name|connectionFactory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"vm://localhost?broker.persistent=false"
argument_list|)
decl_stmt|;
name|JmsComponent
name|jmsComponent
init|=
name|jmsComponentAutoAcknowledge
argument_list|(
name|connectionFactory
argument_list|)
decl_stmt|;
name|jmsComponent
operator|.
name|setUseMessageIDAsCorrelationID
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jmsComponent
operator|.
name|setConcurrentConsumers
argument_list|(
name|maxServerTasks
argument_list|)
expr_stmt|;
comment|/*             jmsComponent.getConfiguration().setRequestTimeout(600000);             jmsComponent.getConfiguration().setRequestMapPurgePollTimeMillis(30000);              */
name|context
operator|.
name|addComponent
argument_list|(
name|componentName
argument_list|,
name|jmsComponent
argument_list|)
expr_stmt|;
return|return
name|context
return|;
block|}
block|}
empty_stmt|;
DECL|method|init ()
specifier|protected
specifier|static
name|void
name|init
parameter_list|()
block|{
if|if
condition|(
name|inited
operator|.
name|compareAndSet
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|)
condition|)
block|{
name|ContextBuilder
name|contextBuilderMessageID
init|=
operator|new
name|ContextBuilderMessageID
argument_list|()
decl_stmt|;
name|ContextBuilder
name|contextBuilderCorrelationID
init|=
operator|new
name|ContextBuilder
argument_list|()
block|{
specifier|public
name|CamelContext
name|buildContext
parameter_list|(
name|CamelContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
name|ConnectionFactory
name|connectionFactory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"vm://localhost?broker.persistent=false"
argument_list|)
decl_stmt|;
name|JmsComponent
name|jmsComponent
init|=
name|jmsComponentAutoAcknowledge
argument_list|(
name|connectionFactory
argument_list|)
decl_stmt|;
name|jmsComponent
operator|.
name|setUseMessageIDAsCorrelationID
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jmsComponent
operator|.
name|setConcurrentConsumers
argument_list|(
name|maxServerTasks
argument_list|)
expr_stmt|;
comment|/*                     jmsComponent.getConfiguration().setRequestTimeout(600000);                     jmsComponent.getConfiguration().setRequestMapPurgePollTimeMillis(60000);                     */
name|context
operator|.
name|addComponent
argument_list|(
name|componentName
argument_list|,
name|jmsComponent
argument_list|)
expr_stmt|;
return|return
name|context
return|;
block|}
block|}
decl_stmt|;
name|ContextBuilder
name|contextBuilderMessageIDNamedReplyToSelector
init|=
operator|new
name|ContextBuilder
argument_list|()
block|{
specifier|public
name|CamelContext
name|buildContext
parameter_list|(
name|CamelContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
name|ConnectionFactory
name|connectionFactory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"vm://localhost?broker.persistent=false"
argument_list|)
decl_stmt|;
name|JmsComponent
name|jmsComponent
init|=
name|jmsComponentAutoAcknowledge
argument_list|(
name|connectionFactory
argument_list|)
decl_stmt|;
name|jmsComponent
operator|.
name|setUseMessageIDAsCorrelationID
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jmsComponent
operator|.
name|setConcurrentConsumers
argument_list|(
name|maxServerTasks
argument_list|)
expr_stmt|;
name|jmsComponent
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setReplyToDestinationSelectorName
argument_list|(
name|REPLY_TO_DESTINATION_SELECTOR_NAME
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
name|componentName
argument_list|,
name|jmsComponent
argument_list|)
expr_stmt|;
return|return
name|context
return|;
block|}
block|}
decl_stmt|;
name|ContextBuilder
name|contextBuilderCorrelationIDNamedReplyToSelector
init|=
operator|new
name|ContextBuilder
argument_list|()
block|{
specifier|public
name|CamelContext
name|buildContext
parameter_list|(
name|CamelContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
name|ConnectionFactory
name|connectionFactory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"vm://localhost?broker.persistent=false"
argument_list|)
decl_stmt|;
name|JmsComponent
name|jmsComponent
init|=
name|jmsComponentAutoAcknowledge
argument_list|(
name|connectionFactory
argument_list|)
decl_stmt|;
name|jmsComponent
operator|.
name|setUseMessageIDAsCorrelationID
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jmsComponent
operator|.
name|setConcurrentConsumers
argument_list|(
name|maxServerTasks
argument_list|)
expr_stmt|;
name|jmsComponent
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setReplyToDestinationSelectorName
argument_list|(
name|REPLY_TO_DESTINATION_SELECTOR_NAME
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
name|componentName
argument_list|,
name|jmsComponent
argument_list|)
expr_stmt|;
return|return
name|context
return|;
block|}
block|}
decl_stmt|;
name|ContextBuilder
name|contextBuilderCorrelationIDDiffComp
init|=
operator|new
name|ContextBuilder
argument_list|()
block|{
specifier|public
name|CamelContext
name|buildContext
parameter_list|(
name|CamelContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
name|ConnectionFactory
name|connectionFactory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"vm://localhost?broker.persistent=false"
argument_list|)
decl_stmt|;
name|JmsComponent
name|jmsComponent
init|=
name|jmsComponentAutoAcknowledge
argument_list|(
name|connectionFactory
argument_list|)
decl_stmt|;
name|jmsComponent
operator|.
name|setUseMessageIDAsCorrelationID
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jmsComponent
operator|.
name|setConcurrentConsumers
argument_list|(
name|maxServerTasks
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
name|componentName
argument_list|,
name|jmsComponent
argument_list|)
expr_stmt|;
name|jmsComponent
operator|=
name|jmsComponentAutoAcknowledge
argument_list|(
name|connectionFactory
argument_list|)
expr_stmt|;
name|jmsComponent
operator|.
name|setUseMessageIDAsCorrelationID
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|jmsComponent
operator|.
name|setConcurrentConsumers
argument_list|(
name|maxServerTasks
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
name|componentName1
argument_list|,
name|jmsComponent
argument_list|)
expr_stmt|;
return|return
name|context
return|;
block|}
block|}
decl_stmt|;
name|ContextBuilder
name|contextBuilderMessageIDDiffComp
init|=
operator|new
name|ContextBuilder
argument_list|()
block|{
specifier|public
name|CamelContext
name|buildContext
parameter_list|(
name|CamelContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
name|ConnectionFactory
name|connectionFactory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
literal|"vm://localhost?broker.persistent=false"
argument_list|)
decl_stmt|;
name|JmsComponent
name|jmsComponent
init|=
name|jmsComponentAutoAcknowledge
argument_list|(
name|connectionFactory
argument_list|)
decl_stmt|;
name|jmsComponent
operator|.
name|setUseMessageIDAsCorrelationID
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jmsComponent
operator|.
name|setConcurrentConsumers
argument_list|(
name|maxServerTasks
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
name|componentName
argument_list|,
name|jmsComponent
argument_list|)
expr_stmt|;
name|jmsComponent
operator|=
name|jmsComponentAutoAcknowledge
argument_list|(
name|connectionFactory
argument_list|)
expr_stmt|;
name|jmsComponent
operator|.
name|setUseMessageIDAsCorrelationID
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jmsComponent
operator|.
name|setConcurrentConsumers
argument_list|(
name|maxServerTasks
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
name|componentName1
argument_list|,
name|jmsComponent
argument_list|)
expr_stmt|;
return|return
name|context
return|;
block|}
block|}
decl_stmt|;
name|contextBuilders
operator|.
name|put
argument_list|(
literal|"testUseMessageIDAsCorrelationID"
argument_list|,
name|contextBuilderMessageID
argument_list|)
expr_stmt|;
name|contextBuilders
operator|.
name|put
argument_list|(
literal|"testUseCorrelationID"
argument_list|,
name|contextBuilderCorrelationID
argument_list|)
expr_stmt|;
name|contextBuilders
operator|.
name|put
argument_list|(
literal|"testUseMessageIDAsCorrelationIDMultiNode"
argument_list|,
name|contextBuilderMessageID
argument_list|)
expr_stmt|;
name|contextBuilders
operator|.
name|put
argument_list|(
literal|"testUseCorrelationIDMultiNode"
argument_list|,
name|contextBuilderCorrelationID
argument_list|)
expr_stmt|;
name|contextBuilders
operator|.
name|put
argument_list|(
literal|"testUseMessageIDAsCorrelationIDPersistReplyToMultiNode"
argument_list|,
name|contextBuilderMessageID
argument_list|)
expr_stmt|;
name|contextBuilders
operator|.
name|put
argument_list|(
literal|"testUseCorrelationIDPersistReplyToMultiNode"
argument_list|,
name|contextBuilderCorrelationID
argument_list|)
expr_stmt|;
name|contextBuilders
operator|.
name|put
argument_list|(
literal|"testUseMessageIDAsCorrelationIDPersistMultiReplyToMultiNode"
argument_list|,
name|contextBuilderMessageID
argument_list|)
expr_stmt|;
name|contextBuilders
operator|.
name|put
argument_list|(
literal|"testUseCorrelationIDPersistMultiReplyToMultiNode"
argument_list|,
name|contextBuilderCorrelationID
argument_list|)
expr_stmt|;
name|contextBuilders
operator|.
name|put
argument_list|(
literal|"testUseMessageIDAsCorrelationIDPersistMultiReplyToWithNamedSelectorMultiNode"
argument_list|,
name|contextBuilderMessageIDNamedReplyToSelector
argument_list|)
expr_stmt|;
name|contextBuilders
operator|.
name|put
argument_list|(
literal|"testUseCorrelationIDPersistMultiReplyToWithNamedSelectorMultiNode"
argument_list|,
name|contextBuilderCorrelationIDNamedReplyToSelector
argument_list|)
expr_stmt|;
name|contextBuilders
operator|.
name|put
argument_list|(
literal|"testUseCorrelationIDMultiNodeDiffComponents"
argument_list|,
name|contextBuilderCorrelationIDDiffComp
argument_list|)
expr_stmt|;
name|contextBuilders
operator|.
name|put
argument_list|(
literal|"testUseMessageIDAsCorrelationIDMultiNodeDiffComponents"
argument_list|,
name|contextBuilderMessageIDDiffComp
argument_list|)
expr_stmt|;
name|contextBuilders
operator|.
name|put
argument_list|(
literal|"testUseMessageIDAsCorrelationIDTimeout"
argument_list|,
name|contextBuilderMessageID
argument_list|)
expr_stmt|;
name|contextBuilders
operator|.
name|put
argument_list|(
literal|"testUseCorrelationIDTimeout"
argument_list|,
name|contextBuilderMessageID
argument_list|)
expr_stmt|;
name|routeBuilders
operator|.
name|put
argument_list|(
literal|"testUseMessageIDAsCorrelationID"
argument_list|,
operator|new
name|SingleNodeRouteBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|routeBuilders
operator|.
name|put
argument_list|(
literal|"testUseMessageIDAsCorrelationIDReplyToTempDestinationPerComponent"
argument_list|,
operator|new
name|SingleNodeRouteBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|routeBuilders
operator|.
name|put
argument_list|(
literal|"testUseMessageIDAsCorrelationIDReplyToTempDestinationPerProducer"
argument_list|,
operator|new
name|SingleNodeRouteBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|routeBuilders
operator|.
name|put
argument_list|(
literal|"testUseCorrelationID"
argument_list|,
operator|new
name|SingleNodeRouteBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|routeBuilders
operator|.
name|put
argument_list|(
literal|"testUseMessageIDAsCorrelationIDMultiNode"
argument_list|,
operator|new
name|MultiNodeRouteBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|routeBuilders
operator|.
name|put
argument_list|(
literal|"testUseCorrelationIDMultiNode"
argument_list|,
operator|new
name|MultiNodeRouteBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|routeBuilders
operator|.
name|put
argument_list|(
literal|"testUseMessageIDAsCorrelationIDPersistReplyToMultiNode"
argument_list|,
operator|new
name|MultiNodeRouteBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|routeBuilders
operator|.
name|put
argument_list|(
literal|"testUseCorrelationIDPersistReplyToMultiNode"
argument_list|,
operator|new
name|MultiNodeRouteBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|routeBuilders
operator|.
name|put
argument_list|(
literal|"testUseMessageIDAsCorrelationIDPersistMultiReplyToMultiNode"
argument_list|,
operator|new
name|MultiNodeReplyToRouteBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|routeBuilders
operator|.
name|put
argument_list|(
literal|"testUseCorrelationIDPersistMultiReplyToMultiNode"
argument_list|,
operator|new
name|MultiNodeReplyToRouteBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|routeBuilders
operator|.
name|put
argument_list|(
literal|"testUseMessageIDAsCorrelationIDPersistMultiReplyToWithNamedSelectorMultiNode"
argument_list|,
operator|new
name|MultiNodeReplyToRouteBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|routeBuilders
operator|.
name|put
argument_list|(
literal|"testUseCorrelationIDPersistMultiReplyToWithNamedSelectorMultiNode"
argument_list|,
operator|new
name|MultiNodeReplyToRouteBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|routeBuilders
operator|.
name|put
argument_list|(
literal|"testUseCorrelationIDMultiNodeDiffComponents"
argument_list|,
operator|new
name|MultiNodeDiffCompRouteBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|routeBuilders
operator|.
name|put
argument_list|(
literal|"testUseMessageIDAsCorrelationIDMultiNodeDiffComponents"
argument_list|,
operator|new
name|MultiNodeDiffCompRouteBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|routeBuilders
operator|.
name|put
argument_list|(
literal|"testUseMessageIDAsCorrelationIDTimeout"
argument_list|,
operator|new
name|SingleNodeDeadEndRouteBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|routeBuilders
operator|.
name|put
argument_list|(
literal|"testUseCorrelationIDTimeout"
argument_list|,
operator|new
name|SingleNodeDeadEndRouteBuilder
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|Task
specifier|public
class|class
name|Task
extends|extends
name|Thread
block|{
DECL|field|counter
specifier|private
name|AtomicInteger
name|counter
decl_stmt|;
DECL|field|fromUri
specifier|private
name|String
name|fromUri
decl_stmt|;
DECL|field|ok
specifier|private
specifier|volatile
name|boolean
name|ok
init|=
literal|true
decl_stmt|;
DECL|field|message
specifier|private
specifier|volatile
name|String
name|message
init|=
literal|""
decl_stmt|;
DECL|method|Task (AtomicInteger counter, String fromUri)
specifier|public
name|Task
parameter_list|(
name|AtomicInteger
name|counter
parameter_list|,
name|String
name|fromUri
parameter_list|)
block|{
name|this
operator|.
name|counter
operator|=
name|counter
expr_stmt|;
name|this
operator|.
name|fromUri
operator|=
name|fromUri
expr_stmt|;
block|}
DECL|method|run ()
specifier|public
name|void
name|run
parameter_list|()
block|{
comment|// template must be started
try|try
block|{
name|template
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// ignore
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|maxCalls
condition|;
name|i
operator|++
control|)
block|{
name|int
name|callId
init|=
name|counter
operator|.
name|incrementAndGet
argument_list|()
decl_stmt|;
name|Object
name|reply
init|=
literal|""
decl_stmt|;
try|try
block|{
name|reply
operator|=
name|template
operator|.
name|requestBody
argument_list|(
name|fromUri
argument_list|,
name|request
operator|+
literal|"-"
operator|+
name|callId
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RuntimeCamelException
name|e
parameter_list|)
block|{
comment|// expected in some cases
block|}
if|if
condition|(
operator|!
name|reply
operator|.
name|equals
argument_list|(
name|expectedReply
operator|+
literal|"-"
operator|+
name|callId
argument_list|)
condition|)
block|{
name|ok
operator|=
literal|false
expr_stmt|;
name|message
operator|=
literal|"Unexpected reply. Expected: '"
operator|+
name|expectedReply
operator|+
literal|"-"
operator|+
name|callId
operator|+
literal|"'; Received: '"
operator|+
name|reply
operator|+
literal|"'"
expr_stmt|;
block|}
block|}
block|}
DECL|method|assertSuccess ()
specifier|public
name|void
name|assertSuccess
parameter_list|()
block|{
name|assertTrue
argument_list|(
name|message
argument_list|,
name|ok
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|setUp ()
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|init
argument_list|()
expr_stmt|;
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
block|}
DECL|method|testUseMessageIDAsCorrelationID ()
specifier|public
name|void
name|testUseMessageIDAsCorrelationID
parameter_list|()
throws|throws
name|Exception
block|{
name|runRequestReplyThreaded
argument_list|(
name|endpointUriA
argument_list|)
expr_stmt|;
block|}
DECL|method|testUseCorrelationID ()
specifier|public
name|void
name|testUseCorrelationID
parameter_list|()
throws|throws
name|Exception
block|{
name|runRequestReplyThreaded
argument_list|(
name|endpointUriA
argument_list|)
expr_stmt|;
block|}
DECL|method|testUseMessageIDAsCorrelationIDMultiNode ()
specifier|public
name|void
name|testUseMessageIDAsCorrelationIDMultiNode
parameter_list|()
throws|throws
name|Exception
block|{
name|runRequestReplyThreaded
argument_list|(
name|endpointUriA
argument_list|)
expr_stmt|;
block|}
DECL|method|testUseCorrelationIDMultiNode ()
specifier|public
name|void
name|testUseCorrelationIDMultiNode
parameter_list|()
throws|throws
name|Exception
block|{
name|runRequestReplyThreaded
argument_list|(
name|endpointUriA
argument_list|)
expr_stmt|;
block|}
DECL|method|testUseMessageIDAsCorrelationIDPersistReplyToMultiNode ()
specifier|public
name|void
name|testUseMessageIDAsCorrelationIDPersistReplyToMultiNode
parameter_list|()
throws|throws
name|Exception
block|{
name|runRequestReplyThreaded
argument_list|(
name|endpointReplyToUriA
argument_list|)
expr_stmt|;
block|}
DECL|method|testUseCorrelationIDPersistReplyToMultiNode ()
specifier|public
name|void
name|testUseCorrelationIDPersistReplyToMultiNode
parameter_list|()
throws|throws
name|Exception
block|{
name|runRequestReplyThreaded
argument_list|(
name|endpointUriA
argument_list|)
expr_stmt|;
block|}
comment|// (1)
comment|// note this is an inefficient way of correlating replies to a persistent queue
comment|// a consumer will have to be created for each reply message
comment|// see testUseMessageIDAsCorrelationIDPersistMultiReplyToWithNamedSelectorMultiNode
comment|// or testCorrelationIDPersistMultiReplyToWithNamedSelectorMultiNode
comment|// for a faster way to do this. Note however that in this case the message copy has to occur
comment|// between consumer -> producer as the selector value needs to be propagated to the ultimate
comment|// destination, which in turn will copy this value back into the reply message
DECL|method|testUseMessageIDAsCorrelationIDPersistMultiReplyToMultiNode ()
specifier|public
name|void
name|testUseMessageIDAsCorrelationIDPersistMultiReplyToMultiNode
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|oldMaxTasks
init|=
name|maxTasks
decl_stmt|;
name|int
name|oldMaxServerTasks
init|=
name|maxServerTasks
decl_stmt|;
name|int
name|oldMaxCalls
init|=
name|maxCalls
decl_stmt|;
name|maxTasks
operator|=
literal|10
expr_stmt|;
name|maxServerTasks
operator|=
literal|1
expr_stmt|;
name|maxCalls
operator|=
literal|2
expr_stmt|;
try|try
block|{
name|runRequestReplyThreaded
argument_list|(
name|endpointUriA
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|maxTasks
operator|=
name|oldMaxTasks
expr_stmt|;
name|maxServerTasks
operator|=
name|oldMaxServerTasks
expr_stmt|;
name|maxCalls
operator|=
name|oldMaxCalls
expr_stmt|;
block|}
block|}
comment|// see (1)
DECL|method|testUseCorrelationIDPersistMultiReplyToMultiNode ()
specifier|public
name|void
name|testUseCorrelationIDPersistMultiReplyToMultiNode
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|oldMaxTasks
init|=
name|maxTasks
decl_stmt|;
name|int
name|oldMaxServerTasks
init|=
name|maxServerTasks
decl_stmt|;
name|int
name|oldMaxCalls
init|=
name|maxCalls
decl_stmt|;
name|maxTasks
operator|=
literal|10
expr_stmt|;
name|maxServerTasks
operator|=
literal|1
expr_stmt|;
name|maxCalls
operator|=
literal|2
expr_stmt|;
try|try
block|{
name|runRequestReplyThreaded
argument_list|(
name|endpointUriA
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|maxTasks
operator|=
name|oldMaxTasks
expr_stmt|;
name|maxServerTasks
operator|=
name|oldMaxServerTasks
expr_stmt|;
name|maxCalls
operator|=
name|oldMaxCalls
expr_stmt|;
block|}
block|}
DECL|method|testUseMessageIDAsCorrelationIDPersistMultiReplyToWithNamedSelectorMultiNode ()
specifier|public
name|void
name|testUseMessageIDAsCorrelationIDPersistMultiReplyToWithNamedSelectorMultiNode
parameter_list|()
throws|throws
name|Exception
block|{
name|runRequestReplyThreaded
argument_list|(
name|endpointUriA
argument_list|)
expr_stmt|;
block|}
DECL|method|testUseCorrelationIDPersistMultiReplyToWithNamedSelectorMultiNode ()
specifier|public
name|void
name|testUseCorrelationIDPersistMultiReplyToWithNamedSelectorMultiNode
parameter_list|()
throws|throws
name|Exception
block|{
name|runRequestReplyThreaded
argument_list|(
name|endpointUriA
argument_list|)
expr_stmt|;
block|}
DECL|method|testUseCorrelationIDTimeout ()
specifier|public
name|void
name|testUseCorrelationIDTimeout
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsComponent
name|c
init|=
operator|(
name|JmsComponent
operator|)
name|context
operator|.
name|getComponent
argument_list|(
name|componentName
argument_list|)
decl_stmt|;
name|c
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setRequestTimeout
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|Object
name|reply
init|=
literal|""
decl_stmt|;
try|try
block|{
name|reply
operator|=
name|template
operator|.
name|requestBody
argument_list|(
name|endpointUriA
argument_list|,
name|request
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RuntimeCamelException
name|e
parameter_list|)
block|{
name|assertIsInstanceOf
argument_list|(
name|ExchangeTimedOutException
operator|.
name|class
argument_list|,
name|e
operator|.
name|getCause
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|reply
argument_list|)
expr_stmt|;
block|}
DECL|method|testUseMessageIDAsCorrelationIDTimeout ()
specifier|public
name|void
name|testUseMessageIDAsCorrelationIDTimeout
parameter_list|()
throws|throws
name|Exception
block|{
name|JmsComponent
name|c
init|=
operator|(
name|JmsComponent
operator|)
name|context
operator|.
name|getComponent
argument_list|(
name|componentName
argument_list|)
decl_stmt|;
name|c
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setRequestTimeout
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|Object
name|reply
init|=
literal|""
decl_stmt|;
try|try
block|{
name|reply
operator|=
name|template
operator|.
name|requestBody
argument_list|(
name|endpointUriA
argument_list|,
name|request
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RuntimeCamelException
name|e
parameter_list|)
block|{
name|assertIsInstanceOf
argument_list|(
name|ExchangeTimedOutException
operator|.
name|class
argument_list|,
name|e
operator|.
name|getCause
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|reply
argument_list|)
expr_stmt|;
block|}
DECL|method|testUseCorrelationIDMultiNodeDiffComponents ()
specifier|public
name|void
name|testUseCorrelationIDMultiNodeDiffComponents
parameter_list|()
throws|throws
name|Exception
block|{
name|runRequestReplyThreaded
argument_list|(
name|endpointUriA
argument_list|)
expr_stmt|;
block|}
DECL|method|testUseMessageIDAsCorrelationIDMultiNodeDiffComponents ()
specifier|public
name|void
name|testUseMessageIDAsCorrelationIDMultiNodeDiffComponents
parameter_list|()
throws|throws
name|Exception
block|{
name|runRequestReplyThreaded
argument_list|(
name|endpointUriA
argument_list|)
expr_stmt|;
block|}
DECL|method|runRequestReplyThreaded (String fromUri)
specifier|protected
name|void
name|runRequestReplyThreaded
parameter_list|(
name|String
name|fromUri
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|AtomicInteger
name|counter
init|=
operator|new
name|AtomicInteger
argument_list|(
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Task
index|[]
name|tasks
init|=
operator|new
name|Task
index|[
name|maxTasks
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|maxTasks
condition|;
operator|++
name|i
control|)
block|{
name|Task
name|task
init|=
operator|new
name|Task
argument_list|(
name|counter
argument_list|,
name|fromUri
argument_list|)
decl_stmt|;
name|tasks
index|[
name|i
index|]
operator|=
name|task
expr_stmt|;
name|task
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|maxTasks
condition|;
operator|++
name|i
control|)
block|{
name|tasks
index|[
name|i
index|]
operator|.
name|join
argument_list|()
expr_stmt|;
name|tasks
index|[
name|i
index|]
operator|.
name|assertSuccess
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|createCamelContext ()
specifier|protected
name|CamelContext
name|createCamelContext
parameter_list|()
throws|throws
name|Exception
block|{
name|CamelContext
name|camelContext
init|=
name|super
operator|.
name|createCamelContext
argument_list|()
decl_stmt|;
return|return
name|contextBuilders
operator|.
name|get
argument_list|(
name|getName
argument_list|()
argument_list|)
operator|.
name|buildContext
argument_list|(
name|camelContext
argument_list|)
return|;
block|}
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|routeBuilders
operator|.
name|get
argument_list|(
name|getName
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

