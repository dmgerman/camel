begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jms.requestor
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jms
operator|.
name|requestor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigInteger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ScheduledExecutorService
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ExceptionListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jms
operator|.
name|JmsConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jms
operator|.
name|requestor
operator|.
name|DeferredRequestReplyMap
operator|.
name|DeferredMessageSentCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|task
operator|.
name|TaskExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|listener
operator|.
name|AbstractMessageListenerContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|listener
operator|.
name|DefaultMessageListenerContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|listener
operator|.
name|DefaultMessageListenerContainer102
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|jms
operator|.
name|support
operator|.
name|destination
operator|.
name|DestinationResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|transaction
operator|.
name|PlatformTransactionManager
import|;
end_import

begin_class
DECL|class|PersistentReplyToRequestor
specifier|public
class|class
name|PersistentReplyToRequestor
extends|extends
name|Requestor
block|{
DECL|field|replyToSelectorValue
specifier|private
name|String
name|replyToSelectorValue
decl_stmt|;
DECL|class|DestinationResolverDelegate
specifier|public
class|class
name|DestinationResolverDelegate
implements|implements
name|DestinationResolver
block|{
DECL|field|delegate
specifier|private
name|DestinationResolver
name|delegate
decl_stmt|;
DECL|field|destination
specifier|private
name|Destination
name|destination
decl_stmt|;
DECL|method|DestinationResolverDelegate (DestinationResolver delegate)
specifier|public
name|DestinationResolverDelegate
parameter_list|(
name|DestinationResolver
name|delegate
parameter_list|)
block|{
name|this
operator|.
name|delegate
operator|=
name|delegate
expr_stmt|;
block|}
DECL|method|resolveDestinationName (Session session, String destinationName, boolean pubSubDomain)
specifier|public
name|Destination
name|resolveDestinationName
parameter_list|(
name|Session
name|session
parameter_list|,
name|String
name|destinationName
parameter_list|,
name|boolean
name|pubSubDomain
parameter_list|)
throws|throws
name|JMSException
block|{
synchronized|synchronized
init|(
name|getOutterInstance
argument_list|()
init|)
block|{
try|try
block|{
if|if
condition|(
name|destination
operator|==
literal|null
condition|)
block|{
name|destination
operator|=
name|delegate
operator|.
name|resolveDestinationName
argument_list|(
name|session
argument_list|,
name|destinationName
argument_list|,
name|pubSubDomain
argument_list|)
expr_stmt|;
name|setReplyTo
argument_list|(
name|destination
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|getOutterInstance
argument_list|()
operator|.
name|notifyAll
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|destination
return|;
block|}
block|}
empty_stmt|;
DECL|interface|MessageSelectorComposer
specifier|public
specifier|static
interface|interface
name|MessageSelectorComposer
block|{
DECL|method|addCorrelationID (String id)
name|void
name|addCorrelationID
parameter_list|(
name|String
name|id
parameter_list|)
function_decl|;
DECL|method|removeCorrelationID (String id)
name|void
name|removeCorrelationID
parameter_list|(
name|String
name|id
parameter_list|)
function_decl|;
block|}
DECL|class|CamelDefaultMessageListenerContainer102
specifier|public
specifier|static
class|class
name|CamelDefaultMessageListenerContainer102
extends|extends
name|DefaultMessageListenerContainer102
implements|implements
name|MessageSelectorComposer
block|{
DECL|field|provider
name|MessageSelectorProvider
name|provider
init|=
operator|new
name|MessageSelectorProvider
argument_list|()
decl_stmt|;
DECL|method|addCorrelationID (String id)
specifier|public
name|void
name|addCorrelationID
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|provider
operator|.
name|addCorrelationID
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
DECL|method|removeCorrelationID (String id)
specifier|public
name|void
name|removeCorrelationID
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|provider
operator|.
name|removeCorrelationID
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setMessageSelector (String messageSelector)
specifier|public
name|void
name|setMessageSelector
parameter_list|(
name|String
name|messageSelector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
DECL|method|getMessageSelector ()
specifier|public
name|String
name|getMessageSelector
parameter_list|()
block|{
return|return
name|provider
operator|.
name|get
argument_list|()
return|;
block|}
block|}
DECL|class|CamelDefaultMessageListenerContainer
specifier|public
specifier|static
class|class
name|CamelDefaultMessageListenerContainer
extends|extends
name|DefaultMessageListenerContainer
implements|implements
name|MessageSelectorComposer
block|{
DECL|field|provider
name|MessageSelectorProvider
name|provider
init|=
operator|new
name|MessageSelectorProvider
argument_list|()
decl_stmt|;
DECL|method|addCorrelationID (String id)
specifier|public
name|void
name|addCorrelationID
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|provider
operator|.
name|addCorrelationID
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
DECL|method|removeCorrelationID (String id)
specifier|public
name|void
name|removeCorrelationID
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|provider
operator|.
name|removeCorrelationID
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setMessageSelector (String messageSelector)
specifier|public
name|void
name|setMessageSelector
parameter_list|(
name|String
name|messageSelector
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
DECL|method|getMessageSelector ()
specifier|public
name|String
name|getMessageSelector
parameter_list|()
block|{
return|return
name|provider
operator|.
name|get
argument_list|()
return|;
block|}
block|}
DECL|method|PersistentReplyToRequestor (JmsConfiguration configuration, ScheduledExecutorService executorService)
specifier|public
name|PersistentReplyToRequestor
parameter_list|(
name|JmsConfiguration
name|configuration
parameter_list|,
name|ScheduledExecutorService
name|executorService
parameter_list|)
block|{
name|super
argument_list|(
name|configuration
argument_list|,
name|executorService
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createFutureHandler (String correlationID)
specifier|protected
name|FutureHandler
name|createFutureHandler
parameter_list|(
name|String
name|correlationID
parameter_list|)
block|{
name|boolean
name|dynamicSelector
init|=
name|getConfiguration
argument_list|()
operator|.
name|getReplyToDestinationSelectorName
argument_list|()
operator|==
literal|null
decl_stmt|;
if|if
condition|(
name|dynamicSelector
condition|)
block|{
return|return
operator|new
name|PersistentReplyToFutureHandler
argument_list|(
name|this
argument_list|,
name|correlationID
argument_list|)
return|;
block|}
return|return
operator|new
name|FutureHandler
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|createFutureHandler (DeferredMessageSentCallback callback)
specifier|protected
name|FutureHandler
name|createFutureHandler
parameter_list|(
name|DeferredMessageSentCallback
name|callback
parameter_list|)
block|{
name|boolean
name|dynamicSelector
init|=
name|getConfiguration
argument_list|()
operator|.
name|getReplyToDestinationSelectorName
argument_list|()
operator|==
literal|null
decl_stmt|;
if|if
condition|(
name|dynamicSelector
condition|)
block|{
return|return
operator|new
name|PersistentReplyToFutureHandler
argument_list|(
name|this
argument_list|,
name|callback
argument_list|)
return|;
block|}
return|return
operator|new
name|FutureHandler
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|createListenerContainer ()
specifier|public
name|AbstractMessageListenerContainer
name|createListenerContainer
parameter_list|()
block|{
name|JmsConfiguration
name|config
init|=
name|getConfiguration
argument_list|()
decl_stmt|;
name|String
name|replyToSelectorName
init|=
name|getConfiguration
argument_list|()
operator|.
name|getReplyToDestinationSelectorName
argument_list|()
decl_stmt|;
name|AbstractMessageListenerContainer
name|container
init|=
name|config
operator|.
name|isUseVersion102
argument_list|()
condition|?
operator|(
name|replyToSelectorName
operator|!=
literal|null
operator|)
condition|?
operator|new
name|DefaultMessageListenerContainer102
argument_list|()
else|:
operator|new
name|CamelDefaultMessageListenerContainer102
argument_list|()
else|:
operator|(
name|replyToSelectorName
operator|!=
literal|null
operator|)
condition|?
operator|new
name|DefaultMessageListenerContainer
argument_list|()
else|:
operator|new
name|CamelDefaultMessageListenerContainer
argument_list|()
decl_stmt|;
name|container
operator|.
name|setConnectionFactory
argument_list|(
name|config
operator|.
name|getListenerConnectionFactory
argument_list|()
argument_list|)
expr_stmt|;
name|DestinationResolver
name|resolver
init|=
name|config
operator|.
name|getDestinationResolver
argument_list|()
decl_stmt|;
if|if
condition|(
name|resolver
operator|==
literal|null
condition|)
block|{
name|resolver
operator|=
name|container
operator|.
name|getDestinationResolver
argument_list|()
expr_stmt|;
block|}
name|container
operator|.
name|setDestinationResolver
argument_list|(
operator|new
name|DestinationResolverDelegate
argument_list|(
name|resolver
argument_list|)
argument_list|)
expr_stmt|;
name|container
operator|.
name|setDestinationName
argument_list|(
name|getConfiguration
argument_list|()
operator|.
name|getReplyTo
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|replyToSelectorName
operator|!=
literal|null
condition|)
block|{
name|replyToSelectorValue
operator|=
literal|"ID:"
operator|+
operator|new
name|BigInteger
argument_list|(
literal|24
operator|*
literal|8
argument_list|,
operator|new
name|Random
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|(
literal|16
argument_list|)
expr_stmt|;
name|container
operator|.
name|setMessageSelector
argument_list|(
name|replyToSelectorName
operator|+
literal|"='"
operator|+
name|replyToSelectorValue
operator|+
literal|"'"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
operator|(
operator|(
name|MessageSelectorComposer
operator|)
name|container
operator|)
operator|.
name|addCorrelationID
argument_list|(
literal|"ID:"
operator|+
operator|new
name|BigInteger
argument_list|(
literal|24
operator|*
literal|8
argument_list|,
operator|new
name|Random
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|(
literal|16
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|container
operator|.
name|setAutoStartup
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|container
operator|.
name|setMessageListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|container
operator|.
name|setPubSubDomain
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|container
operator|.
name|setSubscriptionDurable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|ExceptionListener
name|exceptionListener
init|=
name|config
operator|.
name|getExceptionListener
argument_list|()
decl_stmt|;
if|if
condition|(
name|exceptionListener
operator|!=
literal|null
condition|)
block|{
name|container
operator|.
name|setExceptionListener
argument_list|(
name|exceptionListener
argument_list|)
expr_stmt|;
block|}
name|container
operator|.
name|setSessionTransacted
argument_list|(
name|config
operator|.
name|isTransacted
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|config
operator|.
name|isTransacted
argument_list|()
condition|)
block|{
name|container
operator|.
name|setSessionAcknowledgeMode
argument_list|(
name|Session
operator|.
name|SESSION_TRANSACTED
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|config
operator|.
name|getAcknowledgementMode
argument_list|()
operator|>=
literal|0
condition|)
block|{
name|container
operator|.
name|setSessionAcknowledgeMode
argument_list|(
name|config
operator|.
name|getAcknowledgementMode
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|config
operator|.
name|getAcknowledgementModeName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|container
operator|.
name|setSessionAcknowledgeModeName
argument_list|(
name|config
operator|.
name|getAcknowledgementModeName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|container
operator|instanceof
name|DefaultMessageListenerContainer
condition|)
block|{
name|DefaultMessageListenerContainer
name|defContainer
init|=
operator|(
name|DefaultMessageListenerContainer
operator|)
name|container
decl_stmt|;
name|defContainer
operator|.
name|setConcurrentConsumers
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|defContainer
operator|.
name|setCacheLevel
argument_list|(
name|DefaultMessageListenerContainer
operator|.
name|CACHE_SESSION
argument_list|)
expr_stmt|;
if|if
condition|(
name|config
operator|.
name|getReceiveTimeout
argument_list|()
operator|>=
literal|0
condition|)
block|{
name|defContainer
operator|.
name|setReceiveTimeout
argument_list|(
name|config
operator|.
name|getReceiveTimeout
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|config
operator|.
name|getRecoveryInterval
argument_list|()
operator|>=
literal|0
condition|)
block|{
name|defContainer
operator|.
name|setRecoveryInterval
argument_list|(
name|config
operator|.
name|getRecoveryInterval
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|TaskExecutor
name|taskExecutor
init|=
name|config
operator|.
name|getTaskExecutor
argument_list|()
decl_stmt|;
if|if
condition|(
name|taskExecutor
operator|!=
literal|null
condition|)
block|{
name|defContainer
operator|.
name|setTaskExecutor
argument_list|(
name|taskExecutor
argument_list|)
expr_stmt|;
block|}
name|PlatformTransactionManager
name|tm
init|=
name|config
operator|.
name|getTransactionManager
argument_list|()
decl_stmt|;
if|if
condition|(
name|tm
operator|!=
literal|null
condition|)
block|{
name|defContainer
operator|.
name|setTransactionManager
argument_list|(
name|tm
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|config
operator|.
name|isTransacted
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Property transacted is enabled but a transactionManager was not injected!"
argument_list|)
throw|;
block|}
if|if
condition|(
name|config
operator|.
name|getTransactionName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|defContainer
operator|.
name|setTransactionName
argument_list|(
name|config
operator|.
name|getTransactionName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|config
operator|.
name|getTransactionTimeout
argument_list|()
operator|>=
literal|0
condition|)
block|{
name|defContainer
operator|.
name|setTransactionTimeout
argument_list|(
name|config
operator|.
name|getTransactionTimeout
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|container
return|;
block|}
annotation|@
name|Override
DECL|method|setReplyToSelectorHeader (org.apache.camel.Message in, Message jmsIn)
specifier|public
name|void
name|setReplyToSelectorHeader
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
name|in
parameter_list|,
name|Message
name|jmsIn
parameter_list|)
throws|throws
name|JMSException
block|{
name|String
name|replyToSelectorName
init|=
name|getConfiguration
argument_list|()
operator|.
name|getReplyToDestinationSelectorName
argument_list|()
decl_stmt|;
if|if
condition|(
name|replyToSelectorValue
operator|!=
literal|null
condition|)
block|{
name|in
operator|.
name|setHeader
argument_list|(
name|replyToSelectorName
argument_list|,
name|replyToSelectorValue
argument_list|)
expr_stmt|;
name|jmsIn
operator|.
name|setStringProperty
argument_list|(
name|replyToSelectorName
argument_list|,
name|replyToSelectorValue
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

