begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jms.reply
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jms
operator|.
name|reply
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentSkipListSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|TimeoutMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * A creator which can build the JMS message selector query string to use  * with a shared reply-to queue, so we can select the correct messages we expect as replies.  */
end_comment

begin_class
DECL|class|MessageSelectorCreator
specifier|public
class|class
name|MessageSelectorCreator
block|{
DECL|field|LOG
specifier|protected
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MessageSelectorCreator
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|timeoutMap
specifier|protected
specifier|final
name|TimeoutMap
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|timeoutMap
decl_stmt|;
DECL|field|correlationIds
specifier|protected
specifier|final
name|ConcurrentSkipListSet
argument_list|<
name|String
argument_list|>
name|correlationIds
decl_stmt|;
DECL|field|dirty
specifier|protected
specifier|volatile
name|boolean
name|dirty
init|=
literal|true
decl_stmt|;
DECL|field|expression
specifier|protected
name|StringBuilder
name|expression
decl_stmt|;
DECL|method|MessageSelectorCreator (CorrelationTimeoutMap timeoutMap)
specifier|public
name|MessageSelectorCreator
parameter_list|(
name|CorrelationTimeoutMap
name|timeoutMap
parameter_list|)
block|{
name|this
operator|.
name|timeoutMap
operator|=
name|timeoutMap
expr_stmt|;
name|this
operator|.
name|timeoutMap
operator|.
name|addListener
argument_list|(
parameter_list|(
name|type
parameter_list|,
name|cid
parameter_list|,
name|value
parameter_list|)
lambda|->
name|timeoutEvent
argument_list|(
name|type
argument_list|,
name|cid
argument_list|)
argument_list|)
expr_stmt|;
comment|// create local set of correlation ids, as its easier to keep track
comment|// using the listener so we can flag the dirty flag upon changes
comment|// must support concurrent access
name|this
operator|.
name|correlationIds
operator|=
operator|new
name|ConcurrentSkipListSet
argument_list|<>
argument_list|()
expr_stmt|;
block|}
DECL|method|get ()
specifier|public
specifier|synchronized
name|String
name|get
parameter_list|()
block|{
if|if
condition|(
operator|!
name|dirty
condition|)
block|{
return|return
name|expression
operator|.
name|toString
argument_list|()
return|;
block|}
name|expression
operator|=
operator|new
name|StringBuilder
argument_list|(
literal|"JMSCorrelationID='"
argument_list|)
expr_stmt|;
if|if
condition|(
name|correlationIds
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
comment|// no id's so use a dummy to select nothing
name|expression
operator|.
name|append
argument_list|(
literal|"CamelDummyJmsMessageSelector'"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|boolean
name|first
init|=
literal|true
decl_stmt|;
for|for
control|(
name|String
name|value
range|:
name|correlationIds
control|)
block|{
if|if
condition|(
operator|!
name|first
condition|)
block|{
name|expression
operator|.
name|append
argument_list|(
literal|" OR JMSCorrelationID='"
argument_list|)
expr_stmt|;
block|}
name|expression
operator|.
name|append
argument_list|(
name|value
argument_list|)
operator|.
name|append
argument_list|(
literal|"'"
argument_list|)
expr_stmt|;
if|if
condition|(
name|first
condition|)
block|{
name|first
operator|=
literal|false
expr_stmt|;
block|}
block|}
block|}
name|String
name|answer
init|=
name|expression
operator|.
name|toString
argument_list|()
decl_stmt|;
name|dirty
operator|=
literal|false
expr_stmt|;
return|return
name|answer
return|;
block|}
comment|// Changes to live correlation-ids invalidate existing message selector
DECL|method|timeoutEvent (TimeoutMap.Listener.Type type, String cid)
specifier|private
name|void
name|timeoutEvent
parameter_list|(
name|TimeoutMap
operator|.
name|Listener
operator|.
name|Type
name|type
parameter_list|,
name|String
name|cid
parameter_list|)
block|{
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|Remove
case|:
case|case
name|Evict
case|:
name|correlationIds
operator|.
name|remove
argument_list|(
name|cid
argument_list|)
expr_stmt|;
break|break;
case|case
name|Put
case|:
default|default:
name|correlationIds
operator|.
name|add
argument_list|(
name|cid
argument_list|)
expr_stmt|;
block|}
name|dirty
operator|=
literal|true
expr_stmt|;
block|}
block|}
end_class

end_unit

