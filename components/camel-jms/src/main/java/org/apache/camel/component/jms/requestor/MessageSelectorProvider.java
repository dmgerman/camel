begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jms.requestor
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jms
operator|.
name|requestor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
DECL|class|MessageSelectorProvider
specifier|public
class|class
name|MessageSelectorProvider
block|{
DECL|field|correlationIds
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|correlationIds
decl_stmt|;
DECL|field|dirty
specifier|protected
name|boolean
name|dirty
init|=
literal|true
decl_stmt|;
DECL|field|expression
specifier|protected
name|StringBuilder
name|expression
decl_stmt|;
DECL|method|MessageSelectorProvider ()
specifier|public
name|MessageSelectorProvider
parameter_list|()
block|{
name|correlationIds
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
expr_stmt|;
block|}
DECL|method|addCorrelationID (String id)
specifier|public
specifier|synchronized
name|void
name|addCorrelationID
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|correlationIds
operator|.
name|put
argument_list|(
name|id
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|dirty
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|removeCorrelationID (String id)
specifier|public
specifier|synchronized
name|void
name|removeCorrelationID
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|correlationIds
operator|.
name|remove
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|dirty
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|get ()
specifier|public
specifier|synchronized
name|String
name|get
parameter_list|()
block|{
if|if
condition|(
operator|!
name|dirty
condition|)
block|{
return|return
name|expression
operator|.
name|toString
argument_list|()
return|;
block|}
name|expression
operator|=
operator|new
name|StringBuilder
argument_list|(
literal|"JMSCorrelationID='"
argument_list|)
expr_stmt|;
name|boolean
name|first
init|=
literal|true
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|correlationIds
operator|.
name|entrySet
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|first
condition|)
block|{
name|expression
operator|.
name|append
argument_list|(
literal|" OR JMSCorrelationID='"
argument_list|)
expr_stmt|;
block|}
name|expression
operator|.
name|append
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"'"
argument_list|)
expr_stmt|;
if|if
condition|(
name|first
condition|)
block|{
name|first
operator|=
literal|false
expr_stmt|;
block|}
block|}
name|dirty
operator|=
literal|false
expr_stmt|;
return|return
name|expression
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

