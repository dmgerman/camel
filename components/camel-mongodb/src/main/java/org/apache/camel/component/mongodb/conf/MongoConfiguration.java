begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.mongodb.conf
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mongodb
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
DECL|class|MongoConfiguration
specifier|public
class|class
name|MongoConfiguration
block|{
DECL|field|host
specifier|private
name|String
name|host
init|=
literal|"localhost:27017"
decl_stmt|;
DECL|field|user
specifier|private
name|String
name|user
decl_stmt|;
DECL|field|password
specifier|private
name|String
name|password
decl_stmt|;
DECL|field|adminDB
specifier|private
name|String
name|adminDB
init|=
literal|"admin"
decl_stmt|;
DECL|method|MongoConfiguration ()
specifier|public
name|MongoConfiguration
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
DECL|method|MongoConfiguration (Map<String, String> parameters)
specifier|public
name|MongoConfiguration
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parameters
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|host
operator|=
name|parameters
operator|.
name|get
argument_list|(
literal|"host"
argument_list|)
expr_stmt|;
name|this
operator|.
name|user
operator|=
name|parameters
operator|.
name|get
argument_list|(
literal|"user"
argument_list|)
expr_stmt|;
name|this
operator|.
name|password
operator|=
name|parameters
operator|.
name|get
argument_list|(
literal|"password"
argument_list|)
expr_stmt|;
comment|// Optional parameters
name|String
name|optionalAdminDB
init|=
name|parameters
operator|.
name|getOrDefault
argument_list|(
literal|"adminDB"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|optionalAdminDB
argument_list|)
condition|)
block|{
name|this
operator|.
name|adminDB
operator|=
name|optionalAdminDB
expr_stmt|;
block|}
block|}
DECL|method|getHost ()
specifier|public
name|String
name|getHost
parameter_list|()
block|{
return|return
name|host
return|;
block|}
DECL|method|setHost (String host)
specifier|public
name|void
name|setHost
parameter_list|(
name|String
name|host
parameter_list|)
block|{
name|this
operator|.
name|host
operator|=
name|host
expr_stmt|;
block|}
DECL|method|getUser ()
specifier|public
name|String
name|getUser
parameter_list|()
block|{
return|return
name|user
return|;
block|}
DECL|method|setUser (String user)
specifier|public
name|void
name|setUser
parameter_list|(
name|String
name|user
parameter_list|)
block|{
name|this
operator|.
name|user
operator|=
name|user
expr_stmt|;
block|}
DECL|method|getPassword ()
specifier|public
name|String
name|getPassword
parameter_list|()
block|{
return|return
name|password
return|;
block|}
DECL|method|setPassword (String password)
specifier|public
name|void
name|setPassword
parameter_list|(
name|String
name|password
parameter_list|)
block|{
name|this
operator|.
name|password
operator|=
name|password
expr_stmt|;
block|}
DECL|method|getAdminDB ()
specifier|public
name|String
name|getAdminDB
parameter_list|()
block|{
return|return
name|adminDB
return|;
block|}
DECL|method|setAdminDB (String adminDB)
specifier|public
name|void
name|setAdminDB
parameter_list|(
name|String
name|adminDB
parameter_list|)
block|{
name|this
operator|.
name|adminDB
operator|=
name|adminDB
expr_stmt|;
block|}
DECL|method|getMongoClientURI ()
specifier|public
name|String
name|getMongoClientURI
parameter_list|()
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"mongodb://%s:%s@%s/%s"
argument_list|,
name|this
operator|.
name|user
argument_list|,
name|this
operator|.
name|password
argument_list|,
name|this
operator|.
name|host
argument_list|,
name|this
operator|.
name|adminDB
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"MongoConfiguration [host(s)="
operator|+
name|host
operator|+
literal|", user="
operator|+
name|user
operator|+
literal|", password=***, adminDB="
operator|+
name|adminDB
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

