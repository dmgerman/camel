begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.mongodb
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mongodb
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|BasicDBObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|DBObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|bson
operator|.
name|types
operator|.
name|BSONTimestamp
import|;
end_import

begin_comment
comment|/**  * Contains the concrete MongoDB tail tracking strategies.  */
end_comment

begin_enum
DECL|enum|MongoDBTailTrackingEnum
specifier|public
enum|enum
name|MongoDBTailTrackingEnum
implements|implements
name|MongoDBTailTrackingStrategy
block|{
DECL|enumConstant|TIMESTAMP
name|TIMESTAMP
block|{
annotation|@
name|Override
specifier|public
name|Object
name|extractLastVal
parameter_list|(
name|DBObject
name|o
parameter_list|,
name|String
name|increasingField
parameter_list|)
block|{
name|Object
name|temp
init|=
name|o
operator|.
name|get
argument_list|(
name|increasingField
argument_list|)
decl_stmt|;
return|return
operator|(
operator|(
name|BSONTimestamp
operator|)
name|temp
operator|)
operator|.
name|getTime
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|BasicDBObject
name|createQuery
parameter_list|(
name|Object
name|lastVal
parameter_list|,
name|String
name|increasingField
parameter_list|)
block|{
return|return
operator|new
name|BasicDBObject
argument_list|(
name|increasingField
argument_list|,
operator|new
name|BasicDBObject
argument_list|(
literal|"$gt"
argument_list|,
operator|new
name|BSONTimestamp
argument_list|(
operator|(
name|Integer
operator|)
name|lastVal
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
DECL|enumConstant|LITERAL
block|}
block|,
name|LITERAL
block|{
annotation|@
name|Override
specifier|public
name|Object
name|extractLastVal
parameter_list|(
name|DBObject
name|o
parameter_list|,
name|String
name|increasingField
parameter_list|)
block|{
return|return
name|o
operator|.
name|get
argument_list|(
name|increasingField
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|BasicDBObject
name|createQuery
parameter_list|(
name|Object
name|lastVal
parameter_list|,
name|String
name|increasingField
parameter_list|)
block|{
return|return
operator|new
name|BasicDBObject
argument_list|(
name|increasingField
argument_list|,
operator|new
name|BasicDBObject
argument_list|(
literal|"$gt"
argument_list|,
name|lastVal
argument_list|)
argument_list|)
return|;
block|}
block|}
block|; }
end_enum

end_unit

