begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.mongodb
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mongodb
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|client
operator|.
name|MongoCollection
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|client
operator|.
name|model
operator|.
name|CreateCollectionOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|bson
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|MongoDbChangeStreamsConsumerTest
specifier|public
class|class
name|MongoDbChangeStreamsConsumerTest
extends|extends
name|AbstractMongoDbTest
block|{
DECL|field|mongoCollection
specifier|private
name|MongoCollection
argument_list|<
name|Document
argument_list|>
name|mongoCollection
decl_stmt|;
DECL|field|collectionName
specifier|private
name|String
name|collectionName
decl_stmt|;
annotation|@
name|Override
DECL|method|doPostSetup ()
specifier|public
name|void
name|doPostSetup
parameter_list|()
block|{
name|super
operator|.
name|doPostSetup
argument_list|()
expr_stmt|;
name|collectionName
operator|=
literal|"camelTest"
expr_stmt|;
name|mongoCollection
operator|=
name|db
operator|.
name|getCollection
argument_list|(
name|collectionName
argument_list|,
name|Document
operator|.
name|class
argument_list|)
expr_stmt|;
name|mongoCollection
operator|.
name|drop
argument_list|()
expr_stmt|;
name|CreateCollectionOptions
name|collectionOptions
init|=
operator|new
name|CreateCollectionOptions
argument_list|()
decl_stmt|;
name|db
operator|.
name|createCollection
argument_list|(
name|collectionName
argument_list|,
name|collectionOptions
argument_list|)
expr_stmt|;
name|mongoCollection
operator|=
name|db
operator|.
name|getCollection
argument_list|(
name|collectionName
argument_list|,
name|Document
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|basicTest ()
specifier|public
name|void
name|basicTest
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|mongoCollection
operator|.
name|countDocuments
argument_list|()
argument_list|)
expr_stmt|;
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:test"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMessageCount
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|String
name|consumerRouteId
init|=
literal|"simpleConsumer"
decl_stmt|;
name|addTestRoutes
argument_list|()
expr_stmt|;
name|context
operator|.
name|getRouteController
argument_list|()
operator|.
name|startRoute
argument_list|(
name|consumerRouteId
argument_list|)
expr_stmt|;
name|Thread
name|t
init|=
operator|new
name|Thread
argument_list|(
parameter_list|()
lambda|->
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|mongoCollection
operator|.
name|insertOne
argument_list|(
operator|new
name|Document
argument_list|(
literal|"increasing"
argument_list|,
name|i
argument_list|)
operator|.
name|append
argument_list|(
literal|"string"
argument_list|,
literal|"value"
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|t
operator|.
name|start
argument_list|()
expr_stmt|;
name|t
operator|.
name|join
argument_list|()
expr_stmt|;
name|mock
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
name|context
operator|.
name|getRouteController
argument_list|()
operator|.
name|stopRoute
argument_list|(
name|consumerRouteId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|filterTest ()
specifier|public
name|void
name|filterTest
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|mongoCollection
operator|.
name|countDocuments
argument_list|()
argument_list|)
expr_stmt|;
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:test"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|String
name|consumerRouteId
init|=
literal|"filterConsumer"
decl_stmt|;
name|addTestRoutes
argument_list|()
expr_stmt|;
name|context
operator|.
name|getRouteController
argument_list|()
operator|.
name|startRoute
argument_list|(
name|consumerRouteId
argument_list|)
expr_stmt|;
name|Thread
name|t
init|=
operator|new
name|Thread
argument_list|(
parameter_list|()
lambda|->
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|mongoCollection
operator|.
name|insertOne
argument_list|(
operator|new
name|Document
argument_list|(
literal|"increasing"
argument_list|,
name|i
argument_list|)
operator|.
name|append
argument_list|(
literal|"string"
argument_list|,
literal|"value"
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|t
operator|.
name|start
argument_list|()
expr_stmt|;
name|t
operator|.
name|join
argument_list|()
expr_stmt|;
name|mock
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
name|Document
name|actualDocument
init|=
name|mock
operator|.
name|getExchanges
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Document
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"value2"
argument_list|,
name|actualDocument
operator|.
name|get
argument_list|(
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|getRouteController
argument_list|()
operator|.
name|stopRoute
argument_list|(
name|consumerRouteId
argument_list|)
expr_stmt|;
block|}
DECL|method|addTestRoutes ()
specifier|protected
name|void
name|addTestRoutes
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|addRoutes
argument_list|(
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"mongodb:myDb?consumerType=changeStreams&database={{mongodb.testDb}}&collection={{mongodb.testCollection}}"
argument_list|)
operator|.
name|id
argument_list|(
literal|"simpleConsumer"
argument_list|)
operator|.
name|autoStartup
argument_list|(
literal|false
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:test"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"mongodb:myDb?consumerType=changeStreams&database={{mongodb.testDb}}&collection={{mongodb.testCollection}}"
argument_list|)
operator|.
name|routeProperty
argument_list|(
literal|"streamFilter"
argument_list|,
literal|"{'$match':{'$or':[{'fullDocument.string': 'value2'}]}}"
argument_list|)
operator|.
name|id
argument_list|(
literal|"filterConsumer"
argument_list|)
operator|.
name|autoStartup
argument_list|(
literal|false
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:test"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

