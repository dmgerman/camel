begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.mongodb
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mongodb
package|;
end_package

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|ReadPreference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|MongoDbReadPreferenceOptionTest
specifier|public
class|class
name|MongoDbReadPreferenceOptionTest
extends|extends
name|AbstractMongoDbTest
block|{
DECL|field|endpoint
specifier|private
name|MongoDbEndpoint
name|endpoint
decl_stmt|;
annotation|@
name|Test
DECL|method|testInvalidReadPreferenceOptionValue ()
specifier|public
name|void
name|testInvalidReadPreferenceOptionValue
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|createMongoDbEndpoint
argument_list|(
literal|"mongodb:myDb?database={{mongodb.testDb}}&readPreference=foo"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|iae
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|iae
operator|.
name|getMessage
argument_list|()
argument_list|,
name|iae
operator|.
name|getMessage
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|"No match for read preference of foo"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testNoReadPreferenceOptionValue ()
specifier|public
name|void
name|testNoReadPreferenceOptionValue
parameter_list|()
throws|throws
name|Exception
block|{
name|endpoint
operator|=
name|createMongoDbEndpoint
argument_list|(
literal|"mongodb:myDb?database={{mongodb.testDb}}"
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|endpoint
operator|.
name|getReadPreference
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ReadPreference
operator|.
name|primary
argument_list|()
argument_list|,
name|endpoint
operator|.
name|getMongoConnection
argument_list|()
operator|.
name|getReadPreference
argument_list|()
argument_list|)
expr_stmt|;
comment|// the default is primary
block|}
annotation|@
name|Test
DECL|method|testPrimaryReadPreferenceOptionValue ()
specifier|public
name|void
name|testPrimaryReadPreferenceOptionValue
parameter_list|()
throws|throws
name|Exception
block|{
name|endpoint
operator|=
name|createMongoDbEndpoint
argument_list|(
literal|"mongodb:myDb?database={{mongodb.testDb}}&readPreference=primary"
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ReadPreference
operator|.
name|primary
argument_list|()
argument_list|,
name|endpoint
operator|.
name|getReadPreference
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ReadPreference
operator|.
name|primary
argument_list|()
argument_list|,
name|endpoint
operator|.
name|getMongoConnection
argument_list|()
operator|.
name|getReadPreference
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSecondaryReadPreferenceOptionValue ()
specifier|public
name|void
name|testSecondaryReadPreferenceOptionValue
parameter_list|()
throws|throws
name|Exception
block|{
name|endpoint
operator|=
name|createMongoDbEndpoint
argument_list|(
literal|"mongodb:myDb?database={{mongodb.testDb}}&readPreference=secondary"
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ReadPreference
operator|.
name|secondary
argument_list|()
argument_list|,
name|endpoint
operator|.
name|getReadPreference
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ReadPreference
operator|.
name|secondary
argument_list|()
argument_list|,
name|endpoint
operator|.
name|getMongoConnection
argument_list|()
operator|.
name|getReadPreference
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNearestReadPreferenceOptionValue ()
specifier|public
name|void
name|testNearestReadPreferenceOptionValue
parameter_list|()
throws|throws
name|Exception
block|{
name|endpoint
operator|=
name|createMongoDbEndpoint
argument_list|(
literal|"mongodb:myDb?database={{mongodb.testDb}}&readPreference=nearest"
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ReadPreference
operator|.
name|nearest
argument_list|()
argument_list|,
name|endpoint
operator|.
name|getReadPreference
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|ReadPreference
operator|.
name|nearest
argument_list|()
argument_list|,
name|endpoint
operator|.
name|getMongoConnection
argument_list|()
operator|.
name|getReadPreference
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createMongoDbEndpoint (String uri)
specifier|private
name|MongoDbEndpoint
name|createMongoDbEndpoint
parameter_list|(
name|String
name|uri
parameter_list|)
throws|throws
name|Exception
block|{
name|MongoDbComponent
name|component
init|=
name|context
argument_list|()
operator|.
name|getComponent
argument_list|(
literal|"mongodb"
argument_list|,
name|MongoDbComponent
operator|.
name|class
argument_list|)
decl_stmt|;
name|Endpoint
name|endpoint
init|=
name|component
operator|.
name|createEndpoint
argument_list|(
name|uri
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|start
argument_list|()
expr_stmt|;
return|return
operator|(
name|MongoDbEndpoint
operator|)
name|endpoint
return|;
block|}
block|}
end_class

end_unit

