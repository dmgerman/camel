begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.ical
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ical
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|net
operator|.
name|fortuna
operator|.
name|ical4j
operator|.
name|data
operator|.
name|CalendarBuilder
import|;
end_import

begin_import
import|import
name|net
operator|.
name|fortuna
operator|.
name|ical4j
operator|.
name|data
operator|.
name|CalendarOutputter
import|;
end_import

begin_import
import|import
name|net
operator|.
name|fortuna
operator|.
name|ical4j
operator|.
name|model
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|DataFormat
import|;
end_import

begin_comment
comment|/**  * Bridge ICal data format to camel world.  */
end_comment

begin_class
DECL|class|ICalDataFormat
specifier|public
class|class
name|ICalDataFormat
implements|implements
name|DataFormat
block|{
comment|/**      * Class responsible for writing out calendar instances.      */
DECL|field|outputer
specifier|private
name|CalendarOutputter
name|outputer
init|=
operator|new
name|CalendarOutputter
argument_list|()
decl_stmt|;
DECL|field|builder
specifier|private
name|CalendarBuilder
name|builder
init|=
operator|new
name|CalendarBuilder
argument_list|()
decl_stmt|;
DECL|method|setValidating (boolean validate)
specifier|public
name|void
name|setValidating
parameter_list|(
name|boolean
name|validate
parameter_list|)
block|{
name|outputer
operator|.
name|setValidating
argument_list|(
name|validate
argument_list|)
expr_stmt|;
block|}
DECL|method|isValidating ()
specifier|public
name|boolean
name|isValidating
parameter_list|()
block|{
return|return
name|outputer
operator|.
name|isValidating
argument_list|()
return|;
block|}
DECL|method|getOutputer ()
specifier|public
name|CalendarOutputter
name|getOutputer
parameter_list|()
block|{
return|return
name|outputer
return|;
block|}
DECL|method|setOutputer (CalendarOutputter outputer)
specifier|public
name|void
name|setOutputer
parameter_list|(
name|CalendarOutputter
name|outputer
parameter_list|)
block|{
name|this
operator|.
name|outputer
operator|=
name|outputer
expr_stmt|;
block|}
DECL|method|getBuilder ()
specifier|public
name|CalendarBuilder
name|getBuilder
parameter_list|()
block|{
return|return
name|builder
return|;
block|}
DECL|method|setBuilder (CalendarBuilder builder)
specifier|public
name|void
name|setBuilder
parameter_list|(
name|CalendarBuilder
name|builder
parameter_list|)
block|{
name|this
operator|.
name|builder
operator|=
name|builder
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|marshal (Exchange exchange, Object graph, OutputStream stream)
specifier|public
name|void
name|marshal
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|Object
name|graph
parameter_list|,
name|OutputStream
name|stream
parameter_list|)
throws|throws
name|Exception
block|{
name|Calendar
name|calendar
init|=
name|exchange
operator|.
name|getContext
argument_list|()
operator|.
name|getTypeConverter
argument_list|()
operator|.
name|convertTo
argument_list|(
name|Calendar
operator|.
name|class
argument_list|,
name|graph
argument_list|)
decl_stmt|;
name|outputer
operator|.
name|output
argument_list|(
name|calendar
argument_list|,
name|stream
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|unmarshal (Exchange exchange, InputStream stream)
specifier|public
name|Object
name|unmarshal
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|InputStream
name|stream
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|builder
operator|.
name|build
argument_list|(
name|stream
argument_list|)
return|;
block|}
block|}
end_class

end_unit

