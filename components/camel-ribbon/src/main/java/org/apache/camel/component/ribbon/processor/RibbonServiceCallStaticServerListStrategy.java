begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.ribbon.processor
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ribbon
operator|.
name|processor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|com
operator|.
name|netflix
operator|.
name|client
operator|.
name|config
operator|.
name|IClientConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|netflix
operator|.
name|loadbalancer
operator|.
name|AbstractServerList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|netflix
operator|.
name|loadbalancer
operator|.
name|ServerList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ServiceCallServerListStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_comment
comment|/**  * A static list of known servers to be used by the Ribbon load balancer with the Camel Service Call EIP.  *<p/>  * You can implement custom implementations by existing this class and override the {@link #getUpdatedListOfServers()} that is called by Ribbon to refresh the known list  * of servers. For example to periodically query a remote server registry for a list of active servers.  */
end_comment

begin_class
DECL|class|RibbonServiceCallStaticServerListStrategy
specifier|public
class|class
name|RibbonServiceCallStaticServerListStrategy
extends|extends
name|AbstractServerList
argument_list|<
name|RibbonServer
argument_list|>
implements|implements
name|ServerList
argument_list|<
name|RibbonServer
argument_list|>
implements|,
name|ServiceCallServerListStrategy
argument_list|<
name|RibbonServer
argument_list|>
block|{
DECL|field|clientConfig
specifier|private
name|IClientConfig
name|clientConfig
decl_stmt|;
DECL|field|servers
specifier|private
specifier|final
name|List
argument_list|<
name|RibbonServer
argument_list|>
name|servers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|RibbonServiceCallStaticServerListStrategy ()
specifier|public
name|RibbonServiceCallStaticServerListStrategy
parameter_list|()
block|{     }
DECL|method|RibbonServiceCallStaticServerListStrategy (List<RibbonServer> servers)
specifier|public
name|RibbonServiceCallStaticServerListStrategy
parameter_list|(
name|List
argument_list|<
name|RibbonServer
argument_list|>
name|servers
parameter_list|)
block|{
name|this
operator|.
name|servers
operator|.
name|addAll
argument_list|(
name|servers
argument_list|)
expr_stmt|;
block|}
comment|/**      * Build a {@link RibbonServiceCallStaticServerListStrategy} with the initial list of servers      *      * @param servers servers separated by comma in the format: host:port,host2:port,host3:port and so on.      */
DECL|method|build (String servers)
specifier|public
specifier|static
name|RibbonServiceCallStaticServerListStrategy
name|build
parameter_list|(
name|String
name|servers
parameter_list|)
block|{
name|RibbonServiceCallStaticServerListStrategy
name|answer
init|=
operator|new
name|RibbonServiceCallStaticServerListStrategy
argument_list|()
decl_stmt|;
name|String
index|[]
name|parts
init|=
name|servers
operator|.
name|split
argument_list|(
literal|","
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|part
range|:
name|parts
control|)
block|{
name|String
name|host
init|=
name|ObjectHelper
operator|.
name|before
argument_list|(
name|part
argument_list|,
literal|":"
argument_list|)
decl_stmt|;
name|String
name|port
init|=
name|ObjectHelper
operator|.
name|after
argument_list|(
name|part
argument_list|,
literal|":"
argument_list|)
decl_stmt|;
name|int
name|num
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|port
argument_list|)
decl_stmt|;
name|answer
operator|.
name|addServer
argument_list|(
name|host
argument_list|,
name|num
argument_list|)
expr_stmt|;
block|}
return|return
name|answer
return|;
block|}
comment|/**      * Add a server to the known list of servers.      */
DECL|method|addServer (RibbonServer server)
specifier|public
name|void
name|addServer
parameter_list|(
name|RibbonServer
name|server
parameter_list|)
block|{
name|servers
operator|.
name|add
argument_list|(
name|server
argument_list|)
expr_stmt|;
block|}
comment|/**      * Add a server to the known list of servers.      */
DECL|method|addServer (String host, int port)
specifier|public
name|void
name|addServer
parameter_list|(
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|)
block|{
name|servers
operator|.
name|add
argument_list|(
operator|new
name|RibbonServer
argument_list|(
name|host
argument_list|,
name|port
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Remove an existing server from the list of known servers.      */
DECL|method|removeServer (String host, int port)
specifier|public
name|void
name|removeServer
parameter_list|(
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|)
block|{
name|servers
operator|.
name|remove
argument_list|(
operator|new
name|RibbonServer
argument_list|(
name|host
argument_list|,
name|port
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|initWithNiwsConfig (IClientConfig clientConfig)
specifier|public
name|void
name|initWithNiwsConfig
parameter_list|(
name|IClientConfig
name|clientConfig
parameter_list|)
block|{
name|this
operator|.
name|clientConfig
operator|=
name|clientConfig
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getInitialListOfServers ()
specifier|public
name|List
argument_list|<
name|RibbonServer
argument_list|>
name|getInitialListOfServers
parameter_list|()
block|{
return|return
name|servers
return|;
block|}
annotation|@
name|Override
DECL|method|getUpdatedListOfServers ()
specifier|public
name|List
argument_list|<
name|RibbonServer
argument_list|>
name|getUpdatedListOfServers
parameter_list|()
block|{
return|return
name|servers
return|;
block|}
annotation|@
name|Override
DECL|method|getInitialListOfServers (String name)
specifier|public
name|Collection
argument_list|<
name|RibbonServer
argument_list|>
name|getInitialListOfServers
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|getInitialListOfServers
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getUpdatedListOfServers (String name)
specifier|public
name|Collection
argument_list|<
name|RibbonServer
argument_list|>
name|getUpdatedListOfServers
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|getUpdatedListOfServers
argument_list|()
return|;
block|}
block|}
end_class

end_unit

