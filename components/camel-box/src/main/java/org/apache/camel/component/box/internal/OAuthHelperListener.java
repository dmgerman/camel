begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.box.internal
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|authorization
operator|.
name|IAuthSecureStorage
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|authorization
operator|.
name|OAuthRefreshListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|dao
operator|.
name|IAuthData
import|;
end_import

begin_comment
comment|/** * Wrapper implementation of {@link OAuthRefreshListener} that  * delegates to an {@link IAuthSecureStorage} and another {@link OAuthRefreshListener}. */
end_comment

begin_class
DECL|class|OAuthHelperListener
class|class
name|OAuthHelperListener
implements|implements
name|OAuthRefreshListener
block|{
DECL|field|authSecureStorage
specifier|private
specifier|final
name|IAuthSecureStorage
name|authSecureStorage
decl_stmt|;
DECL|field|configListener
specifier|private
specifier|final
name|OAuthRefreshListener
name|configListener
decl_stmt|;
DECL|field|refreshToken
specifier|private
name|String
name|refreshToken
decl_stmt|;
DECL|method|OAuthHelperListener (IAuthSecureStorage authSecureStorage, OAuthRefreshListener configListener)
specifier|public
name|OAuthHelperListener
parameter_list|(
name|IAuthSecureStorage
name|authSecureStorage
parameter_list|,
name|OAuthRefreshListener
name|configListener
parameter_list|)
block|{
name|this
operator|.
name|authSecureStorage
operator|=
name|authSecureStorage
expr_stmt|;
name|this
operator|.
name|configListener
operator|=
name|configListener
expr_stmt|;
if|if
condition|(
name|authSecureStorage
operator|!=
literal|null
operator|&&
name|authSecureStorage
operator|.
name|getAuth
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|refreshToken
operator|=
name|authSecureStorage
operator|.
name|getAuth
argument_list|()
operator|.
name|getRefreshToken
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onRefresh (IAuthData newAuthData)
specifier|public
name|void
name|onRefresh
parameter_list|(
name|IAuthData
name|newAuthData
parameter_list|)
block|{
comment|// look for refresh token update or revocation
if|if
condition|(
name|authSecureStorage
operator|!=
literal|null
operator|&&
operator|(
name|newAuthData
operator|==
literal|null
operator|||
operator|!
name|newAuthData
operator|.
name|getRefreshToken
argument_list|()
operator|.
name|equals
argument_list|(
name|refreshToken
argument_list|)
operator|)
condition|)
block|{
name|authSecureStorage
operator|.
name|saveAuth
argument_list|(
name|newAuthData
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|configListener
operator|!=
literal|null
condition|)
block|{
name|configListener
operator|.
name|onRefresh
argument_list|(
name|newAuthData
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

