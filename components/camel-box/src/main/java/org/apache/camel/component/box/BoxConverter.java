begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.box
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|restclientv2
operator|.
name|requestsbase
operator|.
name|BoxFileUploadRequestObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Converter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|internal
operator|.
name|BoxConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|file
operator|.
name|GenericFile
import|;
end_import

begin_class
annotation|@
name|Converter
DECL|class|BoxConverter
specifier|public
specifier|final
class|class
name|BoxConverter
block|{
DECL|method|BoxConverter ()
specifier|private
name|BoxConverter
parameter_list|()
block|{
comment|//Utility Class
block|}
annotation|@
name|Converter
DECL|method|genericFileToBoxFileUploadRequestObject (GenericFile<?> file, Exchange exchange)
specifier|public
specifier|static
name|BoxFileUploadRequestObject
name|genericFileToBoxFileUploadRequestObject
parameter_list|(
name|GenericFile
argument_list|<
name|?
argument_list|>
name|file
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|folderId
init|=
literal|"0"
decl_stmt|;
if|if
condition|(
name|exchange
operator|!=
literal|null
operator|&&
name|exchange
operator|.
name|getIn
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|folderId
operator|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|BoxConstants
operator|.
name|PROPERTY_PREFIX
operator|+
literal|"folderId"
argument_list|,
literal|"0"
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|file
operator|.
name|getFile
argument_list|()
operator|instanceof
name|File
condition|)
block|{
comment|// prefer to use a file input stream if its a java.io.File
name|File
name|f
init|=
operator|(
name|File
operator|)
name|file
operator|.
name|getFile
argument_list|()
decl_stmt|;
return|return
name|BoxFileUploadRequestObject
operator|.
name|uploadFileRequestObject
argument_list|(
name|folderId
argument_list|,
name|file
operator|.
name|getFileName
argument_list|()
argument_list|,
name|f
argument_list|)
return|;
block|}
if|if
condition|(
name|exchange
operator|!=
literal|null
condition|)
block|{
comment|// otherwise ensure the body is loaded as we want the input stream of the body
name|file
operator|.
name|getBinding
argument_list|()
operator|.
name|loadContent
argument_list|(
name|exchange
argument_list|,
name|file
argument_list|)
expr_stmt|;
name|InputStream
name|is
init|=
name|exchange
operator|.
name|getContext
argument_list|()
operator|.
name|getTypeConverter
argument_list|()
operator|.
name|convertTo
argument_list|(
name|InputStream
operator|.
name|class
argument_list|,
name|exchange
argument_list|,
name|file
operator|.
name|getBody
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|BoxFileUploadRequestObject
operator|.
name|uploadFileRequestObject
argument_list|(
name|folderId
argument_list|,
name|file
operator|.
name|getFileName
argument_list|()
argument_list|,
name|is
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Converter
DECL|method|toBox (byte[] data, Exchange exchange)
specifier|public
specifier|static
name|BoxFileUploadRequestObject
name|toBox
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|folderId
init|=
literal|"0"
decl_stmt|;
name|String
name|fileName
init|=
literal|"dummy.bin"
decl_stmt|;
if|if
condition|(
name|exchange
operator|!=
literal|null
operator|&&
name|exchange
operator|.
name|getIn
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|folderId
operator|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|BoxConstants
operator|.
name|PROPERTY_PREFIX
operator|+
literal|"folderId"
argument_list|,
literal|"0"
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|fileName
operator|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
literal|"CamelFileName"
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
name|InputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
argument_list|)
decl_stmt|;
return|return
name|BoxFileUploadRequestObject
operator|.
name|uploadFileRequestObject
argument_list|(
name|folderId
argument_list|,
name|fileName
argument_list|,
name|is
argument_list|)
return|;
block|}
block|}
end_class

end_unit

