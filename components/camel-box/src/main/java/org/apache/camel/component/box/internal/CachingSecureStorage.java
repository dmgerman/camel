begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.box.internal
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|authorization
operator|.
name|IAuthSecureStorage
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|dao
operator|.
name|IAuthData
import|;
end_import

begin_comment
comment|/**  * A caching {@link IAuthSecureStorage} that also delegates to another {@link IAuthSecureStorage}.  */
end_comment

begin_class
DECL|class|CachingSecureStorage
specifier|public
class|class
name|CachingSecureStorage
implements|implements
name|IAuthSecureStorage
block|{
DECL|field|secureStorage
specifier|private
specifier|final
name|IAuthSecureStorage
name|secureStorage
decl_stmt|;
DECL|field|auth
specifier|private
name|IAuthData
name|auth
decl_stmt|;
DECL|method|CachingSecureStorage (IAuthSecureStorage secureStorage)
specifier|public
name|CachingSecureStorage
parameter_list|(
name|IAuthSecureStorage
name|secureStorage
parameter_list|)
block|{
name|this
operator|.
name|secureStorage
operator|=
name|secureStorage
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|saveAuth (IAuthData newAuth)
specifier|public
name|void
name|saveAuth
parameter_list|(
name|IAuthData
name|newAuth
parameter_list|)
block|{
name|this
operator|.
name|auth
operator|=
name|newAuth
expr_stmt|;
if|if
condition|(
name|secureStorage
operator|!=
literal|null
condition|)
block|{
name|secureStorage
operator|.
name|saveAuth
argument_list|(
name|newAuth
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|getAuth ()
specifier|public
name|IAuthData
name|getAuth
parameter_list|()
block|{
if|if
condition|(
name|auth
operator|==
literal|null
operator|&&
name|secureStorage
operator|!=
literal|null
condition|)
block|{
name|auth
operator|=
name|secureStorage
operator|.
name|getAuth
argument_list|()
expr_stmt|;
block|}
return|return
name|auth
return|;
block|}
block|}
end_class

end_unit

