begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.box.internal
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|BoxClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|conn
operator|.
name|ClientConnectionManager
import|;
end_import

begin_class
DECL|class|CachedBoxClient
specifier|public
class|class
name|CachedBoxClient
block|{
DECL|field|boxClient
specifier|private
specifier|final
name|BoxClient
name|boxClient
decl_stmt|;
DECL|field|login
specifier|private
specifier|final
name|String
name|login
decl_stmt|;
DECL|field|clientId
specifier|private
specifier|final
name|String
name|clientId
decl_stmt|;
DECL|field|secureStorage
specifier|private
specifier|final
name|CachingSecureStorage
name|secureStorage
decl_stmt|;
DECL|field|listener
specifier|private
specifier|final
name|OAuthHelperListener
name|listener
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|field|clientConnectionManager
specifier|private
specifier|final
name|ClientConnectionManager
index|[]
name|clientConnectionManager
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|method|CachedBoxClient (BoxClient boxClient, String login, String clientId, CachingSecureStorage secureStorage, OAuthHelperListener listener, ClientConnectionManager[] clientConnectionManager)
specifier|public
name|CachedBoxClient
parameter_list|(
name|BoxClient
name|boxClient
parameter_list|,
name|String
name|login
parameter_list|,
name|String
name|clientId
parameter_list|,
name|CachingSecureStorage
name|secureStorage
parameter_list|,
name|OAuthHelperListener
name|listener
parameter_list|,
name|ClientConnectionManager
index|[]
name|clientConnectionManager
parameter_list|)
block|{
name|this
operator|.
name|boxClient
operator|=
name|boxClient
expr_stmt|;
name|this
operator|.
name|login
operator|=
name|login
expr_stmt|;
name|this
operator|.
name|clientId
operator|=
name|clientId
expr_stmt|;
name|this
operator|.
name|secureStorage
operator|=
name|secureStorage
expr_stmt|;
name|this
operator|.
name|listener
operator|=
name|listener
expr_stmt|;
if|if
condition|(
name|clientConnectionManager
operator|==
literal|null
operator|||
name|clientConnectionManager
operator|.
name|length
operator|!=
literal|1
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"clientConnectionManager must be an array of length 1"
argument_list|)
throw|;
block|}
name|this
operator|.
name|clientConnectionManager
operator|=
name|clientConnectionManager
expr_stmt|;
block|}
DECL|method|getBoxClient ()
specifier|public
name|BoxClient
name|getBoxClient
parameter_list|()
block|{
return|return
name|boxClient
return|;
block|}
DECL|method|getSecureStorage ()
specifier|public
name|CachingSecureStorage
name|getSecureStorage
parameter_list|()
block|{
return|return
name|secureStorage
return|;
block|}
DECL|method|getListener ()
specifier|public
name|OAuthHelperListener
name|getListener
parameter_list|()
block|{
return|return
name|listener
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|method|getClientConnectionManager ()
specifier|public
name|ClientConnectionManager
name|getClientConnectionManager
parameter_list|()
block|{
return|return
name|clientConnectionManager
index|[
literal|0
index|]
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"{login:%s, client_id:%s}"
argument_list|,
name|login
argument_list|,
name|clientId
argument_list|)
return|;
block|}
block|}
end_class

end_unit

