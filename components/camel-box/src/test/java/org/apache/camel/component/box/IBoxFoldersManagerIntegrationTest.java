begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_comment
comment|/*  * Camel Api Route test generated by camel-component-util-maven-plugin  * Generated on: Tue Jun 24 22:42:08 PDT 2014  */
end_comment

begin_package
DECL|package|org.apache.camel.component.box
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|dao
operator|.
name|BoxCollection
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|dao
operator|.
name|BoxFolder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|dao
operator|.
name|BoxSharedLinkAccess
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|jsonentities
operator|.
name|BoxSharedLinkRequestEntity
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|requests
operator|.
name|requestobjects
operator|.
name|BoxFolderDeleteRequestObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|requests
operator|.
name|requestobjects
operator|.
name|BoxFolderRequestObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|requests
operator|.
name|requestobjects
operator|.
name|BoxItemCopyRequestObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|requests
operator|.
name|requestobjects
operator|.
name|BoxSharedLinkRequestObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|internal
operator|.
name|BoxApiName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Test class for com.box.boxjavalibv2.resourcemanagers.IBoxFoldersManager APIs.  */
end_comment

begin_class
DECL|class|IBoxFoldersManagerIntegrationTest
specifier|public
class|class
name|IBoxFoldersManagerIntegrationTest
extends|extends
name|AbstractBoxTestSupport
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|IBoxFoldersManagerIntegrationTest
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|CAMEL_TEST_FOLDER
specifier|private
specifier|static
specifier|final
name|String
name|CAMEL_TEST_FOLDER
init|=
literal|"CamelTestFolder"
decl_stmt|;
DECL|field|CAMEL_TEST_COPY_FOLDER
specifier|private
specifier|static
specifier|final
name|String
name|CAMEL_TEST_COPY_FOLDER
init|=
name|IBoxFoldersManagerIntegrationTest
operator|.
name|CAMEL_TEST_FOLDER
operator|+
literal|"_Copy"
decl_stmt|;
DECL|field|PATH_PREFIX
specifier|private
specifier|static
specifier|final
name|String
name|PATH_PREFIX
init|=
name|BoxApiName
operator|.
name|FOLDERS
operator|.
name|getName
argument_list|()
decl_stmt|;
annotation|@
name|Test
comment|// also tests create folder, and delete folder
DECL|method|testCopyFolder ()
specifier|public
name|void
name|testCopyFolder
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create a test folder to copy
specifier|final
name|BoxFolder
name|testFolder
init|=
name|createFolder
argument_list|()
decl_stmt|;
try|try
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.folderId"
argument_list|,
name|testFolder
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.boxjavalibv2.requests.requestobjects.BoxItemCopyRequestObject
specifier|final
name|BoxItemCopyRequestObject
name|requestObject
init|=
name|BoxItemCopyRequestObject
operator|.
name|copyItemRequestObject
argument_list|(
literal|"0"
argument_list|)
decl_stmt|;
name|requestObject
operator|.
name|setName
argument_list|(
name|CAMEL_TEST_COPY_FOLDER
argument_list|)
expr_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.itemCopyRequest"
argument_list|,
name|requestObject
argument_list|)
expr_stmt|;
name|BoxFolder
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://COPYFOLDER"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"copyFolder result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"copyFolder folder name"
argument_list|,
name|CAMEL_TEST_COPY_FOLDER
argument_list|,
name|result
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"copyFolder: "
operator|+
name|result
argument_list|)
expr_stmt|;
comment|// delete the copy
name|deleteFolder
argument_list|(
name|result
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|deleteFolder
argument_list|(
name|testFolder
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|createFolder ()
specifier|private
name|BoxFolder
name|createFolder
parameter_list|()
block|{
comment|// using com.box.boxjavalibv2.requests.requestobjects.BoxFolderRequestObject message body for single parameter "folderRequest"
specifier|final
name|BoxFolderRequestObject
name|camelTestFolder
init|=
name|BoxFolderRequestObject
operator|.
name|createFolderRequestObject
argument_list|(
name|CAMEL_TEST_FOLDER
argument_list|,
literal|"0"
argument_list|)
decl_stmt|;
name|BoxFolder
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://CREATEFOLDER"
argument_list|,
name|camelTestFolder
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"createFolder result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"createFolder folder id"
argument_list|,
name|result
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|Test
DECL|method|testCreateSharedLink ()
specifier|public
name|void
name|testCreateSharedLink
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|BoxFolder
name|testFolder
init|=
name|createFolder
argument_list|()
decl_stmt|;
try|try
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.folderId"
argument_list|,
name|testFolder
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.boxjavalibv2.requests.requestobjects.BoxSharedLinkRequestObject
specifier|final
name|BoxSharedLinkRequestEntity
name|sharedLink
init|=
operator|new
name|BoxSharedLinkRequestEntity
argument_list|(
name|BoxSharedLinkAccess
operator|.
name|COLLABORATORS
argument_list|)
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.sharedLinkRequest"
argument_list|,
name|BoxSharedLinkRequestObject
operator|.
name|createSharedLinkRequestObject
argument_list|(
name|sharedLink
argument_list|)
argument_list|)
expr_stmt|;
name|BoxFolder
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://CREATESHAREDLINK"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"createSharedLink result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"createSharedLink result"
argument_list|,
name|result
operator|.
name|getSharedLink
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"createSharedLink: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|deleteFolder
argument_list|(
name|testFolder
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|deleteFolder (String folderId)
specifier|public
name|void
name|deleteFolder
parameter_list|(
name|String
name|folderId
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.folderId"
argument_list|,
name|folderId
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.boxjavalibv2.requests.requestobjects.BoxFolderDeleteRequestObject
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.folderDeleteRequest"
argument_list|,
name|BoxFolderDeleteRequestObject
operator|.
name|deleteFolderRequestObject
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|requestBodyAndHeaders
argument_list|(
literal|"direct://DELETEFOLDER"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
expr_stmt|;
comment|// wait for the delete to happen
name|Thread
operator|.
name|sleep
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetFolder ()
specifier|public
name|void
name|testGetFolder
parameter_list|()
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.folderId"
argument_list|,
literal|"0"
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.restclientv2.requestsbase.BoxDefaultRequestObject
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.defaultRequest"
argument_list|,
name|BOX_DEFAULT_REQUEST_OBJECT
argument_list|)
expr_stmt|;
specifier|final
name|BoxFolder
name|result
init|=
operator|(
name|BoxFolder
operator|)
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETFOLDER"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getFolder result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getFolder folder id"
argument_list|,
literal|"0"
argument_list|,
name|result
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getFolder: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetFolderCollaborations ()
specifier|public
name|void
name|testGetFolderCollaborations
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|BoxFolder
name|testFolder
init|=
name|createFolder
argument_list|()
decl_stmt|;
try|try
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.folderId"
argument_list|,
name|testFolder
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.restclientv2.requestsbase.BoxDefaultRequestObject
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.defaultRequest"
argument_list|,
name|BOX_DEFAULT_REQUEST_OBJECT
argument_list|)
expr_stmt|;
name|List
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETFOLDERCOLLABORATIONS"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getFolderCollaborations result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getFolderCollaborations: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|deleteFolder
argument_list|(
name|testFolder
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetFolderItems ()
specifier|public
name|void
name|testGetFolderItems
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.folderId"
argument_list|,
literal|"0"
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.boxjavalibv2.requests.requestobjects.BoxPagingRequestObject
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.pagingRequest"
argument_list|,
name|BOX_PAGING_REQUEST_OBJECT
argument_list|)
expr_stmt|;
name|BoxCollection
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETFOLDERITEMS"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getFolderItems: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateFolderInfo ()
specifier|public
name|void
name|testUpdateFolderInfo
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create test folder
specifier|final
name|BoxFolder
name|testFolder
init|=
name|createFolder
argument_list|()
decl_stmt|;
try|try
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.folderId"
argument_list|,
name|testFolder
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.boxjavalibv2.requests.requestobjects.BoxFolderRequestObject
specifier|final
name|BoxFolderRequestObject
name|folderRequestObject
init|=
name|BoxFolderRequestObject
operator|.
name|getRequestObject
argument_list|()
decl_stmt|;
name|folderRequestObject
operator|.
name|setTags
argument_list|(
operator|new
name|String
index|[]
block|{
name|CAMEL_TEST_TAG
block|}
argument_list|)
expr_stmt|;
name|folderRequestObject
operator|.
name|setName
argument_list|(
name|CAMEL_TEST_COPY_FOLDER
argument_list|)
expr_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.folderRequest"
argument_list|,
name|folderRequestObject
argument_list|)
expr_stmt|;
name|BoxFolder
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://UPDATEFOLDERINFO"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"updateFolderInfo result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"updateFolderInfo folder name"
argument_list|,
name|CAMEL_TEST_COPY_FOLDER
argument_list|,
name|result
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|//            assertEquals("updateFolderInfo result", "["+ CAMEL_TEST_TAG + "]", Arrays.toString(result.getTags()));
name|LOG
operator|.
name|debug
argument_list|(
literal|"updateFolderInfo: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|deleteFolder
argument_list|(
name|testFolder
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
comment|// test route for copyFolder
name|from
argument_list|(
literal|"direct://COPYFOLDER"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/copyFolder"
argument_list|)
expr_stmt|;
comment|// test route for createFolder
name|from
argument_list|(
literal|"direct://CREATEFOLDER"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/createFolder?inBody=folderRequest"
argument_list|)
expr_stmt|;
comment|// test route for createSharedLink
name|from
argument_list|(
literal|"direct://CREATESHAREDLINK"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/createSharedLink"
argument_list|)
expr_stmt|;
comment|// test route for deleteFolder
name|from
argument_list|(
literal|"direct://DELETEFOLDER"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/deleteFolder"
argument_list|)
expr_stmt|;
comment|// test route for getFolder
name|from
argument_list|(
literal|"direct://GETFOLDER"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getFolder"
argument_list|)
expr_stmt|;
comment|// test route for getFolderCollaborations
name|from
argument_list|(
literal|"direct://GETFOLDERCOLLABORATIONS"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getFolderCollaborations"
argument_list|)
expr_stmt|;
comment|// test route for getFolderItems
name|from
argument_list|(
literal|"direct://GETFOLDERITEMS"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getFolderItems"
argument_list|)
expr_stmt|;
comment|// test route for updateFolderInfo
name|from
argument_list|(
literal|"direct://UPDATEFOLDERINFO"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/updateFolderInfo"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

