begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_comment
comment|/*  * Camel Api Route test generated by camel-component-util-maven-plugin  * Generated on: Tue Jun 24 22:42:08 PDT 2014  */
end_comment

begin_package
DECL|package|org.apache.camel.component.box
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|dao
operator|.
name|BoxCollaboration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|dao
operator|.
name|BoxCollaborationRole
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|requests
operator|.
name|requestobjects
operator|.
name|BoxCollabRequestObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|requests
operator|.
name|requestobjects
operator|.
name|BoxGetAllCollabsRequestObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|internal
operator|.
name|BoxApiCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|internal
operator|.
name|IBoxCollaborationsManagerApiMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Test class for com.box.boxjavalibv2.resourcemanagers.IBoxCollaborationsManager APIs.  */
end_comment

begin_class
DECL|class|IBoxCollaborationsManagerIntegrationTest
specifier|public
class|class
name|IBoxCollaborationsManagerIntegrationTest
extends|extends
name|AbstractBoxTestSupport
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|IBoxCollaborationsManagerIntegrationTest
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|PATH_PREFIX
specifier|private
specifier|static
specifier|final
name|String
name|PATH_PREFIX
init|=
name|BoxApiCollection
operator|.
name|getCollection
argument_list|()
operator|.
name|getApiName
argument_list|(
name|IBoxCollaborationsManagerApiMethod
operator|.
name|class
argument_list|)
operator|.
name|getName
argument_list|()
decl_stmt|;
DECL|method|createCollaboration ()
specifier|private
name|BoxCollaboration
name|createCollaboration
parameter_list|()
throws|throws
name|InterruptedException
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.folderId"
argument_list|,
name|testFolderId
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.boxjavalibv2.requests.requestobjects.BoxCollabRequestObject
specifier|final
name|BoxCollabRequestObject
name|collabObject
init|=
name|BoxCollabRequestObject
operator|.
name|createCollabObject
argument_list|(
name|testFolderId
argument_list|,
literal|null
argument_list|,
literal|"camel.test@localhost.com"
argument_list|,
name|BoxCollaborationRole
operator|.
name|VIEWER
argument_list|)
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.collabRequest"
argument_list|,
name|collabObject
argument_list|)
expr_stmt|;
name|BoxCollaboration
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://CREATECOLLABORATION"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"createCollaboration result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
comment|// wait a moment for collaboration to register
name|Thread
operator|.
name|sleep
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
DECL|method|deleteCollaboration (String collabId)
specifier|private
name|void
name|deleteCollaboration
parameter_list|(
name|String
name|collabId
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.collabId"
argument_list|,
name|collabId
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.restclientv2.requestsbase.BoxDefaultRequestObject
comment|//        headers.put("CamelBox.defaultRequest", null);
name|requestBodyAndHeaders
argument_list|(
literal|"direct://DELETECOLLABORATION"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetAllCollaborations ()
specifier|public
name|void
name|testGetAllCollaborations
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using com.box.boxjavalibv2.requests.requestobjects.BoxGetAllCollabsRequestObject message body for single parameter "getAllCollabsRequest"
specifier|final
name|BoxGetAllCollabsRequestObject
name|collabRequest
init|=
name|BoxGetAllCollabsRequestObject
operator|.
name|getAllCollaborationsRequestObject
argument_list|(
name|BoxCollaboration
operator|.
name|STATUS_PENDING
argument_list|)
decl_stmt|;
name|List
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://GETALLCOLLABORATIONS"
argument_list|,
name|collabRequest
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getAllCollaborations: "
operator|+
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getAllCollaborations: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetCollaboration ()
specifier|public
name|void
name|testGetCollaboration
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|BoxCollaboration
name|collaboration
init|=
name|createCollaboration
argument_list|()
decl_stmt|;
try|try
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.collabId"
argument_list|,
name|collaboration
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.restclientv2.requestsbase.BoxDefaultRequestObject
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.defaultRequest"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|BoxCollaboration
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETCOLLABORATION"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getCollaboration result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getCollaboration: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|deleteCollaboration
argument_list|(
name|collaboration
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Ignore
argument_list|(
literal|"BoxClient SDK has a bug in UpdateCollaborationRequest.java, the URI constant should be collaborations"
argument_list|)
annotation|@
name|Test
DECL|method|testUpdateCollaboration ()
specifier|public
name|void
name|testUpdateCollaboration
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|BoxCollaboration
name|collaboration
init|=
name|createCollaboration
argument_list|()
decl_stmt|;
try|try
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.collabId"
argument_list|,
name|collaboration
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.boxjavalibv2.requests.requestobjects.BoxCollabRequestObject
specifier|final
name|BoxCollabRequestObject
name|requestObject
init|=
name|BoxCollabRequestObject
operator|.
name|updateCollabObjects
argument_list|(
name|BoxCollaborationRole
operator|.
name|EDITOR
argument_list|)
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.collabRequest"
argument_list|,
name|requestObject
argument_list|)
expr_stmt|;
name|BoxCollaboration
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://UPDATECOLLABORATION"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"updateCollaboration result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"updateCollaboration: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|deleteCollaboration
argument_list|(
name|collaboration
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
comment|// test route for createCollaboration
name|from
argument_list|(
literal|"direct://CREATECOLLABORATION"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/createCollaboration"
argument_list|)
expr_stmt|;
comment|// test route for deleteCollaboration
name|from
argument_list|(
literal|"direct://DELETECOLLABORATION"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/deleteCollaboration"
argument_list|)
expr_stmt|;
comment|// test route for getAllCollaborations
name|from
argument_list|(
literal|"direct://GETALLCOLLABORATIONS"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getAllCollaborations?inBody=getAllCollabsRequest"
argument_list|)
expr_stmt|;
comment|// test route for getCollaboration
name|from
argument_list|(
literal|"direct://GETCOLLABORATION"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getCollaboration"
argument_list|)
expr_stmt|;
comment|// test route for updateCollaboration
name|from
argument_list|(
literal|"direct://UPDATECOLLABORATION"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/updateCollaboration"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

