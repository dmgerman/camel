begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Camel Api Route test generated by camel-component-util-maven-plugin  * Generated on: Mon Jun 30 14:29:45 PDT 2014  */
end_comment

begin_package
DECL|package|org.apache.camel.component.box
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|dao
operator|.
name|BoxEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|dao
operator|.
name|BoxFile
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|requests
operator|.
name|requestobjects
operator|.
name|BoxItemCopyRequestObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|internal
operator|.
name|BoxApiName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|internal
operator|.
name|BoxConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Test class for org.apache.camel.component.box.internal.LongPollingEventsManager APIs.  */
end_comment

begin_class
DECL|class|LongPollingEventsManagerIntegrationTest
specifier|public
class|class
name|LongPollingEventsManagerIntegrationTest
extends|extends
name|AbstractBoxTestSupport
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|LongPollingEventsManagerIntegrationTest
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Test
DECL|method|testPoll ()
specifier|public
name|void
name|testPoll
parameter_list|()
throws|throws
name|Exception
block|{
comment|// generate file copy event
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.fileId"
argument_list|,
name|testFileId
argument_list|)
expr_stmt|;
specifier|final
name|BoxItemCopyRequestObject
name|requestObject
init|=
name|BoxItemCopyRequestObject
operator|.
name|copyItemRequestObject
argument_list|(
literal|"0"
argument_list|)
decl_stmt|;
name|requestObject
operator|.
name|setName
argument_list|(
name|CAMEL_TEST_FILE
argument_list|)
expr_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.itemCopyRequest"
argument_list|,
name|requestObject
argument_list|)
expr_stmt|;
name|BoxFile
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://COPYFILE"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"copyFile result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"copyFile: "
operator|+
name|result
argument_list|)
expr_stmt|;
comment|// generate file delete event
name|headers
operator|.
name|clear
argument_list|()
expr_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.fileId"
argument_list|,
name|result
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.defaultRequest"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|requestBodyAndHeaders
argument_list|(
literal|"direct://DELETEFILE"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|MockEndpoint
name|mockEndpoint
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:boxEvents"
argument_list|)
decl_stmt|;
name|mockEndpoint
operator|.
name|expectedMinimumMessageCount
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|mockEndpoint
operator|.
name|setResultWaitTime
argument_list|(
name|TimeUnit
operator|.
name|MILLISECONDS
operator|.
name|convert
argument_list|(
literal|30
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
argument_list|)
expr_stmt|;
name|mockEndpoint
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
specifier|final
name|List
argument_list|<
name|Exchange
argument_list|>
name|exchanges
init|=
name|mockEndpoint
operator|.
name|getExchanges
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"poll result"
argument_list|,
name|exchanges
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"poll result"
argument_list|,
name|exchanges
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"poll result: "
operator|+
name|exchanges
argument_list|)
expr_stmt|;
for|for
control|(
name|Exchange
name|exchange
range|:
name|exchanges
control|)
block|{
name|assertNotNull
argument_list|(
literal|"poll result "
operator|+
name|BoxConstants
operator|.
name|CHUNK_SIZE_PROPERTY
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|BoxConstants
operator|.
name|CHUNK_SIZE_PROPERTY
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"poll result "
operator|+
name|BoxConstants
operator|.
name|NEXT_STREAM_POSITION_PROPERTY
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|BoxConstants
operator|.
name|NEXT_STREAM_POSITION_PROPERTY
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"poll result body"
argument_list|,
name|body
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"poll result body type"
argument_list|,
name|BoxEvent
operator|.
name|class
argument_list|,
name|body
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|String
name|eventType
init|=
operator|(
operator|(
name|BoxEvent
operator|)
name|body
operator|)
operator|.
name|getEventType
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"poll result type"
argument_list|,
name|BoxEvent
operator|.
name|EVENT_TYPE_ITEM_COPY
operator|.
name|equals
argument_list|(
name|eventType
argument_list|)
operator|||
name|BoxEvent
operator|.
name|EVENT_TYPE_ITEM_TRASH
operator|.
name|equals
argument_list|(
name|eventType
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
comment|// test route for copyFile
name|from
argument_list|(
literal|"direct://COPYFILE"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|BoxApiName
operator|.
name|FILES
operator|.
name|getName
argument_list|()
operator|+
literal|"/copyFile"
argument_list|)
expr_stmt|;
comment|// test route for deleteFile
name|from
argument_list|(
literal|"direct://DELETEFILE"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|BoxApiName
operator|.
name|FILES
operator|.
name|getName
argument_list|()
operator|+
literal|"/deleteFile"
argument_list|)
expr_stmt|;
comment|// test route for poll
name|from
argument_list|(
literal|"box://"
operator|+
name|BoxApiName
operator|.
name|POLL_EVENTS
operator|.
name|getName
argument_list|()
operator|+
literal|"/poll?streamPosition=-1&streamType=all&limit=100"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:boxEvents"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
annotation|@
name|Override
DECL|method|createCamelContext ()
specifier|protected
name|CamelContext
name|createCamelContext
parameter_list|()
throws|throws
name|Exception
block|{
comment|// also test revoke on shutdown
specifier|final
name|CamelContext
name|camelContext
init|=
name|super
operator|.
name|createCamelContext
argument_list|()
decl_stmt|;
specifier|final
name|BoxComponent
name|box
init|=
operator|(
name|BoxComponent
operator|)
name|camelContext
operator|.
name|getComponent
argument_list|(
literal|"box"
argument_list|)
decl_stmt|;
name|box
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setRevokeOnShutdown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|camelContext
return|;
block|}
block|}
end_class

end_unit

