begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_comment
comment|/*  * Camel Api Route test generated by camel-component-util-maven-plugin  * Generated on: Tue Jun 24 22:42:08 PDT 2014  */
end_comment

begin_package
DECL|package|org.apache.camel.component.box
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|dao
operator|.
name|BoxComment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|dao
operator|.
name|BoxResourceType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|requests
operator|.
name|requestobjects
operator|.
name|BoxCommentRequestObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|internal
operator|.
name|BoxApiName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Test class for com.box.boxjavalibv2.resourcemanagers.IBoxCommentsManager APIs.  */
end_comment

begin_class
DECL|class|IBoxCommentsManagerIntegrationTest
specifier|public
class|class
name|IBoxCommentsManagerIntegrationTest
extends|extends
name|AbstractBoxTestSupport
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|IBoxCommentsManagerIntegrationTest
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|PATH_PREFIX
specifier|private
specifier|static
specifier|final
name|String
name|PATH_PREFIX
init|=
name|BoxApiName
operator|.
name|COMMENTS
operator|.
name|getName
argument_list|()
decl_stmt|;
DECL|method|addComment ()
specifier|private
name|BoxComment
name|addComment
parameter_list|()
throws|throws
name|InterruptedException
block|{
specifier|final
name|BoxCommentRequestObject
name|requestObject
init|=
name|BoxCommentRequestObject
operator|.
name|addCommentRequestObject
argument_list|(
name|BoxResourceType
operator|.
name|FILE
argument_list|,
name|testFileId
argument_list|,
literal|"Camel was here!"
argument_list|)
decl_stmt|;
name|BoxComment
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://ADDCOMMENT"
argument_list|,
name|requestObject
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"addComment result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|Test
DECL|method|testAddComment1 ()
specifier|public
name|void
name|testAddComment1
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.commentedItemId"
argument_list|,
name|testFileId
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.boxjavalibv2.dao.IBoxType
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.commentedItemType"
argument_list|,
name|BoxResourceType
operator|.
name|FILE
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.message"
argument_list|,
literal|"Camel was here!"
argument_list|)
expr_stmt|;
name|BoxComment
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://ADDCOMMENT_1"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"addComment result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"addComment: "
operator|+
name|result
argument_list|)
expr_stmt|;
name|deleteComment
argument_list|(
name|result
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|deleteComment (String commentId)
specifier|public
name|void
name|deleteComment
parameter_list|(
name|String
name|commentId
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.commentId"
argument_list|,
name|commentId
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.restclientv2.requestsbase.BoxDefaultRequestObject
comment|//        headers.put("CamelBox.defaultRequest", null);
name|requestBodyAndHeaders
argument_list|(
literal|"direct://DELETECOMMENT"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetComment ()
specifier|public
name|void
name|testGetComment
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|BoxComment
name|comment
init|=
name|addComment
argument_list|()
decl_stmt|;
try|try
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.commentId"
argument_list|,
name|comment
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.restclientv2.requestsbase.BoxDefaultRequestObject
comment|//            headers.put("CamelBox.defaultRequest", null);
name|BoxComment
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETCOMMENT"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getComment: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|deleteComment
argument_list|(
name|comment
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testUpdateComment ()
specifier|public
name|void
name|testUpdateComment
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|BoxComment
name|comment
init|=
name|addComment
argument_list|()
decl_stmt|;
try|try
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.commentId"
argument_list|,
name|comment
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.boxjavalibv2.requests.requestobjects.BoxCommentRequestObject
specifier|final
name|BoxCommentRequestObject
name|requestObject
init|=
name|BoxCommentRequestObject
operator|.
name|updateCommentRequestObject
argument_list|(
literal|"Camel was here, again!"
argument_list|)
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.commentRequest"
argument_list|,
name|requestObject
argument_list|)
expr_stmt|;
name|BoxComment
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://UPDATECOMMENT"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"updateComment: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|deleteComment
argument_list|(
name|comment
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
comment|// test route for addComment
name|from
argument_list|(
literal|"direct://ADDCOMMENT"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/addComment?inBody=commentRequest"
argument_list|)
expr_stmt|;
comment|// test route for addComment
name|from
argument_list|(
literal|"direct://ADDCOMMENT_1"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/addComment"
argument_list|)
expr_stmt|;
comment|// test route for deleteComment
name|from
argument_list|(
literal|"direct://DELETECOMMENT"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/deleteComment"
argument_list|)
expr_stmt|;
comment|// test route for getComment
name|from
argument_list|(
literal|"direct://GETCOMMENT"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getComment"
argument_list|)
expr_stmt|;
comment|// test route for updateComment
name|from
argument_list|(
literal|"direct://UPDATECOMMENT"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/updateComment"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

