begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_comment
comment|/*  * Camel Api Route test generated by camel-component-util-maven-plugin  * Generated on: Tue Jun 24 22:42:08 PDT 2014  */
end_comment

begin_package
DECL|package|org.apache.camel.component.box
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|dao
operator|.
name|BoxEmailAlias
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|dao
operator|.
name|BoxFolder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|dao
operator|.
name|BoxUser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|requests
operator|.
name|requestobjects
operator|.
name|BoxEmailAliasRequestObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|requests
operator|.
name|requestobjects
operator|.
name|BoxSimpleUserRequestObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|requests
operator|.
name|requestobjects
operator|.
name|BoxUserDeleteRequestObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|requests
operator|.
name|requestobjects
operator|.
name|BoxUserRequestObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|boxjavalibv2
operator|.
name|requests
operator|.
name|requestobjects
operator|.
name|BoxUserUpdateLoginRequestObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|internal
operator|.
name|BoxApiCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|internal
operator|.
name|IBoxUsersManagerApiMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Test class for com.box.boxjavalibv2.resourcemanagers.IBoxUsersManager APIs.  */
end_comment

begin_class
DECL|class|IBoxUsersManagerIntegrationTest
specifier|public
class|class
name|IBoxUsersManagerIntegrationTest
extends|extends
name|AbstractBoxTestSupport
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|IBoxUsersManagerIntegrationTest
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|PATH_PREFIX
specifier|private
specifier|static
specifier|final
name|String
name|PATH_PREFIX
init|=
name|BoxApiCollection
operator|.
name|getCollection
argument_list|()
operator|.
name|getApiName
argument_list|(
name|IBoxUsersManagerApiMethod
operator|.
name|class
argument_list|)
operator|.
name|getName
argument_list|()
decl_stmt|;
DECL|field|CAMEL_EMAIL_ALIAS
specifier|private
specifier|static
specifier|final
name|String
name|CAMEL_EMAIL_ALIAS
init|=
literal|"camel.test@localhost.com"
decl_stmt|;
DECL|field|UPDATED_EMAIL_ALIAS
specifier|private
specifier|static
specifier|final
name|String
name|UPDATED_EMAIL_ALIAS
init|=
literal|"Updated."
operator|+
name|CAMEL_EMAIL_ALIAS
decl_stmt|;
DECL|field|CAMEL_USER_NAME
specifier|private
specifier|static
specifier|final
name|String
name|CAMEL_USER_NAME
init|=
literal|"Camel User"
decl_stmt|;
DECL|field|CAMEL_JOB_TITLE
specifier|private
specifier|static
specifier|final
name|String
name|CAMEL_JOB_TITLE
init|=
literal|"Extreme Camel Rider"
decl_stmt|;
annotation|@
name|Ignore
argument_list|(
literal|"Causes error Bad Request from SDK"
argument_list|)
annotation|@
name|Test
DECL|method|testAddEmailAlias ()
specifier|public
name|void
name|testAddEmailAlias
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.userId"
argument_list|,
name|testUserId
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.boxjavalibv2.requests.requestobjects.BoxEmailAliasRequestObject
specifier|final
name|BoxEmailAliasRequestObject
name|requestObject
init|=
name|BoxEmailAliasRequestObject
operator|.
name|addEmailAliasRequestObject
argument_list|(
name|CAMEL_EMAIL_ALIAS
argument_list|)
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.emailAliasRequest"
argument_list|,
name|requestObject
argument_list|)
expr_stmt|;
name|BoxEmailAlias
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://ADDEMAILALIAS"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"addEmailAlias result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"addEmailAlias: "
operator|+
name|result
argument_list|)
expr_stmt|;
name|deleteEmailAlias
argument_list|()
expr_stmt|;
block|}
DECL|method|createEnterpriseUser ()
specifier|public
name|BoxUser
name|createEnterpriseUser
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using com.box.boxjavalibv2.requests.requestobjects.BoxUserRequestObject message body for single parameter "userRequest"
specifier|final
name|BoxUserRequestObject
name|enterpriseUserRequestObject
init|=
name|BoxUserRequestObject
operator|.
name|createEnterpriseUserRequestObject
argument_list|(
name|CAMEL_EMAIL_ALIAS
argument_list|,
name|CAMEL_USER_NAME
argument_list|)
decl_stmt|;
name|BoxUser
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://CREATEENTERPRISEUSER"
argument_list|,
name|enterpriseUserRequestObject
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"createEnterpriseUser result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
DECL|method|deleteEmailAlias ()
specifier|public
name|void
name|deleteEmailAlias
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.userId"
argument_list|,
name|testUserId
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.emailId"
argument_list|,
name|CAMEL_EMAIL_ALIAS
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.restclientv2.requestsbase.BoxDefaultRequestObject
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.defaultRequest"
argument_list|,
name|BOX_DEFAULT_REQUEST_OBJECT
argument_list|)
expr_stmt|;
name|requestBodyAndHeaders
argument_list|(
literal|"direct://DELETEEMAILALIAS"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
expr_stmt|;
block|}
DECL|method|deleteEnterpriseUser (String userId)
specifier|public
name|void
name|deleteEnterpriseUser
parameter_list|(
name|String
name|userId
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.userId"
argument_list|,
name|userId
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.boxjavalibv2.requests.requestobjects.BoxUserDeleteRequestObject
specifier|final
name|BoxUserDeleteRequestObject
name|requestObject
init|=
name|BoxUserDeleteRequestObject
operator|.
name|deleteEnterpriseUserRequestObject
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.userDeleteRequest"
argument_list|,
name|requestObject
argument_list|)
expr_stmt|;
name|requestBodyAndHeaders
argument_list|(
literal|"direct://DELETEENTERPRISEUSER"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
expr_stmt|;
comment|// pause for user to be deleted completely
name|Thread
operator|.
name|sleep
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetAllEnterpriseUser ()
specifier|public
name|void
name|testGetAllEnterpriseUser
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is com.box.restclientv2.requestsbase.BoxDefaultRequestObject
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.defaultRequest"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.filterTerm"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|List
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETALLENTERPRISEUSER"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getAllEnterpriseUser result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getAllEnterpriseUser: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetCurrentUser ()
specifier|public
name|void
name|testGetCurrentUser
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using com.box.restclientv2.requestsbase.BoxDefaultRequestObject message body for single parameter "defaultRequest"
name|BoxUser
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://GETCURRENTUSER"
argument_list|,
name|BOX_DEFAULT_REQUEST_OBJECT
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getCurrentUser result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getCurrentUser: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetEmailAliases ()
specifier|public
name|void
name|testGetEmailAliases
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|BoxUser
name|enterpriseUser
init|=
name|createEnterpriseUser
argument_list|()
decl_stmt|;
try|try
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.userId"
argument_list|,
name|enterpriseUser
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.restclientv2.requestsbase.BoxDefaultRequestObject
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.defaultRequest"
argument_list|,
name|BOX_DEFAULT_REQUEST_OBJECT
argument_list|)
expr_stmt|;
name|List
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETEMAILALIASES"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getEmailAliases result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getEmailAliases: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|deleteEnterpriseUser
argument_list|(
name|enterpriseUser
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Ignore
argument_list|(
literal|"Developer account errors out with 'This does not currently support moving content into non-root folders'"
argument_list|)
annotation|@
name|Test
DECL|method|testMoveFolderToAnotherUser ()
specifier|public
name|void
name|testMoveFolderToAnotherUser
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|BoxUser
name|enterpriseUser
init|=
name|createEnterpriseUser
argument_list|()
decl_stmt|;
try|try
block|{
specifier|final
name|String
name|toUserId
init|=
name|enterpriseUser
operator|.
name|getId
argument_list|()
decl_stmt|;
name|moveTestFolder
argument_list|(
name|testUserId
argument_list|,
name|toUserId
argument_list|)
expr_stmt|;
name|moveTestFolder
argument_list|(
name|toUserId
argument_list|,
name|testUserId
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|deleteEnterpriseUser
argument_list|(
name|enterpriseUser
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|moveTestFolder (String fromUserId, String toUserId)
specifier|private
name|void
name|moveTestFolder
parameter_list|(
name|String
name|fromUserId
parameter_list|,
name|String
name|toUserId
parameter_list|)
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.userId"
argument_list|,
name|fromUserId
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.folderId"
argument_list|,
name|testFolderId
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.boxjavalibv2.requests.requestobjects.BoxSimpleUserRequestObject
specifier|final
name|BoxSimpleUserRequestObject
name|requestObject
init|=
name|BoxSimpleUserRequestObject
operator|.
name|moveFolderToAnotherUserRequestEntity
argument_list|(
name|toUserId
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.simpleUserRequest"
argument_list|,
name|requestObject
argument_list|)
expr_stmt|;
name|BoxFolder
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://MOVEFOLDERTOANOTHERUSER"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"moveFolderToAnotherUser result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"moveFolderToAnotherUser: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateUserInformaiton ()
specifier|public
name|void
name|testUpdateUserInformaiton
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|BoxUser
name|enterpriseUser
init|=
name|createEnterpriseUser
argument_list|()
decl_stmt|;
try|try
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.userId"
argument_list|,
name|enterpriseUser
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.boxjavalibv2.requests.requestobjects.BoxUserRequestObject
specifier|final
name|BoxUserRequestObject
name|requestObject
init|=
name|BoxUserRequestObject
operator|.
name|updateUserInfoRequestObject
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|requestObject
operator|.
name|setJobTitle
argument_list|(
name|CAMEL_JOB_TITLE
argument_list|)
expr_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.userRequest"
argument_list|,
name|requestObject
argument_list|)
expr_stmt|;
name|BoxUser
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://UPDATEUSERINFORMAITON"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"updateUserInformaiton result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"updateUserInformaiton job title"
argument_list|,
name|CAMEL_JOB_TITLE
argument_list|,
name|result
operator|.
name|getJobTitle
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"updateUserInformaiton: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|deleteEnterpriseUser
argument_list|(
name|enterpriseUser
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Ignore
argument_list|(
literal|"Requires multiple confirmed email aliases, do disabled by default"
argument_list|)
annotation|@
name|Test
DECL|method|testUpdateUserPrimaryLogin ()
specifier|public
name|void
name|testUpdateUserPrimaryLogin
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|BoxUser
name|enterpriseUser
init|=
name|createEnterpriseUser
argument_list|()
decl_stmt|;
try|try
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.userId"
argument_list|,
name|enterpriseUser
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|// parameter type is com.box.boxjavalibv2.requests.requestobjects.BoxUserUpdateLoginRequestObject
specifier|final
name|BoxUserUpdateLoginRequestObject
name|requestObject
init|=
name|BoxUserUpdateLoginRequestObject
operator|.
name|updateUserPrimaryLoginRequestObject
argument_list|(
name|UPDATED_EMAIL_ALIAS
argument_list|)
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelBox.userUpdateLoginRequest"
argument_list|,
name|requestObject
argument_list|)
expr_stmt|;
name|BoxUser
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://UPDATEUSERPRIMARYLOGIN"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"updateUserPrimaryLogin result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"updateUserPrimaryLogin primary login"
argument_list|,
name|UPDATED_EMAIL_ALIAS
argument_list|,
name|result
operator|.
name|getLogin
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"updateUserPrimaryLogin: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|deleteEnterpriseUser
argument_list|(
name|enterpriseUser
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
comment|// test route for addEmailAlias
name|from
argument_list|(
literal|"direct://ADDEMAILALIAS"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/addEmailAlias"
argument_list|)
expr_stmt|;
comment|// test route for createEnterpriseUser
name|from
argument_list|(
literal|"direct://CREATEENTERPRISEUSER"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/createEnterpriseUser?inBody=userRequest"
argument_list|)
expr_stmt|;
comment|// test route for deleteEmailAlias
name|from
argument_list|(
literal|"direct://DELETEEMAILALIAS"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/deleteEmailAlias"
argument_list|)
expr_stmt|;
comment|// test route for deleteEnterpriseUser
name|from
argument_list|(
literal|"direct://DELETEENTERPRISEUSER"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/deleteEnterpriseUser"
argument_list|)
expr_stmt|;
comment|// test route for getAllEnterpriseUser
name|from
argument_list|(
literal|"direct://GETALLENTERPRISEUSER"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getAllEnterpriseUser"
argument_list|)
expr_stmt|;
comment|// test route for getCurrentUser
name|from
argument_list|(
literal|"direct://GETCURRENTUSER"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getCurrentUser?inBody=defaultRequest"
argument_list|)
expr_stmt|;
comment|// test route for getEmailAliases
name|from
argument_list|(
literal|"direct://GETEMAILALIASES"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getEmailAliases"
argument_list|)
expr_stmt|;
comment|// test route for moveFolderToAnotherUser
name|from
argument_list|(
literal|"direct://MOVEFOLDERTOANOTHERUSER"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/moveFolderToAnotherUser"
argument_list|)
expr_stmt|;
comment|// test route for updateUserInformaiton
name|from
argument_list|(
literal|"direct://UPDATEUSERINFORMAITON"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/updateUserInformaiton"
argument_list|)
expr_stmt|;
comment|// test route for updateUserPrimaryLogin
name|from
argument_list|(
literal|"direct://UPDATEUSERPRIMARYLOGIN"
argument_list|)
operator|.
name|to
argument_list|(
literal|"box://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/updateUserPrimaryLogin"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

