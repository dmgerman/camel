begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.box
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|box
operator|.
name|sdk
operator|.
name|BoxAPIConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Consumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Producer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|api
operator|.
name|BoxCollaborationsManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|api
operator|.
name|BoxCommentsManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|api
operator|.
name|BoxEventLogsManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|api
operator|.
name|BoxEventsManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|api
operator|.
name|BoxFilesManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|api
operator|.
name|BoxFoldersManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|api
operator|.
name|BoxGroupsManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|api
operator|.
name|BoxSearchManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|api
operator|.
name|BoxTasksManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|api
operator|.
name|BoxUsersManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|internal
operator|.
name|BoxApiCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|internal
operator|.
name|BoxApiName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|internal
operator|.
name|BoxConnectionHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|internal
operator|.
name|BoxConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|box
operator|.
name|internal
operator|.
name|BoxPropertiesHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|component
operator|.
name|AbstractApiEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|component
operator|.
name|ApiMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|component
operator|.
name|ApiMethodPropertiesHelper
import|;
end_import

begin_comment
comment|/**  * For uploading downloading and managing files folders groups collaborations etc on box DOT com.  */
end_comment

begin_class
annotation|@
name|UriEndpoint
argument_list|(
name|firstVersion
operator|=
literal|"2.14.0"
argument_list|,
name|scheme
operator|=
literal|"box"
argument_list|,
name|title
operator|=
literal|"Box"
argument_list|,
name|syntax
operator|=
literal|"box:apiName/methodName"
argument_list|,
name|consumerClass
operator|=
name|BoxConsumer
operator|.
name|class
argument_list|,
name|consumerPrefix
operator|=
literal|"consumer"
argument_list|,
name|label
operator|=
literal|"api,file,cloud"
argument_list|,
name|lenientProperties
operator|=
literal|true
argument_list|)
DECL|class|BoxEndpoint
specifier|public
class|class
name|BoxEndpoint
extends|extends
name|AbstractApiEndpoint
argument_list|<
name|BoxApiName
argument_list|,
name|BoxConfiguration
argument_list|>
block|{
annotation|@
name|UriParam
DECL|field|configuration
specifier|private
name|BoxConfiguration
name|configuration
decl_stmt|;
comment|// cached connection
DECL|field|boxConnection
specifier|private
name|BoxAPIConnection
name|boxConnection
decl_stmt|;
DECL|field|apiProxy
specifier|private
name|Object
name|apiProxy
decl_stmt|;
DECL|field|boxConnectionShared
specifier|private
name|boolean
name|boxConnectionShared
decl_stmt|;
DECL|method|BoxEndpoint (String uri, BoxComponent component, BoxApiName apiName, String methodName, BoxConfiguration endpointConfiguration)
specifier|public
name|BoxEndpoint
parameter_list|(
name|String
name|uri
parameter_list|,
name|BoxComponent
name|component
parameter_list|,
name|BoxApiName
name|apiName
parameter_list|,
name|String
name|methodName
parameter_list|,
name|BoxConfiguration
name|endpointConfiguration
parameter_list|)
block|{
name|super
argument_list|(
name|uri
argument_list|,
name|component
argument_list|,
name|apiName
argument_list|,
name|methodName
argument_list|,
name|BoxApiCollection
operator|.
name|getCollection
argument_list|()
operator|.
name|getHelper
argument_list|(
name|apiName
argument_list|)
argument_list|,
name|endpointConfiguration
argument_list|)
expr_stmt|;
name|this
operator|.
name|configuration
operator|=
name|endpointConfiguration
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getComponent ()
specifier|public
name|BoxComponent
name|getComponent
parameter_list|()
block|{
return|return
operator|(
name|BoxComponent
operator|)
name|super
operator|.
name|getComponent
argument_list|()
return|;
block|}
comment|/**      * The BoxAPIConnection of endpoint.      */
DECL|method|getBoxConnection ()
specifier|public
name|BoxAPIConnection
name|getBoxConnection
parameter_list|()
block|{
return|return
name|boxConnection
return|;
block|}
DECL|method|createProducer ()
specifier|public
name|Producer
name|createProducer
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|BoxProducer
argument_list|(
name|this
argument_list|)
return|;
block|}
DECL|method|createConsumer (Processor processor)
specifier|public
name|Consumer
name|createConsumer
parameter_list|(
name|Processor
name|processor
parameter_list|)
throws|throws
name|Exception
block|{
comment|// make sure inBody is not set for consumers
if|if
condition|(
name|inBody
operator|!=
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Option inBody is not supported for consumer endpoint"
argument_list|)
throw|;
block|}
specifier|final
name|BoxConsumer
name|consumer
init|=
operator|new
name|BoxConsumer
argument_list|(
name|this
argument_list|,
name|processor
argument_list|)
decl_stmt|;
comment|// also set consumer.* properties
name|configureConsumer
argument_list|(
name|consumer
argument_list|)
expr_stmt|;
return|return
name|consumer
return|;
block|}
annotation|@
name|Override
DECL|method|getPropertiesHelper ()
specifier|protected
name|ApiMethodPropertiesHelper
argument_list|<
name|BoxConfiguration
argument_list|>
name|getPropertiesHelper
parameter_list|()
block|{
return|return
name|BoxPropertiesHelper
operator|.
name|getHelper
argument_list|()
return|;
block|}
DECL|method|getThreadProfileName ()
specifier|protected
name|String
name|getThreadProfileName
parameter_list|()
block|{
return|return
name|BoxConstants
operator|.
name|THREAD_PROFILE_NAME
return|;
block|}
annotation|@
name|Override
DECL|method|afterConfigureProperties ()
specifier|protected
name|void
name|afterConfigureProperties
parameter_list|()
block|{
comment|// create connection eagerly, a good way to validate configuration
name|createBoxConnection
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getApiProxy (ApiMethod method, Map<String, Object> args)
specifier|public
name|Object
name|getApiProxy
parameter_list|(
name|ApiMethod
name|method
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|args
parameter_list|)
block|{
if|if
condition|(
name|apiProxy
operator|==
literal|null
condition|)
block|{
comment|// create API proxy lazily
name|createApiProxy
argument_list|(
name|args
argument_list|)
expr_stmt|;
block|}
return|return
name|apiProxy
return|;
block|}
DECL|method|createBoxConnection ()
specifier|private
name|void
name|createBoxConnection
parameter_list|()
block|{
specifier|final
name|BoxComponent
name|component
init|=
name|getComponent
argument_list|()
decl_stmt|;
name|this
operator|.
name|boxConnectionShared
operator|=
name|configuration
operator|.
name|equals
argument_list|(
name|getComponent
argument_list|()
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|boxConnectionShared
condition|)
block|{
comment|// get shared singleton connection from Component
name|this
operator|.
name|boxConnection
operator|=
name|component
operator|.
name|getBoxConnection
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|boxConnection
operator|=
name|BoxConnectionHelper
operator|.
name|createConnection
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|createApiProxy (Map<String, Object> args)
specifier|private
name|void
name|createApiProxy
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|args
parameter_list|)
block|{
switch|switch
condition|(
name|apiName
condition|)
block|{
case|case
name|COLLABORATIONS
case|:
name|apiProxy
operator|=
operator|new
name|BoxCollaborationsManager
argument_list|(
name|getBoxConnection
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|COMMENTS
case|:
name|apiProxy
operator|=
operator|new
name|BoxCommentsManager
argument_list|(
name|getBoxConnection
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|EVENT_LOGS
case|:
name|apiProxy
operator|=
operator|new
name|BoxEventLogsManager
argument_list|(
name|getBoxConnection
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|EVENTS
case|:
name|apiProxy
operator|=
operator|new
name|BoxEventsManager
argument_list|(
name|getBoxConnection
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|FILES
case|:
name|apiProxy
operator|=
operator|new
name|BoxFilesManager
argument_list|(
name|getBoxConnection
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|FOLDERS
case|:
name|apiProxy
operator|=
operator|new
name|BoxFoldersManager
argument_list|(
name|getBoxConnection
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|GROUPS
case|:
name|apiProxy
operator|=
operator|new
name|BoxGroupsManager
argument_list|(
name|getBoxConnection
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|SEARCH
case|:
name|apiProxy
operator|=
operator|new
name|BoxSearchManager
argument_list|(
name|getBoxConnection
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TASKS
case|:
name|apiProxy
operator|=
operator|new
name|BoxTasksManager
argument_list|(
name|getBoxConnection
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|USERS
case|:
name|apiProxy
operator|=
operator|new
name|BoxUsersManager
argument_list|(
name|getBoxConnection
argument_list|()
argument_list|)
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Invalid API name "
operator|+
name|apiName
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

