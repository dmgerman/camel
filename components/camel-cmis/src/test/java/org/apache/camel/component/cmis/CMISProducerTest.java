begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cmis
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cmis
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Produce
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Producer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ProducerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RuntimeCamelException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|chemistry
operator|.
name|opencmis
operator|.
name|client
operator|.
name|api
operator|.
name|CmisObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|chemistry
operator|.
name|opencmis
operator|.
name|client
operator|.
name|api
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|chemistry
operator|.
name|opencmis
operator|.
name|client
operator|.
name|api
operator|.
name|Folder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|chemistry
operator|.
name|opencmis
operator|.
name|commons
operator|.
name|PropertyIds
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|chemistry
operator|.
name|opencmis
operator|.
name|commons
operator|.
name|exceptions
operator|.
name|CmisObjectNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|CMISProducerTest
specifier|public
class|class
name|CMISProducerTest
extends|extends
name|CMISTestSupport
block|{
annotation|@
name|Produce
argument_list|(
literal|"direct:start"
argument_list|)
DECL|field|template
specifier|protected
name|ProducerTemplate
name|template
decl_stmt|;
annotation|@
name|Test
DECL|method|storeMessageBodyAsTextDocument ()
specifier|public
name|void
name|storeMessageBodyAsTextDocument
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|content
init|=
literal|"Some content to be store"
decl_stmt|;
name|Exchange
name|exchange
init|=
name|createExchangeWithInBody
argument_list|(
name|content
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|CONTENT_STREAM_MIME_TYPE
argument_list|,
literal|"text/plain; charset=UTF-8"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|NAME
argument_list|,
literal|"test.file"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|OBJECT_TYPE_ID
argument_list|,
name|CamelCMISConstants
operator|.
name|CMIS_DOCUMENT
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_ACTION
argument_list|,
name|CamelCMISActions
operator|.
name|CREATE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_OBJECT_ID
argument_list|,
name|createSession
argument_list|()
operator|.
name|getRootFolder
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|CmisObject
name|object
init|=
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getBody
argument_list|(
name|CmisObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|String
name|newNodeContent
init|=
name|getDocumentContentAsString
argument_list|(
name|object
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|content
argument_list|,
name|newNodeContent
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getDocumentMimeTypeFromMessageContentType ()
specifier|public
name|void
name|getDocumentMimeTypeFromMessageContentType
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithInBody
argument_list|(
literal|"Some content to be store"
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|CONTENT_STREAM_MIME_TYPE
argument_list|,
literal|"text/plain"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|NAME
argument_list|,
literal|"test.file"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|OBJECT_TYPE_ID
argument_list|,
name|CamelCMISConstants
operator|.
name|CMIS_DOCUMENT
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_ACTION
argument_list|,
name|CamelCMISActions
operator|.
name|CREATE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_OBJECT_ID
argument_list|,
name|createSession
argument_list|()
operator|.
name|getRootFolder
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|CmisObject
name|cmisObject
init|=
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getBody
argument_list|(
name|CmisObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"text/plain"
argument_list|,
name|cmisObject
operator|.
name|getPropertyValue
argument_list|(
name|PropertyIds
operator|.
name|CONTENT_STREAM_MIME_TYPE
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|namePropertyIsAlwaysRequired ()
specifier|public
name|void
name|namePropertyIsAlwaysRequired
parameter_list|()
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithInBody
argument_list|(
literal|"Some content that will fail to be stored"
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|CONTENT_STREAM_MIME_TYPE
argument_list|,
literal|"text/plain; charset=UTF-8"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_ACTION
argument_list|,
name|CamelCMISActions
operator|.
name|CREATE
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Exception
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|CmisObject
name|cmisObject
init|=
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getBody
argument_list|(
name|CmisObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|cmisObject
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.camel.NoSuchHeaderException"
argument_list|,
name|exception
operator|.
name|getCause
argument_list|()
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createDocumentWithoutContentByExplicitlySpecifyingObjectTypeHeader ()
specifier|public
name|void
name|createDocumentWithoutContentByExplicitlySpecifyingObjectTypeHeader
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithInBody
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|CONTENT_STREAM_MIME_TYPE
argument_list|,
literal|"text/plain; charset=UTF-8"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|OBJECT_TYPE_ID
argument_list|,
name|CamelCMISConstants
operator|.
name|CMIS_DOCUMENT
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|NAME
argument_list|,
literal|"test.file"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_ACTION
argument_list|,
name|CamelCMISActions
operator|.
name|CREATE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_OBJECT_ID
argument_list|,
name|createSession
argument_list|()
operator|.
name|getRootFolder
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|CmisObject
name|cmisObject
init|=
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getBody
argument_list|(
name|CmisObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|cmisObject
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_DOCUMENT
argument_list|,
name|cmisObject
operator|.
name|getPropertyValue
argument_list|(
name|PropertyIds
operator|.
name|OBJECT_TYPE_ID
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|emptyBodyAndMissingObjectTypeHeaderCreatesFolderNode ()
specifier|public
name|void
name|emptyBodyAndMissingObjectTypeHeaderCreatesFolderNode
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithInBody
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|NAME
argument_list|,
literal|"testFolder"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_ACTION
argument_list|,
name|CamelCMISActions
operator|.
name|CREATE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_OBJECT_ID
argument_list|,
name|createSession
argument_list|()
operator|.
name|getRootFolder
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|CmisObject
name|cmisObject
init|=
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getBody
argument_list|(
name|CmisObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|cmisObject
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_FOLDER
argument_list|,
name|cmisObject
operator|.
name|getPropertyValue
argument_list|(
name|PropertyIds
operator|.
name|OBJECT_TYPE_ID
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|cmisObject
operator|instanceof
name|Folder
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|cmisPropertiesAreStored ()
specifier|public
name|void
name|cmisPropertiesAreStored
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithInBody
argument_list|(
literal|"Some content to be store"
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|CONTENT_STREAM_MIME_TYPE
argument_list|,
literal|"text/plain; charset=UTF-8"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|NAME
argument_list|,
literal|"test.txt"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|OBJECT_TYPE_ID
argument_list|,
name|CamelCMISConstants
operator|.
name|CMIS_DOCUMENT
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_ACTION
argument_list|,
name|CamelCMISActions
operator|.
name|CREATE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_OBJECT_ID
argument_list|,
name|createSession
argument_list|()
operator|.
name|getRootFolder
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|CmisObject
name|cmisObject
init|=
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getBody
argument_list|(
name|CmisObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"test.txt"
argument_list|,
name|cmisObject
operator|.
name|getPropertyValue
argument_list|(
name|PropertyIds
operator|.
name|NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"text/plain; charset=UTF-8"
argument_list|,
name|cmisObject
operator|.
name|getPropertyValue
argument_list|(
name|PropertyIds
operator|.
name|CONTENT_STREAM_MIME_TYPE
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|cmisSecondaryTypePropertiesAreStored ()
specifier|public
name|void
name|cmisSecondaryTypePropertiesAreStored
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|secondaryTypes
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"MySecondaryType"
argument_list|)
decl_stmt|;
name|Exchange
name|exchange
init|=
name|createExchangeWithInBody
argument_list|(
literal|"Some content to be store"
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|CONTENT_STREAM_MIME_TYPE
argument_list|,
literal|"text/plain; charset=UTF-8"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|NAME
argument_list|,
literal|"test.txt"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|SECONDARY_OBJECT_TYPE_IDS
argument_list|,
name|secondaryTypes
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
literal|"SecondaryStringProp"
argument_list|,
literal|"secondaryTypePropValue"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|OBJECT_TYPE_ID
argument_list|,
name|CamelCMISConstants
operator|.
name|CMIS_DOCUMENT
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_ACTION
argument_list|,
name|CamelCMISActions
operator|.
name|CREATE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_OBJECT_ID
argument_list|,
name|createSession
argument_list|()
operator|.
name|getRootFolder
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|CmisObject
name|cmisObject
init|=
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getBody
argument_list|(
name|CmisObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cmisObject
operator|.
name|getSecondaryTypes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"secondaryTypePropValue"
argument_list|,
name|cmisObject
operator|.
name|getPropertyValue
argument_list|(
literal|"SecondaryStringProp"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|RuntimeCamelException
operator|.
name|class
argument_list|)
DECL|method|failConnectingToNonExistingRepository ()
specifier|public
name|void
name|failConnectingToNonExistingRepository
parameter_list|()
throws|throws
name|Exception
block|{
name|Endpoint
name|endpoint
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"cmis://"
operator|+
name|getUrl
argument_list|()
operator|+
literal|"?username=admin&password=admin&repositoryId=NON_EXISTING_ID"
argument_list|)
decl_stmt|;
name|Producer
name|producer
init|=
name|endpoint
operator|.
name|createProducer
argument_list|()
decl_stmt|;
name|Exchange
name|exchange
init|=
name|createExchangeWithInBody
argument_list|(
literal|"Some content to be store"
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|NAME
argument_list|,
literal|"test.txt"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_ACTION
argument_list|,
name|CamelCMISActions
operator|.
name|CREATE
argument_list|)
expr_stmt|;
name|producer
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|failCreatingFolderAtNonExistingParentId ()
specifier|public
name|void
name|failCreatingFolderAtNonExistingParentId
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithInBody
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|NAME
argument_list|,
literal|"folder1"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|OBJECT_TYPE_ID
argument_list|,
name|CamelCMISConstants
operator|.
name|CMIS_FOLDER
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_ACTION
argument_list|,
name|CamelCMISActions
operator|.
name|CREATE
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_OBJECT_ID
argument_list|,
literal|"Wrong Id"
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|exchange
operator|.
name|getException
argument_list|()
operator|instanceof
name|RuntimeCamelException
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"direct:start"
argument_list|)
operator|.
name|to
argument_list|(
literal|"cmis://"
operator|+
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
annotation|@
name|Test
DECL|method|renameFolder ()
specifier|public
name|void
name|renameFolder
parameter_list|()
block|{
name|Folder
name|folder
init|=
name|createFolderWithName
argument_list|(
literal|"New Folder"
argument_list|)
decl_stmt|;
name|Exchange
name|exchange
init|=
name|createExchangeWithInBody
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|OBJECT_TYPE_ID
argument_list|,
name|CamelCMISConstants
operator|.
name|CMIS_FOLDER
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_OBJECT_ID
argument_list|,
name|folder
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|NAME
argument_list|,
literal|"Renamed Folder"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_ACTION
argument_list|,
name|CamelCMISActions
operator|.
name|RENAME
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|CmisObject
name|cmisObject
init|=
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getBody
argument_list|(
name|CmisObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Renamed Folder"
argument_list|,
name|cmisObject
operator|.
name|getPropertyValue
argument_list|(
name|PropertyIds
operator|.
name|NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|folder
operator|.
name|getId
argument_list|()
argument_list|,
name|cmisObject
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|cmisObject
operator|instanceof
name|Folder
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|renameDocument ()
specifier|public
name|void
name|renameDocument
parameter_list|()
throws|throws
name|UnsupportedEncodingException
block|{
name|Document
name|document
init|=
name|createTextDocument
argument_list|(
name|createSession
argument_list|()
operator|.
name|getRootFolder
argument_list|()
argument_list|,
literal|"This is new test document"
argument_list|,
literal|"document.txt"
argument_list|)
decl_stmt|;
name|Exchange
name|exchange
init|=
name|createExchangeWithInBody
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|OBJECT_TYPE_ID
argument_list|,
name|CamelCMISConstants
operator|.
name|CMIS_DOCUMENT
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_OBJECT_ID
argument_list|,
name|document
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|NAME
argument_list|,
literal|"Renamed Document.txt"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_ACTION
argument_list|,
name|CamelCMISActions
operator|.
name|RENAME
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|CmisObject
name|cmisObject
init|=
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getBody
argument_list|(
name|CmisObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Renamed Document.txt"
argument_list|,
name|cmisObject
operator|.
name|getPropertyValue
argument_list|(
name|PropertyIds
operator|.
name|NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|document
operator|.
name|getId
argument_list|()
argument_list|,
name|cmisObject
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|cmisObject
operator|instanceof
name|Document
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CmisObjectNotFoundException
operator|.
name|class
argument_list|)
DECL|method|deleteFolder ()
specifier|public
name|void
name|deleteFolder
parameter_list|()
block|{
name|Folder
name|folder
init|=
name|createFolderWithName
argument_list|(
literal|"Test"
argument_list|)
decl_stmt|;
name|Exchange
name|exchange
init|=
name|createExchangeWithInBody
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|OBJECT_TYPE_ID
argument_list|,
name|CamelCMISConstants
operator|.
name|CMIS_FOLDER
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_ACTION
argument_list|,
name|CamelCMISActions
operator|.
name|DELETE_FOLDER
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_OBJECT_ID
argument_list|,
name|folder
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|unsuccessfullyDeletedObjects
init|=
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getBody
argument_list|(
name|List
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|unsuccessfullyDeletedObjects
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|//Try to get already deleted object by id should throw CmisObjectNotFoundException
name|createSession
argument_list|()
operator|.
name|getObject
argument_list|(
name|folder
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CmisObjectNotFoundException
operator|.
name|class
argument_list|)
DECL|method|deleteDocument ()
specifier|public
name|void
name|deleteDocument
parameter_list|()
throws|throws
name|UnsupportedEncodingException
block|{
name|Document
name|document
init|=
name|createTextDocument
argument_list|(
name|createSession
argument_list|()
operator|.
name|getRootFolder
argument_list|()
argument_list|,
literal|"This is new test document"
argument_list|,
literal|"document.txt"
argument_list|)
decl_stmt|;
name|Exchange
name|exchange
init|=
name|createExchangeWithInBody
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|OBJECT_TYPE_ID
argument_list|,
name|CamelCMISConstants
operator|.
name|CMIS_DOCUMENT
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_ACTION
argument_list|,
name|CamelCMISActions
operator|.
name|DELETE_DOCUMENT
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_OBJECT_ID
argument_list|,
name|document
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|createSession
argument_list|()
operator|.
name|getObject
argument_list|(
name|document
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|moveFolder ()
specifier|public
name|void
name|moveFolder
parameter_list|()
block|{
name|Folder
name|toBeMoved
init|=
name|createFolderWithName
argument_list|(
literal|"Moving folder"
argument_list|)
decl_stmt|;
name|Folder
name|destinationFolder
init|=
name|createFolderWithName
argument_list|(
literal|"Destination"
argument_list|)
decl_stmt|;
name|Exchange
name|exchange
init|=
name|createExchangeWithInBody
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|OBJECT_TYPE_ID
argument_list|,
name|CamelCMISConstants
operator|.
name|CMIS_FOLDER
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_ACTION
argument_list|,
name|CamelCMISActions
operator|.
name|MOVE_FOLDER
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_OBJECT_ID
argument_list|,
name|toBeMoved
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_DESTIONATION_FOLDER_ID
argument_list|,
name|destinationFolder
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|movedFolders
init|=
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getBody
argument_list|(
name|HashMap
operator|.
name|class
argument_list|)
decl_stmt|;
name|Folder
name|movedFolder
init|=
operator|(
name|Folder
operator|)
name|createSession
argument_list|()
operator|.
name|getObject
argument_list|(
name|movedFolders
operator|.
name|get
argument_list|(
name|toBeMoved
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|movedFolder
operator|.
name|getParentId
argument_list|()
argument_list|,
name|destinationFolder
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|moveDocument ()
specifier|public
name|void
name|moveDocument
parameter_list|()
throws|throws
name|UnsupportedEncodingException
block|{
name|Folder
name|rootFolder
init|=
name|createSession
argument_list|()
operator|.
name|getRootFolder
argument_list|()
decl_stmt|;
name|Document
name|toBeMoved
init|=
name|createTextDocument
argument_list|(
name|rootFolder
argument_list|,
literal|"This is new test document"
argument_list|,
literal|"document.txt"
argument_list|)
decl_stmt|;
name|Folder
name|destinationFolder
init|=
name|createFolderWithName
argument_list|(
literal|"Destination"
argument_list|)
decl_stmt|;
name|Exchange
name|exchange
init|=
name|createExchangeWithInBody
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|OBJECT_TYPE_ID
argument_list|,
name|CamelCMISConstants
operator|.
name|CMIS_DOCUMENT
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_ACTION
argument_list|,
name|CamelCMISActions
operator|.
name|MOVE_DOCUMENT
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_OBJECT_ID
argument_list|,
name|toBeMoved
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_SOURCE_FOLDER_ID
argument_list|,
name|rootFolder
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_DESTIONATION_FOLDER_ID
argument_list|,
name|destinationFolder
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|toBeMoved
operator|.
name|getParents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|,
name|destinationFolder
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|copyDocument ()
specifier|public
name|void
name|copyDocument
parameter_list|()
throws|throws
name|UnsupportedEncodingException
block|{
name|Folder
name|destination
init|=
name|createFolderWithName
argument_list|(
literal|"Destination"
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
name|createTextDocument
argument_list|(
name|createSession
argument_list|()
operator|.
name|getRootFolder
argument_list|()
argument_list|,
literal|"This is new test document"
argument_list|,
literal|"document.txt"
argument_list|)
decl_stmt|;
name|Exchange
name|exchange
init|=
name|createExchangeWithInBody
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|OBJECT_TYPE_ID
argument_list|,
name|CamelCMISConstants
operator|.
name|CMIS_DOCUMENT
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_ACTION
argument_list|,
name|CamelCMISActions
operator|.
name|COPY_DOCUMENT
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_OBJECT_ID
argument_list|,
name|document
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_DESTIONATION_FOLDER_ID
argument_list|,
name|destination
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Document
name|copy
init|=
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getBody
argument_list|(
name|Document
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|copy
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|document
operator|.
name|getName
argument_list|()
argument_list|,
name|copy
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|document
operator|.
name|getContentStreamLength
argument_list|()
argument_list|,
name|copy
operator|.
name|getContentStreamLength
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|destination
operator|.
name|getId
argument_list|()
argument_list|,
name|copy
operator|.
name|getParents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|copyFolder ()
specifier|public
name|void
name|copyFolder
parameter_list|()
block|{
name|Folder
name|folder
init|=
name|createFolderWithName
argument_list|(
literal|"Folder"
argument_list|)
decl_stmt|;
name|Folder
name|destination
init|=
name|createFolderWithName
argument_list|(
literal|"Destination Folder"
argument_list|)
decl_stmt|;
name|Exchange
name|exchange
init|=
name|createExchangeWithInBody
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|PropertyIds
operator|.
name|OBJECT_TYPE_ID
argument_list|,
name|CamelCMISConstants
operator|.
name|CMIS_FOLDER
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_ACTION
argument_list|,
name|CamelCMISActions
operator|.
name|COPY_FOLDER
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_OBJECT_ID
argument_list|,
name|folder
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
name|CamelCMISConstants
operator|.
name|CMIS_DESTIONATION_FOLDER_ID
argument_list|,
name|destination
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|copiedFolders
init|=
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getBody
argument_list|(
name|HashMap
operator|.
name|class
argument_list|)
decl_stmt|;
name|Folder
name|copy
init|=
operator|(
name|Folder
operator|)
name|createSession
argument_list|()
operator|.
name|getObject
argument_list|(
name|copiedFolders
operator|.
name|get
argument_list|(
name|folder
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|folder
operator|.
name|getName
argument_list|()
argument_list|,
name|copy
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
name|folder
operator|.
name|getId
argument_list|()
argument_list|,
name|copy
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

