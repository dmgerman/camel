begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cmis
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cmis
package|;
end_package

begin_enum
DECL|enum|CamelCMISActions
specifier|public
enum|enum
name|CamelCMISActions
block|{
DECL|enumConstant|CREATE
name|CREATE
block|{
specifier|public
name|String
name|getMethodName
parameter_list|()
block|{
return|return
literal|"createNode"
return|;
block|}
block|}
block|,
DECL|enumConstant|DELETE_DOCUMENT
name|DELETE_DOCUMENT
block|{
specifier|public
name|String
name|getMethodName
parameter_list|()
block|{
return|return
literal|"deleteDocument"
return|;
block|}
block|}
block|,
DECL|enumConstant|DELETE_FOLDER
name|DELETE_FOLDER
block|{
specifier|public
name|String
name|getMethodName
parameter_list|()
block|{
return|return
literal|"deleteFolder"
return|;
block|}
block|}
block|,
DECL|enumConstant|MOVE_DOCUMENT
name|MOVE_DOCUMENT
block|{
specifier|public
name|String
name|getMethodName
parameter_list|()
block|{
return|return
literal|"moveDocument"
return|;
block|}
block|}
block|,
DECL|enumConstant|MOVE_FOLDER
name|MOVE_FOLDER
block|{
specifier|public
name|String
name|getMethodName
parameter_list|()
block|{
return|return
literal|"moveFolder"
return|;
block|}
block|}
block|,
DECL|enumConstant|COPY_DOCUMENT
name|COPY_DOCUMENT
block|{
specifier|public
name|String
name|getMethodName
parameter_list|()
block|{
return|return
literal|"copyDocument"
return|;
block|}
block|}
block|,
DECL|enumConstant|COPY_FOLDER
name|COPY_FOLDER
block|{
specifier|public
name|String
name|getMethodName
parameter_list|()
block|{
return|return
literal|"copyFolder"
return|;
block|}
block|}
block|,
DECL|enumConstant|RENAME
name|RENAME
block|{
specifier|public
name|String
name|getMethodName
parameter_list|()
block|{
return|return
literal|"rename"
return|;
block|}
block|}
block|,
DECL|enumConstant|CHECK_IN
name|CHECK_IN
block|{
specifier|public
name|String
name|getMethodName
parameter_list|()
block|{
return|return
literal|"checkIn"
return|;
block|}
block|}
block|,
DECL|enumConstant|CHECK_OUT
name|CHECK_OUT
block|{
specifier|public
name|String
name|getMethodName
parameter_list|()
block|{
return|return
literal|"checkOut"
return|;
block|}
block|}
block|,
DECL|enumConstant|CANCEL_CHECK_OUT
name|CANCEL_CHECK_OUT
block|{
specifier|public
name|String
name|getMethodName
parameter_list|()
block|{
return|return
literal|"cancelCheckOut"
return|;
block|}
block|}
block|;
DECL|method|getMethodName ()
specifier|public
specifier|abstract
name|String
name|getMethodName
parameter_list|()
function_decl|;
block|}
end_enum

end_unit

