begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.spring.cloud.netflix
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|cloud
operator|.
name|netflix
package|;
end_package

begin_import
import|import
name|com
operator|.
name|netflix
operator|.
name|client
operator|.
name|config
operator|.
name|IClientConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|netflix
operator|.
name|loadbalancer
operator|.
name|ServerList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|cloud
operator|.
name|CamelCloudServiceDiscovery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|cloud
operator|.
name|CamelCloudServiceFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|condition
operator|.
name|ConditionalOnMissingBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Bean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Configuration
import|;
end_import

begin_class
annotation|@
name|Configuration
DECL|class|CamelCloudNetflixRibbonClientConfiguration
specifier|public
class|class
name|CamelCloudNetflixRibbonClientConfiguration
block|{
annotation|@
name|Autowired
DECL|field|clientConfig
specifier|private
name|IClientConfig
name|clientConfig
decl_stmt|;
annotation|@
name|Autowired
DECL|field|serviceDiscovery
specifier|private
name|CamelCloudServiceDiscovery
name|serviceDiscovery
decl_stmt|;
annotation|@
name|Autowired
DECL|field|serviceFilter
specifier|private
name|CamelCloudServiceFilter
name|serviceFilter
decl_stmt|;
annotation|@
name|Bean
annotation|@
name|ConditionalOnMissingBean
DECL|method|ribbonServerList ()
specifier|public
name|ServerList
argument_list|<
name|?
argument_list|>
name|ribbonServerList
parameter_list|()
block|{
name|CamelCloudNetflixServerList
name|serverList
init|=
operator|new
name|CamelCloudNetflixServerList
argument_list|()
decl_stmt|;
name|serverList
operator|.
name|setServiceDiscovery
argument_list|(
name|serviceDiscovery
argument_list|)
expr_stmt|;
name|serverList
operator|.
name|setServiceFilter
argument_list|(
name|serviceFilter
argument_list|)
expr_stmt|;
name|serverList
operator|.
name|initWithNiwsConfig
argument_list|(
name|clientConfig
argument_list|)
expr_stmt|;
return|return
name|serverList
return|;
block|}
block|}
end_class

end_unit

