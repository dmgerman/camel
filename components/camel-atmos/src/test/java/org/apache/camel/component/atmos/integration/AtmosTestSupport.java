begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.atmos.integration
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|atmos
operator|.
name|integration
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|atmos
operator|.
name|AtmosComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_class
DECL|class|AtmosTestSupport
specifier|public
class|class
name|AtmosTestSupport
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Override
DECL|method|createCamelContext ()
specifier|protected
name|CamelContext
name|createCamelContext
parameter_list|()
throws|throws
name|Exception
block|{
name|CamelContext
name|camelContext
init|=
name|super
operator|.
name|createCamelContext
argument_list|()
decl_stmt|;
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|properties
operator|.
name|load
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/atmos.properties"
argument_list|)
argument_list|)
expr_stmt|;
name|AtmosComponent
name|component
init|=
operator|new
name|AtmosComponent
argument_list|()
decl_stmt|;
name|component
operator|.
name|setFullTokenId
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"fullTokenId"
argument_list|)
argument_list|)
expr_stmt|;
name|component
operator|.
name|setSecretKey
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"secretKey"
argument_list|)
argument_list|)
expr_stmt|;
name|component
operator|.
name|setUri
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"uri"
argument_list|)
argument_list|)
expr_stmt|;
name|component
operator|.
name|setSslValidation
argument_list|(
name|Boolean
operator|.
name|parseBoolean
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"sslValidation"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
literal|"atmos"
argument_list|,
name|component
argument_list|)
expr_stmt|;
return|return
name|camelContext
return|;
block|}
block|}
end_class

end_unit

