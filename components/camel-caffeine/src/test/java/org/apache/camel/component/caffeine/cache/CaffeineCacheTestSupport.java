begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.caffeine.cache
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|caffeine
operator|.
name|cache
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|IntStream
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|MetricRegistry
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|benmanes
operator|.
name|caffeine
operator|.
name|cache
operator|.
name|Cache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|benmanes
operator|.
name|caffeine
operator|.
name|cache
operator|.
name|Caffeine
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|benmanes
operator|.
name|caffeine
operator|.
name|cache
operator|.
name|RemovalCause
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|benmanes
operator|.
name|caffeine
operator|.
name|cache
operator|.
name|RemovalListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|JndiRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|CaffeineCacheTestSupport
specifier|public
class|class
name|CaffeineCacheTestSupport
extends|extends
name|CamelTestSupport
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|CaffeineCacheTestSupport
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|cache
specifier|private
name|Cache
name|cache
init|=
name|Caffeine
operator|.
name|newBuilder
argument_list|()
operator|.
name|recordStats
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|cacheRl
specifier|private
name|Cache
name|cacheRl
init|=
name|Caffeine
operator|.
name|newBuilder
argument_list|()
operator|.
name|recordStats
argument_list|()
operator|.
name|removalListener
argument_list|(
operator|new
name|DummyRemovalListener
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|mRegistry
specifier|private
name|MetricRegistry
name|mRegistry
init|=
operator|new
name|MetricRegistry
argument_list|()
decl_stmt|;
DECL|field|cacheSc
specifier|private
name|Cache
name|cacheSc
init|=
name|Caffeine
operator|.
name|newBuilder
argument_list|()
operator|.
name|recordStats
argument_list|(
parameter_list|()
lambda|->
operator|new
name|MetricsStatsCounter
argument_list|(
name|mRegistry
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|createRegistry ()
specifier|protected
name|JndiRegistry
name|createRegistry
parameter_list|()
throws|throws
name|Exception
block|{
name|JndiRegistry
name|registry
init|=
name|super
operator|.
name|createRegistry
argument_list|()
decl_stmt|;
name|registry
operator|.
name|bind
argument_list|(
literal|"cache"
argument_list|,
name|cache
argument_list|)
expr_stmt|;
name|registry
operator|.
name|bind
argument_list|(
literal|"cacheRl"
argument_list|,
name|cacheRl
argument_list|)
expr_stmt|;
name|registry
operator|.
name|bind
argument_list|(
literal|"cacheSc"
argument_list|,
name|cacheSc
argument_list|)
expr_stmt|;
return|return
name|registry
return|;
block|}
DECL|method|getTestCache ()
specifier|protected
name|Cache
name|getTestCache
parameter_list|()
block|{
return|return
name|cache
return|;
block|}
DECL|method|getTestRemovalListenerCache ()
specifier|protected
name|Cache
name|getTestRemovalListenerCache
parameter_list|()
block|{
return|return
name|cacheRl
return|;
block|}
DECL|method|getTestStatsCounterCache ()
specifier|protected
name|Cache
name|getTestStatsCounterCache
parameter_list|()
block|{
return|return
name|cacheSc
return|;
block|}
DECL|method|getMetricRegistry ()
specifier|protected
name|MetricRegistry
name|getMetricRegistry
parameter_list|()
block|{
return|return
name|mRegistry
return|;
block|}
DECL|method|generateRandomArrayOfInt (int size, int lower, int upper)
specifier|protected
specifier|static
name|int
index|[]
name|generateRandomArrayOfInt
parameter_list|(
name|int
name|size
parameter_list|,
name|int
name|lower
parameter_list|,
name|int
name|upper
parameter_list|)
block|{
name|Random
name|random
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
name|int
index|[]
name|array
init|=
operator|new
name|int
index|[
name|size
index|]
decl_stmt|;
name|Arrays
operator|.
name|setAll
argument_list|(
name|array
argument_list|,
name|i
lambda|->
name|random
operator|.
name|nextInt
argument_list|(
name|upper
operator|-
name|lower
argument_list|)
operator|+
name|lower
argument_list|)
expr_stmt|;
return|return
name|array
return|;
block|}
DECL|method|generateRandomString ()
specifier|protected
specifier|static
name|String
name|generateRandomString
parameter_list|()
block|{
return|return
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|generateRandomArrayOfStrings (int size)
specifier|protected
specifier|static
name|String
index|[]
name|generateRandomArrayOfStrings
parameter_list|(
name|int
name|size
parameter_list|)
block|{
name|String
index|[]
name|array
init|=
operator|new
name|String
index|[
name|size
index|]
decl_stmt|;
name|Arrays
operator|.
name|setAll
argument_list|(
name|array
argument_list|,
name|i
lambda|->
name|generateRandomString
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|array
return|;
block|}
DECL|method|generateRandomListOfStrings (int size)
specifier|protected
specifier|static
name|List
argument_list|<
name|String
argument_list|>
name|generateRandomListOfStrings
parameter_list|(
name|int
name|size
parameter_list|)
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|generateRandomArrayOfStrings
argument_list|(
name|size
argument_list|)
argument_list|)
return|;
block|}
DECL|method|generateRandomMapOfString (int size)
specifier|protected
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|generateRandomMapOfString
parameter_list|(
name|int
name|size
parameter_list|)
block|{
return|return
name|IntStream
operator|.
name|range
argument_list|(
literal|0
argument_list|,
name|size
argument_list|)
operator|.
name|boxed
argument_list|()
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toMap
argument_list|(
name|i
lambda|->
name|i
operator|+
literal|"-"
operator|+
name|generateRandomString
argument_list|()
argument_list|,
name|i
lambda|->
name|i
operator|+
literal|"-"
operator|+
name|generateRandomString
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
DECL|class|DummyRemovalListener
class|class
name|DummyRemovalListener
implements|implements
name|RemovalListener
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
block|{
annotation|@
name|Override
DECL|method|onRemoval (Object key, Object value, RemovalCause cause)
specifier|public
name|void
name|onRemoval
parameter_list|(
name|Object
name|key
parameter_list|,
name|Object
name|value
parameter_list|,
name|RemovalCause
name|cause
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Key %s was removed (%s)%n"
argument_list|,
name|key
argument_list|,
name|cause
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

