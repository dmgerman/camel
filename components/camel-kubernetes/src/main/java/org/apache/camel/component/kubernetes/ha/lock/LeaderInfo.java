begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.kubernetes.ha.lock
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|kubernetes
operator|.
name|ha
operator|.
name|lock
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_comment
comment|/**  * Overview of a leadership status.  */
end_comment

begin_class
DECL|class|LeaderInfo
specifier|public
class|class
name|LeaderInfo
block|{
DECL|field|groupName
specifier|private
name|String
name|groupName
decl_stmt|;
DECL|field|leader
specifier|private
name|String
name|leader
decl_stmt|;
DECL|field|timestamp
specifier|private
name|Date
name|timestamp
decl_stmt|;
DECL|method|LeaderInfo ()
specifier|public
name|LeaderInfo
parameter_list|()
block|{     }
DECL|method|LeaderInfo (String groupName, String leader, Date timestamp)
specifier|public
name|LeaderInfo
parameter_list|(
name|String
name|groupName
parameter_list|,
name|String
name|leader
parameter_list|,
name|Date
name|timestamp
parameter_list|)
block|{
name|this
operator|.
name|groupName
operator|=
name|groupName
expr_stmt|;
name|this
operator|.
name|leader
operator|=
name|leader
expr_stmt|;
name|this
operator|.
name|timestamp
operator|=
name|timestamp
expr_stmt|;
block|}
DECL|method|isTimeElapsedSeconds (long timeSeconds)
specifier|public
name|boolean
name|isTimeElapsedSeconds
parameter_list|(
name|long
name|timeSeconds
parameter_list|)
block|{
if|if
condition|(
name|timestamp
operator|==
literal|null
condition|)
block|{
return|return
literal|true
return|;
block|}
name|long
name|now
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
return|return
name|timestamp
operator|.
name|getTime
argument_list|()
operator|+
name|timeSeconds
operator|*
literal|1000
operator|<=
name|now
return|;
block|}
DECL|method|isLeader (String pod)
specifier|public
name|boolean
name|isLeader
parameter_list|(
name|String
name|pod
parameter_list|)
block|{
name|ObjectHelper
operator|.
name|notNull
argument_list|(
name|pod
argument_list|,
literal|"pod"
argument_list|)
expr_stmt|;
return|return
name|pod
operator|.
name|equals
argument_list|(
name|leader
argument_list|)
return|;
block|}
DECL|method|getGroupName ()
specifier|public
name|String
name|getGroupName
parameter_list|()
block|{
return|return
name|groupName
return|;
block|}
DECL|method|setGroupName (String groupName)
specifier|public
name|void
name|setGroupName
parameter_list|(
name|String
name|groupName
parameter_list|)
block|{
name|this
operator|.
name|groupName
operator|=
name|groupName
expr_stmt|;
block|}
DECL|method|getLeader ()
specifier|public
name|String
name|getLeader
parameter_list|()
block|{
return|return
name|leader
return|;
block|}
DECL|method|setLeader (String leader)
specifier|public
name|void
name|setLeader
parameter_list|(
name|String
name|leader
parameter_list|)
block|{
name|this
operator|.
name|leader
operator|=
name|leader
expr_stmt|;
block|}
DECL|method|getTimestamp ()
specifier|public
name|Date
name|getTimestamp
parameter_list|()
block|{
return|return
name|timestamp
return|;
block|}
DECL|method|setTimestamp (Date timestamp)
specifier|public
name|void
name|setTimestamp
parameter_list|(
name|Date
name|timestamp
parameter_list|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|timestamp
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
specifier|final
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|(
literal|"LeaderInfo{"
argument_list|)
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"groupName='"
argument_list|)
operator|.
name|append
argument_list|(
name|groupName
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", leader='"
argument_list|)
operator|.
name|append
argument_list|(
name|leader
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", timestamp="
argument_list|)
operator|.
name|append
argument_list|(
name|timestamp
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|'}'
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

