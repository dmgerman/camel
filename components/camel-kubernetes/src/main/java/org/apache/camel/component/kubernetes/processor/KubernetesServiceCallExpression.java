begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.kubernetes.processor
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|kubernetes
operator|.
name|processor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|kubernetes
operator|.
name|KubernetesConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|ServiceCallExpressionSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ExchangeHelper
import|;
end_import

begin_class
DECL|class|KubernetesServiceCallExpression
specifier|public
class|class
name|KubernetesServiceCallExpression
extends|extends
name|ServiceCallExpressionSupport
block|{
DECL|method|KubernetesServiceCallExpression (String name, String scheme, String contextPath, String uri)
specifier|public
name|KubernetesServiceCallExpression
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|scheme
parameter_list|,
name|String
name|contextPath
parameter_list|,
name|String
name|uri
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|,
name|scheme
argument_list|,
name|contextPath
argument_list|,
name|uri
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getIp (Exchange exchange)
specifier|public
name|String
name|getIp
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|ExchangeHelper
operator|.
name|getMandatoryHeader
argument_list|(
name|exchange
argument_list|,
name|KubernetesConstants
operator|.
name|KUBERNETES_SERVER_IP
argument_list|,
name|String
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getPort (Exchange exchange)
specifier|public
name|int
name|getPort
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|ExchangeHelper
operator|.
name|getMandatoryHeader
argument_list|(
name|exchange
argument_list|,
name|KubernetesConstants
operator|.
name|KUBERNETES_SERVER_PORT
argument_list|,
name|int
operator|.
name|class
argument_list|)
return|;
block|}
block|}
end_class

end_unit

