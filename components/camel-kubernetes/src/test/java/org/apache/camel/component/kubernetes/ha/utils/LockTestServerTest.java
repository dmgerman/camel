begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.kubernetes.ha.utils
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|kubernetes
operator|.
name|ha
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|io
operator|.
name|fabric8
operator|.
name|kubernetes
operator|.
name|api
operator|.
name|model
operator|.
name|ConfigMap
import|;
end_import

begin_import
import|import
name|io
operator|.
name|fabric8
operator|.
name|kubernetes
operator|.
name|api
operator|.
name|model
operator|.
name|ConfigMapBuilder
import|;
end_import

begin_import
import|import
name|io
operator|.
name|fabric8
operator|.
name|kubernetes
operator|.
name|client
operator|.
name|KubernetesClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_comment
comment|/**  * Basic tests on the lock test server.  */
end_comment

begin_class
DECL|class|LockTestServerTest
specifier|public
class|class
name|LockTestServerTest
block|{
annotation|@
name|Test
DECL|method|test ()
specifier|public
name|void
name|test
parameter_list|()
block|{
name|ConfigMapLockSimulator
name|lock
init|=
operator|new
name|ConfigMapLockSimulator
argument_list|(
literal|"xxx"
argument_list|)
decl_stmt|;
name|LockTestServer
name|server
init|=
operator|new
name|LockTestServer
argument_list|(
name|lock
argument_list|)
decl_stmt|;
name|KubernetesClient
name|client
init|=
name|server
operator|.
name|createClient
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|client
operator|.
name|configMaps
argument_list|()
operator|.
name|withName
argument_list|(
literal|"xxx"
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|configMaps
argument_list|()
operator|.
name|withName
argument_list|(
literal|"xxx"
argument_list|)
operator|.
name|createNew
argument_list|()
operator|.
name|withNewMetadata
argument_list|()
operator|.
name|withName
argument_list|(
literal|"xxx"
argument_list|)
operator|.
name|and
argument_list|()
operator|.
name|done
argument_list|()
expr_stmt|;
try|try
block|{
name|client
operator|.
name|configMaps
argument_list|()
operator|.
name|withName
argument_list|(
literal|"xxx"
argument_list|)
operator|.
name|createNew
argument_list|()
operator|.
name|withNewMetadata
argument_list|()
operator|.
name|withName
argument_list|(
literal|"xxx"
argument_list|)
operator|.
name|and
argument_list|()
operator|.
name|done
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Should have failed for duplicate insert"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{         }
name|client
operator|.
name|configMaps
argument_list|()
operator|.
name|withName
argument_list|(
literal|"xxx"
argument_list|)
operator|.
name|createOrReplaceWithNew
argument_list|()
operator|.
name|editOrNewMetadata
argument_list|()
operator|.
name|withName
argument_list|(
literal|"xxx"
argument_list|)
operator|.
name|addToLabels
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
operator|.
name|and
argument_list|()
operator|.
name|done
argument_list|()
expr_stmt|;
name|ConfigMap
name|map
init|=
name|client
operator|.
name|configMaps
argument_list|()
operator|.
name|withName
argument_list|(
literal|"xxx"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
name|map
operator|.
name|getMetadata
argument_list|()
operator|.
name|getLabels
argument_list|()
operator|.
name|get
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|configMaps
argument_list|()
operator|.
name|withName
argument_list|(
literal|"xxx"
argument_list|)
operator|.
name|lockResourceVersion
argument_list|(
name|map
operator|.
name|getMetadata
argument_list|()
operator|.
name|getResourceVersion
argument_list|()
argument_list|)
operator|.
name|replace
argument_list|(
operator|new
name|ConfigMapBuilder
argument_list|(
name|map
argument_list|)
operator|.
name|editOrNewMetadata
argument_list|()
operator|.
name|withName
argument_list|(
literal|"xxx"
argument_list|)
operator|.
name|addToLabels
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|)
operator|.
name|and
argument_list|()
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|ConfigMap
name|newMap
init|=
name|client
operator|.
name|configMaps
argument_list|()
operator|.
name|withName
argument_list|(
literal|"xxx"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
name|newMap
operator|.
name|getMetadata
argument_list|()
operator|.
name|getLabels
argument_list|()
operator|.
name|get
argument_list|(
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|configMaps
argument_list|()
operator|.
name|withName
argument_list|(
literal|"xxx"
argument_list|)
operator|.
name|lockResourceVersion
argument_list|(
name|map
operator|.
name|getMetadata
argument_list|()
operator|.
name|getResourceVersion
argument_list|()
argument_list|)
operator|.
name|replace
argument_list|(
operator|new
name|ConfigMapBuilder
argument_list|(
name|map
argument_list|)
operator|.
name|editOrNewMetadata
argument_list|()
operator|.
name|withName
argument_list|(
literal|"xxx"
argument_list|)
operator|.
name|addToLabels
argument_list|(
literal|"e"
argument_list|,
literal|"f"
argument_list|)
operator|.
name|and
argument_list|()
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Should have failed for wrong version"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{         }
name|ConfigMap
name|newMap2
init|=
name|client
operator|.
name|configMaps
argument_list|()
operator|.
name|withName
argument_list|(
literal|"xxx"
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|newMap2
operator|.
name|getMetadata
argument_list|()
operator|.
name|getLabels
argument_list|()
operator|.
name|get
argument_list|(
literal|"e"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

