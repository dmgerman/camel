begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|com.viwilo.camel.producer
package|package
name|com
operator|.
name|viwilo
operator|.
name|camel
operator|.
name|producer
package|;
end_package

begin_import
import|import
name|com
operator|.
name|myjeeva
operator|.
name|digitalocean
operator|.
name|common
operator|.
name|ResourceType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|myjeeva
operator|.
name|digitalocean
operator|.
name|pojo
operator|.
name|*
import|;
end_import

begin_import
import|import
name|com
operator|.
name|myjeeva
operator|.
name|digitalocean
operator|.
name|pojo
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|com
operator|.
name|viwilo
operator|.
name|camel
operator|.
name|DigitalOceanConfiguration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|viwilo
operator|.
name|camel
operator|.
name|constants
operator|.
name|DigitalOceanHeaders
import|;
end_import

begin_import
import|import
name|com
operator|.
name|viwilo
operator|.
name|camel
operator|.
name|DigitalOceanEndpoint
import|;
end_import

begin_import
import|import
name|com
operator|.
name|viwilo
operator|.
name|camel
operator|.
name|constants
operator|.
name|DigitalOceanOperations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_comment
comment|/**  * The DigitalOcean producer for Droplets API.  */
end_comment

begin_class
DECL|class|DigitalOceanDropletsProducer
specifier|public
class|class
name|DigitalOceanDropletsProducer
extends|extends
name|DigitalOceanProducer
block|{
DECL|method|DigitalOceanDropletsProducer (DigitalOceanEndpoint endpoint, DigitalOceanConfiguration configuration)
specifier|public
name|DigitalOceanDropletsProducer
parameter_list|(
name|DigitalOceanEndpoint
name|endpoint
parameter_list|,
name|DigitalOceanConfiguration
name|configuration
parameter_list|)
block|{
name|super
argument_list|(
name|endpoint
argument_list|,
name|configuration
argument_list|)
expr_stmt|;
block|}
DECL|field|dropletId
specifier|private
name|Integer
name|dropletId
decl_stmt|;
DECL|method|process (Exchange exchange)
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|DigitalOceanOperations
name|op
init|=
name|determineOperation
argument_list|(
name|exchange
argument_list|)
decl_stmt|;
if|if
condition|(
name|op
operator|!=
name|DigitalOceanOperations
operator|.
name|create
operator|&&
name|op
operator|!=
name|DigitalOceanOperations
operator|.
name|list
operator|&&
name|op
operator|!=
name|DigitalOceanOperations
operator|.
name|listAllNeighbors
condition|)
block|{
name|dropletId
operator|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|ID
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
expr_stmt|;
if|if
condition|(
name|ObjectHelper
operator|.
name|isEmpty
argument_list|(
name|dropletId
argument_list|)
condition|)
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|DigitalOceanHeaders
operator|.
name|ID
operator|+
literal|" must be specified"
argument_list|)
throw|;
block|}
switch|switch
condition|(
name|op
condition|)
block|{
case|case
name|create
case|:
name|createDroplet
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|list
case|:
name|getDroplets
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|delete
case|:
name|deleteDroplet
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|get
case|:
name|getDroplet
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|listActions
case|:
name|getDropletActions
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|listSnapshots
case|:
name|getDropletSnapshots
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|listKernels
case|:
name|getDropletKernels
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|listBackups
case|:
name|getDropletBackups
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|listNeighbors
case|:
name|getDropletNeighbors
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|listAllNeighbors
case|:
name|getAllDropletNeighbors
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|enableBackups
case|:
name|enableDropletBackups
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|disableBackups
case|:
name|disableDropletBackups
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|reboot
case|:
name|rebootDroplet
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|powerCycle
case|:
name|powerCycleDroplet
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|shutdown
case|:
name|shutdownDroplet
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|powerOn
case|:
name|powerOnDroplet
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|powerOff
case|:
name|powerOffDroplet
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|restore
case|:
name|restoreDroplet
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|resetPassword
case|:
name|resetDropletPassword
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|resize
case|:
name|resizeDroplet
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|rebuild
case|:
name|rebuildDroplet
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|rename
case|:
name|renameDroplet
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|changeKernel
case|:
name|changeDropletKernel
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|enableIpv6
case|:
name|enableDropletIpv6
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|enablePrivateNetworking
case|:
name|enableDropletPrivateNetworking
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|takeSnapshot
case|:
name|takeDropletSnapshot
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|tag
case|:
name|tagDroplet
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|untag
case|:
name|untagDroplet
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Unsupported operation"
argument_list|)
throw|;
block|}
block|}
DECL|method|getDroplet (Exchange exchange)
specifier|private
name|void
name|getDroplet
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Droplet
name|droplet
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|getDropletInfo
argument_list|(
name|dropletId
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Droplet {} "
argument_list|,
name|droplet
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|droplet
argument_list|)
expr_stmt|;
block|}
DECL|method|getDroplets (Exchange exchange)
specifier|private
name|void
name|getDroplets
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Droplets
name|droplets
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|getAvailableDroplets
argument_list|(
name|configuration
operator|.
name|getPage
argument_list|()
argument_list|,
name|configuration
operator|.
name|getPerPage
argument_list|()
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"All Droplets : page {} / {} per page [{}] "
argument_list|,
name|configuration
operator|.
name|getPage
argument_list|()
argument_list|,
name|configuration
operator|.
name|getPerPage
argument_list|()
argument_list|,
name|droplets
operator|.
name|getDroplets
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|droplets
operator|.
name|getDroplets
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getDropletActions (Exchange exchange)
specifier|private
name|void
name|getDropletActions
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Actions
name|actions
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|getAvailableDropletActions
argument_list|(
name|dropletId
argument_list|,
name|configuration
operator|.
name|getPage
argument_list|()
argument_list|,
name|configuration
operator|.
name|getPerPage
argument_list|()
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Actions for Droplet {} : page {} / {} per page [{}] "
argument_list|,
name|dropletId
argument_list|,
name|configuration
operator|.
name|getPage
argument_list|()
argument_list|,
name|configuration
operator|.
name|getPerPage
argument_list|()
argument_list|,
name|actions
operator|.
name|getActions
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|actions
operator|.
name|getActions
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getDropletKernels (Exchange exchange)
specifier|private
name|void
name|getDropletKernels
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Kernels
name|kernels
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|getDropletKernels
argument_list|(
name|dropletId
argument_list|,
name|configuration
operator|.
name|getPage
argument_list|()
argument_list|,
name|configuration
operator|.
name|getPerPage
argument_list|()
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Kernels for Droplet {} : page {} / {} per page [{}] "
argument_list|,
name|dropletId
argument_list|,
name|configuration
operator|.
name|getPage
argument_list|()
argument_list|,
name|configuration
operator|.
name|getPerPage
argument_list|()
argument_list|,
name|kernels
operator|.
name|getKernels
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|kernels
operator|.
name|getKernels
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getDropletBackups (Exchange exchange)
specifier|private
name|void
name|getDropletBackups
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Backups
name|backups
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|getDropletBackups
argument_list|(
name|dropletId
argument_list|,
name|configuration
operator|.
name|getPage
argument_list|()
argument_list|,
name|configuration
operator|.
name|getPerPage
argument_list|()
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Backups for Droplet {} : page {} / {} per page [{}] "
argument_list|,
name|dropletId
argument_list|,
name|configuration
operator|.
name|getPage
argument_list|()
argument_list|,
name|configuration
operator|.
name|getPerPage
argument_list|()
argument_list|,
name|backups
operator|.
name|getBackups
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|backups
operator|.
name|getBackups
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getDropletSnapshots (Exchange exchange)
specifier|private
name|void
name|getDropletSnapshots
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Snapshots
name|snapshots
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|getDropletSnapshots
argument_list|(
name|dropletId
argument_list|,
name|configuration
operator|.
name|getPage
argument_list|()
argument_list|,
name|configuration
operator|.
name|getPerPage
argument_list|()
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Snapshots for Droplet {} : page {} / {} per page [{}] "
argument_list|,
name|dropletId
argument_list|,
name|configuration
operator|.
name|getPage
argument_list|()
argument_list|,
name|configuration
operator|.
name|getPerPage
argument_list|()
argument_list|,
name|snapshots
operator|.
name|getSnapshots
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|snapshots
operator|.
name|getSnapshots
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getDropletNeighbors (Exchange exchange)
specifier|private
name|void
name|getDropletNeighbors
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Droplets
name|droplets
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|getDropletNeighbors
argument_list|(
name|dropletId
argument_list|,
name|configuration
operator|.
name|getPage
argument_list|()
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Neighbors for Droplet {} : page {} [{}] "
argument_list|,
name|dropletId
argument_list|,
name|configuration
operator|.
name|getPage
argument_list|()
argument_list|,
name|droplets
operator|.
name|getDroplets
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|droplets
operator|.
name|getDroplets
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getAllDropletNeighbors (Exchange exchange)
specifier|private
name|void
name|getAllDropletNeighbors
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Neighbors
name|neighbors
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|getAllDropletNeighbors
argument_list|(
name|configuration
operator|.
name|getPage
argument_list|()
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"All Neighbors : page {} [{}] "
argument_list|,
name|configuration
operator|.
name|getPage
argument_list|()
argument_list|,
name|neighbors
operator|.
name|getNeighbors
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|neighbors
operator|.
name|getNeighbors
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|deleteDroplet (Exchange exchange)
specifier|private
name|void
name|deleteDroplet
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Delete
name|delete
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|deleteDroplet
argument_list|(
name|dropletId
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Delete Droplet {} "
argument_list|,
name|delete
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|delete
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|createDroplet (Exchange exchange)
specifier|private
name|void
name|createDroplet
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Message
name|in
init|=
name|exchange
operator|.
name|getIn
argument_list|()
decl_stmt|;
name|Droplet
name|droplet
init|=
operator|new
name|Droplet
argument_list|()
decl_stmt|;
if|if
condition|(
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|REGION
argument_list|)
argument_list|)
condition|)
name|droplet
operator|.
name|setRegion
argument_list|(
operator|new
name|Region
argument_list|(
name|in
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|REGION
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
else|else
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|DigitalOceanHeaders
operator|.
name|REGION
operator|+
literal|" must be specified"
argument_list|)
throw|;
if|if
condition|(
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_SIZE
argument_list|)
argument_list|)
condition|)
name|droplet
operator|.
name|setSize
argument_list|(
name|in
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_SIZE
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
else|else
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_SIZE
operator|+
literal|" must be specified"
argument_list|)
throw|;
if|if
condition|(
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_IMAGE
argument_list|)
argument_list|)
condition|)
name|droplet
operator|.
name|setImage
argument_list|(
operator|new
name|Image
argument_list|(
name|in
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_IMAGE
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
else|else
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_IMAGE
operator|+
literal|" must be specified"
argument_list|)
throw|;
if|if
condition|(
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_KEYS
argument_list|)
argument_list|)
condition|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|keys
init|=
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_KEYS
argument_list|)
decl_stmt|;
name|droplet
operator|.
name|setKeys
argument_list|(
name|keys
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|Key
operator|::
operator|new
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_ENABLE_BACKUPS
argument_list|)
argument_list|)
condition|)
name|droplet
operator|.
name|setEnableBackup
argument_list|(
name|in
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_ENABLE_BACKUPS
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_ENABLE_IPV6
argument_list|)
argument_list|)
condition|)
name|droplet
operator|.
name|setEnableIpv6
argument_list|(
name|in
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_ENABLE_IPV6
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_ENABLE_PRIVATE_NETWORKING
argument_list|)
argument_list|)
condition|)
name|droplet
operator|.
name|setEnablePrivateNetworking
argument_list|(
name|in
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_ENABLE_PRIVATE_NETWORKING
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_USER_DATA
argument_list|)
argument_list|)
condition|)
name|droplet
operator|.
name|setUserData
argument_list|(
name|in
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_USER_DATA
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_VOLUMES
argument_list|)
argument_list|)
condition|)
name|droplet
operator|.
name|setVolumeIds
argument_list|(
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_VOLUMES
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_TAGS
argument_list|)
argument_list|)
condition|)
name|droplet
operator|.
name|setTags
argument_list|(
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_TAGS
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|NAMES
argument_list|)
argument_list|)
condition|)
block|{
name|droplet
operator|.
name|setNames
argument_list|(
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
name|in
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|NAMES
argument_list|)
argument_list|)
expr_stmt|;
name|Droplets
name|droplets
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|createDroplets
argument_list|(
name|droplet
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Droplets created {} "
argument_list|,
name|droplets
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|droplets
operator|.
name|getDroplets
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|NAME
argument_list|)
argument_list|)
condition|)
block|{
name|droplet
operator|.
name|setName
argument_list|(
name|in
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|droplet
operator|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|createDroplet
argument_list|(
name|droplet
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Droplet created {} "
argument_list|,
name|droplet
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|droplet
argument_list|)
expr_stmt|;
block|}
else|else
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|DigitalOceanHeaders
operator|.
name|NAMES
operator|+
literal|" or "
operator|+
name|DigitalOceanHeaders
operator|.
name|NAME
operator|+
literal|" must be specified"
argument_list|)
throw|;
block|}
DECL|method|restoreDroplet (Exchange exchange)
specifier|private
name|void
name|restoreDroplet
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|ObjectHelper
operator|.
name|isEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|IMAGE_ID
argument_list|)
argument_list|)
condition|)
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|DigitalOceanHeaders
operator|.
name|IMAGE_ID
operator|+
literal|" must be specified"
argument_list|)
throw|;
name|Action
name|action
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|restoreDroplet
argument_list|(
name|dropletId
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|IMAGE_ID
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"DropletAction Restore [{}] "
argument_list|,
name|action
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|resizeDroplet (Exchange exchange)
specifier|private
name|void
name|resizeDroplet
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|ObjectHelper
operator|.
name|isEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_SIZE
argument_list|)
argument_list|)
condition|)
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_SIZE
operator|+
literal|" must be specified"
argument_list|)
throw|;
name|Action
name|action
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|resizeDroplet
argument_list|(
name|dropletId
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|DROPLET_SIZE
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"DropletAction Resize [{}] "
argument_list|,
name|action
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|rebuildDroplet (Exchange exchange)
specifier|private
name|void
name|rebuildDroplet
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|ObjectHelper
operator|.
name|isEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|IMAGE_ID
argument_list|)
argument_list|)
condition|)
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|DigitalOceanHeaders
operator|.
name|IMAGE_ID
operator|+
literal|" must be specified"
argument_list|)
throw|;
name|Action
name|action
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|rebuildDroplet
argument_list|(
name|dropletId
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|IMAGE_ID
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Rebuild Droplet {} : [{}] "
argument_list|,
name|dropletId
argument_list|,
name|action
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|renameDroplet (Exchange exchange)
specifier|private
name|void
name|renameDroplet
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|ObjectHelper
operator|.
name|isEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|NAME
argument_list|)
argument_list|)
condition|)
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|DigitalOceanHeaders
operator|.
name|NAME
operator|+
literal|" must be specified"
argument_list|)
throw|;
name|Action
name|action
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|renameDroplet
argument_list|(
name|dropletId
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Rename Droplet {} : [{}] "
argument_list|,
name|dropletId
argument_list|,
name|action
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|changeDropletKernel (Exchange exchange)
specifier|private
name|void
name|changeDropletKernel
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|ObjectHelper
operator|.
name|isEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|KERNEL_ID
argument_list|)
argument_list|)
condition|)
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|DigitalOceanHeaders
operator|.
name|KERNEL_ID
operator|+
literal|" must be specified"
argument_list|)
throw|;
name|Action
name|action
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|changeDropletKernel
argument_list|(
name|dropletId
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|KERNEL_ID
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Rename Droplet {} : [{}] "
argument_list|,
name|dropletId
argument_list|,
name|action
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|resetDropletPassword (Exchange exchange)
specifier|private
name|void
name|resetDropletPassword
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Action
name|action
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|resetDropletPassword
argument_list|(
name|dropletId
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Reset password Droplet {} : [{}] "
argument_list|,
name|dropletId
argument_list|,
name|action
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|powerOnDroplet (Exchange exchange)
specifier|private
name|void
name|powerOnDroplet
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Action
name|action
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|powerOnDroplet
argument_list|(
name|dropletId
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Power on Droplet {} : [{}] "
argument_list|,
name|dropletId
argument_list|,
name|action
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|powerOffDroplet (Exchange exchange)
specifier|private
name|void
name|powerOffDroplet
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Action
name|action
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|powerOffDroplet
argument_list|(
name|dropletId
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Power off Droplet {} : [{}] "
argument_list|,
name|dropletId
argument_list|,
name|action
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|shutdownDroplet (Exchange exchange)
specifier|private
name|void
name|shutdownDroplet
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Action
name|action
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|shutdownDroplet
argument_list|(
name|dropletId
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Shutdown Droplet {} : [{}] "
argument_list|,
name|dropletId
argument_list|,
name|action
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|powerCycleDroplet (Exchange exchange)
specifier|private
name|void
name|powerCycleDroplet
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Action
name|action
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|powerCycleDroplet
argument_list|(
name|dropletId
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Power cycle Droplet {} : [{}] "
argument_list|,
name|dropletId
argument_list|,
name|action
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|enableDropletBackups (Exchange exchange)
specifier|private
name|void
name|enableDropletBackups
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Action
name|action
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|enableDropletBackups
argument_list|(
name|dropletId
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Enable backups Droplet {} : [{}] "
argument_list|,
name|dropletId
argument_list|,
name|action
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|disableDropletBackups (Exchange exchange)
specifier|private
name|void
name|disableDropletBackups
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Action
name|action
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|disableDropletBackups
argument_list|(
name|dropletId
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Disable backups for Droplet {} : [{}] "
argument_list|,
name|dropletId
argument_list|,
name|action
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|enableDropletIpv6 (Exchange exchange)
specifier|private
name|void
name|enableDropletIpv6
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Action
name|action
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|enableDropletIpv6
argument_list|(
name|dropletId
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Enable IP v6 for Droplet {} : [{}] "
argument_list|,
name|dropletId
argument_list|,
name|action
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|enableDropletPrivateNetworking (Exchange exchange)
specifier|private
name|void
name|enableDropletPrivateNetworking
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Action
name|action
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|enableDropletPrivateNetworking
argument_list|(
name|dropletId
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Enable private networking for Droplet {} : [{}] "
argument_list|,
name|dropletId
argument_list|,
name|action
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|rebootDroplet (Exchange exchange)
specifier|private
name|void
name|rebootDroplet
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Action
name|action
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|rebootDroplet
argument_list|(
name|dropletId
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Reboot Droplet {} : [{}] "
argument_list|,
name|dropletId
argument_list|,
name|action
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|takeDropletSnapshot (Exchange exchange)
specifier|private
name|void
name|takeDropletSnapshot
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|Action
name|action
decl_stmt|;
if|if
condition|(
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|NAME
argument_list|)
argument_list|)
condition|)
name|action
operator|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|takeDropletSnapshot
argument_list|(
name|dropletId
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|NAME
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|action
operator|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|takeDropletSnapshot
argument_list|(
name|dropletId
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Take Snapshot for Droplet {} : [{}] "
argument_list|,
name|dropletId
argument_list|,
name|action
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|tagDroplet (Exchange exchange)
specifier|private
name|void
name|tagDroplet
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|ObjectHelper
operator|.
name|isEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|NAME
argument_list|)
argument_list|)
condition|)
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|DigitalOceanHeaders
operator|.
name|NAME
operator|+
literal|" must be specified"
argument_list|)
throw|;
name|ArrayList
argument_list|<
name|Resource
argument_list|>
name|resources
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|resources
operator|.
name|add
argument_list|(
operator|new
name|Resource
argument_list|(
name|dropletId
operator|.
name|toString
argument_list|()
argument_list|,
name|ResourceType
operator|.
name|DROPLET
argument_list|)
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|tagResources
argument_list|(
name|dropletId
operator|.
name|toString
argument_list|()
argument_list|,
name|resources
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Tag Droplet {} : [{}] "
argument_list|,
name|dropletId
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
DECL|method|untagDroplet (Exchange exchange)
specifier|private
name|void
name|untagDroplet
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|ObjectHelper
operator|.
name|isEmpty
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|DigitalOceanHeaders
operator|.
name|NAME
argument_list|)
argument_list|)
condition|)
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|DigitalOceanHeaders
operator|.
name|NAME
operator|+
literal|" must be specified"
argument_list|)
throw|;
name|ArrayList
argument_list|<
name|Resource
argument_list|>
name|resources
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|resources
operator|.
name|add
argument_list|(
operator|new
name|Resource
argument_list|(
name|dropletId
operator|.
name|toString
argument_list|()
argument_list|,
name|ResourceType
operator|.
name|DROPLET
argument_list|)
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|getEndpoint
argument_list|()
operator|.
name|getDigitalOceanClient
argument_list|()
operator|.
name|untagResources
argument_list|(
name|dropletId
operator|.
name|toString
argument_list|()
argument_list|,
name|resources
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|trace
argument_list|(
literal|"Untag Droplet {} : [{}] "
argument_list|,
name|dropletId
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

