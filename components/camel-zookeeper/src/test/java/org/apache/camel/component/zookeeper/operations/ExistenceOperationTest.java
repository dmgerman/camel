begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.zookeeper.operations
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|zookeeper
operator|.
name|operations
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|zookeeper
operator|.
name|ZooKeeperTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|zookeeper
operator|.
name|ZooKeeper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|ExistenceOperationTest
specifier|public
class|class
name|ExistenceOperationTest
extends|extends
name|ZooKeeperTestSupport
block|{
annotation|@
name|Test
DECL|method|okWhenNodeMustExistAndDoesExists ()
specifier|public
name|void
name|okWhenNodeMustExistAndDoesExists
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|create
argument_list|(
literal|"/ergosum"
argument_list|,
literal|"not a figment of your imagination"
argument_list|)
expr_stmt|;
name|ZooKeeper
name|connection
init|=
name|getConnection
argument_list|()
decl_stmt|;
name|ExistsOperation
name|exists
init|=
operator|new
name|ExistsOperation
argument_list|(
name|connection
argument_list|,
literal|"/ergosum"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|exists
operator|.
name|get
argument_list|()
operator|.
name|isOk
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|notOkWhenNodeMustExistButDoesNotExist ()
specifier|public
name|void
name|notOkWhenNodeMustExistButDoesNotExist
parameter_list|()
throws|throws
name|Exception
block|{
name|ZooKeeper
name|connection
init|=
name|getConnection
argument_list|()
decl_stmt|;
name|ExistsOperation
name|exists
init|=
operator|new
name|ExistsOperation
argument_list|(
name|connection
argument_list|,
literal|"/figment"
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|exists
operator|.
name|get
argument_list|()
operator|.
name|isOk
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|okWhenNodeMustNotExistAndDoesNotExists ()
specifier|public
name|void
name|okWhenNodeMustNotExistAndDoesNotExists
parameter_list|()
throws|throws
name|Exception
block|{
name|ZooKeeper
name|connection
init|=
name|getConnection
argument_list|()
decl_stmt|;
name|ExistsOperation
name|exists
init|=
operator|new
name|ExistsOperation
argument_list|(
name|connection
argument_list|,
literal|"/figment"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|exists
operator|.
name|get
argument_list|()
operator|.
name|isOk
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|notOkWhenNodeMustExistButDoesExist ()
specifier|public
name|void
name|notOkWhenNodeMustExistButDoesExist
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|create
argument_list|(
literal|"/i-exist-too"
argument_list|,
literal|"not a figment of your imagination"
argument_list|)
expr_stmt|;
name|ZooKeeper
name|connection
init|=
name|getConnection
argument_list|()
decl_stmt|;
name|ExistsOperation
name|exists
init|=
operator|new
name|ExistsOperation
argument_list|(
name|connection
argument_list|,
literal|"/i-exist-too"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|exists
operator|.
name|get
argument_list|()
operator|.
name|isOk
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

