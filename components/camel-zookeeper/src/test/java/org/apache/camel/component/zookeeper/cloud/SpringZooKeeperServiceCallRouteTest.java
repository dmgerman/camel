begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.zookeeper.cloud
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|zookeeper
operator|.
name|cloud
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|zookeeper
operator|.
name|ZooKeeperTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|spring
operator|.
name|CamelSpringTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|curator
operator|.
name|framework
operator|.
name|CuratorFramework
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|curator
operator|.
name|framework
operator|.
name|CuratorFrameworkFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|curator
operator|.
name|retry
operator|.
name|ExponentialBackoffRetry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|curator
operator|.
name|utils
operator|.
name|CloseableUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|curator
operator|.
name|x
operator|.
name|discovery
operator|.
name|ServiceDiscovery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|curator
operator|.
name|x
operator|.
name|discovery
operator|.
name|ServiceDiscoveryBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|curator
operator|.
name|x
operator|.
name|discovery
operator|.
name|ServiceInstance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|curator
operator|.
name|x
operator|.
name|discovery
operator|.
name|details
operator|.
name|JsonInstanceSerializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|AbstractApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|ClassPathXmlApplicationContext
import|;
end_import

begin_class
DECL|class|SpringZooKeeperServiceCallRouteTest
specifier|public
class|class
name|SpringZooKeeperServiceCallRouteTest
extends|extends
name|CamelSpringTestSupport
block|{
DECL|field|SERVER_PORT
specifier|private
specifier|static
specifier|final
name|int
name|SERVER_PORT
init|=
literal|9001
decl_stmt|;
DECL|field|SERVICE_NAME
specifier|private
specifier|static
specifier|final
name|String
name|SERVICE_NAME
init|=
literal|"http-service"
decl_stmt|;
DECL|field|SERVICE_PATH
specifier|private
specifier|static
specifier|final
name|String
name|SERVICE_PATH
init|=
literal|"/camel"
decl_stmt|;
DECL|field|server
specifier|private
name|ZooKeeperTestSupport
operator|.
name|TestZookeeperServer
name|server
decl_stmt|;
DECL|field|curator
specifier|private
name|CuratorFramework
name|curator
decl_stmt|;
DECL|field|discovery
specifier|private
name|ServiceDiscovery
argument_list|<
name|ZooKeeperServiceDiscovery
operator|.
name|MetaData
argument_list|>
name|discovery
decl_stmt|;
comment|// ***********************
comment|// Setup / tear down
comment|// ***********************
annotation|@
name|Override
DECL|method|doPreSetup ()
specifier|public
name|void
name|doPreSetup
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|doPreSetup
argument_list|()
expr_stmt|;
name|server
operator|=
operator|new
name|ZooKeeperTestSupport
operator|.
name|TestZookeeperServer
argument_list|(
name|SERVER_PORT
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|ZooKeeperTestSupport
operator|.
name|waitForServerUp
argument_list|(
literal|"127.0.0.1:"
operator|+
name|SERVER_PORT
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|curator
operator|=
name|CuratorFrameworkFactory
operator|.
name|builder
argument_list|()
operator|.
name|connectString
argument_list|(
literal|"127.0.0.1:"
operator|+
name|SERVER_PORT
argument_list|)
operator|.
name|retryPolicy
argument_list|(
operator|new
name|ExponentialBackoffRetry
argument_list|(
literal|1000
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|discovery
operator|=
name|ServiceDiscoveryBuilder
operator|.
name|builder
argument_list|(
name|ZooKeeperServiceDiscovery
operator|.
name|MetaData
operator|.
name|class
argument_list|)
operator|.
name|client
argument_list|(
name|curator
argument_list|)
operator|.
name|basePath
argument_list|(
name|SERVICE_PATH
argument_list|)
operator|.
name|serializer
argument_list|(
operator|new
name|JsonInstanceSerializer
argument_list|<>
argument_list|(
name|ZooKeeperServiceDiscovery
operator|.
name|MetaData
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|curator
operator|.
name|start
argument_list|()
expr_stmt|;
name|discovery
operator|.
name|start
argument_list|()
expr_stmt|;
name|discovery
operator|.
name|registerService
argument_list|(
name|ServiceInstance
operator|.
expr|<
name|ZooKeeperServiceDiscovery
operator|.
name|MetaData
operator|>
name|builder
argument_list|()
operator|.
name|address
argument_list|(
literal|"127.0.0.1"
argument_list|)
operator|.
name|port
argument_list|(
literal|9011
argument_list|)
operator|.
name|name
argument_list|(
name|SERVICE_NAME
argument_list|)
operator|.
name|id
argument_list|(
literal|"service-1"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|discovery
operator|.
name|registerService
argument_list|(
name|ServiceInstance
operator|.
expr|<
name|ZooKeeperServiceDiscovery
operator|.
name|MetaData
operator|>
name|builder
argument_list|()
operator|.
name|address
argument_list|(
literal|"127.0.0.1"
argument_list|)
operator|.
name|port
argument_list|(
literal|9012
argument_list|)
operator|.
name|name
argument_list|(
name|SERVICE_NAME
argument_list|)
operator|.
name|id
argument_list|(
literal|"service-2"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|discovery
operator|.
name|registerService
argument_list|(
name|ServiceInstance
operator|.
expr|<
name|ZooKeeperServiceDiscovery
operator|.
name|MetaData
operator|>
name|builder
argument_list|()
operator|.
name|address
argument_list|(
literal|"127.0.0.1"
argument_list|)
operator|.
name|port
argument_list|(
literal|9013
argument_list|)
operator|.
name|name
argument_list|(
name|SERVICE_NAME
argument_list|)
operator|.
name|id
argument_list|(
literal|"service-3"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|CloseableUtils
operator|.
name|closeQuietly
argument_list|(
name|discovery
argument_list|)
expr_stmt|;
name|CloseableUtils
operator|.
name|closeQuietly
argument_list|(
name|curator
argument_list|)
expr_stmt|;
if|if
condition|(
name|server
operator|!=
literal|null
condition|)
block|{
name|server
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
comment|// ***********************
comment|// Test
comment|// ***********************
annotation|@
name|Test
DECL|method|testServiceCall ()
specifier|public
name|void
name|testServiceCall
parameter_list|()
throws|throws
name|Exception
block|{
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
operator|.
name|expectedMessageCount
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
operator|.
name|expectedBodiesReceivedInAnyOrder
argument_list|(
literal|"ping 9011"
argument_list|,
literal|"ping 9012"
argument_list|,
literal|"ping 9013"
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
literal|"direct:start"
argument_list|,
literal|"ping"
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
literal|"direct:start"
argument_list|,
literal|"ping"
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
literal|"direct:start"
argument_list|,
literal|"ping"
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
block|}
comment|// ***********************
comment|// Routes
comment|// ***********************
annotation|@
name|Override
DECL|method|createApplicationContext ()
specifier|protected
name|AbstractApplicationContext
name|createApplicationContext
parameter_list|()
block|{
return|return
operator|new
name|ClassPathXmlApplicationContext
argument_list|(
literal|"org/apache/camel/component/zookeeper/cloud/SpringZooKeeperServiceCallRouteTest.xml"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

