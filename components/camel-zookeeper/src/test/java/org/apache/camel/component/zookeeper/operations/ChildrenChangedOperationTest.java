begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.zookeeper.operations
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|zookeeper
operator|.
name|operations
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|zookeeper
operator|.
name|ZooKeeperTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|zookeeper
operator|.
name|ZooKeeper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|ChildrenChangedOperationTest
specifier|public
class|class
name|ChildrenChangedOperationTest
extends|extends
name|ZooKeeperTestSupport
block|{
annotation|@
name|Test
DECL|method|getsListingWhenNodeIsCreated ()
specifier|public
name|void
name|getsListingWhenNodeIsCreated
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
literal|"/parent"
decl_stmt|;
name|client
operator|.
name|createPersistent
argument_list|(
name|path
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|ZooKeeper
name|connection
init|=
name|getConnection
argument_list|()
decl_stmt|;
name|ChildrenChangedOperation
name|future
init|=
operator|new
name|ChildrenChangedOperation
argument_list|(
name|connection
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|connection
operator|.
name|getChildren
argument_list|(
name|path
argument_list|,
name|future
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|client
operator|.
name|createPersistent
argument_list|(
name|path
operator|+
literal|"/child1"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|createChildListing
argument_list|(
literal|"child1"
argument_list|)
argument_list|,
name|future
operator|.
name|get
argument_list|()
operator|.
name|getResult
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getsNotifiedWhenNodeIsDeleted ()
specifier|public
name|void
name|getsNotifiedWhenNodeIsDeleted
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
literal|"/parent2"
decl_stmt|;
name|client
operator|.
name|createPersistent
argument_list|(
name|path
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|client
operator|.
name|createPersistent
argument_list|(
name|path
operator|+
literal|"/child1"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|ZooKeeper
name|connection
init|=
name|getConnection
argument_list|()
decl_stmt|;
name|ChildrenChangedOperation
name|future
init|=
operator|new
name|ChildrenChangedOperation
argument_list|(
name|connection
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|connection
operator|.
name|getChildren
argument_list|(
name|path
argument_list|,
name|future
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|client
operator|.
name|delete
argument_list|(
name|path
operator|+
literal|"/child1"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|createChildListing
argument_list|()
argument_list|,
name|future
operator|.
name|get
argument_list|()
operator|.
name|getResult
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getsNoListingWhenOnlyChangeIsRequired ()
specifier|public
name|void
name|getsNoListingWhenOnlyChangeIsRequired
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
literal|"/parent3"
decl_stmt|;
name|client
operator|.
name|createPersistent
argument_list|(
name|path
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|ZooKeeper
name|connection
init|=
name|getConnection
argument_list|()
decl_stmt|;
name|ChildrenChangedOperation
name|future
init|=
operator|new
name|ChildrenChangedOperation
argument_list|(
name|connection
argument_list|,
name|path
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|connection
operator|.
name|getChildren
argument_list|(
name|path
argument_list|,
name|future
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|client
operator|.
name|createPersistent
argument_list|(
name|path
operator|+
literal|"/child3"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|future
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

