begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jsonapi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jsonapi
package|;
end_package

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|jasminb
operator|.
name|jsonapi
operator|.
name|exceptions
operator|.
name|DocumentSerializationException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|jasminb
operator|.
name|jsonapi
operator|.
name|exceptions
operator|.
name|UnregisteredTypeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|DefaultExchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_class
DECL|class|JsonApiDataFormatTest
specifier|public
class|class
name|JsonApiDataFormatTest
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Test
DECL|method|test_jsonApi_marshal ()
specifier|public
name|void
name|test_jsonApi_marshal
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|formats
init|=
block|{
name|MyBook
operator|.
name|class
block|,
name|MyAuthor
operator|.
name|class
block|}
decl_stmt|;
name|JsonApiDataFormat
name|jsonApiDataFormat
init|=
operator|new
name|JsonApiDataFormat
argument_list|(
name|formats
argument_list|)
decl_stmt|;
name|MyBook
name|book
init|=
name|this
operator|.
name|generateTestDataAsObject
argument_list|()
decl_stmt|;
name|Exchange
name|exchange
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|jsonApiDataFormat
operator|.
name|marshal
argument_list|(
name|exchange
argument_list|,
name|book
argument_list|,
name|baos
argument_list|)
expr_stmt|;
name|String
name|jsonApiOutput
init|=
name|baos
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|jsonApiOutput
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|this
operator|.
name|generateTestDataAsString
argument_list|()
argument_list|,
name|jsonApiOutput
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|DocumentSerializationException
operator|.
name|class
argument_list|)
DECL|method|test_jsonApi_marshal_no_annotation_on_type ()
specifier|public
name|void
name|test_jsonApi_marshal_no_annotation_on_type
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|formats
init|=
block|{
name|MyBook
operator|.
name|class
block|,
name|MyAuthor
operator|.
name|class
block|}
decl_stmt|;
name|JsonApiDataFormat
name|jsonApiDataFormat
init|=
operator|new
name|JsonApiDataFormat
argument_list|(
name|formats
argument_list|)
decl_stmt|;
name|Exchange
name|exchange
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|jsonApiDataFormat
operator|.
name|marshal
argument_list|(
name|exchange
argument_list|,
operator|new
name|FooBar
argument_list|()
argument_list|,
name|baos
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|DocumentSerializationException
operator|.
name|class
argument_list|)
DECL|method|test_jsonApi_marshal_wrong_type ()
specifier|public
name|void
name|test_jsonApi_marshal_wrong_type
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|formats
init|=
block|{
name|MyBook
operator|.
name|class
block|,
name|MyAuthor
operator|.
name|class
block|}
decl_stmt|;
name|JsonApiDataFormat
name|jsonApiDataFormat
init|=
operator|new
name|JsonApiDataFormat
argument_list|(
name|formats
argument_list|)
decl_stmt|;
name|Exchange
name|exchange
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|jsonApiDataFormat
operator|.
name|marshal
argument_list|(
name|exchange
argument_list|,
operator|new
name|MyFooBar
argument_list|(
literal|"bar"
argument_list|)
argument_list|,
name|baos
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|test_jsonApi_unmarshal ()
specifier|public
name|void
name|test_jsonApi_unmarshal
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|formats
init|=
block|{
name|MyBook
operator|.
name|class
block|,
name|MyAuthor
operator|.
name|class
block|}
decl_stmt|;
name|JsonApiDataFormat
name|jsonApiDataFormat
init|=
operator|new
name|JsonApiDataFormat
argument_list|(
name|MyBook
operator|.
name|class
argument_list|,
name|formats
argument_list|)
decl_stmt|;
name|String
name|jsonApiInput
init|=
name|this
operator|.
name|generateTestDataAsString
argument_list|()
decl_stmt|;
name|Exchange
name|exchange
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|Object
name|outputObj
init|=
name|jsonApiDataFormat
operator|.
name|unmarshal
argument_list|(
name|exchange
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|jsonApiInput
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|outputObj
argument_list|)
expr_stmt|;
name|MyBook
name|book
init|=
operator|(
name|MyBook
operator|)
name|outputObj
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Camel in Action"
argument_list|,
name|book
operator|.
name|getTitle
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|book
operator|.
name|getAuthor
argument_list|()
operator|.
name|getAuthorId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|UnregisteredTypeException
operator|.
name|class
argument_list|)
DECL|method|test_jsonApi_unmarshal_wrong_type ()
specifier|public
name|void
name|test_jsonApi_unmarshal_wrong_type
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|formats
init|=
block|{
name|MyBook
operator|.
name|class
block|,
name|MyAuthor
operator|.
name|class
block|}
decl_stmt|;
name|JsonApiDataFormat
name|jsonApiDataFormat
init|=
operator|new
name|JsonApiDataFormat
argument_list|()
decl_stmt|;
name|jsonApiDataFormat
operator|.
name|setDataFormatTypes
argument_list|(
name|formats
argument_list|)
expr_stmt|;
name|jsonApiDataFormat
operator|.
name|setMainFormatType
argument_list|(
name|MyBook
operator|.
name|class
argument_list|)
expr_stmt|;
name|String
name|jsonApiInput
init|=
literal|"{\"data\":{\"type\":\"animal\",\"id\":\"camel\",\"attributes\":{\"humps\":\"2\"}}}"
decl_stmt|;
name|Exchange
name|exchange
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|jsonApiDataFormat
operator|.
name|unmarshal
argument_list|(
name|exchange
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|jsonApiInput
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|test_camel_jsonApi_marshal ()
specifier|public
name|void
name|test_camel_jsonApi_marshal
parameter_list|()
throws|throws
name|InterruptedException
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:resultMarshal"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|MyAuthor
name|author
init|=
operator|new
name|MyAuthor
argument_list|()
decl_stmt|;
name|author
operator|.
name|setAuthorId
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|author
operator|.
name|setFirstName
argument_list|(
literal|"Claus"
argument_list|)
expr_stmt|;
name|author
operator|.
name|setLastName
argument_list|(
literal|"Ibsen"
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|this
operator|.
name|createExchangeWithBody
argument_list|(
name|author
argument_list|)
decl_stmt|;
name|Exchange
name|outExchange
init|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:startMarshal"
argument_list|,
name|exchange
argument_list|)
decl_stmt|;
name|String
name|outBody
init|=
name|outExchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|outBody
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|this
operator|.
name|generateAuthorString
argument_list|()
argument_list|,
name|outBody
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|test_camel_jsonApi_unmarshal ()
specifier|public
name|void
name|test_camel_jsonApi_unmarshal
parameter_list|()
throws|throws
name|InterruptedException
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:resultUnmarshal"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|this
operator|.
name|createExchangeWithBody
argument_list|(
name|this
operator|.
name|generateAuthorString
argument_list|()
argument_list|)
decl_stmt|;
name|Exchange
name|outExchange
init|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:startUnmarshal"
argument_list|,
name|exchange
argument_list|)
decl_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
name|MyAuthor
name|author
init|=
name|outExchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|MyAuthor
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|author
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|author
operator|.
name|getAuthorId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Claus"
argument_list|,
name|author
operator|.
name|getFirstName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Ibsen"
argument_list|,
name|author
operator|.
name|getLastName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|formats
init|=
block|{
name|MyAuthor
operator|.
name|class
block|}
decl_stmt|;
name|JsonApiDataFormat
name|jsonApi
init|=
operator|new
name|JsonApiDataFormat
argument_list|(
name|MyAuthor
operator|.
name|class
argument_list|,
name|formats
argument_list|)
decl_stmt|;
name|from
argument_list|(
literal|"direct:startMarshal"
argument_list|)
operator|.
name|marshal
argument_list|(
name|jsonApi
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:resultMarshal"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:startUnmarshal"
argument_list|)
operator|.
name|unmarshal
argument_list|(
name|jsonApi
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:resultUnmarshal"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
DECL|method|generateAuthorString ()
specifier|private
name|String
name|generateAuthorString
parameter_list|()
block|{
return|return
literal|"{\"data\":{\"type\":\"author\",\"id\":\"1\",\"attributes\":{\"firstName\":\"Claus\",\"lastName\":\"Ibsen\"}}}"
return|;
block|}
DECL|method|generateTestDataAsString ()
specifier|private
name|String
name|generateTestDataAsString
parameter_list|()
block|{
return|return
literal|"{\"data\":{\"type\":\"book\",\"id\":\"1617292931\",\"attributes\":{\"title\":\"Camel in Action\"},\"relationships\":{\"author\":{\"data\":{\"type\":\"author\",\"id\":\"1\"}}}}}"
return|;
block|}
DECL|method|generateTestDataAsObject ()
specifier|private
name|MyBook
name|generateTestDataAsObject
parameter_list|()
block|{
name|MyAuthor
name|author
init|=
operator|new
name|MyAuthor
argument_list|()
decl_stmt|;
name|author
operator|.
name|setAuthorId
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|author
operator|.
name|setFirstName
argument_list|(
literal|"Claus"
argument_list|)
expr_stmt|;
name|author
operator|.
name|setLastName
argument_list|(
literal|"Ibsen"
argument_list|)
expr_stmt|;
name|MyBook
name|book
init|=
operator|new
name|MyBook
argument_list|()
decl_stmt|;
name|book
operator|.
name|setIsbn
argument_list|(
literal|"1617292931"
argument_list|)
expr_stmt|;
name|book
operator|.
name|setTitle
argument_list|(
literal|"Camel in Action"
argument_list|)
expr_stmt|;
name|book
operator|.
name|setAuthor
argument_list|(
name|author
argument_list|)
expr_stmt|;
return|return
name|book
return|;
block|}
block|}
end_class

end_unit

