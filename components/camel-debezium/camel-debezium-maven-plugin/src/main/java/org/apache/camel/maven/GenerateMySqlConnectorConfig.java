begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.maven
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|io
operator|.
name|debezium
operator|.
name|connector
operator|.
name|mysql
operator|.
name|MySqlConnector
import|;
end_import

begin_import
import|import
name|io
operator|.
name|debezium
operator|.
name|connector
operator|.
name|mysql
operator|.
name|MySqlConnectorConfig
import|;
end_import

begin_import
import|import
name|io
operator|.
name|debezium
operator|.
name|relational
operator|.
name|history
operator|.
name|FileDatabaseHistory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kafka
operator|.
name|connect
operator|.
name|source
operator|.
name|SourceConnector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugins
operator|.
name|annotations
operator|.
name|LifecyclePhase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugins
operator|.
name|annotations
operator|.
name|Mojo
import|;
end_import

begin_class
annotation|@
name|Mojo
argument_list|(
name|name
operator|=
literal|"generate-mysql-connector-config"
argument_list|,
name|defaultPhase
operator|=
name|LifecyclePhase
operator|.
name|GENERATE_SOURCES
argument_list|)
DECL|class|GenerateMySqlConnectorConfig
specifier|public
class|class
name|GenerateMySqlConnectorConfig
extends|extends
name|AbstractGenerateConnectorConfig
block|{
annotation|@
name|Override
DECL|method|getRequiredFields ()
specifier|protected
name|Set
argument_list|<
name|String
argument_list|>
name|getRequiredFields
parameter_list|()
block|{
return|return
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|MySqlConnectorConfig
operator|.
name|PASSWORD
operator|.
name|name
argument_list|()
argument_list|,
name|MySqlConnectorConfig
operator|.
name|SERVER_NAME
operator|.
name|name
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getOverrideFields ()
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getOverrideFields
parameter_list|()
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|overrideFields
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|overrideFields
operator|.
name|put
argument_list|(
name|MySqlConnectorConfig
operator|.
name|DATABASE_HISTORY
operator|.
name|name
argument_list|()
argument_list|,
name|FileDatabaseHistory
operator|.
name|class
argument_list|)
expr_stmt|;
name|overrideFields
operator|.
name|put
argument_list|(
name|MySqlConnectorConfig
operator|.
name|TOMBSTONES_ON_DELETE
operator|.
name|name
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|overrideFields
return|;
block|}
annotation|@
name|Override
DECL|method|getConnector ()
specifier|protected
name|SourceConnector
name|getConnector
parameter_list|()
block|{
return|return
operator|new
name|MySqlConnector
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getConnectorConfigClass ()
specifier|protected
name|Class
argument_list|<
name|?
argument_list|>
name|getConnectorConfigClass
parameter_list|()
block|{
return|return
name|MySqlConnectorConfig
operator|.
name|class
return|;
block|}
block|}
end_class

end_unit

