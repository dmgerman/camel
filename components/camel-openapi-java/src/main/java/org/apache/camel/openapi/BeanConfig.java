begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.openapi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|openapi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|io
operator|.
name|apicurio
operator|.
name|datamodels
operator|.
name|core
operator|.
name|models
operator|.
name|common
operator|.
name|Info
import|;
end_import

begin_import
import|import
name|io
operator|.
name|apicurio
operator|.
name|datamodels
operator|.
name|core
operator|.
name|models
operator|.
name|common
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|io
operator|.
name|apicurio
operator|.
name|datamodels
operator|.
name|openapi
operator|.
name|models
operator|.
name|OasDocument
import|;
end_import

begin_import
import|import
name|io
operator|.
name|apicurio
operator|.
name|datamodels
operator|.
name|openapi
operator|.
name|v2
operator|.
name|models
operator|.
name|Oas20Document
import|;
end_import

begin_import
import|import
name|io
operator|.
name|apicurio
operator|.
name|datamodels
operator|.
name|openapi
operator|.
name|v3
operator|.
name|models
operator|.
name|Oas30Document
import|;
end_import

begin_class
DECL|class|BeanConfig
specifier|public
class|class
name|BeanConfig
block|{
DECL|field|schemes
name|String
index|[]
name|schemes
decl_stmt|;
DECL|field|title
name|String
name|title
decl_stmt|;
DECL|field|version
name|String
name|version
decl_stmt|;
DECL|field|licenseUrl
name|String
name|licenseUrl
decl_stmt|;
DECL|field|license
name|String
name|license
decl_stmt|;
DECL|field|info
name|Info
name|info
decl_stmt|;
DECL|field|host
name|String
name|host
decl_stmt|;
DECL|field|basePath
name|String
name|basePath
decl_stmt|;
DECL|method|getSchemes ()
specifier|public
name|String
index|[]
name|getSchemes
parameter_list|()
block|{
return|return
name|schemes
return|;
block|}
DECL|method|setSchemes (String[] schemes)
specifier|public
name|void
name|setSchemes
parameter_list|(
name|String
index|[]
name|schemes
parameter_list|)
block|{
name|this
operator|.
name|schemes
operator|=
name|schemes
expr_stmt|;
block|}
DECL|method|getTitle ()
specifier|public
name|String
name|getTitle
parameter_list|()
block|{
return|return
name|title
return|;
block|}
DECL|method|setTitle (String title)
specifier|public
name|void
name|setTitle
parameter_list|(
name|String
name|title
parameter_list|)
block|{
name|this
operator|.
name|title
operator|=
name|title
expr_stmt|;
block|}
DECL|method|getVersion ()
specifier|public
name|String
name|getVersion
parameter_list|()
block|{
return|return
name|version
return|;
block|}
DECL|method|setVersion (String version)
specifier|public
name|void
name|setVersion
parameter_list|(
name|String
name|version
parameter_list|)
block|{
name|this
operator|.
name|version
operator|=
name|version
expr_stmt|;
block|}
DECL|method|getLicenseUrl ()
specifier|public
name|String
name|getLicenseUrl
parameter_list|()
block|{
return|return
name|this
operator|.
name|licenseUrl
return|;
block|}
DECL|method|setLicenseUrl (String licenseUrl)
specifier|public
name|void
name|setLicenseUrl
parameter_list|(
name|String
name|licenseUrl
parameter_list|)
block|{
name|this
operator|.
name|licenseUrl
operator|=
name|licenseUrl
expr_stmt|;
block|}
DECL|method|getLicense ()
specifier|public
name|String
name|getLicense
parameter_list|()
block|{
return|return
name|this
operator|.
name|license
return|;
block|}
DECL|method|setLicense (String license)
specifier|public
name|void
name|setLicense
parameter_list|(
name|String
name|license
parameter_list|)
block|{
name|this
operator|.
name|license
operator|=
name|license
expr_stmt|;
block|}
DECL|method|getInfo ()
specifier|public
name|Info
name|getInfo
parameter_list|()
block|{
return|return
name|info
return|;
block|}
DECL|method|setInfo (Info info)
specifier|public
name|void
name|setInfo
parameter_list|(
name|Info
name|info
parameter_list|)
block|{
name|this
operator|.
name|info
operator|=
name|info
expr_stmt|;
block|}
DECL|method|getHost ()
specifier|public
name|String
name|getHost
parameter_list|()
block|{
return|return
name|host
return|;
block|}
DECL|method|setHost (String host)
specifier|public
name|void
name|setHost
parameter_list|(
name|String
name|host
parameter_list|)
block|{
name|this
operator|.
name|host
operator|=
name|host
expr_stmt|;
block|}
DECL|method|getBasePath ()
specifier|public
name|String
name|getBasePath
parameter_list|()
block|{
return|return
name|basePath
return|;
block|}
DECL|method|setBasePath (String basePath)
specifier|public
name|void
name|setBasePath
parameter_list|(
name|String
name|basePath
parameter_list|)
block|{
if|if
condition|(
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|basePath
argument_list|)
operator|&&
name|basePath
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|basePath
operator|.
name|startsWith
argument_list|(
literal|"/"
argument_list|)
condition|)
block|{
name|this
operator|.
name|basePath
operator|=
literal|"/"
operator|+
name|basePath
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|basePath
operator|=
name|basePath
expr_stmt|;
block|}
block|}
block|}
DECL|method|configure (OasDocument openApi)
specifier|public
name|OasDocument
name|configure
parameter_list|(
name|OasDocument
name|openApi
parameter_list|)
block|{
if|if
condition|(
name|openApi
operator|instanceof
name|Oas20Document
condition|)
block|{
name|configureOas20
argument_list|(
operator|(
name|Oas20Document
operator|)
name|openApi
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|openApi
operator|instanceof
name|Oas30Document
condition|)
block|{
name|configureOas30
argument_list|(
operator|(
name|Oas30Document
operator|)
name|openApi
argument_list|)
expr_stmt|;
block|}
return|return
name|openApi
return|;
block|}
DECL|method|configureOas30 (Oas30Document openApi)
specifier|private
name|void
name|configureOas30
parameter_list|(
name|Oas30Document
name|openApi
parameter_list|)
block|{
name|openApi
operator|.
name|info
operator|=
name|info
expr_stmt|;
name|Server
name|server
init|=
name|openApi
operator|.
name|createServer
argument_list|()
decl_stmt|;
name|String
name|serverUrl
init|=
operator|new
name|StringBuilder
argument_list|()
operator|.
name|append
argument_list|(
name|this
operator|.
name|schemes
index|[
literal|0
index|]
argument_list|)
operator|.
name|append
argument_list|(
literal|"://"
argument_list|)
operator|.
name|append
argument_list|(
name|this
operator|.
name|host
argument_list|)
operator|.
name|append
argument_list|(
name|this
operator|.
name|basePath
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|server
operator|.
name|url
operator|=
name|serverUrl
expr_stmt|;
name|openApi
operator|.
name|addServer
argument_list|(
name|server
argument_list|)
expr_stmt|;
block|}
DECL|method|configureOas20 (Oas20Document openApi)
specifier|private
name|void
name|configureOas20
parameter_list|(
name|Oas20Document
name|openApi
parameter_list|)
block|{
if|if
condition|(
name|schemes
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|openApi
operator|.
name|schemes
operator|==
literal|null
condition|)
block|{
name|openApi
operator|.
name|schemes
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|String
name|scheme
range|:
name|schemes
control|)
block|{
name|openApi
operator|.
name|schemes
operator|.
name|add
argument_list|(
name|scheme
argument_list|)
expr_stmt|;
block|}
block|}
name|openApi
operator|.
name|info
operator|=
name|info
expr_stmt|;
name|openApi
operator|.
name|host
operator|=
name|host
expr_stmt|;
name|openApi
operator|.
name|basePath
operator|=
name|basePath
expr_stmt|;
block|}
DECL|method|isOpenApi3 ()
specifier|public
name|boolean
name|isOpenApi3
parameter_list|()
block|{
return|return
name|this
operator|.
name|version
operator|==
literal|null
operator|||
name|this
operator|.
name|version
operator|.
name|startsWith
argument_list|(
literal|"3"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

