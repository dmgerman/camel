begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cm.test
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|test
package|;
end_package

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigInteger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|SecureRandom
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|EndpointInject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|InvalidPayloadRuntimeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Produce
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ResolveEndpointFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RuntimeCamelException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|CMEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|client
operator|.
name|SMSMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|exceptions
operator|.
name|HostUnavailableException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|exceptions
operator|.
name|InvalidURLException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|exceptions
operator|.
name|InvalidUriEndpointException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|exceptions
operator|.
name|cmresponse
operator|.
name|CMResponseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|exceptions
operator|.
name|cmresponse
operator|.
name|InsufficientBalanceException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|exceptions
operator|.
name|cmresponse
operator|.
name|InvalidMSISDNException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|exceptions
operator|.
name|cmresponse
operator|.
name|InvalidProductTokenException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|exceptions
operator|.
name|cmresponse
operator|.
name|NoAccountFoundForProductTokenException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|exceptions
operator|.
name|cmresponse
operator|.
name|NoMessageException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|exceptions
operator|.
name|cmresponse
operator|.
name|NotPhoneNumberFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|exceptions
operator|.
name|cmresponse
operator|.
name|UnknownErrorException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|exceptions
operator|.
name|cmresponse
operator|.
name|UnroutableMessageException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|test
operator|.
name|mocks
operator|.
name|cmsender
operator|.
name|CMResponseExceptionSender
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|test
operator|.
name|mocks
operator|.
name|cmsender
operator|.
name|InsufficientBalanceExceptionSender
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|test
operator|.
name|mocks
operator|.
name|cmsender
operator|.
name|InvalidMSISDNExceptionSender
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|test
operator|.
name|mocks
operator|.
name|cmsender
operator|.
name|InvalidProductTokenExceptionSender
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|test
operator|.
name|mocks
operator|.
name|cmsender
operator|.
name|NoAccountFoundForProductTokenExceptionSender
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|test
operator|.
name|mocks
operator|.
name|cmsender
operator|.
name|NoMessageExceptionSender
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|test
operator|.
name|mocks
operator|.
name|cmsender
operator|.
name|NotPhoneNumberFoundExceptionSender
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|test
operator|.
name|mocks
operator|.
name|cmsender
operator|.
name|UnknownErrorExceptionSender
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|test
operator|.
name|mocks
operator|.
name|cmsender
operator|.
name|UnroutableMessageExceptionSender
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|spring
operator|.
name|CamelSpringDelegatingTestContextLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|spring
operator|.
name|CamelSpringJUnit4ClassRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|junit4
operator|.
name|AbstractJUnit4SpringContextTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|util
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|i18n
operator|.
name|phonenumbers
operator|.
name|PhoneNumberUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|i18n
operator|.
name|phonenumbers
operator|.
name|PhoneNumberUtil
operator|.
name|PhoneNumberFormat
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|CamelSpringJUnit4ClassRunner
operator|.
name|class
argument_list|)
annotation|@
name|ContextConfiguration
argument_list|(
name|classes
operator|=
block|{
name|CamelTestConfiguration
operator|.
name|class
block|}
argument_list|,
name|loader
operator|=
name|CamelSpringDelegatingTestContextLoader
operator|.
name|class
argument_list|)
comment|// @DirtiesContext(classMode = ClassMode.AFTER_EACH_TEST_METHOD)
comment|// @DisableJmx(false)
comment|// @MockEndpoints
comment|// @FixMethodOrder(MethodSorters.NAME_ASCENDING)
DECL|class|CMTest
specifier|public
class|class
name|CMTest
extends|extends
name|AbstractJUnit4SpringContextTests
block|{
comment|// dependency: camel-spring-javaconfig
annotation|@
name|Autowired
DECL|field|camelContext
specifier|private
name|CamelContext
name|camelContext
decl_stmt|;
DECL|field|random
specifier|private
name|SecureRandom
name|random
init|=
operator|new
name|SecureRandom
argument_list|()
decl_stmt|;
DECL|field|pnu
specifier|private
specifier|final
name|PhoneNumberUtil
name|pnu
init|=
name|PhoneNumberUtil
operator|.
name|getInstance
argument_list|()
decl_stmt|;
DECL|field|validNumber
specifier|private
name|String
name|validNumber
decl_stmt|;
annotation|@
name|Produce
argument_list|(
name|uri
operator|=
literal|"direct:sms"
argument_list|)
DECL|field|cmProxy
specifier|private
name|CMProxy
name|cmProxy
decl_stmt|;
annotation|@
name|EndpointInject
argument_list|(
name|uri
operator|=
literal|"mock:test"
argument_list|)
DECL|field|mock
specifier|private
name|MockEndpoint
name|mock
decl_stmt|;
comment|// private StopWatch stopWatch = new StopWatch(getClass().getSimpleName());
annotation|@
name|Before
DECL|method|beforeTest ()
specifier|public
name|void
name|beforeTest
parameter_list|()
throws|throws
name|Exception
block|{
name|mock
operator|.
name|reset
argument_list|()
expr_stmt|;
name|camelContext
operator|.
name|startRoute
argument_list|(
name|CamelTestConfiguration
operator|.
name|SIMPLE_ROUTE_ID
argument_list|)
expr_stmt|;
name|validNumber
operator|=
name|pnu
operator|.
name|format
argument_list|(
name|pnu
operator|.
name|getExampleNumber
argument_list|(
literal|"ES"
argument_list|)
argument_list|,
name|PhoneNumberFormat
operator|.
name|E164
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|afterTest ()
specifier|public
name|void
name|afterTest
parameter_list|()
block|{
try|try
block|{
name|camelContext
operator|.
name|stopRoute
argument_list|(
name|CamelTestConfiguration
operator|.
name|SIMPLE_ROUTE_ID
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|logger
operator|.
name|error
argument_list|(
literal|"Exception trying to stop de routes"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
comment|// Stop all routes
comment|// for (Route route : camelContext.getRoutes()) {
comment|// try {
comment|// camelContext.stopRoute(route.getId());
comment|// } catch (Exception e) {
comment|// logger.error("Exception trying to stop de routes", e);
comment|// }
comment|// }
block|}
comment|/*      * 1. Invalid URI      */
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidUriEndpointException
operator|.
name|class
argument_list|)
DECL|method|testNotRequiredProductToken ()
specifier|public
name|void
name|testNotRequiredProductToken
parameter_list|()
throws|throws
name|Throwable
block|{
try|try
block|{
name|String
name|schemedUri
init|=
literal|"cm://sgw01.cm.nl/gateway.ashx?defaultFrom=MyBusiness&defaultMaxNumberOfParts=8&testConnectionOnStartup=true"
decl_stmt|;
name|camelContext
operator|.
name|getEndpoint
argument_list|(
name|schemedUri
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
throw|throw
name|t
operator|.
name|getCause
argument_list|()
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidUriEndpointException
operator|.
name|class
argument_list|)
DECL|method|testNotRequiredDefaultFrom ()
specifier|public
name|void
name|testNotRequiredDefaultFrom
parameter_list|()
throws|throws
name|Throwable
block|{
try|try
block|{
name|String
name|schemedUri
init|=
literal|"cm://sgw01.cm.nl/gateway.ashx?defaultFrom=MyBusiness&defaultMaxNumberOfParts=8&testConnectionOnStartup=true"
decl_stmt|;
name|camelContext
operator|.
name|getEndpoint
argument_list|(
name|schemedUri
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
throw|throw
name|t
operator|.
name|getCause
argument_list|()
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|HostUnavailableException
operator|.
name|class
argument_list|)
DECL|method|testHostUnavailableException ()
specifier|public
name|void
name|testHostUnavailableException
parameter_list|()
throws|throws
name|Throwable
block|{
comment|// cm://sgw01.cm.nl/gateway.ashx?defaultFrom=MyBusiness&defaultMaxNumberOfParts=8&productToken=ea723fd7-da81-4826-89bc-fa7144e71c40&testConnectionOnStartup=true
name|String
name|schemedUri
init|=
literal|"cm://dummy.sgw01.cm.nl/gateway.ashx?defaultFrom=MyBusiness&defaultMaxNumberOfParts=8&productToken=ea723fd7-da81-4826-89bc-fa7144e71c40&testConnectionOnStartup=true"
decl_stmt|;
name|Service
name|service
init|=
name|camelContext
operator|.
name|getEndpoint
argument_list|(
name|schemedUri
argument_list|)
operator|.
name|createProducer
argument_list|()
decl_stmt|;
name|service
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidURLException
operator|.
name|class
argument_list|)
DECL|method|testInvalidHostDuplicateScheme ()
specifier|public
name|void
name|testInvalidHostDuplicateScheme
parameter_list|()
throws|throws
name|Throwable
block|{
comment|// cm://sgw01.cm.nl/gateway.ashx?defaultFrom=MyBusiness&defaultMaxNumberOfParts=8&productToken=ea723fd7-da81-4826-89bc-fa7144e71c40&testConnectionOnStartup=true
try|try
block|{
name|String
name|schemedUri
init|=
literal|"cm://https://demo.com"
decl_stmt|;
name|camelContext
operator|.
name|getEndpoint
argument_list|(
name|schemedUri
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
throw|throw
name|t
operator|.
name|getCause
argument_list|()
throw|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ResolveEndpointFailedException
operator|.
name|class
argument_list|)
DECL|method|testInvalidUriEndpoint ()
specifier|public
name|void
name|testInvalidUriEndpoint
parameter_list|()
throws|throws
name|Throwable
block|{
comment|// cm://sgw01.cm.nl/gateway.ashx?defaultFrom=MyBusiness&defaultMaxNumberOfParts=8&productToken=ea723fd7-da81-4826-89bc-fa7144e71c40&testConnectionOnStartup=true
name|String
name|noHostUri
init|=
literal|"cm://gateway.ashx?defaultFrom=MyBusiness&defaultMaxNumberOfParts=8&productToken=ea723fd7-da81-4826-89bc-fa7144e71c40&testConnectionOnStartup=true"
decl_stmt|;
name|camelContext
operator|.
name|getEndpoint
argument_list|(
name|noHostUri
argument_list|)
expr_stmt|;
block|}
comment|/*      * 2. Invalid Payload      */
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|RuntimeException
operator|.
name|class
argument_list|)
DECL|method|testNullPayload ()
specifier|public
name|void
name|testNullPayload
parameter_list|()
throws|throws
name|Throwable
block|{
name|cmProxy
operator|.
name|send
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
comment|// @DirtiesContext
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoAccountFoundForProductTokenException
operator|.
name|class
argument_list|)
DECL|method|testAsPartOfARoute ()
specifier|public
name|void
name|testAsPartOfARoute
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Body
specifier|final
name|SMSMessage
name|smsMessage
init|=
operator|new
name|SMSMessage
argument_list|(
name|generateIdAsString
argument_list|()
argument_list|,
name|generateUnicodeMessage
argument_list|()
argument_list|,
name|validNumber
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|cmProxy
operator|.
name|send
argument_list|(
name|smsMessage
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoAccountFoundForProductTokenException
operator|.
name|class
argument_list|)
DECL|method|testNoAccountFoundForProductTokenException ()
specifier|public
name|void
name|testNoAccountFoundForProductTokenException
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Change sending strategy
name|CMEndpoint
name|endpoint
init|=
operator|(
name|CMEndpoint
operator|)
name|camelContext
operator|.
name|getEndpoint
argument_list|(
name|applicationContext
operator|.
name|getBean
argument_list|(
name|CamelTestConfiguration
operator|.
name|class
argument_list|)
operator|.
name|getUri
argument_list|()
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|getProducer
argument_list|()
operator|.
name|setSender
argument_list|(
operator|new
name|NoAccountFoundForProductTokenExceptionSender
argument_list|()
argument_list|)
expr_stmt|;
comment|// Body
specifier|final
name|SMSMessage
name|smsMessage
init|=
operator|new
name|SMSMessage
argument_list|(
name|generateIdAsString
argument_list|()
argument_list|,
name|generateGSM0338Message
argument_list|()
argument_list|,
name|validNumber
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|cmProxy
operator|.
name|send
argument_list|(
name|smsMessage
argument_list|)
expr_stmt|;
block|}
comment|/*      * 3. CM Responses (Faking Exceptions)      */
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CMResponseException
operator|.
name|class
argument_list|)
DECL|method|testCMResponseException ()
specifier|public
name|void
name|testCMResponseException
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Change sending strategy
name|CMEndpoint
name|endpoint
init|=
operator|(
name|CMEndpoint
operator|)
name|camelContext
operator|.
name|getEndpoint
argument_list|(
name|applicationContext
operator|.
name|getBean
argument_list|(
name|CamelTestConfiguration
operator|.
name|class
argument_list|)
operator|.
name|getUri
argument_list|()
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|getProducer
argument_list|()
operator|.
name|setSender
argument_list|(
operator|new
name|CMResponseExceptionSender
argument_list|()
argument_list|)
expr_stmt|;
comment|// Body
specifier|final
name|SMSMessage
name|smsMessage
init|=
operator|new
name|SMSMessage
argument_list|(
name|generateIdAsString
argument_list|()
argument_list|,
name|generateUnicodeMessage
argument_list|()
argument_list|,
name|validNumber
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|cmProxy
operator|.
name|send
argument_list|(
name|smsMessage
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InsufficientBalanceException
operator|.
name|class
argument_list|)
DECL|method|testInsufficientBalanceException ()
specifier|public
name|void
name|testInsufficientBalanceException
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Change sending strategy
name|CMEndpoint
name|endpoint
init|=
operator|(
name|CMEndpoint
operator|)
name|camelContext
operator|.
name|getEndpoint
argument_list|(
name|applicationContext
operator|.
name|getBean
argument_list|(
name|CamelTestConfiguration
operator|.
name|class
argument_list|)
operator|.
name|getUri
argument_list|()
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|getProducer
argument_list|()
operator|.
name|setSender
argument_list|(
operator|new
name|InsufficientBalanceExceptionSender
argument_list|()
argument_list|)
expr_stmt|;
comment|// Body
specifier|final
name|SMSMessage
name|smsMessage
init|=
operator|new
name|SMSMessage
argument_list|(
name|generateIdAsString
argument_list|()
argument_list|,
name|generateGSM0338Message
argument_list|()
argument_list|,
name|validNumber
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|cmProxy
operator|.
name|send
argument_list|(
name|smsMessage
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidMSISDNException
operator|.
name|class
argument_list|)
DECL|method|testInvalidMSISDNException ()
specifier|public
name|void
name|testInvalidMSISDNException
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Change sending strategy
name|CMEndpoint
name|endpoint
init|=
operator|(
name|CMEndpoint
operator|)
name|camelContext
operator|.
name|getEndpoint
argument_list|(
name|applicationContext
operator|.
name|getBean
argument_list|(
name|CamelTestConfiguration
operator|.
name|class
argument_list|)
operator|.
name|getUri
argument_list|()
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|getProducer
argument_list|()
operator|.
name|setSender
argument_list|(
operator|new
name|InvalidMSISDNExceptionSender
argument_list|()
argument_list|)
expr_stmt|;
comment|// Body
specifier|final
name|SMSMessage
name|smsMessage
init|=
operator|new
name|SMSMessage
argument_list|(
name|generateIdAsString
argument_list|()
argument_list|,
name|generateUnicodeMessage
argument_list|()
argument_list|,
name|validNumber
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|cmProxy
operator|.
name|send
argument_list|(
name|smsMessage
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidProductTokenException
operator|.
name|class
argument_list|)
DECL|method|testInvalidProductTokenException ()
specifier|public
name|void
name|testInvalidProductTokenException
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Change sending strategy
name|CMEndpoint
name|endpoint
init|=
operator|(
name|CMEndpoint
operator|)
name|camelContext
operator|.
name|getEndpoint
argument_list|(
name|applicationContext
operator|.
name|getBean
argument_list|(
name|CamelTestConfiguration
operator|.
name|class
argument_list|)
operator|.
name|getUri
argument_list|()
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|getProducer
argument_list|()
operator|.
name|setSender
argument_list|(
operator|new
name|InvalidProductTokenExceptionSender
argument_list|()
argument_list|)
expr_stmt|;
comment|// Body
specifier|final
name|SMSMessage
name|smsMessage
init|=
operator|new
name|SMSMessage
argument_list|(
name|generateIdAsString
argument_list|()
argument_list|,
name|generateUnicodeMessage
argument_list|()
argument_list|,
name|validNumber
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|cmProxy
operator|.
name|send
argument_list|(
name|smsMessage
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoMessageException
operator|.
name|class
argument_list|)
DECL|method|testNoMessageException ()
specifier|public
name|void
name|testNoMessageException
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Change sending strategy
name|CMEndpoint
name|endpoint
init|=
operator|(
name|CMEndpoint
operator|)
name|camelContext
operator|.
name|getEndpoint
argument_list|(
name|applicationContext
operator|.
name|getBean
argument_list|(
name|CamelTestConfiguration
operator|.
name|class
argument_list|)
operator|.
name|getUri
argument_list|()
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|getProducer
argument_list|()
operator|.
name|setSender
argument_list|(
operator|new
name|NoMessageExceptionSender
argument_list|()
argument_list|)
expr_stmt|;
comment|// Body
specifier|final
name|SMSMessage
name|smsMessage
init|=
operator|new
name|SMSMessage
argument_list|(
name|generateIdAsString
argument_list|()
argument_list|,
name|generateGSM0338Message
argument_list|()
argument_list|,
name|validNumber
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|cmProxy
operator|.
name|send
argument_list|(
name|smsMessage
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NotPhoneNumberFoundException
operator|.
name|class
argument_list|)
DECL|method|testNotPhoneNumberFoundException ()
specifier|public
name|void
name|testNotPhoneNumberFoundException
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Change sending strategy
name|CMEndpoint
name|endpoint
init|=
operator|(
name|CMEndpoint
operator|)
name|camelContext
operator|.
name|getEndpoint
argument_list|(
name|applicationContext
operator|.
name|getBean
argument_list|(
name|CamelTestConfiguration
operator|.
name|class
argument_list|)
operator|.
name|getUri
argument_list|()
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|getProducer
argument_list|()
operator|.
name|setSender
argument_list|(
operator|new
name|NotPhoneNumberFoundExceptionSender
argument_list|()
argument_list|)
expr_stmt|;
comment|// Body
specifier|final
name|SMSMessage
name|smsMessage
init|=
operator|new
name|SMSMessage
argument_list|(
name|generateIdAsString
argument_list|()
argument_list|,
name|generateUnicodeMessage
argument_list|()
argument_list|,
name|validNumber
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|cmProxy
operator|.
name|send
argument_list|(
name|smsMessage
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|UnknownErrorException
operator|.
name|class
argument_list|)
DECL|method|testUnknownErrorException ()
specifier|public
name|void
name|testUnknownErrorException
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Change sending strategy
name|CMEndpoint
name|endpoint
init|=
operator|(
name|CMEndpoint
operator|)
name|camelContext
operator|.
name|getEndpoint
argument_list|(
name|applicationContext
operator|.
name|getBean
argument_list|(
name|CamelTestConfiguration
operator|.
name|class
argument_list|)
operator|.
name|getUri
argument_list|()
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|getProducer
argument_list|()
operator|.
name|setSender
argument_list|(
operator|new
name|UnknownErrorExceptionSender
argument_list|()
argument_list|)
expr_stmt|;
comment|// Body
specifier|final
name|SMSMessage
name|smsMessage
init|=
operator|new
name|SMSMessage
argument_list|(
name|generateIdAsString
argument_list|()
argument_list|,
name|generateGSM0338Message
argument_list|()
argument_list|,
name|validNumber
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|cmProxy
operator|.
name|send
argument_list|(
name|smsMessage
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|UnroutableMessageException
operator|.
name|class
argument_list|)
DECL|method|testUnroutableMessageException ()
specifier|public
name|void
name|testUnroutableMessageException
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Change sending strategy
name|CMEndpoint
name|endpoint
init|=
operator|(
name|CMEndpoint
operator|)
name|camelContext
operator|.
name|getEndpoint
argument_list|(
name|applicationContext
operator|.
name|getBean
argument_list|(
name|CamelTestConfiguration
operator|.
name|class
argument_list|)
operator|.
name|getUri
argument_list|()
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|getProducer
argument_list|()
operator|.
name|setSender
argument_list|(
operator|new
name|UnroutableMessageExceptionSender
argument_list|()
argument_list|)
expr_stmt|;
comment|// Body
specifier|final
name|SMSMessage
name|smsMessage
init|=
operator|new
name|SMSMessage
argument_list|(
name|generateIdAsString
argument_list|()
argument_list|,
name|generateUnicodeMessage
argument_list|()
argument_list|,
name|validNumber
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|cmProxy
operator|.
name|send
argument_list|(
name|smsMessage
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|RuntimeCamelException
operator|.
name|class
argument_list|)
DECL|method|testCMEndpointIsForProducing ()
specifier|public
name|void
name|testCMEndpointIsForProducing
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Change sending strategy
name|CMEndpoint
name|endpoint
init|=
operator|(
name|CMEndpoint
operator|)
name|camelContext
operator|.
name|getEndpoint
argument_list|(
name|applicationContext
operator|.
name|getBean
argument_list|(
name|CamelTestConfiguration
operator|.
name|class
argument_list|)
operator|.
name|getUri
argument_list|()
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|createConsumer
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCMEndpointGetHost ()
specifier|public
name|void
name|testCMEndpointGetHost
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Change sending strategy
name|CMEndpoint
name|endpoint
init|=
operator|(
name|CMEndpoint
operator|)
name|camelContext
operator|.
name|getEndpoint
argument_list|(
name|applicationContext
operator|.
name|getBean
argument_list|(
name|CamelTestConfiguration
operator|.
name|class
argument_list|)
operator|.
name|getUri
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|isTrue
argument_list|(
name|endpoint
operator|.
name|getHost
argument_list|()
operator|.
name|equals
argument_list|(
name|applicationContext
operator|.
name|getEnvironment
argument_list|()
operator|.
name|getRequiredProperty
argument_list|(
literal|"cm.url"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidPayloadRuntimeException
operator|.
name|class
argument_list|)
DECL|method|testSendInvalidPayload ()
specifier|public
name|void
name|testSendInvalidPayload
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Body
specifier|final
name|SMSMessage
name|smsMessage
init|=
operator|new
name|SMSMessage
argument_list|(
name|generateIdAsString
argument_list|()
argument_list|,
name|generateGSM0338Message
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|cmProxy
operator|.
name|send
argument_list|(
name|smsMessage
argument_list|)
expr_stmt|;
block|}
comment|/*      * CMMessages      */
comment|// @Test(expected = RuntimeException.class)
comment|// public void testSkel() throws Exception {
comment|// mock.expectedMessageCount(1);
comment|//
comment|// // Body
comment|// final SMSMessage smsMessage = new SMSMessage("Hello CM", validNumber);
comment|// cmProxy.send(smsMessage);
comment|//
comment|// mock.assertIsSatisfied();
comment|// }
DECL|method|generateUnicodeMessage ()
specifier|private
name|String
name|generateUnicodeMessage
parameter_list|()
block|{
name|String
name|ch
init|=
literal|"\uF400"
decl_stmt|;
return|return
name|generateRandomLengthMessageByChar
argument_list|(
name|ch
argument_list|)
return|;
block|}
DECL|method|generateGSM0338Message ()
specifier|private
name|String
name|generateGSM0338Message
parameter_list|()
block|{
name|String
name|ch
init|=
literal|"a"
decl_stmt|;
return|return
name|generateRandomLengthMessageByChar
argument_list|(
name|ch
argument_list|)
return|;
block|}
DECL|method|generateRandomLengthMessageByChar (String ch)
specifier|private
name|String
name|generateRandomLengthMessageByChar
parameter_list|(
name|String
name|ch
parameter_list|)
block|{
comment|// random Length
name|int
name|msgLength
init|=
call|(
name|int
call|)
argument_list|(
name|Math
operator|.
name|random
argument_list|()
operator|*
literal|2000
argument_list|)
decl_stmt|;
name|StringBuffer
name|message
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|index
init|=
literal|0
init|;
name|index
operator|<
name|msgLength
condition|;
name|index
operator|++
control|)
block|{
name|message
operator|.
name|append
argument_list|(
name|ch
argument_list|)
expr_stmt|;
block|}
return|return
name|message
operator|.
name|toString
argument_list|()
return|;
block|}
comment|//
DECL|method|generateIdAsString ()
specifier|private
name|String
name|generateIdAsString
parameter_list|()
block|{
return|return
operator|new
name|BigInteger
argument_list|(
literal|130
argument_list|,
name|random
argument_list|)
operator|.
name|toString
argument_list|(
literal|32
argument_list|)
return|;
block|}
block|}
end_class

end_unit

