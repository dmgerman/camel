begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.component.solr
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|solr
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|AvailablePortFinder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|embedded
operator|.
name|JettySolrRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|HttpSolrServer
import|;
end_import

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_class
DECL|class|SolrFixtures
specifier|public
class|class
name|SolrFixtures
block|{
DECL|field|log
specifier|static
name|Logger
name|log
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|SolrFixtures
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|solrRunner
specifier|private
specifier|static
name|JettySolrRunner
name|solrRunner
decl_stmt|;
DECL|field|solrHttpsRunner
specifier|private
specifier|static
name|JettySolrRunner
name|solrHttpsRunner
decl_stmt|;
DECL|field|solrServer
specifier|private
specifier|static
name|HttpSolrServer
name|solrServer
decl_stmt|;
DECL|field|solrHttpsServer
specifier|private
specifier|static
name|HttpSolrServer
name|solrHttpsServer
decl_stmt|;
DECL|field|useHttps
name|boolean
name|useHttps
decl_stmt|;
DECL|field|port
specifier|private
specifier|static
name|int
name|port
decl_stmt|;
DECL|field|httpsPort
specifier|private
specifier|static
name|int
name|httpsPort
decl_stmt|;
DECL|method|SolrFixtures (boolean useHttps)
name|SolrFixtures
parameter_list|(
name|boolean
name|useHttps
parameter_list|)
block|{
name|this
operator|.
name|useHttps
operator|=
name|useHttps
expr_stmt|;
block|}
DECL|method|solrRouteUri ()
name|String
name|solrRouteUri
parameter_list|()
block|{
if|if
condition|(
name|useHttps
condition|)
block|{
return|return
literal|"solrs://localhost:"
operator|+
name|httpsPort
operator|+
literal|"/solr"
return|;
block|}
else|else
block|{
return|return
literal|"solr://localhost:"
operator|+
name|port
operator|+
literal|"/solr"
return|;
block|}
block|}
DECL|method|getServer ()
name|SolrServer
name|getServer
parameter_list|()
block|{
if|if
condition|(
name|useHttps
condition|)
block|{
return|return
name|this
operator|.
name|solrHttpsServer
return|;
block|}
else|else
block|{
return|return
name|this
operator|.
name|solrServer
return|;
block|}
block|}
DECL|method|createSolrFixtures ()
specifier|static
name|void
name|createSolrFixtures
parameter_list|()
throws|throws
name|Exception
block|{
name|solrHttpsRunner
operator|=
name|JettySolrFactory
operator|.
name|createJettyTestFixture
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|httpsPort
operator|=
name|solrHttpsRunner
operator|.
name|getLocalPort
argument_list|()
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Started Https Test Server: "
operator|+
name|solrHttpsRunner
operator|.
name|getBaseUrl
argument_list|()
argument_list|)
expr_stmt|;
empty_stmt|;
name|solrRunner
operator|=
name|JettySolrFactory
operator|.
name|createJettyTestFixture
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|port
operator|=
name|solrRunner
operator|.
name|getLocalPort
argument_list|()
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Started Test Server: "
operator|+
name|solrRunner
operator|.
name|getBaseUrl
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|teardownSolrFixtures ()
specifier|public
specifier|static
name|void
name|teardownSolrFixtures
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|solrRunner
operator|!=
literal|null
condition|)
block|{
name|solrRunner
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|solrHttpsRunner
operator|!=
literal|null
condition|)
block|{
name|solrHttpsRunner
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|clearFixtures ()
specifier|public
name|void
name|clearFixtures
parameter_list|()
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
if|if
condition|(
name|solrServer
operator|!=
literal|null
condition|)
block|{
comment|// Clear the Solr index.
name|solrServer
operator|.
name|deleteByQuery
argument_list|(
literal|"*:*"
argument_list|)
expr_stmt|;
name|solrServer
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|solrHttpsServer
operator|!=
literal|null
condition|)
block|{
name|solrHttpsServer
operator|.
name|deleteByQuery
argument_list|(
literal|"*:*"
argument_list|)
expr_stmt|;
name|solrHttpsServer
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|clearIndex ()
specifier|public
name|void
name|clearIndex
parameter_list|()
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
if|if
condition|(
name|solrServer
operator|!=
literal|null
condition|)
block|{
comment|// Clear the Solr index.
name|solrServer
operator|.
name|deleteByQuery
argument_list|(
literal|"*:*"
argument_list|)
expr_stmt|;
name|solrServer
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|solrHttpsServer
operator|!=
literal|null
condition|)
block|{
name|solrHttpsServer
operator|.
name|deleteByQuery
argument_list|(
literal|"*:*"
argument_list|)
expr_stmt|;
name|solrHttpsServer
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

