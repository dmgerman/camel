begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.aws.swf
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|aws
operator|.
name|swf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|flow
operator|.
name|DataConverter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|flow
operator|.
name|JsonDataConverter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|flow
operator|.
name|generic
operator|.
name|ActivityImplementation
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|flow
operator|.
name|generic
operator|.
name|ActivityImplementationFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|flow
operator|.
name|worker
operator|.
name|ActivityTypeExecutionOptions
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|flow
operator|.
name|worker
operator|.
name|ActivityTypeRegistrationOptions
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|simpleworkflow
operator|.
name|model
operator|.
name|ActivityType
import|;
end_import

begin_class
DECL|class|CamelActivityImplementationFactory
specifier|public
class|class
name|CamelActivityImplementationFactory
extends|extends
name|ActivityImplementationFactory
block|{
DECL|field|swfWorkflowConsumer
specifier|private
name|SWFActivityConsumer
name|swfWorkflowConsumer
decl_stmt|;
DECL|field|configuration
specifier|private
name|SWFConfiguration
name|configuration
decl_stmt|;
DECL|method|CamelActivityImplementationFactory (SWFActivityConsumer swfWorkflowConsumer, SWFConfiguration configuration)
specifier|public
name|CamelActivityImplementationFactory
parameter_list|(
name|SWFActivityConsumer
name|swfWorkflowConsumer
parameter_list|,
name|SWFConfiguration
name|configuration
parameter_list|)
block|{
name|this
operator|.
name|swfWorkflowConsumer
operator|=
name|swfWorkflowConsumer
expr_stmt|;
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getActivityTypesToRegister ()
specifier|public
name|Iterable
argument_list|<
name|ActivityType
argument_list|>
name|getActivityTypesToRegister
parameter_list|()
block|{
name|ArrayList
argument_list|<
name|ActivityType
argument_list|>
name|activityTypes
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|ActivityType
name|activityType
init|=
operator|new
name|ActivityType
argument_list|()
decl_stmt|;
name|activityType
operator|.
name|setName
argument_list|(
name|configuration
operator|.
name|getEventName
argument_list|()
argument_list|)
expr_stmt|;
name|activityType
operator|.
name|setVersion
argument_list|(
name|configuration
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|activityTypes
operator|.
name|add
argument_list|(
name|activityType
argument_list|)
expr_stmt|;
return|return
name|activityTypes
return|;
block|}
annotation|@
name|Override
DECL|method|getActivityImplementation (ActivityType activityType)
specifier|public
name|ActivityImplementation
name|getActivityImplementation
parameter_list|(
name|ActivityType
name|activityType
parameter_list|)
block|{
name|ActivityTypeExecutionOptions
name|activityTypeExecutionOptions
init|=
name|configuration
operator|.
name|getActivityTypeExecutionOptions
argument_list|()
operator|!=
literal|null
condition|?
name|configuration
operator|.
name|getActivityTypeExecutionOptions
argument_list|()
else|:
operator|new
name|ActivityTypeExecutionOptions
argument_list|()
decl_stmt|;
name|ActivityTypeRegistrationOptions
name|activityTypeRegistrationOptions
init|=
name|configuration
operator|.
name|getActivityTypeRegistrationOptions
argument_list|()
operator|!=
literal|null
condition|?
name|configuration
operator|.
name|getActivityTypeRegistrationOptions
argument_list|()
else|:
operator|new
name|ActivityTypeRegistrationOptions
argument_list|()
decl_stmt|;
name|DataConverter
name|dataConverter
init|=
name|configuration
operator|.
name|getDataConverter
argument_list|()
operator|!=
literal|null
condition|?
name|configuration
operator|.
name|getDataConverter
argument_list|()
else|:
operator|new
name|JsonDataConverter
argument_list|()
decl_stmt|;
return|return
operator|new
name|CamelActivityImplementation
argument_list|(
name|swfWorkflowConsumer
argument_list|,
name|activityTypeRegistrationOptions
argument_list|,
name|activityTypeExecutionOptions
argument_list|,
name|dataConverter
argument_list|)
return|;
block|}
block|}
end_class

end_unit

