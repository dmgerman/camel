begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.as2
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|AS2Charset
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|AS2Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|AS2Header
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|AS2MediaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|AS2MessageStructure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|AS2MimeType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|AS2ServerConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|AS2ServerManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|entity
operator|.
name|ApplicationEDIEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|entity
operator|.
name|DispositionNotificationMultipartReportEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|entity
operator|.
name|MimeEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|util
operator|.
name|HttpMessageUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|internal
operator|.
name|AS2ApiCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|internal
operator|.
name|AS2ClientManagerApiMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpEntityEnclosingRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|entity
operator|.
name|ContentType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|protocol
operator|.
name|HttpContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|protocol
operator|.
name|HttpRequestHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Test class for {@link org.apache.camel.component.as2.api.AS2ClientManager} APIs.  */
end_comment

begin_class
DECL|class|AS2ClientManagerIntegrationTest
specifier|public
class|class
name|AS2ClientManagerIntegrationTest
extends|extends
name|AbstractAS2TestSupport
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|AS2ClientManagerIntegrationTest
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|PATH_PREFIX
specifier|private
specifier|static
specifier|final
name|String
name|PATH_PREFIX
init|=
name|AS2ApiCollection
operator|.
name|getCollection
argument_list|()
operator|.
name|getApiName
argument_list|(
name|AS2ClientManagerApiMethod
operator|.
name|class
argument_list|)
operator|.
name|getName
argument_list|()
decl_stmt|;
DECL|field|REQUEST_URI
specifier|private
specifier|static
specifier|final
name|String
name|REQUEST_URI
init|=
literal|"/"
decl_stmt|;
DECL|field|SUBJECT
specifier|private
specifier|static
specifier|final
name|String
name|SUBJECT
init|=
literal|"Test Case"
decl_stmt|;
DECL|field|AS2_NAME
specifier|private
specifier|static
specifier|final
name|String
name|AS2_NAME
init|=
literal|"878051556"
decl_stmt|;
DECL|field|FROM
specifier|private
specifier|static
specifier|final
name|String
name|FROM
init|=
literal|"mrAS@example.org"
decl_stmt|;
DECL|field|MDN_FROM
specifier|private
specifier|static
specifier|final
name|String
name|MDN_FROM
init|=
literal|"as2Test@server.example.com"
decl_stmt|;
DECL|field|MDN_SUBJECT_PREFIX
specifier|private
specifier|static
specifier|final
name|String
name|MDN_SUBJECT_PREFIX
init|=
literal|"MDN Response:"
decl_stmt|;
DECL|field|EDI_MESSAGE
specifier|private
specifier|static
specifier|final
name|String
name|EDI_MESSAGE
init|=
literal|"UNB+UNOA:1+005435656:1+006415160:1+060515:1434+00000000000778'\n"
operator|+
literal|"UNH+00000000000117+INVOIC:D:97B:UN'\n"
operator|+
literal|"BGM+380+342459+9'\n"
operator|+
literal|"DTM+3:20060515:102'\n"
operator|+
literal|"RFF+ON:521052'\n"
operator|+
literal|"NAD+BY+792820524::16++CUMMINS MID-RANGE ENGINE PLANT'\n"
operator|+
literal|"NAD+SE+005435656::16++GENERAL WIDGET COMPANY'\n"
operator|+
literal|"CUX+1:USD'\n"
operator|+
literal|"LIN+1++157870:IN'\n"
operator|+
literal|"IMD+F++:::WIDGET'\n"
operator|+
literal|"QTY+47:1020:EA'\n"
operator|+
literal|"ALI+US'\n"
operator|+
literal|"MOA+203:1202.58'\n"
operator|+
literal|"PRI+INV:1.179'\n"
operator|+
literal|"LIN+2++157871:IN'\n"
operator|+
literal|"IMD+F++:::DIFFERENT WIDGET'\n"
operator|+
literal|"QTY+47:20:EA'\n"
operator|+
literal|"ALI+JP'\n"
operator|+
literal|"MOA+203:410'\n"
operator|+
literal|"PRI+INV:20.5'\n"
operator|+
literal|"UNS+S'\n"
operator|+
literal|"MOA+39:2137.58'\n"
operator|+
literal|"ALC+C+ABG'\n"
operator|+
literal|"MOA+8:525'\n"
operator|+
literal|"UNT+23+00000000000117'\n"
operator|+
literal|"UNZ+1+00000000000778'\n"
decl_stmt|;
DECL|field|EXPECTED_AS2_VERSION
specifier|private
specifier|static
specifier|final
name|String
name|EXPECTED_AS2_VERSION
init|=
literal|"1.1"
decl_stmt|;
DECL|field|EXPECTED_MDN_SUBJECT
specifier|private
specifier|static
specifier|final
name|String
name|EXPECTED_MDN_SUBJECT
init|=
name|MDN_SUBJECT_PREFIX
operator|+
name|SUBJECT
decl_stmt|;
DECL|field|serverConnection
specifier|private
specifier|static
name|AS2ServerConnection
name|serverConnection
decl_stmt|;
annotation|@
name|Test
DECL|method|plainMessageSendTest ()
specifier|public
name|void
name|plainMessageSendTest
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelAS2.ediMessage"
argument_list|,
name|EDI_MESSAGE
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelAS2.requestUri"
argument_list|,
name|REQUEST_URI
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelAS2.subject"
argument_list|,
name|SUBJECT
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelAS2.from"
argument_list|,
name|FROM
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelAS2.as2From"
argument_list|,
name|AS2_NAME
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelAS2.as2To"
argument_list|,
name|AS2_NAME
argument_list|)
expr_stmt|;
comment|// parameter type is org.apache.camel.component.as2.api.AS2MessageStructure
name|headers
operator|.
name|put
argument_list|(
literal|"CamelAS2.as2MessageStructure"
argument_list|,
name|AS2MessageStructure
operator|.
name|PLAIN
argument_list|)
expr_stmt|;
comment|// parameter type is org.apache.http.entity.ContentType
name|headers
operator|.
name|put
argument_list|(
literal|"CamelAS2.ediMessageContentType"
argument_list|,
name|ContentType
operator|.
name|create
argument_list|(
name|AS2MediaType
operator|.
name|APPLICATION_EDIFACT
argument_list|,
name|AS2Charset
operator|.
name|US_ASCII
argument_list|)
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelAS2.ediMessageTransferEncoding"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelAS2.signingAlgorithmName"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is java.security.cert.Certificate[]
name|headers
operator|.
name|put
argument_list|(
literal|"CamelAS2.signingCertificateChain"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is java.security.PrivateKey
name|headers
operator|.
name|put
argument_list|(
literal|"CamelAS2.signingPrivateKey"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelAS2.dispositionNotificationTo"
argument_list|,
literal|"mrAS2@example.com"
argument_list|)
expr_stmt|;
comment|// parameter type is String[]
name|headers
operator|.
name|put
argument_list|(
literal|"CamelAS2.signedReceiptMicAlgorithms"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
specifier|final
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|protocol
operator|.
name|HttpCoreContext
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://SEND"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"send result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"send: "
operator|+
name|result
argument_list|)
expr_stmt|;
name|HttpRequest
name|request
init|=
name|result
operator|.
name|getRequest
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Request"
argument_list|,
name|request
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Request does not contain body"
argument_list|,
name|request
operator|instanceof
name|HttpEntityEnclosingRequest
argument_list|)
expr_stmt|;
name|HttpEntity
name|entity
init|=
operator|(
operator|(
name|HttpEntityEnclosingRequest
operator|)
name|request
operator|)
operator|.
name|getEntity
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Request body"
argument_list|,
name|entity
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Request body does not contain EDI entity"
argument_list|,
name|entity
operator|instanceof
name|ApplicationEDIEntity
argument_list|)
expr_stmt|;
name|String
name|ediMessage
init|=
operator|(
operator|(
name|ApplicationEDIEntity
operator|)
name|entity
operator|)
operator|.
name|getEdiMessage
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"EDI message is different"
argument_list|,
name|EDI_MESSAGE
argument_list|,
name|ediMessage
argument_list|)
expr_stmt|;
name|HttpResponse
name|response
init|=
name|result
operator|.
name|getResponse
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Response"
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Unexpected response type"
argument_list|,
name|AS2MimeType
operator|.
name|MULTIPART_REPORT
argument_list|,
name|HttpMessageUtils
operator|.
name|getHeaderValue
argument_list|(
name|response
argument_list|,
name|AS2Header
operator|.
name|CONTENT_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Unexpected mime version"
argument_list|,
name|AS2Constants
operator|.
name|MIME_VERSION
argument_list|,
name|HttpMessageUtils
operator|.
name|getHeaderValue
argument_list|(
name|response
argument_list|,
name|AS2Header
operator|.
name|MIME_VERSION
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Unexpected AS2 version"
argument_list|,
name|EXPECTED_AS2_VERSION
argument_list|,
name|HttpMessageUtils
operator|.
name|getHeaderValue
argument_list|(
name|response
argument_list|,
name|AS2Header
operator|.
name|AS2_VERSION
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Unexpected MDN subject"
argument_list|,
name|EXPECTED_MDN_SUBJECT
argument_list|,
name|HttpMessageUtils
operator|.
name|getHeaderValue
argument_list|(
name|response
argument_list|,
name|AS2Header
operator|.
name|SUBJECT
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Unexpected MDN from"
argument_list|,
name|MDN_FROM
argument_list|,
name|HttpMessageUtils
operator|.
name|getHeaderValue
argument_list|(
name|response
argument_list|,
name|AS2Header
operator|.
name|FROM
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Unexpected AS2 from"
argument_list|,
name|AS2_NAME
argument_list|,
name|HttpMessageUtils
operator|.
name|getHeaderValue
argument_list|(
name|response
argument_list|,
name|AS2Header
operator|.
name|AS2_FROM
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Unexpected AS2 to"
argument_list|,
name|AS2_NAME
argument_list|,
name|HttpMessageUtils
operator|.
name|getHeaderValue
argument_list|(
name|response
argument_list|,
name|AS2Header
operator|.
name|AS2_TO
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Missing message id"
argument_list|,
name|HttpMessageUtils
operator|.
name|getHeaderValue
argument_list|(
name|response
argument_list|,
name|AS2Header
operator|.
name|MESSAGE_ID
argument_list|)
argument_list|)
expr_stmt|;
name|HttpEntity
name|responseEntity
init|=
name|response
operator|.
name|getEntity
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Response entity"
argument_list|,
name|responseEntity
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Unexpected response entity type"
argument_list|,
name|responseEntity
operator|instanceof
name|DispositionNotificationMultipartReportEntity
argument_list|)
expr_stmt|;
name|DispositionNotificationMultipartReportEntity
name|reportEntity
init|=
operator|(
name|DispositionNotificationMultipartReportEntity
operator|)
name|responseEntity
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Unexpected number of body parts in report"
argument_list|,
literal|2
argument_list|,
name|reportEntity
operator|.
name|getPartCount
argument_list|()
argument_list|)
expr_stmt|;
name|MimeEntity
name|firstPart
init|=
name|reportEntity
operator|.
name|getPart
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Unexpected content type in first body part of report"
argument_list|,
name|ContentType
operator|.
name|create
argument_list|(
name|AS2MimeType
operator|.
name|TEXT_PLAIN
argument_list|,
name|AS2Charset
operator|.
name|US_ASCII
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|firstPart
operator|.
name|getContentTypeValue
argument_list|()
argument_list|)
expr_stmt|;
name|MimeEntity
name|secondPart
init|=
name|reportEntity
operator|.
name|getPart
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Unexpected content type in second body part of report"
argument_list|,
name|ContentType
operator|.
name|create
argument_list|(
name|AS2MimeType
operator|.
name|MESSAGE_DISPOSITION_NOTIFICATION
argument_list|,
name|AS2Charset
operator|.
name|US_ASCII
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|secondPart
operator|.
name|getContentTypeValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|BeforeClass
DECL|method|setupTest ()
specifier|public
specifier|static
name|void
name|setupTest
parameter_list|()
throws|throws
name|Exception
block|{
name|receiveTestMessages
argument_list|()
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|teardownTest ()
specifier|public
specifier|static
name|void
name|teardownTest
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|serverConnection
operator|!=
literal|null
condition|)
block|{
name|serverConnection
operator|.
name|stopListening
argument_list|(
literal|"/"
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|RequestHandler
specifier|public
specifier|static
class|class
name|RequestHandler
implements|implements
name|HttpRequestHandler
block|{
annotation|@
name|Override
DECL|method|handle (HttpRequest request, HttpResponse response, HttpContext context)
specifier|public
name|void
name|handle
parameter_list|(
name|HttpRequest
name|request
parameter_list|,
name|HttpResponse
name|response
parameter_list|,
name|HttpContext
name|context
parameter_list|)
throws|throws
name|HttpException
throws|,
name|IOException
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Received test message: "
operator|+
name|request
argument_list|)
expr_stmt|;
name|context
operator|.
name|setAttribute
argument_list|(
name|AS2ServerManager
operator|.
name|FROM
argument_list|,
name|MDN_FROM
argument_list|)
expr_stmt|;
name|context
operator|.
name|setAttribute
argument_list|(
name|AS2ServerManager
operator|.
name|SUBJECT
argument_list|,
name|MDN_SUBJECT_PREFIX
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
comment|// test route for send
name|from
argument_list|(
literal|"direct://SEND"
argument_list|)
operator|.
name|to
argument_list|(
literal|"as2://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/send"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
DECL|method|receiveTestMessages ()
specifier|private
specifier|static
name|void
name|receiveTestMessages
parameter_list|()
throws|throws
name|IOException
block|{
name|serverConnection
operator|=
operator|new
name|AS2ServerConnection
argument_list|(
literal|"1.1"
argument_list|,
literal|"AS2ClientManagerIntegrationTest Server"
argument_list|,
literal|"server.example.com"
argument_list|,
literal|8888
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|serverConnection
operator|.
name|listen
argument_list|(
literal|"/"
argument_list|,
operator|new
name|RequestHandler
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

