begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.as2.api.entity
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|entity
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|AS2Charset
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|AS2Header
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|AS2MimeType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|AS2TransferEncoding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|util
operator|.
name|HttpMessageUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|Header
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpEntityEnclosingRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|message
operator|.
name|BasicHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|util
operator|.
name|CharArrayBuffer
import|;
end_import

begin_class
DECL|class|DispositionNotificationMultipartReportEntity
specifier|public
class|class
name|DispositionNotificationMultipartReportEntity
extends|extends
name|MultipartReportEntity
block|{
DECL|method|DispositionNotificationMultipartReportEntity (HttpEntityEnclosingRequest request, HttpResponse response, DispositionMode dispositionMode, AS2DispositionType dispositionType, AS2DispositionModifier dispositionModifier, String[] failureFields, String[] errorFields, String[] warningFields, Map<String, String> extensionFields, String charset, String boundary, boolean isMainBody)
specifier|public
name|DispositionNotificationMultipartReportEntity
parameter_list|(
name|HttpEntityEnclosingRequest
name|request
parameter_list|,
name|HttpResponse
name|response
parameter_list|,
name|DispositionMode
name|dispositionMode
parameter_list|,
name|AS2DispositionType
name|dispositionType
parameter_list|,
name|AS2DispositionModifier
name|dispositionModifier
parameter_list|,
name|String
index|[]
name|failureFields
parameter_list|,
name|String
index|[]
name|errorFields
parameter_list|,
name|String
index|[]
name|warningFields
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|extensionFields
parameter_list|,
name|String
name|charset
parameter_list|,
name|String
name|boundary
parameter_list|,
name|boolean
name|isMainBody
parameter_list|)
throws|throws
name|HttpException
block|{
name|super
argument_list|(
name|charset
argument_list|,
name|isMainBody
argument_list|,
name|boundary
argument_list|)
expr_stmt|;
name|this
operator|.
name|contentType
operator|=
operator|new
name|BasicHeader
argument_list|(
name|AS2Header
operator|.
name|CONTENT_TYPE
argument_list|,
name|AS2MimeType
operator|.
name|MULTIPART_REPORT
argument_list|)
expr_stmt|;
name|Header
name|reportType
init|=
operator|new
name|BasicHeader
argument_list|(
name|AS2Header
operator|.
name|REPORT_TYPE
argument_list|,
name|getReportTypeValue
argument_list|(
name|boundary
argument_list|)
argument_list|)
decl_stmt|;
name|addHeader
argument_list|(
name|reportType
argument_list|)
expr_stmt|;
name|addPart
argument_list|(
name|buildPlainTextReport
argument_list|(
name|request
argument_list|,
name|response
argument_list|,
name|dispositionMode
argument_list|,
name|dispositionType
argument_list|,
name|dispositionModifier
argument_list|,
name|failureFields
argument_list|,
name|errorFields
argument_list|,
name|warningFields
argument_list|,
name|extensionFields
argument_list|)
argument_list|)
expr_stmt|;
name|addPart
argument_list|(
operator|new
name|AS2MessageDispositionNotificationEntity
argument_list|(
name|request
argument_list|,
name|response
argument_list|,
name|dispositionMode
argument_list|,
name|dispositionType
argument_list|,
name|dispositionModifier
argument_list|,
name|failureFields
argument_list|,
name|errorFields
argument_list|,
name|warningFields
argument_list|,
name|extensionFields
argument_list|,
name|charset
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|DispositionNotificationMultipartReportEntity (String boundary, boolean isMainBody)
specifier|protected
name|DispositionNotificationMultipartReportEntity
parameter_list|(
name|String
name|boundary
parameter_list|,
name|boolean
name|isMainBody
parameter_list|)
block|{
name|this
operator|.
name|boundary
operator|=
name|boundary
expr_stmt|;
name|this
operator|.
name|isMainBody
operator|=
name|isMainBody
expr_stmt|;
block|}
DECL|method|buildPlainTextReport (HttpEntityEnclosingRequest request, HttpResponse response, DispositionMode dispositionMode, AS2DispositionType dispositionType, AS2DispositionModifier dispositionModifier, String[] failureFields, String[] errorFields, String[] warningFields, Map<String, String> extensionFields)
specifier|protected
name|TextPlainEntity
name|buildPlainTextReport
parameter_list|(
name|HttpEntityEnclosingRequest
name|request
parameter_list|,
name|HttpResponse
name|response
parameter_list|,
name|DispositionMode
name|dispositionMode
parameter_list|,
name|AS2DispositionType
name|dispositionType
parameter_list|,
name|AS2DispositionModifier
name|dispositionModifier
parameter_list|,
name|String
index|[]
name|failureFields
parameter_list|,
name|String
index|[]
name|errorFields
parameter_list|,
name|String
index|[]
name|warningFields
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|extensionFields
parameter_list|)
throws|throws
name|HttpException
block|{
name|CharArrayBuffer
name|charBuffer
init|=
operator|new
name|CharArrayBuffer
argument_list|(
literal|10
argument_list|)
decl_stmt|;
name|String
name|originalMessageId
init|=
name|HttpMessageUtils
operator|.
name|getHeaderValue
argument_list|(
name|request
argument_list|,
name|AS2Header
operator|.
name|MESSAGE_ID
argument_list|)
decl_stmt|;
name|String
name|sentDate
init|=
name|HttpMessageUtils
operator|.
name|getHeaderValue
argument_list|(
name|request
argument_list|,
name|AS2Header
operator|.
name|DATE
argument_list|)
decl_stmt|;
name|String
name|subject
init|=
name|HttpMessageUtils
operator|.
name|getHeaderValue
argument_list|(
name|request
argument_list|,
name|AS2Header
operator|.
name|SUBJECT
argument_list|)
decl_stmt|;
name|String
name|receivedFrom
init|=
name|HttpMessageUtils
operator|.
name|getHeaderValue
argument_list|(
name|request
argument_list|,
name|AS2Header
operator|.
name|AS2_FROM
argument_list|)
decl_stmt|;
name|String
name|sentTo
init|=
name|HttpMessageUtils
operator|.
name|getHeaderValue
argument_list|(
name|request
argument_list|,
name|AS2Header
operator|.
name|AS2_TO
argument_list|)
decl_stmt|;
name|String
name|receivedDate
init|=
name|HttpMessageUtils
operator|.
name|getHeaderValue
argument_list|(
name|response
argument_list|,
name|AS2Header
operator|.
name|DATE
argument_list|)
decl_stmt|;
name|charBuffer
operator|.
name|append
argument_list|(
literal|"MDN for -\n"
argument_list|)
expr_stmt|;
name|charBuffer
operator|.
name|append
argument_list|(
literal|" Message ID: "
operator|+
name|originalMessageId
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
name|charBuffer
operator|.
name|append
argument_list|(
literal|"  Subject: "
operator|+
operator|(
name|subject
operator|==
literal|null
condition|?
literal|""
else|:
name|subject
operator|)
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
name|charBuffer
operator|.
name|append
argument_list|(
literal|"  Date: "
operator|+
operator|(
name|sentDate
operator|==
literal|null
condition|?
literal|""
else|:
name|sentDate
operator|)
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
name|charBuffer
operator|.
name|append
argument_list|(
literal|"  From: "
operator|+
name|receivedFrom
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
name|charBuffer
operator|.
name|append
argument_list|(
literal|"  To: "
operator|+
name|sentTo
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
name|charBuffer
operator|.
name|append
argument_list|(
literal|"  Received on: "
operator|+
name|receivedDate
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
name|charBuffer
operator|.
name|append
argument_list|(
literal|" Status: "
operator|+
name|dispositionType
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
return|return
operator|new
name|TextPlainEntity
argument_list|(
name|charBuffer
operator|.
name|toString
argument_list|()
argument_list|,
name|AS2Charset
operator|.
name|US_ASCII
argument_list|,
name|AS2TransferEncoding
operator|.
name|SEVENBIT
argument_list|,
literal|false
argument_list|)
return|;
block|}
DECL|method|getReportTypeValue (String boundary)
specifier|protected
name|String
name|getReportTypeValue
parameter_list|(
name|String
name|boundary
parameter_list|)
block|{
return|return
literal|"disposition-notification; boundary=\""
operator|+
name|boundary
operator|+
literal|"\""
return|;
block|}
block|}
end_class

end_unit

