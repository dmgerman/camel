begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.as2.api
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|Socket
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|UnknownHostException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|io
operator|.
name|AS2BHttpClientConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|protocol
operator|.
name|RequestAS2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|protocol
operator|.
name|RequestMDN
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpHost
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|DefaultBHttpClientConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|protocol
operator|.
name|HttpCoreContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|protocol
operator|.
name|HttpProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|protocol
operator|.
name|HttpProcessorBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|protocol
operator|.
name|HttpRequestExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|protocol
operator|.
name|RequestConnControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|protocol
operator|.
name|RequestContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|protocol
operator|.
name|RequestDate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|protocol
operator|.
name|RequestExpectContinue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|protocol
operator|.
name|RequestTargetHost
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|protocol
operator|.
name|RequestUserAgent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|util
operator|.
name|Args
import|;
end_import

begin_class
DECL|class|AS2ClientConnection
specifier|public
class|class
name|AS2ClientConnection
block|{
DECL|field|targetHost
specifier|private
name|HttpHost
name|targetHost
decl_stmt|;
DECL|field|httpProcessor
specifier|private
name|HttpProcessor
name|httpProcessor
decl_stmt|;
DECL|field|httpConnection
specifier|private
name|DefaultBHttpClientConnection
name|httpConnection
decl_stmt|;
DECL|field|as2Version
specifier|private
name|String
name|as2Version
decl_stmt|;
DECL|field|userAgent
specifier|private
name|String
name|userAgent
decl_stmt|;
DECL|field|clientFqdn
specifier|private
name|String
name|clientFqdn
decl_stmt|;
DECL|method|AS2ClientConnection (String as2Version, String userAgent, String clientFqdn, String targetHostName, Integer targetPortNumber)
specifier|public
name|AS2ClientConnection
parameter_list|(
name|String
name|as2Version
parameter_list|,
name|String
name|userAgent
parameter_list|,
name|String
name|clientFqdn
parameter_list|,
name|String
name|targetHostName
parameter_list|,
name|Integer
name|targetPortNumber
parameter_list|)
throws|throws
name|UnknownHostException
throws|,
name|IOException
block|{
name|this
operator|.
name|as2Version
operator|=
name|Args
operator|.
name|notNull
argument_list|(
name|as2Version
argument_list|,
literal|"as2Version"
argument_list|)
expr_stmt|;
name|this
operator|.
name|userAgent
operator|=
name|Args
operator|.
name|notNull
argument_list|(
name|userAgent
argument_list|,
literal|"userAgent"
argument_list|)
expr_stmt|;
name|this
operator|.
name|clientFqdn
operator|=
name|Args
operator|.
name|notNull
argument_list|(
name|clientFqdn
argument_list|,
literal|"clientFqdn"
argument_list|)
expr_stmt|;
name|this
operator|.
name|targetHost
operator|=
operator|new
name|HttpHost
argument_list|(
name|Args
operator|.
name|notNull
argument_list|(
name|targetHostName
argument_list|,
literal|"targetHostName"
argument_list|)
argument_list|,
name|Args
operator|.
name|notNull
argument_list|(
name|targetPortNumber
argument_list|,
literal|"targetPortNumber"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Build Processor
name|httpProcessor
operator|=
name|HttpProcessorBuilder
operator|.
name|create
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|RequestAS2
argument_list|(
name|as2Version
argument_list|,
name|clientFqdn
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|RequestMDN
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|RequestTargetHost
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|RequestUserAgent
argument_list|(
name|this
operator|.
name|userAgent
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|RequestDate
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|RequestContent
argument_list|(
literal|true
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|RequestConnControl
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|RequestExpectContinue
argument_list|(
literal|true
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
comment|// Create Socket
name|Socket
name|socket
init|=
operator|new
name|Socket
argument_list|(
name|targetHost
operator|.
name|getHostName
argument_list|()
argument_list|,
name|targetHost
operator|.
name|getPort
argument_list|()
argument_list|)
decl_stmt|;
comment|// Create Connection
name|httpConnection
operator|=
operator|new
name|AS2BHttpClientConnection
argument_list|(
literal|8
operator|*
literal|1024
argument_list|)
expr_stmt|;
name|httpConnection
operator|.
name|bind
argument_list|(
name|socket
argument_list|)
expr_stmt|;
block|}
DECL|method|getAs2Version ()
specifier|public
name|String
name|getAs2Version
parameter_list|()
block|{
return|return
name|as2Version
return|;
block|}
DECL|method|getUserAgent ()
specifier|public
name|String
name|getUserAgent
parameter_list|()
block|{
return|return
name|userAgent
return|;
block|}
DECL|method|getClientFqdn ()
specifier|public
name|String
name|getClientFqdn
parameter_list|()
block|{
return|return
name|clientFqdn
return|;
block|}
DECL|method|send (HttpRequest request, HttpCoreContext httpContext)
specifier|public
name|HttpResponse
name|send
parameter_list|(
name|HttpRequest
name|request
parameter_list|,
name|HttpCoreContext
name|httpContext
parameter_list|)
throws|throws
name|HttpException
throws|,
name|IOException
block|{
name|httpContext
operator|.
name|setTargetHost
argument_list|(
name|targetHost
argument_list|)
expr_stmt|;
comment|// Execute Request
name|HttpRequestExecutor
name|httpexecutor
init|=
operator|new
name|HttpRequestExecutor
argument_list|()
decl_stmt|;
name|httpexecutor
operator|.
name|preProcess
argument_list|(
name|request
argument_list|,
name|httpProcessor
argument_list|,
name|httpContext
argument_list|)
expr_stmt|;
name|HttpResponse
name|response
init|=
name|httpexecutor
operator|.
name|execute
argument_list|(
name|request
argument_list|,
name|httpConnection
argument_list|,
name|httpContext
argument_list|)
decl_stmt|;
name|httpexecutor
operator|.
name|postProcess
argument_list|(
name|response
argument_list|,
name|httpProcessor
argument_list|,
name|httpContext
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
block|}
end_class

end_unit

