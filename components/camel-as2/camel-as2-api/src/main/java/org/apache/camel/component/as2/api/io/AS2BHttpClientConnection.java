begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.as2.api.io
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|io
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|CharsetDecoder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|CharsetEncoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|as2
operator|.
name|api
operator|.
name|entity
operator|.
name|EntityParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|config
operator|.
name|MessageConstraints
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|entity
operator|.
name|ContentLengthStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|DefaultBHttpClientConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|io
operator|.
name|HttpMessageParserFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|io
operator|.
name|HttpMessageWriterFactory
import|;
end_import

begin_class
DECL|class|AS2BHttpClientConnection
specifier|public
class|class
name|AS2BHttpClientConnection
extends|extends
name|DefaultBHttpClientConnection
block|{
DECL|method|AS2BHttpClientConnection (int buffersize, CharsetDecoder chardecoder, CharsetEncoder charencoder, MessageConstraints constraints)
specifier|public
name|AS2BHttpClientConnection
parameter_list|(
name|int
name|buffersize
parameter_list|,
name|CharsetDecoder
name|chardecoder
parameter_list|,
name|CharsetEncoder
name|charencoder
parameter_list|,
name|MessageConstraints
name|constraints
parameter_list|)
block|{
name|super
argument_list|(
name|buffersize
argument_list|,
name|chardecoder
argument_list|,
name|charencoder
argument_list|,
name|constraints
argument_list|)
expr_stmt|;
block|}
DECL|method|AS2BHttpClientConnection (int buffersize, int fragmentSizeHint, CharsetDecoder chardecoder, CharsetEncoder charencoder, MessageConstraints constraints, ContentLengthStrategy incomingContentStrategy, ContentLengthStrategy outgoingContentStrategy, HttpMessageWriterFactory<HttpRequest> requestWriterFactory, HttpMessageParserFactory<HttpResponse> responseParserFactory)
specifier|public
name|AS2BHttpClientConnection
parameter_list|(
name|int
name|buffersize
parameter_list|,
name|int
name|fragmentSizeHint
parameter_list|,
name|CharsetDecoder
name|chardecoder
parameter_list|,
name|CharsetEncoder
name|charencoder
parameter_list|,
name|MessageConstraints
name|constraints
parameter_list|,
name|ContentLengthStrategy
name|incomingContentStrategy
parameter_list|,
name|ContentLengthStrategy
name|outgoingContentStrategy
parameter_list|,
name|HttpMessageWriterFactory
argument_list|<
name|HttpRequest
argument_list|>
name|requestWriterFactory
parameter_list|,
name|HttpMessageParserFactory
argument_list|<
name|HttpResponse
argument_list|>
name|responseParserFactory
parameter_list|)
block|{
name|super
argument_list|(
name|buffersize
argument_list|,
name|fragmentSizeHint
argument_list|,
name|chardecoder
argument_list|,
name|charencoder
argument_list|,
name|constraints
argument_list|,
name|incomingContentStrategy
argument_list|,
name|outgoingContentStrategy
argument_list|,
name|requestWriterFactory
argument_list|,
name|responseParserFactory
argument_list|)
expr_stmt|;
block|}
DECL|method|AS2BHttpClientConnection (int buffersize)
specifier|public
name|AS2BHttpClientConnection
parameter_list|(
name|int
name|buffersize
parameter_list|)
block|{
name|super
argument_list|(
name|buffersize
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|receiveResponseEntity (HttpResponse response)
specifier|public
name|void
name|receiveResponseEntity
parameter_list|(
name|HttpResponse
name|response
parameter_list|)
throws|throws
name|HttpException
throws|,
name|IOException
block|{
name|super
operator|.
name|receiveResponseEntity
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|EntityParser
operator|.
name|parseAS2MessageEntity
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

