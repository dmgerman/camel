begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.netty.http.rest
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|netty
operator|.
name|http
operator|.
name|rest
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|netty
operator|.
name|http
operator|.
name|RestContextPathMatcher
import|;
end_import

begin_class
DECL|class|RestPathMatchingTest
specifier|public
class|class
name|RestPathMatchingTest
extends|extends
name|TestCase
block|{
DECL|field|matcher
specifier|private
name|RestContextPathMatcher
name|matcher
init|=
operator|new
name|RestContextPathMatcher
argument_list|(
literal|""
argument_list|,
literal|""
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
decl_stmt|;
DECL|method|testRestPathMatcher ()
specifier|public
name|void
name|testRestPathMatcher
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/"
argument_list|,
literal|"/foo/"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/"
argument_list|,
literal|"foo/"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/"
argument_list|,
literal|"foo"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"foo/"
argument_list|,
literal|"foo"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"foo"
argument_list|,
literal|"foo"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"foo/"
argument_list|,
literal|"foo"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/"
argument_list|,
literal|"foo"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014"
argument_list|,
literal|"/foo/1234/list/2014"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014/"
argument_list|,
literal|"/foo/1234/list/2014"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014"
argument_list|,
literal|"/foo/1234/list/2014/"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014/"
argument_list|,
literal|"/foo/1234/list/2014/"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014"
argument_list|,
literal|"/foo/{user}/list/{year}"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/"
argument_list|,
literal|"/bar/"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014"
argument_list|,
literal|"/foo/1234/list/2015"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014/"
argument_list|,
literal|"/foo/1234/list/2015"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014"
argument_list|,
literal|"/foo/1234/list/2015/"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014/"
argument_list|,
literal|"/foo/1234/list/2015/"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014"
argument_list|,
literal|"/foo/{user}/list/"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1/list/2"
argument_list|,
literal|"/foo/{user}/list/{year}"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234567890/list/2"
argument_list|,
literal|"/foo/{user}/list/{year}"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234567890/list/1234567890"
argument_list|,
literal|"/foo/{user}/list/{year}"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/123/list/2014"
argument_list|,
literal|"/{user}/list/{year}"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/1234567890/list/2014"
argument_list|,
literal|"/{user}/list/{year}"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testRestPathMatcherNoWildcard ()
specifier|public
name|void
name|testRestPathMatcherNoWildcard
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/"
argument_list|,
literal|"/foo/"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/"
argument_list|,
literal|"foo/"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/"
argument_list|,
literal|"foo"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"foo/"
argument_list|,
literal|"foo"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"foo"
argument_list|,
literal|"foo"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"foo/"
argument_list|,
literal|"foo"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/"
argument_list|,
literal|"foo"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014"
argument_list|,
literal|"/foo/1234/list/2014"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014/"
argument_list|,
literal|"/foo/1234/list/2014"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014"
argument_list|,
literal|"/foo/1234/list/2014/"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014/"
argument_list|,
literal|"/foo/1234/list/2014/"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014"
argument_list|,
literal|"/foo/{user}/list/{year}"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/"
argument_list|,
literal|"/bar/"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014"
argument_list|,
literal|"/foo/1234/list/2015"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014/"
argument_list|,
literal|"/foo/1234/list/2015"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014"
argument_list|,
literal|"/foo/1234/list/2015/"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014/"
argument_list|,
literal|"/foo/1234/list/2015/"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234/list/2014"
argument_list|,
literal|"/foo/{user}/list/"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1/list/2"
argument_list|,
literal|"/foo/{user}/list/{year}"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234567890/list/2"
argument_list|,
literal|"/foo/{user}/list/{year}"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/foo/1234567890/list/1234567890"
argument_list|,
literal|"/foo/{user}/list/{year}"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/123/list/2014"
argument_list|,
literal|"/{user}/list/{year}"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|matcher
operator|.
name|matchRestPath
argument_list|(
literal|"/1234567890/list/2014"
argument_list|,
literal|"/{user}/list/{year}"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

