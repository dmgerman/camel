begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.yammer.model
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|yammer
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonIgnoreProperties
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonProperty
import|;
end_import

begin_class
annotation|@
name|JsonIgnoreProperties
argument_list|(
name|ignoreUnknown
operator|=
literal|true
argument_list|)
DECL|class|Messages
specifier|public
class|class
name|Messages
block|{
annotation|@
name|JsonProperty
argument_list|(
literal|"threaded_extended"
argument_list|)
DECL|field|threadedExtended
specifier|private
name|ThreadedExtended
name|threadedExtended
decl_stmt|;
DECL|field|messages
specifier|private
name|List
argument_list|<
name|Message
argument_list|>
name|messages
decl_stmt|;
DECL|field|references
specifier|private
name|List
argument_list|<
name|Reference
argument_list|>
name|references
decl_stmt|;
DECL|field|meta
specifier|private
name|Meta
name|meta
decl_stmt|;
DECL|method|getThreadedExtended ()
specifier|public
name|ThreadedExtended
name|getThreadedExtended
parameter_list|()
block|{
return|return
name|threadedExtended
return|;
block|}
DECL|method|setThreadedExtended (ThreadedExtended threadedExtended)
specifier|public
name|void
name|setThreadedExtended
parameter_list|(
name|ThreadedExtended
name|threadedExtended
parameter_list|)
block|{
name|this
operator|.
name|threadedExtended
operator|=
name|threadedExtended
expr_stmt|;
block|}
DECL|method|getMessages ()
specifier|public
name|List
argument_list|<
name|Message
argument_list|>
name|getMessages
parameter_list|()
block|{
return|return
name|messages
return|;
block|}
DECL|method|setMessages (List<Message> messages)
specifier|public
name|void
name|setMessages
parameter_list|(
name|List
argument_list|<
name|Message
argument_list|>
name|messages
parameter_list|)
block|{
name|this
operator|.
name|messages
operator|=
name|messages
expr_stmt|;
block|}
DECL|method|getReferences ()
specifier|public
name|List
argument_list|<
name|Reference
argument_list|>
name|getReferences
parameter_list|()
block|{
return|return
name|references
return|;
block|}
DECL|method|setReferences (List<Reference> references)
specifier|public
name|void
name|setReferences
parameter_list|(
name|List
argument_list|<
name|Reference
argument_list|>
name|references
parameter_list|)
block|{
name|this
operator|.
name|references
operator|=
name|references
expr_stmt|;
block|}
DECL|method|getMeta ()
specifier|public
name|Meta
name|getMeta
parameter_list|()
block|{
return|return
name|meta
return|;
block|}
DECL|method|setMeta (Meta meta)
specifier|public
name|void
name|setMeta
parameter_list|(
name|Meta
name|meta
parameter_list|)
block|{
name|this
operator|.
name|meta
operator|=
name|meta
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"Messages [threadedExtended="
operator|+
name|threadedExtended
operator|+
literal|", messages="
operator|+
name|messages
operator|+
literal|", references="
operator|+
name|references
operator|+
literal|", meta="
operator|+
name|meta
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

