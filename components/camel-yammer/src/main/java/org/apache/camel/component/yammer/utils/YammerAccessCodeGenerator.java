begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.yammer.utils
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|yammer
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Scanner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|yammer
operator|.
name|scribe
operator|.
name|YammerApi
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scribe
operator|.
name|builder
operator|.
name|ServiceBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scribe
operator|.
name|model
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scribe
operator|.
name|model
operator|.
name|Verifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scribe
operator|.
name|oauth
operator|.
name|OAuthService
import|;
end_import

begin_comment
comment|/**  * Use this to get an access token from yammer. You will need the   * consumer key and secret key for your app registered with yammer to do this.  */
end_comment

begin_class
DECL|class|YammerAccessCodeGenerator
specifier|public
specifier|final
class|class
name|YammerAccessCodeGenerator
block|{
DECL|field|EMPTY_TOKEN
specifier|private
specifier|static
specifier|final
name|Token
name|EMPTY_TOKEN
init|=
literal|null
decl_stmt|;
DECL|method|YammerAccessCodeGenerator ()
specifier|private
name|YammerAccessCodeGenerator
parameter_list|()
block|{     }
DECL|method|main (String[] args)
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|Scanner
name|in
init|=
operator|new
name|Scanner
argument_list|(
name|System
operator|.
name|in
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Paste the consumerKey here"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|print
argument_list|(
literal|">>"
argument_list|)
expr_stmt|;
name|String
name|apiKey
init|=
name|in
operator|.
name|nextLine
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Paste the consumerSecret here"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|print
argument_list|(
literal|">>"
argument_list|)
expr_stmt|;
name|String
name|apiSecret
init|=
name|in
operator|.
name|nextLine
argument_list|()
decl_stmt|;
name|OAuthService
name|service
init|=
operator|new
name|ServiceBuilder
argument_list|()
operator|.
name|provider
argument_list|(
name|YammerApi
operator|.
name|class
argument_list|)
operator|.
name|apiKey
argument_list|(
name|apiKey
argument_list|)
operator|.
name|apiSecret
argument_list|(
name|apiSecret
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|String
name|authorizationUrl
init|=
name|service
operator|.
name|getAuthorizationUrl
argument_list|(
name|EMPTY_TOKEN
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Go and authorize your app here (eg. in a web browser):"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|authorizationUrl
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"... and paste the authorization code here"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|print
argument_list|(
literal|">>"
argument_list|)
expr_stmt|;
name|Verifier
name|verifier
init|=
operator|new
name|Verifier
argument_list|(
name|in
operator|.
name|nextLine
argument_list|()
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
name|Token
name|accessToken
init|=
name|service
operator|.
name|getAccessToken
argument_list|(
name|EMPTY_TOKEN
argument_list|,
name|verifier
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Your Access Token is: "
operator|+
name|accessToken
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

