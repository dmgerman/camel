begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.aws.firehose
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|aws
operator|.
name|firehose
package|;
end_package

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|regions
operator|.
name|Regions
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|kinesisfirehose
operator|.
name|AmazonKinesisFirehose
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|SimpleRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|junit
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
DECL|class|KinesisFirehoseEndpointTest
specifier|public
class|class
name|KinesisFirehoseEndpointTest
block|{
annotation|@
name|Mock
DECL|field|amazonKinesisFirehoseClient
specifier|private
name|AmazonKinesisFirehose
name|amazonKinesisFirehoseClient
decl_stmt|;
DECL|field|camelContext
specifier|private
name|CamelContext
name|camelContext
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|SimpleRegistry
name|registry
init|=
operator|new
name|SimpleRegistry
argument_list|()
decl_stmt|;
name|registry
operator|.
name|bind
argument_list|(
literal|"firehoseClient"
argument_list|,
name|amazonKinesisFirehoseClient
argument_list|)
expr_stmt|;
name|camelContext
operator|=
operator|new
name|DefaultCamelContext
argument_list|(
name|registry
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|allEndpointParams ()
specifier|public
name|void
name|allEndpointParams
parameter_list|()
throws|throws
name|Exception
block|{
name|KinesisFirehoseEndpoint
name|endpoint
init|=
operator|(
name|KinesisFirehoseEndpoint
operator|)
name|camelContext
operator|.
name|getEndpoint
argument_list|(
literal|"aws-kinesis-firehose://some_stream_name"
operator|+
literal|"?amazonKinesisFirehoseClient=#firehoseClient"
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|start
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|getClient
argument_list|()
argument_list|,
name|is
argument_list|(
name|amazonKinesisFirehoseClient
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getStreamName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"some_stream_name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|allClientCreationParams ()
specifier|public
name|void
name|allClientCreationParams
parameter_list|()
throws|throws
name|Exception
block|{
name|KinesisFirehoseEndpoint
name|endpoint
init|=
operator|(
name|KinesisFirehoseEndpoint
operator|)
name|camelContext
operator|.
name|getEndpoint
argument_list|(
literal|"aws-kinesis-firehose://some_stream_name"
operator|+
literal|"?accessKey=xxx&secretKey=yyy&region=us-east-1"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getRegion
argument_list|()
argument_list|,
name|is
argument_list|(
name|Regions
operator|.
name|US_EAST_1
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getAccessKey
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"xxx"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getSecretKey
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"yyy"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getStreamName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"some_stream_name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

