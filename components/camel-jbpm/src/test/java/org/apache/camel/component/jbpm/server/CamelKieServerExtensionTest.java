begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jbpm.server
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jbpm
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jbpm
operator|.
name|JBPMConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jbpm
operator|.
name|config
operator|.
name|CamelContextBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|RouteDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jbpm
operator|.
name|services
operator|.
name|api
operator|.
name|service
operator|.
name|ServiceRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kie
operator|.
name|api
operator|.
name|KieServices
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kie
operator|.
name|api
operator|.
name|runtime
operator|.
name|Environment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kie
operator|.
name|api
operator|.
name|runtime
operator|.
name|KieContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kie
operator|.
name|internal
operator|.
name|runtime
operator|.
name|manager
operator|.
name|InternalRuntimeManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kie
operator|.
name|internal
operator|.
name|runtime
operator|.
name|manager
operator|.
name|RuntimeEnvironment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kie
operator|.
name|internal
operator|.
name|runtime
operator|.
name|manager
operator|.
name|RuntimeManagerRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kie
operator|.
name|server
operator|.
name|services
operator|.
name|api
operator|.
name|KieContainerInstance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|junit
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|notNullValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
DECL|class|CamelKieServerExtensionTest
specifier|public
class|class
name|CamelKieServerExtensionTest
block|{
annotation|@
name|Mock
DECL|field|runtimeManager
name|InternalRuntimeManager
name|runtimeManager
decl_stmt|;
annotation|@
name|Mock
DECL|field|runtimeEnvironment
name|RuntimeEnvironment
name|runtimeEnvironment
decl_stmt|;
annotation|@
name|Mock
DECL|field|kieContainerInstance
specifier|private
name|KieContainerInstance
name|kieContainerInstance
decl_stmt|;
annotation|@
name|Mock
DECL|field|kieContainer
specifier|private
name|KieContainer
name|kieContainer
decl_stmt|;
DECL|field|identifier
specifier|private
name|String
name|identifier
init|=
literal|"test"
decl_stmt|;
annotation|@
name|After
DECL|method|cleanup ()
specifier|public
name|void
name|cleanup
parameter_list|()
block|{
name|RuntimeManagerRegistry
operator|.
name|get
argument_list|()
operator|.
name|remove
argument_list|(
name|identifier
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testInit ()
specifier|public
name|void
name|testInit
parameter_list|()
block|{
name|CamelKieServerExtension
name|extension
init|=
operator|new
name|CamelKieServerExtension
argument_list|()
decl_stmt|;
name|extension
operator|.
name|init
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|DefaultCamelContext
name|globalCamelContext
init|=
operator|(
name|DefaultCamelContext
operator|)
name|ServiceRegistry
operator|.
name|get
argument_list|()
operator|.
name|service
argument_list|(
name|JBPMConstants
operator|.
name|GLOBAL_CAMEL_CONTEXT_SERVICE_KEY
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|RouteDefinition
argument_list|>
name|globalRestDefinitions
init|=
name|globalCamelContext
operator|.
name|getRouteDefinitions
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|globalRestDefinitions
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|globalCamelContext
operator|.
name|getRouteDefinition
argument_list|(
literal|"unitTestRoute"
argument_list|)
argument_list|,
name|is
argument_list|(
name|notNullValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCreateContainer ()
specifier|public
name|void
name|testCreateContainer
parameter_list|()
block|{
name|CamelKieServerExtension
name|extension
init|=
operator|new
name|CamelKieServerExtension
argument_list|()
decl_stmt|;
specifier|final
name|String
name|containerId
init|=
literal|"testContainer"
decl_stmt|;
name|when
argument_list|(
name|kieContainerInstance
operator|.
name|getKieContainer
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|kieContainer
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|kieContainer
operator|.
name|getClassLoader
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
name|extension
operator|.
name|createContainer
argument_list|(
name|containerId
argument_list|,
name|kieContainerInstance
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|DefaultCamelContext
name|camelContext
init|=
operator|(
name|DefaultCamelContext
operator|)
name|ServiceRegistry
operator|.
name|get
argument_list|()
operator|.
name|service
argument_list|(
literal|"testContainer"
operator|+
name|JBPMConstants
operator|.
name|DEPLOYMENT_CAMEL_CONTEXT_SERVICE_KEY_POSTFIX
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|RouteDefinition
argument_list|>
name|restDefinitions
init|=
name|camelContext
operator|.
name|getRouteDefinitions
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|restDefinitions
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|camelContext
operator|.
name|getRoute
argument_list|(
literal|"unitTestRoute"
argument_list|)
argument_list|,
name|is
argument_list|(
name|notNullValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDefaultSetup ()
specifier|public
name|void
name|testDefaultSetup
parameter_list|()
block|{
name|CamelKieServerExtension
name|extension
init|=
operator|new
name|CamelKieServerExtension
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|extension
operator|.
name|getCamelContextBuilder
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDefaultSetupCustomDiscovery ()
specifier|public
name|void
name|testDefaultSetupCustomDiscovery
parameter_list|()
block|{
name|CamelKieServerExtension
name|extension
init|=
operator|new
name|CamelKieServerExtension
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|CamelContextBuilder
name|discoverCamelContextBuilder
parameter_list|()
block|{
return|return
operator|new
name|CamelContextBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|CamelContext
name|buildCamelContext
parameter_list|()
block|{
comment|// for test purpose return simply null as camel context
return|return
literal|null
return|;
block|}
block|}
return|;
block|}
block|}
decl_stmt|;
name|assertNotNull
argument_list|(
name|extension
operator|.
name|getCamelContextBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|extension
operator|.
name|getCamelContextBuilder
argument_list|()
operator|.
name|buildCamelContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBuildGlobalCamelContext ()
specifier|public
name|void
name|testBuildGlobalCamelContext
parameter_list|()
throws|throws
name|Exception
block|{
name|CamelKieServerExtension
name|extension
init|=
operator|new
name|CamelKieServerExtension
argument_list|()
decl_stmt|;
name|CamelContext
name|context
init|=
name|extension
operator|.
name|buildGlobalContext
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|context
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBuildGlobalCamelContextCustomBuilder ()
specifier|public
name|void
name|testBuildGlobalCamelContextCustomBuilder
parameter_list|()
throws|throws
name|Exception
block|{
name|CamelKieServerExtension
name|extension
init|=
operator|new
name|CamelKieServerExtension
argument_list|(
operator|new
name|CamelContextBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|CamelContext
name|buildCamelContext
parameter_list|()
block|{
comment|// for test purpose return simply null as camel context
return|return
literal|null
return|;
block|}
block|}
argument_list|)
decl_stmt|;
name|CamelContext
name|context
init|=
name|extension
operator|.
name|buildGlobalContext
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBuildDeploymentCamelContext ()
specifier|public
name|void
name|testBuildDeploymentCamelContext
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|runtimeManager
operator|.
name|getIdentifier
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|identifier
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|runtimeManager
operator|.
name|getEnvironment
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|runtimeEnvironment
argument_list|)
expr_stmt|;
name|Environment
name|environment
init|=
name|KieServices
operator|.
name|get
argument_list|()
operator|.
name|newEnvironment
argument_list|()
decl_stmt|;
name|when
argument_list|(
name|runtimeEnvironment
operator|.
name|getEnvironment
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|environment
argument_list|)
expr_stmt|;
name|RuntimeManagerRegistry
operator|.
name|get
argument_list|()
operator|.
name|register
argument_list|(
name|runtimeManager
argument_list|)
expr_stmt|;
name|CamelKieServerExtension
name|extension
init|=
operator|new
name|CamelKieServerExtension
argument_list|()
decl_stmt|;
name|CamelContext
name|context
init|=
name|extension
operator|.
name|buildDeploymentContext
argument_list|(
name|identifier
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|context
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBuildDeploymentCamelContextCustomBuilder ()
specifier|public
name|void
name|testBuildDeploymentCamelContextCustomBuilder
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|runtimeManager
operator|.
name|getIdentifier
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|identifier
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|runtimeManager
operator|.
name|getEnvironment
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|runtimeEnvironment
argument_list|)
expr_stmt|;
name|Environment
name|environment
init|=
name|KieServices
operator|.
name|get
argument_list|()
operator|.
name|newEnvironment
argument_list|()
decl_stmt|;
name|environment
operator|.
name|set
argument_list|(
name|JBPMConstants
operator|.
name|CAMEL_CONTEXT_BUILDER_KEY
argument_list|,
operator|new
name|CamelContextBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|CamelContext
name|buildCamelContext
parameter_list|()
block|{
comment|// for test purpose return simply null as camel context
return|return
literal|null
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|runtimeEnvironment
operator|.
name|getEnvironment
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|environment
argument_list|)
expr_stmt|;
name|RuntimeManagerRegistry
operator|.
name|get
argument_list|()
operator|.
name|register
argument_list|(
name|runtimeManager
argument_list|)
expr_stmt|;
name|CamelKieServerExtension
name|extension
init|=
operator|new
name|CamelKieServerExtension
argument_list|()
decl_stmt|;
name|CamelContext
name|context
init|=
name|extension
operator|.
name|buildDeploymentContext
argument_list|(
name|identifier
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

