begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jbpm
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jbpm
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|InitialContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriPath
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kie
operator|.
name|api
operator|.
name|task
operator|.
name|model
operator|.
name|OrganizationalEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kie
operator|.
name|api
operator|.
name|task
operator|.
name|model
operator|.
name|Status
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kie
operator|.
name|api
operator|.
name|task
operator|.
name|model
operator|.
name|Task
import|;
end_import

begin_class
annotation|@
name|UriParams
DECL|class|JBPMConfiguration
specifier|public
class|class
name|JBPMConfiguration
block|{
comment|/**      * Specifies the operation to perform      */
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"producer"
argument_list|,
name|defaultValue
operator|=
literal|"startProcess"
argument_list|)
DECL|field|operation
specifier|private
name|String
name|operation
decl_stmt|;
comment|/**      * Specifies the key to use      */
annotation|@
name|UriParam
DECL|field|key
specifier|private
name|String
name|key
decl_stmt|;
comment|/**      * Specifies the value to use      */
annotation|@
name|UriParam
DECL|field|value
specifier|private
name|Objects
name|value
decl_stmt|;
DECL|field|processId
specifier|private
name|String
name|processId
decl_stmt|;
DECL|field|parameters
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|parameters
decl_stmt|;
comment|/**      * Specifies the process instance to interact with      */
annotation|@
name|UriParam
annotation|@
name|Metadata
argument_list|(
name|required
operator|=
literal|"true"
argument_list|)
DECL|field|processInstanceId
specifier|private
name|Long
name|processInstanceId
decl_stmt|;
DECL|field|eventType
specifier|private
name|String
name|eventType
decl_stmt|;
DECL|field|event
specifier|private
name|String
name|event
decl_stmt|;
DECL|field|maxNumber
specifier|private
name|Integer
name|maxNumber
decl_stmt|;
DECL|field|identifier
specifier|private
name|String
name|identifier
decl_stmt|;
DECL|field|workItemId
specifier|private
name|Long
name|workItemId
decl_stmt|;
DECL|field|taskId
specifier|private
name|Long
name|taskId
decl_stmt|;
DECL|field|userId
specifier|private
name|String
name|userId
decl_stmt|;
DECL|field|language
specifier|private
name|String
name|language
decl_stmt|;
DECL|field|targetUserId
specifier|private
name|String
name|targetUserId
decl_stmt|;
DECL|field|attachmentId
specifier|private
name|Long
name|attachmentId
decl_stmt|;
DECL|field|contentId
specifier|private
name|Long
name|contentId
decl_stmt|;
DECL|field|task
specifier|private
name|Task
name|task
decl_stmt|;
DECL|field|entities
specifier|private
name|List
argument_list|<
name|OrganizationalEntity
argument_list|>
name|entities
decl_stmt|;
DECL|field|statuses
specifier|private
name|List
argument_list|<
name|Status
argument_list|>
name|statuses
decl_stmt|;
comment|//connection
DECL|field|userName
specifier|private
name|String
name|userName
decl_stmt|;
DECL|field|password
specifier|private
name|String
name|password
decl_stmt|;
comment|/**      * Specifies the connection url to the jBPM system      */
annotation|@
name|UriPath
annotation|@
name|Metadata
argument_list|(
name|required
operator|=
literal|"true"
argument_list|)
DECL|field|connectionURL
specifier|private
name|URL
name|connectionURL
decl_stmt|;
comment|/**      * Specifies the deploymentId to use      */
annotation|@
name|UriParam
annotation|@
name|Metadata
argument_list|(
name|required
operator|=
literal|"true"
argument_list|)
DECL|field|deploymentId
specifier|private
name|String
name|deploymentId
decl_stmt|;
DECL|field|timeout
specifier|private
name|Integer
name|timeout
decl_stmt|;
DECL|field|extraJaxbClasses
specifier|private
name|Class
index|[]
name|extraJaxbClasses
decl_stmt|;
DECL|method|getOperation ()
specifier|public
name|String
name|getOperation
parameter_list|()
block|{
return|return
name|operation
return|;
block|}
DECL|method|setOperation (String operation)
specifier|public
name|void
name|setOperation
parameter_list|(
name|String
name|operation
parameter_list|)
block|{
name|this
operator|.
name|operation
operator|=
name|operation
expr_stmt|;
block|}
DECL|method|getKey ()
specifier|public
name|String
name|getKey
parameter_list|()
block|{
return|return
name|key
return|;
block|}
DECL|method|setKey (String key)
specifier|public
name|void
name|setKey
parameter_list|(
name|String
name|key
parameter_list|)
block|{
name|this
operator|.
name|key
operator|=
name|key
expr_stmt|;
block|}
DECL|method|getValue ()
specifier|public
name|Objects
name|getValue
parameter_list|()
block|{
return|return
name|value
return|;
block|}
DECL|method|setValue (Objects value)
specifier|public
name|void
name|setValue
parameter_list|(
name|Objects
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
DECL|method|getProcessId ()
specifier|public
name|String
name|getProcessId
parameter_list|()
block|{
return|return
name|processId
return|;
block|}
DECL|method|setProcessId (String processId)
specifier|public
name|void
name|setProcessId
parameter_list|(
name|String
name|processId
parameter_list|)
block|{
name|this
operator|.
name|processId
operator|=
name|processId
expr_stmt|;
block|}
DECL|method|getParameters ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getParameters
parameter_list|()
block|{
return|return
name|parameters
return|;
block|}
DECL|method|setParameters (Map<String, Object> parameters)
specifier|public
name|void
name|setParameters
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|parameters
parameter_list|)
block|{
name|this
operator|.
name|parameters
operator|=
name|parameters
expr_stmt|;
block|}
DECL|method|getProcessInstanceId ()
specifier|public
name|Long
name|getProcessInstanceId
parameter_list|()
block|{
return|return
name|processInstanceId
return|;
block|}
DECL|method|setProcessInstanceId (Long processInstanceId)
specifier|public
name|void
name|setProcessInstanceId
parameter_list|(
name|Long
name|processInstanceId
parameter_list|)
block|{
name|this
operator|.
name|processInstanceId
operator|=
name|processInstanceId
expr_stmt|;
block|}
DECL|method|getEventType ()
specifier|public
name|String
name|getEventType
parameter_list|()
block|{
return|return
name|eventType
return|;
block|}
DECL|method|setEventType (String eventType)
specifier|public
name|void
name|setEventType
parameter_list|(
name|String
name|eventType
parameter_list|)
block|{
name|this
operator|.
name|eventType
operator|=
name|eventType
expr_stmt|;
block|}
DECL|method|getEvent ()
specifier|public
name|String
name|getEvent
parameter_list|()
block|{
return|return
name|event
return|;
block|}
DECL|method|setEvent (String event)
specifier|public
name|void
name|setEvent
parameter_list|(
name|String
name|event
parameter_list|)
block|{
name|this
operator|.
name|event
operator|=
name|event
expr_stmt|;
block|}
DECL|method|getMaxNumber ()
specifier|public
name|Integer
name|getMaxNumber
parameter_list|()
block|{
return|return
name|maxNumber
return|;
block|}
DECL|method|setMaxNumber (Integer maxNumber)
specifier|public
name|void
name|setMaxNumber
parameter_list|(
name|Integer
name|maxNumber
parameter_list|)
block|{
name|this
operator|.
name|maxNumber
operator|=
name|maxNumber
expr_stmt|;
block|}
DECL|method|getIdentifier ()
specifier|public
name|String
name|getIdentifier
parameter_list|()
block|{
return|return
name|identifier
return|;
block|}
DECL|method|setIdentifier (String identifier)
specifier|public
name|void
name|setIdentifier
parameter_list|(
name|String
name|identifier
parameter_list|)
block|{
name|this
operator|.
name|identifier
operator|=
name|identifier
expr_stmt|;
block|}
DECL|method|getWorkItemId ()
specifier|public
name|Long
name|getWorkItemId
parameter_list|()
block|{
return|return
name|workItemId
return|;
block|}
DECL|method|setWorkItemId (Long workItemId)
specifier|public
name|void
name|setWorkItemId
parameter_list|(
name|Long
name|workItemId
parameter_list|)
block|{
name|this
operator|.
name|workItemId
operator|=
name|workItemId
expr_stmt|;
block|}
DECL|method|getTaskId ()
specifier|public
name|Long
name|getTaskId
parameter_list|()
block|{
return|return
name|taskId
return|;
block|}
DECL|method|setTaskId (Long taskId)
specifier|public
name|void
name|setTaskId
parameter_list|(
name|Long
name|taskId
parameter_list|)
block|{
name|this
operator|.
name|taskId
operator|=
name|taskId
expr_stmt|;
block|}
DECL|method|getUserId ()
specifier|public
name|String
name|getUserId
parameter_list|()
block|{
return|return
name|userId
return|;
block|}
DECL|method|setUserId (String userId)
specifier|public
name|void
name|setUserId
parameter_list|(
name|String
name|userId
parameter_list|)
block|{
name|this
operator|.
name|userId
operator|=
name|userId
expr_stmt|;
block|}
DECL|method|getTask ()
specifier|public
name|Task
name|getTask
parameter_list|()
block|{
return|return
name|task
return|;
block|}
DECL|method|setTask (Task task)
specifier|public
name|void
name|setTask
parameter_list|(
name|Task
name|task
parameter_list|)
block|{
name|this
operator|.
name|task
operator|=
name|task
expr_stmt|;
block|}
DECL|method|getLanguage ()
specifier|public
name|String
name|getLanguage
parameter_list|()
block|{
return|return
name|language
return|;
block|}
DECL|method|setLanguage (String language)
specifier|public
name|void
name|setLanguage
parameter_list|(
name|String
name|language
parameter_list|)
block|{
name|this
operator|.
name|language
operator|=
name|language
expr_stmt|;
block|}
DECL|method|getTargetUserId ()
specifier|public
name|String
name|getTargetUserId
parameter_list|()
block|{
return|return
name|targetUserId
return|;
block|}
DECL|method|setTargetUserId (String targetUserId)
specifier|public
name|void
name|setTargetUserId
parameter_list|(
name|String
name|targetUserId
parameter_list|)
block|{
name|this
operator|.
name|targetUserId
operator|=
name|targetUserId
expr_stmt|;
block|}
DECL|method|getAttachmentId ()
specifier|public
name|Long
name|getAttachmentId
parameter_list|()
block|{
return|return
name|attachmentId
return|;
block|}
DECL|method|setAttachmentId (Long attachmentId)
specifier|public
name|void
name|setAttachmentId
parameter_list|(
name|Long
name|attachmentId
parameter_list|)
block|{
name|this
operator|.
name|attachmentId
operator|=
name|attachmentId
expr_stmt|;
block|}
DECL|method|getContentId ()
specifier|public
name|Long
name|getContentId
parameter_list|()
block|{
return|return
name|contentId
return|;
block|}
DECL|method|setContentId (Long contentId)
specifier|public
name|void
name|setContentId
parameter_list|(
name|Long
name|contentId
parameter_list|)
block|{
name|this
operator|.
name|contentId
operator|=
name|contentId
expr_stmt|;
block|}
DECL|method|getEntities ()
specifier|public
name|List
argument_list|<
name|OrganizationalEntity
argument_list|>
name|getEntities
parameter_list|()
block|{
return|return
name|entities
return|;
block|}
DECL|method|setEntities (List<OrganizationalEntity> entities)
specifier|public
name|void
name|setEntities
parameter_list|(
name|List
argument_list|<
name|OrganizationalEntity
argument_list|>
name|entities
parameter_list|)
block|{
name|this
operator|.
name|entities
operator|=
name|entities
expr_stmt|;
block|}
DECL|method|getStatuses ()
specifier|public
name|List
argument_list|<
name|Status
argument_list|>
name|getStatuses
parameter_list|()
block|{
return|return
name|statuses
return|;
block|}
DECL|method|setStatuses (List<Status> statuses)
specifier|public
name|void
name|setStatuses
parameter_list|(
name|List
argument_list|<
name|Status
argument_list|>
name|statuses
parameter_list|)
block|{
name|this
operator|.
name|statuses
operator|=
name|statuses
expr_stmt|;
block|}
DECL|method|getUserName ()
specifier|public
name|String
name|getUserName
parameter_list|()
block|{
return|return
name|userName
return|;
block|}
DECL|method|setUserName (String userName)
specifier|public
name|void
name|setUserName
parameter_list|(
name|String
name|userName
parameter_list|)
block|{
name|this
operator|.
name|userName
operator|=
name|userName
expr_stmt|;
block|}
DECL|method|getPassword ()
specifier|public
name|String
name|getPassword
parameter_list|()
block|{
return|return
name|password
return|;
block|}
DECL|method|setPassword (String password)
specifier|public
name|void
name|setPassword
parameter_list|(
name|String
name|password
parameter_list|)
block|{
name|this
operator|.
name|password
operator|=
name|password
expr_stmt|;
block|}
DECL|method|getConnectionURL ()
specifier|public
name|URL
name|getConnectionURL
parameter_list|()
block|{
return|return
name|connectionURL
return|;
block|}
DECL|method|setConnectionURL (URL connectionURL)
specifier|public
name|void
name|setConnectionURL
parameter_list|(
name|URL
name|connectionURL
parameter_list|)
block|{
name|this
operator|.
name|connectionURL
operator|=
name|connectionURL
expr_stmt|;
block|}
DECL|method|getDeploymentId ()
specifier|public
name|String
name|getDeploymentId
parameter_list|()
block|{
return|return
name|deploymentId
return|;
block|}
DECL|method|setDeploymentId (String deploymentId)
specifier|public
name|void
name|setDeploymentId
parameter_list|(
name|String
name|deploymentId
parameter_list|)
block|{
name|this
operator|.
name|deploymentId
operator|=
name|deploymentId
expr_stmt|;
block|}
DECL|method|getTimeout ()
specifier|public
name|Integer
name|getTimeout
parameter_list|()
block|{
return|return
name|timeout
return|;
block|}
DECL|method|setTimeout (Integer timeout)
specifier|public
name|void
name|setTimeout
parameter_list|(
name|Integer
name|timeout
parameter_list|)
block|{
name|this
operator|.
name|timeout
operator|=
name|timeout
expr_stmt|;
block|}
DECL|method|getExtraJaxbClasses ()
specifier|public
name|Class
index|[]
name|getExtraJaxbClasses
parameter_list|()
block|{
return|return
name|extraJaxbClasses
return|;
block|}
DECL|method|setExtraJaxbClasses (Class[] extraJaxbClasses)
specifier|public
name|void
name|setExtraJaxbClasses
parameter_list|(
name|Class
index|[]
name|extraJaxbClasses
parameter_list|)
block|{
name|this
operator|.
name|extraJaxbClasses
operator|=
name|extraJaxbClasses
expr_stmt|;
block|}
block|}
end_class

end_unit

