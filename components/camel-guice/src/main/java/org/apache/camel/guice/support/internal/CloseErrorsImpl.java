begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.guice.support.internal
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|guice
operator|.
name|support
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|internal
operator|.
name|Errors
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|spi
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|guice
operator|.
name|support
operator|.
name|CloseErrors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|guice
operator|.
name|support
operator|.
name|CloseFailedException
import|;
end_import

begin_comment
comment|/**  * The default implementation of @{link CloseErrors}  *   * @version  */
end_comment

begin_class
DECL|class|CloseErrorsImpl
specifier|public
class|class
name|CloseErrorsImpl
implements|implements
name|CloseErrors
block|{
DECL|field|errors
specifier|final
name|Errors
name|errors
decl_stmt|;
DECL|method|CloseErrorsImpl (Object source)
specifier|public
name|CloseErrorsImpl
parameter_list|(
name|Object
name|source
parameter_list|)
block|{
name|this
operator|.
name|errors
operator|=
operator|new
name|Errors
argument_list|(
name|source
argument_list|)
expr_stmt|;
block|}
DECL|method|closeError (Object key, Object object, Exception cause)
specifier|public
name|void
name|closeError
parameter_list|(
name|Object
name|key
parameter_list|,
name|Object
name|object
parameter_list|,
name|Exception
name|cause
parameter_list|)
block|{
name|String
name|message
init|=
name|Errors
operator|.
name|format
argument_list|(
literal|"Failed to close object %s with key %s"
argument_list|,
name|object
argument_list|,
name|key
argument_list|)
decl_stmt|;
name|errors
operator|.
name|addMessage
argument_list|(
operator|new
name|Message
argument_list|(
name|errors
operator|.
name|getSources
argument_list|()
argument_list|,
name|message
argument_list|,
name|cause
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|throwIfNecessary ()
specifier|public
name|void
name|throwIfNecessary
parameter_list|()
throws|throws
name|CloseFailedException
block|{
if|if
condition|(
operator|!
name|errors
operator|.
name|hasErrors
argument_list|()
condition|)
block|{
return|return;
block|}
throw|throw
operator|new
name|CloseFailedException
argument_list|(
name|errors
operator|.
name|getMessages
argument_list|()
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

