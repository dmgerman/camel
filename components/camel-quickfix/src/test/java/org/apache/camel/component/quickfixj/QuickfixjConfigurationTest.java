begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.quickfixj
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|quickfixj
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|quickfix
operator|.
name|SessionID
import|;
end_import

begin_import
import|import
name|quickfix
operator|.
name|SessionSettings
import|;
end_import

begin_class
DECL|class|QuickfixjConfigurationTest
specifier|public
class|class
name|QuickfixjConfigurationTest
block|{
annotation|@
name|Test
DECL|method|testConfiguration ()
specifier|public
name|void
name|testConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|QuickfixjConfiguration
name|factory
init|=
operator|new
name|QuickfixjConfiguration
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|defaultSettings
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|defaultSettings
operator|.
name|put
argument_list|(
literal|"value1"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|defaultSettings
operator|.
name|put
argument_list|(
literal|"value2"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setDefaultSettings
argument_list|(
name|defaultSettings
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|session1Settings
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|session1Settings
operator|.
name|put
argument_list|(
literal|"value1"
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|session1Settings
operator|.
name|put
argument_list|(
literal|"value3"
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|SessionID
argument_list|,
name|Map
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
argument_list|>
name|sessionSettings
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|SessionID
name|sessionID
init|=
operator|new
name|SessionID
argument_list|(
literal|"FIX.4.2:SENDER->TARGET"
argument_list|)
decl_stmt|;
name|sessionSettings
operator|.
name|put
argument_list|(
name|sessionID
argument_list|,
name|session1Settings
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setSessionSettings
argument_list|(
name|sessionSettings
argument_list|)
expr_stmt|;
name|SessionSettings
name|settings
init|=
name|factory
operator|.
name|createSessionSettings
argument_list|()
decl_stmt|;
name|Properties
name|sessionProperties
init|=
name|settings
operator|.
name|getSessionProperties
argument_list|(
name|sessionID
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertThat
argument_list|(
name|sessionProperties
operator|.
name|get
argument_list|(
literal|"value1"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|CoreMatchers
operator|.
name|is
argument_list|(
literal|"10"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertThat
argument_list|(
name|sessionProperties
operator|.
name|get
argument_list|(
literal|"value2"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|CoreMatchers
operator|.
name|is
argument_list|(
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertThat
argument_list|(
name|sessionProperties
operator|.
name|get
argument_list|(
literal|"value3"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|CoreMatchers
operator|.
name|is
argument_list|(
literal|"30"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

