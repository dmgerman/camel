begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.quickfixj
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|quickfixj
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelSpringTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|AbstractApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|ClassPathXmlApplicationContext
import|;
end_import

begin_import
import|import
name|quickfix
operator|.
name|DefaultMessageFactory
import|;
end_import

begin_import
import|import
name|quickfix
operator|.
name|FixVersions
import|;
end_import

begin_import
import|import
name|quickfix
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|quickfix
operator|.
name|SessionID
import|;
end_import

begin_import
import|import
name|quickfix
operator|.
name|SessionSettings
import|;
end_import

begin_import
import|import
name|quickfix
operator|.
name|field
operator|.
name|MsgType
import|;
end_import

begin_import
import|import
name|quickfix
operator|.
name|fix42
operator|.
name|NewOrderSingle
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|instanceOf
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|is
import|;
end_import

begin_class
DECL|class|QuickfixjSpringTest
specifier|public
class|class
name|QuickfixjSpringTest
extends|extends
name|CamelSpringTestSupport
block|{
annotation|@
name|Override
DECL|method|createApplicationContext ()
specifier|protected
name|AbstractApplicationContext
name|createApplicationContext
parameter_list|()
block|{
return|return
operator|new
name|ClassPathXmlApplicationContext
argument_list|(
literal|"org/apache/camel/component/quickfixj/QuickfixjSpringTest-context.xml"
argument_list|)
return|;
block|}
annotation|@
name|Test
DECL|method|configureInSpring ()
specifier|public
name|void
name|configureInSpring
parameter_list|()
throws|throws
name|Exception
block|{
name|SessionID
name|sessionID
init|=
operator|new
name|SessionID
argument_list|(
literal|"FIX.4.2:INITIATOR->ACCEPTOR"
argument_list|)
decl_stmt|;
name|SessionSettings
name|springSessionSettings
init|=
name|context
operator|.
name|getRegistry
argument_list|()
operator|.
name|lookup
argument_list|(
literal|"quickfixjSettings"
argument_list|,
name|SessionSettings
operator|.
name|class
argument_list|)
decl_stmt|;
name|Properties
name|sessionProperties
init|=
name|springSessionSettings
operator|.
name|getSessionProperties
argument_list|(
name|sessionID
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertThat
argument_list|(
name|sessionProperties
operator|.
name|get
argument_list|(
literal|"ConnectionType"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|CoreMatchers
operator|.
name|is
argument_list|(
literal|"initiator"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertThat
argument_list|(
name|sessionProperties
operator|.
name|get
argument_list|(
literal|"SocketConnectProtocol"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|CoreMatchers
operator|.
name|is
argument_list|(
literal|"VM_PIPE"
argument_list|)
argument_list|)
expr_stmt|;
name|QuickfixjComponent
name|component
init|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"quickfix"
argument_list|,
name|QuickfixjComponent
operator|.
name|class
argument_list|)
decl_stmt|;
name|QuickfixjEngine
name|engine
init|=
name|component
operator|.
name|getEngines
argument_list|()
operator|.
name|values
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertThat
argument_list|(
name|engine
operator|.
name|getMessageFactory
argument_list|()
argument_list|,
name|is
argument_list|(
name|instanceOf
argument_list|(
name|CustomMessageFactory
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Customer message factory and message class for test purposes      */
DECL|class|CustomMessageFactory
specifier|public
specifier|static
class|class
name|CustomMessageFactory
extends|extends
name|DefaultMessageFactory
block|{
annotation|@
name|Override
DECL|method|create (String beginString, String msgType)
specifier|public
name|Message
name|create
parameter_list|(
name|String
name|beginString
parameter_list|,
name|String
name|msgType
parameter_list|)
block|{
if|if
condition|(
name|beginString
operator|.
name|equals
argument_list|(
name|FixVersions
operator|.
name|BEGINSTRING_FIX42
argument_list|)
operator|&&
name|msgType
operator|.
name|equals
argument_list|(
name|MsgType
operator|.
name|ORDER_SINGLE
argument_list|)
condition|)
block|{
return|return
operator|new
name|CustomNewOrderSingle
argument_list|()
return|;
block|}
return|return
name|super
operator|.
name|create
argument_list|(
name|beginString
argument_list|,
name|msgType
argument_list|)
return|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"serial"
argument_list|)
DECL|class|CustomNewOrderSingle
specifier|public
specifier|static
class|class
name|CustomNewOrderSingle
extends|extends
name|NewOrderSingle
block|{     }
block|}
end_class

end_unit

