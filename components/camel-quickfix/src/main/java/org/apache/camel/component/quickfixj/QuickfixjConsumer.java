begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.quickfixj
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|quickfixj
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|quickfixj
operator|.
name|QFJException
import|;
end_import

begin_import
import|import
name|quickfix
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|quickfix
operator|.
name|SessionID
import|;
end_import

begin_class
DECL|class|QuickfixjConsumer
specifier|public
class|class
name|QuickfixjConsumer
extends|extends
name|DefaultConsumer
block|{
DECL|method|QuickfixjConsumer (Endpoint endpoint, Processor processor)
specifier|public
name|QuickfixjConsumer
parameter_list|(
name|Endpoint
name|endpoint
parameter_list|,
name|Processor
name|processor
parameter_list|)
block|{
name|super
argument_list|(
name|endpoint
argument_list|,
name|processor
argument_list|)
expr_stmt|;
block|}
DECL|method|onExchange (Exchange exchange)
specifier|public
name|void
name|onExchange
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|isStarted
argument_list|()
condition|)
block|{
try|try
block|{
name|getProcessor
argument_list|()
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
if|if
condition|(
name|exchange
operator|.
name|getPattern
argument_list|()
operator|.
name|isOutCapable
argument_list|()
operator|&&
name|exchange
operator|.
name|hasOut
argument_list|()
condition|)
block|{
name|sendOutMessage
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|exchange
operator|.
name|setException
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|sendOutMessage (Exchange exchange)
specifier|private
name|void
name|sendOutMessage
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|QFJException
block|{
name|Message
name|camelMessage
init|=
name|exchange
operator|.
name|getOut
argument_list|()
decl_stmt|;
name|quickfix
operator|.
name|Message
name|quickfixjMessage
init|=
name|camelMessage
operator|.
name|getBody
argument_list|(
name|quickfix
operator|.
name|Message
operator|.
name|class
argument_list|)
decl_stmt|;
name|log
operator|.
name|debug
argument_list|(
literal|"Sending FIX message reply: {}"
argument_list|,
name|quickfixjMessage
argument_list|)
expr_stmt|;
name|SessionID
name|messageSessionID
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
literal|"SessionID"
argument_list|,
name|SessionID
operator|.
name|class
argument_list|)
decl_stmt|;
name|Session
name|session
init|=
name|getSession
argument_list|(
name|messageSessionID
argument_list|)
decl_stmt|;
if|if
condition|(
name|session
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Unknown session: "
operator|+
name|messageSessionID
argument_list|)
throw|;
block|}
if|if
condition|(
operator|!
name|session
operator|.
name|send
argument_list|(
name|quickfixjMessage
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|CannotSendException
argument_list|(
literal|"Could not send FIX message reply: "
operator|+
name|quickfixjMessage
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
block|}
DECL|method|getSession (SessionID messageSessionID)
name|Session
name|getSession
parameter_list|(
name|SessionID
name|messageSessionID
parameter_list|)
block|{
return|return
name|Session
operator|.
name|lookupSession
argument_list|(
name|messageSessionID
argument_list|)
return|;
block|}
block|}
end_class

end_unit

