begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.rabbitmq.reply
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|rabbitmq
operator|.
name|reply
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ScheduledExecutorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|DefaultTimeoutMap
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|TimeoutMap
operator|.
name|Listener
operator|.
name|Type
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * A {@link org.apache.camel.TimeoutMap} which is used to track reply messages which  * has been timed out, and thus should trigger the waiting {@link org.apache.camel.Exchange} to  * timeout as well.  */
end_comment

begin_class
DECL|class|CorrelationTimeoutMap
class|class
name|CorrelationTimeoutMap
extends|extends
name|DefaultTimeoutMap
argument_list|<
name|String
argument_list|,
name|ReplyHandler
argument_list|>
block|{
DECL|method|CorrelationTimeoutMap (ScheduledExecutorService executor, long requestMapPollTimeMillis)
name|CorrelationTimeoutMap
parameter_list|(
name|ScheduledExecutorService
name|executor
parameter_list|,
name|long
name|requestMapPollTimeMillis
parameter_list|)
block|{
name|super
argument_list|(
name|executor
argument_list|,
name|requestMapPollTimeMillis
argument_list|)
expr_stmt|;
name|addListener
argument_list|(
name|this
operator|::
name|listener
argument_list|)
expr_stmt|;
block|}
DECL|method|encode (long timeoutMillis)
specifier|private
specifier|static
name|long
name|encode
parameter_list|(
name|long
name|timeoutMillis
parameter_list|)
block|{
return|return
name|timeoutMillis
operator|>
literal|0
condition|?
name|timeoutMillis
else|:
name|Integer
operator|.
name|MAX_VALUE
return|;
comment|// TODO why not Long.MAX_VALUE!
block|}
DECL|method|listener (Listener.Type type, String key, ReplyHandler handler)
specifier|private
name|void
name|listener
parameter_list|(
name|Listener
operator|.
name|Type
name|type
parameter_list|,
name|String
name|key
parameter_list|,
name|ReplyHandler
name|handler
parameter_list|)
block|{
if|if
condition|(
name|type
operator|==
name|Put
condition|)
block|{
name|log
operator|.
name|trace
argument_list|(
literal|"Added correlationID: {}"
argument_list|,
name|key
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|type
operator|==
name|Remove
condition|)
block|{
name|log
operator|.
name|trace
argument_list|(
literal|"Removed correlationID: {}"
argument_list|,
name|key
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|type
operator|==
name|Evict
condition|)
block|{
try|try
block|{
name|handler
operator|.
name|onTimeout
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
comment|// must ignore so we ensure we evict the element
name|log
operator|.
name|warn
argument_list|(
literal|"Error processing onTimeout for correlationID: "
operator|+
name|key
operator|+
literal|" due: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
operator|+
literal|". This exception is ignored."
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
name|log
operator|.
name|trace
argument_list|(
literal|"Evicted correlationID: {}"
argument_list|,
name|key
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|put (String key, ReplyHandler value, long timeoutMillis)
specifier|public
name|ReplyHandler
name|put
parameter_list|(
name|String
name|key
parameter_list|,
name|ReplyHandler
name|value
parameter_list|,
name|long
name|timeoutMillis
parameter_list|)
block|{
return|return
name|super
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|,
name|encode
argument_list|(
name|timeoutMillis
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|putIfAbsent (String key, ReplyHandler value, long timeoutMillis)
specifier|public
name|ReplyHandler
name|putIfAbsent
parameter_list|(
name|String
name|key
parameter_list|,
name|ReplyHandler
name|value
parameter_list|,
name|long
name|timeoutMillis
parameter_list|)
block|{
return|return
name|super
operator|.
name|putIfAbsent
argument_list|(
name|key
argument_list|,
name|value
argument_list|,
name|encode
argument_list|(
name|timeoutMillis
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

