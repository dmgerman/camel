begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.scr
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|scr
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ThreadPoolExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ErrorHandlerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Route
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RoutesBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|VetoCamelContextStartException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|LifecycleStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|RouteContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_class
DECL|class|ConcreteCamelRunner
specifier|public
class|class
name|ConcreteCamelRunner
extends|extends
name|AbstractCamelRunner
implements|implements
name|LifecycleStrategy
block|{
DECL|field|camelContextStarted
specifier|protected
name|int
name|camelContextStarted
decl_stmt|;
DECL|field|camelContextStopped
specifier|protected
name|int
name|camelContextStopped
decl_stmt|;
DECL|field|routeAdded
specifier|protected
name|int
name|routeAdded
decl_stmt|;
DECL|method|getDefaultProperties ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getDefaultProperties
parameter_list|()
block|{
comment|// Set default properties
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|defaultProps
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|defaultProps
operator|.
name|put
argument_list|(
literal|"camelContextId"
argument_list|,
literal|"camel-runner"
argument_list|)
expr_stmt|;
name|defaultProps
operator|.
name|put
argument_list|(
literal|"unit.camelContextId"
argument_list|,
literal|"camel-runner-unitTest"
argument_list|)
expr_stmt|;
name|defaultProps
operator|.
name|put
argument_list|(
literal|"camelRouteId"
argument_list|,
literal|"test/direct-mock"
argument_list|)
expr_stmt|;
name|defaultProps
operator|.
name|put
argument_list|(
literal|"active"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|defaultProps
operator|.
name|put
argument_list|(
literal|"from"
argument_list|,
literal|"direct:start"
argument_list|)
expr_stmt|;
name|defaultProps
operator|.
name|put
argument_list|(
literal|"to"
argument_list|,
literal|"mock:end"
argument_list|)
expr_stmt|;
name|defaultProps
operator|.
name|put
argument_list|(
literal|"messageOk"
argument_list|,
literal|"Success"
argument_list|)
expr_stmt|;
name|defaultProps
operator|.
name|put
argument_list|(
literal|"messageError"
argument_list|,
literal|"Failure"
argument_list|)
expr_stmt|;
name|defaultProps
operator|.
name|put
argument_list|(
literal|"maximumRedeliveries"
argument_list|,
literal|"0"
argument_list|)
expr_stmt|;
name|defaultProps
operator|.
name|put
argument_list|(
literal|"redeliveryDelay"
argument_list|,
literal|"1000"
argument_list|)
expr_stmt|;
name|defaultProps
operator|.
name|put
argument_list|(
literal|"backOffMultiplier"
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|defaultProps
operator|.
name|put
argument_list|(
literal|"maximumRedeliveryDelay"
argument_list|,
literal|"60000"
argument_list|)
expr_stmt|;
return|return
name|defaultProps
return|;
block|}
annotation|@
name|Override
DECL|method|createCamelContext (BundleContext bundleContext, Map<String, String> props)
specifier|protected
name|void
name|createCamelContext
parameter_list|(
name|BundleContext
name|bundleContext
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|props
parameter_list|)
block|{
name|super
operator|.
name|createCamelContext
argument_list|(
name|bundleContext
argument_list|,
name|props
argument_list|)
expr_stmt|;
name|context
operator|.
name|disableJMX
argument_list|()
expr_stmt|;
name|context
operator|.
name|addLifecycleStrategy
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getRouteBuilders ()
specifier|public
name|List
argument_list|<
name|RoutesBuilder
argument_list|>
name|getRouteBuilders
parameter_list|()
block|{
name|List
argument_list|<
name|RoutesBuilder
argument_list|>
name|routesBuilders
init|=
operator|new
name|ArrayList
argument_list|<
name|RoutesBuilder
argument_list|>
argument_list|()
decl_stmt|;
name|routesBuilders
operator|.
name|add
argument_list|(
operator|new
name|TestRouteBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|routesBuilders
operator|.
name|add
argument_list|(
operator|new
name|TestRouteBuilder2
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|routesBuilders
return|;
block|}
annotation|@
name|Override
DECL|method|onContextStart (CamelContext camelContext)
specifier|public
name|void
name|onContextStart
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|)
throws|throws
name|VetoCamelContextStartException
block|{
name|camelContextStarted
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onContextStop (CamelContext camelContext)
specifier|public
name|void
name|onContextStop
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|)
block|{
name|camelContextStopped
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onComponentAdd (String s, Component component)
specifier|public
name|void
name|onComponentAdd
parameter_list|(
name|String
name|s
parameter_list|,
name|Component
name|component
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|onComponentRemove (String s, Component component)
specifier|public
name|void
name|onComponentRemove
parameter_list|(
name|String
name|s
parameter_list|,
name|Component
name|component
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|onEndpointAdd (Endpoint endpoint)
specifier|public
name|void
name|onEndpointAdd
parameter_list|(
name|Endpoint
name|endpoint
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|onEndpointRemove (Endpoint endpoint)
specifier|public
name|void
name|onEndpointRemove
parameter_list|(
name|Endpoint
name|endpoint
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|onServiceAdd (CamelContext camelContext, Service service, Route route)
specifier|public
name|void
name|onServiceAdd
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|,
name|Service
name|service
parameter_list|,
name|Route
name|route
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|onServiceRemove (CamelContext camelContext, Service service, Route route)
specifier|public
name|void
name|onServiceRemove
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|,
name|Service
name|service
parameter_list|,
name|Route
name|route
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|onRoutesAdd (Collection<Route> routes)
specifier|public
name|void
name|onRoutesAdd
parameter_list|(
name|Collection
argument_list|<
name|Route
argument_list|>
name|routes
parameter_list|)
block|{
name|routeAdded
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onRoutesRemove (Collection<Route> routes)
specifier|public
name|void
name|onRoutesRemove
parameter_list|(
name|Collection
argument_list|<
name|Route
argument_list|>
name|routes
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|onRouteContextCreate (RouteContext routeContext)
specifier|public
name|void
name|onRouteContextCreate
parameter_list|(
name|RouteContext
name|routeContext
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|onErrorHandlerAdd (RouteContext routeContext, Processor processor, ErrorHandlerFactory errorHandlerFactory)
specifier|public
name|void
name|onErrorHandlerAdd
parameter_list|(
name|RouteContext
name|routeContext
parameter_list|,
name|Processor
name|processor
parameter_list|,
name|ErrorHandlerFactory
name|errorHandlerFactory
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|onErrorHandlerRemove (RouteContext routeContext, Processor processor, ErrorHandlerFactory errorHandlerFactory)
specifier|public
name|void
name|onErrorHandlerRemove
parameter_list|(
name|RouteContext
name|routeContext
parameter_list|,
name|Processor
name|processor
parameter_list|,
name|ErrorHandlerFactory
name|errorHandlerFactory
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|onThreadPoolAdd (CamelContext camelContext, ThreadPoolExecutor threadPoolExecutor, String s, String s2, String s3, String s4)
specifier|public
name|void
name|onThreadPoolAdd
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|,
name|ThreadPoolExecutor
name|threadPoolExecutor
parameter_list|,
name|String
name|s
parameter_list|,
name|String
name|s2
parameter_list|,
name|String
name|s3
parameter_list|,
name|String
name|s4
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|onThreadPoolRemove (CamelContext camelContext, ThreadPoolExecutor threadPoolExecutor)
specifier|public
name|void
name|onThreadPoolRemove
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|,
name|ThreadPoolExecutor
name|threadPoolExecutor
parameter_list|)
block|{     }
block|}
end_class

end_unit

