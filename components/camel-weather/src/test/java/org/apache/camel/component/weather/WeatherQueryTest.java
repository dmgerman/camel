begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.weather
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|weather
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|weather
operator|.
name|geolocation
operator|.
name|GeoLocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|weather
operator|.
name|geolocation
operator|.
name|GeoLocationProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|runners
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|Is
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
DECL|class|WeatherQueryTest
specifier|public
class|class
name|WeatherQueryTest
block|{
DECL|field|LONGITUDE
specifier|private
specifier|static
specifier|final
name|String
name|LONGITUDE
init|=
literal|"4.13"
decl_stmt|;
DECL|field|LATITUDE
specifier|private
specifier|static
specifier|final
name|String
name|LATITUDE
init|=
literal|"51.98"
decl_stmt|;
DECL|field|APPID
specifier|private
specifier|static
specifier|final
name|String
name|APPID
init|=
literal|"9162755b2efa555823cfe0451d7fff38"
decl_stmt|;
annotation|@
name|Mock
DECL|field|geoLocationProvider
specifier|private
name|GeoLocationProvider
name|geoLocationProvider
decl_stmt|;
annotation|@
name|Mock
DECL|field|exceptionThrowingGeoLocationProvider
specifier|private
name|GeoLocationProvider
name|exceptionThrowingGeoLocationProvider
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|GeoLocation
name|location
init|=
operator|new
name|GeoLocation
argument_list|(
name|LONGITUDE
argument_list|,
name|LATITUDE
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|geoLocationProvider
operator|.
name|getCurrentGeoLocation
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|location
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|exceptionThrowingGeoLocationProvider
operator|.
name|getCurrentGeoLocation
argument_list|()
argument_list|)
operator|.
name|thenThrow
argument_list|(
operator|new
name|IllegalStateException
argument_list|(
literal|"Error in getting current location"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBoxedQuery ()
specifier|public
name|void
name|testBoxedQuery
parameter_list|()
throws|throws
name|Exception
block|{
name|WeatherConfiguration
name|weatherConfiguration
init|=
operator|new
name|WeatherConfiguration
argument_list|(
operator|new
name|WeatherComponent
argument_list|()
argument_list|)
decl_stmt|;
name|weatherConfiguration
operator|.
name|setLon
argument_list|(
literal|"4"
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setLat
argument_list|(
literal|"52"
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setRightLon
argument_list|(
literal|"6"
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setTopLat
argument_list|(
literal|"54"
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setZoom
argument_list|(
literal|8
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setUnits
argument_list|(
name|WeatherUnits
operator|.
name|METRIC
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setAppid
argument_list|(
name|APPID
argument_list|)
expr_stmt|;
name|WeatherQuery
name|weatherQuery
init|=
operator|new
name|WeatherQuery
argument_list|(
name|weatherConfiguration
argument_list|)
decl_stmt|;
name|weatherQuery
operator|.
name|setGeoLocationProvider
argument_list|(
name|geoLocationProvider
argument_list|)
expr_stmt|;
name|String
name|query
init|=
name|weatherQuery
operator|.
name|getQuery
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|query
argument_list|,
name|is
argument_list|(
literal|"http://api.openweathermap.org/data/2.5/box/city?bbox=4,52,6,54,8&cluster=yes&lang=en&units=metric&APPID=9162755b2efa555823cfe0451d7fff38"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testLatLonQuery ()
specifier|public
name|void
name|testLatLonQuery
parameter_list|()
throws|throws
name|Exception
block|{
name|WeatherConfiguration
name|weatherConfiguration
init|=
operator|new
name|WeatherConfiguration
argument_list|(
operator|new
name|WeatherComponent
argument_list|()
argument_list|)
decl_stmt|;
name|weatherConfiguration
operator|.
name|setLon
argument_list|(
literal|"4"
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setLat
argument_list|(
literal|"52"
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setMode
argument_list|(
name|WeatherMode
operator|.
name|XML
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setLanguage
argument_list|(
name|WeatherLanguage
operator|.
name|nl
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setAppid
argument_list|(
name|APPID
argument_list|)
expr_stmt|;
name|WeatherQuery
name|weatherQuery
init|=
operator|new
name|WeatherQuery
argument_list|(
name|weatherConfiguration
argument_list|)
decl_stmt|;
name|weatherQuery
operator|.
name|setGeoLocationProvider
argument_list|(
name|geoLocationProvider
argument_list|)
expr_stmt|;
name|String
name|query
init|=
name|weatherQuery
operator|.
name|getQuery
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|query
argument_list|,
name|is
argument_list|(
literal|"http://api.openweathermap.org/data/2.5/weather?lat=52&lon=4&lang=nl&mode=xml&APPID=9162755b2efa555823cfe0451d7fff38"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCurrentLocationQuery ()
specifier|public
name|void
name|testCurrentLocationQuery
parameter_list|()
throws|throws
name|Exception
block|{
name|WeatherConfiguration
name|weatherConfiguration
init|=
operator|new
name|WeatherConfiguration
argument_list|(
operator|new
name|WeatherComponent
argument_list|()
argument_list|)
decl_stmt|;
name|weatherConfiguration
operator|.
name|setMode
argument_list|(
name|WeatherMode
operator|.
name|XML
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setPeriod
argument_list|(
literal|"3"
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setLanguage
argument_list|(
name|WeatherLanguage
operator|.
name|nl
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setUnits
argument_list|(
name|WeatherUnits
operator|.
name|IMPERIAL
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setAppid
argument_list|(
name|APPID
argument_list|)
expr_stmt|;
name|WeatherQuery
name|weatherQuery
init|=
operator|new
name|WeatherQuery
argument_list|(
name|weatherConfiguration
argument_list|)
decl_stmt|;
name|weatherQuery
operator|.
name|setGeoLocationProvider
argument_list|(
name|geoLocationProvider
argument_list|)
expr_stmt|;
name|String
name|query
init|=
name|weatherQuery
operator|.
name|getQuery
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|query
argument_list|,
name|is
argument_list|(
literal|"http://api.openweathermap.org/data/2.5/forecast/daily?lat=51.98&lon=4.13&lang=nl&cnt=3&units=imperial&mode=xml&APPID=9162755b2efa555823cfe0451d7fff38"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCurrentLocationQuery2 ()
specifier|public
name|void
name|testCurrentLocationQuery2
parameter_list|()
throws|throws
name|Exception
block|{
name|WeatherConfiguration
name|weatherConfiguration
init|=
operator|new
name|WeatherConfiguration
argument_list|(
operator|new
name|WeatherComponent
argument_list|()
argument_list|)
decl_stmt|;
name|weatherConfiguration
operator|.
name|setMode
argument_list|(
name|WeatherMode
operator|.
name|XML
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setLocation
argument_list|(
literal|"current"
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setPeriod
argument_list|(
literal|"3"
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setLanguage
argument_list|(
name|WeatherLanguage
operator|.
name|nl
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setUnits
argument_list|(
name|WeatherUnits
operator|.
name|IMPERIAL
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setAppid
argument_list|(
name|APPID
argument_list|)
expr_stmt|;
name|WeatherQuery
name|weatherQuery
init|=
operator|new
name|WeatherQuery
argument_list|(
name|weatherConfiguration
argument_list|)
decl_stmt|;
name|weatherQuery
operator|.
name|setGeoLocationProvider
argument_list|(
name|geoLocationProvider
argument_list|)
expr_stmt|;
name|String
name|query
init|=
name|weatherQuery
operator|.
name|getQuery
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|query
argument_list|,
name|is
argument_list|(
literal|"http://api.openweathermap.org/data/2.5/forecast/daily?lat=51.98&lon=4.13&lang=nl&cnt=3&units=imperial&mode=xml&APPID=9162755b2efa555823cfe0451d7fff38"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGivenLocation ()
specifier|public
name|void
name|testGivenLocation
parameter_list|()
throws|throws
name|Exception
block|{
name|WeatherConfiguration
name|weatherConfiguration
init|=
operator|new
name|WeatherConfiguration
argument_list|(
operator|new
name|WeatherComponent
argument_list|()
argument_list|)
decl_stmt|;
name|weatherConfiguration
operator|.
name|setMode
argument_list|(
name|WeatherMode
operator|.
name|XML
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setLocation
argument_list|(
literal|"Scheveningen,NL"
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setLanguage
argument_list|(
name|WeatherLanguage
operator|.
name|nl
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setUnits
argument_list|(
name|WeatherUnits
operator|.
name|IMPERIAL
argument_list|)
expr_stmt|;
name|weatherConfiguration
operator|.
name|setAppid
argument_list|(
name|APPID
argument_list|)
expr_stmt|;
name|WeatherQuery
name|weatherQuery
init|=
operator|new
name|WeatherQuery
argument_list|(
name|weatherConfiguration
argument_list|)
decl_stmt|;
name|weatherQuery
operator|.
name|setGeoLocationProvider
argument_list|(
name|geoLocationProvider
argument_list|)
expr_stmt|;
name|String
name|query
init|=
name|weatherQuery
operator|.
name|getQuery
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|query
argument_list|,
name|is
argument_list|(
literal|"http://api.openweathermap.org/data/2.5/weather?q=Scheveningen,NL&lang=nl&units=imperial&mode=xml&APPID=9162755b2efa555823cfe0451d7fff38"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

