begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.component.google.drive
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|google
operator|.
name|drive
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Consumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Producer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|component
operator|.
name|AbstractApiEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|component
operator|.
name|ApiMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|component
operator|.
name|ApiMethodPropertiesHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|google
operator|.
name|drive
operator|.
name|internal
operator|.
name|GoogleDriveApiCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|google
operator|.
name|drive
operator|.
name|internal
operator|.
name|GoogleDriveApiName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|google
operator|.
name|drive
operator|.
name|internal
operator|.
name|GoogleDriveConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|google
operator|.
name|drive
operator|.
name|internal
operator|.
name|GoogleDrivePropertiesHelper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|client
operator|.
name|auth
operator|.
name|oauth2
operator|.
name|Credential
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|client
operator|.
name|extensions
operator|.
name|java6
operator|.
name|auth
operator|.
name|oauth2
operator|.
name|AuthorizationCodeInstalledApp
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|client
operator|.
name|extensions
operator|.
name|jetty
operator|.
name|auth
operator|.
name|oauth2
operator|.
name|LocalServerReceiver
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|client
operator|.
name|googleapis
operator|.
name|auth
operator|.
name|oauth2
operator|.
name|GoogleAuthorizationCodeFlow
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|client
operator|.
name|http
operator|.
name|javanet
operator|.
name|NetHttpTransport
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|client
operator|.
name|json
operator|.
name|jackson2
operator|.
name|JacksonFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|client
operator|.
name|util
operator|.
name|store
operator|.
name|FileDataStoreFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|services
operator|.
name|drive
operator|.
name|Drive
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|services
operator|.
name|drive
operator|.
name|DriveScopes
import|;
end_import

begin_comment
comment|/**  * Represents a GoogleDrive endpoint.  */
end_comment

begin_class
annotation|@
name|UriEndpoint
argument_list|(
name|scheme
operator|=
literal|"google-drive"
argument_list|,
name|consumerClass
operator|=
name|GoogleDriveConsumer
operator|.
name|class
argument_list|,
name|consumerPrefix
operator|=
literal|"consumer"
argument_list|)
DECL|class|GoogleDriveEndpoint
specifier|public
class|class
name|GoogleDriveEndpoint
extends|extends
name|AbstractApiEndpoint
argument_list|<
name|GoogleDriveApiName
argument_list|,
name|GoogleDriveConfiguration
argument_list|>
block|{
DECL|field|apiProxy
specifier|private
name|Object
name|apiProxy
decl_stmt|;
DECL|field|client
specifier|private
name|Drive
name|client
decl_stmt|;
comment|// TODO these need to be configurable
DECL|field|transport
specifier|private
name|NetHttpTransport
name|transport
init|=
operator|new
name|NetHttpTransport
argument_list|()
decl_stmt|;
DECL|field|jsonFactory
specifier|private
name|JacksonFactory
name|jsonFactory
init|=
operator|new
name|JacksonFactory
argument_list|()
decl_stmt|;
DECL|field|dataStoreFactory
specifier|private
name|FileDataStoreFactory
name|dataStoreFactory
decl_stmt|;
comment|// TODO Directory to store user credentials
DECL|field|DATA_STORE_DIR
specifier|private
specifier|static
specifier|final
name|java
operator|.
name|io
operator|.
name|File
name|DATA_STORE_DIR
init|=
operator|new
name|java
operator|.
name|io
operator|.
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.home"
argument_list|)
argument_list|,
literal|".store/drive_sample"
argument_list|)
decl_stmt|;
DECL|field|DEFAULT_SCOPES
specifier|private
specifier|static
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|DEFAULT_SCOPES
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|DriveScopes
operator|.
name|DRIVE_FILE
argument_list|,
name|DriveScopes
operator|.
name|DRIVE_APPS_READONLY
argument_list|,
name|DriveScopes
operator|.
name|DRIVE_METADATA_READONLY
argument_list|,
name|DriveScopes
operator|.
name|DRIVE
argument_list|)
decl_stmt|;
DECL|method|GoogleDriveEndpoint (String uri, GoogleDriveComponent component, GoogleDriveApiName apiName, String methodName, GoogleDriveConfiguration endpointConfiguration)
specifier|public
name|GoogleDriveEndpoint
parameter_list|(
name|String
name|uri
parameter_list|,
name|GoogleDriveComponent
name|component
parameter_list|,
name|GoogleDriveApiName
name|apiName
parameter_list|,
name|String
name|methodName
parameter_list|,
name|GoogleDriveConfiguration
name|endpointConfiguration
parameter_list|)
block|{
name|super
argument_list|(
name|uri
argument_list|,
name|component
argument_list|,
name|apiName
argument_list|,
name|methodName
argument_list|,
name|GoogleDriveApiCollection
operator|.
name|getCollection
argument_list|()
operator|.
name|getHelper
argument_list|(
name|apiName
argument_list|)
argument_list|,
name|endpointConfiguration
argument_list|)
expr_stmt|;
block|}
DECL|method|createProducer ()
specifier|public
name|Producer
name|createProducer
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|GoogleDriveProducer
argument_list|(
name|this
argument_list|)
return|;
block|}
DECL|method|createConsumer (Processor processor)
specifier|public
name|Consumer
name|createConsumer
parameter_list|(
name|Processor
name|processor
parameter_list|)
throws|throws
name|Exception
block|{
comment|// make sure inBody is not set for consumers
if|if
condition|(
name|inBody
operator|!=
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Option inBody is not supported for consumer endpoint"
argument_list|)
throw|;
block|}
specifier|final
name|GoogleDriveConsumer
name|consumer
init|=
operator|new
name|GoogleDriveConsumer
argument_list|(
name|this
argument_list|,
name|processor
argument_list|)
decl_stmt|;
comment|// also set consumer.* properties
name|configureConsumer
argument_list|(
name|consumer
argument_list|)
expr_stmt|;
return|return
name|consumer
return|;
block|}
annotation|@
name|Override
DECL|method|getPropertiesHelper ()
specifier|protected
name|ApiMethodPropertiesHelper
argument_list|<
name|GoogleDriveConfiguration
argument_list|>
name|getPropertiesHelper
parameter_list|()
block|{
return|return
name|GoogleDrivePropertiesHelper
operator|.
name|getHelper
argument_list|()
return|;
block|}
DECL|method|getThreadProfileName ()
specifier|protected
name|String
name|getThreadProfileName
parameter_list|()
block|{
return|return
name|GoogleDriveConstants
operator|.
name|THREAD_PROFILE_NAME
return|;
block|}
comment|// Authorizes the installed application to access user's protected data.
DECL|method|authorize ()
specifier|private
name|Credential
name|authorize
parameter_list|()
throws|throws
name|Exception
block|{
name|dataStoreFactory
operator|=
operator|new
name|FileDataStoreFactory
argument_list|(
name|DATA_STORE_DIR
argument_list|)
expr_stmt|;
comment|// set up authorization code flow
comment|// TODO refresh token support too
name|GoogleAuthorizationCodeFlow
name|flow
init|=
operator|new
name|GoogleAuthorizationCodeFlow
operator|.
name|Builder
argument_list|(
name|transport
argument_list|,
name|jsonFactory
argument_list|,
name|configuration
operator|.
name|getClientId
argument_list|()
argument_list|,
name|configuration
operator|.
name|getClientSecret
argument_list|()
argument_list|,
name|DEFAULT_SCOPES
argument_list|)
operator|.
name|setDataStoreFactory
argument_list|(
name|dataStoreFactory
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// authorize
return|return
operator|new
name|AuthorizationCodeInstalledApp
argument_list|(
name|flow
argument_list|,
operator|new
name|LocalServerReceiver
argument_list|()
argument_list|)
operator|.
name|authorize
argument_list|(
literal|"user"
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|afterConfigureProperties ()
specifier|protected
name|void
name|afterConfigureProperties
parameter_list|()
block|{
comment|// TODO create API proxy, set connection properties, etc.
switch|switch
condition|(
operator|(
name|GoogleDriveApiName
operator|)
name|apiName
condition|)
block|{
case|case
name|DRIVE_FILES
case|:
name|apiProxy
operator|=
name|getClient
argument_list|()
operator|.
name|files
argument_list|()
expr_stmt|;
break|break;
case|case
name|DRIVE_ABOUT
case|:
name|apiProxy
operator|=
name|getClient
argument_list|()
operator|.
name|about
argument_list|()
expr_stmt|;
break|break;
case|case
name|DRIVE_APPS
case|:
name|apiProxy
operator|=
name|getClient
argument_list|()
operator|.
name|apps
argument_list|()
expr_stmt|;
break|break;
case|case
name|DRIVE_CHANGES
case|:
name|apiProxy
operator|=
name|getClient
argument_list|()
operator|.
name|changes
argument_list|()
expr_stmt|;
break|break;
case|case
name|DRIVE_COMMENTS
case|:
name|apiProxy
operator|=
name|getClient
argument_list|()
operator|.
name|comments
argument_list|()
expr_stmt|;
break|break;
case|case
name|DRIVE_PERMISSIONS
case|:
name|apiProxy
operator|=
name|getClient
argument_list|()
operator|.
name|permissions
argument_list|()
expr_stmt|;
break|break;
case|case
name|DRIVE_PROPERTIES
case|:
name|apiProxy
operator|=
name|getClient
argument_list|()
operator|.
name|properties
argument_list|()
expr_stmt|;
break|break;
comment|// Still need to support these drive APIs
comment|//              case DRIVE_CHANNELS:
comment|//              apiProxy = getClient().channels();
comment|//              break;
comment|//          case DRIVE_CHILDREN:
comment|//              apiProxy = getClient().children();
comment|//              break;
comment|//              case DRIVE_PARENTS:
comment|//              apiProxy = getClient().parents();
comment|//              break;
comment|//            case DRIVE_REALTIME:
comment|//                apiProxy = getClient().realtime();
comment|//                break;
case|case
name|DRIVE_REPLIES
case|:
name|apiProxy
operator|=
name|getClient
argument_list|()
operator|.
name|replies
argument_list|()
expr_stmt|;
break|break;
case|case
name|DRIVE_REVISIONS
case|:
name|apiProxy
operator|=
name|getClient
argument_list|()
operator|.
name|revisions
argument_list|()
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Invalid API name "
operator|+
name|apiName
argument_list|)
throw|;
block|}
block|}
DECL|method|getClient ()
specifier|public
name|Drive
name|getClient
parameter_list|()
block|{
if|if
condition|(
name|client
operator|==
literal|null
condition|)
block|{
name|Credential
name|credential
decl_stmt|;
try|try
block|{
name|credential
operator|=
name|authorize
argument_list|()
expr_stmt|;
name|client
operator|=
operator|new
name|Drive
operator|.
name|Builder
argument_list|(
name|transport
argument_list|,
name|jsonFactory
argument_list|,
name|credential
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// TODO Auto-generated catch block
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|client
return|;
block|}
annotation|@
name|Override
DECL|method|getApiProxy (ApiMethod method, Map<String, Object> args)
specifier|public
name|Object
name|getApiProxy
parameter_list|(
name|ApiMethod
name|method
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|args
parameter_list|)
block|{
return|return
name|apiProxy
return|;
block|}
block|}
end_class

end_unit

