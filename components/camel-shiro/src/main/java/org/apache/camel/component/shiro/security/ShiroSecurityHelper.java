begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.shiro.security
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|shiro
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ObjectOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ObjectOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|IOHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|crypto
operator|.
name|CipherService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|shiro
operator|.
name|util
operator|.
name|ByteSource
import|;
end_import

begin_class
DECL|class|ShiroSecurityHelper
specifier|public
specifier|final
class|class
name|ShiroSecurityHelper
block|{
DECL|method|ShiroSecurityHelper ()
specifier|private
name|ShiroSecurityHelper
parameter_list|()
block|{     }
DECL|method|encrypt (ShiroSecurityToken securityToken, byte[] passPhrase, CipherService cipherService)
specifier|public
specifier|static
name|ByteSource
name|encrypt
parameter_list|(
name|ShiroSecurityToken
name|securityToken
parameter_list|,
name|byte
index|[]
name|passPhrase
parameter_list|,
name|CipherService
name|cipherService
parameter_list|)
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|stream
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|ObjectOutput
name|serialStream
init|=
operator|new
name|ObjectOutputStream
argument_list|(
name|stream
argument_list|)
decl_stmt|;
try|try
block|{
name|serialStream
operator|.
name|writeObject
argument_list|(
name|securityToken
argument_list|)
expr_stmt|;
return|return
name|cipherService
operator|.
name|encrypt
argument_list|(
name|stream
operator|.
name|toByteArray
argument_list|()
argument_list|,
name|passPhrase
argument_list|)
return|;
block|}
finally|finally
block|{
name|close
argument_list|(
name|serialStream
argument_list|)
expr_stmt|;
name|IOHelper
operator|.
name|close
argument_list|(
name|stream
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|close (ObjectOutput output)
specifier|private
specifier|static
name|void
name|close
parameter_list|(
name|ObjectOutput
name|output
parameter_list|)
block|{
try|try
block|{
name|output
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// ignore
block|}
block|}
block|}
end_class

end_unit

