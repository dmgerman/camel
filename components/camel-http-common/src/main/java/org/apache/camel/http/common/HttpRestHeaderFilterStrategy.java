begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.http.common
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|http
operator|.
name|common
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_class
DECL|class|HttpRestHeaderFilterStrategy
specifier|public
class|class
name|HttpRestHeaderFilterStrategy
extends|extends
name|HttpHeaderFilterStrategy
block|{
DECL|field|templateUri
specifier|private
specifier|final
name|String
name|templateUri
decl_stmt|;
DECL|field|queryParameters
specifier|private
specifier|final
name|String
name|queryParameters
decl_stmt|;
DECL|method|HttpRestHeaderFilterStrategy (String templateUri, String queryParameters)
specifier|public
name|HttpRestHeaderFilterStrategy
parameter_list|(
name|String
name|templateUri
parameter_list|,
name|String
name|queryParameters
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|templateUri
operator|=
name|templateUri
expr_stmt|;
name|this
operator|.
name|queryParameters
operator|=
name|queryParameters
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|applyFilterToCamelHeaders (String headerName, Object headerValue, Exchange exchange)
specifier|public
name|boolean
name|applyFilterToCamelHeaders
parameter_list|(
name|String
name|headerName
parameter_list|,
name|Object
name|headerValue
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
block|{
name|boolean
name|answer
init|=
name|super
operator|.
name|applyFilterToCamelHeaders
argument_list|(
name|headerName
argument_list|,
name|headerValue
argument_list|,
name|exchange
argument_list|)
decl_stmt|;
comment|// using rest producer then headers are mapping to uri and query parameters using {key} syntax
comment|// if there is a match to an existing Camel Message header, then we should filter (=true) this
comment|// header as its already been mapped by the RestProducer from camel-core, and we do not want
comment|// the header to included as HTTP header also (eg as duplicate value)
if|if
condition|(
operator|!
name|answer
condition|)
block|{
if|if
condition|(
name|templateUri
operator|!=
literal|null
condition|)
block|{
name|String
name|token
init|=
literal|"{"
operator|+
name|headerName
operator|+
literal|"}"
decl_stmt|;
if|if
condition|(
name|templateUri
operator|.
name|contains
argument_list|(
name|token
argument_list|)
condition|)
block|{
name|answer
operator|=
literal|true
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|answer
operator|&&
name|queryParameters
operator|!=
literal|null
condition|)
block|{
name|String
name|token
init|=
literal|"=%7B"
operator|+
name|headerName
operator|+
literal|"%7D"
decl_stmt|;
comment|// encoded values for { }
if|if
condition|(
name|queryParameters
operator|.
name|contains
argument_list|(
name|token
argument_list|)
condition|)
block|{
name|answer
operator|=
literal|true
expr_stmt|;
block|}
block|}
block|}
return|return
name|answer
return|;
block|}
block|}
end_class

end_unit

