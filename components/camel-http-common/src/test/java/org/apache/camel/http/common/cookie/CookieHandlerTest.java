begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.http.common.cookie
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|http
operator|.
name|common
operator|.
name|cookie
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|CookiePolicy
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameters
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
DECL|class|CookieHandlerTest
specifier|public
class|class
name|CookieHandlerTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|cookieHandler
specifier|private
name|CookieHandler
name|cookieHandler
decl_stmt|;
DECL|field|cookiePolicy
specifier|private
name|CookiePolicy
name|cookiePolicy
decl_stmt|;
DECL|field|expectedNumberOfCookieValues
specifier|private
name|int
name|expectedNumberOfCookieValues
decl_stmt|;
DECL|field|uriStr
specifier|private
name|String
name|uriStr
decl_stmt|;
DECL|field|exchange
specifier|private
name|Exchange
name|exchange
decl_stmt|;
DECL|method|CookieHandlerTest (CookieHandler cookieHandler, CookiePolicy cookiePolicy, String uri, int expectedNumberOfCookieValues, String description)
specifier|public
name|CookieHandlerTest
parameter_list|(
name|CookieHandler
name|cookieHandler
parameter_list|,
name|CookiePolicy
name|cookiePolicy
parameter_list|,
name|String
name|uri
parameter_list|,
name|int
name|expectedNumberOfCookieValues
parameter_list|,
name|String
name|description
parameter_list|)
block|{
name|this
operator|.
name|cookieHandler
operator|=
name|cookieHandler
expr_stmt|;
name|this
operator|.
name|cookiePolicy
operator|=
name|cookiePolicy
expr_stmt|;
name|this
operator|.
name|uriStr
operator|=
name|uri
expr_stmt|;
name|this
operator|.
name|expectedNumberOfCookieValues
operator|=
name|expectedNumberOfCookieValues
expr_stmt|;
block|}
comment|/*      * This test tries to set a cookie for domain .example.com from host      * www.example.com or www.sub.example.com According to RFC 2965 section      * 3.3.1 the latter cookie has to be rejected, however if we set the cookie      * policy to ACCEPT_ALL the cookie will be accepted again. If a cookie is      * set, the resulting Cookie header has two lines, one containing the      * version and one the (single) cookie.      */
annotation|@
name|Parameters
argument_list|(
name|name
operator|=
literal|"{index}: {4} policy for {2} returns {3} Cookie header lines"
argument_list|)
DECL|method|data ()
specifier|public
specifier|static
name|Iterable
argument_list|<
name|Object
index|[]
argument_list|>
name|data
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|Object
index|[]
index|[]
block|{
block|{
operator|new
name|InstanceCookieHandler
argument_list|()
block|,
name|CookiePolicy
operator|.
name|ACCEPT_ORIGINAL_SERVER
block|,
literal|"http://www.example.com/acme/foo"
block|,
literal|2
block|,
literal|"InstanceCookieHandler with ACCEPT_ORIGINAL_SERVER"
block|}
block|,
block|{
operator|new
name|InstanceCookieHandler
argument_list|()
block|,
name|CookiePolicy
operator|.
name|ACCEPT_ORIGINAL_SERVER
block|,
literal|"http://www.sub.example.com/acme/foo"
block|,
literal|0
block|,
literal|"InstanceCookieHandler with ACCEPT_ORIGINAL_SERVER"
block|}
block|,
block|{
operator|new
name|InstanceCookieHandler
argument_list|()
block|,
name|CookiePolicy
operator|.
name|ACCEPT_ALL
block|,
literal|"http://www.sub.example.com/acme/foo"
block|,
literal|2
block|,
literal|"InstanceCookieHandler with ACCEPT_ALL"
block|}
block|,
block|{
operator|new
name|ExchangeCookieHandler
argument_list|()
block|,
name|CookiePolicy
operator|.
name|ACCEPT_ORIGINAL_SERVER
block|,
literal|"http://www.example.com/acme/foo"
block|,
literal|2
block|,
literal|"ExchangeCookieHandler with ACCEPT_ORIGINAL_SERVER"
block|}
block|,
block|{
operator|new
name|ExchangeCookieHandler
argument_list|()
block|,
name|CookiePolicy
operator|.
name|ACCEPT_ORIGINAL_SERVER
block|,
literal|"http://www.sub.example.com/acme/foo"
block|,
literal|0
block|,
literal|"ExchangeCookieHandler with ACCEPT_ORIGINAL_SERVER"
block|}
block|,
block|{
operator|new
name|ExchangeCookieHandler
argument_list|()
block|,
name|CookiePolicy
operator|.
name|ACCEPT_ALL
block|,
literal|"http://www.sub.example.com/acme/foo"
block|,
literal|2
block|,
literal|"ExchangeCookieHandler with ACCEPT_ALL"
block|}
block|}
argument_list|)
return|;
block|}
annotation|@
name|Override
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|exchange
operator|=
name|createExchangeWithBody
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setReceiveAndTestCookie ()
specifier|public
name|void
name|setReceiveAndTestCookie
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
name|URI
name|uri
init|=
operator|new
name|URI
argument_list|(
name|uriStr
argument_list|)
decl_stmt|;
name|cookieHandler
operator|.
name|setCookiePolicy
argument_list|(
name|cookiePolicy
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|headerMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|headerMap
operator|.
name|put
argument_list|(
literal|"Set-Cookie"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"Customer=\"WILE_E_COYOTE\";Version=1;Path=\"/acme\";Domain=\".example.com\""
argument_list|)
argument_list|)
expr_stmt|;
name|cookieHandler
operator|.
name|storeCookies
argument_list|(
name|exchange
argument_list|,
name|uri
argument_list|,
name|headerMap
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|cookieHeaders
init|=
name|cookieHandler
operator|.
name|loadCookies
argument_list|(
name|exchange
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|cookieHeaders
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|cookieHeaders
operator|.
name|get
argument_list|(
literal|"Cookie"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedNumberOfCookieValues
argument_list|,
name|cookieHeaders
operator|.
name|get
argument_list|(
literal|"Cookie"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

