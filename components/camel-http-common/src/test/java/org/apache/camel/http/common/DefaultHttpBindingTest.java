begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.http.common
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|http
operator|.
name|common
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|DefaultHttpBindingTest
specifier|public
class|class
name|DefaultHttpBindingTest
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Test
DECL|method|testConvertDate ()
specifier|public
name|void
name|testConvertDate
parameter_list|()
throws|throws
name|Exception
block|{
name|DefaultHttpBinding
name|binding
init|=
operator|new
name|DefaultHttpBinding
argument_list|()
decl_stmt|;
name|Date
name|date
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|Exchange
name|exchange
init|=
name|super
operator|.
name|createExchangeWithBody
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|String
name|value
init|=
name|binding
operator|.
name|convertHeaderValueToString
argument_list|(
name|exchange
argument_list|,
name|date
argument_list|)
decl_stmt|;
name|assertNotEquals
argument_list|(
name|value
argument_list|,
name|date
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|value
argument_list|,
name|DefaultHttpBinding
operator|.
name|getHttpDateFormat
argument_list|()
operator|.
name|format
argument_list|(
name|date
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConvertDateTypeConverter ()
specifier|public
name|void
name|testConvertDateTypeConverter
parameter_list|()
throws|throws
name|Exception
block|{
name|DefaultHttpBinding
name|binding
init|=
operator|new
name|DefaultHttpBinding
argument_list|()
decl_stmt|;
name|Date
name|date
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|Exchange
name|exchange
init|=
name|super
operator|.
name|createExchangeWithBody
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|setProperty
argument_list|(
name|DefaultHttpBinding
operator|.
name|DATE_LOCALE_CONVERSION
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|String
name|value
init|=
name|binding
operator|.
name|convertHeaderValueToString
argument_list|(
name|exchange
argument_list|,
name|date
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|value
argument_list|,
name|date
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConvertLocale ()
specifier|public
name|void
name|testConvertLocale
parameter_list|()
throws|throws
name|Exception
block|{
name|DefaultHttpBinding
name|binding
init|=
operator|new
name|DefaultHttpBinding
argument_list|()
decl_stmt|;
name|Locale
name|l
init|=
name|Locale
operator|.
name|SIMPLIFIED_CHINESE
decl_stmt|;
name|Exchange
name|exchange
init|=
name|super
operator|.
name|createExchangeWithBody
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|String
name|value
init|=
name|binding
operator|.
name|convertHeaderValueToString
argument_list|(
name|exchange
argument_list|,
name|l
argument_list|)
decl_stmt|;
name|assertNotEquals
argument_list|(
name|value
argument_list|,
name|l
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"zh-CN"
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConvertLocaleTypeConverter ()
specifier|public
name|void
name|testConvertLocaleTypeConverter
parameter_list|()
throws|throws
name|Exception
block|{
name|DefaultHttpBinding
name|binding
init|=
operator|new
name|DefaultHttpBinding
argument_list|()
decl_stmt|;
name|Locale
name|l
init|=
name|Locale
operator|.
name|SIMPLIFIED_CHINESE
decl_stmt|;
name|Exchange
name|exchange
init|=
name|super
operator|.
name|createExchangeWithBody
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|setProperty
argument_list|(
name|DefaultHttpBinding
operator|.
name|DATE_LOCALE_CONVERSION
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|String
name|value
init|=
name|binding
operator|.
name|convertHeaderValueToString
argument_list|(
name|exchange
argument_list|,
name|l
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|value
argument_list|,
name|l
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

