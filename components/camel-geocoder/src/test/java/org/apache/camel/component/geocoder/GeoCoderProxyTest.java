begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.geocoder
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|geocoder
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|maps
operator|.
name|GeoApiContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|maps
operator|.
name|GeocodingApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|maps
operator|.
name|GeocodingApiRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|maps
operator|.
name|model
operator|.
name|GeocodingResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|maps
operator|.
name|model
operator|.
name|LatLng
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
annotation|@
name|Ignore
argument_list|(
literal|"This test should be executed manually with a proxy set up"
argument_list|)
DECL|class|GeoCoderProxyTest
specifier|public
class|class
name|GeoCoderProxyTest
extends|extends
name|GeoCoderApiKeyTestBase
block|{
annotation|@
name|Test
DECL|method|testGeoCoderProxyNoAuth ()
specifier|public
name|void
name|testGeoCoderProxyNoAuth
parameter_list|()
throws|throws
name|Exception
block|{
name|GeoCoderEndpoint
name|endpoint
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"geocoder:address:current?headersOnly=true&proxyHost=localhost&proxyPort=8888&apiKey="
operator|+
name|getApiKey
argument_list|()
argument_list|,
name|GeoCoderEndpoint
operator|.
name|class
argument_list|)
decl_stmt|;
name|GeoApiContext
name|context
init|=
name|endpoint
operator|.
name|createGeoApiContext
argument_list|()
decl_stmt|;
name|GeocodingApiRequest
name|geocodingApiRequest
init|=
name|GeocodingApi
operator|.
name|reverseGeocode
argument_list|(
name|context
argument_list|,
operator|new
name|LatLng
argument_list|(
literal|45.4643
argument_list|,
literal|9.1895
argument_list|)
argument_list|)
decl_stmt|;
name|GeocodingResult
index|[]
name|results
init|=
name|geocodingApiRequest
operator|.
name|await
argument_list|()
decl_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Response {}"
argument_list|,
name|results
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGeoCoderWithAuth ()
specifier|public
name|void
name|testGeoCoderWithAuth
parameter_list|()
throws|throws
name|Exception
block|{
name|GeoCoderEndpoint
name|endpoint
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"geocoder:address:current?headersOnly=true&proxyHost=localhost&proxyPort=8888&proxyAuthMethod=Basic&proxyAuthUsername=proxy&proxyAuthPassword=proxy&apiKey="
operator|+
name|getApiKey
argument_list|()
argument_list|,
name|GeoCoderEndpoint
operator|.
name|class
argument_list|)
decl_stmt|;
name|GeoApiContext
name|context
init|=
name|endpoint
operator|.
name|createGeoApiContext
argument_list|()
decl_stmt|;
name|GeocodingApiRequest
name|geocodingApiRequest
init|=
name|GeocodingApi
operator|.
name|reverseGeocode
argument_list|(
name|context
argument_list|,
operator|new
name|LatLng
argument_list|(
literal|45.4643
argument_list|,
literal|9.1895
argument_list|)
argument_list|)
decl_stmt|;
name|GeocodingResult
index|[]
name|results
init|=
name|geocodingApiRequest
operator|.
name|await
argument_list|()
decl_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Response {}"
argument_list|,
name|results
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

