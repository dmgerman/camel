begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.corda
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyPair
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyPairGenerator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|NoSuchAlgorithmException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PublicKey
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|ZipEntry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|ZipOutputStream
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|net
operator|.
name|corda
operator|.
name|core
operator|.
name|contracts
operator|.
name|OwnableState
import|;
end_import

begin_import
import|import
name|net
operator|.
name|corda
operator|.
name|core
operator|.
name|crypto
operator|.
name|SecureHash
import|;
end_import

begin_import
import|import
name|net
operator|.
name|corda
operator|.
name|core
operator|.
name|flows
operator|.
name|FlowLogic
import|;
end_import

begin_import
import|import
name|net
operator|.
name|corda
operator|.
name|core
operator|.
name|identity
operator|.
name|AbstractParty
import|;
end_import

begin_import
import|import
name|net
operator|.
name|corda
operator|.
name|core
operator|.
name|identity
operator|.
name|AnonymousParty
import|;
end_import

begin_import
import|import
name|net
operator|.
name|corda
operator|.
name|core
operator|.
name|identity
operator|.
name|CordaX500Name
import|;
end_import

begin_import
import|import
name|net
operator|.
name|corda
operator|.
name|core
operator|.
name|identity
operator|.
name|Party
import|;
end_import

begin_import
import|import
name|net
operator|.
name|corda
operator|.
name|core
operator|.
name|node
operator|.
name|services
operator|.
name|Vault
import|;
end_import

begin_import
import|import
name|net
operator|.
name|corda
operator|.
name|core
operator|.
name|node
operator|.
name|services
operator|.
name|vault
operator|.
name|AttachmentQueryCriteria
import|;
end_import

begin_import
import|import
name|net
operator|.
name|corda
operator|.
name|core
operator|.
name|node
operator|.
name|services
operator|.
name|vault
operator|.
name|AttachmentSort
import|;
end_import

begin_import
import|import
name|net
operator|.
name|corda
operator|.
name|core
operator|.
name|node
operator|.
name|services
operator|.
name|vault
operator|.
name|ColumnPredicate
import|;
end_import

begin_import
import|import
name|net
operator|.
name|corda
operator|.
name|core
operator|.
name|node
operator|.
name|services
operator|.
name|vault
operator|.
name|EqualityComparisonOperator
import|;
end_import

begin_import
import|import
name|net
operator|.
name|corda
operator|.
name|core
operator|.
name|node
operator|.
name|services
operator|.
name|vault
operator|.
name|PageSpecification
import|;
end_import

begin_import
import|import
name|net
operator|.
name|corda
operator|.
name|core
operator|.
name|node
operator|.
name|services
operator|.
name|vault
operator|.
name|QueryCriteria
import|;
end_import

begin_import
import|import
name|net
operator|.
name|corda
operator|.
name|core
operator|.
name|node
operator|.
name|services
operator|.
name|vault
operator|.
name|Sort
import|;
end_import

begin_import
import|import
name|net
operator|.
name|corda
operator|.
name|core
operator|.
name|node
operator|.
name|services
operator|.
name|vault
operator|.
name|SortAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Produce
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ProducerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|net
operator|.
name|corda
operator|.
name|core
operator|.
name|node
operator|.
name|services
operator|.
name|vault
operator|.
name|QueryCriteriaUtils
operator|.
name|DEFAULT_PAGE_NUM
import|;
end_import

begin_import
import|import static
name|net
operator|.
name|corda
operator|.
name|core
operator|.
name|node
operator|.
name|services
operator|.
name|vault
operator|.
name|QueryCriteriaUtils
operator|.
name|MAX_PAGE_SIZE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|ADD_VAULT_TRANSACTION_NOTE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|ARGUMENTS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|ATTACHMENT_EXISTS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|ATTACHMENT_QUERY_CRITERIA
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|CLEAR_NETWORK_MAP_CACHE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|CURRENT_NODE_TIME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|DRAINING_MODE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|EXACT_MATCH
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|GET_PROTOCOL_VERSION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|GET_VAULT_TRANSACTION_NOTES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|IS_FLOWS_DRAINING_MODE_ENABLED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|NETWORK_MAP_SNAPSHOT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|NODE_INFO
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|NODE_INFO_FROM_PARTY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|NOTARY_IDENTITIES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|NOTARY_PARTY_FROM_X500_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|OPEN_ATTACHMENT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|OPERATION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|PAGE_SPECIFICATION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|PARTIES_FROM_KEY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|PARTIES_FROM_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|QUERY_ATTACHMENTS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|QUERY_CRITERIA
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|REGISTERED_FLOWS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|SECURE_HASH
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|SET_FLOWS_DRAINING_MODE_ENABLED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|SORT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|START_FLOW_DYNAMIC
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|STATE_MACHINE_RECORDED_TRANSACTION_MAPPING_SNAPSHOT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|STATE_MACHINE_SNAPSHOT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|UPLOAD_ATTACHMENT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|VAULT_QUERY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|VAULT_QUERY_BY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|VAULT_QUERY_BY_CRITERIA
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|VAULT_QUERY_BY_WITH_PAGING_SPEC
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|VAULT_QUERY_BY_WITH_SORTING
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|WELL_KNOWN_PARTY_FROM_ANONYMOUS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|corda
operator|.
name|CordaConstants
operator|.
name|WELL_KNOWN_PARTY_FROM_X500_NAME
import|;
end_import

begin_class
annotation|@
name|Ignore
argument_list|(
literal|"This integration test requires a locally running corda node such cordapp-template-java"
argument_list|)
DECL|class|CordaProducerTest
specifier|public
class|class
name|CordaProducerTest
extends|extends
name|CordaTestSupport
block|{
DECL|field|TEST_SHA_256
specifier|private
specifier|static
specifier|final
name|SecureHash
operator|.
name|SHA256
name|TEST_SHA_256
init|=
name|SecureHash
operator|.
name|parse
argument_list|(
literal|"6D1687C143DF792A011A1E80670A4E4E0C25D0D87A39514409B1ABFC2043581F"
argument_list|)
decl_stmt|;
annotation|@
name|Produce
argument_list|(
name|uri
operator|=
literal|"direct:start"
argument_list|)
DECL|field|template
specifier|protected
name|ProducerTemplate
name|template
decl_stmt|;
annotation|@
name|Override
DECL|method|isUseAdviceWith ()
specifier|public
name|boolean
name|isUseAdviceWith
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Test
DECL|method|currentNodeTimeTest ()
specifier|public
name|void
name|currentNodeTimeTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|CURRENT_NODE_TIME
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getProtocolVersionTest ()
specifier|public
name|void
name|getProtocolVersionTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|GET_PROTOCOL_VERSION
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|networkMapSnapshotTest ()
specifier|public
name|void
name|networkMapSnapshotTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|NETWORK_MAP_SNAPSHOT
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|stateMachinesSnapshotTest ()
specifier|public
name|void
name|stateMachinesSnapshotTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|STATE_MACHINE_SNAPSHOT
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|stateMachineRecordedTransactionMappingSnapshotTest ()
specifier|public
name|void
name|stateMachineRecordedTransactionMappingSnapshotTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|STATE_MACHINE_RECORDED_TRANSACTION_MAPPING_SNAPSHOT
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|registeredFlowsTest ()
specifier|public
name|void
name|registeredFlowsTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|REGISTERED_FLOWS
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|clearNetworkMapCacheTest ()
specifier|public
name|void
name|clearNetworkMapCacheTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|CLEAR_NETWORK_MAP_CACHE
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|isFlowsDrainingModeEnabledTest ()
specifier|public
name|void
name|isFlowsDrainingModeEnabledTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|IS_FLOWS_DRAINING_MODE_ENABLED
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setFlowsDrainingModeEnabledTest ()
specifier|public
name|void
name|setFlowsDrainingModeEnabledTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|SET_FLOWS_DRAINING_MODE_ENABLED
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|DRAINING_MODE
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|notaryIdentitiesTest ()
specifier|public
name|void
name|notaryIdentitiesTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|NOTARY_IDENTITIES
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|nodeInfoTest ()
specifier|public
name|void
name|nodeInfoTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|NODE_INFO
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addVaultTransactionNoteTest ()
specifier|public
name|void
name|addVaultTransactionNoteTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|"Some note"
argument_list|,
name|OPERATION
argument_list|,
name|ADD_VAULT_TRANSACTION_NOTE
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|SECURE_HASH
argument_list|,
name|TEST_SHA_256
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getVaultTransactionNotesTest ()
specifier|public
name|void
name|getVaultTransactionNotesTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|GET_VAULT_TRANSACTION_NOTES
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|SECURE_HASH
argument_list|,
name|TEST_SHA_256
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|uploadAttachmentTest ()
specifier|public
name|void
name|uploadAttachmentTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|UPLOAD_ATTACHMENT
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|zipIt
argument_list|(
literal|"HELLO"
operator|+
name|System
operator|.
name|nanoTime
argument_list|()
argument_list|,
literal|"test1.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|SECURE_HASH
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|attachmentExistsTest ()
specifier|public
name|void
name|attachmentExistsTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|ATTACHMENT_EXISTS
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|SECURE_HASH
argument_list|,
name|TEST_SHA_256
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Boolean
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|openAttachmentTest ()
specifier|public
name|void
name|openAttachmentTest
parameter_list|()
throws|throws
name|Exception
block|{
comment|//Setup node with attachment
name|Exchange
name|uploadExchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|UPLOAD_ATTACHMENT
argument_list|)
decl_stmt|;
name|uploadExchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|zipIt
argument_list|(
literal|"HELLO"
operator|+
name|System
operator|.
name|nanoTime
argument_list|()
argument_list|,
literal|"test2.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|uploadExchange
argument_list|)
expr_stmt|;
name|Object
name|hash
init|=
name|uploadExchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|SECURE_HASH
argument_list|)
decl_stmt|;
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|OPEN_ATTACHMENT
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|SECURE_HASH
argument_list|,
name|hash
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|InputStream
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|InputStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|queryAttachmentsTest ()
specifier|public
name|void
name|queryAttachmentsTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|QUERY_ATTACHMENTS
argument_list|)
decl_stmt|;
name|AttachmentQueryCriteria
operator|.
name|AttachmentsQueryCriteria
name|queryCriteria
init|=
operator|new
name|AttachmentQueryCriteria
operator|.
name|AttachmentsQueryCriteria
argument_list|(
operator|new
name|ColumnPredicate
operator|.
name|EqualityComparison
argument_list|(
name|EqualityComparisonOperator
operator|.
name|EQUAL
argument_list|,
literal|"Daredevil"
argument_list|)
argument_list|)
decl_stmt|;
name|AttachmentSort
name|attachmentSort
init|=
literal|null
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|ATTACHMENT_QUERY_CRITERIA
argument_list|,
name|queryCriteria
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|SORT
argument_list|,
name|attachmentSort
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|nodeInfoFromPartyTest ()
specifier|public
name|void
name|nodeInfoFromPartyTest
parameter_list|()
throws|throws
name|Exception
block|{
comment|//Expects IntegrationWhiteList is deployed on the node
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|NODE_INFO_FROM_PARTY
argument_list|)
decl_stmt|;
name|PublicKey
name|pub
init|=
name|generatePublicKey
argument_list|()
decl_stmt|;
name|CordaX500Name
name|cordaX500Name1
init|=
operator|new
name|CordaX500Name
argument_list|(
literal|"PartyA"
argument_list|,
literal|"London"
argument_list|,
literal|"GB"
argument_list|)
decl_stmt|;
name|Party
name|party
init|=
operator|new
name|Party
argument_list|(
name|cordaX500Name1
argument_list|,
name|pub
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|party
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|notaryPartyFromX500NameTest ()
specifier|public
name|void
name|notaryPartyFromX500NameTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|NOTARY_PARTY_FROM_X500_NAME
argument_list|)
decl_stmt|;
name|CordaX500Name
name|cordaX500Name
init|=
operator|new
name|CordaX500Name
argument_list|(
literal|"Notary"
argument_list|,
literal|"London"
argument_list|,
literal|"GB"
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|cordaX500Name
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|partiesFromNameTest ()
specifier|public
name|void
name|partiesFromNameTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|"A"
argument_list|,
name|OPERATION
argument_list|,
name|PARTIES_FROM_NAME
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|EXACT_MATCH
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|partyFromKeyTest ()
specifier|public
name|void
name|partyFromKeyTest
parameter_list|()
throws|throws
name|Exception
block|{
comment|//Expects IntegrationWhiteList is deployed on the node
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|PARTIES_FROM_KEY
argument_list|)
decl_stmt|;
name|PublicKey
name|pub
init|=
name|generatePublicKey
argument_list|()
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|pub
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|wellKnownPartyFromX500NameTest ()
specifier|public
name|void
name|wellKnownPartyFromX500NameTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|WELL_KNOWN_PARTY_FROM_X500_NAME
argument_list|)
decl_stmt|;
name|CordaX500Name
name|cordaX500Name1
init|=
operator|new
name|CordaX500Name
argument_list|(
literal|"PartyA"
argument_list|,
literal|"London"
argument_list|,
literal|"GB"
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|cordaX500Name1
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|wellKnownPartyFromAnonymousTest ()
specifier|public
name|void
name|wellKnownPartyFromAnonymousTest
parameter_list|()
throws|throws
name|Exception
block|{
comment|//Expects IntegrationWhiteList is deployed on the node
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|WELL_KNOWN_PARTY_FROM_ANONYMOUS
argument_list|)
decl_stmt|;
name|PublicKey
name|pub
init|=
name|generatePublicKey
argument_list|()
decl_stmt|;
name|AbstractParty
name|party
init|=
operator|new
name|AnonymousParty
argument_list|(
name|pub
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|party
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|startFlowDynamicTest ()
specifier|public
name|void
name|startFlowDynamicTest
parameter_list|()
throws|throws
name|Exception
block|{
comment|//Expects CamelFlow is deployed on the node
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
literal|null
argument_list|,
name|OPERATION
argument_list|,
name|START_FLOW_DYNAMIC
argument_list|)
decl_stmt|;
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"Hello"
block|}
decl_stmt|;
name|Class
argument_list|<
name|FlowLogic
argument_list|<
name|String
argument_list|>
argument_list|>
name|aClass
init|=
operator|(
name|Class
argument_list|<
name|FlowLogic
argument_list|<
name|String
argument_list|>
argument_list|>
operator|)
name|Class
operator|.
name|forName
argument_list|(
literal|"org.apache.camel.component.corda.CamelFlow"
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|aClass
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|ARGUMENTS
argument_list|,
name|args
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Hello world!"
argument_list|,
name|body
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|vaultQueryTest ()
specifier|public
name|void
name|vaultQueryTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
name|OwnableState
operator|.
name|class
argument_list|,
name|OPERATION
argument_list|,
name|VAULT_QUERY
argument_list|)
decl_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|vaultQueryByTest ()
specifier|public
name|void
name|vaultQueryByTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
name|OwnableState
operator|.
name|class
argument_list|,
name|OPERATION
argument_list|,
name|VAULT_QUERY_BY
argument_list|)
decl_stmt|;
name|QueryCriteria
operator|.
name|VaultQueryCriteria
name|criteria
init|=
operator|new
name|QueryCriteria
operator|.
name|VaultQueryCriteria
argument_list|(
name|Vault
operator|.
name|StateStatus
operator|.
name|CONSUMED
argument_list|)
decl_stmt|;
name|PageSpecification
name|pageSpec
init|=
operator|new
name|PageSpecification
argument_list|(
name|DEFAULT_PAGE_NUM
argument_list|,
name|MAX_PAGE_SIZE
argument_list|)
decl_stmt|;
name|Sort
operator|.
name|SortColumn
name|sortByUid
init|=
operator|new
name|Sort
operator|.
name|SortColumn
argument_list|(
operator|new
name|SortAttribute
operator|.
name|Standard
argument_list|(
name|Sort
operator|.
name|LinearStateAttribute
operator|.
name|UUID
argument_list|)
argument_list|,
name|Sort
operator|.
name|Direction
operator|.
name|DESC
argument_list|)
decl_stmt|;
name|Sort
name|sorting
init|=
operator|new
name|Sort
argument_list|(
name|ImmutableSet
operator|.
name|of
argument_list|(
name|sortByUid
argument_list|)
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|QUERY_CRITERIA
argument_list|,
name|criteria
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|PAGE_SPECIFICATION
argument_list|,
name|pageSpec
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|SORT
argument_list|,
name|sorting
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|vaultQueryByCriteriaTest ()
specifier|public
name|void
name|vaultQueryByCriteriaTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
name|OwnableState
operator|.
name|class
argument_list|,
name|OPERATION
argument_list|,
name|VAULT_QUERY_BY_CRITERIA
argument_list|)
decl_stmt|;
name|QueryCriteria
operator|.
name|VaultQueryCriteria
name|criteria
init|=
operator|new
name|QueryCriteria
operator|.
name|VaultQueryCriteria
argument_list|(
name|Vault
operator|.
name|StateStatus
operator|.
name|CONSUMED
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|QUERY_CRITERIA
argument_list|,
name|criteria
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|vaultQueryByWithPagingSpecTest ()
specifier|public
name|void
name|vaultQueryByWithPagingSpecTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
name|OwnableState
operator|.
name|class
argument_list|,
name|OPERATION
argument_list|,
name|VAULT_QUERY_BY_WITH_PAGING_SPEC
argument_list|)
decl_stmt|;
name|QueryCriteria
operator|.
name|VaultQueryCriteria
name|criteria
init|=
operator|new
name|QueryCriteria
operator|.
name|VaultQueryCriteria
argument_list|(
name|Vault
operator|.
name|StateStatus
operator|.
name|CONSUMED
argument_list|)
decl_stmt|;
name|PageSpecification
name|pageSpec
init|=
operator|new
name|PageSpecification
argument_list|(
name|DEFAULT_PAGE_NUM
argument_list|,
name|MAX_PAGE_SIZE
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|QUERY_CRITERIA
argument_list|,
name|criteria
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|PAGE_SPECIFICATION
argument_list|,
name|pageSpec
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|vaultQueryByWithSortingTest ()
specifier|public
name|void
name|vaultQueryByWithSortingTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBodyAndHeader
argument_list|(
name|OwnableState
operator|.
name|class
argument_list|,
name|OPERATION
argument_list|,
name|VAULT_QUERY_BY_WITH_SORTING
argument_list|)
decl_stmt|;
name|QueryCriteria
operator|.
name|VaultQueryCriteria
name|criteria
init|=
operator|new
name|QueryCriteria
operator|.
name|VaultQueryCriteria
argument_list|(
name|Vault
operator|.
name|StateStatus
operator|.
name|CONSUMED
argument_list|)
decl_stmt|;
name|Sort
operator|.
name|SortColumn
name|sortByUid
init|=
operator|new
name|Sort
operator|.
name|SortColumn
argument_list|(
operator|new
name|SortAttribute
operator|.
name|Standard
argument_list|(
name|Sort
operator|.
name|LinearStateAttribute
operator|.
name|UUID
argument_list|)
argument_list|,
name|Sort
operator|.
name|Direction
operator|.
name|DESC
argument_list|)
decl_stmt|;
name|Sort
name|sorting
init|=
operator|new
name|Sort
argument_list|(
name|ImmutableSet
operator|.
name|of
argument_list|(
name|sortByUid
argument_list|)
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|QUERY_CRITERIA
argument_list|,
name|criteria
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|SORT
argument_list|,
name|sorting
argument_list|)
expr_stmt|;
name|template
operator|.
name|send
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|Object
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Object
name|exception
init|=
name|exchange
operator|.
name|getException
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
DECL|method|zipIt (String in, String name)
specifier|private
name|ByteArrayInputStream
name|zipIt
parameter_list|(
name|String
name|in
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
try|try
block|{
name|ZipOutputStream
name|zos
init|=
operator|new
name|ZipOutputStream
argument_list|(
name|baos
argument_list|)
decl_stmt|;
name|ZipEntry
name|entry
init|=
operator|new
name|ZipEntry
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|zos
operator|.
name|putNextEntry
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|zos
operator|.
name|write
argument_list|(
name|in
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|zos
operator|.
name|closeEntry
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|ioe
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
operator|new
name|ByteArrayInputStream
argument_list|(
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
return|;
block|}
DECL|method|generatePublicKey ()
specifier|private
name|PublicKey
name|generatePublicKey
parameter_list|()
throws|throws
name|NoSuchAlgorithmException
block|{
name|KeyPairGenerator
name|kpg
init|=
name|KeyPairGenerator
operator|.
name|getInstance
argument_list|(
literal|"RSA"
argument_list|)
decl_stmt|;
name|kpg
operator|.
name|initialize
argument_list|(
literal|2048
argument_list|)
expr_stmt|;
name|KeyPair
name|kp
init|=
name|kpg
operator|.
name|generateKeyPair
argument_list|()
decl_stmt|;
return|return
name|kp
operator|.
name|getPublic
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"direct:start"
argument_list|)
operator|.
name|to
argument_list|(
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

