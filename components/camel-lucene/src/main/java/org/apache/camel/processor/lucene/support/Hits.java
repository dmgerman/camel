begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.processor.lucene.support
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|lucene
operator|.
name|support
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
DECL|class|Hits
specifier|public
class|class
name|Hits
implements|implements
name|Serializable
block|{
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
DECL|field|numberOfHits
specifier|private
name|int
name|numberOfHits
decl_stmt|;
DECL|field|hit
specifier|private
name|List
argument_list|<
name|Hit
argument_list|>
name|hit
decl_stmt|;
DECL|method|getNumberOfHits ()
specifier|public
name|int
name|getNumberOfHits
parameter_list|()
block|{
return|return
name|numberOfHits
return|;
block|}
DECL|method|setNumberOfHits (int value)
specifier|public
name|void
name|setNumberOfHits
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|numberOfHits
operator|=
name|value
expr_stmt|;
block|}
DECL|method|getHit ()
specifier|public
name|List
argument_list|<
name|Hit
argument_list|>
name|getHit
parameter_list|()
block|{
if|if
condition|(
name|hit
operator|==
literal|null
condition|)
block|{
name|hit
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
return|return
name|hit
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"Hits[numberOfHits="
operator|+
name|numberOfHits
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

