begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.spring.boot
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|boot
package|;
end_package

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|builder
operator|.
name|SpringApplicationBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|context
operator|.
name|web
operator|.
name|SpringBootServletInitializer
import|;
end_import

begin_class
annotation|@
name|Deprecated
DECL|class|FatWarInitializer
specifier|public
specifier|abstract
class|class
name|FatWarInitializer
extends|extends
name|SpringBootServletInitializer
block|{
annotation|@
name|Override
DECL|method|configure (SpringApplicationBuilder application)
specifier|protected
name|SpringApplicationBuilder
name|configure
parameter_list|(
name|SpringApplicationBuilder
name|application
parameter_list|)
block|{
return|return
name|application
operator|.
name|sources
argument_list|(
name|routerClass
argument_list|()
argument_list|)
return|;
block|}
DECL|method|routerClass ()
specifier|protected
specifier|abstract
name|Class
argument_list|<
name|?
extends|extends
name|FatJarRouter
argument_list|>
name|routerClass
parameter_list|()
function_decl|;
block|}
end_class

end_unit

