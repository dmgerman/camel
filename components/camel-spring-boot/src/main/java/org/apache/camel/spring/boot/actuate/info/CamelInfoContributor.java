begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.spring.boot.actuate.info
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|boot
operator|.
name|actuate
operator|.
name|info
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|actuate
operator|.
name|info
operator|.
name|Info
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|actuate
operator|.
name|info
operator|.
name|InfoContributor
import|;
end_import

begin_comment
comment|/**  * Camel {@link InfoContributor}  */
end_comment

begin_class
DECL|class|CamelInfoContributor
specifier|public
class|class
name|CamelInfoContributor
implements|implements
name|InfoContributor
block|{
DECL|field|camelContext
specifier|private
specifier|final
name|CamelContext
name|camelContext
decl_stmt|;
DECL|method|CamelInfoContributor (CamelContext camelContext)
specifier|public
name|CamelInfoContributor
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|)
block|{
name|this
operator|.
name|camelContext
operator|=
name|camelContext
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|contribute (Info.Builder builder)
specifier|public
name|void
name|contribute
parameter_list|(
name|Info
operator|.
name|Builder
name|builder
parameter_list|)
block|{
if|if
condition|(
name|camelContext
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|withDetail
argument_list|(
literal|"camel.name"
argument_list|,
name|camelContext
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|withDetail
argument_list|(
literal|"camel.version"
argument_list|,
name|camelContext
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|camelContext
operator|.
name|getUptime
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|withDetail
argument_list|(
literal|"camel.uptime"
argument_list|,
name|camelContext
operator|.
name|getUptime
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|withDetail
argument_list|(
literal|"camel.uptimeMillis"
argument_list|,
name|camelContext
operator|.
name|getUptimeMillis
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|withDetail
argument_list|(
literal|"camel.status"
argument_list|,
name|camelContext
operator|.
name|getStatus
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

