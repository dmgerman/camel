begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.spring.boot.security
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|boot
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|boot
operator|.
name|CamelAutoConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|jsse
operator|.
name|GlobalSSLContextParametersSupplier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|jsse
operator|.
name|SSLContextParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|AutoConfigureBefore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|condition
operator|.
name|ConditionMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|condition
operator|.
name|ConditionOutcome
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|condition
operator|.
name|SpringBootCondition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|context
operator|.
name|properties
operator|.
name|EnableConfigurationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|context
operator|.
name|properties
operator|.
name|bind
operator|.
name|Bindable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|context
operator|.
name|properties
operator|.
name|bind
operator|.
name|Binder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Bean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|ConditionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Conditional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|type
operator|.
name|AnnotatedTypeMetadata
import|;
end_import

begin_class
annotation|@
name|Configuration
annotation|@
name|AutoConfigureBefore
argument_list|(
name|CamelAutoConfiguration
operator|.
name|class
argument_list|)
annotation|@
name|EnableConfigurationProperties
argument_list|(
name|CamelSSLConfigurationProperties
operator|.
name|class
argument_list|)
annotation|@
name|Conditional
argument_list|(
name|CamelSSLAutoConfiguration
operator|.
name|Condition
operator|.
name|class
argument_list|)
DECL|class|CamelSSLAutoConfiguration
specifier|public
class|class
name|CamelSSLAutoConfiguration
block|{
annotation|@
name|Bean
DECL|method|sslContextParametersSupplier (CamelSSLConfigurationProperties properties)
specifier|public
name|GlobalSSLContextParametersSupplier
name|sslContextParametersSupplier
parameter_list|(
name|CamelSSLConfigurationProperties
name|properties
parameter_list|)
block|{
specifier|final
name|SSLContextParameters
name|config
init|=
name|properties
operator|.
name|getConfig
argument_list|()
operator|!=
literal|null
condition|?
name|properties
operator|.
name|getConfig
argument_list|()
else|:
operator|new
name|SSLContextParameters
argument_list|()
decl_stmt|;
return|return
parameter_list|()
lambda|->
name|config
return|;
block|}
DECL|class|Condition
specifier|public
specifier|static
class|class
name|Condition
extends|extends
name|SpringBootCondition
block|{
annotation|@
name|Override
DECL|method|getMatchOutcome (ConditionContext context, AnnotatedTypeMetadata annotatedTypeMetadata)
specifier|public
name|ConditionOutcome
name|getMatchOutcome
parameter_list|(
name|ConditionContext
name|context
parameter_list|,
name|AnnotatedTypeMetadata
name|annotatedTypeMetadata
parameter_list|)
block|{
name|Binder
name|binder
init|=
name|Binder
operator|.
name|get
argument_list|(
name|context
operator|.
name|getEnvironment
argument_list|()
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|sslProperties
init|=
name|binder
operator|.
name|bind
argument_list|(
literal|"camel.ssl.config"
argument_list|,
name|Bindable
operator|.
name|mapOf
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|Object
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|orElse
argument_list|(
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
decl_stmt|;
name|ConditionMessage
operator|.
name|Builder
name|message
init|=
name|ConditionMessage
operator|.
name|forCondition
argument_list|(
literal|"camel.ssl.config"
argument_list|)
decl_stmt|;
if|if
condition|(
name|sslProperties
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
return|return
name|ConditionOutcome
operator|.
name|match
argument_list|(
name|message
operator|.
name|because
argument_list|(
literal|"enabled"
argument_list|)
argument_list|)
return|;
block|}
return|return
name|ConditionOutcome
operator|.
name|noMatch
argument_list|(
name|message
operator|.
name|because
argument_list|(
literal|"not enabled"
argument_list|)
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

