begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.spring.boot.actuate.endpoint
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|boot
operator|.
name|actuate
operator|.
name|endpoint
package|;
end_package

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|Duration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
operator|.
name|toList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonInclude
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonProperty
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonPropertyOrder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|health
operator|.
name|HealthCheck
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|health
operator|.
name|HealthCheckConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|health
operator|.
name|HealthCheckHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|actuate
operator|.
name|endpoint
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|context
operator|.
name|properties
operator|.
name|ConfigurationProperties
import|;
end_import

begin_comment
comment|/**  * {@link Endpoint} to expose {@link org.apache.camel.health.HealthCheck} information.  */
end_comment

begin_class
annotation|@
name|ConfigurationProperties
argument_list|(
name|prefix
operator|=
literal|"endpoints."
operator|+
name|CamelHealthCheckEndpoint
operator|.
name|ENDPOINT_ID
argument_list|)
DECL|class|CamelHealthCheckEndpoint
specifier|public
class|class
name|CamelHealthCheckEndpoint
extends|extends
name|AbstractCamelEndpoint
argument_list|<
name|Collection
argument_list|<
name|CamelHealthCheckEndpoint
operator|.
name|HealthCheckResult
argument_list|>
argument_list|>
block|{
DECL|field|ENDPOINT_ID
specifier|public
specifier|static
specifier|final
name|String
name|ENDPOINT_ID
init|=
literal|"camelhealthcheck"
decl_stmt|;
DECL|method|CamelHealthCheckEndpoint (CamelContext camelContext)
specifier|public
name|CamelHealthCheckEndpoint
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|)
block|{
name|super
argument_list|(
name|ENDPOINT_ID
argument_list|,
name|camelContext
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|invoke ()
specifier|public
name|Collection
argument_list|<
name|HealthCheckResult
argument_list|>
name|invoke
parameter_list|()
block|{
return|return
name|HealthCheckHelper
operator|.
name|invoke
argument_list|(
name|getCamelContext
argument_list|()
argument_list|)
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|result
lambda|->
operator|new
name|HealthCheckResult
argument_list|(
name|result
argument_list|,
operator|new
name|Check
argument_list|(
name|result
argument_list|)
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|toList
argument_list|()
argument_list|)
return|;
block|}
comment|// ****************************************
comment|// Used by CamelHealthCheckMvcEndpoint
comment|// ****************************************
DECL|method|query (String id, Map<String, Object> options)
name|Optional
argument_list|<
name|HealthCheckResult
argument_list|>
name|query
parameter_list|(
name|String
name|id
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|options
parameter_list|)
block|{
return|return
name|HealthCheckHelper
operator|.
name|query
argument_list|(
name|getCamelContext
argument_list|()
argument_list|,
name|id
argument_list|,
name|options
argument_list|)
operator|.
name|map
argument_list|(
name|result
lambda|->
operator|new
name|DetailedHealthCheckResult
argument_list|(
name|result
argument_list|,
operator|new
name|DetailedCheck
argument_list|(
name|result
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
DECL|method|invoke (String id, Map<String, Object> options)
name|Optional
argument_list|<
name|HealthCheckResult
argument_list|>
name|invoke
parameter_list|(
name|String
name|id
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|options
parameter_list|)
block|{
return|return
name|HealthCheckHelper
operator|.
name|invoke
argument_list|(
name|getCamelContext
argument_list|()
argument_list|,
name|id
argument_list|,
name|options
argument_list|)
operator|.
name|map
argument_list|(
name|result
lambda|->
operator|new
name|DetailedHealthCheckResult
argument_list|(
name|result
argument_list|,
operator|new
name|DetailedCheck
argument_list|(
name|result
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
comment|// ****************************************
comment|// Wrappers
comment|// ****************************************
annotation|@
name|JsonInclude
argument_list|(
name|JsonInclude
operator|.
name|Include
operator|.
name|NON_EMPTY
argument_list|)
annotation|@
name|JsonPropertyOrder
argument_list|(
block|{
literal|"enabled"
block|,
literal|"interval"
block|,
literal|"failureThreshold"
block|}
argument_list|)
DECL|class|CheckConfiguration
specifier|public
specifier|static
class|class
name|CheckConfiguration
block|{
DECL|field|configuration
specifier|protected
specifier|final
name|HealthCheckConfiguration
name|configuration
decl_stmt|;
DECL|method|CheckConfiguration (HealthCheckConfiguration configuration)
specifier|public
name|CheckConfiguration
parameter_list|(
name|HealthCheckConfiguration
name|configuration
parameter_list|)
block|{
name|this
operator|.
name|configuration
operator|=
name|ObjectHelper
operator|.
name|supplyIfEmpty
argument_list|(
name|configuration
argument_list|,
name|HealthCheckConfiguration
operator|::
operator|new
argument_list|)
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"enabled"
argument_list|)
DECL|method|isEnabled ()
specifier|public
name|Boolean
name|isEnabled
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|isEnabled
argument_list|()
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"interval"
argument_list|)
DECL|method|getDuration ()
specifier|public
name|String
name|getDuration
parameter_list|()
block|{
name|Duration
name|interval
init|=
name|configuration
operator|.
name|getInterval
argument_list|()
decl_stmt|;
return|return
name|interval
operator|!=
literal|null
condition|?
name|interval
operator|.
name|toString
argument_list|()
else|:
literal|null
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"failureThreshold"
argument_list|)
DECL|method|getFailureThreshold ()
specifier|public
name|Integer
name|getFailureThreshold
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getFailureThreshold
argument_list|()
return|;
block|}
block|}
annotation|@
name|JsonInclude
argument_list|(
name|JsonInclude
operator|.
name|Include
operator|.
name|NON_EMPTY
argument_list|)
annotation|@
name|JsonPropertyOrder
argument_list|(
block|{
literal|"id"
block|,
literal|"group"
block|}
argument_list|)
DECL|class|Check
specifier|public
specifier|static
class|class
name|Check
block|{
DECL|field|result
specifier|protected
specifier|final
name|HealthCheck
operator|.
name|Result
name|result
decl_stmt|;
DECL|method|Check (HealthCheck.Result result)
specifier|public
name|Check
parameter_list|(
name|HealthCheck
operator|.
name|Result
name|result
parameter_list|)
block|{
name|this
operator|.
name|result
operator|=
name|result
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"id"
argument_list|)
DECL|method|getId ()
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|result
operator|.
name|getCheck
argument_list|()
operator|.
name|getId
argument_list|()
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"group"
argument_list|)
DECL|method|getGroup ()
specifier|public
name|String
name|getGroup
parameter_list|()
block|{
return|return
name|result
operator|.
name|getCheck
argument_list|()
operator|.
name|getGroup
argument_list|()
return|;
block|}
block|}
annotation|@
name|JsonInclude
argument_list|(
name|JsonInclude
operator|.
name|Include
operator|.
name|NON_EMPTY
argument_list|)
annotation|@
name|JsonPropertyOrder
argument_list|(
block|{
literal|"status"
block|,
literal|"message"
block|,
literal|"check"
block|}
argument_list|)
DECL|class|HealthCheckResult
specifier|public
specifier|static
class|class
name|HealthCheckResult
block|{
DECL|field|result
specifier|protected
specifier|final
name|HealthCheck
operator|.
name|Result
name|result
decl_stmt|;
DECL|field|check
specifier|protected
specifier|final
name|Check
name|check
decl_stmt|;
DECL|method|HealthCheckResult (HealthCheck.Result result, Check check)
specifier|public
name|HealthCheckResult
parameter_list|(
name|HealthCheck
operator|.
name|Result
name|result
parameter_list|,
name|Check
name|check
parameter_list|)
block|{
name|this
operator|.
name|result
operator|=
name|result
expr_stmt|;
name|this
operator|.
name|check
operator|=
name|check
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"status"
argument_list|)
DECL|method|getStatus ()
specifier|public
name|String
name|getStatus
parameter_list|()
block|{
return|return
name|result
operator|.
name|getState
argument_list|()
operator|.
name|name
argument_list|()
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"message"
argument_list|)
DECL|method|getMessage ()
specifier|public
name|String
name|getMessage
parameter_list|()
block|{
return|return
name|result
operator|.
name|getMessage
argument_list|()
operator|.
name|orElse
argument_list|(
literal|null
argument_list|)
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"check"
argument_list|)
DECL|method|getCheck ()
specifier|public
name|Check
name|getCheck
parameter_list|()
block|{
return|return
name|this
operator|.
name|check
return|;
block|}
block|}
annotation|@
name|JsonInclude
argument_list|(
name|JsonInclude
operator|.
name|Include
operator|.
name|NON_EMPTY
argument_list|)
annotation|@
name|JsonPropertyOrder
argument_list|(
block|{
literal|"id"
block|,
literal|"group"
block|,
literal|"metaData"
block|}
argument_list|)
DECL|class|DetailedCheck
specifier|public
specifier|static
class|class
name|DetailedCheck
extends|extends
name|Check
block|{
DECL|field|configuration
specifier|private
name|CheckConfiguration
name|configuration
decl_stmt|;
DECL|method|DetailedCheck (HealthCheck.Result result)
specifier|public
name|DetailedCheck
parameter_list|(
name|HealthCheck
operator|.
name|Result
name|result
parameter_list|)
block|{
name|super
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|this
operator|.
name|configuration
operator|=
operator|new
name|CheckConfiguration
argument_list|(
name|result
operator|.
name|getCheck
argument_list|()
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"configuration"
argument_list|)
DECL|method|getConfiguration ()
specifier|public
name|CheckConfiguration
name|getConfiguration
parameter_list|()
block|{
return|return
name|this
operator|.
name|configuration
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"metaData"
argument_list|)
DECL|method|getMeta ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getMeta
parameter_list|()
block|{
return|return
name|result
operator|.
name|getCheck
argument_list|()
operator|.
name|getMetaData
argument_list|()
return|;
block|}
block|}
annotation|@
name|JsonInclude
argument_list|(
name|JsonInclude
operator|.
name|Include
operator|.
name|NON_EMPTY
argument_list|)
annotation|@
name|JsonPropertyOrder
argument_list|(
block|{
literal|"status"
block|,
literal|"message"
block|,
literal|"details"
block|,
literal|"check"
block|}
argument_list|)
DECL|class|DetailedHealthCheckResult
specifier|public
specifier|static
class|class
name|DetailedHealthCheckResult
extends|extends
name|HealthCheckResult
block|{
DECL|method|DetailedHealthCheckResult (HealthCheck.Result result, Check check)
specifier|public
name|DetailedHealthCheckResult
parameter_list|(
name|HealthCheck
operator|.
name|Result
name|result
parameter_list|,
name|Check
name|check
parameter_list|)
block|{
name|super
argument_list|(
name|result
argument_list|,
name|check
argument_list|)
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"details"
argument_list|)
DECL|method|getDetails ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getDetails
parameter_list|()
block|{
return|return
name|result
operator|.
name|getDetails
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

