begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.spring.boot
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|boot
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|SpringCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|StopWatch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContext
import|;
end_import

begin_comment
comment|/**  * The {@link org.apache.camel.CamelContext} created by Spring Boot.  */
end_comment

begin_class
DECL|class|SpringBootCamelContext
specifier|public
class|class
name|SpringBootCamelContext
extends|extends
name|SpringCamelContext
block|{
DECL|field|stopWatch
specifier|private
specifier|final
name|StopWatch
name|stopWatch
init|=
operator|new
name|StopWatch
argument_list|()
decl_stmt|;
DECL|field|warnOnEarlyShutdown
specifier|private
specifier|final
name|boolean
name|warnOnEarlyShutdown
decl_stmt|;
DECL|method|SpringBootCamelContext (ApplicationContext applicationContext, boolean warnOnEarlyShutdown)
specifier|public
name|SpringBootCamelContext
parameter_list|(
name|ApplicationContext
name|applicationContext
parameter_list|,
name|boolean
name|warnOnEarlyShutdown
parameter_list|)
block|{
name|super
argument_list|(
name|applicationContext
argument_list|)
expr_stmt|;
name|this
operator|.
name|warnOnEarlyShutdown
operator|=
name|warnOnEarlyShutdown
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doStart ()
specifier|protected
name|void
name|doStart
parameter_list|()
throws|throws
name|Exception
block|{
name|stopWatch
operator|.
name|restart
argument_list|()
expr_stmt|;
name|super
operator|.
name|doStart
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doStop ()
specifier|protected
specifier|synchronized
name|void
name|doStop
parameter_list|()
throws|throws
name|Exception
block|{
comment|// if we are stopping very quickly then its likely because the user may not have either spring-boot-web
comment|// or enabled Camel's main controller, so lets log a WARN about this.
name|long
name|taken
init|=
name|stopWatch
operator|.
name|taken
argument_list|()
decl_stmt|;
if|if
condition|(
name|warnOnEarlyShutdown
operator|&&
name|taken
operator|<
literal|1200
condition|)
block|{
comment|// give it a bit of slack
name|String
name|cp
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.class.path"
argument_list|)
decl_stmt|;
name|boolean
name|junit
init|=
name|cp
operator|!=
literal|null
operator|&&
name|cp
operator|.
name|contains
argument_list|(
literal|"junit-"
argument_list|)
decl_stmt|;
name|boolean
name|starterWeb
init|=
name|cp
operator|!=
literal|null
operator|&&
name|cp
operator|.
name|contains
argument_list|(
literal|"spring-boot-starter-web"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|junit
operator|&&
operator|!
name|starterWeb
condition|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"CamelContext has only been running for less than a second. If you intend to run Camel for a longer time "
operator|+
literal|"then you can set the property camel.springboot.main-run-controller=true in application.properties"
operator|+
literal|" or add spring-boot-starter-web JAR to the classpath."
argument_list|)
expr_stmt|;
block|}
block|}
name|super
operator|.
name|doStop
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

