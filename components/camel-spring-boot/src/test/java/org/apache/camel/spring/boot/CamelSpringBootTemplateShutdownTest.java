begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.spring.boot
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|boot
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ConsumerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|FluentProducerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ProducerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|service
operator|.
name|ServiceSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|AnnotationConfigApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|AbstractApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|annotation
operator|.
name|DirtiesContext
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
annotation|@
name|DirtiesContext
DECL|class|CamelSpringBootTemplateShutdownTest
specifier|public
class|class
name|CamelSpringBootTemplateShutdownTest
block|{
DECL|field|camelContext
name|CamelContext
name|camelContext
decl_stmt|;
DECL|field|applicationContext
name|AbstractApplicationContext
name|applicationContext
decl_stmt|;
DECL|field|consumerTemplate
name|ConsumerTemplate
name|consumerTemplate
decl_stmt|;
DECL|field|producerTemplate
name|ProducerTemplate
name|producerTemplate
decl_stmt|;
DECL|field|fluentProducerTemplate
name|FluentProducerTemplate
name|fluentProducerTemplate
decl_stmt|;
annotation|@
name|Before
DECL|method|setupApplicationContext ()
specifier|public
name|void
name|setupApplicationContext
parameter_list|()
block|{
name|applicationContext
operator|=
operator|new
name|AnnotationConfigApplicationContext
argument_list|(
name|CamelAutoConfiguration
operator|.
name|class
argument_list|)
expr_stmt|;
name|camelContext
operator|=
name|applicationContext
operator|.
name|getBean
argument_list|(
name|CamelContext
operator|.
name|class
argument_list|)
expr_stmt|;
name|consumerTemplate
operator|=
name|applicationContext
operator|.
name|getBean
argument_list|(
name|ConsumerTemplate
operator|.
name|class
argument_list|)
expr_stmt|;
name|producerTemplate
operator|=
name|applicationContext
operator|.
name|getBean
argument_list|(
name|ProducerTemplate
operator|.
name|class
argument_list|)
expr_stmt|;
name|fluentProducerTemplate
operator|=
name|applicationContext
operator|.
name|getBean
argument_list|(
name|FluentProducerTemplate
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldStopTemplatesWithCamelShutdown ()
specifier|public
name|void
name|shouldStopTemplatesWithCamelShutdown
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
operator|(
operator|(
name|ServiceSupport
operator|)
name|consumerTemplate
operator|)
operator|.
name|isStarted
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|ServiceSupport
operator|)
name|producerTemplate
operator|)
operator|.
name|isStarted
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|ServiceSupport
operator|)
name|fluentProducerTemplate
operator|)
operator|.
name|isStarted
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|stop
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|ServiceSupport
operator|)
name|camelContext
operator|)
operator|.
name|isStopped
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|ServiceSupport
operator|)
name|consumerTemplate
operator|)
operator|.
name|isStopped
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|ServiceSupport
operator|)
name|producerTemplate
operator|)
operator|.
name|isStopped
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|ServiceSupport
operator|)
name|fluentProducerTemplate
operator|)
operator|.
name|isStopped
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldStopTemplatesWithApplicationContextShutdown ()
specifier|public
name|void
name|shouldStopTemplatesWithApplicationContextShutdown
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
operator|(
operator|(
name|ServiceSupport
operator|)
name|consumerTemplate
operator|)
operator|.
name|isStarted
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|ServiceSupport
operator|)
name|producerTemplate
operator|)
operator|.
name|isStarted
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|ServiceSupport
operator|)
name|fluentProducerTemplate
operator|)
operator|.
name|isStarted
argument_list|()
argument_list|)
expr_stmt|;
name|applicationContext
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
name|applicationContext
operator|.
name|isActive
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|ServiceSupport
operator|)
name|camelContext
operator|)
operator|.
name|isStopped
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|ServiceSupport
operator|)
name|consumerTemplate
operator|)
operator|.
name|isStopped
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|ServiceSupport
operator|)
name|producerTemplate
operator|)
operator|.
name|isStopped
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|ServiceSupport
operator|)
name|fluentProducerTemplate
operator|)
operator|.
name|isStopped
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

