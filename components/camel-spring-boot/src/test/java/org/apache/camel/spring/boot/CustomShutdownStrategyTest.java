begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.spring.boot
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|boot
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultShutdownStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|RouteStartupOrder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ShutdownStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|SpringRouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|EnableAutoConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|test
operator|.
name|context
operator|.
name|SpringBootTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Bean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|junit4
operator|.
name|SpringRunner
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|SpringRunner
operator|.
name|class
argument_list|)
annotation|@
name|EnableAutoConfiguration
annotation|@
name|SpringBootTest
argument_list|(
name|classes
operator|=
name|CustomShutdownStrategyTest
operator|.
name|class
argument_list|)
DECL|class|CustomShutdownStrategyTest
specifier|public
class|class
name|CustomShutdownStrategyTest
extends|extends
name|Assert
block|{
annotation|@
name|Autowired
DECL|field|camelContext
name|CamelContext
name|camelContext
decl_stmt|;
annotation|@
name|Configuration
annotation|@
name|EnableAutoConfiguration
DECL|class|Config
specifier|public
specifier|static
class|class
name|Config
extends|extends
name|SpringRouteBuilder
block|{
annotation|@
name|Override
DECL|method|configure ()
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
literal|"seda:foo"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:foo"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Bean
DECL|method|shutdownStrategy ()
specifier|public
name|ShutdownStrategy
name|shutdownStrategy
parameter_list|()
block|{
name|ShutdownStrategy
name|strat
init|=
operator|new
name|MyShutdown
argument_list|()
decl_stmt|;
name|strat
operator|.
name|setTimeout
argument_list|(
literal|60000
argument_list|)
expr_stmt|;
return|return
name|strat
return|;
block|}
block|}
annotation|@
name|Test
DECL|method|testCustomShutdown ()
specifier|public
name|void
name|testCustomShutdown
parameter_list|()
throws|throws
name|Exception
block|{
name|ShutdownStrategy
name|stat
init|=
name|camelContext
operator|.
name|getShutdownStrategy
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|60000
argument_list|,
name|stat
operator|.
name|getTimeout
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|stat
operator|instanceof
name|MyShutdown
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|stop
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|MyShutdown
operator|)
name|stat
operator|)
operator|.
name|isInvoked
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|class|MyShutdown
specifier|private
specifier|static
class|class
name|MyShutdown
extends|extends
name|DefaultShutdownStrategy
block|{
DECL|field|invoked
specifier|private
name|boolean
name|invoked
decl_stmt|;
annotation|@
name|Override
DECL|method|doShutdown (CamelContext context, List<RouteStartupOrder> routes, long timeout, TimeUnit timeUnit, boolean suspendOnly, boolean abortAfterTimeout, boolean forceShutdown)
specifier|protected
name|boolean
name|doShutdown
parameter_list|(
name|CamelContext
name|context
parameter_list|,
name|List
argument_list|<
name|RouteStartupOrder
argument_list|>
name|routes
parameter_list|,
name|long
name|timeout
parameter_list|,
name|TimeUnit
name|timeUnit
parameter_list|,
name|boolean
name|suspendOnly
parameter_list|,
name|boolean
name|abortAfterTimeout
parameter_list|,
name|boolean
name|forceShutdown
parameter_list|)
throws|throws
name|Exception
block|{
name|invoked
operator|=
literal|true
expr_stmt|;
return|return
name|super
operator|.
name|doShutdown
argument_list|(
name|context
argument_list|,
name|routes
argument_list|,
name|timeout
argument_list|,
name|timeUnit
argument_list|,
name|suspendOnly
argument_list|,
name|abortAfterTimeout
argument_list|,
name|forceShutdown
argument_list|)
return|;
block|}
DECL|method|isInvoked ()
name|boolean
name|isInvoked
parameter_list|()
block|{
return|return
name|invoked
return|;
block|}
block|}
block|}
end_class

end_unit

