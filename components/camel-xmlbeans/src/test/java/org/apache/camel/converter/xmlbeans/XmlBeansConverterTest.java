begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.converter.xmlbeans
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|converter
operator|.
name|xmlbeans
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|ParserConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|BytesSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|NoTypeConversionAvailableException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultExchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlbeans
operator|.
name|XmlException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlbeans
operator|.
name|XmlObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlbeans
operator|.
name|impl
operator|.
name|piccolo
operator|.
name|xml
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|samples
operator|.
name|services
operator|.
name|xsd
operator|.
name|BuyStocksDocument
import|;
end_import

begin_import
import|import
name|samples
operator|.
name|services
operator|.
name|xsd
operator|.
name|BuyStocksDocument
operator|.
name|BuyStocks
import|;
end_import

begin_class
DECL|class|XmlBeansConverterTest
specifier|public
class|class
name|XmlBeansConverterTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|PAYLOAD
specifier|private
specifier|static
specifier|final
name|String
name|PAYLOAD
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?><xsd:buyStocks xmlns:xsd=\"http://services.samples/xsd\"><order><symbol>IBM</symbol><buyerID>cmueller"
operator|+
literal|"</buyerID><price>140.34</price><volume>2000</volume></order></xsd:buyStocks>"
decl_stmt|;
annotation|@
name|Test
DECL|method|testConvertToXmlObject ()
specifier|public
name|void
name|testConvertToXmlObject
parameter_list|()
throws|throws
name|Exception
block|{
name|Exchange
name|exchange
init|=
name|createExchangeWithBody
argument_list|(
literal|"<hello>world!</hello>"
argument_list|)
decl_stmt|;
name|Message
name|in
init|=
name|exchange
operator|.
name|getIn
argument_list|()
decl_stmt|;
name|XmlObject
name|object
init|=
name|in
operator|.
name|getBody
argument_list|(
name|XmlObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Should have created an XmlObject!"
argument_list|,
name|object
argument_list|)
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Found: "
operator|+
name|object
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"body as String"
argument_list|,
name|in
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|object
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|toXmlObjectFromFile ()
specifier|public
name|void
name|toXmlObjectFromFile
parameter_list|()
throws|throws
name|IOException
throws|,
name|XmlException
block|{
name|XmlObject
name|result
init|=
name|XmlBeansConverter
operator|.
name|toXmlObject
argument_list|(
operator|new
name|File
argument_list|(
literal|"src/test/data/buyStocks.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|assertBuyStocks
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|toXmlObjectFromReader ()
specifier|public
name|void
name|toXmlObjectFromReader
parameter_list|()
throws|throws
name|IOException
throws|,
name|XmlException
block|{
name|XmlObject
name|result
init|=
name|XmlBeansConverter
operator|.
name|toXmlObject
argument_list|(
operator|new
name|FileReader
argument_list|(
literal|"src/test/data/buyStocks.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|assertBuyStocks
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|toXmlObjectFromNode ()
specifier|public
name|void
name|toXmlObjectFromNode
parameter_list|()
throws|throws
name|IOException
throws|,
name|XmlException
throws|,
name|ParserConfigurationException
throws|,
name|SAXException
block|{
name|DocumentBuilderFactory
name|factory
init|=
name|DocumentBuilderFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|factory
operator|.
name|setNamespaceAware
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setIgnoringElementContentWhitespace
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setIgnoringComments
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|DocumentBuilder
name|builder
init|=
name|factory
operator|.
name|newDocumentBuilder
argument_list|()
decl_stmt|;
name|Document
name|document
init|=
name|builder
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|PAYLOAD
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|XmlObject
name|result
init|=
name|XmlBeansConverter
operator|.
name|toXmlObject
argument_list|(
name|document
argument_list|)
decl_stmt|;
name|assertBuyStocks
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|toXmlObjectFromInputStream ()
specifier|public
name|void
name|toXmlObjectFromInputStream
parameter_list|()
throws|throws
name|IOException
throws|,
name|XmlException
block|{
name|XmlObject
name|result
init|=
name|XmlBeansConverter
operator|.
name|toXmlObject
argument_list|(
operator|new
name|FileInputStream
argument_list|(
literal|"src/test/data/buyStocks.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|assertBuyStocks
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|toXmlObjectFromString ()
specifier|public
name|void
name|toXmlObjectFromString
parameter_list|()
throws|throws
name|IOException
throws|,
name|XmlException
block|{
name|XmlObject
name|result
init|=
name|XmlBeansConverter
operator|.
name|toXmlObject
argument_list|(
name|PAYLOAD
argument_list|,
operator|new
name|DefaultExchange
argument_list|(
operator|new
name|DefaultCamelContext
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertBuyStocks
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|toXmlObjectFromByteArray ()
specifier|public
name|void
name|toXmlObjectFromByteArray
parameter_list|()
throws|throws
name|IOException
throws|,
name|XmlException
block|{
name|XmlObject
name|result
init|=
name|XmlBeansConverter
operator|.
name|toXmlObject
argument_list|(
name|PAYLOAD
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|assertBuyStocks
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|toXmlObjectFromByteBuffer ()
specifier|public
name|void
name|toXmlObjectFromByteBuffer
parameter_list|()
throws|throws
name|IOException
throws|,
name|XmlException
block|{
name|XmlObject
name|result
init|=
name|XmlBeansConverter
operator|.
name|toXmlObject
argument_list|(
name|ByteBuffer
operator|.
name|wrap
argument_list|(
name|PAYLOAD
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertBuyStocks
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|toXmlObjectFromXMLStreamReader ()
specifier|public
name|void
name|toXmlObjectFromXMLStreamReader
parameter_list|()
throws|throws
name|IOException
throws|,
name|XmlException
block|{
name|XmlObject
name|result
init|=
name|XmlBeansConverter
operator|.
name|toXmlObject
argument_list|(
operator|new
name|XMLStreamReader
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|PAYLOAD
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|)
argument_list|)
decl_stmt|;
name|assertBuyStocks
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|toXmlObjectFromSource ()
specifier|public
name|void
name|toXmlObjectFromSource
parameter_list|()
throws|throws
name|IOException
throws|,
name|XmlException
throws|,
name|NoTypeConversionAvailableException
block|{
name|XmlObject
name|result
init|=
name|XmlBeansConverter
operator|.
name|toXmlObject
argument_list|(
operator|new
name|BytesSource
argument_list|(
name|PAYLOAD
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|,
operator|new
name|DefaultExchange
argument_list|(
operator|new
name|DefaultCamelContext
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertBuyStocks
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
DECL|method|assertBuyStocks (Object result)
specifier|private
name|void
name|assertBuyStocks
parameter_list|(
name|Object
name|result
parameter_list|)
block|{
name|BuyStocks
name|buyStocks
init|=
operator|(
operator|(
name|BuyStocksDocument
operator|)
name|result
operator|)
operator|.
name|getBuyStocks
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|buyStocks
operator|.
name|getOrderArray
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"IBM"
argument_list|,
name|buyStocks
operator|.
name|getOrderArray
argument_list|(
literal|0
argument_list|)
operator|.
name|getSymbol
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cmueller"
argument_list|,
name|buyStocks
operator|.
name|getOrderArray
argument_list|(
literal|0
argument_list|)
operator|.
name|getBuyerID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|140.34
argument_list|,
name|buyStocks
operator|.
name|getOrderArray
argument_list|(
literal|0
argument_list|)
operator|.
name|getPrice
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2000
argument_list|,
name|buyStocks
operator|.
name|getOrderArray
argument_list|(
literal|0
argument_list|)
operator|.
name|getVolume
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

