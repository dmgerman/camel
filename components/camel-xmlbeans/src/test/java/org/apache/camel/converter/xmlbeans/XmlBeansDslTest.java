begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.converter.xmlbeans
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|converter
operator|.
name|xmlbeans
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|samples
operator|.
name|services
operator|.
name|xsd
operator|.
name|BuyStocksDocument
import|;
end_import

begin_import
import|import
name|samples
operator|.
name|services
operator|.
name|xsd
operator|.
name|BuyStocksDocument
operator|.
name|BuyStocks
import|;
end_import

begin_import
import|import
name|samples
operator|.
name|services
operator|.
name|xsd
operator|.
name|Order
import|;
end_import

begin_class
DECL|class|XmlBeansDslTest
specifier|public
class|class
name|XmlBeansDslTest
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Test
DECL|method|testSendXmlAndUnmarshal ()
specifier|public
name|void
name|testSendXmlAndUnmarshal
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|unmarshal
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:unmarshal"
argument_list|)
decl_stmt|;
name|unmarshal
operator|.
name|expectedMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|MockEndpoint
name|marshal
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:marshal"
argument_list|)
decl_stmt|;
name|marshal
operator|.
name|expectedMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
literal|"direct:start"
argument_list|,
name|createBuyStocksDocument
argument_list|()
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
name|Object
name|marshaledBody
init|=
name|marshal
operator|.
name|getReceivedExchanges
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertIsInstanceOf
argument_list|(
name|byte
index|[]
operator|.
expr|class
argument_list|,
name|marshaledBody
argument_list|)
expr_stmt|;
name|Object
name|unmarshaledBody
init|=
name|unmarshal
operator|.
name|getReceivedExchanges
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertIsInstanceOf
argument_list|(
name|BuyStocksDocument
operator|.
name|class
argument_list|,
name|unmarshaledBody
argument_list|)
expr_stmt|;
block|}
DECL|method|createBuyStocksDocument ()
specifier|private
name|BuyStocksDocument
name|createBuyStocksDocument
parameter_list|()
block|{
name|BuyStocksDocument
name|document
init|=
name|BuyStocksDocument
operator|.
name|Factory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|BuyStocks
name|payload
init|=
name|document
operator|.
name|addNewBuyStocks
argument_list|()
decl_stmt|;
name|Order
name|order
init|=
name|payload
operator|.
name|addNewOrder
argument_list|()
decl_stmt|;
name|order
operator|.
name|setSymbol
argument_list|(
literal|"IBM"
argument_list|)
expr_stmt|;
name|order
operator|.
name|setBuyerID
argument_list|(
literal|"cmueller"
argument_list|)
expr_stmt|;
name|order
operator|.
name|setPrice
argument_list|(
literal|140.34
argument_list|)
expr_stmt|;
name|order
operator|.
name|setVolume
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
return|return
name|document
return|;
block|}
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"direct:start"
argument_list|)
operator|.
name|marshal
argument_list|()
operator|.
name|xmlBeans
argument_list|()
operator|.
name|to
argument_list|(
literal|"mock:marshal"
argument_list|)
operator|.
name|unmarshal
argument_list|()
operator|.
name|xmlBeans
argument_list|()
operator|.
name|to
argument_list|(
literal|"mock:unmarshal"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

