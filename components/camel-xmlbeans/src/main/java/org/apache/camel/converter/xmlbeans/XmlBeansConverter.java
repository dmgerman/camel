begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.converter.xmlbeans
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|converter
operator|.
name|xmlbeans
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|ParserConfigurationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Converter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|converter
operator|.
name|IOConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|converter
operator|.
name|NIOConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|converter
operator|.
name|jaxp
operator|.
name|XmlConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlbeans
operator|.
name|XmlException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlbeans
operator|.
name|XmlObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlbeans
operator|.
name|impl
operator|.
name|piccolo
operator|.
name|xml
operator|.
name|XMLStreamReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_comment
comment|/**  * A<a href="http://activemq.apache.org/camel/type-coverter.html">Type Converter</a>  * of XMLBeans objects  *  * @version $Revision$  */
end_comment

begin_class
annotation|@
name|Converter
DECL|class|XmlBeansConverter
specifier|public
class|class
name|XmlBeansConverter
block|{
DECL|field|xmlConverter
specifier|private
name|XmlConverter
name|xmlConverter
init|=
operator|new
name|XmlConverter
argument_list|()
decl_stmt|;
annotation|@
name|Converter
DECL|method|toXmlObject (File value)
specifier|public
specifier|static
name|XmlObject
name|toXmlObject
parameter_list|(
name|File
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|XmlException
block|{
return|return
name|XmlObject
operator|.
name|Factory
operator|.
name|parse
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toXmlObject (Reader value)
specifier|public
specifier|static
name|XmlObject
name|toXmlObject
parameter_list|(
name|Reader
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|XmlException
block|{
return|return
name|XmlObject
operator|.
name|Factory
operator|.
name|parse
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toXmlObject (Node value)
specifier|public
specifier|static
name|XmlObject
name|toXmlObject
parameter_list|(
name|Node
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|XmlException
block|{
return|return
name|XmlObject
operator|.
name|Factory
operator|.
name|parse
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toXmlObject (InputStream value)
specifier|public
specifier|static
name|XmlObject
name|toXmlObject
parameter_list|(
name|InputStream
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|XmlException
block|{
return|return
name|XmlObject
operator|.
name|Factory
operator|.
name|parse
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toXmlObject (String value)
specifier|public
specifier|static
name|XmlObject
name|toXmlObject
parameter_list|(
name|String
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|XmlException
block|{
return|return
name|toXmlObject
argument_list|(
name|IOConverter
operator|.
name|toInputStream
argument_list|(
name|value
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toXmlObject (byte[] value)
specifier|public
specifier|static
name|XmlObject
name|toXmlObject
parameter_list|(
name|byte
index|[]
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|XmlException
block|{
return|return
name|toXmlObject
argument_list|(
name|IOConverter
operator|.
name|toInputStream
argument_list|(
name|value
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toXmlObject (ByteBuffer value)
specifier|public
specifier|static
name|XmlObject
name|toXmlObject
parameter_list|(
name|ByteBuffer
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|XmlException
block|{
return|return
name|toXmlObject
argument_list|(
name|NIOConverter
operator|.
name|toInputStream
argument_list|(
name|value
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toXmlObject (XMLStreamReader value)
specifier|public
specifier|static
name|XmlObject
name|toXmlObject
parameter_list|(
name|XMLStreamReader
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|XmlException
block|{
return|return
name|XmlObject
operator|.
name|Factory
operator|.
name|parse
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toXmlObject (Source value)
specifier|public
name|XmlObject
name|toXmlObject
parameter_list|(
name|Source
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|XmlException
throws|,
name|TransformerException
throws|,
name|ParserConfigurationException
throws|,
name|SAXException
block|{
name|Document
name|document
init|=
name|getXmlConverter
argument_list|()
operator|.
name|toDOMDocument
argument_list|(
name|value
argument_list|)
decl_stmt|;
return|return
name|toXmlObject
argument_list|(
name|document
argument_list|)
return|;
block|}
comment|// Properties
comment|//-------------------------------------------------------------------------
DECL|method|getXmlConverter ()
specifier|public
name|XmlConverter
name|getXmlConverter
parameter_list|()
block|{
return|return
name|xmlConverter
return|;
block|}
DECL|method|setXmlConverter (XmlConverter xmlConverter)
specifier|public
name|void
name|setXmlConverter
parameter_list|(
name|XmlConverter
name|xmlConverter
parameter_list|)
block|{
name|this
operator|.
name|xmlConverter
operator|=
name|xmlConverter
expr_stmt|;
block|}
block|}
end_class

end_unit

