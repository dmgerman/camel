begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.converter.xmlbeans
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|converter
operator|.
name|xmlbeans
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Callable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Converter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|converter
operator|.
name|IOConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|converter
operator|.
name|NIOConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlbeans
operator|.
name|XmlObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlbeans
operator|.
name|impl
operator|.
name|piccolo
operator|.
name|xml
operator|.
name|XMLStreamReader
import|;
end_import

begin_comment
comment|/**  * A<a href="http://camel.apache.org/type-coverter.html">Type Converter</a>  * of XMLBeans objects  */
end_comment

begin_class
annotation|@
name|Converter
DECL|class|XmlBeansConverter
specifier|public
specifier|final
class|class
name|XmlBeansConverter
block|{
DECL|method|XmlBeansConverter ()
specifier|private
name|XmlBeansConverter
parameter_list|()
block|{     }
annotation|@
name|Converter
DECL|method|toXmlObject (final File value, Exchange exchange)
specifier|public
specifier|static
name|XmlObject
name|toXmlObject
parameter_list|(
specifier|final
name|File
name|value
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|(
name|XmlObject
operator|)
name|ObjectHelper
operator|.
name|callWithTCCL
argument_list|(
operator|new
name|Callable
argument_list|<
name|XmlObject
argument_list|>
argument_list|()
block|{
specifier|public
name|XmlObject
name|call
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|XmlObject
operator|.
name|Factory
operator|.
name|parse
argument_list|(
name|value
argument_list|)
return|;
block|}
block|}
argument_list|,
name|exchange
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toXmlObject (final Reader value, Exchange exchange)
specifier|public
specifier|static
name|XmlObject
name|toXmlObject
parameter_list|(
specifier|final
name|Reader
name|value
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|(
name|XmlObject
operator|)
name|ObjectHelper
operator|.
name|callWithTCCL
argument_list|(
operator|new
name|Callable
argument_list|<
name|XmlObject
argument_list|>
argument_list|()
block|{
specifier|public
name|XmlObject
name|call
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|XmlObject
operator|.
name|Factory
operator|.
name|parse
argument_list|(
name|value
argument_list|)
return|;
block|}
block|}
argument_list|,
name|exchange
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toXmlObject (final Node value, Exchange exchange)
specifier|public
specifier|static
name|XmlObject
name|toXmlObject
parameter_list|(
specifier|final
name|Node
name|value
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|(
name|XmlObject
operator|)
name|ObjectHelper
operator|.
name|callWithTCCL
argument_list|(
operator|new
name|Callable
argument_list|<
name|XmlObject
argument_list|>
argument_list|()
block|{
specifier|public
name|XmlObject
name|call
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|XmlObject
operator|.
name|Factory
operator|.
name|parse
argument_list|(
name|value
argument_list|)
return|;
block|}
block|}
argument_list|,
name|exchange
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toXmlObject (final InputStream value, Exchange exchange)
specifier|public
specifier|static
name|XmlObject
name|toXmlObject
parameter_list|(
specifier|final
name|InputStream
name|value
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|(
name|XmlObject
operator|)
name|ObjectHelper
operator|.
name|callWithTCCL
argument_list|(
operator|new
name|Callable
argument_list|<
name|XmlObject
argument_list|>
argument_list|()
block|{
specifier|public
name|XmlObject
name|call
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|XmlObject
operator|.
name|Factory
operator|.
name|parse
argument_list|(
name|value
argument_list|)
return|;
block|}
block|}
argument_list|,
name|exchange
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toXmlObject (String value, Exchange exchange)
specifier|public
specifier|static
name|XmlObject
name|toXmlObject
parameter_list|(
name|String
name|value
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|toXmlObject
argument_list|(
name|IOConverter
operator|.
name|toInputStream
argument_list|(
name|value
argument_list|,
name|exchange
argument_list|)
argument_list|,
name|exchange
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toXmlObject (byte[] value, Exchange exchange)
specifier|public
specifier|static
name|XmlObject
name|toXmlObject
parameter_list|(
name|byte
index|[]
name|value
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|toXmlObject
argument_list|(
name|IOConverter
operator|.
name|toInputStream
argument_list|(
name|value
argument_list|)
argument_list|,
name|exchange
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toXmlObject (ByteBuffer value, Exchange exchange)
specifier|public
specifier|static
name|XmlObject
name|toXmlObject
parameter_list|(
name|ByteBuffer
name|value
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|toXmlObject
argument_list|(
name|NIOConverter
operator|.
name|toInputStream
argument_list|(
name|value
argument_list|)
argument_list|,
name|exchange
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toXmlObject (final XMLStreamReader value, Exchange exchange)
specifier|public
specifier|static
name|XmlObject
name|toXmlObject
parameter_list|(
specifier|final
name|XMLStreamReader
name|value
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|(
name|XmlObject
operator|)
name|ObjectHelper
operator|.
name|callWithTCCL
argument_list|(
operator|new
name|Callable
argument_list|<
name|XmlObject
argument_list|>
argument_list|()
block|{
specifier|public
name|XmlObject
name|call
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|XmlObject
operator|.
name|Factory
operator|.
name|parse
argument_list|(
name|value
argument_list|)
return|;
block|}
block|}
argument_list|,
name|exchange
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toXmlObject (Source value, Exchange exchange)
specifier|public
specifier|static
name|XmlObject
name|toXmlObject
parameter_list|(
name|Source
name|value
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|Reader
name|reader
init|=
name|exchange
operator|.
name|getContext
argument_list|()
operator|.
name|getTypeConverter
argument_list|()
operator|.
name|mandatoryConvertTo
argument_list|(
name|Reader
operator|.
name|class
argument_list|,
name|value
argument_list|)
decl_stmt|;
return|return
operator|(
name|XmlObject
operator|)
name|ObjectHelper
operator|.
name|callWithTCCL
argument_list|(
operator|new
name|Callable
argument_list|<
name|XmlObject
argument_list|>
argument_list|()
block|{
specifier|public
name|XmlObject
name|call
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|XmlObject
operator|.
name|Factory
operator|.
name|parse
argument_list|(
name|reader
argument_list|)
return|;
block|}
block|}
argument_list|,
name|exchange
argument_list|)
return|;
block|}
block|}
end_class

end_unit

