begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.olingo4
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|olingo4
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|DateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDownLatch
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|olingo4
operator|.
name|api
operator|.
name|Olingo4App
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|olingo4
operator|.
name|api
operator|.
name|Olingo4ResponseHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|olingo4
operator|.
name|api
operator|.
name|batch
operator|.
name|Olingo4BatchChangeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|olingo4
operator|.
name|api
operator|.
name|batch
operator|.
name|Olingo4BatchQueryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|olingo4
operator|.
name|api
operator|.
name|batch
operator|.
name|Olingo4BatchRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|olingo4
operator|.
name|api
operator|.
name|batch
operator|.
name|Olingo4BatchResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|olingo4
operator|.
name|api
operator|.
name|batch
operator|.
name|Operation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|olingo4
operator|.
name|api
operator|.
name|impl
operator|.
name|Olingo4AppImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpHost
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|ClientProtocolException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpGet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpUriRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|CloseableHttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|HttpClients
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|protocol
operator|.
name|BasicHttpContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|protocol
operator|.
name|ExecutionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|protocol
operator|.
name|HttpContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|olingo
operator|.
name|client
operator|.
name|api
operator|.
name|ODataClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|olingo
operator|.
name|client
operator|.
name|api
operator|.
name|domain
operator|.
name|ClientCollectionValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|olingo
operator|.
name|client
operator|.
name|api
operator|.
name|domain
operator|.
name|ClientComplexValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|olingo
operator|.
name|client
operator|.
name|api
operator|.
name|domain
operator|.
name|ClientEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|olingo
operator|.
name|client
operator|.
name|api
operator|.
name|domain
operator|.
name|ClientEntitySet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|olingo
operator|.
name|client
operator|.
name|api
operator|.
name|domain
operator|.
name|ClientEnumValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|olingo
operator|.
name|client
operator|.
name|api
operator|.
name|domain
operator|.
name|ClientObjectFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|olingo
operator|.
name|client
operator|.
name|api
operator|.
name|domain
operator|.
name|ClientPrimitiveValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|olingo
operator|.
name|client
operator|.
name|api
operator|.
name|domain
operator|.
name|ClientProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|olingo
operator|.
name|client
operator|.
name|api
operator|.
name|domain
operator|.
name|ClientServiceDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|olingo
operator|.
name|client
operator|.
name|api
operator|.
name|domain
operator|.
name|ClientValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|olingo
operator|.
name|client
operator|.
name|api
operator|.
name|serialization
operator|.
name|ODataReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|olingo
operator|.
name|client
operator|.
name|core
operator|.
name|ODataClientFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|olingo
operator|.
name|commons
operator|.
name|api
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|olingo
operator|.
name|commons
operator|.
name|api
operator|.
name|edm
operator|.
name|Edm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|olingo
operator|.
name|commons
operator|.
name|api
operator|.
name|format
operator|.
name|ContentType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|olingo
operator|.
name|commons
operator|.
name|api
operator|.
name|http
operator|.
name|HttpStatusCode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|olingo
operator|.
name|server
operator|.
name|api
operator|.
name|uri
operator|.
name|queryoption
operator|.
name|SystemQueryOptionKind
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * Integration test for  * {@link org.apache.camel.component.olingo4.api.impl.Olingo4AppImpl} using the  * sample OData 4.0 remote TripPin service published on  * http://services.odata.org/TripPinRESTierService.  */
end_comment

begin_class
DECL|class|Olingo4AppAPITest
specifier|public
class|class
name|Olingo4AppAPITest
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|Olingo4AppAPITest
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|TIMEOUT
specifier|private
specifier|static
specifier|final
name|long
name|TIMEOUT
init|=
literal|10
decl_stmt|;
DECL|field|PEOPLE
specifier|private
specifier|static
specifier|final
name|String
name|PEOPLE
init|=
literal|"People"
decl_stmt|;
DECL|field|TEST_PEOPLE
specifier|private
specifier|static
specifier|final
name|String
name|TEST_PEOPLE
init|=
literal|"People('russellwhyte')"
decl_stmt|;
DECL|field|TEST_AIRLINE
specifier|private
specifier|static
specifier|final
name|String
name|TEST_AIRLINE
init|=
literal|"Airlines('FM')"
decl_stmt|;
DECL|field|TRIPS
specifier|private
specifier|static
specifier|final
name|String
name|TRIPS
init|=
literal|"Trips"
decl_stmt|;
DECL|field|TEST_CREATE_RESOURCE_CONTENT_ID
specifier|private
specifier|static
specifier|final
name|String
name|TEST_CREATE_RESOURCE_CONTENT_ID
init|=
literal|"1"
decl_stmt|;
DECL|field|TEST_UPDATE_RESOURCE_CONTENT_ID
specifier|private
specifier|static
specifier|final
name|String
name|TEST_UPDATE_RESOURCE_CONTENT_ID
init|=
literal|"2"
decl_stmt|;
DECL|field|TEST_CREATE_KEY
specifier|private
specifier|static
specifier|final
name|String
name|TEST_CREATE_KEY
init|=
literal|"'lewisblack'"
decl_stmt|;
DECL|field|TEST_CREATE_PEOPLE
specifier|private
specifier|static
specifier|final
name|String
name|TEST_CREATE_PEOPLE
init|=
name|PEOPLE
operator|+
literal|"("
operator|+
name|TEST_CREATE_KEY
operator|+
literal|")"
decl_stmt|;
DECL|field|TEST_AIRPORT
specifier|private
specifier|static
specifier|final
name|String
name|TEST_AIRPORT
init|=
literal|"Airports('KSFO')"
decl_stmt|;
DECL|field|TEST_AIRPORTS_SIMPLE_PROPERTY
specifier|private
specifier|static
specifier|final
name|String
name|TEST_AIRPORTS_SIMPLE_PROPERTY
init|=
name|TEST_AIRPORT
operator|+
literal|"/Name"
decl_stmt|;
DECL|field|TEST_AIRPORTS_COMPLEX_PROPERTY
specifier|private
specifier|static
specifier|final
name|String
name|TEST_AIRPORTS_COMPLEX_PROPERTY
init|=
name|TEST_AIRPORT
operator|+
literal|"/Location"
decl_stmt|;
DECL|field|TEST_AIRPORTS_SIMPLE_PROPERTY_VALUE
specifier|private
specifier|static
specifier|final
name|String
name|TEST_AIRPORTS_SIMPLE_PROPERTY_VALUE
init|=
name|TEST_AIRPORTS_SIMPLE_PROPERTY
operator|+
literal|"/$value"
decl_stmt|;
DECL|field|COUNT_OPTION
specifier|private
specifier|static
specifier|final
name|String
name|COUNT_OPTION
init|=
literal|"/$count"
decl_stmt|;
DECL|field|TEST_SERVICE_BASE_URL
specifier|private
specifier|static
specifier|final
name|String
name|TEST_SERVICE_BASE_URL
init|=
literal|"http://services.odata.org/TripPinRESTierService"
decl_stmt|;
DECL|field|TEST_FORMAT
specifier|private
specifier|static
specifier|final
name|ContentType
name|TEST_FORMAT
init|=
name|ContentType
operator|.
name|APPLICATION_JSON
decl_stmt|;
DECL|field|TEST_FORMAT_STRING
specifier|private
specifier|static
specifier|final
name|String
name|TEST_FORMAT_STRING
init|=
name|TEST_FORMAT
operator|.
name|toString
argument_list|()
decl_stmt|;
DECL|field|olingoApp
specifier|private
specifier|static
name|Olingo4App
name|olingoApp
decl_stmt|;
DECL|field|edm
specifier|private
specifier|static
name|Edm
name|edm
decl_stmt|;
DECL|field|odataClient
specifier|private
specifier|final
name|ODataClient
name|odataClient
init|=
name|ODataClientFactory
operator|.
name|getClient
argument_list|()
decl_stmt|;
DECL|field|objFactory
specifier|private
specifier|final
name|ClientObjectFactory
name|objFactory
init|=
name|odataClient
operator|.
name|getObjectFactory
argument_list|()
decl_stmt|;
DECL|field|reader
specifier|private
specifier|final
name|ODataReader
name|reader
init|=
name|odataClient
operator|.
name|getReader
argument_list|()
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|beforeClass ()
specifier|public
specifier|static
name|void
name|beforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|setupClient
argument_list|()
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|afterClass ()
specifier|public
specifier|static
name|void
name|afterClass
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|olingoApp
operator|!=
literal|null
condition|)
block|{
name|olingoApp
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|setupClient ()
specifier|protected
specifier|static
name|void
name|setupClient
parameter_list|()
throws|throws
name|Exception
block|{
name|olingoApp
operator|=
operator|new
name|Olingo4AppImpl
argument_list|(
name|getRealServiceUrl
argument_list|(
name|TEST_SERVICE_BASE_URL
argument_list|)
argument_list|)
expr_stmt|;
name|olingoApp
operator|.
name|setContentType
argument_list|(
name|TEST_FORMAT_STRING
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Read Edm "
argument_list|)
expr_stmt|;
specifier|final
name|TestOlingo4ResponseHandler
argument_list|<
name|Edm
argument_list|>
name|responseHandler
init|=
operator|new
name|TestOlingo4ResponseHandler
argument_list|<>
argument_list|()
decl_stmt|;
name|olingoApp
operator|.
name|read
argument_list|(
literal|null
argument_list|,
name|Constants
operator|.
name|METADATA
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|responseHandler
argument_list|)
expr_stmt|;
name|edm
operator|=
name|responseHandler
operator|.
name|await
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Read default EntityContainer:  {}"
argument_list|,
name|responseHandler
operator|.
name|await
argument_list|()
operator|.
name|getEntityContainer
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Every request to the demo OData 4.0      * (http://services.odata.org/TripPinRESTierService) generates unique      * service URL with postfix like (S(tuivu3up5ygvjzo5fszvnwfv)) for each      * session This method makes reuest to the base URL and return URL with      * generated postfix      */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|method|getRealServiceUrl (String baseUrl)
specifier|protected
specifier|static
name|String
name|getRealServiceUrl
parameter_list|(
name|String
name|baseUrl
parameter_list|)
throws|throws
name|ClientProtocolException
throws|,
name|IOException
block|{
name|CloseableHttpClient
name|httpclient
init|=
name|HttpClients
operator|.
name|createDefault
argument_list|()
decl_stmt|;
name|HttpGet
name|httpGet
init|=
operator|new
name|HttpGet
argument_list|(
name|baseUrl
argument_list|)
decl_stmt|;
name|HttpContext
name|httpContext
init|=
operator|new
name|BasicHttpContext
argument_list|()
decl_stmt|;
name|httpclient
operator|.
name|execute
argument_list|(
name|httpGet
argument_list|,
name|httpContext
argument_list|)
expr_stmt|;
name|HttpUriRequest
name|currentReq
init|=
operator|(
name|HttpUriRequest
operator|)
name|httpContext
operator|.
name|getAttribute
argument_list|(
name|ExecutionContext
operator|.
name|HTTP_REQUEST
argument_list|)
decl_stmt|;
name|HttpHost
name|currentHost
init|=
operator|(
name|HttpHost
operator|)
name|httpContext
operator|.
name|getAttribute
argument_list|(
name|ExecutionContext
operator|.
name|HTTP_TARGET_HOST
argument_list|)
decl_stmt|;
name|String
name|currentUrl
init|=
operator|(
name|currentReq
operator|.
name|getURI
argument_list|()
operator|.
name|isAbsolute
argument_list|()
operator|)
condition|?
name|currentReq
operator|.
name|getURI
argument_list|()
operator|.
name|toString
argument_list|()
else|:
operator|(
name|currentHost
operator|.
name|toURI
argument_list|()
operator|+
name|currentReq
operator|.
name|getURI
argument_list|()
operator|)
decl_stmt|;
return|return
name|currentUrl
return|;
block|}
annotation|@
name|Test
DECL|method|testServiceDocument ()
specifier|public
name|void
name|testServiceDocument
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|TestOlingo4ResponseHandler
argument_list|<
name|ClientServiceDocument
argument_list|>
name|responseHandler
init|=
operator|new
name|TestOlingo4ResponseHandler
argument_list|<>
argument_list|()
decl_stmt|;
name|olingoApp
operator|.
name|read
argument_list|(
literal|null
argument_list|,
literal|""
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|responseHandler
argument_list|)
expr_stmt|;
specifier|final
name|ClientServiceDocument
name|serviceDocument
init|=
name|responseHandler
operator|.
name|await
argument_list|()
decl_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|URI
argument_list|>
name|entitySets
init|=
name|serviceDocument
operator|.
name|getEntitySets
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Service Entity Sets"
argument_list|,
literal|4
argument_list|,
name|entitySets
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Service Document Entries:  {}"
argument_list|,
name|entitySets
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReadEntitySet ()
specifier|public
name|void
name|testReadEntitySet
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|TestOlingo4ResponseHandler
argument_list|<
name|ClientEntitySet
argument_list|>
name|responseHandler
init|=
operator|new
name|TestOlingo4ResponseHandler
argument_list|<>
argument_list|()
decl_stmt|;
name|olingoApp
operator|.
name|read
argument_list|(
name|edm
argument_list|,
name|PEOPLE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|responseHandler
argument_list|)
expr_stmt|;
specifier|final
name|ClientEntitySet
name|entitySet
init|=
name|responseHandler
operator|.
name|await
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|entitySet
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Entity set count"
argument_list|,
literal|20
argument_list|,
name|entitySet
operator|.
name|getEntities
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Entities:  {}"
argument_list|,
name|prettyPrint
argument_list|(
name|entitySet
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReadUnparsedEntitySet ()
specifier|public
name|void
name|testReadUnparsedEntitySet
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|TestOlingo4ResponseHandler
argument_list|<
name|InputStream
argument_list|>
name|responseHandler
init|=
operator|new
name|TestOlingo4ResponseHandler
argument_list|<>
argument_list|()
decl_stmt|;
name|olingoApp
operator|.
name|uread
argument_list|(
name|edm
argument_list|,
name|PEOPLE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|responseHandler
argument_list|)
expr_stmt|;
specifier|final
name|InputStream
name|rawEntitySet
init|=
name|responseHandler
operator|.
name|await
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Data entity set"
argument_list|,
name|rawEntitySet
argument_list|)
expr_stmt|;
specifier|final
name|ClientEntitySet
name|entitySet
init|=
name|reader
operator|.
name|readEntitySet
argument_list|(
name|rawEntitySet
argument_list|,
name|TEST_FORMAT
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Entity set count"
argument_list|,
literal|20
argument_list|,
name|entitySet
operator|.
name|getEntities
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Entries:  {}"
argument_list|,
name|prettyPrint
argument_list|(
name|entitySet
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReadEntity ()
specifier|public
name|void
name|testReadEntity
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|TestOlingo4ResponseHandler
argument_list|<
name|ClientEntity
argument_list|>
name|responseHandler
init|=
operator|new
name|TestOlingo4ResponseHandler
argument_list|<>
argument_list|()
decl_stmt|;
name|olingoApp
operator|.
name|read
argument_list|(
name|edm
argument_list|,
name|TEST_AIRLINE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|responseHandler
argument_list|)
expr_stmt|;
name|ClientEntity
name|entity
init|=
name|responseHandler
operator|.
name|await
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Shanghai Airline"
argument_list|,
name|entity
operator|.
name|getProperty
argument_list|(
literal|"Name"
argument_list|)
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Single Entity:  {}"
argument_list|,
name|prettyPrint
argument_list|(
name|entity
argument_list|)
argument_list|)
expr_stmt|;
name|responseHandler
operator|.
name|reset
argument_list|()
expr_stmt|;
name|olingoApp
operator|.
name|read
argument_list|(
name|edm
argument_list|,
name|TEST_PEOPLE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|responseHandler
argument_list|)
expr_stmt|;
name|entity
operator|=
name|responseHandler
operator|.
name|await
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Russell"
argument_list|,
name|entity
operator|.
name|getProperty
argument_list|(
literal|"FirstName"
argument_list|)
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Single Entry:  {}"
argument_list|,
name|prettyPrint
argument_list|(
name|entity
argument_list|)
argument_list|)
expr_stmt|;
name|responseHandler
operator|.
name|reset
argument_list|()
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|queryParams
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|queryParams
operator|.
name|put
argument_list|(
name|SystemQueryOptionKind
operator|.
name|EXPAND
operator|.
name|toString
argument_list|()
argument_list|,
name|TRIPS
argument_list|)
expr_stmt|;
name|olingoApp
operator|.
name|read
argument_list|(
name|edm
argument_list|,
name|TEST_PEOPLE
argument_list|,
name|queryParams
argument_list|,
literal|null
argument_list|,
name|responseHandler
argument_list|)
expr_stmt|;
name|ClientEntity
name|entityExpanded
init|=
name|responseHandler
operator|.
name|await
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Single People Entiry with expanded Trips relation:  {}"
argument_list|,
name|prettyPrint
argument_list|(
name|entityExpanded
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReadUnparsedEntity ()
specifier|public
name|void
name|testReadUnparsedEntity
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|TestOlingo4ResponseHandler
argument_list|<
name|InputStream
argument_list|>
name|responseHandler
init|=
operator|new
name|TestOlingo4ResponseHandler
argument_list|<>
argument_list|()
decl_stmt|;
name|olingoApp
operator|.
name|uread
argument_list|(
name|edm
argument_list|,
name|TEST_AIRLINE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|responseHandler
argument_list|)
expr_stmt|;
name|InputStream
name|rawEntity
init|=
name|responseHandler
operator|.
name|await
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Data entity"
argument_list|,
name|rawEntity
argument_list|)
expr_stmt|;
name|ClientEntity
name|entity
init|=
name|reader
operator|.
name|readEntity
argument_list|(
name|rawEntity
argument_list|,
name|TEST_FORMAT
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Shanghai Airline"
argument_list|,
name|entity
operator|.
name|getProperty
argument_list|(
literal|"Name"
argument_list|)
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Single Entity:  {}"
argument_list|,
name|prettyPrint
argument_list|(
name|entity
argument_list|)
argument_list|)
expr_stmt|;
name|responseHandler
operator|.
name|reset
argument_list|()
expr_stmt|;
name|olingoApp
operator|.
name|uread
argument_list|(
name|edm
argument_list|,
name|TEST_PEOPLE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|responseHandler
argument_list|)
expr_stmt|;
name|rawEntity
operator|=
name|responseHandler
operator|.
name|await
argument_list|()
expr_stmt|;
name|entity
operator|=
name|reader
operator|.
name|readEntity
argument_list|(
name|rawEntity
argument_list|,
name|TEST_FORMAT
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Russell"
argument_list|,
name|entity
operator|.
name|getProperty
argument_list|(
literal|"FirstName"
argument_list|)
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Single Entity:  {}"
argument_list|,
name|prettyPrint
argument_list|(
name|entity
argument_list|)
argument_list|)
expr_stmt|;
name|responseHandler
operator|.
name|reset
argument_list|()
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|queryParams
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|queryParams
operator|.
name|put
argument_list|(
name|SystemQueryOptionKind
operator|.
name|EXPAND
operator|.
name|toString
argument_list|()
argument_list|,
name|TRIPS
argument_list|)
expr_stmt|;
name|olingoApp
operator|.
name|uread
argument_list|(
name|edm
argument_list|,
name|TEST_PEOPLE
argument_list|,
name|queryParams
argument_list|,
literal|null
argument_list|,
name|responseHandler
argument_list|)
expr_stmt|;
name|rawEntity
operator|=
name|responseHandler
operator|.
name|await
argument_list|()
expr_stmt|;
name|entity
operator|=
name|reader
operator|.
name|readEntity
argument_list|(
name|rawEntity
argument_list|,
name|TEST_FORMAT
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Single People Entiry with expanded Trips relation:  {}"
argument_list|,
name|prettyPrint
argument_list|(
name|entity
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReadUpdateProperties ()
specifier|public
name|void
name|testReadUpdateProperties
parameter_list|()
throws|throws
name|Exception
block|{
comment|// test simple property Airports.Name
specifier|final
name|TestOlingo4ResponseHandler
argument_list|<
name|ClientPrimitiveValue
argument_list|>
name|propertyHandler
init|=
operator|new
name|TestOlingo4ResponseHandler
argument_list|<>
argument_list|()
decl_stmt|;
name|olingoApp
operator|.
name|read
argument_list|(
name|edm
argument_list|,
name|TEST_AIRPORTS_SIMPLE_PROPERTY
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|propertyHandler
argument_list|)
expr_stmt|;
name|ClientPrimitiveValue
name|name
init|=
name|propertyHandler
operator|.
name|await
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"San Francisco International Airport"
argument_list|,
name|name
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Airport name property value {}"
argument_list|,
name|name
operator|.
name|asPrimitive
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|TestOlingo4ResponseHandler
argument_list|<
name|ClientPrimitiveValue
argument_list|>
name|valueHandler
init|=
operator|new
name|TestOlingo4ResponseHandler
argument_list|<>
argument_list|()
decl_stmt|;
name|olingoApp
operator|.
name|read
argument_list|(
name|edm
argument_list|,
name|TEST_AIRPORTS_SIMPLE_PROPERTY_VALUE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|valueHandler
argument_list|)
expr_stmt|;
name|ClientPrimitiveValue
name|nameValue
init|=
name|valueHandler
operator|.
name|await
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"San Francisco International Airport"
argument_list|,
name|name
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Airport name property value {}"
argument_list|,
name|nameValue
argument_list|)
expr_stmt|;
name|TestOlingo4ResponseHandler
argument_list|<
name|HttpStatusCode
argument_list|>
name|statusHandler
init|=
operator|new
name|TestOlingo4ResponseHandler
argument_list|<>
argument_list|()
decl_stmt|;
comment|// All properties updates (simple and complex) are performing through
comment|// ClientEntity object
name|ClientEntity
name|clientEntity
init|=
name|objFactory
operator|.
name|newEntity
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|clientEntity
operator|.
name|getProperties
argument_list|()
operator|.
name|add
argument_list|(
name|objFactory
operator|.
name|newPrimitiveProperty
argument_list|(
literal|"MiddleName"
argument_list|,
name|objFactory
operator|.
name|newPrimitiveValueBuilder
argument_list|()
operator|.
name|buildString
argument_list|(
literal|"Middle"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|olingoApp
operator|.
name|update
argument_list|(
name|edm
argument_list|,
name|TEST_PEOPLE
argument_list|,
literal|null
argument_list|,
name|clientEntity
argument_list|,
name|statusHandler
argument_list|)
expr_stmt|;
name|HttpStatusCode
name|statusCode
init|=
name|statusHandler
operator|.
name|await
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|HttpStatusCode
operator|.
name|NO_CONTENT
argument_list|,
name|statusCode
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Name property updated with status {}"
argument_list|,
name|statusCode
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check for updated property by reading entire entity
specifier|final
name|TestOlingo4ResponseHandler
argument_list|<
name|ClientEntity
argument_list|>
name|responseHandler
init|=
operator|new
name|TestOlingo4ResponseHandler
argument_list|<>
argument_list|()
decl_stmt|;
name|olingoApp
operator|.
name|read
argument_list|(
name|edm
argument_list|,
name|TEST_PEOPLE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|responseHandler
argument_list|)
expr_stmt|;
name|ClientEntity
name|entity
init|=
name|responseHandler
operator|.
name|await
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Middle"
argument_list|,
name|entity
operator|.
name|getProperty
argument_list|(
literal|"MiddleName"
argument_list|)
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Updated Single Entity:  {}"
argument_list|,
name|prettyPrint
argument_list|(
name|entity
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReadCount ()
specifier|public
name|void
name|testReadCount
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|TestOlingo4ResponseHandler
argument_list|<
name|Long
argument_list|>
name|countHandler
init|=
operator|new
name|TestOlingo4ResponseHandler
argument_list|<>
argument_list|()
decl_stmt|;
name|olingoApp
operator|.
name|read
argument_list|(
name|edm
argument_list|,
name|PEOPLE
operator|+
name|COUNT_OPTION
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|countHandler
argument_list|)
expr_stmt|;
name|Long
name|count
init|=
name|countHandler
operator|.
name|await
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|20
argument_list|,
name|count
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"People count: {}"
argument_list|,
name|count
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCreateUpdateDeleteEntity ()
specifier|public
name|void
name|testCreateUpdateDeleteEntity
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create an entity to update
specifier|final
name|TestOlingo4ResponseHandler
argument_list|<
name|ClientEntity
argument_list|>
name|entryHandler
init|=
operator|new
name|TestOlingo4ResponseHandler
argument_list|<>
argument_list|()
decl_stmt|;
name|olingoApp
operator|.
name|create
argument_list|(
name|edm
argument_list|,
name|PEOPLE
argument_list|,
literal|null
argument_list|,
name|createEntity
argument_list|()
argument_list|,
name|entryHandler
argument_list|)
expr_stmt|;
name|ClientEntity
name|createdEntity
init|=
name|entryHandler
operator|.
name|await
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Created Entity:  {}"
argument_list|,
name|prettyPrint
argument_list|(
name|createdEntity
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|TestOlingo4ResponseHandler
argument_list|<
name|HttpStatusCode
argument_list|>
name|statusHandler
init|=
operator|new
name|TestOlingo4ResponseHandler
argument_list|<>
argument_list|()
decl_stmt|;
name|ClientEntity
name|updateEntity
init|=
name|createEntity
argument_list|()
decl_stmt|;
name|updateEntity
operator|.
name|getProperties
argument_list|()
operator|.
name|add
argument_list|(
name|objFactory
operator|.
name|newPrimitiveProperty
argument_list|(
literal|"MiddleName"
argument_list|,
name|objFactory
operator|.
name|newPrimitiveValueBuilder
argument_list|()
operator|.
name|buildString
argument_list|(
literal|"Middle"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|olingoApp
operator|.
name|update
argument_list|(
name|edm
argument_list|,
name|TEST_CREATE_PEOPLE
argument_list|,
literal|null
argument_list|,
name|updateEntity
argument_list|,
name|statusHandler
argument_list|)
expr_stmt|;
name|statusHandler
operator|.
name|await
argument_list|()
expr_stmt|;
name|statusHandler
operator|.
name|reset
argument_list|()
expr_stmt|;
name|updateEntity
operator|=
name|createEntity
argument_list|()
expr_stmt|;
name|updateEntity
operator|.
name|getProperties
argument_list|()
operator|.
name|add
argument_list|(
name|objFactory
operator|.
name|newPrimitiveProperty
argument_list|(
literal|"MiddleName"
argument_list|,
name|objFactory
operator|.
name|newPrimitiveValueBuilder
argument_list|()
operator|.
name|buildString
argument_list|(
literal|"Middle Patched"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|olingoApp
operator|.
name|patch
argument_list|(
name|edm
argument_list|,
name|TEST_CREATE_PEOPLE
argument_list|,
literal|null
argument_list|,
name|updateEntity
argument_list|,
name|statusHandler
argument_list|)
expr_stmt|;
name|statusHandler
operator|.
name|await
argument_list|()
expr_stmt|;
name|entryHandler
operator|.
name|reset
argument_list|()
expr_stmt|;
name|olingoApp
operator|.
name|read
argument_list|(
name|edm
argument_list|,
name|TEST_CREATE_PEOPLE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|entryHandler
argument_list|)
expr_stmt|;
name|ClientEntity
name|updatedEntity
init|=
name|entryHandler
operator|.
name|await
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Updated Entity successfully:  {}"
argument_list|,
name|prettyPrint
argument_list|(
name|updatedEntity
argument_list|)
argument_list|)
expr_stmt|;
name|statusHandler
operator|.
name|reset
argument_list|()
expr_stmt|;
name|olingoApp
operator|.
name|delete
argument_list|(
name|TEST_CREATE_PEOPLE
argument_list|,
literal|null
argument_list|,
name|statusHandler
argument_list|)
expr_stmt|;
name|HttpStatusCode
name|statusCode
init|=
name|statusHandler
operator|.
name|await
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Deletion of Entity was successful:  {}: {}"
argument_list|,
name|statusCode
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|statusCode
operator|.
name|getInfo
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Verify Delete Entity"
argument_list|)
expr_stmt|;
name|entryHandler
operator|.
name|reset
argument_list|()
expr_stmt|;
name|olingoApp
operator|.
name|read
argument_list|(
name|edm
argument_list|,
name|TEST_CREATE_PEOPLE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|entryHandler
argument_list|)
expr_stmt|;
name|entryHandler
operator|.
name|await
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Entity not deleted!"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Deleted entity not found: {}"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testBatchRequest ()
specifier|public
name|void
name|testBatchRequest
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|List
argument_list|<
name|Olingo4BatchRequest
argument_list|>
name|batchParts
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
comment|// 1. Edm query
name|batchParts
operator|.
name|add
argument_list|(
name|Olingo4BatchQueryRequest
operator|.
name|resourcePath
argument_list|(
name|Constants
operator|.
name|METADATA
argument_list|)
operator|.
name|resourceUri
argument_list|(
name|TEST_SERVICE_BASE_URL
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// 2. Query entity set
name|batchParts
operator|.
name|add
argument_list|(
name|Olingo4BatchQueryRequest
operator|.
name|resourcePath
argument_list|(
name|PEOPLE
argument_list|)
operator|.
name|resourceUri
argument_list|(
name|TEST_SERVICE_BASE_URL
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// 3. Read entity
name|batchParts
operator|.
name|add
argument_list|(
name|Olingo4BatchQueryRequest
operator|.
name|resourcePath
argument_list|(
name|TEST_PEOPLE
argument_list|)
operator|.
name|resourceUri
argument_list|(
name|TEST_SERVICE_BASE_URL
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// 4. Read with expand
specifier|final
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|queryParams
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|queryParams
operator|.
name|put
argument_list|(
name|SystemQueryOptionKind
operator|.
name|EXPAND
operator|.
name|toString
argument_list|()
argument_list|,
name|TRIPS
argument_list|)
expr_stmt|;
name|batchParts
operator|.
name|add
argument_list|(
name|Olingo4BatchQueryRequest
operator|.
name|resourcePath
argument_list|(
name|TEST_PEOPLE
argument_list|)
operator|.
name|queryParams
argument_list|(
name|queryParams
argument_list|)
operator|.
name|resourceUri
argument_list|(
name|TEST_SERVICE_BASE_URL
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// 5. Create entity
specifier|final
name|ClientEntity
name|clientEntity
init|=
name|createEntity
argument_list|()
decl_stmt|;
name|batchParts
operator|.
name|add
argument_list|(
name|Olingo4BatchChangeRequest
operator|.
name|resourcePath
argument_list|(
name|PEOPLE
argument_list|)
operator|.
name|resourceUri
argument_list|(
name|TEST_SERVICE_BASE_URL
argument_list|)
operator|.
name|contentId
argument_list|(
name|TEST_CREATE_RESOURCE_CONTENT_ID
argument_list|)
operator|.
name|operation
argument_list|(
name|Operation
operator|.
name|CREATE
argument_list|)
operator|.
name|body
argument_list|(
name|clientEntity
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// 6. Update entity
name|clientEntity
operator|.
name|getProperties
argument_list|()
operator|.
name|add
argument_list|(
name|objFactory
operator|.
name|newPrimitiveProperty
argument_list|(
literal|"MiddleName"
argument_list|,
name|objFactory
operator|.
name|newPrimitiveValueBuilder
argument_list|()
operator|.
name|buildString
argument_list|(
literal|"Lewis"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|batchParts
operator|.
name|add
argument_list|(
name|Olingo4BatchChangeRequest
operator|.
name|resourcePath
argument_list|(
name|TEST_CREATE_PEOPLE
argument_list|)
operator|.
name|resourceUri
argument_list|(
name|TEST_SERVICE_BASE_URL
argument_list|)
operator|.
name|contentId
argument_list|(
name|TEST_UPDATE_RESOURCE_CONTENT_ID
argument_list|)
operator|.
name|operation
argument_list|(
name|Operation
operator|.
name|UPDATE
argument_list|)
operator|.
name|body
argument_list|(
name|clientEntity
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// 7. Delete entity
name|batchParts
operator|.
name|add
argument_list|(
name|Olingo4BatchChangeRequest
operator|.
name|resourcePath
argument_list|(
name|TEST_CREATE_PEOPLE
argument_list|)
operator|.
name|resourceUri
argument_list|(
name|TEST_SERVICE_BASE_URL
argument_list|)
operator|.
name|operation
argument_list|(
name|Operation
operator|.
name|DELETE
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// 8. Read to verify entity delete
name|batchParts
operator|.
name|add
argument_list|(
name|Olingo4BatchQueryRequest
operator|.
name|resourcePath
argument_list|(
name|TEST_CREATE_PEOPLE
argument_list|)
operator|.
name|resourceUri
argument_list|(
name|TEST_SERVICE_BASE_URL
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|TestOlingo4ResponseHandler
argument_list|<
name|List
argument_list|<
name|Olingo4BatchResponse
argument_list|>
argument_list|>
name|responseHandler
init|=
operator|new
name|TestOlingo4ResponseHandler
argument_list|<>
argument_list|()
decl_stmt|;
name|olingoApp
operator|.
name|batch
argument_list|(
name|edm
argument_list|,
literal|null
argument_list|,
name|batchParts
argument_list|,
name|responseHandler
argument_list|)
expr_stmt|;
specifier|final
name|List
argument_list|<
name|Olingo4BatchResponse
argument_list|>
name|responseParts
init|=
name|responseHandler
operator|.
name|await
argument_list|(
literal|15
argument_list|,
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Batch responses expected"
argument_list|,
literal|8
argument_list|,
name|responseParts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|responseParts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|ClientEntitySet
name|clientEntitySet
init|=
operator|(
name|ClientEntitySet
operator|)
name|responseParts
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|clientEntitySet
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Batch entity set:  {}"
argument_list|,
name|prettyPrint
argument_list|(
name|clientEntitySet
argument_list|)
argument_list|)
expr_stmt|;
name|ClientEntity
name|returnClientEntity
init|=
operator|(
name|ClientEntity
operator|)
name|responseParts
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|returnClientEntity
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Batch read entity:  {}"
argument_list|,
name|prettyPrint
argument_list|(
name|returnClientEntity
argument_list|)
argument_list|)
expr_stmt|;
name|returnClientEntity
operator|=
operator|(
name|ClientEntity
operator|)
name|responseParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getBody
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|returnClientEntity
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Batch read entity with expand:  {}"
argument_list|,
name|prettyPrint
argument_list|(
name|returnClientEntity
argument_list|)
argument_list|)
expr_stmt|;
name|ClientEntity
name|createdClientEntity
init|=
operator|(
name|ClientEntity
operator|)
name|responseParts
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|createdClientEntity
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_CREATE_RESOURCE_CONTENT_ID
argument_list|,
name|responseParts
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getContentId
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Batch created entity:  {}"
argument_list|,
name|prettyPrint
argument_list|(
name|returnClientEntity
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HttpStatusCode
operator|.
name|NO_CONTENT
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|responseParts
operator|.
name|get
argument_list|(
literal|5
argument_list|)
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_UPDATE_RESOURCE_CONTENT_ID
argument_list|,
name|responseParts
operator|.
name|get
argument_list|(
literal|5
argument_list|)
operator|.
name|getContentId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HttpStatusCode
operator|.
name|NO_CONTENT
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|responseParts
operator|.
name|get
argument_list|(
literal|6
argument_list|)
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HttpStatusCode
operator|.
name|NOT_FOUND
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|responseParts
operator|.
name|get
argument_list|(
literal|7
argument_list|)
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createEntity ()
specifier|private
name|ClientEntity
name|createEntity
parameter_list|()
block|{
name|ClientEntity
name|clientEntity
init|=
name|objFactory
operator|.
name|newEntity
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|clientEntity
operator|.
name|getProperties
argument_list|()
operator|.
name|add
argument_list|(
name|objFactory
operator|.
name|newPrimitiveProperty
argument_list|(
literal|"UserName"
argument_list|,
name|objFactory
operator|.
name|newPrimitiveValueBuilder
argument_list|()
operator|.
name|buildString
argument_list|(
literal|"lewisblack"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|clientEntity
operator|.
name|getProperties
argument_list|()
operator|.
name|add
argument_list|(
name|objFactory
operator|.
name|newPrimitiveProperty
argument_list|(
literal|"FirstName"
argument_list|,
name|objFactory
operator|.
name|newPrimitiveValueBuilder
argument_list|()
operator|.
name|buildString
argument_list|(
literal|"Lewis"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|clientEntity
operator|.
name|getProperties
argument_list|()
operator|.
name|add
argument_list|(
name|objFactory
operator|.
name|newPrimitiveProperty
argument_list|(
literal|"LastName"
argument_list|,
name|objFactory
operator|.
name|newPrimitiveValueBuilder
argument_list|()
operator|.
name|buildString
argument_list|(
literal|"Black"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|clientEntity
return|;
block|}
DECL|method|prettyPrint (ClientEntitySet entitySet)
specifier|private
specifier|static
name|String
name|prettyPrint
parameter_list|(
name|ClientEntitySet
name|entitySet
parameter_list|)
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"[\n"
argument_list|)
expr_stmt|;
for|for
control|(
name|ClientEntity
name|entity
range|:
name|entitySet
operator|.
name|getEntities
argument_list|()
control|)
block|{
name|builder
operator|.
name|append
argument_list|(
name|prettyPrint
argument_list|(
name|entity
operator|.
name|getProperties
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|append
argument_list|(
literal|'\n'
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|append
argument_list|(
literal|"]\n"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|prettyPrint (ClientEntity entity)
specifier|private
specifier|static
name|String
name|prettyPrint
parameter_list|(
name|ClientEntity
name|entity
parameter_list|)
block|{
return|return
name|prettyPrint
argument_list|(
name|entity
operator|.
name|getProperties
argument_list|()
argument_list|,
literal|0
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|prettyPrint (Map<String, Object> properties, int level)
specifier|private
specifier|static
name|String
name|prettyPrint
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|,
name|int
name|level
parameter_list|)
block|{
name|StringBuilder
name|b
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|Entry
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|entries
init|=
name|properties
operator|.
name|entrySet
argument_list|()
decl_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entry
range|:
name|entries
control|)
block|{
name|intend
argument_list|(
name|b
argument_list|,
name|level
argument_list|)
expr_stmt|;
name|b
operator|.
name|append
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|": "
argument_list|)
expr_stmt|;
name|Object
name|value
init|=
name|entry
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|value
operator|instanceof
name|Map
condition|)
block|{
name|value
operator|=
name|prettyPrint
argument_list|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|value
argument_list|,
name|level
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|value
operator|instanceof
name|Calendar
condition|)
block|{
name|Calendar
name|cal
init|=
operator|(
name|Calendar
operator|)
name|value
decl_stmt|;
name|value
operator|=
name|DateFormat
operator|.
name|getInstance
argument_list|()
operator|.
name|format
argument_list|(
name|cal
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|b
operator|.
name|append
argument_list|(
name|value
argument_list|)
operator|.
name|append
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
block|}
comment|// remove last line break
name|b
operator|.
name|deleteCharAt
argument_list|(
name|b
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
return|return
name|b
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|prettyPrint (Collection<ClientProperty> properties, int level)
specifier|private
specifier|static
name|String
name|prettyPrint
parameter_list|(
name|Collection
argument_list|<
name|ClientProperty
argument_list|>
name|properties
parameter_list|,
name|int
name|level
parameter_list|)
block|{
name|StringBuilder
name|b
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|Object
name|property
range|:
name|properties
control|)
block|{
name|intend
argument_list|(
name|b
argument_list|,
name|level
argument_list|)
expr_stmt|;
if|if
condition|(
name|property
operator|instanceof
name|ClientProperty
condition|)
block|{
name|ClientProperty
name|entry
init|=
operator|(
name|ClientProperty
operator|)
name|property
decl_stmt|;
name|ClientValue
name|value
init|=
name|entry
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|value
operator|.
name|isCollection
argument_list|()
condition|)
block|{
name|ClientCollectionValue
name|cclvalue
init|=
name|value
operator|.
name|asCollection
argument_list|()
decl_stmt|;
name|b
operator|.
name|append
argument_list|(
name|entry
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|": "
argument_list|)
expr_stmt|;
name|b
operator|.
name|append
argument_list|(
name|prettyPrint
argument_list|(
name|cclvalue
operator|.
name|asJavaCollection
argument_list|()
argument_list|,
name|level
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|value
operator|.
name|isComplex
argument_list|()
condition|)
block|{
name|ClientComplexValue
name|cpxvalue
init|=
name|value
operator|.
name|asComplex
argument_list|()
decl_stmt|;
name|b
operator|.
name|append
argument_list|(
name|prettyPrint
argument_list|(
name|cpxvalue
operator|.
name|asJavaMap
argument_list|()
argument_list|,
name|level
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|value
operator|.
name|isEnum
argument_list|()
condition|)
block|{
name|ClientEnumValue
name|cnmvalue
init|=
name|value
operator|.
name|asEnum
argument_list|()
decl_stmt|;
name|b
operator|.
name|append
argument_list|(
name|entry
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|": "
argument_list|)
expr_stmt|;
name|b
operator|.
name|append
argument_list|(
name|cnmvalue
operator|.
name|getValue
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|value
operator|.
name|isPrimitive
argument_list|()
condition|)
block|{
name|b
operator|.
name|append
argument_list|(
name|entry
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|": "
argument_list|)
expr_stmt|;
name|b
operator|.
name|append
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|b
operator|.
name|append
argument_list|(
name|property
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|b
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|intend (StringBuilder builder, int intendLevel)
specifier|private
specifier|static
name|void
name|intend
parameter_list|(
name|StringBuilder
name|builder
parameter_list|,
name|int
name|intendLevel
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|intendLevel
condition|;
name|i
operator|++
control|)
block|{
name|builder
operator|.
name|append
argument_list|(
literal|"  "
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|TestOlingo4ResponseHandler
specifier|private
specifier|static
specifier|final
class|class
name|TestOlingo4ResponseHandler
parameter_list|<
name|T
parameter_list|>
implements|implements
name|Olingo4ResponseHandler
argument_list|<
name|T
argument_list|>
block|{
DECL|field|response
specifier|private
name|T
name|response
decl_stmt|;
DECL|field|error
specifier|private
name|Exception
name|error
decl_stmt|;
DECL|field|latch
specifier|private
name|CountDownLatch
name|latch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
annotation|@
name|Override
DECL|method|onResponse (T response, Map<String, String> responseHeaders)
specifier|public
name|void
name|onResponse
parameter_list|(
name|T
name|response
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|responseHeaders
parameter_list|)
block|{
name|this
operator|.
name|response
operator|=
name|response
expr_stmt|;
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
if|if
condition|(
name|response
operator|instanceof
name|ClientEntitySet
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Received response: {}"
argument_list|,
name|prettyPrint
argument_list|(
operator|(
name|ClientEntitySet
operator|)
name|response
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|response
operator|instanceof
name|ClientEntity
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Received response: {}"
argument_list|,
name|prettyPrint
argument_list|(
operator|(
name|ClientEntity
operator|)
name|response
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Received response: {}"
argument_list|,
name|response
argument_list|)
expr_stmt|;
block|}
block|}
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onException (Exception ex)
specifier|public
name|void
name|onException
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|error
operator|=
name|ex
expr_stmt|;
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onCanceled ()
specifier|public
name|void
name|onCanceled
parameter_list|()
block|{
name|error
operator|=
operator|new
name|IllegalStateException
argument_list|(
literal|"Request Canceled"
argument_list|)
expr_stmt|;
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
DECL|method|await ()
specifier|public
name|T
name|await
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|await
argument_list|(
name|TIMEOUT
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
return|;
block|}
DECL|method|await (long timeout, TimeUnit unit)
specifier|public
name|T
name|await
parameter_list|(
name|long
name|timeout
parameter_list|,
name|TimeUnit
name|unit
parameter_list|)
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
literal|"Timeout waiting for response"
argument_list|,
name|latch
operator|.
name|await
argument_list|(
name|timeout
argument_list|,
name|unit
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|error
operator|!=
literal|null
condition|)
block|{
throw|throw
name|error
throw|;
block|}
name|assertNotNull
argument_list|(
literal|"Response"
argument_list|,
name|response
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
DECL|method|reset ()
specifier|public
name|void
name|reset
parameter_list|()
block|{
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
name|latch
operator|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|response
operator|=
literal|null
expr_stmt|;
name|error
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

