begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.converter.jaxb
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|converter
operator|.
name|jaxb
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|util
operator|.
name|JAXBSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|ParserConfigurationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|example
operator|.
name|PurchaseOrder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|ExchangeTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|JaxbConverterTest
specifier|public
class|class
name|JaxbConverterTest
extends|extends
name|ExchangeTestSupport
block|{
DECL|field|jaxbConverter
specifier|private
name|JaxbConverter
name|jaxbConverter
decl_stmt|;
DECL|field|order
specifier|private
name|PurchaseOrder
name|order
decl_stmt|;
annotation|@
name|Override
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|jaxbConverter
operator|=
operator|new
name|JaxbConverter
argument_list|()
expr_stmt|;
name|order
operator|=
operator|new
name|PurchaseOrder
argument_list|()
expr_stmt|;
name|order
operator|.
name|setAmount
argument_list|(
literal|12
argument_list|)
expr_stmt|;
name|order
operator|.
name|setName
argument_list|(
literal|"Beer"
argument_list|)
expr_stmt|;
name|order
operator|.
name|setPrice
argument_list|(
literal|2.4
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testToSourceUsingExplicitJaxbConverter ()
specifier|public
name|void
name|testToSourceUsingExplicitJaxbConverter
parameter_list|()
throws|throws
name|JAXBException
block|{
name|JAXBSource
name|source
init|=
name|jaxbConverter
operator|.
name|toSource
argument_list|(
name|order
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"The result should be not be null"
argument_list|,
name|source
argument_list|)
expr_stmt|;
name|source
operator|=
name|jaxbConverter
operator|.
name|toSource
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"The result should be null"
argument_list|,
name|source
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testToSourceUsingTypeConverter ()
specifier|public
name|void
name|testToSourceUsingTypeConverter
parameter_list|()
block|{
comment|// this time the fall back converter will be use
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|order
argument_list|)
expr_stmt|;
name|Source
name|source
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Source
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"The result source should not be JAXBSource"
argument_list|,
name|source
operator|instanceof
name|Source
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
operator|new
name|CamelException
argument_list|(
literal|"Test"
argument_list|)
argument_list|)
expr_stmt|;
name|source
operator|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Source
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"The result should be null"
argument_list|,
name|source
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testToDocumentUsingExplicitJaxbConverter ()
specifier|public
name|void
name|testToDocumentUsingExplicitJaxbConverter
parameter_list|()
throws|throws
name|JAXBException
throws|,
name|ParserConfigurationException
block|{
name|Document
name|document
init|=
name|jaxbConverter
operator|.
name|toDocument
argument_list|(
name|order
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"The result should be not be null"
argument_list|,
name|document
argument_list|)
expr_stmt|;
name|document
operator|=
name|jaxbConverter
operator|.
name|toDocument
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"The result should be null"
argument_list|,
name|document
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testToDocumentUsingTypeConverter ()
specifier|public
name|void
name|testToDocumentUsingTypeConverter
parameter_list|()
block|{
comment|// this time the fall back converter will be use
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|order
argument_list|)
expr_stmt|;
name|Document
name|document
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Document
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"The result source should not be JAXBSource"
argument_list|,
name|document
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
operator|new
name|CamelException
argument_list|(
literal|"Test"
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|Document
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"The result should be null"
argument_list|,
name|document
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

