begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.jaxb
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|jaxb
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|foo
operator|.
name|bar
operator|.
name|PersonType
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|MyPersonService
specifier|public
class|class
name|MyPersonService
block|{
DECL|method|createPerson (Exchange exchange)
specifier|public
name|void
name|createPerson
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
name|PersonType
name|person
init|=
operator|new
name|PersonType
argument_list|()
decl_stmt|;
name|person
operator|.
name|setFirstName
argument_list|(
literal|"Homer"
argument_list|)
expr_stmt|;
name|person
operator|.
name|setLastName
argument_list|(
literal|"Simpson"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|person
argument_list|)
expr_stmt|;
block|}
DECL|method|sendPerson (Exchange exchange)
specifier|public
name|void
name|sendPerson
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
name|PersonType
name|person
init|=
operator|(
name|PersonType
operator|)
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|exchange
operator|.
name|getContext
argument_list|()
operator|.
name|createProducerTemplate
argument_list|()
operator|.
name|sendBody
argument_list|(
literal|"mock:person"
argument_list|,
name|person
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

