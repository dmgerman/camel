begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.converter.jaxb
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|converter
operator|.
name|jaxb
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|NamespaceContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamWriter
import|;
end_import

begin_comment
comment|/**  * {@link XMLStreamWriter} wrapper that filters out non-XML characters, see  * {@link NonXmlCharFilterer} for details. Filtering applies to  *<ul>  *<li>Characters</li>  *<li>CData</li>  *<li>Attributes</li>  *<li>Comments</li>  *</ul>  *   * @see XMLStreamWriter  */
end_comment

begin_class
DECL|class|FilteringXmlStreamWriter
specifier|public
class|class
name|FilteringXmlStreamWriter
implements|implements
name|XMLStreamWriter
block|{
DECL|field|nonXmlCharFilterer
name|NonXmlCharFilterer
name|nonXmlCharFilterer
init|=
operator|new
name|NonXmlCharFilterer
argument_list|()
decl_stmt|;
DECL|field|writer
specifier|private
name|XMLStreamWriter
name|writer
decl_stmt|;
DECL|field|encoding
specifier|private
name|String
name|encoding
decl_stmt|;
comment|/**      * @param writer      *            target writer to wrap.      */
DECL|method|FilteringXmlStreamWriter (XMLStreamWriter writer)
specifier|public
name|FilteringXmlStreamWriter
parameter_list|(
name|XMLStreamWriter
name|writer
parameter_list|)
block|{
name|this
operator|.
name|writer
operator|=
name|writer
expr_stmt|;
block|}
comment|/**      * @param writer      *            target writer to wrap.      * @param encoding      *            the encoding to write in the xml prolog.      *      */
DECL|method|FilteringXmlStreamWriter (XMLStreamWriter writer, String encoding)
specifier|public
name|FilteringXmlStreamWriter
parameter_list|(
name|XMLStreamWriter
name|writer
parameter_list|,
name|String
name|encoding
parameter_list|)
block|{
name|this
operator|.
name|writer
operator|=
name|writer
expr_stmt|;
name|this
operator|.
name|encoding
operator|=
name|encoding
expr_stmt|;
block|}
comment|/**      * This method applies filtering before delegating call to {@link #writer}.      */
DECL|method|writeAttribute (String prefix, String namespaceURI, String localName, String value)
specifier|public
name|void
name|writeAttribute
parameter_list|(
name|String
name|prefix
parameter_list|,
name|String
name|namespaceURI
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|String
name|filteredValue
init|=
name|nonXmlCharFilterer
operator|.
name|filter
argument_list|(
name|value
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeAttribute
argument_list|(
name|prefix
argument_list|,
name|namespaceURI
argument_list|,
name|localName
argument_list|,
name|filteredValue
argument_list|)
expr_stmt|;
block|}
comment|/**      * This method applies filtering before delegating call to {@link #writer}.      */
DECL|method|writeAttribute (String namespaceURI, String localName, String value)
specifier|public
name|void
name|writeAttribute
parameter_list|(
name|String
name|namespaceURI
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|String
name|filteredValue
init|=
name|nonXmlCharFilterer
operator|.
name|filter
argument_list|(
name|value
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeAttribute
argument_list|(
name|namespaceURI
argument_list|,
name|localName
argument_list|,
name|filteredValue
argument_list|)
expr_stmt|;
block|}
comment|/**      * This method applies filtering before delegating call to {@link #writer}.      */
DECL|method|writeAttribute (String localName, String value)
specifier|public
name|void
name|writeAttribute
parameter_list|(
name|String
name|localName
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|String
name|filteredValue
init|=
name|nonXmlCharFilterer
operator|.
name|filter
argument_list|(
name|value
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeAttribute
argument_list|(
name|localName
argument_list|,
name|filteredValue
argument_list|)
expr_stmt|;
block|}
comment|/**      * This method applies filtering before delegating call to {@link #writer}.      */
DECL|method|writeCData (String data)
specifier|public
name|void
name|writeCData
parameter_list|(
name|String
name|data
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|String
name|filteredData
init|=
name|nonXmlCharFilterer
operator|.
name|filter
argument_list|(
name|data
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeCData
argument_list|(
name|filteredData
argument_list|)
expr_stmt|;
block|}
comment|/**      * This method applies filtering before delegating call to {@link #writer}.      */
DECL|method|writeCharacters (char[] text, int start, int len)
specifier|public
name|void
name|writeCharacters
parameter_list|(
name|char
index|[]
name|text
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|nonXmlCharFilterer
operator|.
name|filter
argument_list|(
name|text
argument_list|,
name|start
argument_list|,
name|len
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeCharacters
argument_list|(
name|text
argument_list|,
name|start
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
comment|/**      * This method applies filtering before delegating call to {@link #writer}.      */
DECL|method|writeCharacters (String text)
specifier|public
name|void
name|writeCharacters
parameter_list|(
name|String
name|text
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|String
name|filteredText
init|=
name|nonXmlCharFilterer
operator|.
name|filter
argument_list|(
name|text
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeCharacters
argument_list|(
name|filteredText
argument_list|)
expr_stmt|;
block|}
comment|/**      * This method applies filtering before delegating call to {@link #writer}.      */
DECL|method|writeComment (String data)
specifier|public
name|void
name|writeComment
parameter_list|(
name|String
name|data
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|String
name|filteredData
init|=
name|nonXmlCharFilterer
operator|.
name|filter
argument_list|(
name|data
argument_list|)
decl_stmt|;
name|writer
operator|.
name|writeComment
argument_list|(
name|filteredData
argument_list|)
expr_stmt|;
block|}
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|flush ()
specifier|public
name|void
name|flush
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
DECL|method|getNamespaceContext ()
specifier|public
name|NamespaceContext
name|getNamespaceContext
parameter_list|()
block|{
return|return
name|writer
operator|.
name|getNamespaceContext
argument_list|()
return|;
block|}
DECL|method|getPrefix (String uri)
specifier|public
name|String
name|getPrefix
parameter_list|(
name|String
name|uri
parameter_list|)
throws|throws
name|XMLStreamException
block|{
return|return
name|writer
operator|.
name|getPrefix
argument_list|(
name|uri
argument_list|)
return|;
block|}
DECL|method|getProperty (String name)
specifier|public
name|Object
name|getProperty
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
return|return
name|writer
operator|.
name|getProperty
argument_list|(
name|name
argument_list|)
return|;
block|}
DECL|method|setDefaultNamespace (String uri)
specifier|public
name|void
name|setDefaultNamespace
parameter_list|(
name|String
name|uri
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|setDefaultNamespace
argument_list|(
name|uri
argument_list|)
expr_stmt|;
block|}
DECL|method|setNamespaceContext (NamespaceContext context)
specifier|public
name|void
name|setNamespaceContext
parameter_list|(
name|NamespaceContext
name|context
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|setNamespaceContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
DECL|method|setPrefix (String prefix, String uri)
specifier|public
name|void
name|setPrefix
parameter_list|(
name|String
name|prefix
parameter_list|,
name|String
name|uri
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|setPrefix
argument_list|(
name|prefix
argument_list|,
name|uri
argument_list|)
expr_stmt|;
block|}
DECL|method|writeDefaultNamespace (String namespaceURI)
specifier|public
name|void
name|writeDefaultNamespace
parameter_list|(
name|String
name|namespaceURI
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|writeDefaultNamespace
argument_list|(
name|namespaceURI
argument_list|)
expr_stmt|;
block|}
DECL|method|writeDTD (String dtd)
specifier|public
name|void
name|writeDTD
parameter_list|(
name|String
name|dtd
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|writeDTD
argument_list|(
name|dtd
argument_list|)
expr_stmt|;
block|}
DECL|method|writeEmptyElement (String prefix, String localName, String namespaceURI)
specifier|public
name|void
name|writeEmptyElement
parameter_list|(
name|String
name|prefix
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|namespaceURI
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|writeEmptyElement
argument_list|(
name|prefix
argument_list|,
name|localName
argument_list|,
name|namespaceURI
argument_list|)
expr_stmt|;
block|}
DECL|method|writeEmptyElement (String namespaceURI, String localName)
specifier|public
name|void
name|writeEmptyElement
parameter_list|(
name|String
name|namespaceURI
parameter_list|,
name|String
name|localName
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|writeEmptyElement
argument_list|(
name|namespaceURI
argument_list|,
name|localName
argument_list|)
expr_stmt|;
block|}
DECL|method|writeEmptyElement (String localName)
specifier|public
name|void
name|writeEmptyElement
parameter_list|(
name|String
name|localName
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|writeEmptyElement
argument_list|(
name|localName
argument_list|)
expr_stmt|;
block|}
DECL|method|writeEndDocument ()
specifier|public
name|void
name|writeEndDocument
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|writeEndDocument
argument_list|()
expr_stmt|;
block|}
DECL|method|writeEndElement ()
specifier|public
name|void
name|writeEndElement
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
block|}
DECL|method|writeEntityRef (String name)
specifier|public
name|void
name|writeEntityRef
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|writeEntityRef
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
DECL|method|writeNamespace (String prefix, String namespaceURI)
specifier|public
name|void
name|writeNamespace
parameter_list|(
name|String
name|prefix
parameter_list|,
name|String
name|namespaceURI
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|writeNamespace
argument_list|(
name|prefix
argument_list|,
name|namespaceURI
argument_list|)
expr_stmt|;
block|}
DECL|method|writeProcessingInstruction (String target, String data)
specifier|public
name|void
name|writeProcessingInstruction
parameter_list|(
name|String
name|target
parameter_list|,
name|String
name|data
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|writeProcessingInstruction
argument_list|(
name|target
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
DECL|method|writeProcessingInstruction (String target)
specifier|public
name|void
name|writeProcessingInstruction
parameter_list|(
name|String
name|target
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|writeProcessingInstruction
argument_list|(
name|target
argument_list|)
expr_stmt|;
block|}
DECL|method|writeStartDocument ()
specifier|public
name|void
name|writeStartDocument
parameter_list|()
throws|throws
name|XMLStreamException
block|{
if|if
condition|(
name|encoding
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|writeStartDocument
argument_list|(
name|encoding
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|writer
operator|.
name|writeStartDocument
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|writeStartDocument (String encoding, String version)
specifier|public
name|void
name|writeStartDocument
parameter_list|(
name|String
name|encoding
parameter_list|,
name|String
name|version
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|writeStartDocument
argument_list|(
name|encoding
argument_list|,
name|version
argument_list|)
expr_stmt|;
block|}
DECL|method|writeStartDocument (String version)
specifier|public
name|void
name|writeStartDocument
parameter_list|(
name|String
name|version
parameter_list|)
throws|throws
name|XMLStreamException
block|{
if|if
condition|(
name|encoding
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|writeStartDocument
argument_list|(
name|encoding
argument_list|,
name|version
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|writer
operator|.
name|writeStartDocument
argument_list|(
name|version
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|writeStartElement (String prefix, String localName, String namespaceURI)
specifier|public
name|void
name|writeStartElement
parameter_list|(
name|String
name|prefix
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|namespaceURI
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|writeStartElement
argument_list|(
name|prefix
argument_list|,
name|localName
argument_list|,
name|namespaceURI
argument_list|)
expr_stmt|;
block|}
DECL|method|writeStartElement (String namespaceURI, String localName)
specifier|public
name|void
name|writeStartElement
parameter_list|(
name|String
name|namespaceURI
parameter_list|,
name|String
name|localName
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|writeStartElement
argument_list|(
name|namespaceURI
argument_list|,
name|localName
argument_list|)
expr_stmt|;
block|}
DECL|method|writeStartElement (String localName)
specifier|public
name|void
name|writeStartElement
parameter_list|(
name|String
name|localName
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|writer
operator|.
name|writeStartElement
argument_list|(
name|localName
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

