begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.google.pubsub.consumer
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|google
operator|.
name|pubsub
operator|.
name|consumer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|google
operator|.
name|pubsub
operator|.
name|GooglePubsubConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|google
operator|.
name|pubsub
operator|.
name|GooglePubsubEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|Synchronization
import|;
end_import

begin_class
DECL|class|ExchangeAckTransaction
specifier|public
class|class
name|ExchangeAckTransaction
extends|extends
name|PubsubAcknowledgement
implements|implements
name|Synchronization
block|{
DECL|method|ExchangeAckTransaction (GooglePubsubEndpoint endpoint)
specifier|public
name|ExchangeAckTransaction
parameter_list|(
name|GooglePubsubEndpoint
name|endpoint
parameter_list|)
block|{
name|super
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onComplete (Exchange exchange)
specifier|public
name|void
name|onComplete
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
name|acknowledge
argument_list|(
name|getAckIdList
argument_list|(
name|exchange
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onFailure (Exchange exchange)
specifier|public
name|void
name|onFailure
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
name|resetAckDeadline
argument_list|(
name|getAckIdList
argument_list|(
name|exchange
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getAckIdList (Exchange exchange)
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|getAckIdList
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|ackList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|exchange
operator|.
name|getProperty
argument_list|(
name|Exchange
operator|.
name|GROUPED_EXCHANGE
argument_list|)
condition|)
block|{
for|for
control|(
name|Exchange
name|ex
range|:
operator|(
name|List
argument_list|<
name|Exchange
argument_list|>
operator|)
name|exchange
operator|.
name|getProperty
argument_list|(
name|Exchange
operator|.
name|GROUPED_EXCHANGE
argument_list|)
control|)
block|{
name|String
name|ackId
init|=
operator|(
name|String
operator|)
name|ex
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|GooglePubsubConstants
operator|.
name|ACK_ID
argument_list|)
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|ackId
condition|)
block|{
name|ackList
operator|.
name|add
argument_list|(
name|ackId
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
name|ackList
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|GooglePubsubConstants
operator|.
name|ACK_ID
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|ackList
return|;
block|}
block|}
end_class

end_unit

