begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_comment
comment|/*  * Camel Api Route test generated by camel-component-util-maven-plugin  * Generated on: Wed Jul 09 19:57:11 PDT 2014  */
end_comment

begin_package
DECL|package|org.apache.camel.component.linkedin
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|api
operator|.
name|model
operator|.
name|Person
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|internal
operator|.
name|LinkedInApiCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|internal
operator|.
name|PeopleResourceApiMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Test class for {@link org.apache.camel.component.linkedin.api.PeopleResource} APIs.  */
end_comment

begin_class
DECL|class|PeopleResourceIntegrationTest
specifier|public
class|class
name|PeopleResourceIntegrationTest
extends|extends
name|AbstractLinkedInTestSupport
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|PeopleResourceIntegrationTest
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|PATH_PREFIX
specifier|private
specifier|static
specifier|final
name|String
name|PATH_PREFIX
init|=
literal|"people"
decl_stmt|;
comment|// TODO provide parameter values for addActivity
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testAddActivity ()
specifier|public
name|void
name|testAddActivity
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using org.apache.camel.component.linkedin.api.model.Activity message body for single parameter "activity"
name|requestBody
argument_list|(
literal|"direct://ADDACTIVITY"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for addGroupMembership
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testAddGroupMembership ()
specifier|public
name|void
name|testAddGroupMembership
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using org.apache.camel.component.linkedin.api.model.GroupMembership message body for single parameter "groupmembership"
name|requestBody
argument_list|(
literal|"direct://ADDGROUPMEMBERSHIP"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for addInvite
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testAddInvite ()
specifier|public
name|void
name|testAddInvite
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using org.apache.camel.component.linkedin.api.model.MailboxItem message body for single parameter "mailboxitem"
name|requestBody
argument_list|(
literal|"direct://ADDINVITE"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for addJobBookmark
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testAddJobBookmark ()
specifier|public
name|void
name|testAddJobBookmark
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using org.apache.camel.component.linkedin.api.model.JobBookmark message body for single parameter "jobbookmark"
name|requestBody
argument_list|(
literal|"direct://ADDJOBBOOKMARK"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for addUpdateComment
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testAddUpdateComment ()
specifier|public
name|void
name|testAddUpdateComment
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.update_key"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is org.apache.camel.component.linkedin.api.model.UpdateComment
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.updatecomment"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|requestBodyAndHeaders
argument_list|(
literal|"direct://ADDUPDATECOMMENT"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for followCompany
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testFollowCompany ()
specifier|public
name|void
name|testFollowCompany
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using org.apache.camel.component.linkedin.api.model.Company message body for single parameter "company"
name|requestBody
argument_list|(
literal|"direct://FOLLOWCOMPANY"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetConnections ()
specifier|public
name|void
name|testGetConnections
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// use defaults
comment|/*         // parameter type is String         headers.put("CamelLinkedIn.fields", null);         // parameter type is Boolean         headers.put("CamelLinkedIn.secure_urls", null); */
specifier|final
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|api
operator|.
name|model
operator|.
name|Connections
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETCONNECTIONS"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getConnections result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getConnections: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for getConnectionsById
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testGetConnectionsById ()
specifier|public
name|void
name|testGetConnectionsById
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.person_id"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.fields"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is Boolean
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.secure_urls"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
specifier|final
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|api
operator|.
name|model
operator|.
name|Connections
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETCONNECTIONSBYID"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getConnectionsById result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getConnectionsById: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for getConnectionsByUrl
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testGetConnectionsByUrl ()
specifier|public
name|void
name|testGetConnectionsByUrl
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.public_profile_url"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.fields"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is Boolean
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.secure_urls"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
specifier|final
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|api
operator|.
name|model
operator|.
name|Connections
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETCONNECTIONSBYURL"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getConnectionsByUrl result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getConnectionsByUrl: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetFollowedCompanies ()
specifier|public
name|void
name|testGetFollowedCompanies
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using String message body for single parameter "fields"
specifier|final
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|api
operator|.
name|model
operator|.
name|Companies
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://GETFOLLOWEDCOMPANIES"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getFollowedCompanies result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getFollowedCompanies: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for getGroupMembershipSettings
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testGetGroupMembershipSettings ()
specifier|public
name|void
name|testGetGroupMembershipSettings
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.group_id"
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.fields"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is Long
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.count"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is Long
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.start"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
specifier|final
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|api
operator|.
name|model
operator|.
name|GroupMembership
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETGROUPMEMBERSHIPSETTINGS"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getGroupMembershipSettings result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getGroupMembershipSettings: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetGroupMemberships ()
specifier|public
name|void
name|testGetGroupMemberships
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// use defaults
comment|/*         // parameter type is org.apache.camel.component.linkedin.api.model.MembershipState         headers.put("CamelLinkedIn.membership_state", null);         // parameter type is String         headers.put("CamelLinkedIn.fields", null);         // parameter type is Long         headers.put("CamelLinkedIn.count", null);         // parameter type is Long         headers.put("CamelLinkedIn.start", null); */
specifier|final
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|api
operator|.
name|model
operator|.
name|GroupMemberships
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETGROUPMEMBERSHIPS"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getGroupMemberships result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getGroupMemberships: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetJobBookmarks ()
specifier|public
name|void
name|testGetJobBookmarks
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|api
operator|.
name|model
operator|.
name|JobBookmarks
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://GETJOBBOOKMARKS"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getJobBookmarks result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getJobBookmarks: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetNetworkStats ()
specifier|public
name|void
name|testGetNetworkStats
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|api
operator|.
name|model
operator|.
name|NetworkStats
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://GETNETWORKSTATS"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getNetworkStats result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getNetworkStats: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetNetworkUpdates ()
specifier|public
name|void
name|testGetNetworkUpdates
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// use defaults
comment|/*         // parameter type is String         headers.put("CamelLinkedIn.scope", null);         // parameter type is org.apache.camel.component.linkedin.api.Type         headers.put("CamelLinkedIn.type", null);         // parameter type is Long         headers.put("CamelLinkedIn.count", null);         // parameter type is Long         headers.put("CamelLinkedIn.start", null);         // parameter type is Long         headers.put("CamelLinkedIn.after", null);         // parameter type is Long         headers.put("CamelLinkedIn.before", null);         // parameter type is Boolean         headers.put("CamelLinkedIn.show_hidden_members", null);         // parameter type is String         headers.put("CamelLinkedIn.fields", null);         // parameter type is Boolean         headers.put("CamelLinkedIn.secure_urls", null); */
specifier|final
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|api
operator|.
name|model
operator|.
name|Updates
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETNETWORKUPDATES"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getNetworkUpdates result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getNetworkUpdates: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for getNetworkUpdatesById
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testGetNetworkUpdatesById ()
specifier|public
name|void
name|testGetNetworkUpdatesById
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.scope"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is org.apache.camel.component.linkedin.api.Type
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.type"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is Long
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.count"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is Long
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.start"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is Long
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.after"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is Long
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.before"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is Boolean
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.show_hidden_members"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.person_id"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.fields"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is Boolean
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.secure_urls"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
specifier|final
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|api
operator|.
name|model
operator|.
name|Updates
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETNETWORKUPDATESBYID"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getNetworkUpdatesById result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getNetworkUpdatesById: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetPerson ()
specifier|public
name|void
name|testGetPerson
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.fields"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
comment|// parameter type is Boolean
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.secure_urls"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
specifier|final
name|Person
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETPERSON"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getPerson result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getPerson: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for getPersonById
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testGetPersonById ()
specifier|public
name|void
name|testGetPersonById
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.person_id"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.fields"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is Boolean
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.secure_urls"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
specifier|final
name|Person
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETPERSONBYID"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getPersonById result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getPersonById: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for getPersonByUrl
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testGetPersonByUrl ()
specifier|public
name|void
name|testGetPersonByUrl
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.public_profile_url"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.fields"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is Boolean
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.secure_urls"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
specifier|final
name|Person
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETPERSONBYURL"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getPersonByUrl result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getPersonByUrl: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for getPosts
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testGetPosts ()
specifier|public
name|void
name|testGetPosts
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.group_id"
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
comment|// parameter type is Long
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.start"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is Long
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.count"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is org.apache.camel.component.linkedin.api.Order
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.order"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is org.apache.camel.component.linkedin.api.Role
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.role"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is org.apache.camel.component.linkedin.api.Category
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.category"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is Long
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.modified_since"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.fields"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
specifier|final
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|api
operator|.
name|model
operator|.
name|Posts
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETPOSTS"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getPosts result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getPosts: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetSuggestedCompanies ()
specifier|public
name|void
name|testGetSuggestedCompanies
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using String message body for single parameter "fields"
specifier|final
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|api
operator|.
name|model
operator|.
name|Companies
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://GETSUGGESTEDCOMPANIES"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getSuggestedCompanies result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getSuggestedCompanies: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for getSuggestedGroupPosts
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testGetSuggestedGroupPosts ()
specifier|public
name|void
name|testGetSuggestedGroupPosts
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.group_id"
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
comment|// parameter type is Long
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.start"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is Long
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.count"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is org.apache.camel.component.linkedin.api.Order
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.order"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is org.apache.camel.component.linkedin.api.Role
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.role"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is org.apache.camel.component.linkedin.api.Category
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.category"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is Long
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.modified_since"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.fields"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
specifier|final
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|api
operator|.
name|model
operator|.
name|Posts
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETSUGGESTEDGROUPPOSTS"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getSuggestedGroupPosts result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getSuggestedGroupPosts: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetSuggestedGroups ()
specifier|public
name|void
name|testGetSuggestedGroups
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using String message body for single parameter "fields"
specifier|final
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|api
operator|.
name|model
operator|.
name|Groups
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://GETSUGGESTEDGROUPS"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getSuggestedGroups result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getSuggestedGroups: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetSuggestedJobs ()
specifier|public
name|void
name|testGetSuggestedJobs
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using String message body for single parameter "fields"
specifier|final
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|api
operator|.
name|model
operator|.
name|JobSuggestions
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://GETSUGGESTEDJOBS"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getSuggestedJobs result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getSuggestedJobs: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for getUpdateComments
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testGetUpdateComments ()
specifier|public
name|void
name|testGetUpdateComments
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.update_key"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.fields"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is Boolean
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.secure_urls"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
specifier|final
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|api
operator|.
name|model
operator|.
name|UpdateComments
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETUPDATECOMMENTS"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getUpdateComments result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getUpdateComments: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for getUpdateLikes
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testGetUpdateLikes ()
specifier|public
name|void
name|testGetUpdateLikes
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.update_key"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.fields"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is Boolean
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.secure_urls"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
specifier|final
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|api
operator|.
name|model
operator|.
name|Likes
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://GETUPDATELIKES"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"getUpdateLikes result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"getUpdateLikes: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for likeUpdate
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testLikeUpdate ()
specifier|public
name|void
name|testLikeUpdate
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.update_key"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// parameter type is org.apache.camel.component.linkedin.api.model.IsLiked
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.isliked"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|requestBodyAndHeaders
argument_list|(
literal|"direct://LIKEUPDATE"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for removeGroupMembership
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testRemoveGroupMembership ()
specifier|public
name|void
name|testRemoveGroupMembership
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using long message body for single parameter "group_id"
name|requestBody
argument_list|(
literal|"direct://REMOVEGROUPMEMBERSHIP"
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for removeGroupSuggestion
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testRemoveGroupSuggestion ()
specifier|public
name|void
name|testRemoveGroupSuggestion
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using long message body for single parameter "group_id"
name|requestBody
argument_list|(
literal|"direct://REMOVEGROUPSUGGESTION"
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for removeJobBookmark
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testRemoveJobBookmark ()
specifier|public
name|void
name|testRemoveJobBookmark
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using long message body for single parameter "job_id"
name|requestBody
argument_list|(
literal|"direct://REMOVEJOBBOOKMARK"
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for share
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testShare ()
specifier|public
name|void
name|testShare
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using org.apache.camel.component.linkedin.api.model.Share message body for single parameter "share"
specifier|final
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|linkedin
operator|.
name|api
operator|.
name|model
operator|.
name|Update
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://SHARE"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"share result"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"share: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for stopFollowingCompany
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testStopFollowingCompany ()
specifier|public
name|void
name|testStopFollowingCompany
parameter_list|()
throws|throws
name|Exception
block|{
comment|// using long message body for single parameter "company_id"
name|requestBody
argument_list|(
literal|"direct://STOPFOLLOWINGCOMPANY"
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
block|}
comment|// TODO provide parameter values for updateGroupMembership
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testUpdateGroupMembership ()
specifier|public
name|void
name|testUpdateGroupMembership
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.group_id"
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
comment|// parameter type is org.apache.camel.component.linkedin.api.model.GroupMembership
name|headers
operator|.
name|put
argument_list|(
literal|"CamelLinkedIn.groupmembership"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|requestBodyAndHeaders
argument_list|(
literal|"direct://UPDATEGROUPMEMBERSHIP"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
comment|// test route for addActivity
name|from
argument_list|(
literal|"direct://ADDACTIVITY"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/addActivity?inBody=activity"
argument_list|)
expr_stmt|;
comment|// test route for addGroupMembership
name|from
argument_list|(
literal|"direct://ADDGROUPMEMBERSHIP"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/addGroupMembership?inBody=groupmembership"
argument_list|)
expr_stmt|;
comment|// test route for addInvite
name|from
argument_list|(
literal|"direct://ADDINVITE"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/addInvite?inBody=mailboxitem"
argument_list|)
expr_stmt|;
comment|// test route for addJobBookmark
name|from
argument_list|(
literal|"direct://ADDJOBBOOKMARK"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/addJobBookmark?inBody=jobbookmark"
argument_list|)
expr_stmt|;
comment|// test route for addUpdateComment
name|from
argument_list|(
literal|"direct://ADDUPDATECOMMENT"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/addUpdateComment"
argument_list|)
expr_stmt|;
comment|// test route for followCompany
name|from
argument_list|(
literal|"direct://FOLLOWCOMPANY"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/followCompany?inBody=company"
argument_list|)
expr_stmt|;
comment|// test route for getConnections
name|from
argument_list|(
literal|"direct://GETCONNECTIONS"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getConnections"
argument_list|)
expr_stmt|;
comment|// test consumer route for getConnections
name|from
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getConnections"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock://GETCONNECTIONS"
argument_list|)
expr_stmt|;
comment|// test route for getConnectionsById
name|from
argument_list|(
literal|"direct://GETCONNECTIONSBYID"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getConnectionsById"
argument_list|)
expr_stmt|;
comment|// test route for getConnectionsByUrl
name|from
argument_list|(
literal|"direct://GETCONNECTIONSBYURL"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getConnectionsByUrl"
argument_list|)
expr_stmt|;
comment|// test route for getFollowedCompanies
name|from
argument_list|(
literal|"direct://GETFOLLOWEDCOMPANIES"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getFollowedCompanies?inBody=fields"
argument_list|)
expr_stmt|;
comment|// test route for getGroupMembershipSettings
name|from
argument_list|(
literal|"direct://GETGROUPMEMBERSHIPSETTINGS"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getGroupMembershipSettings"
argument_list|)
expr_stmt|;
comment|// test route for getGroupMemberships
name|from
argument_list|(
literal|"direct://GETGROUPMEMBERSHIPS"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getGroupMemberships"
argument_list|)
expr_stmt|;
comment|// test route for getJobBookmarks
name|from
argument_list|(
literal|"direct://GETJOBBOOKMARKS"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getJobBookmarks"
argument_list|)
expr_stmt|;
comment|// test route for getNetworkStats
name|from
argument_list|(
literal|"direct://GETNETWORKSTATS"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getNetworkStats"
argument_list|)
expr_stmt|;
comment|// test route for getNetworkUpdates
name|from
argument_list|(
literal|"direct://GETNETWORKUPDATES"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getNetworkUpdates"
argument_list|)
expr_stmt|;
comment|// test route for getNetworkUpdatesById
name|from
argument_list|(
literal|"direct://GETNETWORKUPDATESBYID"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getNetworkUpdatesById"
argument_list|)
expr_stmt|;
comment|// test route for getPerson
name|from
argument_list|(
literal|"direct://GETPERSON"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getPerson"
argument_list|)
expr_stmt|;
comment|// test route for getPersonById
name|from
argument_list|(
literal|"direct://GETPERSONBYID"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getPersonById"
argument_list|)
expr_stmt|;
comment|// test route for getPersonByUrl
name|from
argument_list|(
literal|"direct://GETPERSONBYURL"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getPersonByUrl"
argument_list|)
expr_stmt|;
comment|// test route for getPosts
name|from
argument_list|(
literal|"direct://GETPOSTS"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getPosts"
argument_list|)
expr_stmt|;
comment|// test route for getSuggestedCompanies
name|from
argument_list|(
literal|"direct://GETSUGGESTEDCOMPANIES"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getSuggestedCompanies?inBody=fields"
argument_list|)
expr_stmt|;
comment|// test route for getSuggestedGroupPosts
name|from
argument_list|(
literal|"direct://GETSUGGESTEDGROUPPOSTS"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getSuggestedGroupPosts"
argument_list|)
expr_stmt|;
comment|// test route for getSuggestedGroups
name|from
argument_list|(
literal|"direct://GETSUGGESTEDGROUPS"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getSuggestedGroups?inBody=fields"
argument_list|)
expr_stmt|;
comment|// test route for getSuggestedJobs
name|from
argument_list|(
literal|"direct://GETSUGGESTEDJOBS"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getSuggestedJobs?inBody=fields"
argument_list|)
expr_stmt|;
comment|// test route for getUpdateComments
name|from
argument_list|(
literal|"direct://GETUPDATECOMMENTS"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getUpdateComments"
argument_list|)
expr_stmt|;
comment|// test route for getUpdateLikes
name|from
argument_list|(
literal|"direct://GETUPDATELIKES"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/getUpdateLikes"
argument_list|)
expr_stmt|;
comment|// test route for likeUpdate
name|from
argument_list|(
literal|"direct://LIKEUPDATE"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/likeUpdate"
argument_list|)
expr_stmt|;
comment|// test route for removeGroupMembership
name|from
argument_list|(
literal|"direct://REMOVEGROUPMEMBERSHIP"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/removeGroupMembership?inBody=group_id"
argument_list|)
expr_stmt|;
comment|// test route for removeGroupSuggestion
name|from
argument_list|(
literal|"direct://REMOVEGROUPSUGGESTION"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/removeGroupSuggestion?inBody=group_id"
argument_list|)
expr_stmt|;
comment|// test route for removeJobBookmark
name|from
argument_list|(
literal|"direct://REMOVEJOBBOOKMARK"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/removeJobBookmark?inBody=job_id"
argument_list|)
expr_stmt|;
comment|// test route for share
name|from
argument_list|(
literal|"direct://SHARE"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/share?inBody=share"
argument_list|)
expr_stmt|;
comment|// test route for stopFollowingCompany
name|from
argument_list|(
literal|"direct://STOPFOLLOWINGCOMPANY"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/stopFollowingCompany?inBody=company_id"
argument_list|)
expr_stmt|;
comment|// test route for updateGroupMembership
name|from
argument_list|(
literal|"direct://UPDATEGROUPMEMBERSHIP"
argument_list|)
operator|.
name|to
argument_list|(
literal|"linkedin://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/updateGroupMembership"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

