begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.twilio
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|twilio
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|twilio
operator|.
name|http
operator|.
name|TwilioRestClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Consumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Producer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RuntimeCamelException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|TypeConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|twilio
operator|.
name|internal
operator|.
name|TwilioApiCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|twilio
operator|.
name|internal
operator|.
name|TwilioApiName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|twilio
operator|.
name|internal
operator|.
name|TwilioConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|twilio
operator|.
name|internal
operator|.
name|TwilioPropertiesHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|IntrospectionSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|component
operator|.
name|AbstractApiEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|component
operator|.
name|ApiMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|component
operator|.
name|ApiMethodPropertiesHelper
import|;
end_import

begin_comment
comment|/**  * The Twilio component allows you to interact with the Twilio REST APIs using Twilio Java SDK.  */
end_comment

begin_class
annotation|@
name|UriEndpoint
argument_list|(
name|firstVersion
operator|=
literal|"2.20.0"
argument_list|,
name|scheme
operator|=
literal|"twilio"
argument_list|,
name|title
operator|=
literal|"Twilio"
argument_list|,
name|syntax
operator|=
literal|"twilio:apiName/methodName"
argument_list|,
name|label
operator|=
literal|"api,messaging,cloud"
argument_list|)
DECL|class|TwilioEndpoint
specifier|public
class|class
name|TwilioEndpoint
extends|extends
name|AbstractApiEndpoint
argument_list|<
name|TwilioApiName
argument_list|,
name|TwilioConfiguration
argument_list|>
block|{
DECL|field|EXECUTOR_METHOD_MAP
specifier|protected
specifier|static
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|EXECUTOR_METHOD_MAP
decl_stmt|;
static|static
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"creator"
argument_list|,
literal|"create"
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"deleter"
argument_list|,
literal|"delete"
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"fetcher"
argument_list|,
literal|"fetch"
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"reader"
argument_list|,
literal|"read"
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"updater"
argument_list|,
literal|"update"
argument_list|)
expr_stmt|;
name|EXECUTOR_METHOD_MAP
operator|=
name|Collections
operator|.
name|unmodifiableMap
argument_list|(
name|map
argument_list|)
expr_stmt|;
block|}
DECL|field|component
specifier|protected
specifier|final
name|TwilioComponent
name|component
decl_stmt|;
annotation|@
name|UriParam
DECL|field|configuration
specifier|private
name|TwilioConfiguration
name|configuration
decl_stmt|;
DECL|method|TwilioEndpoint (String uri, TwilioComponent component, TwilioApiName apiName, String methodName, TwilioConfiguration endpointConfiguration)
specifier|public
name|TwilioEndpoint
parameter_list|(
name|String
name|uri
parameter_list|,
name|TwilioComponent
name|component
parameter_list|,
name|TwilioApiName
name|apiName
parameter_list|,
name|String
name|methodName
parameter_list|,
name|TwilioConfiguration
name|endpointConfiguration
parameter_list|)
block|{
name|super
argument_list|(
name|uri
argument_list|,
name|component
argument_list|,
name|apiName
argument_list|,
name|methodName
argument_list|,
name|TwilioApiCollection
operator|.
name|getCollection
argument_list|()
operator|.
name|getHelper
argument_list|(
name|apiName
argument_list|)
argument_list|,
name|endpointConfiguration
argument_list|)
expr_stmt|;
name|this
operator|.
name|component
operator|=
name|component
expr_stmt|;
name|this
operator|.
name|configuration
operator|=
name|endpointConfiguration
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createProducer ()
specifier|public
name|Producer
name|createProducer
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|TwilioProducer
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|createConsumer (Processor processor)
specifier|public
name|Consumer
name|createConsumer
parameter_list|(
name|Processor
name|processor
parameter_list|)
throws|throws
name|Exception
block|{
comment|// make sure inBody is not set for consumers
if|if
condition|(
name|inBody
operator|!=
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Option inBody is not supported for consumer endpoint"
argument_list|)
throw|;
block|}
specifier|final
name|TwilioConsumer
name|consumer
init|=
operator|new
name|TwilioConsumer
argument_list|(
name|this
argument_list|,
name|processor
argument_list|)
decl_stmt|;
comment|// also set consumer.* properties
name|configureConsumer
argument_list|(
name|consumer
argument_list|)
expr_stmt|;
return|return
name|consumer
return|;
block|}
annotation|@
name|Override
DECL|method|afterConfigureProperties ()
specifier|protected
name|void
name|afterConfigureProperties
parameter_list|()
block|{
comment|// Do nothing
block|}
annotation|@
name|Override
DECL|method|getApiProxy (ApiMethod method, Map<String, Object> args)
specifier|public
name|Object
name|getApiProxy
parameter_list|(
name|ApiMethod
name|method
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|args
parameter_list|)
block|{
comment|// Since the proxy methods are static
return|return
literal|null
return|;
block|}
DECL|method|execute (Object executor, ApiMethod method, Map<String, Object> properties)
specifier|public
name|Object
name|execute
parameter_list|(
name|Object
name|executor
parameter_list|,
name|ApiMethod
name|method
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
block|{
if|if
condition|(
operator|!
name|EXECUTOR_METHOD_MAP
operator|.
name|containsKey
argument_list|(
name|method
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Invalid method name "
operator|+
name|method
operator|.
name|getName
argument_list|()
argument_list|)
throw|;
block|}
name|String
name|methodName
init|=
name|EXECUTOR_METHOD_MAP
operator|.
name|get
argument_list|(
name|method
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|TypeConverter
name|typeConverter
init|=
name|getCamelContext
argument_list|()
operator|.
name|getTypeConverter
argument_list|()
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|p
range|:
name|properties
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|IntrospectionSupport
operator|.
name|setProperty
argument_list|(
name|typeConverter
argument_list|,
name|executor
argument_list|,
name|p
operator|.
name|getKey
argument_list|()
argument_list|,
name|p
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|doExecute
argument_list|(
name|executor
argument_list|,
name|methodName
argument_list|,
name|properties
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|doExecute (Object executor, String methodName, Map<String, Object> properties)
specifier|protected
name|Object
name|doExecute
parameter_list|(
name|Object
name|executor
parameter_list|,
name|String
name|methodName
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
throws|throws
name|Exception
block|{
name|Method
name|method
init|=
name|executor
operator|.
name|getClass
argument_list|()
operator|.
name|getDeclaredMethod
argument_list|(
name|methodName
argument_list|,
name|TwilioRestClient
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|method
operator|.
name|invoke
argument_list|(
name|executor
argument_list|,
name|properties
operator|.
name|getOrDefault
argument_list|(
literal|"client"
argument_list|,
name|getRestClient
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getPropertiesHelper ()
specifier|protected
name|ApiMethodPropertiesHelper
argument_list|<
name|TwilioConfiguration
argument_list|>
name|getPropertiesHelper
parameter_list|()
block|{
return|return
name|TwilioPropertiesHelper
operator|.
name|getHelper
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getThreadProfileName ()
specifier|protected
name|String
name|getThreadProfileName
parameter_list|()
block|{
return|return
name|TwilioConstants
operator|.
name|THREAD_PROFILE_NAME
return|;
block|}
DECL|method|getRestClient ()
specifier|public
name|TwilioRestClient
name|getRestClient
parameter_list|()
block|{
return|return
name|component
operator|.
name|getRestClient
argument_list|()
return|;
block|}
block|}
end_class

end_unit

