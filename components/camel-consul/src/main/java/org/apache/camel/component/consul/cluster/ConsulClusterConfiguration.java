begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.consul.cluster
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|cluster
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RuntimeCamelException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|ConsulClientConfiguration
import|;
end_import

begin_class
DECL|class|ConsulClusterConfiguration
specifier|public
class|class
name|ConsulClusterConfiguration
extends|extends
name|ConsulClientConfiguration
block|{
DECL|field|sessionTtl
specifier|private
name|int
name|sessionTtl
init|=
literal|60
decl_stmt|;
DECL|field|sessionLockDelay
specifier|private
name|int
name|sessionLockDelay
init|=
literal|5
decl_stmt|;
DECL|field|sessionRefreshInterval
specifier|private
name|int
name|sessionRefreshInterval
init|=
literal|5
decl_stmt|;
DECL|field|rootPath
specifier|private
name|String
name|rootPath
init|=
literal|"/camel"
decl_stmt|;
comment|// ***********************************************
comment|// Properties
comment|// ***********************************************
DECL|method|getSessionTtl ()
specifier|public
name|int
name|getSessionTtl
parameter_list|()
block|{
return|return
name|sessionTtl
return|;
block|}
DECL|method|setSessionTtl (int sessionTtl)
specifier|public
name|void
name|setSessionTtl
parameter_list|(
name|int
name|sessionTtl
parameter_list|)
block|{
name|this
operator|.
name|sessionTtl
operator|=
name|sessionTtl
expr_stmt|;
block|}
DECL|method|getSessionLockDelay ()
specifier|public
name|int
name|getSessionLockDelay
parameter_list|()
block|{
return|return
name|sessionLockDelay
return|;
block|}
DECL|method|setSessionLockDelay (int sessionLockDelay)
specifier|public
name|void
name|setSessionLockDelay
parameter_list|(
name|int
name|sessionLockDelay
parameter_list|)
block|{
name|this
operator|.
name|sessionLockDelay
operator|=
name|sessionLockDelay
expr_stmt|;
block|}
DECL|method|getRootPath ()
specifier|public
name|String
name|getRootPath
parameter_list|()
block|{
return|return
name|rootPath
return|;
block|}
DECL|method|setRootPath (String rootPath)
specifier|public
name|void
name|setRootPath
parameter_list|(
name|String
name|rootPath
parameter_list|)
block|{
name|this
operator|.
name|rootPath
operator|=
name|rootPath
expr_stmt|;
block|}
DECL|method|getSessionRefreshInterval ()
specifier|public
name|int
name|getSessionRefreshInterval
parameter_list|()
block|{
return|return
name|sessionRefreshInterval
return|;
block|}
DECL|method|setSessionRefreshInterval (int sessionRefreshInterval)
specifier|public
name|void
name|setSessionRefreshInterval
parameter_list|(
name|int
name|sessionRefreshInterval
parameter_list|)
block|{
name|this
operator|.
name|sessionRefreshInterval
operator|=
name|sessionRefreshInterval
expr_stmt|;
block|}
comment|// ***********************************************
comment|//
comment|// ***********************************************
annotation|@
name|Override
DECL|method|copy ()
specifier|public
name|ConsulClusterConfiguration
name|copy
parameter_list|()
block|{
try|try
block|{
return|return
operator|(
name|ConsulClusterConfiguration
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|CloneNotSupportedException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

