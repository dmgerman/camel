begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.consul
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|SSLContextParametersAware
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|enpoint
operator|.
name|ConsulAgentProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|enpoint
operator|.
name|ConsulCatalogProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|enpoint
operator|.
name|ConsulCoordinatesProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|enpoint
operator|.
name|ConsulEventConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|enpoint
operator|.
name|ConsulEventProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|enpoint
operator|.
name|ConsulHealthProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|enpoint
operator|.
name|ConsulKeyValueConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|enpoint
operator|.
name|ConsulKeyValueProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|enpoint
operator|.
name|ConsulPreparedQueryProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|enpoint
operator|.
name|ConsulSessionProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|enpoint
operator|.
name|ConsulStatusProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|jsse
operator|.
name|SSLContextParameters
import|;
end_import

begin_comment
comment|/**  * Represents the component that manages {@link ConsulEndpoint}.  */
end_comment

begin_class
DECL|class|ConsulComponent
specifier|public
class|class
name|ConsulComponent
extends|extends
name|DefaultComponent
implements|implements
name|SSLContextParametersAware
block|{
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"advanced"
argument_list|)
DECL|field|configuration
specifier|private
name|ConsulConfiguration
name|configuration
init|=
operator|new
name|ConsulConfiguration
argument_list|()
decl_stmt|;
DECL|method|ConsulComponent ()
specifier|public
name|ConsulComponent
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
DECL|method|ConsulComponent (CamelContext context)
specifier|public
name|ConsulComponent
parameter_list|(
name|CamelContext
name|context
parameter_list|)
block|{
name|super
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
comment|// ************************************
comment|// Options
comment|// ************************************
DECL|method|getUrl ()
specifier|public
name|String
name|getUrl
parameter_list|()
block|{
return|return
name|this
operator|.
name|configuration
operator|.
name|getUrl
argument_list|()
return|;
block|}
comment|/**      * The Consul agent URL      */
DECL|method|setUrl (String url)
specifier|public
name|void
name|setUrl
parameter_list|(
name|String
name|url
parameter_list|)
block|{
name|this
operator|.
name|configuration
operator|.
name|setUrl
argument_list|(
name|url
argument_list|)
expr_stmt|;
block|}
DECL|method|getDatacenter ()
specifier|public
name|String
name|getDatacenter
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getDatacenter
argument_list|()
return|;
block|}
comment|/**      * The data center      * @param datacenter      */
DECL|method|setDatacenter (String datacenter)
specifier|public
name|void
name|setDatacenter
parameter_list|(
name|String
name|datacenter
parameter_list|)
block|{
name|configuration
operator|.
name|setDatacenter
argument_list|(
name|datacenter
argument_list|)
expr_stmt|;
block|}
DECL|method|getSslContextParameters ()
specifier|public
name|SSLContextParameters
name|getSslContextParameters
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getSslContextParameters
argument_list|()
return|;
block|}
comment|/**      * SSL configuration using an org.apache.camel.util.jsse.SSLContextParameters      * instance.      * @param sslContextParameters      */
DECL|method|setSslContextParameters (SSLContextParameters sslContextParameters)
specifier|public
name|void
name|setSslContextParameters
parameter_list|(
name|SSLContextParameters
name|sslContextParameters
parameter_list|)
block|{
name|configuration
operator|.
name|setSslContextParameters
argument_list|(
name|sslContextParameters
argument_list|)
expr_stmt|;
block|}
DECL|method|getAclToken ()
specifier|public
name|String
name|getAclToken
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getAclToken
argument_list|()
return|;
block|}
comment|/**      * Sets the ACL token to be used with Consul      * @param aclToken      */
DECL|method|setAclToken (String aclToken)
specifier|public
name|void
name|setAclToken
parameter_list|(
name|String
name|aclToken
parameter_list|)
block|{
name|configuration
operator|.
name|setAclToken
argument_list|(
name|aclToken
argument_list|)
expr_stmt|;
block|}
DECL|method|getUserName ()
specifier|public
name|String
name|getUserName
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getUserName
argument_list|()
return|;
block|}
comment|/**      * Sets the username to be used for basic authentication      * @param userName      */
DECL|method|setUserName (String userName)
specifier|public
name|void
name|setUserName
parameter_list|(
name|String
name|userName
parameter_list|)
block|{
name|configuration
operator|.
name|setUserName
argument_list|(
name|userName
argument_list|)
expr_stmt|;
block|}
DECL|method|getPassword ()
specifier|public
name|String
name|getPassword
parameter_list|()
block|{
return|return
name|configuration
operator|.
name|getPassword
argument_list|()
return|;
block|}
comment|/**      * Sets the password to be used for basic authentication      * @param password      */
DECL|method|setPassword (String password)
specifier|public
name|void
name|setPassword
parameter_list|(
name|String
name|password
parameter_list|)
block|{
name|configuration
operator|.
name|setPassword
argument_list|(
name|password
argument_list|)
expr_stmt|;
block|}
DECL|method|getConfiguration ()
specifier|public
name|ConsulConfiguration
name|getConfiguration
parameter_list|()
block|{
return|return
name|configuration
return|;
block|}
comment|/**      * Sets the common configuration shared among endpoints      */
DECL|method|setConfiguration (ConsulConfiguration configuration)
specifier|public
name|void
name|setConfiguration
parameter_list|(
name|ConsulConfiguration
name|configuration
parameter_list|)
block|{
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createEndpoint (String uri, String remaining, Map<String, Object> parameters)
specifier|protected
name|Endpoint
name|createEndpoint
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|remaining
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|parameters
parameter_list|)
throws|throws
name|Exception
block|{
name|ConsulConfiguration
name|configuration
init|=
name|Optional
operator|.
name|ofNullable
argument_list|(
name|this
operator|.
name|configuration
argument_list|)
operator|.
name|orElseGet
argument_list|(
name|ConsulConfiguration
operator|::
operator|new
argument_list|)
operator|.
name|copy
argument_list|()
decl_stmt|;
name|configuration
operator|.
name|setCamelContext
argument_list|(
name|getCamelContext
argument_list|()
argument_list|)
expr_stmt|;
comment|// using global ssl context parameters if set
if|if
condition|(
name|configuration
operator|.
name|isUseGlobalSslContextParameters
argument_list|()
operator|&&
name|configuration
operator|.
name|getSslContextParameters
argument_list|()
operator|==
literal|null
condition|)
block|{
name|configuration
operator|.
name|setSslContextParameters
argument_list|(
name|getGlobalSSLContextParameters
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|setProperties
argument_list|(
name|configuration
argument_list|,
name|parameters
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|remaining
condition|)
block|{
case|case
literal|"kv"
case|:
return|return
operator|new
name|ConsulEndpoint
argument_list|(
name|remaining
argument_list|,
name|uri
argument_list|,
name|this
argument_list|,
name|configuration
argument_list|,
name|Optional
operator|.
name|of
argument_list|(
name|ConsulKeyValueProducer
operator|::
operator|new
argument_list|)
argument_list|,
name|Optional
operator|.
name|of
argument_list|(
name|ConsulKeyValueConsumer
operator|::
operator|new
argument_list|)
argument_list|)
return|;
case|case
literal|"event"
case|:
return|return
operator|new
name|ConsulEndpoint
argument_list|(
name|remaining
argument_list|,
name|uri
argument_list|,
name|this
argument_list|,
name|configuration
argument_list|,
name|Optional
operator|.
name|of
argument_list|(
name|ConsulEventProducer
operator|::
operator|new
argument_list|)
argument_list|,
name|Optional
operator|.
name|of
argument_list|(
name|ConsulEventConsumer
operator|::
operator|new
argument_list|)
argument_list|)
return|;
case|case
literal|"agent"
case|:
return|return
operator|new
name|ConsulEndpoint
argument_list|(
name|remaining
argument_list|,
name|uri
argument_list|,
name|this
argument_list|,
name|configuration
argument_list|,
name|Optional
operator|.
name|of
argument_list|(
name|ConsulAgentProducer
operator|::
operator|new
argument_list|)
argument_list|,
name|Optional
operator|.
name|empty
argument_list|()
argument_list|)
return|;
case|case
literal|"coordinates"
case|:
return|return
operator|new
name|ConsulEndpoint
argument_list|(
name|remaining
argument_list|,
name|uri
argument_list|,
name|this
argument_list|,
name|configuration
argument_list|,
name|Optional
operator|.
name|of
argument_list|(
name|ConsulCoordinatesProducer
operator|::
operator|new
argument_list|)
argument_list|,
name|Optional
operator|.
name|empty
argument_list|()
argument_list|)
return|;
case|case
literal|"health"
case|:
return|return
operator|new
name|ConsulEndpoint
argument_list|(
name|remaining
argument_list|,
name|uri
argument_list|,
name|this
argument_list|,
name|configuration
argument_list|,
name|Optional
operator|.
name|of
argument_list|(
name|ConsulHealthProducer
operator|::
operator|new
argument_list|)
argument_list|,
name|Optional
operator|.
name|empty
argument_list|()
argument_list|)
return|;
case|case
literal|"status"
case|:
return|return
operator|new
name|ConsulEndpoint
argument_list|(
name|remaining
argument_list|,
name|uri
argument_list|,
name|this
argument_list|,
name|configuration
argument_list|,
name|Optional
operator|.
name|of
argument_list|(
name|ConsulStatusProducer
operator|::
operator|new
argument_list|)
argument_list|,
name|Optional
operator|.
name|empty
argument_list|()
argument_list|)
return|;
case|case
literal|"preparedQuery"
case|:
return|return
operator|new
name|ConsulEndpoint
argument_list|(
name|remaining
argument_list|,
name|uri
argument_list|,
name|this
argument_list|,
name|configuration
argument_list|,
name|Optional
operator|.
name|of
argument_list|(
name|ConsulPreparedQueryProducer
operator|::
operator|new
argument_list|)
argument_list|,
name|Optional
operator|.
name|empty
argument_list|()
argument_list|)
return|;
case|case
literal|"catalog"
case|:
return|return
operator|new
name|ConsulEndpoint
argument_list|(
name|remaining
argument_list|,
name|uri
argument_list|,
name|this
argument_list|,
name|configuration
argument_list|,
name|Optional
operator|.
name|of
argument_list|(
name|ConsulCatalogProducer
operator|::
operator|new
argument_list|)
argument_list|,
name|Optional
operator|.
name|empty
argument_list|()
argument_list|)
return|;
case|case
literal|"session"
case|:
return|return
operator|new
name|ConsulEndpoint
argument_list|(
name|remaining
argument_list|,
name|uri
argument_list|,
name|this
argument_list|,
name|configuration
argument_list|,
name|Optional
operator|.
name|of
argument_list|(
name|ConsulSessionProducer
operator|::
operator|new
argument_list|)
argument_list|,
name|Optional
operator|.
name|empty
argument_list|()
argument_list|)
return|;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Unknown apiEndpoint: "
operator|+
name|remaining
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

