begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.consul.processor.service
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|processor
operator|.
name|service
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|com
operator|.
name|orbitz
operator|.
name|consul
operator|.
name|CatalogClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|orbitz
operator|.
name|consul
operator|.
name|Consul
import|;
end_import

begin_import
import|import
name|com
operator|.
name|orbitz
operator|.
name|consul
operator|.
name|HealthClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|orbitz
operator|.
name|consul
operator|.
name|model
operator|.
name|catalog
operator|.
name|CatalogService
import|;
end_import

begin_import
import|import
name|com
operator|.
name|orbitz
operator|.
name|consul
operator|.
name|model
operator|.
name|health
operator|.
name|HealthCheck
import|;
end_import

begin_import
import|import
name|com
operator|.
name|orbitz
operator|.
name|consul
operator|.
name|model
operator|.
name|health
operator|.
name|ServiceHealth
import|;
end_import

begin_import
import|import
name|com
operator|.
name|orbitz
operator|.
name|consul
operator|.
name|option
operator|.
name|CatalogOptions
import|;
end_import

begin_import
import|import
name|com
operator|.
name|orbitz
operator|.
name|consul
operator|.
name|option
operator|.
name|ImmutableCatalogOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|ConsulConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|remote
operator|.
name|DefaultServiceCallServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|remote
operator|.
name|DefaultServiceCallServerListStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ServiceCallServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_class
DECL|class|ConsulServiceCallServerListStrategy
specifier|abstract
class|class
name|ConsulServiceCallServerListStrategy
extends|extends
name|DefaultServiceCallServerListStrategy
argument_list|<
name|ServiceCallServer
argument_list|>
block|{
DECL|field|client
specifier|private
specifier|final
name|Consul
name|client
decl_stmt|;
DECL|field|catalogOptions
specifier|private
specifier|final
name|CatalogOptions
name|catalogOptions
decl_stmt|;
DECL|method|ConsulServiceCallServerListStrategy (ConsulConfiguration configuration)
name|ConsulServiceCallServerListStrategy
parameter_list|(
name|ConsulConfiguration
name|configuration
parameter_list|)
throws|throws
name|Exception
block|{
name|this
operator|.
name|client
operator|=
name|configuration
operator|.
name|createConsulClient
argument_list|()
expr_stmt|;
name|ImmutableCatalogOptions
operator|.
name|Builder
name|builder
init|=
name|ImmutableCatalogOptions
operator|.
name|builder
argument_list|()
decl_stmt|;
if|if
condition|(
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|configuration
operator|.
name|getDc
argument_list|()
argument_list|)
condition|)
block|{
name|builder
operator|.
name|datacenter
argument_list|(
name|configuration
operator|.
name|getDc
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|configuration
operator|.
name|getTags
argument_list|()
argument_list|)
condition|)
block|{
name|configuration
operator|.
name|getTags
argument_list|()
operator|.
name|forEach
argument_list|(
name|builder
operator|::
name|tag
argument_list|)
expr_stmt|;
block|}
name|catalogOptions
operator|=
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"ConsulServiceCallServerListStrategy"
return|;
block|}
comment|// *************************
comment|// Getter
comment|// *************************
DECL|method|getClient ()
specifier|protected
name|Consul
name|getClient
parameter_list|()
block|{
return|return
name|client
return|;
block|}
DECL|method|getCatalogClient ()
specifier|protected
name|CatalogClient
name|getCatalogClient
parameter_list|()
block|{
return|return
name|client
operator|.
name|catalogClient
argument_list|()
return|;
block|}
DECL|method|getHealthClient ()
specifier|protected
name|HealthClient
name|getHealthClient
parameter_list|()
block|{
return|return
name|client
operator|.
name|healthClient
argument_list|()
return|;
block|}
DECL|method|getCatalogOptions ()
specifier|protected
name|CatalogOptions
name|getCatalogOptions
parameter_list|()
block|{
return|return
name|catalogOptions
return|;
block|}
comment|// *************************
comment|// Helpers
comment|// *************************
DECL|method|isNotHealthy (HealthCheck check)
specifier|protected
name|boolean
name|isNotHealthy
parameter_list|(
name|HealthCheck
name|check
parameter_list|)
block|{
specifier|final
name|String
name|status
init|=
name|check
operator|.
name|getStatus
argument_list|()
decl_stmt|;
return|return
name|status
operator|!=
literal|null
operator|&&
operator|!
name|status
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"passing"
argument_list|)
return|;
block|}
DECL|method|isNotHealthy (ServiceHealth health)
specifier|protected
name|boolean
name|isNotHealthy
parameter_list|(
name|ServiceHealth
name|health
parameter_list|)
block|{
return|return
name|health
operator|.
name|getChecks
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|anyMatch
argument_list|(
name|this
operator|::
name|isNotHealthy
argument_list|)
return|;
block|}
DECL|method|isCheckOnService (ServiceHealth check, CatalogService service)
specifier|protected
name|boolean
name|isCheckOnService
parameter_list|(
name|ServiceHealth
name|check
parameter_list|,
name|CatalogService
name|service
parameter_list|)
block|{
return|return
name|check
operator|.
name|getService
argument_list|()
operator|.
name|getService
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|service
operator|.
name|getServiceName
argument_list|()
argument_list|)
return|;
block|}
DECL|method|hasFailingChecks (CatalogService service, List<ServiceHealth> healths)
specifier|protected
name|boolean
name|hasFailingChecks
parameter_list|(
name|CatalogService
name|service
parameter_list|,
name|List
argument_list|<
name|ServiceHealth
argument_list|>
name|healths
parameter_list|)
block|{
return|return
name|healths
operator|.
name|stream
argument_list|()
operator|.
name|anyMatch
argument_list|(
name|health
lambda|->
name|isCheckOnService
argument_list|(
name|health
argument_list|,
name|service
argument_list|)
operator|&&
name|isNotHealthy
argument_list|(
name|health
argument_list|)
argument_list|)
return|;
block|}
DECL|method|newServer (CatalogService service)
specifier|protected
name|ServiceCallServer
name|newServer
parameter_list|(
name|CatalogService
name|service
parameter_list|)
block|{
return|return
operator|new
name|DefaultServiceCallServer
argument_list|(
name|service
operator|.
name|getServiceAddress
argument_list|()
argument_list|,
name|service
operator|.
name|getServicePort
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

