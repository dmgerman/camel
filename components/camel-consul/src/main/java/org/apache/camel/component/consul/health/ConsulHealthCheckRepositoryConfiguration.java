begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.consul.health
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|health
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RuntimeCamelException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|ConsulClientConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|health
operator|.
name|HealthCheckConfiguration
import|;
end_import

begin_class
DECL|class|ConsulHealthCheckRepositoryConfiguration
specifier|public
class|class
name|ConsulHealthCheckRepositoryConfiguration
extends|extends
name|ConsulClientConfiguration
block|{
comment|/**      * Default configuration.      */
DECL|field|defaultConfiguration
specifier|private
name|HealthCheckConfiguration
name|defaultConfiguration
decl_stmt|;
comment|/**      * Define the checks to include.      */
DECL|field|checks
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|checks
decl_stmt|;
comment|/**      * Service configuration.      */
DECL|field|configurations
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|HealthCheckConfiguration
argument_list|>
name|configurations
decl_stmt|;
DECL|method|ConsulHealthCheckRepositoryConfiguration ()
specifier|public
name|ConsulHealthCheckRepositoryConfiguration
parameter_list|()
block|{
name|this
operator|.
name|checks
operator|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
expr_stmt|;
name|this
operator|.
name|configurations
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
block|}
comment|// ****************************************
comment|// Properties
comment|// ****************************************
DECL|method|getDefaultConfiguration ()
specifier|public
name|HealthCheckConfiguration
name|getDefaultConfiguration
parameter_list|()
block|{
return|return
name|defaultConfiguration
return|;
block|}
DECL|method|setDefaultConfiguration (HealthCheckConfiguration defaultConfiguration)
specifier|public
name|void
name|setDefaultConfiguration
parameter_list|(
name|HealthCheckConfiguration
name|defaultConfiguration
parameter_list|)
block|{
name|this
operator|.
name|defaultConfiguration
operator|=
name|defaultConfiguration
expr_stmt|;
block|}
DECL|method|getChecks ()
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getChecks
parameter_list|()
block|{
return|return
name|checks
return|;
block|}
DECL|method|addCheck (String id)
specifier|public
name|void
name|addCheck
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|checks
operator|.
name|add
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
DECL|method|getConfigurations ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|HealthCheckConfiguration
argument_list|>
name|getConfigurations
parameter_list|()
block|{
return|return
name|configurations
return|;
block|}
DECL|method|addConfiguration (String id, HealthCheckConfiguration configuration)
specifier|public
name|void
name|addConfiguration
parameter_list|(
name|String
name|id
parameter_list|,
name|HealthCheckConfiguration
name|configuration
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|configurations
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|configurations
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|configurations
operator|.
name|put
argument_list|(
name|id
argument_list|,
name|configuration
argument_list|)
expr_stmt|;
block|}
comment|// ****************************************
comment|// Copy
comment|// ****************************************
annotation|@
name|Override
DECL|method|copy ()
specifier|public
name|ConsulHealthCheckRepositoryConfiguration
name|copy
parameter_list|()
block|{
try|try
block|{
return|return
operator|(
name|ConsulHealthCheckRepositoryConfiguration
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|CloneNotSupportedException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeCamelException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

