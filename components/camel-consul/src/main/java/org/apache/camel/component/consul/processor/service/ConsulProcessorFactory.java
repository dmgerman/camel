begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.consul.processor.service
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|processor
operator|.
name|service
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ExchangePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|ConsulConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|remote
operator|.
name|DefaultServiceCallProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|remote
operator|.
name|DefaultServiceCallProcessorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ProcessorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|RouteContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ServiceCallServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ServiceCallServerListStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_comment
comment|/**  * {@link ProcessorFactory} that creates the Consul implementation of the ServiceCall EIP.  */
end_comment

begin_class
DECL|class|ConsulProcessorFactory
specifier|public
class|class
name|ConsulProcessorFactory
extends|extends
name|DefaultServiceCallProcessorFactory
argument_list|<
name|ConsulConfiguration
argument_list|,
name|ServiceCallServer
argument_list|>
block|{
annotation|@
name|Override
DECL|method|createConfiguration (RouteContext routeContext)
specifier|protected
name|ConsulConfiguration
name|createConfiguration
parameter_list|(
name|RouteContext
name|routeContext
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|new
name|ConsulConfiguration
argument_list|(
name|routeContext
operator|.
name|getCamelContext
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|createProcessor ( String name, String component, String uri, ExchangePattern mep, ConsulConfiguration conf, Map<String, String> properties)
specifier|protected
name|DefaultServiceCallProcessor
name|createProcessor
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|component
parameter_list|,
name|String
name|uri
parameter_list|,
name|ExchangePattern
name|mep
parameter_list|,
name|ConsulConfiguration
name|conf
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|new
name|ConsulServiceCallProcessor
argument_list|(
name|name
argument_list|,
name|component
argument_list|,
name|uri
argument_list|,
name|mep
argument_list|,
name|conf
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|builtInServerListStrategy (ConsulConfiguration conf, String name)
specifier|protected
name|Optional
argument_list|<
name|ServiceCallServerListStrategy
argument_list|>
name|builtInServerListStrategy
parameter_list|(
name|ConsulConfiguration
name|conf
parameter_list|,
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
name|ServiceCallServerListStrategy
name|strategy
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|ObjectHelper
operator|.
name|equal
argument_list|(
literal|"ondemand"
argument_list|,
name|name
argument_list|,
literal|true
argument_list|)
condition|)
block|{
name|strategy
operator|=
operator|new
name|ConsulServiceCallServerListStrategies
operator|.
name|OnDemand
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
return|return
name|Optional
operator|.
name|ofNullable
argument_list|(
name|strategy
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|createDefaultServerListStrategy (ConsulConfiguration conf)
specifier|protected
name|ServiceCallServerListStrategy
argument_list|<
name|ServiceCallServer
argument_list|>
name|createDefaultServerListStrategy
parameter_list|(
name|ConsulConfiguration
name|conf
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|new
name|ConsulServiceCallServerListStrategies
operator|.
name|OnDemand
argument_list|(
name|conf
argument_list|)
return|;
block|}
block|}
end_class

end_unit

