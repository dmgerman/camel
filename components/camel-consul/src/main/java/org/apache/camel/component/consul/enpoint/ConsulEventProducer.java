begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.consul.enpoint
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|enpoint
package|;
end_package

begin_import
import|import
name|com
operator|.
name|orbitz
operator|.
name|consul
operator|.
name|EventClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|orbitz
operator|.
name|consul
operator|.
name|option
operator|.
name|EventOptions
import|;
end_import

begin_import
import|import
name|com
operator|.
name|orbitz
operator|.
name|consul
operator|.
name|option
operator|.
name|QueryOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|InvokeOnHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|AbstractConsulProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|ConsulConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|consul
operator|.
name|ConsulEndpoint
import|;
end_import

begin_class
DECL|class|ConsulEventProducer
specifier|public
class|class
name|ConsulEventProducer
extends|extends
name|AbstractConsulProducer
argument_list|<
name|EventClient
argument_list|>
block|{
DECL|method|ConsulEventProducer (ConsulEndpoint endpoint, ConsulConfiguration configuration)
specifier|public
name|ConsulEventProducer
parameter_list|(
name|ConsulEndpoint
name|endpoint
parameter_list|,
name|ConsulConfiguration
name|configuration
parameter_list|)
block|{
name|super
argument_list|(
name|endpoint
argument_list|,
name|configuration
argument_list|,
name|c
lambda|->
name|c
operator|.
name|eventClient
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|InvokeOnHeader
argument_list|(
name|ConsulEventActions
operator|.
name|FIRE
argument_list|)
DECL|method|fire (Message message)
specifier|protected
name|void
name|fire
parameter_list|(
name|Message
name|message
parameter_list|)
throws|throws
name|Exception
block|{
name|setBodyAndResult
argument_list|(
name|message
argument_list|,
name|getClient
argument_list|()
operator|.
name|fireEvent
argument_list|(
name|getMandatoryKey
argument_list|(
name|message
argument_list|)
argument_list|,
name|getOption
argument_list|(
name|message
argument_list|,
name|EventOptions
operator|.
name|BLANK
argument_list|,
name|EventOptions
operator|.
name|class
argument_list|)
argument_list|,
name|message
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|InvokeOnHeader
argument_list|(
name|ConsulEventActions
operator|.
name|LIST
argument_list|)
DECL|method|list (Message message)
specifier|protected
name|void
name|list
parameter_list|(
name|Message
name|message
parameter_list|)
throws|throws
name|Exception
block|{
name|setBodyAndResult
argument_list|(
name|message
argument_list|,
name|getClient
argument_list|()
operator|.
name|listEvents
argument_list|(
name|getKey
argument_list|(
name|message
argument_list|)
argument_list|,
name|getOption
argument_list|(
name|message
argument_list|,
name|QueryOptions
operator|.
name|BLANK
argument_list|,
name|QueryOptions
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

