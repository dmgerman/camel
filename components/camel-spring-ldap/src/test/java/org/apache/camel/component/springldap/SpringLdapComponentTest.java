begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.springldap
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|springldap
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|BasicAttributes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|SearchControls
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ProducerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|spring
operator|.
name|CamelSpringTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|ArgumentCaptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Captor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|junit
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|AnnotationConfigApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|AbstractApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ldap
operator|.
name|core
operator|.
name|AttributesMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ldap
operator|.
name|core
operator|.
name|LdapTemplate
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
DECL|class|SpringLdapComponentTest
specifier|public
class|class
name|SpringLdapComponentTest
extends|extends
name|CamelSpringTestSupport
block|{
DECL|field|ldapTemplate
specifier|private
name|LdapTemplate
name|ldapTemplate
decl_stmt|;
DECL|field|producer
specifier|private
name|ProducerTemplate
name|producer
decl_stmt|;
DECL|field|body
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|body
decl_stmt|;
annotation|@
name|Captor
DECL|field|dnCaptor
specifier|private
name|ArgumentCaptor
argument_list|<
name|String
argument_list|>
name|dnCaptor
decl_stmt|;
annotation|@
name|Captor
DECL|field|attributesCaptor
specifier|private
name|ArgumentCaptor
argument_list|<
name|Attributes
argument_list|>
name|attributesCaptor
decl_stmt|;
annotation|@
name|Captor
DECL|field|objectToBindCaptor
specifier|private
name|ArgumentCaptor
argument_list|<
name|Object
argument_list|>
name|objectToBindCaptor
decl_stmt|;
annotation|@
name|Captor
DECL|field|filterCaptor
specifier|private
name|ArgumentCaptor
argument_list|<
name|String
argument_list|>
name|filterCaptor
decl_stmt|;
annotation|@
name|Captor
DECL|field|scopeCaptor
specifier|private
name|ArgumentCaptor
argument_list|<
name|Integer
argument_list|>
name|scopeCaptor
decl_stmt|;
annotation|@
name|Captor
DECL|field|mapperCaptor
specifier|private
name|ArgumentCaptor
argument_list|<
name|AttributesMapper
argument_list|<
name|String
argument_list|>
argument_list|>
name|mapperCaptor
decl_stmt|;
annotation|@
name|Test
DECL|method|testUnbind ()
specifier|public
name|void
name|testUnbind
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|dnToUnbind
init|=
literal|"some dn to unbind"
decl_stmt|;
name|initializeTest
argument_list|(
name|dnToUnbind
argument_list|)
expr_stmt|;
name|producer
operator|.
name|sendBody
argument_list|(
literal|"spring-ldap:"
operator|+
name|SpringLdapTestConfiguration
operator|.
name|LDAP_MOCK_NAME
operator|+
literal|"?operation=unbind"
argument_list|,
name|body
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|ldapTemplate
argument_list|)
operator|.
name|unbind
argument_list|(
name|dnCaptor
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dnToUnbind
argument_list|,
name|dnCaptor
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBind ()
specifier|public
name|void
name|testBind
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|dnToBind
init|=
literal|"some dn to bind"
decl_stmt|;
name|initializeTest
argument_list|(
name|dnToBind
argument_list|)
expr_stmt|;
name|Attributes
name|attributes
init|=
operator|new
name|BasicAttributes
argument_list|()
decl_stmt|;
name|attributes
operator|.
name|put
argument_list|(
literal|"some attribute name"
argument_list|,
literal|"some attribute value"
argument_list|)
expr_stmt|;
name|body
operator|.
name|put
argument_list|(
name|SpringLdapProducer
operator|.
name|ATTRIBUTES
argument_list|,
name|attributes
argument_list|)
expr_stmt|;
name|producer
operator|.
name|sendBody
argument_list|(
literal|"spring-ldap:"
operator|+
name|SpringLdapTestConfiguration
operator|.
name|LDAP_MOCK_NAME
operator|+
literal|"?operation=bind"
argument_list|,
name|body
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|ldapTemplate
argument_list|)
operator|.
name|bind
argument_list|(
name|dnCaptor
operator|.
name|capture
argument_list|()
argument_list|,
name|objectToBindCaptor
operator|.
name|capture
argument_list|()
argument_list|,
name|attributesCaptor
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dnToBind
argument_list|,
name|dnCaptor
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|objectToBindCaptor
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|attributes
argument_list|,
name|attributesCaptor
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSearch ()
specifier|public
name|void
name|testSearch
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|dnToSearch
init|=
literal|"some dn to bind"
decl_stmt|;
name|initializeTest
argument_list|(
name|dnToSearch
argument_list|)
expr_stmt|;
name|String
name|filter
init|=
literal|"some ldap filter"
decl_stmt|;
name|body
operator|.
name|put
argument_list|(
name|SpringLdapProducer
operator|.
name|FILTER
argument_list|,
name|filter
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|searchResult
init|=
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"some search result"
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|ldapTemplate
operator|.
name|search
argument_list|(
name|any
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Integer
operator|.
name|class
argument_list|)
argument_list|,
name|ArgumentMatchers
operator|.
expr|<
name|AttributesMapper
argument_list|<
name|String
argument_list|>
operator|>
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|searchResult
argument_list|)
expr_stmt|;
name|MockEndpoint
name|resultEndpoint
init|=
operator|(
name|MockEndpoint
operator|)
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
decl_stmt|;
name|resultEndpoint
operator|.
name|expectedBodiesReceived
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|searchResult
argument_list|)
argument_list|)
expr_stmt|;
name|producer
operator|.
name|sendBody
argument_list|(
literal|"direct:start"
argument_list|,
name|body
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|ldapTemplate
argument_list|)
operator|.
name|search
argument_list|(
name|dnCaptor
operator|.
name|capture
argument_list|()
argument_list|,
name|filterCaptor
operator|.
name|capture
argument_list|()
argument_list|,
name|scopeCaptor
operator|.
name|capture
argument_list|()
argument_list|,
name|mapperCaptor
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dnToSearch
argument_list|,
name|dnCaptor
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
name|Integer
operator|)
name|SearchControls
operator|.
name|ONELEVEL_SCOPE
argument_list|,
name|scopeCaptor
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|filter
argument_list|,
name|filterCaptor
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|resultEndpoint
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createApplicationContext ()
specifier|protected
name|AbstractApplicationContext
name|createApplicationContext
parameter_list|()
block|{
name|AnnotationConfigApplicationContext
name|springContext
init|=
operator|new
name|AnnotationConfigApplicationContext
argument_list|()
decl_stmt|;
name|springContext
operator|.
name|register
argument_list|(
name|SpringLdapTestConfiguration
operator|.
name|class
argument_list|)
expr_stmt|;
name|springContext
operator|.
name|refresh
argument_list|()
expr_stmt|;
return|return
name|springContext
return|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|private
name|String
name|ldapUriForSearchTest
init|=
literal|"spring-ldap:"
operator|+
name|SpringLdapTestConfiguration
operator|.
name|LDAP_MOCK_NAME
operator|+
literal|"?operation=search&scope=onelevel"
decl_stmt|;
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"direct:start"
argument_list|)
operator|.
name|to
argument_list|(
name|ldapUriForSearchTest
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:result"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
DECL|method|initializeTest (String dn)
specifier|private
name|void
name|initializeTest
parameter_list|(
name|String
name|dn
parameter_list|)
block|{
name|ldapTemplate
operator|=
name|context
operator|.
name|getRegistry
argument_list|()
operator|.
name|lookupByNameAndType
argument_list|(
name|SpringLdapTestConfiguration
operator|.
name|LDAP_MOCK_NAME
argument_list|,
name|LdapTemplate
operator|.
name|class
argument_list|)
expr_stmt|;
name|producer
operator|=
name|context
operator|.
name|createProducerTemplate
argument_list|()
expr_stmt|;
name|body
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
expr_stmt|;
name|body
operator|.
name|put
argument_list|(
name|SpringLdapProducer
operator|.
name|DN
argument_list|,
name|dn
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

