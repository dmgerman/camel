begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.gae.auth
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|gae
operator|.
name|auth
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|client
operator|.
name|authn
operator|.
name|oauth
operator|.
name|GoogleOAuthParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|gae
operator|.
name|bind
operator|.
name|OutboundBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultProducer
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|gae
operator|.
name|auth
operator|.
name|GAuthEndpoint
operator|.
name|Name
operator|.
name|AUTHORIZE
import|;
end_import

begin_class
DECL|class|GAuthProducer
specifier|public
class|class
name|GAuthProducer
extends|extends
name|DefaultProducer
block|{
DECL|method|GAuthProducer (GAuthEndpoint endpoint)
specifier|public
name|GAuthProducer
parameter_list|(
name|GAuthEndpoint
name|endpoint
parameter_list|)
block|{
name|super
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getEndpoint ()
specifier|public
name|GAuthEndpoint
name|getEndpoint
parameter_list|()
block|{
return|return
operator|(
name|GAuthEndpoint
operator|)
name|super
operator|.
name|getEndpoint
argument_list|()
return|;
block|}
DECL|method|getAuthorizeBinding ()
specifier|public
name|OutboundBinding
argument_list|<
name|GAuthEndpoint
argument_list|,
name|GoogleOAuthParameters
argument_list|,
name|GoogleOAuthParameters
argument_list|>
name|getAuthorizeBinding
parameter_list|()
block|{
return|return
name|getEndpoint
argument_list|()
operator|.
name|getAuthorizeBinding
argument_list|()
return|;
block|}
DECL|method|getUpgradeBinding ()
specifier|public
name|OutboundBinding
argument_list|<
name|GAuthEndpoint
argument_list|,
name|GoogleOAuthParameters
argument_list|,
name|GoogleOAuthParameters
argument_list|>
name|getUpgradeBinding
parameter_list|()
block|{
return|return
name|getEndpoint
argument_list|()
operator|.
name|getUpgradeBinding
argument_list|()
return|;
block|}
comment|/**      * Depending on the {@link GAuthEndpoint.Name}, this method either fetches      * an unauthorized request token and creates a redirect response, or      * upgrades an authorized request token to an access token.      *       * @param exchange      *       * @see GAuthAuthorizeBinding      * @see GAuthUpgradeBinding      * @see GAuthServiceImpl      */
DECL|method|process (Exchange exchange)
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|getEndpoint
argument_list|()
operator|.
name|getName
argument_list|()
operator|==
name|AUTHORIZE
condition|)
block|{
name|GoogleOAuthParameters
name|params
init|=
name|getAuthorizeBinding
argument_list|()
operator|.
name|writeRequest
argument_list|(
name|getEndpoint
argument_list|()
argument_list|,
name|exchange
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|getEndpoint
argument_list|()
operator|.
name|getService
argument_list|()
operator|.
name|getUnauthorizedRequestToken
argument_list|(
name|params
argument_list|)
expr_stmt|;
name|getAuthorizeBinding
argument_list|()
operator|.
name|readResponse
argument_list|(
name|getEndpoint
argument_list|()
argument_list|,
name|exchange
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|GoogleOAuthParameters
name|params
init|=
name|getUpgradeBinding
argument_list|()
operator|.
name|writeRequest
argument_list|(
name|getEndpoint
argument_list|()
argument_list|,
name|exchange
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|getEndpoint
argument_list|()
operator|.
name|getService
argument_list|()
operator|.
name|getAccessToken
argument_list|(
name|params
argument_list|)
expr_stmt|;
name|getUpgradeBinding
argument_list|()
operator|.
name|readResponse
argument_list|(
name|getEndpoint
argument_list|()
argument_list|,
name|exchange
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

