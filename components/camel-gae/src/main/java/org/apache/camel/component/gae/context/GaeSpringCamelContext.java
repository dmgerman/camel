begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.gae.context
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|gae
operator|.
name|context
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|SpringCamelContext
import|;
end_import

begin_class
DECL|class|GaeSpringCamelContext
specifier|public
class|class
name|GaeSpringCamelContext
extends|extends
name|SpringCamelContext
block|{
annotation|@
name|Override
DECL|method|doStart ()
specifier|protected
name|void
name|doStart
parameter_list|()
throws|throws
name|Exception
block|{
name|disableJMX
argument_list|()
expr_stmt|;
comment|// JMX not allowed on GAE
name|super
operator|.
name|doStart
argument_list|()
expr_stmt|;
block|}
DECL|method|setRouteBuilders (List<RouteBuilder> routeBuilders)
specifier|public
name|void
name|setRouteBuilders
parameter_list|(
name|List
argument_list|<
name|RouteBuilder
argument_list|>
name|routeBuilders
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|RouteBuilder
name|routebuilder
range|:
name|routeBuilders
control|)
block|{
name|addRoutes
argument_list|(
name|routebuilder
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|setRouteBuilder (RouteBuilder routeBuilder)
specifier|public
name|void
name|setRouteBuilder
parameter_list|(
name|RouteBuilder
name|routeBuilder
parameter_list|)
throws|throws
name|Exception
block|{
name|addRoutes
argument_list|(
name|routeBuilder
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

