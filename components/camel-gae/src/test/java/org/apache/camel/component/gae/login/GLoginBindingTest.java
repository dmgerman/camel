begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.gae.login
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|gae
operator|.
name|login
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultExchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|gae
operator|.
name|login
operator|.
name|GLoginBinding
operator|.
name|GLOGIN_COOKIE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|gae
operator|.
name|login
operator|.
name|GLoginBinding
operator|.
name|GLOGIN_HOST_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|gae
operator|.
name|login
operator|.
name|GLoginBinding
operator|.
name|GLOGIN_PASSWORD
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|gae
operator|.
name|login
operator|.
name|GLoginBinding
operator|.
name|GLOGIN_TOKEN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|gae
operator|.
name|login
operator|.
name|GLoginBinding
operator|.
name|GLOGIN_USER_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|gae
operator|.
name|login
operator|.
name|GLoginTestUtils
operator|.
name|createEndpoint
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|gae
operator|.
name|login
operator|.
name|GLoginTestUtils
operator|.
name|getCamelContext
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
DECL|class|GLoginBindingTest
specifier|public
class|class
name|GLoginBindingTest
block|{
DECL|field|binding
specifier|private
specifier|static
name|GLoginBinding
name|binding
decl_stmt|;
DECL|field|endpoint
specifier|private
specifier|static
name|GLoginEndpoint
name|endpoint
decl_stmt|;
DECL|field|exchange
specifier|private
name|Exchange
name|exchange
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|setUpClass ()
specifier|public
specifier|static
name|void
name|setUpClass
parameter_list|()
throws|throws
name|Exception
block|{
name|binding
operator|=
operator|new
name|GLoginBinding
argument_list|()
expr_stmt|;
name|StringBuffer
name|buffer
init|=
operator|new
name|StringBuffer
argument_list|(
literal|"glogin:test.appspot.com"
argument_list|)
operator|.
name|append
argument_list|(
literal|"?"
argument_list|)
operator|.
name|append
argument_list|(
literal|"userName=testUserName"
argument_list|)
operator|.
name|append
argument_list|(
literal|"&"
argument_list|)
operator|.
name|append
argument_list|(
literal|"password=testPassword"
argument_list|)
decl_stmt|;
name|endpoint
operator|=
name|createEndpoint
argument_list|(
name|buffer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|exchange
operator|=
operator|new
name|DefaultExchange
argument_list|(
name|getCamelContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testWriteRequestDefault ()
specifier|public
name|void
name|testWriteRequestDefault
parameter_list|()
block|{
name|GLoginData
name|data
init|=
name|binding
operator|.
name|writeRequest
argument_list|(
name|endpoint
argument_list|,
name|exchange
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"apache-camel-2.x"
argument_list|,
name|data
operator|.
name|getClientName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test.appspot.com"
argument_list|,
name|data
operator|.
name|getHostName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testUserName"
argument_list|,
name|data
operator|.
name|getUserName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testPassword"
argument_list|,
name|data
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testWriteRequestCustom ()
specifier|public
name|void
name|testWriteRequestCustom
parameter_list|()
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|GLOGIN_HOST_NAME
argument_list|,
literal|"custom.appspot.com"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|GLOGIN_USER_NAME
argument_list|,
literal|"customUserName"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|GLOGIN_PASSWORD
argument_list|,
literal|"customPassword"
argument_list|)
expr_stmt|;
name|GLoginData
name|data
init|=
name|binding
operator|.
name|writeRequest
argument_list|(
name|endpoint
argument_list|,
name|exchange
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"custom.appspot.com"
argument_list|,
name|data
operator|.
name|getHostName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"customUserName"
argument_list|,
name|data
operator|.
name|getUserName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"customPassword"
argument_list|,
name|data
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReadResponse ()
specifier|public
name|void
name|testReadResponse
parameter_list|()
throws|throws
name|Exception
block|{
name|GLoginData
name|data
init|=
operator|new
name|GLoginData
argument_list|()
decl_stmt|;
name|data
operator|.
name|setAuthenticationToken
argument_list|(
literal|"testToken"
argument_list|)
expr_stmt|;
name|data
operator|.
name|setAuthorizationCookie
argument_list|(
literal|"testCookie=1234ABCD"
argument_list|)
expr_stmt|;
name|binding
operator|.
name|readResponse
argument_list|(
name|endpoint
argument_list|,
name|exchange
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testToken"
argument_list|,
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getHeader
argument_list|(
name|GLOGIN_TOKEN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testCookie=1234ABCD"
argument_list|,
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getHeader
argument_list|(
name|GLOGIN_COOKIE
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

