begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.gae.auth
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|gae
operator|.
name|auth
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|appengine
operator|.
name|api
operator|.
name|mail
operator|.
name|MailService
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|SimpleRegistry
import|;
end_import

begin_class
DECL|class|GAuthTestUtils
specifier|public
specifier|final
class|class
name|GAuthTestUtils
block|{
DECL|method|GAuthTestUtils ()
specifier|private
name|GAuthTestUtils
parameter_list|()
block|{     }
DECL|method|createComponent ()
specifier|public
specifier|static
name|GAuthComponent
name|createComponent
parameter_list|()
block|{
name|SimpleRegistry
name|registry
init|=
operator|new
name|SimpleRegistry
argument_list|()
decl_stmt|;
name|registry
operator|.
name|put
argument_list|(
literal|"customAuthorizeBinding"
argument_list|,
operator|new
name|GAuthAuthorizeBinding
argument_list|()
block|{ }
argument_list|)
expr_stmt|;
comment|// subclass
name|registry
operator|.
name|put
argument_list|(
literal|"customUpgradeBinding"
argument_list|,
operator|new
name|GAuthUpgradeBinding
argument_list|()
block|{ }
argument_list|)
expr_stmt|;
comment|// subclass
name|registry
operator|.
name|put
argument_list|(
literal|"gAuthKeyLoader"
argument_list|,
operator|new
name|GAuthPk8Loader
argument_list|()
argument_list|)
expr_stmt|;
name|registry
operator|.
name|put
argument_list|(
literal|"gAuthService"
argument_list|,
operator|new
name|GAuthServiceMock
argument_list|()
argument_list|)
expr_stmt|;
name|CamelContext
name|context
init|=
operator|new
name|DefaultCamelContext
argument_list|(
name|registry
argument_list|)
decl_stmt|;
name|GAuthComponent
name|component
init|=
operator|new
name|GAuthComponent
argument_list|()
decl_stmt|;
name|component
operator|.
name|setConsumerKey
argument_list|(
literal|"testConsumerKey"
argument_list|)
expr_stmt|;
name|component
operator|.
name|setConsumerSecret
argument_list|(
literal|"testConsumerSecret"
argument_list|)
expr_stmt|;
name|component
operator|.
name|setCamelContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
return|return
name|component
return|;
block|}
DECL|method|createMessage ()
specifier|public
specifier|static
name|Message
name|createMessage
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|Message
argument_list|()
return|;
block|}
block|}
end_class

end_unit

