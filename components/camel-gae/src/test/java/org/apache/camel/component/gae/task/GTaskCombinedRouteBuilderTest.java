begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.gae.task
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|gae
operator|.
name|task
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|httpunit
operator|.
name|HttpUnitOptions
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|servletunit
operator|.
name|ServletRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ProducerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|gae
operator|.
name|support
operator|.
name|ServletTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|ClassPathResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|junit4
operator|.
name|SpringJUnit4ClassRunner
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|SpringJUnit4ClassRunner
operator|.
name|class
argument_list|)
annotation|@
name|ContextConfiguration
argument_list|(
name|locations
operator|=
block|{
literal|"/org/apache/camel/component/gae/task/context-combined.xml"
block|}
argument_list|)
DECL|class|GTaskCombinedRouteBuilderTest
specifier|public
class|class
name|GTaskCombinedRouteBuilderTest
extends|extends
name|ServletTestSupport
block|{
annotation|@
name|Autowired
DECL|field|camelContext
specifier|private
name|CamelContext
name|camelContext
decl_stmt|;
annotation|@
name|Autowired
DECL|field|producerTemplate
specifier|private
name|ProducerTemplate
name|producerTemplate
decl_stmt|;
annotation|@
name|Autowired
DECL|field|mockQueue
specifier|private
name|MockQueue
name|mockQueue
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|setUpClass ()
specifier|public
specifier|static
name|void
name|setUpClass
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|webxml
init|=
literal|"org/apache/camel/component/gae/task/web-combined.xml"
decl_stmt|;
name|InputStream
name|is
init|=
operator|new
name|ClassPathResource
argument_list|(
name|webxml
argument_list|)
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
name|servletRunner
operator|=
operator|new
name|ServletRunner
argument_list|(
name|is
argument_list|,
name|CTX_PATH
argument_list|)
expr_stmt|;
name|HttpUnitOptions
operator|.
name|setExceptionsThrownOnErrorStatus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// Servlet needs to be initialized explicitly because
comment|// route creation is not bound to servlet lifecycle.
name|initServlet
argument_list|()
expr_stmt|;
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|mockQueue
operator|.
name|setServletUnitClient
argument_list|(
name|newClient
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
name|getMockEndpoint
argument_list|()
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDefault ()
specifier|public
name|void
name|testDefault
parameter_list|()
throws|throws
name|Exception
block|{
name|getMockEndpoint
argument_list|()
operator|.
name|expectedBodiesReceived
argument_list|(
literal|"test1"
argument_list|)
expr_stmt|;
name|getMockEndpoint
argument_list|()
operator|.
name|expectedHeaderReceived
argument_list|(
literal|"test"
argument_list|,
literal|"test2"
argument_list|)
expr_stmt|;
name|producerTemplate
operator|.
name|sendBodyAndHeader
argument_list|(
literal|"direct:input"
argument_list|,
literal|"test1"
argument_list|,
literal|"test"
argument_list|,
literal|"test2"
argument_list|)
expr_stmt|;
name|getMockEndpoint
argument_list|()
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
name|Message
name|received
init|=
name|getMockEndpoint
argument_list|()
operator|.
name|getExchanges
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getIn
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"default"
argument_list|,
name|received
operator|.
name|getHeader
argument_list|(
name|GTaskBinding
operator|.
name|GTASK_QUEUE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|received
operator|.
name|getHeader
argument_list|(
name|GTaskBinding
operator|.
name|GTASK_RETRY_COUNT
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getMockEndpoint ()
specifier|private
name|MockEndpoint
name|getMockEndpoint
parameter_list|()
block|{
return|return
operator|(
name|MockEndpoint
operator|)
name|camelContext
operator|.
name|getEndpoint
argument_list|(
literal|"mock:mock"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

