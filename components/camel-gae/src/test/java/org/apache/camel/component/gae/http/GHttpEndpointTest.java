begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.gae.http
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|gae
operator|.
name|http
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|gae
operator|.
name|http
operator|.
name|GHttpTestUtils
operator|.
name|createEndpoint
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
DECL|class|GHttpEndpointTest
specifier|public
class|class
name|GHttpEndpointTest
block|{
DECL|field|AMP
specifier|private
specifier|static
specifier|final
name|String
name|AMP
init|=
literal|"&"
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{     }
annotation|@
name|Test
DECL|method|testGetEndpointUrl ()
specifier|public
name|void
name|testGetEndpointUrl
parameter_list|()
throws|throws
name|Exception
block|{
name|GHttpEndpoint
name|endpoint1
init|=
name|createEndpoint
argument_list|(
literal|"ghttp://somewhere.com/path?a=b"
argument_list|)
decl_stmt|;
name|GHttpEndpoint
name|endpoint2
init|=
name|createEndpoint
argument_list|(
literal|"ghttps://somewhere.com/path?a=b"
argument_list|)
decl_stmt|;
name|GHttpEndpoint
name|endpoint3
init|=
name|createEndpoint
argument_list|(
literal|"xhttps://somewhere.com/path?a=b"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"http://somewhere.com/path?a=b"
argument_list|,
name|endpoint1
operator|.
name|getEndpointUrl
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"https://somewhere.com/path?a=b"
argument_list|,
name|endpoint2
operator|.
name|getEndpointUrl
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://somewhere.com/path?a=b"
argument_list|,
name|endpoint3
operator|.
name|getEndpointUrl
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPropertiesDefault ()
specifier|public
name|void
name|testPropertiesDefault
parameter_list|()
throws|throws
name|Exception
block|{
name|GHttpEndpoint
name|endpoint
init|=
name|createEndpoint
argument_list|(
literal|"ghttp://somewhere.com/path?a=b"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|endpoint
operator|.
name|getOutboundBinding
argument_list|()
operator|.
name|getClass
argument_list|()
operator|.
name|equals
argument_list|(
name|GHttpBinding
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPropertiesCustom ()
specifier|public
name|void
name|testPropertiesCustom
parameter_list|()
throws|throws
name|Exception
block|{
name|StringBuilder
name|buffer
init|=
operator|new
name|StringBuilder
argument_list|(
literal|"ghttp://somewhere.com/path"
argument_list|)
operator|.
name|append
argument_list|(
literal|"?"
argument_list|)
operator|.
name|append
argument_list|(
literal|"a=b"
argument_list|)
operator|.
name|append
argument_list|(
name|AMP
argument_list|)
operator|.
name|append
argument_list|(
literal|"bridgeEndpoint=false"
argument_list|)
operator|.
name|append
argument_list|(
name|AMP
argument_list|)
operator|.
name|append
argument_list|(
literal|"outboundBindingRef=#customBinding"
argument_list|)
operator|.
name|append
argument_list|(
name|AMP
argument_list|)
operator|.
name|append
argument_list|(
literal|"throwExceptionOnFailure=false"
argument_list|)
decl_stmt|;
name|GHttpEndpoint
name|endpoint
init|=
name|createEndpoint
argument_list|(
name|buffer
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|endpoint
operator|.
name|getOutboundBinding
argument_list|()
operator|.
name|getClass
argument_list|()
operator|.
name|equals
argument_list|(
name|GHttpBinding
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|endpoint
operator|.
name|getOutboundBinding
argument_list|()
operator|instanceof
name|GHttpBinding
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ghttp://somewhere.com/path?a=b"
argument_list|,
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

