begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.converter.dozer
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|converter
operator|.
name|dozer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dozermapper
operator|.
name|core
operator|.
name|CustomConverter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dozermapper
operator|.
name|core
operator|.
name|CustomFieldMapper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dozermapper
operator|.
name|core
operator|.
name|events
operator|.
name|EventListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|dozermapper
operator|.
name|core
operator|.
name|loader
operator|.
name|api
operator|.
name|BeanMappingBuilder
import|;
end_import

begin_class
DECL|class|DozerBeanMapperConfiguration
specifier|public
class|class
name|DozerBeanMapperConfiguration
block|{
DECL|field|mappingFiles
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|mappingFiles
decl_stmt|;
DECL|field|customConverters
specifier|private
name|List
argument_list|<
name|CustomConverter
argument_list|>
name|customConverters
decl_stmt|;
DECL|field|eventListeners
specifier|private
name|List
argument_list|<
name|EventListener
argument_list|>
name|eventListeners
decl_stmt|;
DECL|field|customConvertersWithId
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|CustomConverter
argument_list|>
name|customConvertersWithId
decl_stmt|;
DECL|field|customFieldMapper
specifier|private
name|CustomFieldMapper
name|customFieldMapper
decl_stmt|;
DECL|field|beanMappingBuilders
specifier|private
name|List
argument_list|<
name|BeanMappingBuilder
argument_list|>
name|beanMappingBuilders
decl_stmt|;
DECL|method|getMappingFiles ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getMappingFiles
parameter_list|()
block|{
return|return
name|mappingFiles
return|;
block|}
DECL|method|setMappingFiles (List<String> mappingFiles)
specifier|public
name|void
name|setMappingFiles
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|mappingFiles
parameter_list|)
block|{
name|this
operator|.
name|mappingFiles
operator|=
name|mappingFiles
expr_stmt|;
block|}
DECL|method|getCustomConverters ()
specifier|public
name|List
argument_list|<
name|CustomConverter
argument_list|>
name|getCustomConverters
parameter_list|()
block|{
return|return
name|customConverters
return|;
block|}
DECL|method|setCustomConverters (List<CustomConverter> customConverters)
specifier|public
name|void
name|setCustomConverters
parameter_list|(
name|List
argument_list|<
name|CustomConverter
argument_list|>
name|customConverters
parameter_list|)
block|{
name|this
operator|.
name|customConverters
operator|=
name|customConverters
expr_stmt|;
block|}
DECL|method|getEventListeners ()
specifier|public
name|List
argument_list|<
name|EventListener
argument_list|>
name|getEventListeners
parameter_list|()
block|{
return|return
name|eventListeners
return|;
block|}
DECL|method|setEventListeners (List<EventListener> eventListeners)
specifier|public
name|void
name|setEventListeners
parameter_list|(
name|List
argument_list|<
name|EventListener
argument_list|>
name|eventListeners
parameter_list|)
block|{
name|this
operator|.
name|eventListeners
operator|=
name|eventListeners
expr_stmt|;
block|}
DECL|method|getCustomConvertersWithId ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|CustomConverter
argument_list|>
name|getCustomConvertersWithId
parameter_list|()
block|{
return|return
name|customConvertersWithId
return|;
block|}
DECL|method|setCustomConvertersWithId (Map<String, CustomConverter> customConvertersWithId)
specifier|public
name|void
name|setCustomConvertersWithId
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|CustomConverter
argument_list|>
name|customConvertersWithId
parameter_list|)
block|{
name|this
operator|.
name|customConvertersWithId
operator|=
name|customConvertersWithId
expr_stmt|;
block|}
DECL|method|getCustomFieldMapper ()
specifier|public
name|CustomFieldMapper
name|getCustomFieldMapper
parameter_list|()
block|{
return|return
name|customFieldMapper
return|;
block|}
DECL|method|setCustomFieldMapper (CustomFieldMapper customFieldMapper)
specifier|public
name|void
name|setCustomFieldMapper
parameter_list|(
name|CustomFieldMapper
name|customFieldMapper
parameter_list|)
block|{
name|this
operator|.
name|customFieldMapper
operator|=
name|customFieldMapper
expr_stmt|;
block|}
DECL|method|getBeanMappingBuilders ()
specifier|public
name|List
argument_list|<
name|BeanMappingBuilder
argument_list|>
name|getBeanMappingBuilders
parameter_list|()
block|{
return|return
name|beanMappingBuilders
return|;
block|}
DECL|method|setBeanMappingBuilders (List<BeanMappingBuilder> beanMappingBuilders)
specifier|public
name|void
name|setBeanMappingBuilders
parameter_list|(
name|List
argument_list|<
name|BeanMappingBuilder
argument_list|>
name|beanMappingBuilders
parameter_list|)
block|{
name|this
operator|.
name|beanMappingBuilders
operator|=
name|beanMappingBuilders
expr_stmt|;
block|}
block|}
end_class

end_unit

