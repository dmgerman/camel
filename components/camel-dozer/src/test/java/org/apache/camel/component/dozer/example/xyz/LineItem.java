begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.dozer.example.xyz
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|dozer
operator|.
name|example
operator|.
name|xyz
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Generated
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonInclude
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonProperty
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonPropertyOrder
import|;
end_import

begin_comment
comment|/**  * LineItem  *<p>  *   *   */
end_comment

begin_class
annotation|@
name|JsonInclude
argument_list|(
name|JsonInclude
operator|.
name|Include
operator|.
name|NON_NULL
argument_list|)
annotation|@
name|Generated
argument_list|(
literal|"org.jsonschema2pojo"
argument_list|)
annotation|@
name|JsonPropertyOrder
argument_list|(
block|{
literal|"itemId"
block|,
literal|"amount"
block|,
literal|"cost"
block|}
argument_list|)
DECL|class|LineItem
specifier|public
class|class
name|LineItem
block|{
annotation|@
name|JsonProperty
argument_list|(
literal|"itemId"
argument_list|)
DECL|field|itemId
specifier|private
name|String
name|itemId
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"amount"
argument_list|)
DECL|field|amount
specifier|private
name|int
name|amount
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"cost"
argument_list|)
DECL|field|cost
specifier|private
name|double
name|cost
decl_stmt|;
comment|/**      *       * @return      *     The itemId      */
annotation|@
name|JsonProperty
argument_list|(
literal|"itemId"
argument_list|)
DECL|method|getItemId ()
specifier|public
name|String
name|getItemId
parameter_list|()
block|{
return|return
name|itemId
return|;
block|}
comment|/**      *       * @param itemId      *     The itemId      */
annotation|@
name|JsonProperty
argument_list|(
literal|"itemId"
argument_list|)
DECL|method|setItemId (String itemId)
specifier|public
name|void
name|setItemId
parameter_list|(
name|String
name|itemId
parameter_list|)
block|{
name|this
operator|.
name|itemId
operator|=
name|itemId
expr_stmt|;
block|}
comment|/**      *       * @return      *     The amount      */
annotation|@
name|JsonProperty
argument_list|(
literal|"amount"
argument_list|)
DECL|method|getAmount ()
specifier|public
name|int
name|getAmount
parameter_list|()
block|{
return|return
name|amount
return|;
block|}
comment|/**      *       * @param amount      *     The amount      */
annotation|@
name|JsonProperty
argument_list|(
literal|"amount"
argument_list|)
DECL|method|setAmount (int amount)
specifier|public
name|void
name|setAmount
parameter_list|(
name|int
name|amount
parameter_list|)
block|{
name|this
operator|.
name|amount
operator|=
name|amount
expr_stmt|;
block|}
comment|/**      *       * @return      *     The cost      */
annotation|@
name|JsonProperty
argument_list|(
literal|"cost"
argument_list|)
DECL|method|getCost ()
specifier|public
name|double
name|getCost
parameter_list|()
block|{
return|return
name|cost
return|;
block|}
comment|/**      *       * @param cost      *     The cost      */
annotation|@
name|JsonProperty
argument_list|(
literal|"cost"
argument_list|)
DECL|method|setCost (double cost)
specifier|public
name|void
name|setCost
parameter_list|(
name|double
name|cost
parameter_list|)
block|{
name|this
operator|.
name|cost
operator|=
name|cost
expr_stmt|;
block|}
block|}
end_class

end_unit

