begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.couchdb
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|couchdb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|JsonObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
DECL|class|CouchDbEndpointTest
specifier|public
class|class
name|CouchDbEndpointTest
block|{
annotation|@
name|Test
DECL|method|testCreateCouchExchangeHeadersAreSet ()
specifier|public
name|void
name|testCreateCouchExchangeHeadersAreSet
parameter_list|()
throws|throws
name|Exception
block|{
name|CouchDbEndpoint
name|endpoint
init|=
operator|new
name|CouchDbEndpoint
argument_list|(
literal|"couchdb:http://localhost/db"
argument_list|,
literal|"http://localhost/db"
argument_list|,
operator|new
name|CouchDbComponent
argument_list|(
operator|new
name|DefaultCamelContext
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|id
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|rev
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|seq
init|=
literal|"seq123"
decl_stmt|;
name|JsonObject
name|doc
init|=
operator|new
name|JsonObject
argument_list|()
decl_stmt|;
name|doc
operator|.
name|addProperty
argument_list|(
literal|"_id"
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|doc
operator|.
name|addProperty
argument_list|(
literal|"_rev"
argument_list|,
name|rev
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|endpoint
operator|.
name|createExchange
argument_list|(
name|seq
argument_list|,
name|id
argument_list|,
name|doc
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|id
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|CouchDbConstants
operator|.
name|HEADER_DOC_ID
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|rev
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|CouchDbConstants
operator|.
name|HEADER_DOC_REV
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|seq
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|CouchDbConstants
operator|.
name|HEADER_SEQ
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"UPDATE"
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|CouchDbConstants
operator|.
name|HEADER_METHOD
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"db"
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|CouchDbConstants
operator|.
name|HEADER_DATABASE
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|assertSingleton ()
specifier|public
name|void
name|assertSingleton
parameter_list|()
throws|throws
name|Exception
block|{
name|CouchDbEndpoint
name|endpoint
init|=
operator|new
name|CouchDbEndpoint
argument_list|(
literal|"couchdb:http://localhost/db"
argument_list|,
literal|"http://localhost/db"
argument_list|,
operator|new
name|CouchDbComponent
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|endpoint
operator|.
name|isSingleton
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
DECL|method|testDbRequired ()
specifier|public
name|void
name|testDbRequired
parameter_list|()
throws|throws
name|Exception
block|{
operator|new
name|CouchDbEndpoint
argument_list|(
literal|"couchdb:http://localhost:80"
argument_list|,
literal|"http://localhost:80"
argument_list|,
operator|new
name|CouchDbComponent
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDefaultPortIsSet ()
specifier|public
name|void
name|testDefaultPortIsSet
parameter_list|()
throws|throws
name|Exception
block|{
name|CouchDbEndpoint
name|endpoint
init|=
operator|new
name|CouchDbEndpoint
argument_list|(
literal|"couchdb:http://localhost/db"
argument_list|,
literal|"http://localhost/db"
argument_list|,
operator|new
name|CouchDbComponent
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|CouchDbEndpoint
operator|.
name|DEFAULT_PORT
argument_list|,
name|endpoint
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
DECL|method|testHostnameRequired ()
specifier|public
name|void
name|testHostnameRequired
parameter_list|()
throws|throws
name|Exception
block|{
operator|new
name|CouchDbEndpoint
argument_list|(
literal|"couchdb:http://:80/db"
argument_list|,
literal|"http://:80/db"
argument_list|,
operator|new
name|CouchDbComponent
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
DECL|method|testSchemeRequired ()
specifier|public
name|void
name|testSchemeRequired
parameter_list|()
throws|throws
name|Exception
block|{
operator|new
name|CouchDbEndpoint
argument_list|(
literal|"couchdb:localhost:80/db"
argument_list|,
literal|"localhost:80/db"
argument_list|,
operator|new
name|CouchDbComponent
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

