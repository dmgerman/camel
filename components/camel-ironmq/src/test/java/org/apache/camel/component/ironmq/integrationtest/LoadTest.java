begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.ironmq.integrationtest
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ironmq
operator|.
name|integrationtest
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|dataset
operator|.
name|DataSetSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ironmq
operator|.
name|IronMQConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
annotation|@
name|Ignore
argument_list|(
literal|"Integration test that requires ironmq account."
argument_list|)
DECL|class|LoadTest
specifier|public
class|class
name|LoadTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|IRONMQCLOUD
specifier|private
specifier|static
specifier|final
name|String
name|IRONMQCLOUD
init|=
literal|"http://mq-v3-aws-us-east-1.iron.io"
decl_stmt|;
comment|// replace with your project id
DECL|field|projectId
specifier|private
specifier|final
name|String
name|projectId
init|=
literal|"replace-this"
decl_stmt|;
comment|// replace with your token
DECL|field|token
specifier|private
specifier|final
name|String
name|token
init|=
literal|"replace-this"
decl_stmt|;
DECL|field|ironMQEndpoint
specifier|private
specifier|final
name|String
name|ironMQEndpoint
init|=
literal|"ironmq:testqueue?preserveHeaders=true&projectId="
operator|+
name|projectId
operator|+
literal|"&token="
operator|+
name|token
operator|+
literal|"&maxMessagesPerPoll=100&delay=3000&wait=30&ironMQCloud="
operator|+
name|IRONMQCLOUD
decl_stmt|;
DECL|field|datasetEndpoint
specifier|private
specifier|final
name|String
name|datasetEndpoint
init|=
literal|"dataset:foo?produceDelay=5"
decl_stmt|;
DECL|field|dataSet
specifier|private
name|InputDataset
name|dataSet
init|=
operator|new
name|InputDataset
argument_list|(
literal|1000
argument_list|)
decl_stmt|;
annotation|@
name|Before
DECL|method|clearQueue ()
specifier|public
name|void
name|clearQueue
parameter_list|()
block|{
comment|// make sure the queue is empty before test
name|template
operator|.
name|sendBodyAndHeader
argument_list|(
name|ironMQEndpoint
argument_list|,
literal|null
argument_list|,
name|IronMQConstants
operator|.
name|OPERATION
argument_list|,
name|IronMQConstants
operator|.
name|CLEARQUEUE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDataSet ()
specifier|public
name|void
name|testDataSet
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|endpoint
init|=
name|getMockEndpoint
argument_list|(
name|datasetEndpoint
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|expectedMessageCount
argument_list|(
operator|(
name|int
operator|)
name|dataSet
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|(
literal|4
argument_list|,
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createJndiContext ()
specifier|protected
name|Context
name|createJndiContext
parameter_list|()
throws|throws
name|Exception
block|{
name|Context
name|context
init|=
name|super
operator|.
name|createJndiContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|bind
argument_list|(
literal|"foo"
argument_list|,
name|dataSet
argument_list|)
expr_stmt|;
return|return
name|context
return|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
name|datasetEndpoint
argument_list|)
operator|.
name|to
argument_list|(
name|ironMQEndpoint
argument_list|)
expr_stmt|;
name|from
argument_list|(
name|ironMQEndpoint
argument_list|)
operator|.
name|to
argument_list|(
name|datasetEndpoint
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
DECL|class|InputDataset
specifier|public
class|class
name|InputDataset
extends|extends
name|DataSetSupport
block|{
DECL|method|InputDataset (int size)
specifier|public
name|InputDataset
parameter_list|(
name|int
name|size
parameter_list|)
block|{
name|super
argument_list|(
name|size
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createMessageBody (long messageIndex)
specifier|protected
name|Object
name|createMessageBody
parameter_list|(
name|long
name|messageIndex
parameter_list|)
block|{
return|return
literal|"<hello>"
operator|+
name|messageIndex
return|;
block|}
block|}
block|}
end_class

end_unit

