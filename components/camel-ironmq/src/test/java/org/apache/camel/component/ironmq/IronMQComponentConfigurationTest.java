begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.ironmq
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ironmq
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|IronMQComponentConfigurationTest
specifier|public
class|class
name|IronMQComponentConfigurationTest
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Test
DECL|method|createEndpointWithMinimalConfiguration ()
specifier|public
name|void
name|createEndpointWithMinimalConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|IronMQComponent
name|component
init|=
operator|new
name|IronMQComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|IronMQEndpoint
name|endpoint
init|=
operator|(
name|IronMQEndpoint
operator|)
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"ironmq://TestQueue?projectId=xxx&token=yyy"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"TestQueue"
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getQueueName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"xxx"
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getProjectId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"yyy"
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getToken
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getVisibilityDelay
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getMaxMessagesPerPoll
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|60
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getTimeout
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|isPreserveHeaders
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|isBatchDelete
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getWait
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createEndpointWithMinimalConfigurationAndIronMQCloud ()
specifier|public
name|void
name|createEndpointWithMinimalConfigurationAndIronMQCloud
parameter_list|()
throws|throws
name|Exception
block|{
name|IronMQComponent
name|component
init|=
operator|new
name|IronMQComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|IronMQEndpoint
name|endpoint
init|=
operator|(
name|IronMQEndpoint
operator|)
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"ironmq://TestQueue?projectId=xxx&token=yyy&ironMQCloud=https://iron.foo"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"TestQueue"
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getQueueName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"xxx"
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getProjectId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"yyy"
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getToken
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getVisibilityDelay
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getMaxMessagesPerPoll
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|60
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getTimeout
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"https://iron.foo"
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getIronMQCloud
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createEndpointWithMaximalConfiguration ()
specifier|public
name|void
name|createEndpointWithMaximalConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|IronMQComponent
name|component
init|=
operator|new
name|IronMQComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|IronMQEndpoint
name|endpoint
init|=
operator|(
name|IronMQEndpoint
operator|)
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"ironmq://TestQueue?projectId=xxx&token=yyy&timeout=120&visibilityDelay=5&maxMessagesPerPoll=20&preserveHeaders=true&wait=30"
operator|+
literal|"&ironMQCloud=https://iron.foo&batchDelete=true"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"TestQueue"
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getQueueName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"xxx"
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getProjectId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"yyy"
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getToken
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|20
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getMaxMessagesPerPoll
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|120
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getTimeout
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getVisibilityDelay
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|isPreserveHeaders
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getWait
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|isBatchDelete
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"https://iron.foo"
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getIronMQCloud
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createEndpointWithPollConsumerConfiguration ()
specifier|public
name|void
name|createEndpointWithPollConsumerConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|IronMQComponent
name|component
init|=
operator|new
name|IronMQComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|IronMQEndpoint
name|endpoint
init|=
operator|(
name|IronMQEndpoint
operator|)
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"ironmq://TestQueue?projectId=xxx&token=yyy&initialDelay=200&delay=400&timeout=120&maxMessagesPerPoll=20"
argument_list|)
decl_stmt|;
name|IronMQConsumer
name|consumer
init|=
operator|(
name|IronMQConsumer
operator|)
name|endpoint
operator|.
name|createConsumer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|consumer
operator|.
name|getInitialDelay
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|400
argument_list|,
name|consumer
operator|.
name|getDelay
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|20
argument_list|,
name|consumer
operator|.
name|getMaxMessagesPerPoll
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
DECL|method|createEndpointWithoutTokenConfiguration ()
specifier|public
name|void
name|createEndpointWithoutTokenConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|IronMQComponent
name|component
init|=
operator|new
name|IronMQComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"ironmq://testqueue?projectId=yyy"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
DECL|method|createEndpointWithoutProjectIdConfiguration ()
specifier|public
name|void
name|createEndpointWithoutProjectIdConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|IronMQComponent
name|component
init|=
operator|new
name|IronMQComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"ironmq://MyQueue?token=xxx"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

