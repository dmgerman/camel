begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.robotframework
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|robotframework
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|RobotFrameworkCamelConfigurationTest
specifier|public
class|class
name|RobotFrameworkCamelConfigurationTest
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Test
DECL|method|testNameParamInRobotFrameworkCamelConfigurations ()
specifier|public
name|void
name|testNameParamInRobotFrameworkCamelConfigurations
parameter_list|()
throws|throws
name|Exception
block|{
name|RobotFrameworkEndpoint
name|robotFrameworkEndpoint
init|=
name|createEndpointWithOption
argument_list|(
literal|"name=testName"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"testName"
argument_list|,
name|robotFrameworkEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDryRunParamInRobotFrameworkCamelConfigurations ()
specifier|public
name|void
name|testDryRunParamInRobotFrameworkCamelConfigurations
parameter_list|()
throws|throws
name|Exception
block|{
name|RobotFrameworkEndpoint
name|robotFrameworkEndpoint
init|=
name|createEndpointWithOption
argument_list|(
literal|""
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|robotFrameworkEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|isDryrun
argument_list|()
argument_list|)
expr_stmt|;
name|robotFrameworkEndpoint
operator|=
name|createEndpointWithOption
argument_list|(
literal|"dryrun=true"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|robotFrameworkEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|isDryrun
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testOutputParamInRobotFrameworkCamelConfigurations ()
specifier|public
name|void
name|testOutputParamInRobotFrameworkCamelConfigurations
parameter_list|()
throws|throws
name|Exception
block|{
name|RobotFrameworkEndpoint
name|robotFrameworkEndpoint
init|=
name|createEndpointWithOption
argument_list|(
literal|"output=customOutput.log"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"customOutput.log"
argument_list|,
name|robotFrameworkEndpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getOutput
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createEndpointWithOption (String option)
specifier|private
name|RobotFrameworkEndpoint
name|createEndpointWithOption
parameter_list|(
name|String
name|option
parameter_list|)
throws|throws
name|Exception
block|{
name|RobotFrameworkComponent
name|robotFrameworkComponent
init|=
operator|new
name|RobotFrameworkComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|RobotFrameworkEndpoint
name|robotFrameworkEndpoint
init|=
operator|(
name|RobotFrameworkEndpoint
operator|)
name|robotFrameworkComponent
operator|.
name|createEndpoint
argument_list|(
literal|"robotframework:src/test/resources/org/apache/camel/component/robotframework/send_no_camel_exchnage_only_camel_configs.robot?"
operator|+
name|option
argument_list|)
decl_stmt|;
return|return
name|robotFrameworkEndpoint
return|;
block|}
block|}
end_class

end_unit

