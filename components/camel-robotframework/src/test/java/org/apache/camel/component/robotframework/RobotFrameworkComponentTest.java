begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.robotframework
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|robotframework
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|RobotFrameworkComponentTest
specifier|public
class|class
name|RobotFrameworkComponentTest
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Test
DECL|method|testRobotFrameworkCamelBodyAsString ()
specifier|public
name|void
name|testRobotFrameworkCamelBodyAsString
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
decl_stmt|;
name|MockEndpoint
name|mockString
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:resultString"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMinimumMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|mockString
operator|.
name|expectedMinimumMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
literal|"direct:setVariableCamelBody"
argument_list|,
literal|"Hello Robot"
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
literal|"direct:assertRobotCamelInputAsString"
argument_list|,
literal|"Hello Robot"
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
name|Exchange
name|exchange
init|=
name|mock
operator|.
name|getExchanges
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ObjectHelper
operator|.
name|cast
argument_list|(
name|Integer
operator|.
name|class
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|RobotFrameworkCamelConstants
operator|.
name|CAMEL_ROBOT_RETURN_CODE
argument_list|)
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|Exchange
name|exchangeString
init|=
name|mockString
operator|.
name|getExchanges
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ObjectHelper
operator|.
name|cast
argument_list|(
name|Integer
operator|.
name|class
argument_list|,
name|exchangeString
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|RobotFrameworkCamelConstants
operator|.
name|CAMEL_ROBOT_RETURN_CODE
argument_list|)
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRobotFrameworkCamelBodyAsNumeric ()
specifier|public
name|void
name|testRobotFrameworkCamelBodyAsNumeric
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
decl_stmt|;
name|MockEndpoint
name|mockNumeric
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:resultNumeric"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMinimumMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|mockNumeric
operator|.
name|expectedMinimumMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
literal|"direct:setVariableCamelBody"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
literal|"direct:assertRobotCamelInputAsNumeric"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
name|Exchange
name|exchange
init|=
name|mock
operator|.
name|getExchanges
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ObjectHelper
operator|.
name|cast
argument_list|(
name|Integer
operator|.
name|class
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|RobotFrameworkCamelConstants
operator|.
name|CAMEL_ROBOT_RETURN_CODE
argument_list|)
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|Exchange
name|exchangeNumeric
init|=
name|mockNumeric
operator|.
name|getExchanges
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ObjectHelper
operator|.
name|cast
argument_list|(
name|Integer
operator|.
name|class
argument_list|,
name|exchangeNumeric
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|RobotFrameworkCamelConstants
operator|.
name|CAMEL_ROBOT_RETURN_CODE
argument_list|)
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRobotFrameworkCamelBodyAndHeaderAsString ()
specifier|public
name|void
name|testRobotFrameworkCamelBodyAndHeaderAsString
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:resultHeader"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMinimumMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBodyAndHeader
argument_list|(
literal|"direct:setVariableCamelBodyAndHeader"
argument_list|,
literal|"Hello Robot"
argument_list|,
literal|"stringKey"
argument_list|,
literal|"headerValue"
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
name|Exchange
name|exchange
init|=
name|mock
operator|.
name|getExchanges
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ObjectHelper
operator|.
name|cast
argument_list|(
name|Integer
operator|.
name|class
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|RobotFrameworkCamelConstants
operator|.
name|CAMEL_ROBOT_RETURN_CODE
argument_list|)
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRobotFrameworkCamelBodyAndPropertyAsString ()
specifier|public
name|void
name|testRobotFrameworkCamelBodyAndPropertyAsString
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:resultProperty"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMinimumMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBodyAndProperty
argument_list|(
literal|"direct:setVariableCamelBodyAndProperty"
argument_list|,
literal|"Hello Robot"
argument_list|,
literal|"stringKey"
argument_list|,
literal|"propertyValue"
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
name|Exchange
name|exchange
init|=
name|mock
operator|.
name|getExchanges
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ObjectHelper
operator|.
name|cast
argument_list|(
name|Integer
operator|.
name|class
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|RobotFrameworkCamelConstants
operator|.
name|CAMEL_ROBOT_RETURN_CODE
argument_list|)
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRobotFrameworkResourceUriHeader ()
specifier|public
name|void
name|testRobotFrameworkResourceUriHeader
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:resultResourceUri"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMinimumMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
literal|"direct:setVariableCamelBodyResourceUri"
argument_list|,
literal|"Hello Robot"
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
name|Exchange
name|exchange
init|=
name|mock
operator|.
name|getExchanges
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ObjectHelper
operator|.
name|cast
argument_list|(
name|Integer
operator|.
name|class
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|RobotFrameworkCamelConstants
operator|.
name|CAMEL_ROBOT_RETURN_CODE
argument_list|)
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"direct:setVariableCamelBody"
argument_list|)
operator|.
name|to
argument_list|(
literal|"robotframework:src/test/resources/org/apache/camel/component/robotframework/set_variable_camel_body.robot?xunitFile=target/out.xml"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:result"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:assertRobotCamelInputAsString"
argument_list|)
operator|.
name|to
argument_list|(
literal|"robotframework:src/test/resources/org/apache/camel/component/robotframework/assert_string_robot_with_camel_exchange_value_as_string.robot?xunitFile=target/out.xml"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:resultString"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:assertRobotCamelInputAsNumeric"
argument_list|)
operator|.
name|to
argument_list|(
literal|"robotframework:src/test/resources/org/apache/camel/component/robotframework/assert_string_robot_with_camel_exchange_value_as_numeric.robot?xunitFile=target/out.xml"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:resultNumeric"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:setVariableCamelBodyAndHeader"
argument_list|)
operator|.
name|to
argument_list|(
literal|"robotframework:src/test/resources/org/apache/camel/component/robotframework/set_variable_camel_header.robot?xunitFile=target/out.xml"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:resultHeader"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:setVariableCamelBodyAndProperty"
argument_list|)
operator|.
name|to
argument_list|(
literal|"robotframework:src/test/resources/org/apache/camel/component/robotframework/set_variable_camel_property.robot?xunitFile=target/out.xml"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:resultProperty"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:setVariableCamelBodyResourceUri"
argument_list|)
operator|.
name|setHeader
argument_list|(
name|RobotFrameworkCamelConstants
operator|.
name|CAMEL_ROBOT_RESOURCE_URI
argument_list|)
operator|.
name|constant
argument_list|(
literal|"src/test/resources/org/apache/camel/component/robotframework/set_variable_camel_body.robot"
argument_list|)
operator|.
name|to
argument_list|(
literal|"robotframework:dummy?xunitFile=target/out.xml"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:resultResourceUri"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

