begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.google.sheets
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|google
operator|.
name|sheets
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|services
operator|.
name|sheets
operator|.
name|v4
operator|.
name|model
operator|.
name|BatchUpdateSpreadsheetRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|services
operator|.
name|sheets
operator|.
name|v4
operator|.
name|model
operator|.
name|BatchUpdateSpreadsheetResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|services
operator|.
name|sheets
operator|.
name|v4
operator|.
name|model
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|services
operator|.
name|sheets
operator|.
name|v4
operator|.
name|model
operator|.
name|Spreadsheet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|services
operator|.
name|sheets
operator|.
name|v4
operator|.
name|model
operator|.
name|SpreadsheetProperties
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|api
operator|.
name|services
operator|.
name|sheets
operator|.
name|v4
operator|.
name|model
operator|.
name|UpdateSpreadsheetPropertiesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|google
operator|.
name|sheets
operator|.
name|internal
operator|.
name|GoogleSheetsApiCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|google
operator|.
name|sheets
operator|.
name|internal
operator|.
name|SheetsSpreadsheetsApiMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Test class for {@link com.google.api.services.sheets.v4.Sheets.Spreadsheets} APIs.  */
end_comment

begin_class
DECL|class|SheetsSpreadsheetsIntegrationTest
specifier|public
class|class
name|SheetsSpreadsheetsIntegrationTest
extends|extends
name|AbstractGoogleSheetsTestSupport
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|SheetsSpreadsheetsIntegrationTest
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|PATH_PREFIX
specifier|private
specifier|static
specifier|final
name|String
name|PATH_PREFIX
init|=
name|GoogleSheetsApiCollection
operator|.
name|getCollection
argument_list|()
operator|.
name|getApiName
argument_list|(
name|SheetsSpreadsheetsApiMethod
operator|.
name|class
argument_list|)
operator|.
name|getName
argument_list|()
decl_stmt|;
annotation|@
name|Test
DECL|method|testCreate ()
specifier|public
name|void
name|testCreate
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|title
init|=
literal|"camel-sheets-"
operator|+
name|Math
operator|.
name|abs
argument_list|(
operator|new
name|Random
argument_list|()
operator|.
name|nextInt
argument_list|()
argument_list|)
decl_stmt|;
name|Spreadsheet
name|sheetToCreate
init|=
operator|new
name|Spreadsheet
argument_list|()
decl_stmt|;
name|SpreadsheetProperties
name|sheetProperties
init|=
operator|new
name|SpreadsheetProperties
argument_list|()
decl_stmt|;
name|sheetProperties
operator|.
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|sheetToCreate
operator|.
name|setProperties
argument_list|(
name|sheetProperties
argument_list|)
expr_stmt|;
comment|// using com.google.api.services.sheets.v4.model.Spreadsheet message body for single parameter "content"
specifier|final
name|Spreadsheet
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://CREATE"
argument_list|,
name|sheetToCreate
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"create result is null"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|title
argument_list|,
name|result
operator|.
name|getProperties
argument_list|()
operator|.
name|getTitle
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"create: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGet ()
specifier|public
name|void
name|testGet
parameter_list|()
throws|throws
name|Exception
block|{
name|Spreadsheet
name|testSheet
init|=
name|getSpreadsheet
argument_list|()
decl_stmt|;
comment|// using String message body for single parameter "spreadsheetId"
specifier|final
name|Spreadsheet
name|result
init|=
name|requestBody
argument_list|(
literal|"direct://GET"
argument_list|,
name|testSheet
operator|.
name|getSpreadsheetId
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"get result is null"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|testSheet
operator|.
name|getSpreadsheetId
argument_list|()
argument_list|,
name|result
operator|.
name|getSpreadsheetId
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"get: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBatchUpdate ()
specifier|public
name|void
name|testBatchUpdate
parameter_list|()
throws|throws
name|Exception
block|{
name|Spreadsheet
name|testSheet
init|=
name|getSpreadsheet
argument_list|()
decl_stmt|;
name|String
name|updateTitle
init|=
literal|"updated-"
operator|+
name|testSheet
operator|.
name|getProperties
argument_list|()
operator|.
name|getTitle
argument_list|()
decl_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
comment|// parameter type is String
name|headers
operator|.
name|put
argument_list|(
literal|"CamelGoogleSheets.spreadsheetId"
argument_list|,
name|testSheet
operator|.
name|getSpreadsheetId
argument_list|()
argument_list|)
expr_stmt|;
comment|// parameter type is com.google.api.services.sheets.v4.model.BatchUpdateSpreadsheetRequest
name|headers
operator|.
name|put
argument_list|(
literal|"CamelGoogleSheets.batchUpdateSpreadsheetRequest"
argument_list|,
operator|new
name|BatchUpdateSpreadsheetRequest
argument_list|()
operator|.
name|setIncludeSpreadsheetInResponse
argument_list|(
literal|true
argument_list|)
operator|.
name|setRequests
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|Request
argument_list|()
operator|.
name|setUpdateSpreadsheetProperties
argument_list|(
operator|new
name|UpdateSpreadsheetPropertiesRequest
argument_list|()
operator|.
name|setProperties
argument_list|(
operator|new
name|SpreadsheetProperties
argument_list|()
operator|.
name|setTitle
argument_list|(
name|updateTitle
argument_list|)
argument_list|)
operator|.
name|setFields
argument_list|(
literal|"title"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|BatchUpdateSpreadsheetResponse
name|result
init|=
name|requestBodyAndHeaders
argument_list|(
literal|"direct://BATCHUPDATE"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"batchUpdate result in null"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|updateTitle
argument_list|,
name|result
operator|.
name|getUpdatedSpreadsheet
argument_list|()
operator|.
name|getProperties
argument_list|()
operator|.
name|getTitle
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"batchUpdate: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
block|{
comment|// test route for batchUpdate
name|from
argument_list|(
literal|"direct://BATCHUPDATE"
argument_list|)
operator|.
name|to
argument_list|(
literal|"google-sheets://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/batchUpdate"
argument_list|)
expr_stmt|;
comment|// test route for create
name|from
argument_list|(
literal|"direct://CREATE"
argument_list|)
operator|.
name|to
argument_list|(
literal|"google-sheets://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/create?inBody=content"
argument_list|)
expr_stmt|;
comment|// test route for get
name|from
argument_list|(
literal|"direct://GET"
argument_list|)
operator|.
name|to
argument_list|(
literal|"google-sheets://"
operator|+
name|PATH_PREFIX
operator|+
literal|"/get?inBody=spreadsheetId"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

