begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.google.sheets.server
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|google
operator|.
name|sheets
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|com
operator|.
name|consol
operator|.
name|citrus
operator|.
name|dsl
operator|.
name|endpoint
operator|.
name|CitrusEndpoints
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|Description
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|model
operator|.
name|Statement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|ClassPathResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|http
operator|.
name|HttpStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|util
operator|.
name|SocketUtils
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|google
operator|.
name|sheets
operator|.
name|server
operator|.
name|GoogleSheetsApiTestServerAssert
operator|.
name|assertThatGoogleApi
import|;
end_import

begin_class
DECL|class|GoogleSheetsApiTestServerRule
specifier|public
class|class
name|GoogleSheetsApiTestServerRule
implements|implements
name|TestRule
block|{
DECL|field|SERVER_KEYSTORE
specifier|public
specifier|static
specifier|final
name|String
name|SERVER_KEYSTORE
init|=
literal|"googleapis.jks"
decl_stmt|;
DECL|field|SERVER_KEYSTORE_PASSWORD
specifier|public
specifier|static
specifier|final
name|String
name|SERVER_KEYSTORE_PASSWORD
init|=
literal|"secret"
decl_stmt|;
DECL|field|googleApiTestServer
specifier|private
name|GoogleSheetsApiTestServer
name|googleApiTestServer
decl_stmt|;
DECL|field|serverPort
specifier|private
name|int
name|serverPort
init|=
name|SocketUtils
operator|.
name|findAvailableTcpPort
argument_list|()
decl_stmt|;
DECL|method|GoogleSheetsApiTestServerRule (String optionFile)
specifier|public
name|GoogleSheetsApiTestServerRule
parameter_list|(
name|String
name|optionFile
parameter_list|)
block|{
try|try
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|testOptions
init|=
name|getTestOptions
argument_list|(
name|optionFile
argument_list|)
decl_stmt|;
name|googleApiTestServer
operator|=
operator|new
name|GoogleSheetsApiTestServer
operator|.
name|Builder
argument_list|(
name|CitrusEndpoints
operator|.
name|http
argument_list|()
operator|.
name|server
argument_list|()
operator|.
name|port
argument_list|(
name|serverPort
argument_list|)
operator|.
name|timeout
argument_list|(
literal|15000
argument_list|)
operator|.
name|defaultStatus
argument_list|(
name|HttpStatus
operator|.
name|REQUEST_TIMEOUT
argument_list|)
operator|.
name|autoStart
argument_list|(
literal|true
argument_list|)
argument_list|)
operator|.
name|keyStorePath
argument_list|(
operator|new
name|ClassPathResource
argument_list|(
name|SERVER_KEYSTORE
argument_list|)
operator|.
name|getFile
argument_list|()
operator|.
name|toPath
argument_list|()
argument_list|)
operator|.
name|keyStorePassword
argument_list|(
name|SERVER_KEYSTORE_PASSWORD
argument_list|)
operator|.
name|securePort
argument_list|(
name|serverPort
argument_list|)
operator|.
name|clientId
argument_list|(
name|testOptions
operator|.
name|get
argument_list|(
literal|"clientId"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|clientSecret
argument_list|(
name|testOptions
operator|.
name|get
argument_list|(
literal|"clientSecret"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|accessToken
argument_list|(
name|testOptions
operator|.
name|get
argument_list|(
literal|"accessToken"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|refreshToken
argument_list|(
name|testOptions
operator|.
name|get
argument_list|(
literal|"refreshToken"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertThatGoogleApi
argument_list|(
name|googleApiTestServer
argument_list|)
operator|.
name|isRunning
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Error while reading server keystore file"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|apply (Statement base, Description description)
specifier|public
name|Statement
name|apply
parameter_list|(
name|Statement
name|base
parameter_list|,
name|Description
name|description
parameter_list|)
block|{
return|return
operator|new
name|GoogleSheetsApiTestServerStatement
argument_list|(
name|base
argument_list|)
return|;
block|}
comment|/**      * Read component configuration from TEST_OPTIONS_PROPERTIES.      *       * @return Map of component options.      */
DECL|method|getTestOptions (String optionFile)
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getTestOptions
parameter_list|(
name|String
name|optionFile
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|properties
operator|.
name|load
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|optionFile
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|options
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|entry
range|:
name|properties
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|options
operator|.
name|put
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|options
return|;
block|}
comment|/**      * Rule statement initializes and resets test server after each method.      */
DECL|class|GoogleSheetsApiTestServerStatement
specifier|private
class|class
name|GoogleSheetsApiTestServerStatement
extends|extends
name|Statement
block|{
DECL|field|base
specifier|private
specifier|final
name|Statement
name|base
decl_stmt|;
DECL|method|GoogleSheetsApiTestServerStatement (Statement base)
name|GoogleSheetsApiTestServerStatement
parameter_list|(
name|Statement
name|base
parameter_list|)
block|{
name|this
operator|.
name|base
operator|=
name|base
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|evaluate ()
specifier|public
name|void
name|evaluate
parameter_list|()
throws|throws
name|Throwable
block|{
name|googleApiTestServer
operator|.
name|init
argument_list|()
expr_stmt|;
try|try
block|{
name|base
operator|.
name|evaluate
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|googleApiTestServer
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
block|}
block|}
DECL|method|getGoogleApiTestServer ()
specifier|public
name|GoogleSheetsApiTestServer
name|getGoogleApiTestServer
parameter_list|()
block|{
return|return
name|googleApiTestServer
return|;
block|}
DECL|method|getServerPort ()
specifier|public
name|int
name|getServerPort
parameter_list|()
block|{
return|return
name|serverPort
return|;
block|}
block|}
end_class

end_unit

