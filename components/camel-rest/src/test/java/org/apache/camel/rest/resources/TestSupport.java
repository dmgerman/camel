begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.rest.resources
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|rest
operator|.
name|resources
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|WebResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|config
operator|.
name|ClientConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|config
operator|.
name|DefaultClientConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|rest
operator|.
name|Main
import|;
end_import

begin_comment
comment|/**  * @version $Revision$  */
end_comment

begin_class
DECL|class|TestSupport
specifier|public
class|class
name|TestSupport
extends|extends
name|TestCase
block|{
DECL|field|port
specifier|protected
name|int
name|port
init|=
literal|9998
decl_stmt|;
DECL|field|clientConfig
specifier|protected
name|ClientConfig
name|clientConfig
decl_stmt|;
DECL|field|client
specifier|protected
name|Client
name|client
decl_stmt|;
DECL|field|resource
specifier|protected
name|WebResource
name|resource
decl_stmt|;
annotation|@
name|Override
DECL|method|setUp ()
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|Main
operator|.
name|run
argument_list|(
name|port
argument_list|)
expr_stmt|;
name|clientConfig
operator|=
operator|new
name|DefaultClientConfig
argument_list|()
expr_stmt|;
comment|// use the following jaxb context resolver
comment|//cc.getProviderClasses().add(JAXBContextResolver.class);
name|client
operator|=
name|Client
operator|.
name|create
argument_list|(
name|clientConfig
argument_list|)
expr_stmt|;
name|resource
operator|=
name|client
operator|.
name|resource
argument_list|(
literal|"http://localhost:"
operator|+
name|port
operator|+
name|Main
operator|.
name|WEBAPP_CTX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|tearDown ()
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|Main
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

