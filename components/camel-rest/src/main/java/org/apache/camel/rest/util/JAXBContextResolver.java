begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.rest.util
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|rest
operator|.
name|util
package|;
end_package

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|json
operator|.
name|JSONConfiguration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|json
operator|.
name|JSONJAXBContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|RouteType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|RoutesType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|rest
operator|.
name|model
operator|.
name|Camel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|rest
operator|.
name|model
operator|.
name|EndpointLink
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|rest
operator|.
name|model
operator|.
name|Endpoints
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|ContextResolver
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * @version $Revision$  */
end_comment

begin_class
annotation|@
name|Provider
DECL|class|JAXBContextResolver
specifier|public
specifier|final
class|class
name|JAXBContextResolver
implements|implements
name|ContextResolver
argument_list|<
name|JAXBContext
argument_list|>
block|{
DECL|field|context
specifier|private
specifier|final
name|JAXBContext
name|context
decl_stmt|;
DECL|field|types
specifier|private
specifier|final
name|Set
argument_list|<
name|Class
argument_list|>
name|types
decl_stmt|;
DECL|field|cTypes
specifier|private
specifier|final
name|Class
index|[]
name|cTypes
init|=
block|{
name|RoutesType
operator|.
name|class
block|,
name|RouteType
operator|.
name|class
block|,
name|Camel
operator|.
name|class
block|,
name|Endpoints
operator|.
name|class
block|,
name|EndpointLink
operator|.
name|class
block|}
decl_stmt|;
DECL|method|JAXBContextResolver ()
specifier|public
name|JAXBContextResolver
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|types
operator|=
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|cTypes
argument_list|)
argument_list|)
expr_stmt|;
comment|// TODO we can't use natural with JAXB 2.1.6 or 2.1 for some reason?
name|JSONConfiguration
operator|.
name|Builder
name|builder
init|=
name|JSONConfiguration
operator|.
name|mapped
argument_list|()
decl_stmt|;
comment|//JSONConfiguration.Builder builder = JSONConfiguration.natural();
name|this
operator|.
name|context
operator|=
operator|new
name|JSONJAXBContext
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|,
name|cTypes
argument_list|)
expr_stmt|;
block|}
DECL|method|getContext (Class<?> objectType)
specifier|public
name|JAXBContext
name|getContext
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|objectType
parameter_list|)
block|{
return|return
operator|(
name|types
operator|.
name|contains
argument_list|(
name|objectType
argument_list|)
operator|)
condition|?
name|context
else|:
literal|null
return|;
block|}
block|}
end_class

begin_comment
comment|/*implements ContextResolver<JAXBContext> {      private final JAXBContext context;      public JAXBContextResolver() throws Exception {         Map<String, Object> props = new HashMap<String, Object>();         props.put(JSONJAXBContext.JAXB_CONTEXT_FACTORY, Boolean.TRUE);         //props.put(JSONJAXBContext.JSON_NOTATION, "MAPPED"); /*         props.put(JSONJAXBContext.JSON_ROOT_UNWRAPPING, Boolean.TRUE);         props.put(JSONJAXBContext.JSON_NON_STRINGS, "[\"number\"]"); */
end_comment

begin_comment
comment|/*this.context = new JSONJAXBContext(getJaxbClasses(), props);     }      protected Class[] getJaxbClasses() {         return new Class[]{RoutesType.class, RouteType.class,                            Camel.class, Endpoints.class, EndpointLink.class};     }      public JAXBContext getContext(Class<?> objectType) {         String name = objectType.getPackage().getName();         if (name.startsWith("org.apache.camel.model") || name.startsWith("org.apache.camel.rest.model")) {             return context;         }         return null;     } */
end_comment

end_unit

