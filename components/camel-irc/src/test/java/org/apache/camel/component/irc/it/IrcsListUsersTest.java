begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.irc.it
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|irc
operator|.
name|it
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|EndpointInject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RoutesBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|irc
operator|.
name|IrcConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Integration test for the {@link IrcConfiguration#isNamesOnJoin()} option.  * Joins a channel and asserts that the username of the current test user is  * listed for the channel.  */
end_comment

begin_class
DECL|class|IrcsListUsersTest
specifier|public
class|class
name|IrcsListUsersTest
extends|extends
name|IrcIntegrationTestSupport
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|IrcsListUsersTest
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/** message code for a reply to a<code>NAMES</code> command. */
DECL|field|IRC_RPL_NAMREPLY
specifier|private
specifier|static
specifier|final
name|String
name|IRC_RPL_NAMREPLY
init|=
literal|"353"
decl_stmt|;
comment|/** irc component uri. configured by properties */
DECL|field|PRODUCER_URI
specifier|private
specifier|static
specifier|final
name|String
name|PRODUCER_URI
init|=
literal|"ircs:{{camelFrom}}@{{server}}/{{channel1}}"
decl_stmt|;
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RoutesBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Creating new test route"
argument_list|)
expr_stmt|;
name|from
argument_list|(
name|PRODUCER_URI
operator|+
literal|"?namesOnJoin=true&onReply=true"
argument_list|)
operator|.
name|choice
argument_list|()
operator|.
name|when
argument_list|(
name|header
argument_list|(
literal|"irc.messageType"
argument_list|)
operator|.
name|isEqualToIgnoreCase
argument_list|(
literal|"REPLY"
argument_list|)
argument_list|)
operator|.
name|filter
argument_list|(
name|header
argument_list|(
literal|"irc.num"
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|IRC_RPL_NAMREPLY
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:result"
argument_list|)
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
return|;
block|}
annotation|@
name|Test
DECL|method|test ()
specifier|public
name|void
name|test
parameter_list|()
throws|throws
name|Exception
block|{
name|resultEndpoint
operator|.
name|expectedMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|resultEndpoint
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
name|String
name|body
init|=
name|resultEndpoint
operator|.
name|getExchanges
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Received usernames: [{}]"
argument_list|,
name|body
argument_list|)
expr_stmt|;
name|String
name|username
init|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"camelFrom"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"userlist does not contain test user"
argument_list|,
name|body
operator|.
name|contains
argument_list|(
name|username
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

