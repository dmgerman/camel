begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.irc.it
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|irc
operator|.
name|it
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|EndpointInject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_class
DECL|class|IrcIntegrationTestSupport
specifier|public
class|class
name|IrcIntegrationTestSupport
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|EndpointInject
argument_list|(
name|uri
operator|=
literal|"mock:result"
argument_list|)
DECL|field|resultEndpoint
specifier|protected
name|MockEndpoint
name|resultEndpoint
decl_stmt|;
DECL|field|properties
specifier|protected
name|Properties
name|properties
decl_stmt|;
annotation|@
name|Before
DECL|method|doBefore ()
specifier|public
name|void
name|doBefore
parameter_list|()
throws|throws
name|IOException
block|{
name|properties
operator|=
name|loadProperties
argument_list|()
expr_stmt|;
name|resetMock
argument_list|(
name|resultEndpoint
argument_list|)
expr_stmt|;
block|}
DECL|method|resetMock (MockEndpoint mock)
specifier|protected
name|void
name|resetMock
parameter_list|(
name|MockEndpoint
name|mock
parameter_list|)
block|{
name|mock
operator|.
name|reset
argument_list|()
expr_stmt|;
name|mock
operator|.
name|setResultWaitTime
argument_list|(
name|TimeUnit
operator|.
name|MINUTES
operator|.
name|toMillis
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|loadProperties ()
specifier|private
name|Properties
name|loadProperties
parameter_list|()
throws|throws
name|IOException
block|{
name|Properties
name|p
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|p
operator|.
name|load
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/it-tests.properties"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|p
return|;
block|}
annotation|@
name|Override
DECL|method|useOverridePropertiesWithPropertiesComponent ()
specifier|protected
name|Properties
name|useOverridePropertiesWithPropertiesComponent
parameter_list|()
block|{
try|try
block|{
return|return
name|loadProperties
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Can't load configuration properties"
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
DECL|method|sendUri ()
specifier|protected
name|String
name|sendUri
parameter_list|()
block|{
return|return
literal|"ircs://{{camelTo}}@{{server}}?channels={{channel1}}"
return|;
block|}
DECL|method|fromUri ()
specifier|protected
name|String
name|fromUri
parameter_list|()
block|{
return|return
literal|"ircs://{{camelFrom}}@{{server}}?&channels={{channel1}}"
return|;
block|}
block|}
end_class

end_unit

