begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.irc
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|irc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|URISupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|IrcConfigurationTest
specifier|public
class|class
name|IrcConfigurationTest
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Test
DECL|method|testInvalidUriConversion ()
specifier|public
name|void
name|testInvalidUriConversion
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Note: valid URIs won't throw on new URI(endpoint.getEndpointUri())
name|String
name|deprecate
decl_stmt|;
name|String
name|sanitized
decl_stmt|;
name|Endpoint
name|endpoint
decl_stmt|;
name|IrcComponent
name|component
init|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"irc"
argument_list|,
name|IrcComponent
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Test conversion of the URI path to @channel parameter (drop the '#')
name|deprecate
operator|=
literal|"irc://camelbot@irc.freenode.net:1234/#camel"
expr_stmt|;
name|sanitized
operator|=
literal|"irc://camelbot@irc.freenode.net:1234?channel=camel"
expr_stmt|;
name|endpoint
operator|=
name|component
operator|.
name|createEndpoint
argument_list|(
name|deprecate
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|sanitized
argument_list|,
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
operator|new
name|URI
argument_list|(
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test conversion of the URI path to @channel parameter (encode the double '##')
name|deprecate
operator|=
literal|"irc://camelbot@irc.freenode.net/##camel"
expr_stmt|;
name|sanitized
operator|=
literal|"irc://camelbot@irc.freenode.net?channel=%23%23camel"
expr_stmt|;
name|endpoint
operator|=
name|component
operator|.
name|createEndpoint
argument_list|(
name|deprecate
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|sanitized
argument_list|,
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
operator|new
name|URI
argument_list|(
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test drop path and both path and @channels are specified
name|deprecate
operator|=
literal|"irc://camelbot@irc.freenode.net/#karaf?channels=#camel,#cxf"
expr_stmt|;
name|sanitized
operator|=
literal|"irc://camelbot@irc.freenode.net?channel=camel&channel=cxf"
expr_stmt|;
name|endpoint
operator|=
name|component
operator|.
name|createEndpoint
argument_list|(
name|deprecate
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|sanitized
argument_list|,
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
operator|new
name|URI
argument_list|(
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test multiple channels, no keys
name|deprecate
operator|=
literal|"irc://camelbot@irc.freenode.net?channels=#camel,#cxf"
expr_stmt|;
name|sanitized
operator|=
literal|"irc://camelbot@irc.freenode.net?channel=camel&channel=cxf"
expr_stmt|;
name|endpoint
operator|=
name|component
operator|.
name|createEndpoint
argument_list|(
name|deprecate
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|sanitized
argument_list|,
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
operator|new
name|URI
argument_list|(
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test multiple channels, with keys
name|deprecate
operator|=
literal|"irc://camelbot@irc.freenode.net?channels=#camel,#cxf&keys=foo,bar"
expr_stmt|;
name|sanitized
operator|=
literal|"irc://camelbot@irc.freenode.net?channel=camel!foo&channel=cxf!bar"
expr_stmt|;
name|endpoint
operator|=
name|component
operator|.
name|createEndpoint
argument_list|(
name|deprecate
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|sanitized
argument_list|,
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
operator|new
name|URI
argument_list|(
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test multiple channels, with keys (last key is empty)
name|deprecate
operator|=
literal|"irc://camelbot@irc.freenode.net?channels=#camel,#cxf&keys=foo,"
expr_stmt|;
name|sanitized
operator|=
literal|"irc://camelbot@irc.freenode.net?channel=camel!foo&channel=cxf"
expr_stmt|;
name|endpoint
operator|=
name|component
operator|.
name|createEndpoint
argument_list|(
name|deprecate
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|sanitized
argument_list|,
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
operator|new
name|URI
argument_list|(
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test multiple channels, deprecated @username
name|deprecate
operator|=
literal|"irc://irc.freenode.net?keys=,foo&channels=#camel,#cxf&username=camelbot"
expr_stmt|;
name|sanitized
operator|=
literal|"irc://camelbot@irc.freenode.net?channel=camel&channel=cxf!foo"
expr_stmt|;
name|endpoint
operator|=
name|component
operator|.
name|createEndpoint
argument_list|(
name|deprecate
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|sanitized
argument_list|,
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
operator|new
name|URI
argument_list|(
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test multiple channels, deprecated @username and @password
name|deprecate
operator|=
literal|"irc://irc.freenode.net?keys=,foo&channels=#camel,#cxf&username=camelbot&password=secret"
expr_stmt|;
name|sanitized
operator|=
literal|"irc://camelbot:secret@irc.freenode.net?channel=camel&channel=cxf!foo"
expr_stmt|;
name|endpoint
operator|=
name|component
operator|.
name|createEndpoint
argument_list|(
name|deprecate
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|sanitized
argument_list|,
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
operator|new
name|URI
argument_list|(
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test multiple channels, drop @nickname same as @username
name|deprecate
operator|=
literal|"irc://irc.freenode.net?channels=#camel,#cxf&nickname=camelbot"
expr_stmt|;
name|sanitized
operator|=
literal|"irc://camelbot@irc.freenode.net?channel=camel&channel=cxf"
expr_stmt|;
name|endpoint
operator|=
name|component
operator|.
name|createEndpoint
argument_list|(
name|deprecate
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|sanitized
argument_list|,
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
operator|new
name|URI
argument_list|(
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test with encoding of @realname
name|deprecate
operator|=
literal|"irc://user@irc.freenode.net?keys=foo,&channels=#camel,#cxf&realname=Camel Bot&username=user&nickname=camelbot"
expr_stmt|;
name|sanitized
operator|=
literal|"irc://user@irc.freenode.net?realname=Camel%20Bot&nickname=camelbot&channel=camel!foo&channel=cxf"
expr_stmt|;
name|endpoint
operator|=
name|component
operator|.
name|createEndpoint
argument_list|(
name|deprecate
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|sanitized
argument_list|,
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
operator|new
name|URI
argument_list|(
name|endpoint
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConfigureFormat1 ()
specifier|public
name|void
name|testConfigureFormat1
parameter_list|()
throws|throws
name|Exception
block|{
name|IrcComponent
name|component
init|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"irc"
argument_list|,
name|IrcComponent
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// irc:nick@host[:port]/#room[?options]
name|IrcEndpoint
name|endpoint
init|=
operator|(
name|IrcEndpoint
operator|)
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"irc://camelbot@irc.freenode.net/#camel"
argument_list|)
decl_stmt|;
name|IrcConfiguration
name|conf
init|=
name|endpoint
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"camelbot"
argument_list|,
name|conf
operator|.
name|getNickname
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"irc.freenode.net"
argument_list|,
name|conf
operator|.
name|getHostname
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|IrcChannel
argument_list|>
name|channels
init|=
name|conf
operator|.
name|getChannels
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|channels
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"#camel"
argument_list|,
name|channels
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConfigureFormat2 ()
specifier|public
name|void
name|testConfigureFormat2
parameter_list|()
throws|throws
name|Exception
block|{
name|IrcComponent
name|component
init|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"irc"
argument_list|,
name|IrcComponent
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// irc:nick@host[:port]/#room[?options]
name|IrcEndpoint
name|endpoint
init|=
operator|(
name|IrcEndpoint
operator|)
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"irc://camelbot@irc.freenode.net?channels=#camel"
argument_list|)
decl_stmt|;
name|IrcConfiguration
name|conf
init|=
name|endpoint
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"camelbot"
argument_list|,
name|conf
operator|.
name|getNickname
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"irc.freenode.net"
argument_list|,
name|conf
operator|.
name|getHostname
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|IrcChannel
argument_list|>
name|channels
init|=
name|conf
operator|.
name|getChannels
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|channels
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"#camel"
argument_list|,
name|channels
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConfigureFormat3 ()
specifier|public
name|void
name|testConfigureFormat3
parameter_list|()
throws|throws
name|Exception
block|{
name|IrcComponent
name|component
init|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"irc"
argument_list|,
name|IrcComponent
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// irc:nick@host[:port]/#room[?options]
name|IrcEndpoint
name|endpoint
init|=
operator|(
name|IrcEndpoint
operator|)
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"irc://irc.freenode.net?channels=#camel&nickname=camelbot"
argument_list|)
decl_stmt|;
name|IrcConfiguration
name|conf
init|=
name|endpoint
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"camelbot"
argument_list|,
name|conf
operator|.
name|getNickname
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"irc.freenode.net"
argument_list|,
name|conf
operator|.
name|getHostname
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|IrcChannel
argument_list|>
name|channels
init|=
name|conf
operator|.
name|getChannels
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|channels
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"#camel"
argument_list|,
name|channels
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConfigureFormat4 ()
specifier|public
name|void
name|testConfigureFormat4
parameter_list|()
throws|throws
name|Exception
block|{
name|IrcComponent
name|component
init|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"irc"
argument_list|,
name|IrcComponent
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// irc:nick@host[:port]/#room[?options]
name|IrcEndpoint
name|endpoint
init|=
operator|(
name|IrcEndpoint
operator|)
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"irc://irc.freenode.net?keys=,foo&channels=%23camel,%23smx&nickname=camelbot"
argument_list|)
decl_stmt|;
name|IrcConfiguration
name|conf
init|=
name|endpoint
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"camelbot"
argument_list|,
name|conf
operator|.
name|getNickname
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"irc.freenode.net"
argument_list|,
name|conf
operator|.
name|getHostname
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|IrcChannel
argument_list|>
name|channels
init|=
name|conf
operator|.
name|getChannels
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|channels
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|conf
operator|.
name|findChannel
argument_list|(
literal|"#camel"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|conf
operator|.
name|findChannel
argument_list|(
literal|"#smx"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|conf
operator|.
name|findChannel
argument_list|(
literal|"#smx"
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConfigureFormat5 ()
specifier|public
name|void
name|testConfigureFormat5
parameter_list|()
throws|throws
name|Exception
block|{
name|IrcComponent
name|component
init|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"irc"
argument_list|,
name|IrcComponent
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// irc:nick@host[:port]/#room[?options]
name|IrcEndpoint
name|endpoint
init|=
operator|(
name|IrcEndpoint
operator|)
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"irc://badnick@irc.freenode.net?keys=foo,&channels=#camel,#smx&realname=Camel+Bot&nickname=camelbot"
argument_list|)
decl_stmt|;
name|IrcConfiguration
name|conf
init|=
name|endpoint
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"camelbot"
argument_list|,
name|conf
operator|.
name|getNickname
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"irc.freenode.net"
argument_list|,
name|conf
operator|.
name|getHostname
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|IrcChannel
argument_list|>
name|channels
init|=
name|conf
operator|.
name|getChannels
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|channels
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|conf
operator|.
name|findChannel
argument_list|(
literal|"#camel"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|conf
operator|.
name|findChannel
argument_list|(
literal|"#camel"
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Camel Bot"
argument_list|,
name|conf
operator|.
name|getRealname
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConfigureFormat6 ()
specifier|public
name|void
name|testConfigureFormat6
parameter_list|()
throws|throws
name|Exception
block|{
name|IrcComponent
name|component
init|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"irc"
argument_list|,
name|IrcComponent
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// irc:nick@host[:port]/#room[?options]
name|IrcEndpoint
name|endpoint
init|=
operator|(
name|IrcEndpoint
operator|)
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"irc://badnick@irc.freenode.net?keys=foo,bar&channels=#camel,#smx&realname=Camel+Bot&nickname=camelbot"
argument_list|)
decl_stmt|;
name|IrcConfiguration
name|conf
init|=
name|endpoint
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"camelbot"
argument_list|,
name|conf
operator|.
name|getNickname
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"irc.freenode.net"
argument_list|,
name|conf
operator|.
name|getHostname
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|IrcChannel
argument_list|>
name|channels
init|=
name|conf
operator|.
name|getChannels
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|channels
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|conf
operator|.
name|findChannel
argument_list|(
literal|"#camel"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|conf
operator|.
name|findChannel
argument_list|(
literal|"#smx"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|conf
operator|.
name|findChannel
argument_list|(
literal|"#camel"
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bar"
argument_list|,
name|conf
operator|.
name|findChannel
argument_list|(
literal|"#smx"
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Camel Bot"
argument_list|,
name|conf
operator|.
name|getRealname
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

