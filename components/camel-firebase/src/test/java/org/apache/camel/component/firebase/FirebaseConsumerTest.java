begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.component.firebase
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|firebase
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|firebase
operator|.
name|database
operator|.
name|FirebaseDatabase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|firebase
operator|.
name|provider
operator|.
name|ConfigurationProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLDecoder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLEncoder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|locks
operator|.
name|Condition
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|locks
operator|.
name|ReentrantLock
import|;
end_import

begin_comment
comment|/**  * Writes a dummy message and then checks, if the consumer receives at least one message.  */
end_comment

begin_class
DECL|class|FirebaseConsumerTest
specifier|public
class|class
name|FirebaseConsumerTest
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Test
DECL|method|whenFirebaseListener_ShouldReceiveMessages ()
specifier|public
name|void
name|whenFirebaseListener_ShouldReceiveMessages
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMinimumMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|databaseUrl
init|=
literal|"gil-sample-app.firebaseio.com"
decl_stmt|;
specifier|final
name|String
name|originalRootReference
init|=
literal|"server/saving-data"
decl_stmt|;
name|String
name|serviceAccountFile
init|=
name|ConfigurationProvider
operator|.
name|createFirebaseConfigLink
argument_list|()
decl_stmt|;
name|String
name|rootReference
init|=
name|URLEncoder
operator|.
name|encode
argument_list|(
name|originalRootReference
argument_list|,
literal|"UTF-8"
argument_list|)
decl_stmt|;
name|insertDummyData
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"https://%s"
argument_list|,
name|databaseUrl
argument_list|)
argument_list|,
name|originalRootReference
argument_list|,
name|serviceAccountFile
argument_list|)
expr_stmt|;
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
try|try
block|{
name|from
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"firebase://"
operator|+
name|databaseUrl
operator|+
literal|"?rootReference=%s&serviceAccountFile=%s"
argument_list|,
name|rootReference
argument_list|,
name|serviceAccountFile
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"log:firebasetest?level=WARN"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:result"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|;
block|}
DECL|field|lock
specifier|private
specifier|final
name|ReentrantLock
name|lock
init|=
operator|new
name|ReentrantLock
argument_list|()
decl_stmt|;
DECL|field|wake
specifier|private
specifier|final
name|Condition
name|wake
init|=
name|lock
operator|.
name|newCondition
argument_list|()
decl_stmt|;
DECL|method|insertDummyData (String databaseUrl, String originalRootReference, String serviceAccountFile)
specifier|private
name|void
name|insertDummyData
parameter_list|(
name|String
name|databaseUrl
parameter_list|,
name|String
name|originalRootReference
parameter_list|,
name|String
name|serviceAccountFile
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|FirebaseConfig
name|config
init|=
operator|new
name|FirebaseConfig
operator|.
name|Builder
argument_list|(
name|databaseUrl
argument_list|,
name|originalRootReference
argument_list|,
name|URLDecoder
operator|.
name|decode
argument_list|(
name|serviceAccountFile
argument_list|,
literal|"UTF-8"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|config
operator|.
name|init
argument_list|()
expr_stmt|;
name|FirebaseDatabase
operator|.
name|getInstance
argument_list|(
name|config
operator|.
name|getFirebaseApp
argument_list|()
argument_list|)
operator|.
name|getReference
argument_list|(
name|config
operator|.
name|getRootReference
argument_list|()
argument_list|)
operator|.
name|child
argument_list|(
literal|"dummy"
argument_list|)
operator|.
name|setValue
argument_list|(
literal|"test"
argument_list|,
parameter_list|(
name|databaseError
parameter_list|,
name|databaseReference
parameter_list|)
lambda|->
block|{
try|try
block|{
name|lock
operator|.
name|lock
argument_list|()
expr_stmt|;
name|wake
operator|.
name|signal
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|lock
operator|.
name|unlock
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
try|try
block|{
name|lock
operator|.
name|lock
argument_list|()
expr_stmt|;
name|wake
operator|.
name|await
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|lock
operator|.
name|unlock
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

