begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.firebase
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|firebase
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|locks
operator|.
name|Condition
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|locks
operator|.
name|ReentrantLock
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|TestCase
operator|.
name|fail
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|firebase
operator|.
name|database
operator|.
name|DatabaseReference
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|firebase
operator|.
name|database
operator|.
name|FirebaseDatabase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|firebase
operator|.
name|data
operator|.
name|FirebaseMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|firebase
operator|.
name|data
operator|.
name|Operation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|firebase
operator|.
name|provider
operator|.
name|ConfigurationProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|firebase
operator|.
name|provider
operator|.
name|SampleInputProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertThat
import|;
end_import

begin_comment
comment|/**  * Starts a route which listens to the remove event in Firebase. It then writes and deletes an entry in Firebase and  * asserts, if the entry was deleted or not.  */
end_comment

begin_class
DECL|class|FirebaseConsumerDeleteTest
specifier|public
class|class
name|FirebaseConsumerDeleteTest
block|{
DECL|field|reentrantLock
specifier|private
specifier|final
name|ReentrantLock
name|reentrantLock
init|=
operator|new
name|ReentrantLock
argument_list|()
decl_stmt|;
DECL|field|wake
specifier|private
specifier|final
name|Condition
name|wake
init|=
name|reentrantLock
operator|.
name|newCondition
argument_list|()
decl_stmt|;
annotation|@
name|Test
DECL|method|whenDeleteDeleteMessageShouldBeIntercepted ()
specifier|public
name|void
name|whenDeleteDeleteMessageShouldBeIntercepted
parameter_list|()
throws|throws
name|Exception
block|{
name|CamelContext
name|context
init|=
operator|new
name|DefaultCamelContext
argument_list|()
decl_stmt|;
name|boolean
index|[]
name|deleteMessageReceived
init|=
block|{
literal|false
block|}
decl_stmt|;
name|FirebaseConfig
name|firebaseConfig
init|=
name|ConfigurationProvider
operator|.
name|createDemoConfig
argument_list|()
decl_stmt|;
name|createAndDeleteContent
argument_list|(
name|firebaseConfig
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|setupRoute
argument_list|(
name|context
argument_list|,
name|deleteMessageReceived
argument_list|)
expr_stmt|;
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
try|try
block|{
name|reentrantLock
operator|.
name|lock
argument_list|()
expr_stmt|;
name|wake
operator|.
name|await
argument_list|(
literal|30
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|reentrantLock
operator|.
name|unlock
argument_list|()
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|deleteMessageReceived
index|[
literal|0
index|]
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|context
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|method|createAndDeleteContent (FirebaseConfig firebaseConfig, boolean delete)
specifier|private
name|void
name|createAndDeleteContent
parameter_list|(
name|FirebaseConfig
name|firebaseConfig
parameter_list|,
name|boolean
name|delete
parameter_list|)
block|{
specifier|final
name|DatabaseReference
name|rootReference
init|=
name|FirebaseDatabase
operator|.
name|getInstance
argument_list|(
name|firebaseConfig
operator|.
name|getFirebaseApp
argument_list|()
argument_list|)
operator|.
name|getReference
argument_list|(
name|ConfigurationProvider
operator|.
name|createRootReference
argument_list|()
argument_list|)
operator|.
name|child
argument_list|(
name|SampleInputProvider
operator|.
name|createDeleteKey
argument_list|()
argument_list|)
decl_stmt|;
name|rootReference
operator|.
name|setValue
argument_list|(
literal|"AETHELWULF 839-856"
argument_list|,
parameter_list|(
name|databaseError
parameter_list|,
name|databaseReference
parameter_list|)
lambda|->
block|{
if|if
condition|(
name|delete
condition|)
block|{
name|databaseReference
operator|.
name|removeValue
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|setupRoute (CamelContext context, final boolean[] deleteMessageReceived)
specifier|private
name|void
name|setupRoute
parameter_list|(
name|CamelContext
name|context
parameter_list|,
specifier|final
name|boolean
index|[]
name|deleteMessageReceived
parameter_list|)
throws|throws
name|Exception
block|{
name|boolean
name|deleteFired
index|[]
init|=
block|{
literal|false
block|}
decl_stmt|;
name|context
operator|.
name|addRoutes
argument_list|(
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
try|try
block|{
name|from
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"firebase://%s?rootReference=%s&serviceAccountFile=%s"
argument_list|,
name|ConfigurationProvider
operator|.
name|createDatabaseUrl
argument_list|()
argument_list|,
name|ConfigurationProvider
operator|.
name|createRootReference
argument_list|()
argument_list|,
name|ConfigurationProvider
operator|.
name|createFirebaseConfigLink
argument_list|()
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"log:firebasetest?level=WARN"
argument_list|)
operator|.
name|process
argument_list|(
name|exchange
lambda|->
block|{
name|FirebaseMessage
name|firebaseMessage
init|=
operator|(
name|FirebaseMessage
operator|)
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
if|if
condition|(
name|firebaseMessage
operator|.
name|getOperation
argument_list|()
operator|==
name|Operation
operator|.
name|CHILD_REMOVED
condition|)
block|{
name|deleteMessageReceived
index|[
literal|0
index|]
operator|=
literal|true
expr_stmt|;
try|try
block|{
name|reentrantLock
operator|.
name|lock
argument_list|()
expr_stmt|;
name|wake
operator|.
name|signal
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|reentrantLock
operator|.
name|unlock
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|deleteFired
index|[
literal|0
index|]
condition|)
block|{
name|deleteFired
index|[
literal|0
index|]
operator|=
literal|true
expr_stmt|;
name|FirebaseConfig
name|firebaseConfig
init|=
name|ConfigurationProvider
operator|.
name|createDemoConfig
argument_list|()
decl_stmt|;
name|createAndDeleteContent
argument_list|(
name|firebaseConfig
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

