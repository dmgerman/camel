begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.gson
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|gson
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStreamWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|ExclusionStrategy
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|FieldNamingPolicy
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|FieldNamingStrategy
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|Gson
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|GsonBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|LongSerializationPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|DataFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|DataFormatName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|ServiceSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|IOHelper
import|;
end_import

begin_comment
comment|/**  * A<a href="http://camel.apache.org/data-format.html">data format</a> ({@link DataFormat})  * using<a href="http://code.google.com/p/google-gson/">Gson</a> to marshal to and from JSON.  */
end_comment

begin_class
DECL|class|GsonDataFormat
specifier|public
class|class
name|GsonDataFormat
extends|extends
name|ServiceSupport
implements|implements
name|DataFormat
implements|,
name|DataFormatName
block|{
DECL|field|gson
specifier|private
name|Gson
name|gson
decl_stmt|;
DECL|field|unmarshalType
specifier|private
name|Class
argument_list|<
name|?
argument_list|>
name|unmarshalType
decl_stmt|;
DECL|field|unmarshalGenericType
specifier|private
name|Type
name|unmarshalGenericType
decl_stmt|;
DECL|field|exclusionStrategies
specifier|private
name|List
argument_list|<
name|ExclusionStrategy
argument_list|>
name|exclusionStrategies
decl_stmt|;
DECL|field|longSerializationPolicy
specifier|private
name|LongSerializationPolicy
name|longSerializationPolicy
decl_stmt|;
DECL|field|fieldNamingPolicy
specifier|private
name|FieldNamingPolicy
name|fieldNamingPolicy
decl_stmt|;
DECL|field|fieldNamingStrategy
specifier|private
name|FieldNamingStrategy
name|fieldNamingStrategy
decl_stmt|;
DECL|field|serializeNulls
specifier|private
name|boolean
name|serializeNulls
decl_stmt|;
DECL|field|prettyPrint
specifier|private
name|boolean
name|prettyPrint
decl_stmt|;
DECL|field|dateFormatPattern
specifier|private
name|String
name|dateFormatPattern
decl_stmt|;
DECL|field|contentTypeHeader
specifier|private
name|boolean
name|contentTypeHeader
init|=
literal|true
decl_stmt|;
DECL|method|GsonDataFormat ()
specifier|public
name|GsonDataFormat
parameter_list|()
block|{
name|this
argument_list|(
name|Object
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
comment|/**      * Use the default Gson {@link Gson} and with a custom      * unmarshal type      *      * @param unmarshalType the custom unmarshal type      */
DECL|method|GsonDataFormat (Class<?> unmarshalType)
specifier|public
name|GsonDataFormat
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|unmarshalType
parameter_list|)
block|{
name|this
argument_list|(
literal|null
argument_list|,
name|unmarshalType
argument_list|)
expr_stmt|;
block|}
comment|/**      * Use the default Gson {@link Gson} and with a custom      * unmarshal type and {@link ExclusionStrategy}      *      * @param unmarshalType the custom unmarshal type      * @param exclusionStrategies one or more custom ExclusionStrategy implementations      * @deprecated use the setter instead      */
annotation|@
name|Deprecated
DECL|method|GsonDataFormat (Class<?> unmarshalType, ExclusionStrategy... exclusionStrategies)
specifier|public
name|GsonDataFormat
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|unmarshalType
parameter_list|,
name|ExclusionStrategy
modifier|...
name|exclusionStrategies
parameter_list|)
block|{
name|this
argument_list|(
literal|null
argument_list|,
name|unmarshalType
argument_list|)
expr_stmt|;
name|setExclusionStrategies
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|exclusionStrategies
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Use a custom Gson mapper and and unmarshal type      *      * @param gson          the custom mapper      * @param unmarshalType the custom unmarshal type      */
DECL|method|GsonDataFormat (Gson gson, Class<?> unmarshalType)
specifier|public
name|GsonDataFormat
parameter_list|(
name|Gson
name|gson
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|unmarshalType
parameter_list|)
block|{
name|this
operator|.
name|gson
operator|=
name|gson
expr_stmt|;
name|this
operator|.
name|unmarshalType
operator|=
name|unmarshalType
expr_stmt|;
block|}
comment|/**      * Use the default Gson {@link Gson} and with a custom      * unmarshal generic type      *      * @param unmarshalGenericType the custom unmarshal generic type      */
DECL|method|GsonDataFormat (Type unmarshalGenericType)
specifier|public
name|GsonDataFormat
parameter_list|(
name|Type
name|unmarshalGenericType
parameter_list|)
block|{
name|this
argument_list|(
literal|null
argument_list|,
name|unmarshalGenericType
argument_list|)
expr_stmt|;
block|}
comment|/**      * Use a custom Gson mapper and and unmarshal token type      *      * @param gson          the custom mapper      * @param unmarshalGenericType the custom unmarshal generic type      */
DECL|method|GsonDataFormat (Gson gson, Type unmarshalGenericType)
specifier|public
name|GsonDataFormat
parameter_list|(
name|Gson
name|gson
parameter_list|,
name|Type
name|unmarshalGenericType
parameter_list|)
block|{
name|this
operator|.
name|gson
operator|=
name|gson
expr_stmt|;
name|this
operator|.
name|unmarshalGenericType
operator|=
name|unmarshalGenericType
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getDataFormatName ()
specifier|public
name|String
name|getDataFormatName
parameter_list|()
block|{
return|return
literal|"json-gson"
return|;
block|}
annotation|@
name|Override
DECL|method|marshal (final Exchange exchange, final Object graph, final OutputStream stream)
specifier|public
name|void
name|marshal
parameter_list|(
specifier|final
name|Exchange
name|exchange
parameter_list|,
specifier|final
name|Object
name|graph
parameter_list|,
specifier|final
name|OutputStream
name|stream
parameter_list|)
throws|throws
name|Exception
block|{
try|try
init|(
specifier|final
name|OutputStreamWriter
name|osw
init|=
operator|new
name|OutputStreamWriter
argument_list|(
name|stream
argument_list|,
name|IOHelper
operator|.
name|getCharsetName
argument_list|(
name|exchange
argument_list|)
argument_list|)
init|;
name|final
name|BufferedWriter
name|writer
operator|=
name|IOHelper
operator|.
name|buffered
argument_list|(
name|osw
argument_list|)
init|)
block|{
name|gson
operator|.
name|toJson
argument_list|(
name|graph
argument_list|,
name|writer
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|contentTypeHeader
condition|)
block|{
if|if
condition|(
name|exchange
operator|.
name|hasOut
argument_list|()
condition|)
block|{
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setHeader
argument_list|(
name|Exchange
operator|.
name|CONTENT_TYPE
argument_list|,
literal|"application/json"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|Exchange
operator|.
name|CONTENT_TYPE
argument_list|,
literal|"application/json"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
DECL|method|unmarshal (final Exchange exchange, final InputStream stream)
specifier|public
name|Object
name|unmarshal
parameter_list|(
specifier|final
name|Exchange
name|exchange
parameter_list|,
specifier|final
name|InputStream
name|stream
parameter_list|)
throws|throws
name|Exception
block|{
try|try
init|(
specifier|final
name|InputStreamReader
name|isr
init|=
operator|new
name|InputStreamReader
argument_list|(
name|stream
argument_list|,
name|IOHelper
operator|.
name|getCharsetName
argument_list|(
name|exchange
argument_list|)
argument_list|)
init|;
name|final
name|BufferedReader
name|reader
operator|=
name|IOHelper
operator|.
name|buffered
argument_list|(
name|isr
argument_list|)
init|)
block|{
if|if
condition|(
name|unmarshalGenericType
operator|==
literal|null
condition|)
block|{
return|return
name|gson
operator|.
name|fromJson
argument_list|(
name|reader
argument_list|,
name|unmarshalType
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|gson
operator|.
name|fromJson
argument_list|(
name|reader
argument_list|,
name|unmarshalGenericType
argument_list|)
return|;
block|}
block|}
block|}
annotation|@
name|Override
DECL|method|doStart ()
specifier|protected
name|void
name|doStart
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|gson
operator|==
literal|null
condition|)
block|{
name|GsonBuilder
name|builder
init|=
operator|new
name|GsonBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|exclusionStrategies
operator|!=
literal|null
operator|&&
operator|!
name|exclusionStrategies
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|ExclusionStrategy
index|[]
name|strategies
init|=
name|exclusionStrategies
operator|.
name|toArray
argument_list|(
operator|new
name|ExclusionStrategy
index|[
name|exclusionStrategies
operator|.
name|size
argument_list|()
index|]
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setExclusionStrategies
argument_list|(
name|strategies
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|longSerializationPolicy
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setLongSerializationPolicy
argument_list|(
name|longSerializationPolicy
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|fieldNamingPolicy
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setFieldNamingPolicy
argument_list|(
name|fieldNamingPolicy
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|fieldNamingStrategy
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setFieldNamingStrategy
argument_list|(
name|fieldNamingStrategy
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|serializeNulls
condition|)
block|{
name|builder
operator|.
name|serializeNulls
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|prettyPrint
condition|)
block|{
name|builder
operator|.
name|setPrettyPrinting
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|dateFormatPattern
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setDateFormat
argument_list|(
name|dateFormatPattern
argument_list|)
expr_stmt|;
block|}
name|gson
operator|=
name|builder
operator|.
name|create
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|doStop ()
specifier|protected
name|void
name|doStop
parameter_list|()
throws|throws
name|Exception
block|{
comment|// noop
block|}
comment|// Properties
comment|// -------------------------------------------------------------------------
DECL|method|getUnmarshalType ()
specifier|public
name|Class
argument_list|<
name|?
argument_list|>
name|getUnmarshalType
parameter_list|()
block|{
return|return
name|this
operator|.
name|unmarshalType
return|;
block|}
DECL|method|setUnmarshalType (Class<?> unmarshalType)
specifier|public
name|void
name|setUnmarshalType
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|unmarshalType
parameter_list|)
block|{
name|this
operator|.
name|unmarshalType
operator|=
name|unmarshalType
expr_stmt|;
block|}
DECL|method|getUnmarshalGenericType ()
specifier|public
name|Type
name|getUnmarshalGenericType
parameter_list|()
block|{
return|return
name|this
operator|.
name|unmarshalType
return|;
block|}
DECL|method|setUnmarshalGenericType (Type unmarshalGenericType)
specifier|public
name|void
name|setUnmarshalGenericType
parameter_list|(
name|Type
name|unmarshalGenericType
parameter_list|)
block|{
name|this
operator|.
name|unmarshalGenericType
operator|=
name|unmarshalGenericType
expr_stmt|;
block|}
DECL|method|getExclusionStrategies ()
specifier|public
name|List
argument_list|<
name|ExclusionStrategy
argument_list|>
name|getExclusionStrategies
parameter_list|()
block|{
return|return
name|exclusionStrategies
return|;
block|}
DECL|method|setExclusionStrategies (List<ExclusionStrategy> exclusionStrategies)
specifier|public
name|void
name|setExclusionStrategies
parameter_list|(
name|List
argument_list|<
name|ExclusionStrategy
argument_list|>
name|exclusionStrategies
parameter_list|)
block|{
name|this
operator|.
name|exclusionStrategies
operator|=
name|exclusionStrategies
expr_stmt|;
block|}
DECL|method|getLongSerializationPolicy ()
specifier|public
name|LongSerializationPolicy
name|getLongSerializationPolicy
parameter_list|()
block|{
return|return
name|longSerializationPolicy
return|;
block|}
DECL|method|setLongSerializationPolicy (LongSerializationPolicy longSerializationPolicy)
specifier|public
name|void
name|setLongSerializationPolicy
parameter_list|(
name|LongSerializationPolicy
name|longSerializationPolicy
parameter_list|)
block|{
name|this
operator|.
name|longSerializationPolicy
operator|=
name|longSerializationPolicy
expr_stmt|;
block|}
DECL|method|getFieldNamingPolicy ()
specifier|public
name|FieldNamingPolicy
name|getFieldNamingPolicy
parameter_list|()
block|{
return|return
name|fieldNamingPolicy
return|;
block|}
DECL|method|setFieldNamingPolicy (FieldNamingPolicy fieldNamingPolicy)
specifier|public
name|void
name|setFieldNamingPolicy
parameter_list|(
name|FieldNamingPolicy
name|fieldNamingPolicy
parameter_list|)
block|{
name|this
operator|.
name|fieldNamingPolicy
operator|=
name|fieldNamingPolicy
expr_stmt|;
block|}
DECL|method|getFieldNamingStrategy ()
specifier|public
name|FieldNamingStrategy
name|getFieldNamingStrategy
parameter_list|()
block|{
return|return
name|fieldNamingStrategy
return|;
block|}
DECL|method|setFieldNamingStrategy (FieldNamingStrategy fieldNamingStrategy)
specifier|public
name|void
name|setFieldNamingStrategy
parameter_list|(
name|FieldNamingStrategy
name|fieldNamingStrategy
parameter_list|)
block|{
name|this
operator|.
name|fieldNamingStrategy
operator|=
name|fieldNamingStrategy
expr_stmt|;
block|}
comment|/**      * @deprecated use {@link #isSerializeNulls()} instead      */
annotation|@
name|Deprecated
DECL|method|getSerializeNulls ()
specifier|public
name|Boolean
name|getSerializeNulls
parameter_list|()
block|{
return|return
name|serializeNulls
return|;
block|}
DECL|method|isSerializeNulls ()
specifier|public
name|boolean
name|isSerializeNulls
parameter_list|()
block|{
return|return
name|serializeNulls
return|;
block|}
comment|/**      * @deprecated use {@link #setSerializeNulls(boolean)} instead      */
annotation|@
name|Deprecated
DECL|method|setSerializeNulls (Boolean serializeNulls)
specifier|public
name|void
name|setSerializeNulls
parameter_list|(
name|Boolean
name|serializeNulls
parameter_list|)
block|{
name|this
operator|.
name|serializeNulls
operator|=
name|serializeNulls
expr_stmt|;
block|}
DECL|method|setSerializeNulls (boolean serializeNulls)
specifier|public
name|void
name|setSerializeNulls
parameter_list|(
name|boolean
name|serializeNulls
parameter_list|)
block|{
name|this
operator|.
name|serializeNulls
operator|=
name|serializeNulls
expr_stmt|;
block|}
comment|/**      * @deprecated use {@link #isPrettyPrint()} instead      */
annotation|@
name|Deprecated
DECL|method|getPrettyPrinting ()
specifier|public
name|Boolean
name|getPrettyPrinting
parameter_list|()
block|{
return|return
name|prettyPrint
return|;
block|}
DECL|method|isPrettyPrint ()
specifier|public
name|boolean
name|isPrettyPrint
parameter_list|()
block|{
return|return
name|prettyPrint
return|;
block|}
comment|/**      * @deprecated use {@link #setPrettyPrint(boolean)} instead      */
annotation|@
name|Deprecated
DECL|method|setPrettyPrinting (Boolean prettyPrinting)
specifier|public
name|void
name|setPrettyPrinting
parameter_list|(
name|Boolean
name|prettyPrinting
parameter_list|)
block|{
name|this
operator|.
name|prettyPrint
operator|=
name|prettyPrinting
expr_stmt|;
block|}
DECL|method|setPrettyPrint (boolean prettyPrint)
specifier|public
name|void
name|setPrettyPrint
parameter_list|(
name|boolean
name|prettyPrint
parameter_list|)
block|{
name|this
operator|.
name|prettyPrint
operator|=
name|prettyPrint
expr_stmt|;
block|}
DECL|method|getDateFormatPattern ()
specifier|public
name|String
name|getDateFormatPattern
parameter_list|()
block|{
return|return
name|dateFormatPattern
return|;
block|}
DECL|method|setDateFormatPattern (String dateFormatPattern)
specifier|public
name|void
name|setDateFormatPattern
parameter_list|(
name|String
name|dateFormatPattern
parameter_list|)
block|{
name|this
operator|.
name|dateFormatPattern
operator|=
name|dateFormatPattern
expr_stmt|;
block|}
DECL|method|isContentTypeHeader ()
specifier|public
name|boolean
name|isContentTypeHeader
parameter_list|()
block|{
return|return
name|contentTypeHeader
return|;
block|}
comment|/**      * If enabled then Gson will set the Content-Type header to<tt>application/json</tt> when marshalling.      */
DECL|method|setContentTypeHeader (boolean contentTypeHeader)
specifier|public
name|void
name|setContentTypeHeader
parameter_list|(
name|boolean
name|contentTypeHeader
parameter_list|)
block|{
name|this
operator|.
name|contentTypeHeader
operator|=
name|contentTypeHeader
expr_stmt|;
block|}
DECL|method|getGson ()
specifier|public
name|Gson
name|getGson
parameter_list|()
block|{
return|return
name|this
operator|.
name|gson
return|;
block|}
block|}
end_class

end_unit

