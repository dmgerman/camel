begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.core.xml
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|core
operator|.
name|xml
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|LoggingLevel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|RedeliveryPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|CamelContextHelper
import|;
end_import

begin_comment
comment|/**  * A factory which instantiates {@link RedeliveryPolicy} objects  *  * @version   */
end_comment

begin_class
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|AbstractCamelRedeliveryPolicyFactoryBean
specifier|public
specifier|abstract
class|class
name|AbstractCamelRedeliveryPolicyFactoryBean
extends|extends
name|AbstractCamelFactoryBean
argument_list|<
name|RedeliveryPolicy
argument_list|>
block|{
annotation|@
name|XmlAttribute
DECL|field|maximumRedeliveries
specifier|private
name|String
name|maximumRedeliveries
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|redeliveryDelay
specifier|private
name|String
name|redeliveryDelay
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|asyncDelayedRedelivery
specifier|private
name|String
name|asyncDelayedRedelivery
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|backOffMultiplier
specifier|private
name|String
name|backOffMultiplier
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|useExponentialBackOff
specifier|private
name|String
name|useExponentialBackOff
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|collisionAvoidanceFactor
specifier|private
name|String
name|collisionAvoidanceFactor
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|useCollisionAvoidance
specifier|private
name|String
name|useCollisionAvoidance
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|maximumRedeliveryDelay
specifier|private
name|String
name|maximumRedeliveryDelay
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|retriesExhaustedLogLevel
specifier|private
name|LoggingLevel
name|retriesExhaustedLogLevel
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|retryAttemptedLogLevel
specifier|private
name|LoggingLevel
name|retryAttemptedLogLevel
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|logRetryAttempted
specifier|private
name|String
name|logRetryAttempted
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|logStackTrace
specifier|private
name|String
name|logStackTrace
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|logRetryStackTrace
specifier|private
name|String
name|logRetryStackTrace
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|logHandled
specifier|private
name|String
name|logHandled
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|logContinued
specifier|private
name|String
name|logContinued
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|logExhausted
specifier|private
name|String
name|logExhausted
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|disableRedelivery
specifier|private
name|String
name|disableRedelivery
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|delayPattern
specifier|private
name|String
name|delayPattern
decl_stmt|;
annotation|@
name|XmlAttribute
DECL|field|redeliverWhileStopping
specifier|private
name|String
name|redeliverWhileStopping
decl_stmt|;
DECL|method|getObject ()
specifier|public
name|RedeliveryPolicy
name|getObject
parameter_list|()
throws|throws
name|Exception
block|{
name|RedeliveryPolicy
name|answer
init|=
operator|new
name|RedeliveryPolicy
argument_list|()
decl_stmt|;
name|CamelContext
name|context
init|=
name|getCamelContext
argument_list|()
decl_stmt|;
comment|// copy across the properties - if they are set
if|if
condition|(
name|maximumRedeliveries
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setMaximumRedeliveries
argument_list|(
name|CamelContextHelper
operator|.
name|parseInteger
argument_list|(
name|context
argument_list|,
name|maximumRedeliveries
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|redeliveryDelay
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setRedeliveryDelay
argument_list|(
name|CamelContextHelper
operator|.
name|parseLong
argument_list|(
name|context
argument_list|,
name|redeliveryDelay
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|asyncDelayedRedelivery
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|CamelContextHelper
operator|.
name|parseBoolean
argument_list|(
name|context
argument_list|,
name|asyncDelayedRedelivery
argument_list|)
condition|)
block|{
name|answer
operator|.
name|asyncDelayedRedelivery
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|retriesExhaustedLogLevel
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setRetriesExhaustedLogLevel
argument_list|(
name|retriesExhaustedLogLevel
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|retryAttemptedLogLevel
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setRetryAttemptedLogLevel
argument_list|(
name|retryAttemptedLogLevel
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|backOffMultiplier
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setBackOffMultiplier
argument_list|(
name|CamelContextHelper
operator|.
name|parseDouble
argument_list|(
name|context
argument_list|,
name|backOffMultiplier
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|useExponentialBackOff
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setUseExponentialBackOff
argument_list|(
name|CamelContextHelper
operator|.
name|parseBoolean
argument_list|(
name|context
argument_list|,
name|useExponentialBackOff
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|collisionAvoidanceFactor
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setCollisionAvoidanceFactor
argument_list|(
name|CamelContextHelper
operator|.
name|parseDouble
argument_list|(
name|context
argument_list|,
name|collisionAvoidanceFactor
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|useCollisionAvoidance
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setUseCollisionAvoidance
argument_list|(
name|CamelContextHelper
operator|.
name|parseBoolean
argument_list|(
name|context
argument_list|,
name|useCollisionAvoidance
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|maximumRedeliveryDelay
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setMaximumRedeliveryDelay
argument_list|(
name|CamelContextHelper
operator|.
name|parseLong
argument_list|(
name|context
argument_list|,
name|maximumRedeliveryDelay
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|logStackTrace
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setLogStackTrace
argument_list|(
name|CamelContextHelper
operator|.
name|parseBoolean
argument_list|(
name|context
argument_list|,
name|logStackTrace
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|logRetryStackTrace
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setLogRetryStackTrace
argument_list|(
name|CamelContextHelper
operator|.
name|parseBoolean
argument_list|(
name|context
argument_list|,
name|logRetryStackTrace
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|logHandled
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setLogHandled
argument_list|(
name|CamelContextHelper
operator|.
name|parseBoolean
argument_list|(
name|context
argument_list|,
name|logHandled
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|logContinued
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setLogContinued
argument_list|(
name|CamelContextHelper
operator|.
name|parseBoolean
argument_list|(
name|context
argument_list|,
name|logContinued
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|logRetryAttempted
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setLogRetryAttempted
argument_list|(
name|CamelContextHelper
operator|.
name|parseBoolean
argument_list|(
name|context
argument_list|,
name|logRetryAttempted
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|logExhausted
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setLogExhausted
argument_list|(
name|CamelContextHelper
operator|.
name|parseBoolean
argument_list|(
name|context
argument_list|,
name|logExhausted
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|disableRedelivery
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|CamelContextHelper
operator|.
name|parseBoolean
argument_list|(
name|context
argument_list|,
name|disableRedelivery
argument_list|)
condition|)
block|{
name|answer
operator|.
name|setMaximumRedeliveries
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|delayPattern
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setDelayPattern
argument_list|(
name|CamelContextHelper
operator|.
name|parseText
argument_list|(
name|context
argument_list|,
name|delayPattern
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|redeliverWhileStopping
operator|!=
literal|null
condition|)
block|{
name|answer
operator|.
name|setRedeliverWhileStopping
argument_list|(
name|CamelContextHelper
operator|.
name|parseBoolean
argument_list|(
name|context
argument_list|,
name|redeliverWhileStopping
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|answer
return|;
block|}
DECL|method|getObjectType ()
specifier|public
name|Class
argument_list|<
name|RedeliveryPolicy
argument_list|>
name|getObjectType
parameter_list|()
block|{
return|return
name|RedeliveryPolicy
operator|.
name|class
return|;
block|}
DECL|method|getMaximumRedeliveries ()
specifier|public
name|String
name|getMaximumRedeliveries
parameter_list|()
block|{
return|return
name|maximumRedeliveries
return|;
block|}
DECL|method|setMaximumRedeliveries (String maximumRedeliveries)
specifier|public
name|void
name|setMaximumRedeliveries
parameter_list|(
name|String
name|maximumRedeliveries
parameter_list|)
block|{
name|this
operator|.
name|maximumRedeliveries
operator|=
name|maximumRedeliveries
expr_stmt|;
block|}
DECL|method|getRedeliveryDelay ()
specifier|public
name|String
name|getRedeliveryDelay
parameter_list|()
block|{
return|return
name|redeliveryDelay
return|;
block|}
DECL|method|setRedeliveryDelay (String redeliveryDelay)
specifier|public
name|void
name|setRedeliveryDelay
parameter_list|(
name|String
name|redeliveryDelay
parameter_list|)
block|{
name|this
operator|.
name|redeliveryDelay
operator|=
name|redeliveryDelay
expr_stmt|;
block|}
DECL|method|getAsyncDelayedRedelivery ()
specifier|public
name|String
name|getAsyncDelayedRedelivery
parameter_list|()
block|{
return|return
name|asyncDelayedRedelivery
return|;
block|}
DECL|method|setAsyncDelayedRedelivery (String asyncDelayedRedelivery)
specifier|public
name|void
name|setAsyncDelayedRedelivery
parameter_list|(
name|String
name|asyncDelayedRedelivery
parameter_list|)
block|{
name|this
operator|.
name|asyncDelayedRedelivery
operator|=
name|asyncDelayedRedelivery
expr_stmt|;
block|}
DECL|method|getBackOffMultiplier ()
specifier|public
name|String
name|getBackOffMultiplier
parameter_list|()
block|{
return|return
name|backOffMultiplier
return|;
block|}
DECL|method|setBackOffMultiplier (String backOffMultiplier)
specifier|public
name|void
name|setBackOffMultiplier
parameter_list|(
name|String
name|backOffMultiplier
parameter_list|)
block|{
name|this
operator|.
name|backOffMultiplier
operator|=
name|backOffMultiplier
expr_stmt|;
block|}
DECL|method|getUseExponentialBackOff ()
specifier|public
name|String
name|getUseExponentialBackOff
parameter_list|()
block|{
return|return
name|useExponentialBackOff
return|;
block|}
DECL|method|setUseExponentialBackOff (String useExponentialBackOff)
specifier|public
name|void
name|setUseExponentialBackOff
parameter_list|(
name|String
name|useExponentialBackOff
parameter_list|)
block|{
name|this
operator|.
name|useExponentialBackOff
operator|=
name|useExponentialBackOff
expr_stmt|;
block|}
DECL|method|getCollisionAvoidanceFactor ()
specifier|public
name|String
name|getCollisionAvoidanceFactor
parameter_list|()
block|{
return|return
name|collisionAvoidanceFactor
return|;
block|}
DECL|method|setCollisionAvoidanceFactor (String collisionAvoidanceFactor)
specifier|public
name|void
name|setCollisionAvoidanceFactor
parameter_list|(
name|String
name|collisionAvoidanceFactor
parameter_list|)
block|{
name|this
operator|.
name|collisionAvoidanceFactor
operator|=
name|collisionAvoidanceFactor
expr_stmt|;
block|}
DECL|method|getUseCollisionAvoidance ()
specifier|public
name|String
name|getUseCollisionAvoidance
parameter_list|()
block|{
return|return
name|useCollisionAvoidance
return|;
block|}
DECL|method|setUseCollisionAvoidance (String useCollisionAvoidance)
specifier|public
name|void
name|setUseCollisionAvoidance
parameter_list|(
name|String
name|useCollisionAvoidance
parameter_list|)
block|{
name|this
operator|.
name|useCollisionAvoidance
operator|=
name|useCollisionAvoidance
expr_stmt|;
block|}
DECL|method|getMaximumRedeliveryDelay ()
specifier|public
name|String
name|getMaximumRedeliveryDelay
parameter_list|()
block|{
return|return
name|maximumRedeliveryDelay
return|;
block|}
DECL|method|setMaximumRedeliveryDelay (String maximumRedeliveryDelay)
specifier|public
name|void
name|setMaximumRedeliveryDelay
parameter_list|(
name|String
name|maximumRedeliveryDelay
parameter_list|)
block|{
name|this
operator|.
name|maximumRedeliveryDelay
operator|=
name|maximumRedeliveryDelay
expr_stmt|;
block|}
DECL|method|getRetriesExhaustedLogLevel ()
specifier|public
name|LoggingLevel
name|getRetriesExhaustedLogLevel
parameter_list|()
block|{
return|return
name|retriesExhaustedLogLevel
return|;
block|}
DECL|method|setRetriesExhaustedLogLevel (LoggingLevel retriesExhaustedLogLevel)
specifier|public
name|void
name|setRetriesExhaustedLogLevel
parameter_list|(
name|LoggingLevel
name|retriesExhaustedLogLevel
parameter_list|)
block|{
name|this
operator|.
name|retriesExhaustedLogLevel
operator|=
name|retriesExhaustedLogLevel
expr_stmt|;
block|}
DECL|method|getRetryAttemptedLogLevel ()
specifier|public
name|LoggingLevel
name|getRetryAttemptedLogLevel
parameter_list|()
block|{
return|return
name|retryAttemptedLogLevel
return|;
block|}
DECL|method|setRetryAttemptedLogLevel (LoggingLevel retryAttemptedLogLevel)
specifier|public
name|void
name|setRetryAttemptedLogLevel
parameter_list|(
name|LoggingLevel
name|retryAttemptedLogLevel
parameter_list|)
block|{
name|this
operator|.
name|retryAttemptedLogLevel
operator|=
name|retryAttemptedLogLevel
expr_stmt|;
block|}
DECL|method|getLogRetryAttempted ()
specifier|public
name|String
name|getLogRetryAttempted
parameter_list|()
block|{
return|return
name|logRetryAttempted
return|;
block|}
DECL|method|setLogRetryAttempted (String logRetryAttempted)
specifier|public
name|void
name|setLogRetryAttempted
parameter_list|(
name|String
name|logRetryAttempted
parameter_list|)
block|{
name|this
operator|.
name|logRetryAttempted
operator|=
name|logRetryAttempted
expr_stmt|;
block|}
DECL|method|getLogStackTrace ()
specifier|public
name|String
name|getLogStackTrace
parameter_list|()
block|{
return|return
name|logStackTrace
return|;
block|}
DECL|method|setLogStackTrace (String logStackTrace)
specifier|public
name|void
name|setLogStackTrace
parameter_list|(
name|String
name|logStackTrace
parameter_list|)
block|{
name|this
operator|.
name|logStackTrace
operator|=
name|logStackTrace
expr_stmt|;
block|}
DECL|method|getLogRetryStackTrace ()
specifier|public
name|String
name|getLogRetryStackTrace
parameter_list|()
block|{
return|return
name|logRetryStackTrace
return|;
block|}
DECL|method|setLogRetryStackTrace (String logRetryStackTrace)
specifier|public
name|void
name|setLogRetryStackTrace
parameter_list|(
name|String
name|logRetryStackTrace
parameter_list|)
block|{
name|this
operator|.
name|logRetryStackTrace
operator|=
name|logRetryStackTrace
expr_stmt|;
block|}
DECL|method|getLogHandled ()
specifier|public
name|String
name|getLogHandled
parameter_list|()
block|{
return|return
name|logHandled
return|;
block|}
DECL|method|setLogHandled (String logHandled)
specifier|public
name|void
name|setLogHandled
parameter_list|(
name|String
name|logHandled
parameter_list|)
block|{
name|this
operator|.
name|logHandled
operator|=
name|logHandled
expr_stmt|;
block|}
DECL|method|getLogContinued ()
specifier|public
name|String
name|getLogContinued
parameter_list|()
block|{
return|return
name|logContinued
return|;
block|}
DECL|method|setLogContinued (String logContinued)
specifier|public
name|void
name|setLogContinued
parameter_list|(
name|String
name|logContinued
parameter_list|)
block|{
name|this
operator|.
name|logContinued
operator|=
name|logContinued
expr_stmt|;
block|}
DECL|method|getLogExhausted ()
specifier|public
name|String
name|getLogExhausted
parameter_list|()
block|{
return|return
name|logExhausted
return|;
block|}
DECL|method|setLogExhausted (String logExhausted)
specifier|public
name|void
name|setLogExhausted
parameter_list|(
name|String
name|logExhausted
parameter_list|)
block|{
name|this
operator|.
name|logExhausted
operator|=
name|logExhausted
expr_stmt|;
block|}
DECL|method|getDisableRedelivery ()
specifier|public
name|String
name|getDisableRedelivery
parameter_list|()
block|{
return|return
name|disableRedelivery
return|;
block|}
DECL|method|setDisableRedelivery (String disableRedelivery)
specifier|public
name|void
name|setDisableRedelivery
parameter_list|(
name|String
name|disableRedelivery
parameter_list|)
block|{
name|this
operator|.
name|disableRedelivery
operator|=
name|disableRedelivery
expr_stmt|;
block|}
DECL|method|getDelayPattern ()
specifier|public
name|String
name|getDelayPattern
parameter_list|()
block|{
return|return
name|delayPattern
return|;
block|}
DECL|method|setDelayPattern (String delayPattern)
specifier|public
name|void
name|setDelayPattern
parameter_list|(
name|String
name|delayPattern
parameter_list|)
block|{
name|this
operator|.
name|delayPattern
operator|=
name|delayPattern
expr_stmt|;
block|}
DECL|method|getRedeliverWhileStopping ()
specifier|public
name|String
name|getRedeliverWhileStopping
parameter_list|()
block|{
return|return
name|redeliverWhileStopping
return|;
block|}
DECL|method|setRedeliverWhileStopping (String redeliverWhileStopping)
specifier|public
name|void
name|setRedeliverWhileStopping
parameter_list|(
name|String
name|redeliverWhileStopping
parameter_list|)
block|{
name|this
operator|.
name|redeliverWhileStopping
operator|=
name|redeliverWhileStopping
expr_stmt|;
block|}
block|}
end_class

end_unit

