begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.spring.javaconfig
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|javaconfig
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Modifier
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RoutesBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|RouteDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|RoutesDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|rest
operator|.
name|RestDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|rest
operator|.
name|RestsDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|event
operator|.
name|ContextRefreshedEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|Resource
import|;
end_import

begin_comment
comment|/**  * Collects routes and rests from the various sources (like Spring application context beans registry or opinionated  * classpath locations) and injects these into the Camel context.  */
end_comment

begin_class
DECL|class|RoutesCollector
specifier|public
class|class
name|RoutesCollector
implements|implements
name|ApplicationListener
argument_list|<
name|ContextRefreshedEvent
argument_list|>
block|{
comment|// Static collaborators
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|RoutesCollector
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Collaborators
DECL|field|applicationContext
specifier|private
specifier|final
name|ApplicationContext
name|applicationContext
decl_stmt|;
DECL|field|configuration
specifier|private
specifier|final
name|CamelConfiguration
name|configuration
decl_stmt|;
comment|// Constructors
DECL|method|RoutesCollector (ApplicationContext applicationContext, CamelConfiguration configuration)
specifier|public
name|RoutesCollector
parameter_list|(
name|ApplicationContext
name|applicationContext
parameter_list|,
name|CamelConfiguration
name|configuration
parameter_list|)
block|{
name|this
operator|.
name|applicationContext
operator|=
name|applicationContext
expr_stmt|;
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
block|}
comment|// Overridden
annotation|@
name|Override
DECL|method|onApplicationEvent (ContextRefreshedEvent event)
specifier|public
name|void
name|onApplicationEvent
parameter_list|(
name|ContextRefreshedEvent
name|event
parameter_list|)
block|{
name|ApplicationContext
name|applicationContext
init|=
name|event
operator|.
name|getApplicationContext
argument_list|()
decl_stmt|;
comment|// only listen to context refresh of "my" applicationContext
if|if
condition|(
name|this
operator|.
name|applicationContext
operator|.
name|equals
argument_list|(
name|applicationContext
argument_list|)
condition|)
block|{
name|CamelContext
name|camelContext
init|=
name|event
operator|.
name|getApplicationContext
argument_list|()
operator|.
name|getBean
argument_list|(
name|CamelContext
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// only add and start Camel if its stopped (initial state)
if|if
condition|(
name|camelContext
operator|.
name|getStatus
argument_list|()
operator|.
name|isStopped
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Post-processing CamelContext bean: {}"
argument_list|,
name|camelContext
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|RoutesBuilder
name|routesBuilder
range|:
name|configuration
operator|.
name|routes
argument_list|()
control|)
block|{
comment|// filter out abstract classes
name|boolean
name|abs
init|=
name|Modifier
operator|.
name|isAbstract
argument_list|(
name|routesBuilder
operator|.
name|getClass
argument_list|()
operator|.
name|getModifiers
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|abs
condition|)
block|{
try|try
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Injecting following route into the CamelContext: {}"
argument_list|,
name|routesBuilder
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|addRoutes
argument_list|(
name|routesBuilder
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|CamelSpringJavaconfigInitializationException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
block|}
block|}
else|else
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Ignore ContextRefreshedEvent: {}"
argument_list|,
name|event
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Helpers
DECL|method|loadXmlRoutes (ApplicationContext applicationContext, CamelContext camelContext, String directory)
specifier|private
name|void
name|loadXmlRoutes
parameter_list|(
name|ApplicationContext
name|applicationContext
parameter_list|,
name|CamelContext
name|camelContext
parameter_list|,
name|String
name|directory
parameter_list|)
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Loading additional Camel XML routes from: {}"
argument_list|,
name|directory
argument_list|)
expr_stmt|;
try|try
block|{
name|Resource
index|[]
name|xmlRoutes
init|=
name|applicationContext
operator|.
name|getResources
argument_list|(
name|directory
argument_list|)
decl_stmt|;
for|for
control|(
name|Resource
name|xmlRoute
range|:
name|xmlRoutes
control|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Found XML route: {}"
argument_list|,
name|xmlRoute
argument_list|)
expr_stmt|;
name|RoutesDefinition
name|xmlDefinition
init|=
name|camelContext
operator|.
name|loadRoutesDefinition
argument_list|(
name|xmlRoute
operator|.
name|getInputStream
argument_list|()
argument_list|)
decl_stmt|;
name|camelContext
operator|.
name|addRouteDefinitions
argument_list|(
name|xmlDefinition
operator|.
name|getRoutes
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"No XML routes found in {}. Skipping XML routes detection."
argument_list|,
name|directory
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|loadXmlRests (ApplicationContext applicationContext, CamelContext camelContext, String directory)
specifier|private
name|void
name|loadXmlRests
parameter_list|(
name|ApplicationContext
name|applicationContext
parameter_list|,
name|CamelContext
name|camelContext
parameter_list|,
name|String
name|directory
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Loading additional Camel XML rests from: {}"
argument_list|,
name|directory
argument_list|)
expr_stmt|;
try|try
block|{
specifier|final
name|Resource
index|[]
name|xmlRests
init|=
name|applicationContext
operator|.
name|getResources
argument_list|(
name|directory
argument_list|)
decl_stmt|;
for|for
control|(
specifier|final
name|Resource
name|xmlRest
range|:
name|xmlRests
control|)
block|{
specifier|final
name|RestsDefinition
name|xmlDefinitions
init|=
name|camelContext
operator|.
name|loadRestsDefinition
argument_list|(
name|xmlRest
operator|.
name|getInputStream
argument_list|()
argument_list|)
decl_stmt|;
name|camelContext
operator|.
name|addRestDefinitions
argument_list|(
name|xmlDefinitions
operator|.
name|getRests
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
specifier|final
name|RestDefinition
name|xmlDefinition
range|:
name|xmlDefinitions
operator|.
name|getRests
argument_list|()
control|)
block|{
specifier|final
name|List
argument_list|<
name|RouteDefinition
argument_list|>
name|routeDefinitions
init|=
name|xmlDefinition
operator|.
name|asRouteDefinition
argument_list|(
name|camelContext
argument_list|)
decl_stmt|;
name|camelContext
operator|.
name|addRouteDefinitions
argument_list|(
name|routeDefinitions
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"No XML rests found in {}. Skipping XML rests detection."
argument_list|,
name|directory
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

