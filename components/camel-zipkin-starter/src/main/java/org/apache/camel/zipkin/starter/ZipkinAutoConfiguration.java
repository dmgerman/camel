begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *<p/>  * http://www.apache.org/licenses/LICENSE-2.0  *<p/>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.zipkin.starter
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|zipkin
operator|.
name|starter
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|zipkin
operator|.
name|ZipkinEventNotifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|condition
operator|.
name|ConditionalOnMissingBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|autoconfigure
operator|.
name|condition
operator|.
name|ConditionalOnProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|context
operator|.
name|properties
operator|.
name|EnableConfigurationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Bean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|annotation
operator|.
name|Configuration
import|;
end_import

begin_class
annotation|@
name|Configuration
annotation|@
name|EnableConfigurationProperties
argument_list|(
name|ZipkinConfigurationProperties
operator|.
name|class
argument_list|)
annotation|@
name|ConditionalOnProperty
argument_list|(
name|value
operator|=
literal|"camel.zipkin.enabled"
argument_list|,
name|matchIfMissing
operator|=
literal|true
argument_list|)
DECL|class|ZipkinAutoConfiguration
specifier|public
class|class
name|ZipkinAutoConfiguration
block|{
annotation|@
name|Bean
argument_list|(
name|initMethod
operator|=
literal|""
argument_list|,
name|destroyMethod
operator|=
literal|""
argument_list|)
comment|// Camel handles the lifecycle of this bean
annotation|@
name|ConditionalOnMissingBean
argument_list|(
name|ZipkinEventNotifier
operator|.
name|class
argument_list|)
DECL|method|zipkinEventNotifier (CamelContext camelContext, ZipkinConfigurationProperties configurationProperties)
name|ZipkinEventNotifier
name|zipkinEventNotifier
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|,
name|ZipkinConfigurationProperties
name|configurationProperties
parameter_list|)
block|{
name|ZipkinEventNotifier
name|notifier
init|=
operator|new
name|ZipkinEventNotifier
argument_list|()
decl_stmt|;
name|notifier
operator|.
name|setHostName
argument_list|(
name|configurationProperties
operator|.
name|getHostName
argument_list|()
argument_list|)
expr_stmt|;
name|notifier
operator|.
name|setPort
argument_list|(
name|configurationProperties
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|notifier
operator|.
name|setRate
argument_list|(
name|configurationProperties
operator|.
name|getRate
argument_list|()
argument_list|)
expr_stmt|;
name|notifier
operator|.
name|setServiceName
argument_list|(
name|configurationProperties
operator|.
name|getServiceName
argument_list|()
argument_list|)
expr_stmt|;
name|notifier
operator|.
name|setIncludeMessageBody
argument_list|(
name|configurationProperties
operator|.
name|isIncludeMessageBody
argument_list|()
argument_list|)
expr_stmt|;
comment|// register the bean into CamelContext
name|camelContext
operator|.
name|getManagementStrategy
argument_list|()
operator|.
name|addEventNotifier
argument_list|(
name|notifier
argument_list|)
expr_stmt|;
return|return
name|notifier
return|;
block|}
block|}
end_class

end_unit

