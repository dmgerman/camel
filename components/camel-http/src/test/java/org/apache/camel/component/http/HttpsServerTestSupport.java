begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.http
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|http
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyStore
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|KeyManagerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|SSLContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|TrustManagerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_class
DECL|class|HttpsServerTestSupport
specifier|public
specifier|abstract
class|class
name|HttpsServerTestSupport
extends|extends
name|HttpServerTestSupport
block|{
DECL|field|KEYSTORE
specifier|private
specifier|static
specifier|final
name|String
name|KEYSTORE
init|=
literal|"/localhost.p12"
decl_stmt|;
DECL|field|PASSWORD
specifier|private
specifier|static
specifier|final
name|String
name|PASSWORD
init|=
literal|"changeit"
decl_stmt|;
annotation|@
name|Before
annotation|@
name|Override
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"javax.net.ssl.trustStorePassword"
argument_list|,
name|PASSWORD
argument_list|)
expr_stmt|;
specifier|final
name|URL
name|keystoreResourceUrl
init|=
name|HttpsServerTestSupport
operator|.
name|class
operator|.
name|getResource
argument_list|(
name|KEYSTORE
argument_list|)
decl_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"javax.net.ssl.trustStore"
argument_list|,
operator|new
name|File
argument_list|(
name|keystoreResourceUrl
operator|.
name|toURI
argument_list|()
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
annotation|@
name|Override
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|System
operator|.
name|clearProperty
argument_list|(
literal|"javax.net.ssl.trustStorePassword"
argument_list|)
expr_stmt|;
name|System
operator|.
name|clearProperty
argument_list|(
literal|"javax.net.ssl.trustStore"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getSSLContext ()
specifier|protected
name|SSLContext
name|getSSLContext
parameter_list|()
throws|throws
name|Exception
block|{
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
name|KeyStore
operator|.
name|getDefaultType
argument_list|()
argument_list|)
decl_stmt|;
try|try
init|(
name|InputStream
name|is
init|=
name|HttpsServerTestSupport
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
name|KEYSTORE
argument_list|)
init|)
block|{
name|keyStore
operator|.
name|load
argument_list|(
name|is
argument_list|,
name|PASSWORD
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|KeyManagerFactory
name|keyManagerFactory
init|=
name|KeyManagerFactory
operator|.
name|getInstance
argument_list|(
name|KeyManagerFactory
operator|.
name|getDefaultAlgorithm
argument_list|()
argument_list|)
decl_stmt|;
name|keyManagerFactory
operator|.
name|init
argument_list|(
name|keyStore
argument_list|,
name|PASSWORD
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|KeyStore
name|trustStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
name|KeyStore
operator|.
name|getDefaultType
argument_list|()
argument_list|)
decl_stmt|;
try|try
init|(
name|InputStream
name|is
init|=
name|HttpsServerTestSupport
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
name|KEYSTORE
argument_list|)
init|)
block|{
name|keyStore
operator|.
name|load
argument_list|(
name|is
argument_list|,
name|PASSWORD
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|TrustManagerFactory
name|trustManagerFactory
init|=
name|TrustManagerFactory
operator|.
name|getInstance
argument_list|(
name|TrustManagerFactory
operator|.
name|getDefaultAlgorithm
argument_list|()
argument_list|)
decl_stmt|;
name|trustManagerFactory
operator|.
name|init
argument_list|(
name|trustStore
argument_list|)
expr_stmt|;
name|SSLContext
name|sslcontext
init|=
name|SSLContext
operator|.
name|getInstance
argument_list|(
literal|"TLS"
argument_list|)
decl_stmt|;
name|sslcontext
operator|.
name|init
argument_list|(
name|keyManagerFactory
operator|.
name|getKeyManagers
argument_list|()
argument_list|,
name|trustManagerFactory
operator|.
name|getTrustManagers
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
return|return
name|sslcontext
return|;
block|}
block|}
end_class

end_unit

