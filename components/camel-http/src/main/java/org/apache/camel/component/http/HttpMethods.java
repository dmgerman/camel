begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.http
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|http
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Expression
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|ExpressionBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpDelete
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpEntityEnclosingRequestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpGet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpHead
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpPost
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpPut
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpRequestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpTrace
import|;
end_import

begin_enum
DECL|enum|HttpMethods
specifier|public
enum|enum
name|HttpMethods
implements|implements
name|Expression
block|{
DECL|enumConstant|GET
name|GET
parameter_list|(
name|HttpGet
operator|.
name|class
parameter_list|)
operator|,
DECL|enumConstant|POST
constructor|POST(HttpPost.class
block|)
enum|,
DECL|enumConstant|PUT
name|PUT
argument_list|(
name|HttpPut
operator|.
name|class
argument_list|)
operator|,
DECL|enumConstant|DELETE
name|DELETE
argument_list|(
name|HttpDelete
operator|.
name|class
argument_list|)
operator|,
DECL|enumConstant|HEAD
name|HEAD
argument_list|(
name|HttpHead
operator|.
name|class
argument_list|)
operator|,
DECL|enumConstant|OPTIONS
name|OPTIONS
argument_list|(
name|HttpOptions
operator|.
name|class
argument_list|)
operator|,
DECL|enumConstant|TRACE
name|TRACE
argument_list|(
name|HttpTrace
operator|.
name|class
argument_list|)
enum|;
end_enum

begin_decl_stmt
DECL|field|clazz
specifier|final
name|Class
argument_list|<
name|?
extends|extends
name|HttpRequestBase
argument_list|>
name|clazz
decl_stmt|;
end_decl_stmt

begin_decl_stmt
DECL|field|entity
specifier|final
name|boolean
name|entity
decl_stmt|;
end_decl_stmt

begin_expr_stmt
DECL|method|HttpMethods (Class<? extends HttpRequestBase> clazz)
name|HttpMethods
argument_list|(
name|Class
argument_list|<
name|?
extends|extends
name|HttpRequestBase
argument_list|>
name|clazz
argument_list|)
block|{
name|this
operator|.
name|clazz
operator|=
name|clazz
block|;
name|entity
operator|=
name|HttpEntityEnclosingRequestBase
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|clazz
argument_list|)
block|;     }
DECL|method|createMethod (final String url)
specifier|public
name|HttpRequestBase
name|createMethod
argument_list|(
name|final
name|String
name|url
argument_list|)
block|{
try|try
block|{
return|return
name|clazz
operator|.
name|getDeclaredConstructor
argument_list|(
name|String
operator|.
name|class
argument_list|)
operator|.
name|newInstance
argument_list|(
name|url
argument_list|)
return|;
block|}
end_expr_stmt

begin_catch
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
end_catch

begin_function
unit|}      public
DECL|method|isEntityEnclosing ()
specifier|final
name|boolean
name|isEntityEnclosing
parameter_list|()
block|{
return|return
name|entity
return|;
block|}
end_function

begin_function
DECL|method|evaluate (Exchange exchange, Class<T> type)
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|evaluate
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|type
parameter_list|)
block|{
return|return
name|ExpressionBuilder
operator|.
name|constantExpression
argument_list|(
name|name
argument_list|()
argument_list|)
operator|.
name|evaluate
argument_list|(
name|exchange
argument_list|,
name|type
argument_list|)
return|;
block|}
end_function

unit|}
end_unit

