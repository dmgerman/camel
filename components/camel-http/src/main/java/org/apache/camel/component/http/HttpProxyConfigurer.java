begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.http
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|http
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|ProxyHost
import|;
end_import

begin_class
DECL|class|HttpProxyConfigurer
specifier|public
class|class
name|HttpProxyConfigurer
implements|implements
name|HttpClientConfigurer
block|{
DECL|field|proxyHost
specifier|private
specifier|final
name|Optional
argument_list|<
name|String
argument_list|>
name|proxyHost
decl_stmt|;
DECL|field|proxyPort
specifier|private
specifier|final
name|Optional
argument_list|<
name|Integer
argument_list|>
name|proxyPort
decl_stmt|;
DECL|method|HttpProxyConfigurer (Optional<String> proxyHost)
specifier|public
name|HttpProxyConfigurer
parameter_list|(
name|Optional
argument_list|<
name|String
argument_list|>
name|proxyHost
parameter_list|)
block|{
name|this
argument_list|(
name|proxyHost
argument_list|,
name|Optional
operator|.
name|empty
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|HttpProxyConfigurer (Optional<String> proxyHost, Optional<Integer> proxyPort)
specifier|public
name|HttpProxyConfigurer
parameter_list|(
name|Optional
argument_list|<
name|String
argument_list|>
name|proxyHost
parameter_list|,
name|Optional
argument_list|<
name|Integer
argument_list|>
name|proxyPort
parameter_list|)
block|{
name|this
operator|.
name|proxyHost
operator|=
name|proxyHost
expr_stmt|;
name|this
operator|.
name|proxyPort
operator|=
name|proxyPort
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|configureHttpClient (HttpClient client)
specifier|public
name|void
name|configureHttpClient
parameter_list|(
name|HttpClient
name|client
parameter_list|)
block|{
if|if
condition|(
name|proxyHost
operator|.
name|isPresent
argument_list|()
operator|&&
name|proxyPort
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|client
operator|.
name|getHostConfiguration
argument_list|()
operator|.
name|setProxyHost
argument_list|(
operator|new
name|ProxyHost
argument_list|(
name|proxyHost
operator|.
name|get
argument_list|()
argument_list|,
name|proxyPort
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|proxyHost
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|client
operator|.
name|getHostConfiguration
argument_list|()
operator|.
name|setProxyHost
argument_list|(
operator|new
name|ProxyHost
argument_list|(
name|proxyHost
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

