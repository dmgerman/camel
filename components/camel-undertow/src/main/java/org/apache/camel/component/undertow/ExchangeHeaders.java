begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.undertow
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|undertow
package|;
end_package

begin_import
import|import
name|io
operator|.
name|undertow
operator|.
name|util
operator|.
name|HttpString
import|;
end_import

begin_comment
comment|/**  * Copy of {@link org.apache.camel.Exchange} headers fields, to return them as {@link HttpString} for Undertow  */
end_comment

begin_class
DECL|class|ExchangeHeaders
specifier|public
specifier|final
class|class
name|ExchangeHeaders
block|{
DECL|field|AUTHENTICATION
specifier|public
specifier|static
specifier|final
name|HttpString
name|AUTHENTICATION
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelAuthentication"
argument_list|)
decl_stmt|;
DECL|field|AUTHENTICATION_FAILURE_POLICY_ID
specifier|public
specifier|static
specifier|final
name|HttpString
name|AUTHENTICATION_FAILURE_POLICY_ID
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelAuthenticationFailurePolicyId"
argument_list|)
decl_stmt|;
DECL|field|ACCEPT_CONTENT_TYPE
specifier|public
specifier|static
specifier|final
name|HttpString
name|ACCEPT_CONTENT_TYPE
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelAcceptContentType"
argument_list|)
decl_stmt|;
DECL|field|AGGREGATED_SIZE
specifier|public
specifier|static
specifier|final
name|HttpString
name|AGGREGATED_SIZE
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelAggregatedSize"
argument_list|)
decl_stmt|;
DECL|field|AGGREGATED_TIMEOUT
specifier|public
specifier|static
specifier|final
name|HttpString
name|AGGREGATED_TIMEOUT
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelAggregatedTimeout"
argument_list|)
decl_stmt|;
DECL|field|AGGREGATED_COMPLETED_BY
specifier|public
specifier|static
specifier|final
name|HttpString
name|AGGREGATED_COMPLETED_BY
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelAggregatedCompletedBy"
argument_list|)
decl_stmt|;
DECL|field|AGGREGATED_CORRELATION_KEY
specifier|public
specifier|static
specifier|final
name|HttpString
name|AGGREGATED_CORRELATION_KEY
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelAggregatedCorrelationKey"
argument_list|)
decl_stmt|;
DECL|field|AGGREGATION_STRATEGY
specifier|public
specifier|static
specifier|final
name|HttpString
name|AGGREGATION_STRATEGY
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelAggregationStrategy"
argument_list|)
decl_stmt|;
DECL|field|AGGREGATION_COMPLETE_ALL_GROUPS
specifier|public
specifier|static
specifier|final
name|HttpString
name|AGGREGATION_COMPLETE_ALL_GROUPS
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelAggregationCompleteAllGroups"
argument_list|)
decl_stmt|;
DECL|field|AGGREGATION_COMPLETE_ALL_GROUPS_INCLUSIVE
specifier|public
specifier|static
specifier|final
name|HttpString
name|AGGREGATION_COMPLETE_ALL_GROUPS_INCLUSIVE
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelAggregationCompleteAllGroupsInclusive"
argument_list|)
decl_stmt|;
DECL|field|ASYNC_WAIT
specifier|public
specifier|static
specifier|final
name|HttpString
name|ASYNC_WAIT
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelAsyncWait"
argument_list|)
decl_stmt|;
DECL|field|BATCH_INDEX
specifier|public
specifier|static
specifier|final
name|HttpString
name|BATCH_INDEX
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelBatchIndex"
argument_list|)
decl_stmt|;
DECL|field|BATCH_SIZE
specifier|public
specifier|static
specifier|final
name|HttpString
name|BATCH_SIZE
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelBatchSize"
argument_list|)
decl_stmt|;
DECL|field|BATCH_COMPLETE
specifier|public
specifier|static
specifier|final
name|HttpString
name|BATCH_COMPLETE
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelBatchComplete"
argument_list|)
decl_stmt|;
DECL|field|BEAN_METHOD_NAME
specifier|public
specifier|static
specifier|final
name|HttpString
name|BEAN_METHOD_NAME
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelBeanMethodName"
argument_list|)
decl_stmt|;
DECL|field|BEAN_MULTI_PARAMETER_ARRAY
specifier|public
specifier|static
specifier|final
name|HttpString
name|BEAN_MULTI_PARAMETER_ARRAY
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelBeanMultiParameterArray"
argument_list|)
decl_stmt|;
DECL|field|BINDING
specifier|public
specifier|static
specifier|final
name|HttpString
name|BINDING
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelBinding"
argument_list|)
decl_stmt|;
comment|// do not prefix with Camel and use lower-case starting letter as its a shared key
comment|// used across other Apache products such as AMQ, SMX etc.
DECL|field|BREADCRUMB_ID
specifier|public
specifier|static
specifier|final
name|HttpString
name|BREADCRUMB_ID
init|=
operator|new
name|HttpString
argument_list|(
literal|"breadcrumbId"
argument_list|)
decl_stmt|;
DECL|field|CHARSET_NAME
specifier|public
specifier|static
specifier|final
name|HttpString
name|CHARSET_NAME
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelCharsetName"
argument_list|)
decl_stmt|;
DECL|field|CREATED_TIMESTAMP
specifier|public
specifier|static
specifier|final
name|HttpString
name|CREATED_TIMESTAMP
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelCreatedTimestamp"
argument_list|)
decl_stmt|;
DECL|field|CONTENT_ENCODING
specifier|public
specifier|static
specifier|final
name|HttpString
name|CONTENT_ENCODING
init|=
operator|new
name|HttpString
argument_list|(
literal|"Content-Encoding"
argument_list|)
decl_stmt|;
DECL|field|CONTENT_LENGTH
specifier|public
specifier|static
specifier|final
name|HttpString
name|CONTENT_LENGTH
init|=
operator|new
name|HttpString
argument_list|(
literal|"Content-Length"
argument_list|)
decl_stmt|;
DECL|field|CONTENT_TYPE
specifier|public
specifier|static
specifier|final
name|HttpString
name|CONTENT_TYPE
init|=
operator|new
name|HttpString
argument_list|(
literal|"Content-Type"
argument_list|)
decl_stmt|;
DECL|field|CORRELATION_ID
specifier|public
specifier|static
specifier|final
name|HttpString
name|CORRELATION_ID
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelCorrelationId"
argument_list|)
decl_stmt|;
DECL|field|DATASET_INDEX
specifier|public
specifier|static
specifier|final
name|HttpString
name|DATASET_INDEX
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelDataSetIndex"
argument_list|)
decl_stmt|;
DECL|field|DEFAULT_CHARSET_PROPERTY
specifier|public
specifier|static
specifier|final
name|HttpString
name|DEFAULT_CHARSET_PROPERTY
init|=
operator|new
name|HttpString
argument_list|(
literal|"org.apache.camel.default.charset"
argument_list|)
decl_stmt|;
DECL|field|DESTINATION_OVERRIDE_URL
specifier|public
specifier|static
specifier|final
name|HttpString
name|DESTINATION_OVERRIDE_URL
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelDestinationOverrideUrl"
argument_list|)
decl_stmt|;
DECL|field|DISABLE_HTTP_STREAM_CACHE
specifier|public
specifier|static
specifier|final
name|HttpString
name|DISABLE_HTTP_STREAM_CACHE
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelDisableHttpStreamCache"
argument_list|)
decl_stmt|;
DECL|field|DUPLICATE_MESSAGE
specifier|public
specifier|static
specifier|final
name|HttpString
name|DUPLICATE_MESSAGE
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelDuplicateMessage"
argument_list|)
decl_stmt|;
DECL|field|DOCUMENT_BUILDER_FACTORY
specifier|public
specifier|static
specifier|final
name|HttpString
name|DOCUMENT_BUILDER_FACTORY
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelDocumentBuilderFactory"
argument_list|)
decl_stmt|;
DECL|field|EXCEPTION_CAUGHT
specifier|public
specifier|static
specifier|final
name|HttpString
name|EXCEPTION_CAUGHT
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelExceptionCaught"
argument_list|)
decl_stmt|;
DECL|field|EXCEPTION_HANDLED
specifier|public
specifier|static
specifier|final
name|HttpString
name|EXCEPTION_HANDLED
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelExceptionHandled"
argument_list|)
decl_stmt|;
DECL|field|EVALUATE_EXPRESSION_RESULT
specifier|public
specifier|static
specifier|final
name|HttpString
name|EVALUATE_EXPRESSION_RESULT
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelEvaluateExpressionResult"
argument_list|)
decl_stmt|;
DECL|field|ERRORHANDLER_HANDLED
specifier|public
specifier|static
specifier|final
name|HttpString
name|ERRORHANDLER_HANDLED
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelErrorHandlerHandled"
argument_list|)
decl_stmt|;
DECL|field|EXTERNAL_REDELIVERED
specifier|public
specifier|static
specifier|final
name|HttpString
name|EXTERNAL_REDELIVERED
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelExternalRedelivered"
argument_list|)
decl_stmt|;
DECL|field|FAILURE_HANDLED
specifier|public
specifier|static
specifier|final
name|HttpString
name|FAILURE_HANDLED
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelFailureHandled"
argument_list|)
decl_stmt|;
DECL|field|FAILURE_ENDPOINT
specifier|public
specifier|static
specifier|final
name|HttpString
name|FAILURE_ENDPOINT
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelFailureEndpoint"
argument_list|)
decl_stmt|;
DECL|field|FAILURE_ROUTE_ID
specifier|public
specifier|static
specifier|final
name|HttpString
name|FAILURE_ROUTE_ID
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelFailureRouteId"
argument_list|)
decl_stmt|;
DECL|field|FILTER_NON_XML_CHARS
specifier|public
specifier|static
specifier|final
name|HttpString
name|FILTER_NON_XML_CHARS
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelFilterNonXmlChars"
argument_list|)
decl_stmt|;
DECL|field|FILE_LOCAL_WORK_PATH
specifier|public
specifier|static
specifier|final
name|HttpString
name|FILE_LOCAL_WORK_PATH
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelFileLocalWorkPath"
argument_list|)
decl_stmt|;
DECL|field|FILE_NAME
specifier|public
specifier|static
specifier|final
name|HttpString
name|FILE_NAME
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelFileName"
argument_list|)
decl_stmt|;
DECL|field|FILE_NAME_ONLY
specifier|public
specifier|static
specifier|final
name|HttpString
name|FILE_NAME_ONLY
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelFileNameOnly"
argument_list|)
decl_stmt|;
DECL|field|FILE_NAME_PRODUCED
specifier|public
specifier|static
specifier|final
name|HttpString
name|FILE_NAME_PRODUCED
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelFileNameProduced"
argument_list|)
decl_stmt|;
DECL|field|FILE_NAME_CONSUMED
specifier|public
specifier|static
specifier|final
name|HttpString
name|FILE_NAME_CONSUMED
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelFileNameConsumed"
argument_list|)
decl_stmt|;
DECL|field|FILE_PATH
specifier|public
specifier|static
specifier|final
name|HttpString
name|FILE_PATH
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelFilePath"
argument_list|)
decl_stmt|;
DECL|field|FILE_PARENT
specifier|public
specifier|static
specifier|final
name|HttpString
name|FILE_PARENT
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelFileParent"
argument_list|)
decl_stmt|;
DECL|field|FILE_LAST_MODIFIED
specifier|public
specifier|static
specifier|final
name|HttpString
name|FILE_LAST_MODIFIED
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelFileLastModified"
argument_list|)
decl_stmt|;
DECL|field|FILE_LENGTH
specifier|public
specifier|static
specifier|final
name|HttpString
name|FILE_LENGTH
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelFileLength"
argument_list|)
decl_stmt|;
DECL|field|FILTER_MATCHED
specifier|public
specifier|static
specifier|final
name|HttpString
name|FILTER_MATCHED
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelFilterMatched"
argument_list|)
decl_stmt|;
DECL|field|FILE_LOCK_FILE_ACQUIRED
specifier|public
specifier|static
specifier|final
name|HttpString
name|FILE_LOCK_FILE_ACQUIRED
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelFileLockFileAcquired"
argument_list|)
decl_stmt|;
DECL|field|FILE_LOCK_FILE_NAME
specifier|public
specifier|static
specifier|final
name|HttpString
name|FILE_LOCK_FILE_NAME
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelFileLockFileName"
argument_list|)
decl_stmt|;
DECL|field|GROUPED_EXCHANGE
specifier|public
specifier|static
specifier|final
name|HttpString
name|GROUPED_EXCHANGE
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelGroupedExchange"
argument_list|)
decl_stmt|;
DECL|field|HTTP_BASE_URI
specifier|public
specifier|static
specifier|final
name|HttpString
name|HTTP_BASE_URI
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelHttpBaseUri"
argument_list|)
decl_stmt|;
DECL|field|HTTP_CHARACTER_ENCODING
specifier|public
specifier|static
specifier|final
name|HttpString
name|HTTP_CHARACTER_ENCODING
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelHttpCharacterEncoding"
argument_list|)
decl_stmt|;
DECL|field|HTTP_METHOD
specifier|public
specifier|static
specifier|final
name|HttpString
name|HTTP_METHOD
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelHttpMethod"
argument_list|)
decl_stmt|;
DECL|field|HTTP_PATH
specifier|public
specifier|static
specifier|final
name|HttpString
name|HTTP_PATH
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelHttpPath"
argument_list|)
decl_stmt|;
DECL|field|HTTP_PROTOCOL_VERSION
specifier|public
specifier|static
specifier|final
name|HttpString
name|HTTP_PROTOCOL_VERSION
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelHttpProtocolVersion"
argument_list|)
decl_stmt|;
DECL|field|HTTP_QUERY
specifier|public
specifier|static
specifier|final
name|HttpString
name|HTTP_QUERY
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelHttpQuery"
argument_list|)
decl_stmt|;
DECL|field|HTTP_RAW_QUERY
specifier|public
specifier|static
specifier|final
name|HttpString
name|HTTP_RAW_QUERY
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelHttpRawQuery"
argument_list|)
decl_stmt|;
DECL|field|HTTP_RESPONSE_CODE
specifier|public
specifier|static
specifier|final
name|HttpString
name|HTTP_RESPONSE_CODE
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelHttpResponseCode"
argument_list|)
decl_stmt|;
DECL|field|HTTP_URI
specifier|public
specifier|static
specifier|final
name|HttpString
name|HTTP_URI
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelHttpUri"
argument_list|)
decl_stmt|;
DECL|field|HTTP_URL
specifier|public
specifier|static
specifier|final
name|HttpString
name|HTTP_URL
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelHttpUrl"
argument_list|)
decl_stmt|;
DECL|field|HTTP_CHUNKED
specifier|public
specifier|static
specifier|final
name|HttpString
name|HTTP_CHUNKED
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelHttpChunked"
argument_list|)
decl_stmt|;
DECL|field|HTTP_SERVLET_REQUEST
specifier|public
specifier|static
specifier|final
name|HttpString
name|HTTP_SERVLET_REQUEST
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelHttpServletRequest"
argument_list|)
decl_stmt|;
DECL|field|HTTP_SERVLET_RESPONSE
specifier|public
specifier|static
specifier|final
name|HttpString
name|HTTP_SERVLET_RESPONSE
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelHttpServletResponse"
argument_list|)
decl_stmt|;
DECL|field|INTERCEPTED_ENDPOINT
specifier|public
specifier|static
specifier|final
name|HttpString
name|INTERCEPTED_ENDPOINT
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelInterceptedEndpoint"
argument_list|)
decl_stmt|;
DECL|field|INTERCEPT_SEND_TO_ENDPOINT_WHEN_MATCHED
specifier|public
specifier|static
specifier|final
name|HttpString
name|INTERCEPT_SEND_TO_ENDPOINT_WHEN_MATCHED
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelInterceptSendToEndpointWhenMatched"
argument_list|)
decl_stmt|;
DECL|field|LANGUAGE_SCRIPT
specifier|public
specifier|static
specifier|final
name|HttpString
name|LANGUAGE_SCRIPT
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelLanguageScript"
argument_list|)
decl_stmt|;
DECL|field|LOG_DEBUG_BODY_MAX_CHARS
specifier|public
specifier|static
specifier|final
name|HttpString
name|LOG_DEBUG_BODY_MAX_CHARS
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelLogDebugBodyMaxChars"
argument_list|)
decl_stmt|;
DECL|field|LOG_DEBUG_BODY_STREAMS
specifier|public
specifier|static
specifier|final
name|HttpString
name|LOG_DEBUG_BODY_STREAMS
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelLogDebugStreams"
argument_list|)
decl_stmt|;
DECL|field|LOOP_INDEX
specifier|public
specifier|static
specifier|final
name|HttpString
name|LOOP_INDEX
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelLoopIndex"
argument_list|)
decl_stmt|;
DECL|field|LOOP_SIZE
specifier|public
specifier|static
specifier|final
name|HttpString
name|LOOP_SIZE
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelLoopSize"
argument_list|)
decl_stmt|;
DECL|field|MAXIMUM_CACHE_POOL_SIZE
specifier|public
specifier|static
specifier|final
name|HttpString
name|MAXIMUM_CACHE_POOL_SIZE
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelMaximumCachePoolSize"
argument_list|)
decl_stmt|;
DECL|field|MAXIMUM_ENDPOINT_CACHE_SIZE
specifier|public
specifier|static
specifier|final
name|HttpString
name|MAXIMUM_ENDPOINT_CACHE_SIZE
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelMaximumEndpointCacheSize"
argument_list|)
decl_stmt|;
DECL|field|MESSAGE_HISTORY
specifier|public
specifier|static
specifier|final
name|HttpString
name|MESSAGE_HISTORY
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelMessageHistory"
argument_list|)
decl_stmt|;
DECL|field|MULTICAST_INDEX
specifier|public
specifier|static
specifier|final
name|HttpString
name|MULTICAST_INDEX
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelMulticastIndex"
argument_list|)
decl_stmt|;
DECL|field|MULTICAST_COMPLETE
specifier|public
specifier|static
specifier|final
name|HttpString
name|MULTICAST_COMPLETE
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelMulticastComplete"
argument_list|)
decl_stmt|;
DECL|field|NOTIFY_EVENT
specifier|public
specifier|static
specifier|final
name|HttpString
name|NOTIFY_EVENT
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelNotifyEvent"
argument_list|)
decl_stmt|;
DECL|field|ON_COMPLETION
specifier|public
specifier|static
specifier|final
name|HttpString
name|ON_COMPLETION
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelOnCompletion"
argument_list|)
decl_stmt|;
DECL|field|OVERRULE_FILE_NAME
specifier|public
specifier|static
specifier|final
name|HttpString
name|OVERRULE_FILE_NAME
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelOverruleFileName"
argument_list|)
decl_stmt|;
DECL|field|PARENT_UNIT_OF_WORK
specifier|public
specifier|static
specifier|final
name|HttpString
name|PARENT_UNIT_OF_WORK
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelParentUnitOfWork"
argument_list|)
decl_stmt|;
DECL|field|RECIPIENT_LIST_ENDPOINT
specifier|public
specifier|static
specifier|final
name|HttpString
name|RECIPIENT_LIST_ENDPOINT
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelRecipientListEndpoint"
argument_list|)
decl_stmt|;
DECL|field|RECEIVED_TIMESTAMP
specifier|public
specifier|static
specifier|final
name|HttpString
name|RECEIVED_TIMESTAMP
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelReceivedTimestamp"
argument_list|)
decl_stmt|;
DECL|field|REDELIVERED
specifier|public
specifier|static
specifier|final
name|HttpString
name|REDELIVERED
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelRedelivered"
argument_list|)
decl_stmt|;
DECL|field|REDELIVERY_COUNTER
specifier|public
specifier|static
specifier|final
name|HttpString
name|REDELIVERY_COUNTER
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelRedeliveryCounter"
argument_list|)
decl_stmt|;
DECL|field|REDELIVERY_MAX_COUNTER
specifier|public
specifier|static
specifier|final
name|HttpString
name|REDELIVERY_MAX_COUNTER
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelRedeliveryMaxCounter"
argument_list|)
decl_stmt|;
DECL|field|REDELIVERY_EXHAUSTED
specifier|public
specifier|static
specifier|final
name|HttpString
name|REDELIVERY_EXHAUSTED
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelRedeliveryExhausted"
argument_list|)
decl_stmt|;
DECL|field|REDELIVERY_DELAY
specifier|public
specifier|static
specifier|final
name|HttpString
name|REDELIVERY_DELAY
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelRedeliveryDelay"
argument_list|)
decl_stmt|;
DECL|field|ROLLBACK_ONLY
specifier|public
specifier|static
specifier|final
name|HttpString
name|ROLLBACK_ONLY
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelRollbackOnly"
argument_list|)
decl_stmt|;
DECL|field|ROLLBACK_ONLY_LAST
specifier|public
specifier|static
specifier|final
name|HttpString
name|ROLLBACK_ONLY_LAST
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelRollbackOnlyLast"
argument_list|)
decl_stmt|;
DECL|field|ROUTE_STOP
specifier|public
specifier|static
specifier|final
name|HttpString
name|ROUTE_STOP
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelRouteStop"
argument_list|)
decl_stmt|;
DECL|field|SAXPARSER_FACTORY
specifier|public
specifier|static
specifier|final
name|HttpString
name|SAXPARSER_FACTORY
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelSAXParserFactory"
argument_list|)
decl_stmt|;
DECL|field|SOAP_ACTION
specifier|public
specifier|static
specifier|final
name|HttpString
name|SOAP_ACTION
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelSoapAction"
argument_list|)
decl_stmt|;
DECL|field|SKIP_GZIP_ENCODING
specifier|public
specifier|static
specifier|final
name|HttpString
name|SKIP_GZIP_ENCODING
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelSkipGzipEncoding"
argument_list|)
decl_stmt|;
DECL|field|SKIP_WWW_FORM_URLENCODED
specifier|public
specifier|static
specifier|final
name|HttpString
name|SKIP_WWW_FORM_URLENCODED
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelSkipWwwFormUrlEncoding"
argument_list|)
decl_stmt|;
DECL|field|SLIP_ENDPOINT
specifier|public
specifier|static
specifier|final
name|HttpString
name|SLIP_ENDPOINT
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelSlipEndpoint"
argument_list|)
decl_stmt|;
DECL|field|SPLIT_INDEX
specifier|public
specifier|static
specifier|final
name|HttpString
name|SPLIT_INDEX
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelSplitIndex"
argument_list|)
decl_stmt|;
DECL|field|SPLIT_COMPLETE
specifier|public
specifier|static
specifier|final
name|HttpString
name|SPLIT_COMPLETE
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelSplitComplete"
argument_list|)
decl_stmt|;
DECL|field|SPLIT_SIZE
specifier|public
specifier|static
specifier|final
name|HttpString
name|SPLIT_SIZE
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelSplitSize"
argument_list|)
decl_stmt|;
DECL|field|TIMER_COUNTER
specifier|public
specifier|static
specifier|final
name|HttpString
name|TIMER_COUNTER
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelTimerCounter"
argument_list|)
decl_stmt|;
DECL|field|TIMER_FIRED_TIME
specifier|public
specifier|static
specifier|final
name|HttpString
name|TIMER_FIRED_TIME
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelTimerFiredTime"
argument_list|)
decl_stmt|;
DECL|field|TIMER_NAME
specifier|public
specifier|static
specifier|final
name|HttpString
name|TIMER_NAME
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelTimerName"
argument_list|)
decl_stmt|;
DECL|field|TIMER_PERIOD
specifier|public
specifier|static
specifier|final
name|HttpString
name|TIMER_PERIOD
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelTimerPeriod"
argument_list|)
decl_stmt|;
DECL|field|TIMER_TIME
specifier|public
specifier|static
specifier|final
name|HttpString
name|TIMER_TIME
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelTimerTime"
argument_list|)
decl_stmt|;
DECL|field|TO_ENDPOINT
specifier|public
specifier|static
specifier|final
name|HttpString
name|TO_ENDPOINT
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelToEndpoint"
argument_list|)
decl_stmt|;
DECL|field|TRACE_EVENT
specifier|public
specifier|static
specifier|final
name|HttpString
name|TRACE_EVENT
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelTraceEvent"
argument_list|)
decl_stmt|;
DECL|field|TRACE_EVENT_NODE_ID
specifier|public
specifier|static
specifier|final
name|HttpString
name|TRACE_EVENT_NODE_ID
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelTraceEventNodeId"
argument_list|)
decl_stmt|;
DECL|field|TRACE_EVENT_TIMESTAMP
specifier|public
specifier|static
specifier|final
name|HttpString
name|TRACE_EVENT_TIMESTAMP
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelTraceEventTimestamp"
argument_list|)
decl_stmt|;
DECL|field|TRACE_EVENT_EXCHANGE
specifier|public
specifier|static
specifier|final
name|HttpString
name|TRACE_EVENT_EXCHANGE
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelTraceEventExchange"
argument_list|)
decl_stmt|;
DECL|field|TRY_ROUTE_BLOCK
specifier|public
specifier|static
specifier|final
name|HttpString
name|TRY_ROUTE_BLOCK
init|=
operator|new
name|HttpString
argument_list|(
literal|"TryRouteBlock"
argument_list|)
decl_stmt|;
DECL|field|TRANSFER_ENCODING
specifier|public
specifier|static
specifier|final
name|HttpString
name|TRANSFER_ENCODING
init|=
operator|new
name|HttpString
argument_list|(
literal|"Transfer-Encoding"
argument_list|)
decl_stmt|;
DECL|field|UNIT_OF_WORK_EXHAUSTED
specifier|public
specifier|static
specifier|final
name|HttpString
name|UNIT_OF_WORK_EXHAUSTED
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelUnitOfWorkExhausted"
argument_list|)
decl_stmt|;
comment|/**      * @deprecated UNIT_OF_WORK_PROCESS_SYNC is not in use and will be removed in future Camel release      */
annotation|@
name|Deprecated
DECL|field|UNIT_OF_WORK_PROCESS_SYNC
specifier|public
specifier|static
specifier|final
name|HttpString
name|UNIT_OF_WORK_PROCESS_SYNC
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelUnitOfWorkProcessSync"
argument_list|)
decl_stmt|;
DECL|field|XSLT_FILE_NAME
specifier|public
specifier|static
specifier|final
name|HttpString
name|XSLT_FILE_NAME
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelXsltFileName"
argument_list|)
decl_stmt|;
DECL|field|XSLT_ERROR
specifier|public
specifier|static
specifier|final
name|HttpString
name|XSLT_ERROR
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelXsltError"
argument_list|)
decl_stmt|;
DECL|field|XSLT_FATAL_ERROR
specifier|public
specifier|static
specifier|final
name|HttpString
name|XSLT_FATAL_ERROR
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelXsltFatalError"
argument_list|)
decl_stmt|;
DECL|field|XSLT_WARNING
specifier|public
specifier|static
specifier|final
name|HttpString
name|XSLT_WARNING
init|=
operator|new
name|HttpString
argument_list|(
literal|"CamelXsltWarning"
argument_list|)
decl_stmt|;
DECL|method|ExchangeHeaders ()
specifier|private
name|ExchangeHeaders
parameter_list|()
block|{     }
block|}
end_class

end_unit

