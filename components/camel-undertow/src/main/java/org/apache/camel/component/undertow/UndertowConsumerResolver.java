begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.component.undertow
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|undertow
package|;
end_package

begin_import
import|import
name|io
operator|.
name|undertow
operator|.
name|server
operator|.
name|HttpServerExchange
import|;
end_import

begin_import
import|import
name|io
operator|.
name|undertow
operator|.
name|util
operator|.
name|HttpString
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|RestConsumerContextPathMatcher
import|;
end_import

begin_class
DECL|class|UndertowConsumerResolver
specifier|public
class|class
name|UndertowConsumerResolver
block|{
DECL|method|resolve (HttpServerExchange exchange, Map<String, UndertowConsumer> consumers)
specifier|public
name|UndertowConsumer
name|resolve
parameter_list|(
name|HttpServerExchange
name|exchange
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|UndertowConsumer
argument_list|>
name|consumers
parameter_list|)
block|{
name|UndertowConsumer
name|answer
init|=
literal|null
decl_stmt|;
name|String
name|path
init|=
name|exchange
operator|.
name|getRequestPath
argument_list|()
decl_stmt|;
if|if
condition|(
name|path
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
name|HttpString
name|method
init|=
name|exchange
operator|.
name|getRequestMethod
argument_list|()
decl_stmt|;
if|if
condition|(
name|method
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
name|List
argument_list|<
name|RestConsumerContextPathMatcher
operator|.
name|ConsumerPath
argument_list|>
name|paths
init|=
operator|new
name|ArrayList
argument_list|<
name|RestConsumerContextPathMatcher
operator|.
name|ConsumerPath
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
specifier|final
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|UndertowConsumer
argument_list|>
name|entry
range|:
name|consumers
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|paths
operator|.
name|add
argument_list|(
operator|new
name|RestConsumerContextPathMatcher
operator|.
name|ConsumerPath
argument_list|<
name|UndertowConsumer
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|getRestrictMethod
parameter_list|()
block|{
return|return
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|getEndpoint
argument_list|()
operator|.
name|getHttpMethodRestrict
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getConsumerPath
parameter_list|()
block|{
return|return
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|getEndpoint
argument_list|()
operator|.
name|getHttpURI
argument_list|()
operator|.
name|getPath
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|UndertowConsumer
name|getConsumer
parameter_list|()
block|{
return|return
name|entry
operator|.
name|getValue
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|RestConsumerContextPathMatcher
operator|.
name|ConsumerPath
argument_list|<
name|UndertowConsumer
argument_list|>
name|best
init|=
name|RestConsumerContextPathMatcher
operator|.
name|matchBestPath
argument_list|(
name|method
operator|.
name|toString
argument_list|()
argument_list|,
name|path
argument_list|,
name|paths
argument_list|)
decl_stmt|;
if|if
condition|(
name|best
operator|!=
literal|null
condition|)
block|{
name|answer
operator|=
name|best
operator|.
name|getConsumer
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|answer
operator|==
literal|null
condition|)
block|{
for|for
control|(
name|String
name|key
range|:
name|consumers
operator|.
name|keySet
argument_list|()
control|)
block|{
name|String
name|consumerPath
init|=
name|consumers
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|getEndpoint
argument_list|()
operator|.
name|getHttpURI
argument_list|()
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|UndertowConsumer
name|consumer
init|=
name|consumers
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|boolean
name|matchOnUriPrefix
init|=
name|consumer
operator|.
name|getEndpoint
argument_list|()
operator|.
name|getMatchOnUriPrefix
argument_list|()
decl_stmt|;
if|if
condition|(
name|RestConsumerContextPathMatcher
operator|.
name|matchPath
argument_list|(
name|path
argument_list|,
name|consumerPath
argument_list|,
name|matchOnUriPrefix
argument_list|)
condition|)
block|{
name|answer
operator|=
name|consumers
operator|.
name|get
argument_list|(
name|key
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
return|return
name|answer
return|;
block|}
block|}
end_class

end_unit

