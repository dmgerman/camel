begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.undertow
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|undertow
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
DECL|class|UndertowEndpointTest
specifier|public
class|class
name|UndertowEndpointTest
block|{
DECL|field|endpoint
name|UndertowEndpoint
name|endpoint
decl_stmt|;
DECL|field|withSlash
specifier|final
name|URI
name|withSlash
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://0.0.0.0:8080/"
argument_list|)
decl_stmt|;
DECL|field|withoutSlash
specifier|final
name|URI
name|withoutSlash
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://0.0.0.0:8080"
argument_list|)
decl_stmt|;
annotation|@
name|Before
DECL|method|createEndpoint ()
specifier|public
name|void
name|createEndpoint
parameter_list|()
throws|throws
name|URISyntaxException
block|{
name|endpoint
operator|=
operator|new
name|UndertowEndpoint
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|emptyPathShouldBeReplacedWithSlash ()
specifier|public
name|void
name|emptyPathShouldBeReplacedWithSlash
parameter_list|()
block|{
name|endpoint
operator|.
name|setHttpURI
argument_list|(
name|withoutSlash
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|withSlash
argument_list|,
name|endpoint
operator|.
name|getHttpURI
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|nonEmptyPathShouldBeKeptSame ()
specifier|public
name|void
name|nonEmptyPathShouldBeKeptSame
parameter_list|()
block|{
name|endpoint
operator|.
name|setHttpURI
argument_list|(
name|withSlash
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|withSlash
argument_list|,
name|endpoint
operator|.
name|getHttpURI
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

