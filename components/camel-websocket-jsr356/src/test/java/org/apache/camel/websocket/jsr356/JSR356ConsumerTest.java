begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.websocket.jsr356
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|websocket
operator|.
name|jsr356
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|enterprise
operator|.
name|context
operator|.
name|Dependent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|websocket
operator|.
name|ClientEndpointConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|websocket
operator|.
name|CloseReason
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|websocket
operator|.
name|ContainerProvider
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|websocket
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|websocket
operator|.
name|EndpointConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|websocket
operator|.
name|OnOpen
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|websocket
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|websocket
operator|.
name|WebSocketContainer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|websocket
operator|.
name|server
operator|.
name|ServerEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|meecrowave
operator|.
name|Meecrowave
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|meecrowave
operator|.
name|junit
operator|.
name|MeecrowaveRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestName
import|;
end_import

begin_class
DECL|class|JSR356ConsumerTest
specifier|public
class|class
name|JSR356ConsumerTest
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Rule
DECL|field|servlet
specifier|public
specifier|final
name|MeecrowaveRule
name|servlet
init|=
operator|new
name|MeecrowaveRule
argument_list|(
operator|new
name|Meecrowave
operator|.
name|Builder
argument_list|()
block|{
block|{
name|randomHttpPort
parameter_list|()
constructor_decl|;
name|setScanningPackageIncludes
argument_list|(
literal|"org.apache.camel.websocket.jsr356.JSR356ConsumerTest$"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|,
literal|""
argument_list|)
decl_stmt|;
annotation|@
name|Rule
DECL|field|testName
specifier|public
specifier|final
name|TestName
name|testName
init|=
operator|new
name|TestName
argument_list|()
decl_stmt|;
annotation|@
name|Test
DECL|method|ensureClientModeReceiveProperlyExchanges ()
specifier|public
name|void
name|ensureClientModeReceiveProperlyExchanges
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|message
init|=
name|ExistingServerEndpoint
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|"#"
operator|+
name|testName
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
specifier|final
name|MockEndpoint
name|mockEndpoint
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:"
operator|+
name|testName
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|mockEndpoint
operator|.
name|expectedBodiesReceived
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|ExistingServerEndpoint
operator|.
name|self
operator|.
name|doSend
argument_list|()
expr_stmt|;
comment|// to avoid lifecycle issue suring
comment|// startup we send the message
comment|// only here
name|mockEndpoint
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
comment|// note that this test leaks a connection
block|}
annotation|@
name|Test
DECL|method|ensureServerModeReceiveProperlyExchanges ()
specifier|public
name|void
name|ensureServerModeReceiveProperlyExchanges
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|message
init|=
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"#"
operator|+
name|testName
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
specifier|final
name|MockEndpoint
name|mockEndpoint
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:"
operator|+
name|testName
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|mockEndpoint
operator|.
name|expectedBodiesReceived
argument_list|(
name|message
argument_list|)
expr_stmt|;
specifier|final
name|WebSocketContainer
name|container
init|=
name|ContainerProvider
operator|.
name|getWebSocketContainer
argument_list|()
decl_stmt|;
specifier|final
name|Session
name|session
init|=
name|container
operator|.
name|connectToServer
argument_list|(
operator|new
name|Endpoint
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onOpen
parameter_list|(
specifier|final
name|Session
name|session
parameter_list|,
specifier|final
name|EndpointConfig
name|config
parameter_list|)
block|{
comment|// no-op
block|}
block|}
argument_list|,
name|ClientEndpointConfig
operator|.
name|Builder
operator|.
name|create
argument_list|()
operator|.
name|build
argument_list|()
argument_list|,
name|URI
operator|.
name|create
argument_list|(
literal|"ws://localhost:"
operator|+
name|servlet
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getHttpPort
argument_list|()
operator|+
literal|"/test"
argument_list|)
argument_list|)
decl_stmt|;
name|session
operator|.
name|getBasicRemote
argument_list|()
operator|.
name|sendText
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|session
operator|.
name|close
argument_list|(
operator|new
name|CloseReason
argument_list|(
name|CloseReason
operator|.
name|CloseCodes
operator|.
name|GOING_AWAY
argument_list|,
literal|"bye"
argument_list|)
argument_list|)
expr_stmt|;
name|mockEndpoint
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"websocket-jsr356:///test"
argument_list|)
operator|.
name|id
argument_list|(
literal|"camel_consumer_acts_as_server"
argument_list|)
operator|.
name|convertBodyTo
argument_list|(
name|String
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:ensureServerModeReceiveProperlyExchanges"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"websocket-jsr356://ws://localhost:"
operator|+
name|servlet
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getHttpPort
argument_list|()
operator|+
literal|"/existingserver"
argument_list|)
operator|.
name|id
argument_list|(
literal|"camel_consumer_acts_as_client"
argument_list|)
operator|.
name|convertBodyTo
argument_list|(
name|String
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:ensureClientModeReceiveProperlyExchanges"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
annotation|@
name|Dependent
annotation|@
name|ServerEndpoint
argument_list|(
literal|"/existingserver"
argument_list|)
DECL|class|ExistingServerEndpoint
specifier|public
specifier|static
class|class
name|ExistingServerEndpoint
block|{
DECL|field|self
specifier|private
specifier|static
name|ExistingServerEndpoint
name|self
decl_stmt|;
DECL|field|session
specifier|private
name|Session
name|session
decl_stmt|;
annotation|@
name|OnOpen
DECL|method|onOpen (final Session session)
specifier|public
name|void
name|onOpen
parameter_list|(
specifier|final
name|Session
name|session
parameter_list|)
block|{
name|this
operator|.
name|session
operator|=
name|session
expr_stmt|;
name|self
operator|=
name|this
expr_stmt|;
block|}
DECL|method|doSend ()
name|void
name|doSend
parameter_list|()
throws|throws
name|IOException
block|{
name|session
operator|.
name|getBasicRemote
argument_list|()
operator|.
name|sendText
argument_list|(
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"#ensureClientModeReceiveProperlyExchanges"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

