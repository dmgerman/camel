begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.web.htmlunit
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|web
operator|.
name|htmlunit
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|web
operator|.
name|Main
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openqa
operator|.
name|selenium
operator|.
name|WebDriver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openqa
operator|.
name|selenium
operator|.
name|WebElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openqa
operator|.
name|selenium
operator|.
name|By
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openqa
operator|.
name|selenium
operator|.
name|htmlunit
operator|.
name|HtmlUnitDriver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openqa
operator|.
name|selenium
operator|.
name|lift
operator|.
name|HamcrestWebDriverTestCase
import|;
end_import

begin_import
import|import
name|com
operator|.
name|gargoylesoftware
operator|.
name|htmlunit
operator|.
name|WebClient
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * @version $Revision: 1.1 $  */
end_comment

begin_class
DECL|class|HtmlTestSupport
specifier|public
specifier|abstract
class|class
name|HtmlTestSupport
extends|extends
name|HamcrestWebDriverTestCase
block|{
DECL|field|webDriver
specifier|protected
name|WebDriver
name|webDriver
decl_stmt|;
comment|/**      * Go to the home page of the web application      */
DECL|method|goToRootPage ()
specifier|protected
name|void
name|goToRootPage
parameter_list|()
block|{
name|goTo
argument_list|(
name|Main
operator|.
name|getRootUrl
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setUp ()
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|Main
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|tearDown ()
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|Main
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createDriver ()
specifier|protected
name|WebDriver
name|createDriver
parameter_list|()
block|{
if|if
condition|(
name|webDriver
operator|==
literal|null
condition|)
block|{
name|webDriver
operator|=
operator|new
name|HtmlUnitDriver
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|WebClient
name|modifyWebClient
parameter_list|(
name|WebClient
name|webClient
parameter_list|)
block|{
name|WebClient
name|answer
init|=
name|super
operator|.
name|modifyWebClient
argument_list|(
name|webClient
argument_list|)
decl_stmt|;
name|answer
operator|.
name|addRequestHeader
argument_list|(
literal|"Accept"
argument_list|,
literal|"text/html"
argument_list|)
expr_stmt|;
name|answer
operator|.
name|getCookieManager
argument_list|()
operator|.
name|setCookiesEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|answer
return|;
block|}
block|}
expr_stmt|;
block|}
return|return
name|webDriver
return|;
block|}
comment|// TODO remove these methods if/when they are available in the base class!!!
comment|//-------------------------------------------------------------------------
DECL|method|getWebDriver ()
specifier|protected
name|WebDriver
name|getWebDriver
parameter_list|()
block|{
return|return
name|webDriver
return|;
block|}
DECL|method|findElement (By by)
specifier|public
name|WebElement
name|findElement
parameter_list|(
name|By
name|by
parameter_list|)
block|{
return|return
name|getWebDriver
argument_list|()
operator|.
name|findElement
argument_list|(
name|by
argument_list|)
return|;
block|}
DECL|method|findElements (By by)
specifier|public
name|List
argument_list|<
name|WebElement
argument_list|>
name|findElements
parameter_list|(
name|By
name|by
parameter_list|)
block|{
return|return
name|getWebDriver
argument_list|()
operator|.
name|findElements
argument_list|(
name|by
argument_list|)
return|;
block|}
DECL|method|get (String s)
specifier|public
name|void
name|get
parameter_list|(
name|String
name|s
parameter_list|)
block|{
name|getWebDriver
argument_list|()
operator|.
name|get
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
DECL|method|getCurrentUrl ()
specifier|public
name|String
name|getCurrentUrl
parameter_list|()
block|{
return|return
name|getWebDriver
argument_list|()
operator|.
name|getCurrentUrl
argument_list|()
return|;
block|}
DECL|method|getPageSource ()
specifier|public
name|String
name|getPageSource
parameter_list|()
block|{
return|return
name|getWebDriver
argument_list|()
operator|.
name|getPageSource
argument_list|()
return|;
block|}
DECL|method|getTitle ()
specifier|public
name|String
name|getTitle
parameter_list|()
block|{
return|return
name|getWebDriver
argument_list|()
operator|.
name|getTitle
argument_list|()
return|;
block|}
DECL|method|getWindowHandle ()
specifier|public
name|String
name|getWindowHandle
parameter_list|()
block|{
return|return
name|getWebDriver
argument_list|()
operator|.
name|getWindowHandle
argument_list|()
return|;
block|}
DECL|method|switchTo ()
specifier|public
name|WebDriver
operator|.
name|TargetLocator
name|switchTo
parameter_list|()
block|{
return|return
name|getWebDriver
argument_list|()
operator|.
name|switchTo
argument_list|()
return|;
block|}
block|}
end_class

end_unit

