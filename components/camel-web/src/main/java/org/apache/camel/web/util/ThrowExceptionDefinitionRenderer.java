begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.web.util
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|web
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|ProcessorDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|ThrowExceptionDefinition
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|ThrowExceptionDefinitionRenderer
specifier|public
specifier|final
class|class
name|ThrowExceptionDefinitionRenderer
block|{
DECL|method|ThrowExceptionDefinitionRenderer ()
specifier|private
name|ThrowExceptionDefinitionRenderer
parameter_list|()
block|{
comment|// Utility class, no public or protected default constructor
block|}
DECL|method|render (StringBuilder buffer, ProcessorDefinition processor)
specifier|public
specifier|static
name|void
name|render
parameter_list|(
name|StringBuilder
name|buffer
parameter_list|,
name|ProcessorDefinition
name|processor
parameter_list|)
block|{
name|ThrowExceptionDefinition
name|throwExp
init|=
operator|(
name|ThrowExceptionDefinition
operator|)
name|processor
decl_stmt|;
name|buffer
operator|.
name|append
argument_list|(
literal|"."
argument_list|)
operator|.
name|append
argument_list|(
name|throwExp
operator|.
name|getShortName
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"("
argument_list|)
expr_stmt|;
name|String
name|expName
init|=
name|throwExp
operator|.
name|getException
argument_list|()
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
decl_stmt|;
name|String
name|msg
init|=
name|throwExp
operator|.
name|getException
argument_list|()
operator|.
name|getMessage
argument_list|()
decl_stmt|;
name|buffer
operator|.
name|append
argument_list|(
literal|"new "
argument_list|)
operator|.
name|append
argument_list|(
name|expName
argument_list|)
operator|.
name|append
argument_list|(
literal|"(\""
argument_list|)
operator|.
name|append
argument_list|(
name|msg
argument_list|)
operator|.
name|append
argument_list|(
literal|"\"))"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

