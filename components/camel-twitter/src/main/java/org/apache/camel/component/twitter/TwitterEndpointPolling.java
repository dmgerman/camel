begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.twitter
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|twitter
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Consumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Producer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|twitter
operator|.
name|consumer
operator|.
name|Twitter4JConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|twitter
operator|.
name|consumer
operator|.
name|TwitterConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|twitter
operator|.
name|consumer
operator|.
name|TwitterConsumerPolling
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|twitter
operator|.
name|util
operator|.
name|TwitterProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultPollingEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|twitter4j
operator|.
name|Twitter
import|;
end_import

begin_import
import|import
name|twitter4j
operator|.
name|TwitterFactory
import|;
end_import

begin_comment
comment|/**  * Scheduled polling endpoint  *   */
end_comment

begin_class
DECL|class|TwitterEndpointPolling
specifier|public
class|class
name|TwitterEndpointPolling
extends|extends
name|DefaultPollingEndpoint
implements|implements
name|TwitterEndpoint
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TwitterEndpointPolling
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|twitter
specifier|private
name|Twitter
name|twitter
decl_stmt|;
DECL|field|properties
specifier|private
name|TwitterProperties
name|properties
decl_stmt|;
DECL|method|TwitterEndpointPolling (String uri, TwitterComponent component, TwitterProperties properties)
specifier|public
name|TwitterEndpointPolling
parameter_list|(
name|String
name|uri
parameter_list|,
name|TwitterComponent
name|component
parameter_list|,
name|TwitterProperties
name|properties
parameter_list|)
block|{
name|super
argument_list|(
name|uri
argument_list|,
name|component
argument_list|)
expr_stmt|;
name|this
operator|.
name|properties
operator|=
name|properties
expr_stmt|;
block|}
DECL|method|createConsumer (Processor processor)
specifier|public
name|Consumer
name|createConsumer
parameter_list|(
name|Processor
name|processor
parameter_list|)
throws|throws
name|Exception
block|{
name|Twitter4JConsumer
name|twitter4jConsumer
init|=
name|Twitter4JFactory
operator|.
name|getConsumer
argument_list|(
name|this
argument_list|,
name|getEndpointUri
argument_list|()
argument_list|)
decl_stmt|;
name|TwitterConsumer
name|tc
init|=
operator|new
name|TwitterConsumerPolling
argument_list|(
name|this
argument_list|,
name|processor
argument_list|,
name|twitter4jConsumer
argument_list|)
decl_stmt|;
name|configureConsumer
argument_list|(
name|tc
argument_list|)
expr_stmt|;
return|return
name|tc
return|;
block|}
DECL|method|createProducer ()
specifier|public
name|Producer
name|createProducer
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|Twitter4JFactory
operator|.
name|getProducer
argument_list|(
name|this
argument_list|,
name|getEndpointUri
argument_list|()
argument_list|)
return|;
block|}
DECL|method|initiate ()
specifier|public
name|void
name|initiate
parameter_list|()
block|{
name|properties
operator|.
name|checkComplete
argument_list|()
expr_stmt|;
try|try
block|{
name|twitter
operator|=
operator|new
name|TwitterFactory
argument_list|(
name|properties
operator|.
name|getConfiguration
argument_list|()
argument_list|)
operator|.
name|getInstance
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Could not instantiate Twitter!  Exception: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getTwitter ()
specifier|public
name|Twitter
name|getTwitter
parameter_list|()
block|{
return|return
name|twitter
return|;
block|}
DECL|method|isSingleton ()
specifier|public
name|boolean
name|isSingleton
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
DECL|method|getProperties ()
specifier|public
name|TwitterProperties
name|getProperties
parameter_list|()
block|{
return|return
name|properties
return|;
block|}
block|}
end_class

end_unit

