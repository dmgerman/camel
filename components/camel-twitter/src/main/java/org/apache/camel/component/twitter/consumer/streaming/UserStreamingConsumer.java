begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.twitter.consumer.streaming
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|twitter
operator|.
name|consumer
operator|.
name|streaming
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|twitter
operator|.
name|TwitterConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|twitter
operator|.
name|TwitterEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|twitter
operator|.
name|TwitterHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|twitter
operator|.
name|consumer
operator|.
name|TwitterEventType
import|;
end_import

begin_import
import|import
name|twitter4j
operator|.
name|DirectMessage
import|;
end_import

begin_import
import|import
name|twitter4j
operator|.
name|StallWarning
import|;
end_import

begin_import
import|import
name|twitter4j
operator|.
name|Status
import|;
end_import

begin_import
import|import
name|twitter4j
operator|.
name|User
import|;
end_import

begin_import
import|import
name|twitter4j
operator|.
name|UserList
import|;
end_import

begin_import
import|import
name|twitter4j
operator|.
name|UserStreamListener
import|;
end_import

begin_class
DECL|class|UserStreamingConsumer
specifier|public
class|class
name|UserStreamingConsumer
extends|extends
name|AbstractStreamingConsumer
implements|implements
name|UserStreamListener
block|{
DECL|method|UserStreamingConsumer (TwitterEndpoint endpoint)
specifier|public
name|UserStreamingConsumer
parameter_list|(
name|TwitterEndpoint
name|endpoint
parameter_list|)
block|{
name|super
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|start ()
specifier|public
name|void
name|start
parameter_list|()
block|{
name|getTwitterStream
argument_list|()
operator|.
name|user
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onDeletionNotice (long directMessageId, long userId)
specifier|public
name|void
name|onDeletionNotice
parameter_list|(
name|long
name|directMessageId
parameter_list|,
name|long
name|userId
parameter_list|)
block|{
comment|// noop
block|}
annotation|@
name|Override
DECL|method|onFriendList (long[] friendIds)
specifier|public
name|void
name|onFriendList
parameter_list|(
name|long
index|[]
name|friendIds
parameter_list|)
block|{
comment|// noop
block|}
annotation|@
name|Override
DECL|method|onFavorite (User source, User target, Status favoritedStatus)
specifier|public
name|void
name|onFavorite
parameter_list|(
name|User
name|source
parameter_list|,
name|User
name|target
parameter_list|,
name|Status
name|favoritedStatus
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|TwitterEventType
operator|.
name|FAVORITE
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|,
name|favoritedStatus
argument_list|)
decl_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|1
argument_list|,
name|source
argument_list|,
literal|"source"
argument_list|)
expr_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|2
argument_list|,
name|target
argument_list|,
literal|"target"
argument_list|)
expr_stmt|;
name|onEvent
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onUnfavorite (User source, User target, Status unfavoritedStatus)
specifier|public
name|void
name|onUnfavorite
parameter_list|(
name|User
name|source
parameter_list|,
name|User
name|target
parameter_list|,
name|Status
name|unfavoritedStatus
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|TwitterEventType
operator|.
name|UNFAVORITE
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|,
name|unfavoritedStatus
argument_list|)
decl_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|1
argument_list|,
name|source
argument_list|,
literal|"source"
argument_list|)
expr_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|2
argument_list|,
name|target
argument_list|,
literal|"target"
argument_list|)
expr_stmt|;
name|onEvent
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onFollow (User source, User followedUser)
specifier|public
name|void
name|onFollow
parameter_list|(
name|User
name|source
parameter_list|,
name|User
name|followedUser
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|TwitterEventType
operator|.
name|FOLLOW
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|)
decl_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|1
argument_list|,
name|source
argument_list|,
literal|"source"
argument_list|)
expr_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|2
argument_list|,
name|followedUser
argument_list|,
literal|"followed"
argument_list|)
expr_stmt|;
name|onEvent
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onUnfollow (User source, User unfollowedUser)
specifier|public
name|void
name|onUnfollow
parameter_list|(
name|User
name|source
parameter_list|,
name|User
name|unfollowedUser
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|TwitterEventType
operator|.
name|UNFOLLOW
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|)
decl_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|1
argument_list|,
name|source
argument_list|,
literal|"source"
argument_list|)
expr_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|2
argument_list|,
name|unfollowedUser
argument_list|,
literal|"unfollowed"
argument_list|)
expr_stmt|;
name|onEvent
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onDirectMessage (DirectMessage directMessage)
specifier|public
name|void
name|onDirectMessage
parameter_list|(
name|DirectMessage
name|directMessage
parameter_list|)
block|{
name|onEvent
argument_list|(
name|TwitterEventType
operator|.
name|DIRECT_MESSAGE
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|,
name|directMessage
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onUserListMemberAddition (User addedMember, User listOwner, UserList list)
specifier|public
name|void
name|onUserListMemberAddition
parameter_list|(
name|User
name|addedMember
parameter_list|,
name|User
name|listOwner
parameter_list|,
name|UserList
name|list
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|TwitterEventType
operator|.
name|USERLIST_MEMBER_ADDITION
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|,
name|list
argument_list|)
decl_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|1
argument_list|,
name|addedMember
argument_list|,
literal|"addedMember"
argument_list|)
expr_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|2
argument_list|,
name|listOwner
argument_list|,
literal|"listOwner"
argument_list|)
expr_stmt|;
name|onEvent
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onUserListMemberDeletion (User deletedMember, User listOwner, UserList list)
specifier|public
name|void
name|onUserListMemberDeletion
parameter_list|(
name|User
name|deletedMember
parameter_list|,
name|User
name|listOwner
parameter_list|,
name|UserList
name|list
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|TwitterEventType
operator|.
name|USERLIST_MEMBER_DELETION
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|,
name|list
argument_list|)
decl_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|1
argument_list|,
name|deletedMember
argument_list|,
literal|"deletedMember"
argument_list|)
expr_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|2
argument_list|,
name|listOwner
argument_list|,
literal|"listOwner"
argument_list|)
expr_stmt|;
name|onEvent
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onUserListSubscription (User subscriber, User listOwner, UserList list)
specifier|public
name|void
name|onUserListSubscription
parameter_list|(
name|User
name|subscriber
parameter_list|,
name|User
name|listOwner
parameter_list|,
name|UserList
name|list
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|TwitterEventType
operator|.
name|USERLIST_SUBSCRIPTION
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|,
name|list
argument_list|)
decl_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|1
argument_list|,
name|subscriber
argument_list|,
literal|"subscriber"
argument_list|)
expr_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|2
argument_list|,
name|listOwner
argument_list|,
literal|"listOwner"
argument_list|)
expr_stmt|;
name|onEvent
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onUserListUnsubscription (User subscriber, User listOwner, UserList list)
specifier|public
name|void
name|onUserListUnsubscription
parameter_list|(
name|User
name|subscriber
parameter_list|,
name|User
name|listOwner
parameter_list|,
name|UserList
name|list
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|TwitterEventType
operator|.
name|USERLIST_UNSUBSCRIPTION
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|,
name|list
argument_list|)
decl_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|1
argument_list|,
name|subscriber
argument_list|,
literal|"subscriber"
argument_list|)
expr_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|2
argument_list|,
name|listOwner
argument_list|,
literal|"listOwner"
argument_list|)
expr_stmt|;
name|onEvent
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onUserListCreation (User user, UserList userList)
specifier|public
name|void
name|onUserListCreation
parameter_list|(
name|User
name|user
parameter_list|,
name|UserList
name|userList
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|TwitterEventType
operator|.
name|USERLIST_CREATION
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|,
name|userList
argument_list|)
decl_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
name|user
argument_list|)
expr_stmt|;
name|onEvent
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onUserListUpdate (User user, UserList userList)
specifier|public
name|void
name|onUserListUpdate
parameter_list|(
name|User
name|user
parameter_list|,
name|UserList
name|userList
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|TwitterEventType
operator|.
name|USERLIST_UPDATE
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|,
name|userList
argument_list|)
decl_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
name|user
argument_list|)
expr_stmt|;
name|onEvent
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onUserListDeletion (User user, UserList userList)
specifier|public
name|void
name|onUserListDeletion
parameter_list|(
name|User
name|user
parameter_list|,
name|UserList
name|userList
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|TwitterEventType
operator|.
name|USERLIST_DELETETION
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|,
name|userList
argument_list|)
decl_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
name|user
argument_list|)
expr_stmt|;
name|onEvent
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onUserProfileUpdate (User user)
specifier|public
name|void
name|onUserProfileUpdate
parameter_list|(
name|User
name|user
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|TwitterEventType
operator|.
name|USER_PROFILE_UPDATE
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|)
decl_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
name|user
argument_list|)
expr_stmt|;
name|onEvent
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onUserSuspension (long suspendedUser)
specifier|public
name|void
name|onUserSuspension
parameter_list|(
name|long
name|suspendedUser
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|TwitterEventType
operator|.
name|USER_SUSPENSION
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|TwitterConstants
operator|.
name|TWITTER_USER
argument_list|,
name|suspendedUser
argument_list|)
expr_stmt|;
name|onEvent
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onUserDeletion (long deletedUser)
specifier|public
name|void
name|onUserDeletion
parameter_list|(
name|long
name|deletedUser
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|TwitterEventType
operator|.
name|USER_DELETION
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|TwitterConstants
operator|.
name|TWITTER_USER
argument_list|,
name|deletedUser
argument_list|)
expr_stmt|;
name|onEvent
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onBlock (User source, User blockedUser)
specifier|public
name|void
name|onBlock
parameter_list|(
name|User
name|source
parameter_list|,
name|User
name|blockedUser
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|TwitterEventType
operator|.
name|BLOCK
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|)
decl_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|1
argument_list|,
name|source
argument_list|,
literal|"source"
argument_list|)
expr_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|2
argument_list|,
name|blockedUser
argument_list|,
literal|"blocked"
argument_list|)
expr_stmt|;
name|onEvent
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onUnblock (User source, User unblockedUser)
specifier|public
name|void
name|onUnblock
parameter_list|(
name|User
name|source
parameter_list|,
name|User
name|unblockedUser
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|TwitterEventType
operator|.
name|UNBLOCK
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|)
decl_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|1
argument_list|,
name|source
argument_list|,
literal|"source"
argument_list|)
expr_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|2
argument_list|,
name|unblockedUser
argument_list|,
literal|"unblocked"
argument_list|)
expr_stmt|;
name|onEvent
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onStallWarning (StallWarning stallWarning)
specifier|public
name|void
name|onStallWarning
parameter_list|(
name|StallWarning
name|stallWarning
parameter_list|)
block|{
comment|// noop
block|}
annotation|@
name|Override
DECL|method|onRetweetedRetweet (User source, User target, Status retweetedStatus)
specifier|public
name|void
name|onRetweetedRetweet
parameter_list|(
name|User
name|source
parameter_list|,
name|User
name|target
parameter_list|,
name|Status
name|retweetedStatus
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|TwitterEventType
operator|.
name|RETWEETED_RETWEET
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|,
name|retweetedStatus
argument_list|)
decl_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|1
argument_list|,
name|source
argument_list|,
literal|"source"
argument_list|)
expr_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|2
argument_list|,
name|target
argument_list|,
literal|"target"
argument_list|)
expr_stmt|;
name|onEvent
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onFavoritedRetweet (User source, User target, Status favoritedRetweeet)
specifier|public
name|void
name|onFavoritedRetweet
parameter_list|(
name|User
name|source
parameter_list|,
name|User
name|target
parameter_list|,
name|Status
name|favoritedRetweeet
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|TwitterEventType
operator|.
name|FAVORITED_RETWEET
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|,
name|favoritedRetweeet
argument_list|)
decl_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|1
argument_list|,
name|source
argument_list|,
literal|"source"
argument_list|)
expr_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|2
argument_list|,
name|target
argument_list|,
literal|"target"
argument_list|)
expr_stmt|;
name|onEvent
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onQuotedTweet (User source, User target, Status quotingTweet)
specifier|public
name|void
name|onQuotedTweet
parameter_list|(
name|User
name|source
parameter_list|,
name|User
name|target
parameter_list|,
name|Status
name|quotingTweet
parameter_list|)
block|{
name|Exchange
name|exchange
init|=
name|TwitterEventType
operator|.
name|QUOTED_TWEET
operator|.
name|createExchange
argument_list|(
name|endpoint
argument_list|,
name|quotingTweet
argument_list|)
decl_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|1
argument_list|,
name|source
argument_list|,
literal|"source"
argument_list|)
expr_stmt|;
name|TwitterHelper
operator|.
name|setUserHeader
argument_list|(
name|exchange
argument_list|,
literal|2
argument_list|,
name|target
argument_list|,
literal|"target"
argument_list|)
expr_stmt|;
name|onEvent
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

