begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.twitter
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|twitter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_class
DECL|class|CamelTwitterTestSupport
specifier|public
class|class
name|CamelTwitterTestSupport
extends|extends
name|CamelTestSupport
block|{
DECL|field|consumerKey
specifier|protected
name|String
name|consumerKey
decl_stmt|;
DECL|field|consumerSecret
specifier|protected
name|String
name|consumerSecret
decl_stmt|;
DECL|field|accessToken
specifier|protected
name|String
name|accessToken
decl_stmt|;
DECL|field|accessTokenSecret
specifier|protected
name|String
name|accessTokenSecret
decl_stmt|;
DECL|method|CamelTwitterTestSupport ()
specifier|public
name|CamelTwitterTestSupport
parameter_list|()
block|{
name|URL
name|url
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/test-options.properties"
argument_list|)
decl_stmt|;
name|InputStream
name|inStream
decl_stmt|;
try|try
block|{
name|inStream
operator|=
name|url
operator|.
name|openStream
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
throw|throw
operator|new
name|IllegalAccessError
argument_list|(
literal|"test-options.properties could not be found"
argument_list|)
throw|;
block|}
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
try|try
block|{
name|properties
operator|.
name|load
argument_list|(
name|inStream
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
throw|throw
operator|new
name|IllegalAccessError
argument_list|(
literal|"test-options.properties could not be found"
argument_list|)
throw|;
block|}
name|consumerKey
operator|=
name|properties
operator|.
name|get
argument_list|(
literal|"consumer.key"
argument_list|)
operator|.
name|toString
argument_list|()
expr_stmt|;
name|consumerSecret
operator|=
name|properties
operator|.
name|get
argument_list|(
literal|"consumer.secret"
argument_list|)
operator|.
name|toString
argument_list|()
expr_stmt|;
name|accessToken
operator|=
name|properties
operator|.
name|get
argument_list|(
literal|"access.token"
argument_list|)
operator|.
name|toString
argument_list|()
expr_stmt|;
name|accessTokenSecret
operator|=
name|properties
operator|.
name|get
argument_list|(
literal|"access.token.secret"
argument_list|)
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
DECL|method|getUriTokens ()
specifier|protected
name|String
name|getUriTokens
parameter_list|()
block|{
return|return
literal|"consumerKey="
operator|+
name|consumerKey
operator|+
literal|"&consumerSecret="
operator|+
name|consumerSecret
operator|+
literal|"&accessToken="
operator|+
name|accessToken
operator|+
literal|"&accessTokenSecret="
operator|+
name|accessTokenSecret
return|;
block|}
block|}
end_class

end_unit

