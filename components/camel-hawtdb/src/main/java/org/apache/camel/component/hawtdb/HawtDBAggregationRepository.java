begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.hawtdb
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hawtdb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultExchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultExchangeHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|AggregationRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fusesource
operator|.
name|hawtdb
operator|.
name|api
operator|.
name|Index
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fusesource
operator|.
name|hawtdb
operator|.
name|api
operator|.
name|Transaction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fusesource
operator|.
name|hawtdb
operator|.
name|util
operator|.
name|buffer
operator|.
name|Buffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fusesource
operator|.
name|hawtdb
operator|.
name|util
operator|.
name|buffer
operator|.
name|DataByteArrayInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fusesource
operator|.
name|hawtdb
operator|.
name|util
operator|.
name|buffer
operator|.
name|DataByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fusesource
operator|.
name|hawtdb
operator|.
name|util
operator|.
name|marshaller
operator|.
name|Marshaller
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fusesource
operator|.
name|hawtdb
operator|.
name|util
operator|.
name|marshaller
operator|.
name|ObjectMarshaller
import|;
end_import

begin_comment
comment|/**  * An instance of AggregationRepository which is backed by a HawtDB.  */
end_comment

begin_class
DECL|class|HawtDBAggregationRepository
specifier|public
class|class
name|HawtDBAggregationRepository
parameter_list|<
name|K
parameter_list|>
implements|implements
name|AggregationRepository
argument_list|<
name|K
argument_list|>
block|{
DECL|field|file
specifier|private
name|HawtDBFile
name|file
decl_stmt|;
DECL|field|name
specifier|private
name|String
name|name
decl_stmt|;
DECL|field|keyMarshaller
specifier|private
name|Marshaller
argument_list|<
name|K
argument_list|>
name|keyMarshaller
init|=
operator|new
name|ObjectMarshaller
argument_list|<
name|K
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|exchangeMarshaller
specifier|private
name|Marshaller
argument_list|<
name|DefaultExchangeHolder
argument_list|>
name|exchangeMarshaller
init|=
operator|new
name|ObjectMarshaller
argument_list|<
name|DefaultExchangeHolder
argument_list|>
argument_list|()
decl_stmt|;
DECL|method|add (K key, Exchange exchange)
specifier|public
name|Exchange
name|add
parameter_list|(
name|K
name|key
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
block|{
try|try
block|{
comment|// If we could guarantee that the key and exchange are immutable,
comment|// then we could have stuck them directly into the index,
comment|// HawtDB could then eliminate the need to marshal and un-marshal
comment|// in some cases.  But since we can.. we are going to force
comment|// early marshaling.
specifier|final
name|Buffer
name|keyBuffer
init|=
name|marshallKey
argument_list|(
name|key
argument_list|)
decl_stmt|;
specifier|final
name|Buffer
name|exchangeBuffer
init|=
name|marshallExchange
argument_list|(
name|exchange
argument_list|)
decl_stmt|;
name|Buffer
name|rc
init|=
name|file
operator|.
name|execute
argument_list|(
operator|new
name|Work
argument_list|<
name|Buffer
argument_list|>
argument_list|()
block|{
specifier|public
name|Buffer
name|execute
parameter_list|(
name|Transaction
name|tx
parameter_list|)
block|{
name|Index
argument_list|<
name|Buffer
argument_list|,
name|Buffer
argument_list|>
name|index
init|=
name|file
operator|.
name|getRepositoryIndex
argument_list|(
name|tx
argument_list|,
name|name
argument_list|)
decl_stmt|;
return|return
name|index
operator|.
name|put
argument_list|(
name|keyBuffer
argument_list|,
name|exchangeBuffer
argument_list|)
return|;
block|}
block|}
argument_list|)
decl_stmt|;
if|if
condition|(
name|rc
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
name|unmarshallExchange
argument_list|(
name|rc
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|get (K key)
specifier|public
name|Exchange
name|get
parameter_list|(
name|K
name|key
parameter_list|)
block|{
try|try
block|{
specifier|final
name|Buffer
name|keyBuffer
init|=
name|marshallKey
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|Buffer
name|rc
init|=
name|file
operator|.
name|execute
argument_list|(
operator|new
name|Work
argument_list|<
name|Buffer
argument_list|>
argument_list|()
block|{
specifier|public
name|Buffer
name|execute
parameter_list|(
name|Transaction
name|tx
parameter_list|)
block|{
name|Index
argument_list|<
name|Buffer
argument_list|,
name|Buffer
argument_list|>
name|index
init|=
name|file
operator|.
name|getRepositoryIndex
argument_list|(
name|tx
argument_list|,
name|name
argument_list|)
decl_stmt|;
return|return
name|index
operator|.
name|get
argument_list|(
name|keyBuffer
argument_list|)
return|;
block|}
block|}
argument_list|)
decl_stmt|;
if|if
condition|(
name|rc
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
name|unmarshallExchange
argument_list|(
name|rc
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|remove (K key)
specifier|public
name|void
name|remove
parameter_list|(
name|K
name|key
parameter_list|)
block|{
try|try
block|{
specifier|final
name|Buffer
name|keyBuffer
init|=
name|marshallKey
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|file
operator|.
name|execute
argument_list|(
operator|new
name|Work
argument_list|<
name|Buffer
argument_list|>
argument_list|()
block|{
specifier|public
name|Buffer
name|execute
parameter_list|(
name|Transaction
name|tx
parameter_list|)
block|{
name|Index
argument_list|<
name|Buffer
argument_list|,
name|Buffer
argument_list|>
name|index
init|=
name|file
operator|.
name|getRepositoryIndex
argument_list|(
name|tx
argument_list|,
name|name
argument_list|)
decl_stmt|;
return|return
name|index
operator|.
name|remove
argument_list|(
name|keyBuffer
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|marshallKey (K key)
specifier|protected
name|Buffer
name|marshallKey
parameter_list|(
name|K
name|key
parameter_list|)
throws|throws
name|IOException
block|{
name|DataByteArrayOutputStream
name|baos
init|=
operator|new
name|DataByteArrayOutputStream
argument_list|()
decl_stmt|;
name|keyMarshaller
operator|.
name|writePayload
argument_list|(
name|key
argument_list|,
name|baos
argument_list|)
expr_stmt|;
return|return
name|baos
operator|.
name|toBuffer
argument_list|()
return|;
block|}
DECL|method|marshallExchange (Exchange exchange)
specifier|protected
name|Buffer
name|marshallExchange
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|IOException
block|{
name|DataByteArrayOutputStream
name|baos
init|=
operator|new
name|DataByteArrayOutputStream
argument_list|()
decl_stmt|;
name|DefaultExchangeHolder
name|pe
init|=
name|DefaultExchangeHolder
operator|.
name|marshal
argument_list|(
name|exchange
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|exchangeMarshaller
operator|.
name|writePayload
argument_list|(
name|pe
argument_list|,
name|baos
argument_list|)
expr_stmt|;
return|return
name|baos
operator|.
name|toBuffer
argument_list|()
return|;
block|}
DECL|method|unmarshallExchange (Buffer buffer)
specifier|protected
name|Exchange
name|unmarshallExchange
parameter_list|(
name|Buffer
name|buffer
parameter_list|)
throws|throws
name|IOException
block|{
name|DataByteArrayInputStream
name|bais
init|=
operator|new
name|DataByteArrayInputStream
argument_list|(
name|buffer
argument_list|)
decl_stmt|;
name|DefaultExchangeHolder
name|pe
init|=
name|exchangeMarshaller
operator|.
name|readPayload
argument_list|(
name|bais
argument_list|)
decl_stmt|;
comment|// create a new dummy default exchange which the aggregator must
comment|// set the CamelContext
name|Exchange
name|answer
init|=
operator|new
name|DefaultExchange
argument_list|(
operator|(
name|CamelContext
operator|)
literal|null
argument_list|)
decl_stmt|;
name|DefaultExchangeHolder
operator|.
name|unmarshal
argument_list|(
name|answer
argument_list|,
name|pe
argument_list|)
expr_stmt|;
return|return
name|answer
return|;
block|}
DECL|method|getFile ()
specifier|public
name|HawtDBFile
name|getFile
parameter_list|()
block|{
return|return
name|file
return|;
block|}
DECL|method|setFile (HawtDBFile file)
specifier|public
name|void
name|setFile
parameter_list|(
name|HawtDBFile
name|file
parameter_list|)
block|{
name|this
operator|.
name|file
operator|=
name|file
expr_stmt|;
block|}
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|setName (String name)
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
block|}
end_class

end_unit

