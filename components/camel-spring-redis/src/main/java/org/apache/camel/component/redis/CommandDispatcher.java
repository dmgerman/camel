begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.redis
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|redis
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RuntimeExchangeException
import|;
end_import

begin_class
DECL|class|CommandDispatcher
specifier|public
class|class
name|CommandDispatcher
block|{
DECL|field|configuration
specifier|private
specifier|final
name|RedisConfiguration
name|configuration
decl_stmt|;
DECL|field|exchange
specifier|private
specifier|final
name|Exchange
name|exchange
decl_stmt|;
DECL|method|CommandDispatcher (RedisConfiguration configuration, Exchange exchange)
specifier|public
name|CommandDispatcher
parameter_list|(
name|RedisConfiguration
name|configuration
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
block|{
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
name|this
operator|.
name|exchange
operator|=
name|exchange
expr_stmt|;
block|}
comment|// CHECKSTYLE:OFF
DECL|method|execute (final RedisClient redisClient)
specifier|public
name|void
name|execute
parameter_list|(
specifier|final
name|RedisClient
name|redisClient
parameter_list|)
block|{
specifier|final
name|Command
name|command
init|=
name|determineCommand
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|command
condition|)
block|{
case|case
name|PING
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|ping
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|SET
case|:
name|redisClient
operator|.
name|set
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|GET
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|get
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QUIT
case|:
name|redisClient
operator|.
name|quit
argument_list|()
expr_stmt|;
break|break;
case|case
name|EXISTS
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|exists
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|DEL
case|:
name|redisClient
operator|.
name|del
argument_list|(
name|getKeys
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TYPE
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|type
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|KEYS
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|keys
argument_list|(
name|getPattern
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|RANDOMKEY
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|randomkey
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|RENAME
case|:
name|redisClient
operator|.
name|rename
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getStringValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|RENAMENX
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|renamenx
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getStringValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|EXPIRE
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|expire
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getTimeout
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|EXPIREAT
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|expireat
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getTimestamp
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PEXPIRE
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|pexpire
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getTimeout
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PEXPIREAT
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|pexpireat
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getTimestamp
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|TTL
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|ttl
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|MOVE
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|move
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getDb
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|GETSET
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|getset
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|MGET
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|mget
argument_list|(
name|getFields
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SETNX
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|setnx
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SETEX
case|:
name|redisClient
operator|.
name|setex
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|,
name|getTimeout
argument_list|()
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
break|break;
case|case
name|MSET
case|:
name|redisClient
operator|.
name|mset
argument_list|(
name|getValuesAsMap
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|MSETNX
case|:
name|redisClient
operator|.
name|msetnx
argument_list|(
name|getValuesAsMap
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|DECRBY
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|decrby
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getLongValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|DECR
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|decr
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|INCRBY
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|incrby
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getLongValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|INCR
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|incr
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|APPEND
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|append
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getStringValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|HSET
case|:
name|redisClient
operator|.
name|hset
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getField
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|HGET
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|hget
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getField
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|HSETNX
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|hsetnx
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getField
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|HMSET
case|:
name|redisClient
operator|.
name|hmset
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValuesAsMap
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|HMGET
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|hmget
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getFields
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|HINCRBY
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|hincrBy
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getField
argument_list|()
argument_list|,
name|getValueAsLong
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|HEXISTS
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|hexists
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getField
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|HDEL
case|:
name|redisClient
operator|.
name|hdel
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getField
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|HLEN
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|hlen
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|HKEYS
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|hkeys
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|HVALS
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|hvals
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|HGETALL
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|hgetAll
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|RPUSH
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|rpush
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|LPUSH
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|lpush
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|LLEN
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|llen
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|LRANGE
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|lrange
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getStart
argument_list|()
argument_list|,
name|getEnd
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|LTRIM
case|:
name|redisClient
operator|.
name|ltrim
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getStart
argument_list|()
argument_list|,
name|getEnd
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|LINDEX
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|lindex
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|LSET
case|:
name|redisClient
operator|.
name|lset
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|,
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|LREM
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|lrem
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|,
name|getCount
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|LPOP
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|lpop
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|RPOP
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|rpop
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|RPOPLPUSH
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|rpoplpush
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getDestination
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SADD
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|sadd
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SMEMBERS
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|smembers
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SREM
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|srem
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SPOP
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|spop
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SMOVE
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|smove
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|,
name|getDestination
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SCARD
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|scard
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SISMEMBER
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|sismember
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SINTER
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|sinter
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getKeys
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SINTERSTORE
case|:
name|redisClient
operator|.
name|sinterstore
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getKeys
argument_list|()
argument_list|,
name|getDestination
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|SUNION
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|sunion
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getKeys
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SUNIONSTORE
case|:
name|redisClient
operator|.
name|sunionstore
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getKeys
argument_list|()
argument_list|,
name|getDestination
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|SDIFF
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|sdiff
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getKeys
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SDIFFSTORE
case|:
name|redisClient
operator|.
name|sdiffstore
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getKeys
argument_list|()
argument_list|,
name|getDestination
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|SRANDMEMBER
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|srandmember
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|ZADD
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|zadd
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|,
name|getScore
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|ZRANGE
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|zrange
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getStart
argument_list|()
argument_list|,
name|getEnd
argument_list|()
argument_list|,
name|getWithScore
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|ZREM
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|zrem
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|ZINCRBY
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|zincrby
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|,
name|getIncrement
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|ZRANK
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|zrank
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|ZREVRANK
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|zrevrank
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|ZREVRANGE
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|zrevrange
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getStart
argument_list|()
argument_list|,
name|getEnd
argument_list|()
argument_list|,
name|getWithScore
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|ZCARD
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|zcard
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|MULTI
case|:
name|redisClient
operator|.
name|multi
argument_list|()
expr_stmt|;
break|break;
case|case
name|DISCARD
case|:
name|redisClient
operator|.
name|discard
argument_list|()
expr_stmt|;
break|break;
case|case
name|EXEC
case|:
name|redisClient
operator|.
name|exec
argument_list|()
expr_stmt|;
break|break;
case|case
name|WATCH
case|:
name|redisClient
operator|.
name|watch
argument_list|(
name|getKeys
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|UNWATCH
case|:
name|redisClient
operator|.
name|unwatch
argument_list|()
expr_stmt|;
break|break;
case|case
name|SORT
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|sort
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|BLPOP
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|blpop
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getTimeout
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|BRPOP
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|brpop
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getTimeout
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PUBLISH
case|:
name|redisClient
operator|.
name|publish
argument_list|(
name|getChannel
argument_list|()
argument_list|,
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ZCOUNT
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|zcount
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getMin
argument_list|()
argument_list|,
name|getMax
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|ZRANGEBYSCORE
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|zrangebyscore
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getMin
argument_list|()
argument_list|,
name|getMax
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|ZREVRANGEBYSCORE
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|zrevrangebyscore
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getMin
argument_list|()
argument_list|,
name|getMax
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|ZREMRANGEBYRANK
case|:
name|redisClient
operator|.
name|zremrangebyrank
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getStart
argument_list|()
argument_list|,
name|getEnd
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ZREMRANGEBYSCORE
case|:
name|redisClient
operator|.
name|zremrangebyscore
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getStart
argument_list|()
argument_list|,
name|getEnd
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ZUNIONSTORE
case|:
name|redisClient
operator|.
name|zunionstore
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getKeys
argument_list|()
argument_list|,
name|getDestination
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ZINTERSTORE
case|:
name|redisClient
operator|.
name|zinterstore
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getKeys
argument_list|()
argument_list|,
name|getDestination
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|STRLEN
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|strlen
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PERSIST
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|persist
argument_list|(
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|RPUSHX
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|rpushx
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|ECHO
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|echo
argument_list|(
name|getStringValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|LINSERT
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|linsert
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|,
name|getPivot
argument_list|()
argument_list|,
name|getPosition
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|BRPOPLPUSH
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|brpoplpush
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getDestination
argument_list|()
argument_list|,
name|getTimeout
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SETBIT
case|:
name|redisClient
operator|.
name|setbit
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getOffset
argument_list|()
argument_list|,
name|getBooleanValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|GETBIT
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|getbit
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getOffset
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SETRANGE
case|:
name|redisClient
operator|.
name|setex
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getValue
argument_list|()
argument_list|,
name|getOffset
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|GETRANGE
case|:
name|setResult
argument_list|(
name|redisClient
operator|.
name|getrange
argument_list|(
name|getKey
argument_list|()
argument_list|,
name|getStart
argument_list|()
argument_list|,
name|getEnd
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|RuntimeExchangeException
argument_list|(
literal|"Unsupported command: "
operator|+
name|command
argument_list|,
name|exchange
argument_list|)
throw|;
block|}
block|}
comment|// CHECKSTYLE:ON
DECL|method|determineCommand ()
specifier|private
name|Command
name|determineCommand
parameter_list|()
block|{
name|Command
name|command
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|RedisConstants
operator|.
name|COMMAND
argument_list|,
name|Command
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|command
operator|==
literal|null
condition|)
block|{
name|command
operator|=
name|configuration
operator|.
name|getCommand
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|command
operator|==
literal|null
condition|)
block|{
name|command
operator|=
name|Command
operator|.
name|SET
expr_stmt|;
block|}
return|return
name|command
return|;
block|}
DECL|method|getInHeaderValue (Exchange exchange, String key, Class<T> aClass)
specifier|private
specifier|static
parameter_list|<
name|T
parameter_list|>
name|T
name|getInHeaderValue
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|String
name|key
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|aClass
parameter_list|)
block|{
return|return
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|key
argument_list|,
name|aClass
argument_list|)
return|;
block|}
DECL|method|setResult (Object result)
specifier|private
name|void
name|setResult
parameter_list|(
name|Object
name|result
parameter_list|)
block|{
name|Message
name|message
decl_stmt|;
if|if
condition|(
name|exchange
operator|.
name|getPattern
argument_list|()
operator|.
name|isOutCapable
argument_list|()
condition|)
block|{
name|message
operator|=
name|exchange
operator|.
name|getOut
argument_list|()
expr_stmt|;
name|message
operator|.
name|copyFrom
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|message
operator|=
name|exchange
operator|.
name|getIn
argument_list|()
expr_stmt|;
block|}
name|message
operator|.
name|setBody
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
DECL|method|getDestination ()
specifier|public
name|String
name|getDestination
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|DESTINATION
argument_list|,
name|String
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getChannel ()
specifier|private
name|String
name|getChannel
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|CHANNEL
argument_list|,
name|String
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getMessage ()
specifier|private
name|Object
name|getMessage
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|MESSAGE
argument_list|,
name|Object
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getIndex ()
specifier|public
name|Long
name|getIndex
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|INDEX
argument_list|,
name|Long
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getPivot ()
specifier|public
name|String
name|getPivot
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|PIVOT
argument_list|,
name|String
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getPosition ()
specifier|public
name|String
name|getPosition
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|POSITION
argument_list|,
name|String
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getCount ()
specifier|public
name|Long
name|getCount
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|COUNT
argument_list|,
name|Long
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getStart ()
specifier|private
name|Long
name|getStart
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|START
argument_list|,
name|Long
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getEnd ()
specifier|private
name|Long
name|getEnd
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|END
argument_list|,
name|Long
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getTimeout ()
specifier|private
name|Long
name|getTimeout
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|TIMEOUT
argument_list|,
name|Long
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getOffset ()
specifier|private
name|Long
name|getOffset
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|OFFSET
argument_list|,
name|Long
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getValueAsLong ()
specifier|private
name|Long
name|getValueAsLong
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|VALUE
argument_list|,
name|Long
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getFields ()
specifier|private
name|Collection
argument_list|<
name|String
argument_list|>
name|getFields
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|FIELDS
argument_list|,
name|Collection
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getValuesAsMap ()
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getValuesAsMap
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|VALUES
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
return|;
block|}
DECL|method|getKey ()
specifier|private
name|String
name|getKey
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|KEY
argument_list|,
name|String
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getKeys ()
specifier|public
name|Collection
argument_list|<
name|String
argument_list|>
name|getKeys
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|KEYS
argument_list|,
name|Collection
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getValue ()
specifier|private
name|Object
name|getValue
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|VALUE
argument_list|,
name|Object
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getStringValue ()
specifier|private
name|String
name|getStringValue
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|VALUE
argument_list|,
name|String
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getLongValue ()
specifier|private
name|Long
name|getLongValue
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|VALUE
argument_list|,
name|Long
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getBooleanValue ()
specifier|private
name|Boolean
name|getBooleanValue
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|VALUE
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getField ()
specifier|private
name|String
name|getField
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|FIELD
argument_list|,
name|String
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getTimestamp ()
specifier|public
name|Long
name|getTimestamp
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|TIMESTAMP
argument_list|,
name|Long
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getPattern ()
specifier|public
name|String
name|getPattern
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|PATTERN
argument_list|,
name|String
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getDb ()
specifier|public
name|Integer
name|getDb
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|DB
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getScore ()
specifier|public
name|Double
name|getScore
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|SCORE
argument_list|,
name|Double
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getMin ()
specifier|public
name|Double
name|getMin
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|MIN
argument_list|,
name|Double
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getMax ()
specifier|public
name|Double
name|getMax
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|MAX
argument_list|,
name|Double
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getIncrement ()
specifier|public
name|Double
name|getIncrement
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|INCREMENT
argument_list|,
name|Double
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getWithScore ()
specifier|public
name|Boolean
name|getWithScore
parameter_list|()
block|{
return|return
name|getInHeaderValue
argument_list|(
name|exchange
argument_list|,
name|RedisConstants
operator|.
name|WITHSCORE
argument_list|,
name|Boolean
operator|.
name|class
argument_list|)
return|;
block|}
block|}
end_class

end_unit

