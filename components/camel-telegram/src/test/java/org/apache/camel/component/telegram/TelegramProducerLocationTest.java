begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.telegram
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|telegram
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RoutesBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|telegram
operator|.
name|model
operator|.
name|EditMessageLiveLocationMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|telegram
operator|.
name|model
operator|.
name|MessageResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|telegram
operator|.
name|model
operator|.
name|SendLocationMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|telegram
operator|.
name|model
operator|.
name|SendVenueMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|telegram
operator|.
name|model
operator|.
name|StopMessageLiveLocationMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|telegram
operator|.
name|service
operator|.
name|RestBotAPI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|telegram
operator|.
name|service
operator|.
name|TelegramServiceRestBotAPIAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|telegram
operator|.
name|util
operator|.
name|TelegramTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|junit
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_comment
comment|/**  * Tests a producer that sends location information.  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
DECL|class|TelegramProducerLocationTest
specifier|public
class|class
name|TelegramProducerLocationTest
extends|extends
name|TelegramTestSupport
block|{
DECL|field|latitude
specifier|private
specifier|final
name|double
name|latitude
init|=
literal|59.9386292
decl_stmt|;
DECL|field|longitude
specifier|private
specifier|final
name|double
name|longitude
init|=
literal|30.3141308
decl_stmt|;
DECL|field|service
specifier|private
name|TelegramService
name|service
decl_stmt|;
annotation|@
name|Mock
DECL|field|restBotAPI
specifier|private
name|RestBotAPI
name|restBotAPI
decl_stmt|;
annotation|@
name|Override
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|service
operator|=
operator|new
name|TelegramServiceRestBotAPIAdapter
argument_list|(
name|restBotAPI
argument_list|)
expr_stmt|;
name|TelegramServiceProvider
operator|.
name|get
argument_list|()
operator|.
name|setAlternativeService
argument_list|(
name|service
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSendLocation ()
specifier|public
name|void
name|testSendLocation
parameter_list|()
block|{
name|MessageResult
name|expected
init|=
operator|new
name|MessageResult
argument_list|()
decl_stmt|;
name|expected
operator|.
name|setOk
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|restBotAPI
operator|.
name|sendLocation
argument_list|(
name|anyString
argument_list|()
argument_list|,
name|any
argument_list|(
name|SendLocationMessage
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expected
argument_list|)
expr_stmt|;
name|SendLocationMessage
name|msg
init|=
operator|new
name|SendLocationMessage
argument_list|(
name|latitude
argument_list|,
name|longitude
argument_list|)
decl_stmt|;
name|MessageResult
name|actual
init|=
operator|(
name|MessageResult
operator|)
name|service
operator|.
name|sendMessage
argument_list|(
literal|"mock-token"
argument_list|,
name|msg
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSendVenue ()
specifier|public
name|void
name|testSendVenue
parameter_list|()
block|{
name|MessageResult
name|expected
init|=
operator|new
name|MessageResult
argument_list|()
decl_stmt|;
name|expected
operator|.
name|setOk
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|restBotAPI
operator|.
name|sendVenue
argument_list|(
name|anyString
argument_list|()
argument_list|,
name|any
argument_list|(
name|SendVenueMessage
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expected
argument_list|)
expr_stmt|;
name|SendVenueMessage
name|msg
init|=
operator|new
name|SendVenueMessage
argument_list|(
name|latitude
argument_list|,
name|longitude
argument_list|,
literal|"title"
argument_list|,
literal|"address"
argument_list|)
decl_stmt|;
name|MessageResult
name|actual
init|=
operator|(
name|MessageResult
operator|)
name|service
operator|.
name|sendMessage
argument_list|(
literal|"mock-token"
argument_list|,
name|msg
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEditMessageLiveLocation ()
specifier|public
name|void
name|testEditMessageLiveLocation
parameter_list|()
block|{
name|MessageResult
name|expected
init|=
operator|new
name|MessageResult
argument_list|()
decl_stmt|;
name|expected
operator|.
name|setOk
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|restBotAPI
operator|.
name|editMessageLiveLocation
argument_list|(
name|anyString
argument_list|()
argument_list|,
name|any
argument_list|(
name|EditMessageLiveLocationMessage
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expected
argument_list|)
expr_stmt|;
name|EditMessageLiveLocationMessage
name|msg
init|=
operator|new
name|EditMessageLiveLocationMessage
argument_list|(
name|latitude
argument_list|,
name|longitude
argument_list|)
decl_stmt|;
name|MessageResult
name|actual
init|=
operator|(
name|MessageResult
operator|)
name|service
operator|.
name|sendMessage
argument_list|(
literal|"mock-token"
argument_list|,
name|msg
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testStopMessageLiveLocation ()
specifier|public
name|void
name|testStopMessageLiveLocation
parameter_list|()
block|{
name|MessageResult
name|expected
init|=
operator|new
name|MessageResult
argument_list|()
decl_stmt|;
name|expected
operator|.
name|setOk
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|restBotAPI
operator|.
name|stopMessageLiveLocation
argument_list|(
name|anyString
argument_list|()
argument_list|,
name|any
argument_list|(
name|StopMessageLiveLocationMessage
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|expected
argument_list|)
expr_stmt|;
name|StopMessageLiveLocationMessage
name|msg
init|=
operator|new
name|StopMessageLiveLocationMessage
argument_list|()
decl_stmt|;
name|MessageResult
name|actual
init|=
operator|(
name|MessageResult
operator|)
name|service
operator|.
name|sendMessage
argument_list|(
literal|"mock-token"
argument_list|,
name|msg
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RoutesBuilder
name|createRouteBuilder
parameter_list|()
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"direct:telegram"
argument_list|)
operator|.
name|to
argument_list|(
literal|"telegram:bots?authorizationToken=mock-token&chatId=my-id"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

