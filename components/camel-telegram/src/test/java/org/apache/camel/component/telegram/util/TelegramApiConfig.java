begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.telegram.util
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|telegram
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|telegram
operator|.
name|TelegramComponent
import|;
end_import

begin_class
DECL|class|TelegramApiConfig
specifier|public
class|class
name|TelegramApiConfig
block|{
DECL|field|authorizationToken
specifier|private
specifier|final
name|String
name|authorizationToken
decl_stmt|;
DECL|field|port
specifier|private
specifier|final
name|int
name|port
decl_stmt|;
DECL|field|baseUri
specifier|private
specifier|final
name|String
name|baseUri
decl_stmt|;
DECL|field|chatId
specifier|private
specifier|final
name|String
name|chatId
decl_stmt|;
DECL|method|TelegramApiConfig (String baseUri, int port, String authorizationToken, String chatId)
specifier|public
name|TelegramApiConfig
parameter_list|(
name|String
name|baseUri
parameter_list|,
name|int
name|port
parameter_list|,
name|String
name|authorizationToken
parameter_list|,
name|String
name|chatId
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|baseUri
operator|=
name|baseUri
expr_stmt|;
name|this
operator|.
name|port
operator|=
name|port
expr_stmt|;
name|this
operator|.
name|authorizationToken
operator|=
name|authorizationToken
expr_stmt|;
name|this
operator|.
name|chatId
operator|=
name|chatId
expr_stmt|;
block|}
DECL|method|fromEnv ()
specifier|public
specifier|static
name|TelegramApiConfig
name|fromEnv
parameter_list|()
block|{
specifier|final
name|String
name|authorizationToken
init|=
name|System
operator|.
name|getenv
argument_list|(
literal|"TELEGRAM_AUTHORIZATION_TOKEN"
argument_list|)
decl_stmt|;
specifier|final
name|String
name|chatId
init|=
name|System
operator|.
name|getenv
argument_list|(
literal|"TELEGRAM_CHAT_ID"
argument_list|)
decl_stmt|;
return|return
operator|new
name|TelegramApiConfig
argument_list|(
name|TelegramComponent
operator|.
name|BOT_API_DEFAULT_URL
argument_list|,
literal|443
argument_list|,
name|authorizationToken
argument_list|,
name|chatId
argument_list|)
return|;
block|}
DECL|method|mock (int port)
specifier|public
specifier|static
name|TelegramApiConfig
name|mock
parameter_list|(
name|int
name|port
parameter_list|)
block|{
return|return
operator|new
name|TelegramApiConfig
argument_list|(
literal|"http://localhost:"
operator|+
name|port
argument_list|,
name|port
argument_list|,
literal|"mock-token"
argument_list|,
literal|"-1"
argument_list|)
return|;
block|}
DECL|method|getAuthorizationToken ()
specifier|public
name|String
name|getAuthorizationToken
parameter_list|()
block|{
return|return
name|authorizationToken
return|;
block|}
DECL|method|getBaseUri ()
specifier|public
name|String
name|getBaseUri
parameter_list|()
block|{
return|return
name|baseUri
return|;
block|}
DECL|method|getChatId ()
specifier|public
name|String
name|getChatId
parameter_list|()
block|{
return|return
name|chatId
return|;
block|}
DECL|method|getPort ()
specifier|public
name|int
name|getPort
parameter_list|()
block|{
return|return
name|port
return|;
block|}
block|}
end_class

end_unit

