begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.telegram.model
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|telegram
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonInclude
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonProperty
import|;
end_import

begin_class
annotation|@
name|JsonInclude
argument_list|(
name|JsonInclude
operator|.
name|Include
operator|.
name|NON_NULL
argument_list|)
DECL|class|ReplyKeyboardMarkup
specifier|public
class|class
name|ReplyKeyboardMarkup
implements|implements
name|Serializable
block|{
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"one_time_keyboard"
argument_list|)
DECL|field|oneTimeKeyboard
specifier|private
name|Boolean
name|oneTimeKeyboard
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"remove_keyboard"
argument_list|)
DECL|field|removeKeyboard
specifier|private
name|Boolean
name|removeKeyboard
decl_stmt|;
DECL|field|keyboard
specifier|private
name|List
argument_list|<
name|List
argument_list|<
name|InlineKeyboardButton
argument_list|>
argument_list|>
name|keyboard
decl_stmt|;
DECL|method|ReplyKeyboardMarkup ()
specifier|public
name|ReplyKeyboardMarkup
parameter_list|()
block|{      }
DECL|method|ReplyKeyboardMarkup (Boolean oneTimeKeyboard, Boolean removeKeyboard, List<List<InlineKeyboardButton>> keyboard)
specifier|public
name|ReplyKeyboardMarkup
parameter_list|(
name|Boolean
name|oneTimeKeyboard
parameter_list|,
name|Boolean
name|removeKeyboard
parameter_list|,
name|List
argument_list|<
name|List
argument_list|<
name|InlineKeyboardButton
argument_list|>
argument_list|>
name|keyboard
parameter_list|)
block|{
name|this
operator|.
name|oneTimeKeyboard
operator|=
name|oneTimeKeyboard
expr_stmt|;
name|this
operator|.
name|removeKeyboard
operator|=
name|removeKeyboard
expr_stmt|;
name|this
operator|.
name|keyboard
operator|=
name|keyboard
expr_stmt|;
block|}
DECL|method|getOneTimeKeyboard ()
specifier|public
name|Boolean
name|getOneTimeKeyboard
parameter_list|()
block|{
return|return
name|oneTimeKeyboard
return|;
block|}
DECL|method|setOneTimeKeyboard (Boolean oneTimeKeyboard)
specifier|public
name|void
name|setOneTimeKeyboard
parameter_list|(
name|Boolean
name|oneTimeKeyboard
parameter_list|)
block|{
name|this
operator|.
name|oneTimeKeyboard
operator|=
name|oneTimeKeyboard
expr_stmt|;
block|}
DECL|method|getRemoveKeyboard ()
specifier|public
name|Boolean
name|getRemoveKeyboard
parameter_list|()
block|{
return|return
name|removeKeyboard
return|;
block|}
DECL|method|setRemoveKeyboard (Boolean removeKeyboard)
specifier|public
name|void
name|setRemoveKeyboard
parameter_list|(
name|Boolean
name|removeKeyboard
parameter_list|)
block|{
name|this
operator|.
name|removeKeyboard
operator|=
name|removeKeyboard
expr_stmt|;
block|}
DECL|method|getKeyboard ()
specifier|public
name|List
argument_list|<
name|List
argument_list|<
name|InlineKeyboardButton
argument_list|>
argument_list|>
name|getKeyboard
parameter_list|()
block|{
return|return
name|keyboard
return|;
block|}
DECL|method|setKeyboard (List<List<InlineKeyboardButton>> keyboard)
specifier|public
name|void
name|setKeyboard
parameter_list|(
name|List
argument_list|<
name|List
argument_list|<
name|InlineKeyboardButton
argument_list|>
argument_list|>
name|keyboard
parameter_list|)
block|{
name|this
operator|.
name|keyboard
operator|=
name|keyboard
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
specifier|final
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|(
literal|"ReplyKeyboardMarkup{"
argument_list|)
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"oneTimeKeyboard='"
argument_list|)
operator|.
name|append
argument_list|(
name|oneTimeKeyboard
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", keyboard='"
argument_list|)
operator|.
name|append
argument_list|(
name|keyboard
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|'}'
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|builder ()
specifier|public
specifier|static
name|Builder
name|builder
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
DECL|class|Builder
specifier|public
specifier|static
class|class
name|Builder
block|{
DECL|field|oneTimeKeyboard
specifier|private
name|Boolean
name|oneTimeKeyboard
decl_stmt|;
DECL|field|removeKeyboard
specifier|private
name|Boolean
name|removeKeyboard
decl_stmt|;
DECL|field|keyboard
specifier|private
name|List
argument_list|<
name|List
argument_list|<
name|InlineKeyboardButton
argument_list|>
argument_list|>
name|keyboard
decl_stmt|;
DECL|method|oneTimeKeyboard (Boolean oneTimeKeyboard)
specifier|public
name|Builder
name|oneTimeKeyboard
parameter_list|(
name|Boolean
name|oneTimeKeyboard
parameter_list|)
block|{
name|this
operator|.
name|oneTimeKeyboard
operator|=
name|oneTimeKeyboard
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|removeKeyboard (Boolean removeKeyboard)
specifier|public
name|Builder
name|removeKeyboard
parameter_list|(
name|Boolean
name|removeKeyboard
parameter_list|)
block|{
name|this
operator|.
name|removeKeyboard
operator|=
name|removeKeyboard
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|build ()
specifier|public
name|ReplyKeyboardMarkup
name|build
parameter_list|()
block|{
return|return
operator|new
name|ReplyKeyboardMarkup
argument_list|(
name|oneTimeKeyboard
argument_list|,
name|removeKeyboard
argument_list|,
name|keyboard
argument_list|)
return|;
block|}
DECL|method|keyboard ()
specifier|public
name|KeyboardBuilder
name|keyboard
parameter_list|()
block|{
return|return
operator|new
name|KeyboardBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
DECL|class|KeyboardBuilder
specifier|public
specifier|static
class|class
name|KeyboardBuilder
block|{
DECL|field|builder
specifier|private
name|Builder
name|builder
decl_stmt|;
DECL|field|keyboard
specifier|private
name|List
argument_list|<
name|List
argument_list|<
name|InlineKeyboardButton
argument_list|>
argument_list|>
name|keyboard
decl_stmt|;
DECL|method|KeyboardBuilder (Builder builder)
specifier|public
name|KeyboardBuilder
parameter_list|(
name|Builder
name|builder
parameter_list|)
block|{
name|this
operator|.
name|builder
operator|=
name|builder
expr_stmt|;
name|this
operator|.
name|keyboard
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
DECL|method|addRow (List<InlineKeyboardButton> inlineKeyboardButtons)
specifier|public
name|KeyboardBuilder
name|addRow
parameter_list|(
name|List
argument_list|<
name|InlineKeyboardButton
argument_list|>
name|inlineKeyboardButtons
parameter_list|)
block|{
name|keyboard
operator|.
name|add
argument_list|(
name|inlineKeyboardButtons
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|addOneRowByEachButton (List<InlineKeyboardButton> inlineKeyboardButtons)
specifier|public
name|KeyboardBuilder
name|addOneRowByEachButton
parameter_list|(
name|List
argument_list|<
name|InlineKeyboardButton
argument_list|>
name|inlineKeyboardButtons
parameter_list|)
block|{
for|for
control|(
name|Iterator
argument_list|<
name|InlineKeyboardButton
argument_list|>
name|iterator
init|=
name|inlineKeyboardButtons
operator|.
name|iterator
argument_list|()
init|;
name|iterator
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|keyboard
operator|.
name|add
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|iterator
operator|.
name|next
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
DECL|method|close ()
specifier|public
name|Builder
name|close
parameter_list|()
block|{
name|builder
operator|.
name|keyboard
operator|=
name|keyboard
expr_stmt|;
return|return
name|builder
return|;
block|}
block|}
block|}
block|}
end_class

end_unit

