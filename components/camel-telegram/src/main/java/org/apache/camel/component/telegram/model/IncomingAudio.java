begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.telegram.model
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|telegram
operator|.
name|model
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonIgnoreProperties
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonProperty
import|;
end_import

begin_comment
comment|/**  * Contains information about an audio file.  */
end_comment

begin_class
annotation|@
name|JsonIgnoreProperties
argument_list|(
name|ignoreUnknown
operator|=
literal|true
argument_list|)
DECL|class|IncomingAudio
specifier|public
class|class
name|IncomingAudio
block|{
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|2716544815581270395L
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"file_id"
argument_list|)
DECL|field|fileId
specifier|private
name|String
name|fileId
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"duration"
argument_list|)
DECL|field|durationSeconds
specifier|private
name|Integer
name|durationSeconds
decl_stmt|;
DECL|field|performer
specifier|private
name|String
name|performer
decl_stmt|;
DECL|field|title
specifier|private
name|String
name|title
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"mime_type"
argument_list|)
DECL|field|mimeType
specifier|private
name|String
name|mimeType
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"file_size"
argument_list|)
DECL|field|fileSize
specifier|private
name|Long
name|fileSize
decl_stmt|;
DECL|method|IncomingAudio ()
specifier|public
name|IncomingAudio
parameter_list|()
block|{     }
DECL|method|getFileId ()
specifier|public
name|String
name|getFileId
parameter_list|()
block|{
return|return
name|fileId
return|;
block|}
DECL|method|setFileId (String fileId)
specifier|public
name|void
name|setFileId
parameter_list|(
name|String
name|fileId
parameter_list|)
block|{
name|this
operator|.
name|fileId
operator|=
name|fileId
expr_stmt|;
block|}
DECL|method|getDurationSeconds ()
specifier|public
name|Integer
name|getDurationSeconds
parameter_list|()
block|{
return|return
name|durationSeconds
return|;
block|}
DECL|method|setDurationSeconds (Integer durationSeconds)
specifier|public
name|void
name|setDurationSeconds
parameter_list|(
name|Integer
name|durationSeconds
parameter_list|)
block|{
name|this
operator|.
name|durationSeconds
operator|=
name|durationSeconds
expr_stmt|;
block|}
DECL|method|getPerformer ()
specifier|public
name|String
name|getPerformer
parameter_list|()
block|{
return|return
name|performer
return|;
block|}
DECL|method|setPerformer (String performer)
specifier|public
name|void
name|setPerformer
parameter_list|(
name|String
name|performer
parameter_list|)
block|{
name|this
operator|.
name|performer
operator|=
name|performer
expr_stmt|;
block|}
DECL|method|getTitle ()
specifier|public
name|String
name|getTitle
parameter_list|()
block|{
return|return
name|title
return|;
block|}
DECL|method|setTitle (String title)
specifier|public
name|void
name|setTitle
parameter_list|(
name|String
name|title
parameter_list|)
block|{
name|this
operator|.
name|title
operator|=
name|title
expr_stmt|;
block|}
DECL|method|getMimeType ()
specifier|public
name|String
name|getMimeType
parameter_list|()
block|{
return|return
name|mimeType
return|;
block|}
DECL|method|setMimeType (String mimeType)
specifier|public
name|void
name|setMimeType
parameter_list|(
name|String
name|mimeType
parameter_list|)
block|{
name|this
operator|.
name|mimeType
operator|=
name|mimeType
expr_stmt|;
block|}
DECL|method|getFileSize ()
specifier|public
name|Long
name|getFileSize
parameter_list|()
block|{
return|return
name|fileSize
return|;
block|}
DECL|method|setFileSize (Long fileSize)
specifier|public
name|void
name|setFileSize
parameter_list|(
name|Long
name|fileSize
parameter_list|)
block|{
name|this
operator|.
name|fileSize
operator|=
name|fileSize
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
specifier|final
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|(
literal|"IncomingAudio{"
argument_list|)
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"fileId='"
argument_list|)
operator|.
name|append
argument_list|(
name|fileId
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", durationSeconds="
argument_list|)
operator|.
name|append
argument_list|(
name|durationSeconds
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", performer='"
argument_list|)
operator|.
name|append
argument_list|(
name|performer
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", title='"
argument_list|)
operator|.
name|append
argument_list|(
name|title
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", mimeType='"
argument_list|)
operator|.
name|append
argument_list|(
name|mimeType
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", fileSize="
argument_list|)
operator|.
name|append
argument_list|(
name|fileSize
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|'}'
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

