begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.aws.xray.bean
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|aws
operator|.
name|xray
operator|.
name|bean
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|xray
operator|.
name|AWSXRay
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|xray
operator|.
name|entities
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ExchangePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ProducerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|aws
operator|.
name|xray
operator|.
name|XRayTracer
import|;
end_import

begin_class
DECL|class|SomeBackingService
specifier|public
class|class
name|SomeBackingService
block|{
DECL|field|targetEndpoint
specifier|private
specifier|final
name|Endpoint
name|targetEndpoint
decl_stmt|;
DECL|field|template
specifier|private
specifier|final
name|ProducerTemplate
name|template
decl_stmt|;
DECL|method|SomeBackingService (CamelContext context)
specifier|public
name|SomeBackingService
parameter_list|(
name|CamelContext
name|context
parameter_list|)
block|{
name|targetEndpoint
operator|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"seda:backingTask"
argument_list|)
expr_stmt|;
name|template
operator|=
name|context
operator|.
name|createProducerTemplate
argument_list|()
expr_stmt|;
block|}
DECL|method|performMethod (byte[] body, String state, String traceId)
specifier|public
name|String
name|performMethod
parameter_list|(
name|byte
index|[]
name|body
parameter_list|,
name|String
name|state
parameter_list|,
name|String
name|traceId
parameter_list|)
block|{
name|String
name|key
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|Entity
name|traceEntity
init|=
name|AWSXRay
operator|.
name|getGlobalRecorder
argument_list|()
operator|.
name|getTraceEntity
argument_list|()
decl_stmt|;
name|traceEntity
operator|.
name|putMetadata
argument_list|(
literal|"state"
argument_list|,
name|state
argument_list|)
expr_stmt|;
name|Exchange
name|newExchange
init|=
name|targetEndpoint
operator|.
name|createExchange
argument_list|(
name|ExchangePattern
operator|.
name|InOnly
argument_list|)
decl_stmt|;
name|newExchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|newExchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"KEY"
argument_list|,
name|key
argument_list|)
expr_stmt|;
name|newExchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|XRayTracer
operator|.
name|XRAY_TRACE_ID
argument_list|,
name|traceId
argument_list|)
expr_stmt|;
name|newExchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|XRayTracer
operator|.
name|XRAY_TRACE_ENTITY
argument_list|,
name|traceEntity
argument_list|)
expr_stmt|;
name|template
operator|.
name|asyncSend
argument_list|(
name|targetEndpoint
argument_list|,
name|newExchange
argument_list|)
expr_stmt|;
return|return
name|key
return|;
block|}
block|}
end_class

end_unit

