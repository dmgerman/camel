begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.aws.xray.bean
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|aws
operator|.
name|xray
operator|.
name|bean
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|xray
operator|.
name|AWSXRay
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ExchangePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Handler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Headers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ProducerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|aws
operator|.
name|xray
operator|.
name|XRayTrace
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|aws
operator|.
name|xray
operator|.
name|XRayTracer
import|;
end_import

begin_class
annotation|@
name|XRayTrace
DECL|class|SomeBean
specifier|public
class|class
name|SomeBean
block|{
annotation|@
name|Handler
DECL|method|doSomething (@eaders Map<String, Object> headers, CamelContext context)
specifier|public
name|void
name|doSomething
parameter_list|(
annotation|@
name|Headers
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
parameter_list|,
name|CamelContext
name|context
parameter_list|)
block|{
name|ProducerTemplate
name|template
init|=
name|context
operator|.
name|createProducerTemplate
argument_list|()
decl_stmt|;
name|String
name|body
init|=
literal|"New exchange test"
decl_stmt|;
name|Endpoint
name|testEndpoint
init|=
name|template
operator|.
name|getCamelContext
argument_list|()
operator|.
name|getEndpoint
argument_list|(
literal|"seda:test"
argument_list|)
decl_stmt|;
name|Exchange
name|exchange
init|=
name|testEndpoint
operator|.
name|createExchange
argument_list|(
name|ExchangePattern
operator|.
name|InOnly
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|newHeaders
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
comment|// as we create a completely new exchange, this exchange has no trace ID yet specified and would result in a new
comment|// trace ID being generated which would present a flawed view if viewed in the AWS XRay console
name|newHeaders
operator|.
name|put
argument_list|(
name|XRayTracer
operator|.
name|XRAY_TRACE_ID
argument_list|,
name|headers
operator|.
name|get
argument_list|(
name|XRayTracer
operator|.
name|XRAY_TRACE_ID
argument_list|)
argument_list|)
expr_stmt|;
comment|// store the current AWS XRay trace entity (= segment or subsegment) into the headers
name|newHeaders
operator|.
name|put
argument_list|(
name|XRayTracer
operator|.
name|XRAY_TRACE_ENTITY
argument_list|,
name|AWSXRay
operator|.
name|getGlobalRecorder
argument_list|()
operator|.
name|getTraceEntity
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeaders
argument_list|(
name|newHeaders
argument_list|)
expr_stmt|;
name|template
operator|.
name|asyncSend
argument_list|(
name|testEndpoint
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

