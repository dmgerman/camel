begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.thrift
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|thrift
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|TrustManagerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriParams
import|;
end_import

begin_comment
comment|/**  * Configuration parameters for SSL/TLS security negotiation  */
end_comment

begin_class
annotation|@
name|UriParams
DECL|class|ThriftSSLConfiguration
specifier|public
class|class
name|ThriftSSLConfiguration
block|{
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"security"
argument_list|,
name|defaultValue
operator|=
name|ThriftConstants
operator|.
name|THRIFT_DEFAULT_SECURITY_PROTOCOL
argument_list|)
DECL|field|securityProtocol
specifier|private
name|String
name|securityProtocol
init|=
name|ThriftConstants
operator|.
name|THRIFT_DEFAULT_SECURITY_PROTOCOL
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"security"
argument_list|)
DECL|field|cipherSuites
specifier|private
name|String
index|[]
name|cipherSuites
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"consumer,security"
argument_list|)
DECL|field|keyStorePath
specifier|private
name|String
name|keyStorePath
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"consumer,security"
argument_list|,
name|secret
operator|=
literal|true
argument_list|)
DECL|field|keyStorePassword
specifier|private
name|String
name|keyStorePassword
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"consumer,security"
argument_list|)
DECL|field|keyManagerType
specifier|private
name|String
name|keyManagerType
init|=
name|TrustManagerFactory
operator|.
name|getDefaultAlgorithm
argument_list|()
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"consumer,security"
argument_list|,
name|defaultValue
operator|=
name|ThriftConstants
operator|.
name|THRIFT_DEFAULT_SECURITY_STORE_TYPE
argument_list|)
DECL|field|keyStoreType
specifier|private
name|String
name|keyStoreType
init|=
name|ThriftConstants
operator|.
name|THRIFT_DEFAULT_SECURITY_STORE_TYPE
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"producer,security"
argument_list|)
DECL|field|trustStorePath
specifier|private
name|String
name|trustStorePath
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"producer,security"
argument_list|,
name|secret
operator|=
literal|true
argument_list|)
DECL|field|trustPassword
specifier|private
name|String
name|trustPassword
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"producer,security"
argument_list|)
DECL|field|trustManagerType
specifier|private
name|String
name|trustManagerType
init|=
name|TrustManagerFactory
operator|.
name|getDefaultAlgorithm
argument_list|()
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"producer,security"
argument_list|,
name|defaultValue
operator|=
name|ThriftConstants
operator|.
name|THRIFT_DEFAULT_SECURITY_STORE_TYPE
argument_list|)
DECL|field|trustStoreType
specifier|private
name|String
name|trustStoreType
init|=
name|ThriftConstants
operator|.
name|THRIFT_DEFAULT_SECURITY_STORE_TYPE
decl_stmt|;
annotation|@
name|UriParam
argument_list|(
name|label
operator|=
literal|"consumer,security"
argument_list|,
name|defaultValue
operator|=
literal|"false"
argument_list|)
DECL|field|requireClientAuth
specifier|private
name|boolean
name|requireClientAuth
decl_stmt|;
comment|/**      * Security negotiation protocol      */
DECL|method|getSecurityProtocol ()
specifier|public
name|String
name|getSecurityProtocol
parameter_list|()
block|{
return|return
name|securityProtocol
return|;
block|}
DECL|method|setSecurityProtocol (String protocol)
specifier|public
name|void
name|setSecurityProtocol
parameter_list|(
name|String
name|protocol
parameter_list|)
block|{
name|this
operator|.
name|securityProtocol
operator|=
name|protocol
expr_stmt|;
block|}
comment|/**      * Cipher suites array      */
DECL|method|getCipherSuites ()
specifier|public
name|String
index|[]
name|getCipherSuites
parameter_list|()
block|{
return|return
name|cipherSuites
return|;
block|}
DECL|method|setCipherSuites (String[] cipherSuites)
specifier|public
name|void
name|setCipherSuites
parameter_list|(
name|String
index|[]
name|cipherSuites
parameter_list|)
block|{
name|this
operator|.
name|cipherSuites
operator|=
name|cipherSuites
expr_stmt|;
block|}
comment|/**      * Path to the key store file      */
DECL|method|getKeyStorePath ()
specifier|public
name|String
name|getKeyStorePath
parameter_list|()
block|{
return|return
name|keyStorePath
return|;
block|}
DECL|method|setKeyStorePath (String keyStorePath)
specifier|public
name|void
name|setKeyStorePath
parameter_list|(
name|String
name|keyStorePath
parameter_list|)
block|{
name|this
operator|.
name|keyStorePath
operator|=
name|keyStorePath
expr_stmt|;
block|}
comment|/**      * Key store password      */
DECL|method|getKeyStorePassword ()
specifier|public
name|String
name|getKeyStorePassword
parameter_list|()
block|{
return|return
name|keyStorePassword
return|;
block|}
DECL|method|setKeyStorePassword (String keyStorePassword)
specifier|public
name|void
name|setKeyStorePassword
parameter_list|(
name|String
name|keyStorePassword
parameter_list|)
block|{
name|this
operator|.
name|keyStorePassword
operator|=
name|keyStorePassword
expr_stmt|;
block|}
comment|/**      * Key store manager type      */
DECL|method|getKeyManagerType ()
specifier|public
name|String
name|getKeyManagerType
parameter_list|()
block|{
return|return
name|keyManagerType
return|;
block|}
DECL|method|setKeyManagerType (String keyManagerType)
specifier|public
name|void
name|setKeyManagerType
parameter_list|(
name|String
name|keyManagerType
parameter_list|)
block|{
name|this
operator|.
name|keyManagerType
operator|=
name|keyManagerType
expr_stmt|;
block|}
comment|/**      * Key store type      */
DECL|method|getKeyStoreType ()
specifier|public
name|String
name|getKeyStoreType
parameter_list|()
block|{
return|return
name|keyStoreType
return|;
block|}
DECL|method|setKeyStoreType (String keyStoreType)
specifier|public
name|void
name|setKeyStoreType
parameter_list|(
name|String
name|keyStoreType
parameter_list|)
block|{
name|this
operator|.
name|keyStoreType
operator|=
name|keyStoreType
expr_stmt|;
block|}
comment|/**      * Path to the trust store file      */
DECL|method|getTrustStorePath ()
specifier|public
name|String
name|getTrustStorePath
parameter_list|()
block|{
return|return
name|trustStorePath
return|;
block|}
DECL|method|setTrustStorePath (String trustStorePath)
specifier|public
name|void
name|setTrustStorePath
parameter_list|(
name|String
name|trustStorePath
parameter_list|)
block|{
name|this
operator|.
name|trustStorePath
operator|=
name|trustStorePath
expr_stmt|;
block|}
comment|/**      * Trust store password      */
DECL|method|getTrustPassword ()
specifier|public
name|String
name|getTrustPassword
parameter_list|()
block|{
return|return
name|trustPassword
return|;
block|}
DECL|method|setTrustPassword (String trustPassword)
specifier|public
name|void
name|setTrustPassword
parameter_list|(
name|String
name|trustPassword
parameter_list|)
block|{
name|this
operator|.
name|trustPassword
operator|=
name|trustPassword
expr_stmt|;
block|}
comment|/**      * Trust store manager type      */
DECL|method|getTrustManagerType ()
specifier|public
name|String
name|getTrustManagerType
parameter_list|()
block|{
return|return
name|trustManagerType
return|;
block|}
DECL|method|setTrustManagerType (String trustManagerType)
specifier|public
name|void
name|setTrustManagerType
parameter_list|(
name|String
name|trustManagerType
parameter_list|)
block|{
name|this
operator|.
name|trustManagerType
operator|=
name|trustManagerType
expr_stmt|;
block|}
comment|/**      * Trust store type      */
DECL|method|getTrustStoreType ()
specifier|public
name|String
name|getTrustStoreType
parameter_list|()
block|{
return|return
name|trustStoreType
return|;
block|}
DECL|method|setTrustStoreType (String trustStoreType)
specifier|public
name|void
name|setTrustStoreType
parameter_list|(
name|String
name|trustStoreType
parameter_list|)
block|{
name|this
operator|.
name|trustStoreType
operator|=
name|trustStoreType
expr_stmt|;
block|}
comment|/**      * Set if client authentication is required      */
DECL|method|isRequireClientAuth ()
specifier|public
name|boolean
name|isRequireClientAuth
parameter_list|()
block|{
return|return
name|requireClientAuth
return|;
block|}
DECL|method|setRequireClientAuth (boolean requireClientAuth)
specifier|public
name|void
name|setRequireClientAuth
parameter_list|(
name|boolean
name|requireClientAuth
parameter_list|)
block|{
name|this
operator|.
name|requireClientAuth
operator|=
name|requireClientAuth
expr_stmt|;
block|}
block|}
end_class

end_unit

