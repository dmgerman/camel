begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.thrift
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|thrift
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|thrift
operator|.
name|generated
operator|.
name|Calculator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|thrift
operator|.
name|generated
operator|.
name|Operation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|thrift
operator|.
name|generated
operator|.
name|Work
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|thrift
operator|.
name|impl
operator|.
name|CalculatorSyncServerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|AvailablePortFinder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|TProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|protocol
operator|.
name|TBinaryProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|server
operator|.
name|TServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|server
operator|.
name|TThreadPoolServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TServerSocket
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TTransportFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TZlibTransport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|ThriftProducerZlibCompressionTest
specifier|public
class|class
name|ThriftProducerZlibCompressionTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ThriftProducerZlibCompressionTest
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|serverTransport
specifier|private
specifier|static
name|TServerSocket
name|serverTransport
decl_stmt|;
DECL|field|server
specifier|private
specifier|static
name|TServer
name|server
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"rawtypes"
block|}
argument_list|)
DECL|field|processor
specifier|private
specifier|static
name|Calculator
operator|.
name|Processor
name|processor
decl_stmt|;
DECL|field|THRIFT_TEST_PORT
specifier|private
specifier|static
specifier|final
name|int
name|THRIFT_TEST_PORT
init|=
name|AvailablePortFinder
operator|.
name|getNextAvailable
argument_list|()
decl_stmt|;
DECL|field|THRIFT_TEST_NUM1
specifier|private
specifier|static
specifier|final
name|int
name|THRIFT_TEST_NUM1
init|=
literal|12
decl_stmt|;
DECL|field|THRIFT_TEST_NUM2
specifier|private
specifier|static
specifier|final
name|int
name|THRIFT_TEST_NUM2
init|=
literal|13
decl_stmt|;
DECL|field|THRIFT_CLIENT_TIMEOUT
specifier|private
specifier|static
specifier|final
name|int
name|THRIFT_CLIENT_TIMEOUT
init|=
literal|2000
decl_stmt|;
annotation|@
name|BeforeClass
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unchecked"
block|,
literal|"rawtypes"
block|}
argument_list|)
DECL|method|startThriftServer ()
specifier|public
specifier|static
name|void
name|startThriftServer
parameter_list|()
throws|throws
name|Exception
block|{
name|processor
operator|=
operator|new
name|Calculator
operator|.
name|Processor
argument_list|(
operator|new
name|CalculatorSyncServerImpl
argument_list|()
argument_list|)
expr_stmt|;
name|serverTransport
operator|=
operator|new
name|TServerSocket
argument_list|(
operator|new
name|InetSocketAddress
argument_list|(
name|InetAddress
operator|.
name|getByName
argument_list|(
literal|"localhost"
argument_list|)
argument_list|,
name|THRIFT_TEST_PORT
argument_list|)
argument_list|,
name|THRIFT_CLIENT_TIMEOUT
argument_list|)
expr_stmt|;
name|TThreadPoolServer
operator|.
name|Args
name|args
init|=
operator|new
name|TThreadPoolServer
operator|.
name|Args
argument_list|(
name|serverTransport
argument_list|)
decl_stmt|;
name|args
operator|.
name|processor
argument_list|(
operator|(
name|TProcessor
operator|)
name|processor
argument_list|)
expr_stmt|;
name|args
operator|.
name|protocolFactory
argument_list|(
operator|new
name|TBinaryProtocol
operator|.
name|Factory
argument_list|()
argument_list|)
expr_stmt|;
name|args
operator|.
name|transportFactory
argument_list|(
operator|(
name|TTransportFactory
operator|)
operator|new
name|TZlibTransport
operator|.
name|Factory
argument_list|()
argument_list|)
expr_stmt|;
name|server
operator|=
operator|new
name|TThreadPoolServer
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|Runnable
name|simple
init|=
operator|new
name|Runnable
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Thrift server with zlib compression started on port: {}"
argument_list|,
name|THRIFT_TEST_PORT
argument_list|)
expr_stmt|;
name|server
operator|.
name|serve
argument_list|()
expr_stmt|;
block|}
block|}
decl_stmt|;
operator|new
name|Thread
argument_list|(
name|simple
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|stopThriftServer ()
specifier|public
specifier|static
name|void
name|stopThriftServer
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|server
operator|!=
literal|null
condition|)
block|{
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
name|serverTransport
operator|.
name|close
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Thrift server with zlib compression stoped"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"rawtypes"
block|,
literal|"unchecked"
block|}
argument_list|)
DECL|method|testCalculateMethodInvocation ()
specifier|public
name|void
name|testCalculateMethodInvocation
parameter_list|()
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Thrift calculate method sync test start"
argument_list|)
expr_stmt|;
name|List
name|requestBody
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|requestBody
operator|.
name|add
argument_list|(
operator|(
name|int
operator|)
literal|1
argument_list|)
expr_stmt|;
name|requestBody
operator|.
name|add
argument_list|(
operator|new
name|Work
argument_list|(
name|THRIFT_TEST_NUM1
argument_list|,
name|THRIFT_TEST_NUM2
argument_list|,
name|Operation
operator|.
name|MULTIPLY
argument_list|)
argument_list|)
expr_stmt|;
name|Object
name|responseBody
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:thrift-zlib-calculate"
argument_list|,
name|requestBody
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|responseBody
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|responseBody
operator|instanceof
name|Integer
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|THRIFT_TEST_NUM1
operator|*
name|THRIFT_TEST_NUM2
argument_list|,
name|responseBody
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testVoidMethodInvocation ()
specifier|public
name|void
name|testVoidMethodInvocation
parameter_list|()
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Thrift method with empty parameters and void output sync test start"
argument_list|)
expr_stmt|;
name|Object
name|requestBody
init|=
literal|null
decl_stmt|;
name|Object
name|responseBody
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:thrift-zlib-ping"
argument_list|,
name|requestBody
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|responseBody
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"direct:thrift-zlib-calculate"
argument_list|)
operator|.
name|to
argument_list|(
literal|"thrift://localhost:"
operator|+
name|THRIFT_TEST_PORT
operator|+
literal|"/org.apache.camel.component.thrift.generated.Calculator?method=calculate&compressionType=ZLIB&synchronous=true"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:thrift-zlib-ping"
argument_list|)
operator|.
name|to
argument_list|(
literal|"thrift://localhost:"
operator|+
name|THRIFT_TEST_PORT
operator|+
literal|"/org.apache.camel.component.thrift.generated.Calculator?method=ping&compressionType=ZLIB&synchronous=true"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

