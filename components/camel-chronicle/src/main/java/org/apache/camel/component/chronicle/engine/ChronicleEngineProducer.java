begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.chronicle.engine
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|chronicle
operator|.
name|engine
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|net
operator|.
name|openhft
operator|.
name|chronicle
operator|.
name|engine
operator|.
name|api
operator|.
name|map
operator|.
name|MapView
import|;
end_import

begin_import
import|import
name|net
operator|.
name|openhft
operator|.
name|chronicle
operator|.
name|engine
operator|.
name|api
operator|.
name|pubsub
operator|.
name|Publisher
import|;
end_import

begin_import
import|import
name|net
operator|.
name|openhft
operator|.
name|chronicle
operator|.
name|engine
operator|.
name|api
operator|.
name|pubsub
operator|.
name|TopicPublisher
import|;
end_import

begin_import
import|import
name|net
operator|.
name|openhft
operator|.
name|chronicle
operator|.
name|engine
operator|.
name|api
operator|.
name|tree
operator|.
name|AssetTree
import|;
end_import

begin_import
import|import
name|net
operator|.
name|openhft
operator|.
name|chronicle
operator|.
name|engine
operator|.
name|tree
operator|.
name|QueueView
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|InvokeOnHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|HeaderSelectorProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|chronicle
operator|.
name|engine
operator|.
name|ChronicleEngineHelper
operator|.
name|WeakRef
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|chronicle
operator|.
name|engine
operator|.
name|ChronicleEngineHelper
operator|.
name|mandatoryBody
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|chronicle
operator|.
name|engine
operator|.
name|ChronicleEngineHelper
operator|.
name|mandatoryKey
import|;
end_import

begin_class
DECL|class|ChronicleEngineProducer
specifier|public
class|class
name|ChronicleEngineProducer
extends|extends
name|HeaderSelectorProducer
block|{
DECL|field|uri
specifier|private
specifier|final
name|String
name|uri
decl_stmt|;
DECL|field|topicPublisher
specifier|private
name|WeakRef
argument_list|<
name|TopicPublisher
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
argument_list|>
name|topicPublisher
decl_stmt|;
DECL|field|publisher
specifier|private
name|WeakRef
argument_list|<
name|Publisher
argument_list|<
name|Object
argument_list|>
argument_list|>
name|publisher
decl_stmt|;
DECL|field|mapView
specifier|private
name|WeakRef
argument_list|<
name|MapView
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
argument_list|>
name|mapView
decl_stmt|;
DECL|field|queueView
specifier|private
name|WeakRef
argument_list|<
name|QueueView
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
argument_list|>
name|queueView
decl_stmt|;
DECL|field|client
specifier|private
name|AssetTree
name|client
decl_stmt|;
DECL|method|ChronicleEngineProducer (ChronicleEngineEndpoint endpoint)
specifier|public
name|ChronicleEngineProducer
parameter_list|(
name|ChronicleEngineEndpoint
name|endpoint
parameter_list|)
block|{
name|super
argument_list|(
name|endpoint
argument_list|,
name|ChronicleEngineConstants
operator|.
name|ACTION
argument_list|,
name|endpoint
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|uri
operator|=
name|endpoint
operator|.
name|getUri
argument_list|()
expr_stmt|;
name|this
operator|.
name|topicPublisher
operator|=
name|WeakRef
operator|.
name|create
argument_list|(
parameter_list|()
lambda|->
name|client
operator|.
name|acquireTopicPublisher
argument_list|(
name|uri
argument_list|,
name|Object
operator|.
name|class
argument_list|,
name|Object
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|publisher
operator|=
name|WeakRef
operator|.
name|create
argument_list|(
parameter_list|()
lambda|->
name|client
operator|.
name|acquirePublisher
argument_list|(
name|uri
argument_list|,
name|Object
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|mapView
operator|=
name|WeakRef
operator|.
name|create
argument_list|(
parameter_list|()
lambda|->
name|client
operator|.
name|acquireMap
argument_list|(
name|uri
argument_list|,
name|Object
operator|.
name|class
argument_list|,
name|Object
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|queueView
operator|=
name|WeakRef
operator|.
name|create
argument_list|(
parameter_list|()
lambda|->
name|client
operator|.
name|acquireQueue
argument_list|(
name|uri
argument_list|,
name|Object
operator|.
name|class
argument_list|,
name|Object
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// ***************************
comment|// AssetTree
comment|// ***************************
annotation|@
name|Override
DECL|method|doStart ()
specifier|protected
name|void
name|doStart
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|doStart
argument_list|()
expr_stmt|;
if|if
condition|(
name|client
operator|!=
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"AssetTree already configured"
argument_list|)
throw|;
block|}
name|client
operator|=
operator|(
operator|(
name|ChronicleEngineEndpoint
operator|)
name|getEndpoint
argument_list|()
operator|)
operator|.
name|createRemoteAssetTree
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doStop ()
specifier|protected
name|void
name|doStop
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|client
operator|!=
literal|null
condition|)
block|{
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
name|client
operator|=
literal|null
expr_stmt|;
block|}
name|super
operator|.
name|doStop
argument_list|()
expr_stmt|;
block|}
comment|// ***************************
comment|// Actions / Topic
comment|// ***************************
annotation|@
name|InvokeOnHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|ACTION_PUBLISH
argument_list|)
DECL|method|onPublish (Message message)
specifier|public
name|void
name|onPublish
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
specifier|final
name|Object
name|key
init|=
name|message
operator|.
name|getHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|KEY
argument_list|)
decl_stmt|;
specifier|final
name|Object
name|val
init|=
name|mandatoryBody
argument_list|(
name|message
argument_list|)
decl_stmt|;
if|if
condition|(
name|key
operator|==
literal|null
condition|)
block|{
name|publisher
operator|.
name|get
argument_list|()
operator|.
name|publish
argument_list|(
name|val
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|topicPublisher
operator|.
name|get
argument_list|()
operator|.
name|publish
argument_list|(
name|key
argument_list|,
name|val
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|InvokeOnHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|ACTION_PUBLISH_AND_INDEX
argument_list|)
DECL|method|onPublishAndIndex (Message message)
specifier|public
name|void
name|onPublishAndIndex
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
name|message
operator|.
name|setHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|QUEUE_INDEX
argument_list|,
name|queueView
operator|.
name|get
argument_list|()
operator|.
name|publishAndIndex
argument_list|(
name|mandatoryKey
argument_list|(
name|message
argument_list|)
argument_list|,
name|mandatoryBody
argument_list|(
name|message
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// ***************************
comment|// Actions / Map / Put
comment|// ***************************
annotation|@
name|InvokeOnHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|ACTION_PUT
argument_list|)
DECL|method|onPut (Message message)
specifier|public
name|void
name|onPut
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
name|message
operator|.
name|setHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|OLD_VALUE
argument_list|,
name|mapView
operator|.
name|get
argument_list|()
operator|.
name|put
argument_list|(
name|mandatoryKey
argument_list|(
name|message
argument_list|)
argument_list|,
name|mandatoryBody
argument_list|(
name|message
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|InvokeOnHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|ACTION_GET_AND_PUT
argument_list|)
DECL|method|onGetAndPut (Message message)
specifier|public
name|void
name|onGetAndPut
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
name|message
operator|.
name|setBody
argument_list|(
name|mapView
operator|.
name|get
argument_list|()
operator|.
name|getAndPut
argument_list|(
name|mandatoryKey
argument_list|(
name|message
argument_list|)
argument_list|,
name|mandatoryBody
argument_list|(
name|message
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|InvokeOnHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|ACTION_PUT_ALL
argument_list|)
DECL|method|onPutAll (Message message)
specifier|public
name|void
name|onPutAll
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
name|mapView
operator|.
name|get
argument_list|()
operator|.
name|putAll
argument_list|(
name|ObjectHelper
operator|.
name|notNull
argument_list|(
name|message
operator|.
name|getBody
argument_list|(
name|Map
operator|.
name|class
argument_list|)
argument_list|,
name|ChronicleEngineConstants
operator|.
name|VALUE
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|InvokeOnHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|ACTION_PUT_IF_ABSENT
argument_list|)
DECL|method|onPutIfAbsent (Message message)
specifier|public
name|void
name|onPutIfAbsent
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
name|message
operator|.
name|setHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|RESULT
argument_list|,
name|mapView
operator|.
name|get
argument_list|()
operator|.
name|putIfAbsent
argument_list|(
name|mandatoryKey
argument_list|(
name|message
argument_list|)
argument_list|,
name|mandatoryBody
argument_list|(
name|message
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// ***************************
comment|// Actions / Map / Get
comment|// ***************************
annotation|@
name|InvokeOnHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|ACTION_GET
argument_list|)
DECL|method|onGet (Message message)
specifier|public
name|void
name|onGet
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
specifier|final
name|Long
name|index
init|=
name|message
operator|.
name|getHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|QUEUE_INDEX
argument_list|,
name|Long
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|index
operator|==
literal|null
condition|)
block|{
name|message
operator|.
name|setBody
argument_list|(
name|mapView
operator|.
name|get
argument_list|()
operator|.
name|getOrDefault
argument_list|(
name|mandatoryKey
argument_list|(
name|message
argument_list|)
argument_list|,
name|message
operator|.
name|getHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|DEFAULT_VALUE
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QueueView
operator|.
name|Excerpt
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|excerpt
init|=
name|queueView
operator|.
name|get
argument_list|()
operator|.
name|getExcerpt
argument_list|(
name|index
operator|.
name|longValue
argument_list|()
argument_list|)
decl_stmt|;
name|message
operator|.
name|setHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|PATH
argument_list|,
name|excerpt
operator|.
name|topic
argument_list|()
argument_list|)
expr_stmt|;
name|message
operator|.
name|setBody
argument_list|(
name|excerpt
operator|.
name|message
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|InvokeOnHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|ACTION_GET_AND_REMOVE
argument_list|)
DECL|method|onGetAndRemove (Message message)
specifier|public
name|void
name|onGetAndRemove
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
name|message
operator|.
name|setBody
argument_list|(
name|mapView
operator|.
name|get
argument_list|()
operator|.
name|getAndRemove
argument_list|(
name|mandatoryKey
argument_list|(
name|message
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// ***************************
comment|// Actions / Map
comment|// ***************************
annotation|@
name|InvokeOnHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|ACTION_REMOVE
argument_list|)
DECL|method|onRemove (Message message)
specifier|public
name|void
name|onRemove
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
name|Object
name|oldValue
init|=
name|message
operator|.
name|getHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|OLD_VALUE
argument_list|)
decl_stmt|;
if|if
condition|(
name|oldValue
operator|!=
literal|null
condition|)
block|{
name|message
operator|.
name|setHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|RESULT
argument_list|,
name|mapView
operator|.
name|get
argument_list|()
operator|.
name|remove
argument_list|(
name|mandatoryKey
argument_list|(
name|message
argument_list|)
argument_list|,
name|oldValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|message
operator|.
name|setHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|OLD_VALUE
argument_list|,
name|mapView
operator|.
name|get
argument_list|()
operator|.
name|remove
argument_list|(
name|mandatoryKey
argument_list|(
name|message
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|InvokeOnHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|ACTION_IS_EMPTY
argument_list|)
DECL|method|onIsEmpty (Message message)
specifier|public
name|void
name|onIsEmpty
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
name|message
operator|.
name|setHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|RESULT
argument_list|,
name|mapView
operator|.
name|get
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|InvokeOnHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|ACTION_IS_SIZE
argument_list|)
DECL|method|onSize (Message message)
specifier|public
name|void
name|onSize
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
name|message
operator|.
name|setHeader
argument_list|(
name|ChronicleEngineConstants
operator|.
name|RESULT
argument_list|,
name|mapView
operator|.
name|get
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

