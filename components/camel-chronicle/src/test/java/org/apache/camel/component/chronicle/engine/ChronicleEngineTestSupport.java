begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.chronicle.engine
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|chronicle
operator|.
name|engine
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|net
operator|.
name|openhft
operator|.
name|chronicle
operator|.
name|core
operator|.
name|io
operator|.
name|Closeable
import|;
end_import

begin_import
import|import
name|net
operator|.
name|openhft
operator|.
name|chronicle
operator|.
name|engine
operator|.
name|server
operator|.
name|ServerEndpoint
import|;
end_import

begin_import
import|import
name|net
operator|.
name|openhft
operator|.
name|chronicle
operator|.
name|engine
operator|.
name|tree
operator|.
name|VanillaAssetTree
import|;
end_import

begin_import
import|import
name|net
operator|.
name|openhft
operator|.
name|chronicle
operator|.
name|network
operator|.
name|TCPRegistry
import|;
end_import

begin_import
import|import
name|net
operator|.
name|openhft
operator|.
name|chronicle
operator|.
name|network
operator|.
name|connection
operator|.
name|TcpChannelHub
import|;
end_import

begin_import
import|import
name|net
operator|.
name|openhft
operator|.
name|chronicle
operator|.
name|wire
operator|.
name|WireType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|AvailablePortFinder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestName
import|;
end_import

begin_class
annotation|@
name|Ignore
DECL|class|ChronicleEngineTestSupport
specifier|public
class|class
name|ChronicleEngineTestSupport
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Rule
DECL|field|name
specifier|public
specifier|final
name|TestName
name|name
init|=
operator|new
name|TestName
argument_list|()
decl_stmt|;
DECL|field|clients
specifier|private
specifier|final
name|List
argument_list|<
name|VanillaAssetTree
argument_list|>
name|clients
decl_stmt|;
DECL|field|serverAssetTree
specifier|private
name|VanillaAssetTree
name|serverAssetTree
decl_stmt|;
DECL|field|serverEndpoint
specifier|private
name|ServerEndpoint
name|serverEndpoint
decl_stmt|;
DECL|field|wireType
specifier|private
name|WireType
name|wireType
decl_stmt|;
DECL|field|address
specifier|private
name|String
name|address
decl_stmt|;
DECL|method|ChronicleEngineTestSupport ()
specifier|protected
name|ChronicleEngineTestSupport
parameter_list|()
block|{
name|this
operator|.
name|clients
operator|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
DECL|method|getName ()
specifier|public
name|TestName
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|getServerAssetTree ()
specifier|public
name|VanillaAssetTree
name|getServerAssetTree
parameter_list|()
block|{
return|return
name|serverAssetTree
return|;
block|}
DECL|method|getServerEndpoint ()
specifier|public
name|ServerEndpoint
name|getServerEndpoint
parameter_list|()
block|{
return|return
name|serverEndpoint
return|;
block|}
DECL|method|getWireType ()
specifier|public
name|WireType
name|getWireType
parameter_list|()
block|{
return|return
name|wireType
return|;
block|}
DECL|method|getAddress ()
specifier|public
name|String
name|getAddress
parameter_list|()
block|{
return|return
name|address
return|;
block|}
DECL|method|getAddresses ()
specifier|public
name|String
index|[]
name|getAddresses
parameter_list|()
block|{
return|return
operator|new
name|String
index|[]
block|{
name|getAddress
argument_list|()
block|}
return|;
block|}
DECL|method|client ()
specifier|public
name|VanillaAssetTree
name|client
parameter_list|()
block|{
name|VanillaAssetTree
name|client
init|=
operator|new
name|VanillaAssetTree
argument_list|()
operator|.
name|forRemoteAccess
argument_list|(
name|getAddresses
argument_list|()
argument_list|,
name|getWireType
argument_list|()
argument_list|)
decl_stmt|;
name|clients
operator|.
name|add
argument_list|(
name|client
argument_list|)
expr_stmt|;
return|return
name|client
return|;
block|}
comment|// **************************
comment|// set-up / tear-down
comment|// **************************
annotation|@
name|Override
DECL|method|doPreSetup ()
specifier|protected
name|void
name|doPreSetup
parameter_list|()
throws|throws
name|Exception
block|{
name|address
operator|=
literal|"localhost:"
operator|+
name|AvailablePortFinder
operator|.
name|getNextAvailable
argument_list|()
expr_stmt|;
name|wireType
operator|=
name|WireType
operator|.
name|TEXT
expr_stmt|;
name|serverAssetTree
operator|=
operator|new
name|VanillaAssetTree
argument_list|()
operator|.
name|forTesting
argument_list|()
expr_stmt|;
name|serverEndpoint
operator|=
operator|new
name|ServerEndpoint
argument_list|(
name|address
argument_list|,
name|serverAssetTree
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|clients
operator|.
name|forEach
argument_list|(
name|Closeable
operator|::
name|closeQuietly
argument_list|)
expr_stmt|;
name|Closeable
operator|.
name|closeQuietly
argument_list|(
name|serverAssetTree
argument_list|)
expr_stmt|;
name|Closeable
operator|.
name|closeQuietly
argument_list|(
name|serverEndpoint
argument_list|)
expr_stmt|;
name|TcpChannelHub
operator|.
name|closeAllHubs
argument_list|()
expr_stmt|;
name|TCPRegistry
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

