begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.wordpress
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|model
operator|.
name|PostOrderBy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|model
operator|.
name|PostSearchCriteria
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|instanceOf
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|notNullValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|emptyCollectionOf
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|Matchers
operator|.
name|not
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_class
DECL|class|WordpressComponentTest
specifier|public
class|class
name|WordpressComponentTest
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|WordpressComponentTest
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Test
DECL|method|testParseUriPropertiesCriteria ()
specifier|public
name|void
name|testParseUriPropertiesCriteria
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|WordpressComponent
name|component
init|=
operator|new
name|WordpressComponent
argument_list|(
name|Mockito
operator|.
name|mock
argument_list|(
name|CamelContext
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|WordpressEndpoint
name|endpoint
init|=
operator|(
name|WordpressEndpoint
operator|)
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"wordpress:post?apiVersion=2&url=http://mysite.com/&criteria.search=test&criteria.page=1&criteria.perPage=10&criteria.orderBy=author&criteria.categories=camel,dozer,json"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|getConfig
argument_list|()
operator|.
name|getSearchCriteria
argument_list|()
argument_list|,
name|instanceOf
argument_list|(
name|PostSearchCriteria
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|endpoint
operator|.
name|getConfig
argument_list|()
operator|.
name|getSearchCriteria
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|getConfig
argument_list|()
operator|.
name|getSearchCriteria
argument_list|()
operator|.
name|getPage
argument_list|()
argument_list|,
name|is
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|getConfig
argument_list|()
operator|.
name|getSearchCriteria
argument_list|()
operator|.
name|getPerPage
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|endpoint
operator|.
name|getConfig
argument_list|()
operator|.
name|getSearchCriteria
argument_list|()
operator|.
name|getSearch
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|PostSearchCriteria
operator|)
name|endpoint
operator|.
name|getConfig
argument_list|()
operator|.
name|getSearchCriteria
argument_list|()
operator|)
operator|.
name|getOrderBy
argument_list|()
argument_list|,
name|is
argument_list|(
name|PostOrderBy
operator|.
name|author
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|PostSearchCriteria
operator|)
name|endpoint
operator|.
name|getConfig
argument_list|()
operator|.
name|getSearchCriteria
argument_list|()
operator|)
operator|.
name|getCategories
argument_list|()
argument_list|,
name|notNullValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
operator|(
operator|(
name|PostSearchCriteria
operator|)
name|endpoint
operator|.
name|getConfig
argument_list|()
operator|.
name|getSearchCriteria
argument_list|()
operator|)
operator|.
name|getCategories
argument_list|()
argument_list|,
name|not
argument_list|(
name|emptyCollectionOf
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|LOGGER
operator|.
name|info
argument_list|(
literal|"Categories are {}"
argument_list|,
operator|(
operator|(
name|PostSearchCriteria
operator|)
name|endpoint
operator|.
name|getConfig
argument_list|()
operator|.
name|getSearchCriteria
argument_list|()
operator|)
operator|.
name|getCategories
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

