begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.wordpress.api.service.spi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|service
operator|.
name|spi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|QueryParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|model
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|model
operator|.
name|Taxonomy
import|;
end_import

begin_interface
annotation|@
name|Path
argument_list|(
literal|"/wp"
argument_list|)
DECL|interface|TaxonomySPI
specifier|public
interface|interface
name|TaxonomySPI
block|{
comment|// @formatter:off
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/v{apiVersion}/taxonomies"
argument_list|)
annotation|@
name|Produces
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
DECL|method|list (@athParamR) String apiVersion, @QueryParam(R) Context context, @QueryParam(R) String postType)
name|Map
argument_list|<
name|String
argument_list|,
name|Taxonomy
argument_list|>
name|list
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"apiVersion"
argument_list|)
name|String
name|apiVersion
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"context"
argument_list|)
name|Context
name|context
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"type"
argument_list|)
name|String
name|postType
parameter_list|)
function_decl|;
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/v{apiVersion}/taxonomies/{taxonomy}"
argument_list|)
annotation|@
name|Produces
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
DECL|method|retrieve (@athParamR) String apiVersion, @QueryParam(R) Context context, @PathParam(R) String taxonomy)
name|Taxonomy
name|retrieve
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"apiVersion"
argument_list|)
name|String
name|apiVersion
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"context"
argument_list|)
name|Context
name|context
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"taxonomy"
argument_list|)
name|String
name|taxonomy
parameter_list|)
function_decl|;
block|}
end_interface

end_unit

