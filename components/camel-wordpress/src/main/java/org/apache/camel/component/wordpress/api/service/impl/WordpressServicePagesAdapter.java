begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.wordpress.api.service.impl
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|service
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|model
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|model
operator|.
name|Page
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|model
operator|.
name|PageSearchCriteria
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|service
operator|.
name|WordpressServicePages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|service
operator|.
name|WordpressServicePosts
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|service
operator|.
name|spi
operator|.
name|PagesSPI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|service
operator|.
name|spi
operator|.
name|PostsSPI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|JAXRSClientFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
operator|.
name|checkArgument
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
operator|.
name|checkNotNull
import|;
end_import

begin_comment
comment|/**  * The {@link WordpressServicePosts} implementation. Aggregates the {@link PostsSPI} interface using {@link JAXRSClientFactory} to make the API calls.  *   * @since 0.0.1  */
end_comment

begin_class
DECL|class|WordpressServicePagesAdapter
specifier|public
class|class
name|WordpressServicePagesAdapter
extends|extends
name|AbstractWordpressCrudServiceAdapter
argument_list|<
name|PagesSPI
argument_list|,
name|Page
argument_list|,
name|PageSearchCriteria
argument_list|>
implements|implements
name|WordpressServicePages
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|WordpressServicePagesAdapter
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|method|WordpressServicePagesAdapter (String wordpressUrl, String apiVersion)
specifier|public
name|WordpressServicePagesAdapter
parameter_list|(
name|String
name|wordpressUrl
parameter_list|,
name|String
name|apiVersion
parameter_list|)
block|{
name|super
argument_list|(
name|wordpressUrl
argument_list|,
name|apiVersion
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getSpiType ()
specifier|protected
name|Class
argument_list|<
name|PagesSPI
argument_list|>
name|getSpiType
parameter_list|()
block|{
return|return
name|PagesSPI
operator|.
name|class
return|;
block|}
comment|// @formatter:off
annotation|@
name|Override
DECL|method|list (PageSearchCriteria c)
specifier|public
name|List
argument_list|<
name|Page
argument_list|>
name|list
parameter_list|(
name|PageSearchCriteria
name|c
parameter_list|)
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Calling list pages: searchCriteria {}"
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|checkNotNull
argument_list|(
name|c
argument_list|,
literal|"Please provide a search criteria"
argument_list|)
expr_stmt|;
return|return
name|getSpi
argument_list|()
operator|.
name|list
argument_list|(
name|this
operator|.
name|getApiVersion
argument_list|()
argument_list|,
name|c
operator|.
name|getContext
argument_list|()
argument_list|,
name|c
operator|.
name|getPage
argument_list|()
argument_list|,
name|c
operator|.
name|getPerPage
argument_list|()
argument_list|,
name|c
operator|.
name|getSearch
argument_list|()
argument_list|,
name|c
operator|.
name|getAfter
argument_list|()
argument_list|,
name|c
operator|.
name|getAuthor
argument_list|()
argument_list|,
name|c
operator|.
name|getAuthorExclude
argument_list|()
argument_list|,
name|c
operator|.
name|getBefore
argument_list|()
argument_list|,
name|c
operator|.
name|getExclude
argument_list|()
argument_list|,
name|c
operator|.
name|getInclude
argument_list|()
argument_list|,
name|c
operator|.
name|getMenuOrder
argument_list|()
argument_list|,
name|c
operator|.
name|getOffset
argument_list|()
argument_list|,
name|c
operator|.
name|getOrder
argument_list|()
argument_list|,
name|c
operator|.
name|getOrderBy
argument_list|()
argument_list|,
name|c
operator|.
name|getParent
argument_list|()
argument_list|,
name|c
operator|.
name|getParentExclude
argument_list|()
argument_list|,
name|c
operator|.
name|getSlug
argument_list|()
argument_list|,
name|c
operator|.
name|getStatus
argument_list|()
argument_list|,
name|c
operator|.
name|getFilter
argument_list|()
argument_list|)
return|;
block|}
comment|// @formatter:on
annotation|@
name|Override
DECL|method|retrieve (Integer pageId, Context context, String password)
specifier|public
name|Page
name|retrieve
parameter_list|(
name|Integer
name|pageId
parameter_list|,
name|Context
name|context
parameter_list|,
name|String
name|password
parameter_list|)
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Calling retrieve: postId {};  context: {}"
argument_list|,
name|pageId
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|checkArgument
argument_list|(
name|pageId
operator|>
literal|0
argument_list|,
literal|"Please provide a non zero post id"
argument_list|)
expr_stmt|;
return|return
name|getSpi
argument_list|()
operator|.
name|retrieve
argument_list|(
name|this
operator|.
name|getApiVersion
argument_list|()
argument_list|,
name|pageId
argument_list|,
name|context
argument_list|,
name|password
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|doCreate (Page object)
specifier|protected
name|Page
name|doCreate
parameter_list|(
name|Page
name|object
parameter_list|)
block|{
return|return
name|getSpi
argument_list|()
operator|.
name|create
argument_list|(
name|getApiVersion
argument_list|()
argument_list|,
name|object
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|doDelete (Integer id)
specifier|protected
name|Page
name|doDelete
parameter_list|(
name|Integer
name|id
parameter_list|)
block|{
return|return
name|getSpi
argument_list|()
operator|.
name|delete
argument_list|(
name|getApiVersion
argument_list|()
argument_list|,
name|id
argument_list|,
literal|false
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|doUpdate (Integer id, Page object)
specifier|protected
name|Page
name|doUpdate
parameter_list|(
name|Integer
name|id
parameter_list|,
name|Page
name|object
parameter_list|)
block|{
return|return
name|getSpi
argument_list|()
operator|.
name|update
argument_list|(
name|getApiVersion
argument_list|()
argument_list|,
name|id
argument_list|,
name|object
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|doRetrieve (Integer entityID, Context context)
specifier|protected
name|Page
name|doRetrieve
parameter_list|(
name|Integer
name|entityID
parameter_list|,
name|Context
name|context
parameter_list|)
block|{
return|return
name|getSpi
argument_list|()
operator|.
name|retrieve
argument_list|(
name|getApiVersion
argument_list|()
argument_list|,
name|entityID
argument_list|,
name|context
argument_list|,
literal|null
argument_list|)
return|;
block|}
block|}
end_class

end_unit

