begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.wordpress.api
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|service
operator|.
name|WordpressService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|service
operator|.
name|WordpressServicePosts
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|service
operator|.
name|WordpressServiceUsers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|service
operator|.
name|impl
operator|.
name|WordpressServicePostsAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|service
operator|.
name|impl
operator|.
name|WordpressServiceUsersAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
operator|.
name|checkNotNull
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Strings
operator|.
name|emptyToNull
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Strings
operator|.
name|isNullOrEmpty
import|;
end_import

begin_class
DECL|class|WordpressServiceProvider
specifier|public
specifier|final
class|class
name|WordpressServiceProvider
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|WordpressServiceProvider
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|services
specifier|private
name|HashMap
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|WordpressService
argument_list|>
argument_list|,
name|WordpressService
argument_list|>
name|services
decl_stmt|;
DECL|field|configuration
specifier|private
name|WordpressAPIConfiguration
name|configuration
decl_stmt|;
DECL|method|WordpressServiceProvider ()
specifier|private
name|WordpressServiceProvider
parameter_list|()
block|{      }
DECL|class|ServiceProviderHolder
specifier|private
specifier|static
class|class
name|ServiceProviderHolder
block|{
DECL|field|INSTANCE
specifier|private
specifier|static
specifier|final
name|WordpressServiceProvider
name|INSTANCE
init|=
operator|new
name|WordpressServiceProvider
argument_list|()
decl_stmt|;
block|}
DECL|method|getInstance ()
specifier|public
specifier|static
name|WordpressServiceProvider
name|getInstance
parameter_list|()
block|{
return|return
name|ServiceProviderHolder
operator|.
name|INSTANCE
return|;
block|}
DECL|method|init (String wordpressApiUrl)
specifier|public
name|void
name|init
parameter_list|(
name|String
name|wordpressApiUrl
parameter_list|)
block|{
name|this
operator|.
name|init
argument_list|(
name|wordpressApiUrl
argument_list|,
name|WordpressConstants
operator|.
name|API_VERSION
argument_list|)
expr_stmt|;
block|}
DECL|method|init (String wordpressApiUrl, String apiVersion)
specifier|public
name|void
name|init
parameter_list|(
name|String
name|wordpressApiUrl
parameter_list|,
name|String
name|apiVersion
parameter_list|)
block|{
name|this
operator|.
name|init
argument_list|(
operator|new
name|WordpressAPIConfiguration
argument_list|(
name|wordpressApiUrl
argument_list|,
name|apiVersion
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|init (WordpressAPIConfiguration config)
specifier|public
name|void
name|init
parameter_list|(
name|WordpressAPIConfiguration
name|config
parameter_list|)
block|{
name|checkNotNull
argument_list|(
name|emptyToNull
argument_list|(
name|config
operator|.
name|getApiUrl
argument_list|()
argument_list|)
argument_list|,
literal|"Please inform the Wordpress API url , eg.: http://myblog.com/wp-json/wp"
argument_list|)
expr_stmt|;
if|if
condition|(
name|isNullOrEmpty
argument_list|(
name|config
operator|.
name|getApiVersion
argument_list|()
argument_list|)
condition|)
block|{
name|config
operator|.
name|setApiVersion
argument_list|(
name|WordpressConstants
operator|.
name|API_VERSION
argument_list|)
expr_stmt|;
block|}
specifier|final
name|WordpressServicePosts
name|servicePosts
init|=
operator|new
name|WordpressServicePostsAdapter
argument_list|(
name|config
operator|.
name|getApiUrl
argument_list|()
argument_list|,
name|config
operator|.
name|getApiVersion
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|WordpressServiceUsers
name|serviceUsers
init|=
operator|new
name|WordpressServiceUsersAdapter
argument_list|(
name|config
operator|.
name|getApiUrl
argument_list|()
argument_list|,
name|config
operator|.
name|getApiVersion
argument_list|()
argument_list|)
decl_stmt|;
name|servicePosts
operator|.
name|setWordpressAuthentication
argument_list|(
name|config
operator|.
name|getAuthentication
argument_list|()
argument_list|)
expr_stmt|;
name|serviceUsers
operator|.
name|setWordpressAuthentication
argument_list|(
name|config
operator|.
name|getAuthentication
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|services
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|this
operator|.
name|services
operator|.
name|put
argument_list|(
name|WordpressServicePosts
operator|.
name|class
argument_list|,
name|servicePosts
argument_list|)
expr_stmt|;
name|this
operator|.
name|services
operator|.
name|put
argument_list|(
name|WordpressServiceUsers
operator|.
name|class
argument_list|,
name|serviceUsers
argument_list|)
expr_stmt|;
name|this
operator|.
name|configuration
operator|=
name|config
expr_stmt|;
name|LOGGER
operator|.
name|info
argument_list|(
literal|"Wordpress Service Provider initialized using base URL: {}, API Version {}"
argument_list|,
name|config
operator|.
name|getApiUrl
argument_list|()
argument_list|,
name|config
operator|.
name|getApiVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|getService (Class<T> wordpressServiceClazz)
specifier|public
parameter_list|<
name|T
extends|extends
name|WordpressService
parameter_list|>
name|T
name|getService
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|wordpressServiceClazz
parameter_list|)
block|{
name|T
name|service
init|=
operator|(
name|T
operator|)
name|this
operator|.
name|services
operator|.
name|get
argument_list|(
name|wordpressServiceClazz
argument_list|)
decl_stmt|;
if|if
condition|(
name|service
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"Couldn't find a Wordpress Service '%s'"
argument_list|,
name|wordpressServiceClazz
argument_list|)
argument_list|)
throw|;
block|}
return|return
name|service
return|;
block|}
DECL|method|hasAuthentication ()
specifier|public
name|boolean
name|hasAuthentication
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|configuration
operator|!=
literal|null
condition|)
block|{
return|return
name|this
operator|.
name|configuration
operator|.
name|getAuthentication
argument_list|()
operator|!=
literal|null
return|;
block|}
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

