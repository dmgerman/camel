begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.wordpress.api.service.impl
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|service
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|jaxrs
operator|.
name|json
operator|.
name|JacksonJsonProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|auth
operator|.
name|WordpressAuthentication
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|service
operator|.
name|WordpressService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|LoggingInInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|interceptor
operator|.
name|LoggingOutInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|JAXRSClientFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|WebClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
operator|.
name|checkNotNull
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Strings
operator|.
name|emptyToNull
import|;
end_import

begin_class
DECL|class|AbstractWordpressServiceAdapter
specifier|abstract
class|class
name|AbstractWordpressServiceAdapter
parameter_list|<
name|A
parameter_list|>
implements|implements
name|WordpressService
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|AbstractWordpressServiceAdapter
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|spi
specifier|private
name|A
name|spi
decl_stmt|;
DECL|field|apiVersion
specifier|private
specifier|final
name|String
name|apiVersion
decl_stmt|;
DECL|field|authentication
specifier|private
name|WordpressAuthentication
name|authentication
decl_stmt|;
DECL|method|AbstractWordpressServiceAdapter (final String wordpressUrl, final String apiVersion)
name|AbstractWordpressServiceAdapter
parameter_list|(
specifier|final
name|String
name|wordpressUrl
parameter_list|,
specifier|final
name|String
name|apiVersion
parameter_list|)
block|{
name|checkNotNull
argument_list|(
name|emptyToNull
argument_list|(
name|apiVersion
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|apiVersion
operator|=
name|apiVersion
expr_stmt|;
comment|// @formatter:off
name|this
operator|.
name|spi
operator|=
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|wordpressUrl
argument_list|,
name|this
operator|.
name|getSpiType
argument_list|()
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|JacksonJsonProvider
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// @formatter:on
name|WebClient
operator|.
name|client
argument_list|(
name|spi
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|client
argument_list|(
name|spi
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|)
expr_stmt|;
comment|// TODO: leave this kind of configuration to API clients
name|WebClient
operator|.
name|getConfig
argument_list|(
name|spi
argument_list|)
operator|.
name|getHttpConduit
argument_list|()
operator|.
name|getClient
argument_list|()
operator|.
name|setAutoRedirect
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|/*          * TODO: aggregate a configuration object to customize the JAXRS behavior, eg.: adding handlers or interceptors          */
name|WebClient
operator|.
name|getConfig
argument_list|(
name|spi
argument_list|)
operator|.
name|getInInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|LoggingInInterceptor
argument_list|()
argument_list|)
expr_stmt|;
name|WebClient
operator|.
name|getConfig
argument_list|(
name|spi
argument_list|)
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|LoggingOutInterceptor
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|authentication
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|authentication
operator|.
name|configureAuthentication
argument_list|(
name|spi
argument_list|)
expr_stmt|;
block|}
name|LOGGER
operator|.
name|info
argument_list|(
literal|"******* {} API initialized *********"
argument_list|,
name|spi
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getSpiType ()
specifier|protected
specifier|abstract
name|Class
argument_list|<
name|A
argument_list|>
name|getSpiType
parameter_list|()
function_decl|;
DECL|method|getSpi ()
specifier|protected
specifier|final
name|A
name|getSpi
parameter_list|()
block|{
return|return
name|spi
return|;
block|}
DECL|method|getApiVersion ()
specifier|protected
specifier|final
name|String
name|getApiVersion
parameter_list|()
block|{
return|return
name|this
operator|.
name|apiVersion
return|;
block|}
annotation|@
name|Override
DECL|method|setWordpressAuthentication (WordpressAuthentication authentication)
specifier|public
specifier|final
name|void
name|setWordpressAuthentication
parameter_list|(
name|WordpressAuthentication
name|authentication
parameter_list|)
block|{
name|this
operator|.
name|authentication
operator|=
name|authentication
expr_stmt|;
block|}
block|}
end_class

end_unit

