begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.wordpress.api.model
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|MoreObjects
operator|.
name|toStringHelper
import|;
end_import

begin_comment
comment|/**  * Search criterias.  */
end_comment

begin_class
DECL|class|SearchCriteria
specifier|public
class|class
name|SearchCriteria
implements|implements
name|Serializable
block|{
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1002576245120313648L
decl_stmt|;
DECL|field|page
specifier|private
name|Integer
name|page
decl_stmt|;
DECL|field|perPage
specifier|private
name|Integer
name|perPage
decl_stmt|;
DECL|field|search
specifier|private
name|String
name|search
decl_stmt|;
DECL|field|order
specifier|private
name|Order
name|order
decl_stmt|;
DECL|field|exclude
specifier|private
name|List
argument_list|<
name|Integer
argument_list|>
name|exclude
decl_stmt|;
DECL|field|include
specifier|private
name|List
argument_list|<
name|Integer
argument_list|>
name|include
decl_stmt|;
DECL|method|getPage ()
specifier|public
name|Integer
name|getPage
parameter_list|()
block|{
return|return
name|page
return|;
block|}
DECL|method|setPage (Integer page)
specifier|public
name|void
name|setPage
parameter_list|(
name|Integer
name|page
parameter_list|)
block|{
name|this
operator|.
name|page
operator|=
name|page
expr_stmt|;
block|}
DECL|method|getPerPage ()
specifier|public
name|Integer
name|getPerPage
parameter_list|()
block|{
return|return
name|perPage
return|;
block|}
DECL|method|setPerPage (Integer perPage)
specifier|public
name|void
name|setPerPage
parameter_list|(
name|Integer
name|perPage
parameter_list|)
block|{
name|this
operator|.
name|perPage
operator|=
name|perPage
expr_stmt|;
block|}
DECL|method|getSearch ()
specifier|public
name|String
name|getSearch
parameter_list|()
block|{
return|return
name|search
return|;
block|}
DECL|method|setSearch (String search)
specifier|public
name|void
name|setSearch
parameter_list|(
name|String
name|search
parameter_list|)
block|{
name|this
operator|.
name|search
operator|=
name|search
expr_stmt|;
block|}
DECL|method|getOrder ()
specifier|public
name|Order
name|getOrder
parameter_list|()
block|{
return|return
name|order
return|;
block|}
DECL|method|setOrder (Order order)
specifier|public
name|void
name|setOrder
parameter_list|(
name|Order
name|order
parameter_list|)
block|{
name|this
operator|.
name|order
operator|=
name|order
expr_stmt|;
block|}
DECL|method|getExclude ()
specifier|public
name|List
argument_list|<
name|Integer
argument_list|>
name|getExclude
parameter_list|()
block|{
return|return
name|exclude
return|;
block|}
DECL|method|setExclude (List<Integer> exclude)
specifier|public
name|void
name|setExclude
parameter_list|(
name|List
argument_list|<
name|Integer
argument_list|>
name|exclude
parameter_list|)
block|{
name|this
operator|.
name|exclude
operator|=
name|exclude
expr_stmt|;
block|}
DECL|method|getInclude ()
specifier|public
name|List
argument_list|<
name|Integer
argument_list|>
name|getInclude
parameter_list|()
block|{
return|return
name|include
return|;
block|}
DECL|method|setInclude (List<Integer> include)
specifier|public
name|void
name|setInclude
parameter_list|(
name|List
argument_list|<
name|Integer
argument_list|>
name|include
parameter_list|)
block|{
name|this
operator|.
name|include
operator|=
name|include
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
comment|// @formatter:off
return|return
name|toStringHelper
argument_list|(
name|this
argument_list|)
operator|.
name|add
argument_list|(
literal|"Query"
argument_list|,
name|this
operator|.
name|search
argument_list|)
operator|.
name|add
argument_list|(
literal|"Page"
argument_list|,
name|page
argument_list|)
operator|.
name|add
argument_list|(
literal|"Per Page"
argument_list|,
name|perPage
argument_list|)
operator|.
name|addValue
argument_list|(
name|this
operator|.
name|order
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

