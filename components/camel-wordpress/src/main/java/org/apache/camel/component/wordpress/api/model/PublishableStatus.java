begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.wordpress.api.model
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|wordpress
operator|.
name|api
operator|.
name|model
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonProperty
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|dataformat
operator|.
name|xml
operator|.
name|annotation
operator|.
name|JacksonXmlRootElement
import|;
end_import

begin_comment
comment|/**  * A named status for the object.  */
end_comment

begin_enum
annotation|@
name|JacksonXmlRootElement
argument_list|(
name|localName
operator|=
literal|"publishableStatus"
argument_list|)
DECL|enum|PublishableStatus
specifier|public
enum|enum
name|PublishableStatus
block|{
comment|// @formatter:off
DECL|enumConstant|publish
DECL|enumConstant|future
DECL|enumConstant|draft
DECL|enumConstant|pending
DECL|enumConstant|JsonProperty
name|publish
block|,
name|future
block|,
name|draft
block|,
name|pending
block|,
annotation|@
name|JsonProperty
argument_list|(
literal|"private"
argument_list|)
DECL|enumConstant|private_
DECL|enumConstant|trash
DECL|enumConstant|JsonProperty
name|private_
block|,
name|trash
block|,
annotation|@
name|JsonProperty
argument_list|(
literal|"auto-draft"
argument_list|)
DECL|enumConstant|auto_draft
DECL|enumConstant|inherit
DECL|enumConstant|any
name|auto_draft
block|,
name|inherit
block|,
name|any
block|;
comment|// @formatter:on
comment|/***      * @param arg      * @return      * @see<a href= "https://stackoverflow.com/questions/33357594/java-enum-case-insensitive-jersey-query-param-binding">Java: Enum case insensitive Jersey Query Param Binding</a>      */
DECL|method|fromString (String arg)
specifier|public
specifier|static
name|PublishableStatus
name|fromString
parameter_list|(
name|String
name|arg
parameter_list|)
block|{
name|arg
operator|=
literal|""
operator|.
name|concat
argument_list|(
name|arg
argument_list|)
operator|.
name|toLowerCase
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|arg
operator|.
name|isEmpty
argument_list|()
operator|&&
name|arg
operator|.
name|startsWith
argument_list|(
literal|"private"
argument_list|)
condition|)
block|{
return|return
name|private_
return|;
block|}
if|if
condition|(
operator|!
name|arg
operator|.
name|isEmpty
argument_list|()
operator|&&
name|arg
operator|.
name|startsWith
argument_list|(
literal|"auto"
argument_list|)
condition|)
block|{
return|return
name|auto_draft
return|;
block|}
return|return
name|valueOf
argument_list|(
name|arg
argument_list|)
return|;
block|}
block|}
end_enum

end_unit

