begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.sjms.jms
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sjms
operator|.
name|jms
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Queue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TemporaryQueue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|TemporaryTopic
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Topic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sjms
operator|.
name|support
operator|.
name|JmsTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|DefaultDestinationCreationStrategyTest
specifier|public
class|class
name|DefaultDestinationCreationStrategyTest
extends|extends
name|JmsTestSupport
block|{
DECL|field|strategy
specifier|private
name|DestinationCreationStrategy
name|strategy
init|=
operator|new
name|DefaultDestinationCreationStrategy
argument_list|()
decl_stmt|;
annotation|@
name|Test
DECL|method|testQueueCreation ()
specifier|public
name|void
name|testQueueCreation
parameter_list|()
throws|throws
name|Exception
block|{
name|Queue
name|destination
init|=
operator|(
name|Queue
operator|)
name|strategy
operator|.
name|createDestination
argument_list|(
name|getSession
argument_list|()
argument_list|,
literal|"queue://test"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|destination
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|destination
operator|.
name|getQueueName
argument_list|()
argument_list|)
expr_stmt|;
name|destination
operator|=
operator|(
name|Queue
operator|)
name|strategy
operator|.
name|createDestination
argument_list|(
name|getSession
argument_list|()
argument_list|,
literal|"test"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|destination
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|destination
operator|.
name|getQueueName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTopicCreation ()
specifier|public
name|void
name|testTopicCreation
parameter_list|()
throws|throws
name|Exception
block|{
name|Topic
name|destination
init|=
operator|(
name|Topic
operator|)
name|strategy
operator|.
name|createDestination
argument_list|(
name|getSession
argument_list|()
argument_list|,
literal|"topic://test"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|destination
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|destination
operator|.
name|getTopicName
argument_list|()
argument_list|)
expr_stmt|;
name|destination
operator|=
operator|(
name|Topic
operator|)
name|strategy
operator|.
name|createDestination
argument_list|(
name|getSession
argument_list|()
argument_list|,
literal|"test"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|destination
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|destination
operator|.
name|getTopicName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTemporaryQueueCreation ()
specifier|public
name|void
name|testTemporaryQueueCreation
parameter_list|()
throws|throws
name|Exception
block|{
name|TemporaryQueue
name|destination
init|=
operator|(
name|TemporaryQueue
operator|)
name|strategy
operator|.
name|createTemporaryDestination
argument_list|(
name|getSession
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|destination
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|destination
operator|.
name|getQueueName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTemporaryTopicCreation ()
specifier|public
name|void
name|testTemporaryTopicCreation
parameter_list|()
throws|throws
name|Exception
block|{
name|TemporaryTopic
name|destination
init|=
operator|(
name|TemporaryTopic
operator|)
name|strategy
operator|.
name|createTemporaryDestination
argument_list|(
name|getSession
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|destination
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|destination
operator|.
name|getTopicName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

