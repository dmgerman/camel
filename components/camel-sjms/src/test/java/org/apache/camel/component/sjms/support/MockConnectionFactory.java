begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.sjms.support
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sjms
operator|.
name|support
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|management
operator|.
name|JMSStatsImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|transport
operator|.
name|Transport
import|;
end_import

begin_class
DECL|class|MockConnectionFactory
specifier|public
class|class
name|MockConnectionFactory
extends|extends
name|ActiveMQConnectionFactory
block|{
DECL|field|returnBadSessionNTimes
specifier|private
name|int
name|returnBadSessionNTimes
decl_stmt|;
DECL|method|MockConnectionFactory (String brokerURL)
specifier|public
name|MockConnectionFactory
parameter_list|(
name|String
name|brokerURL
parameter_list|)
block|{
name|super
argument_list|(
name|createURI
argument_list|(
name|brokerURL
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createConnection ()
specifier|public
name|Connection
name|createConnection
parameter_list|()
throws|throws
name|JMSException
block|{
return|return
name|this
operator|.
name|createActiveMQConnection
argument_list|()
return|;
block|}
DECL|method|createURI (String brokerURL)
specifier|private
specifier|static
name|URI
name|createURI
parameter_list|(
name|String
name|brokerURL
parameter_list|)
block|{
try|try
block|{
return|return
operator|new
name|URI
argument_list|(
name|brokerURL
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|var2
parameter_list|)
block|{
throw|throw
call|(
name|IllegalArgumentException
call|)
argument_list|(
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Invalid broker URI: "
operator|+
name|brokerURL
argument_list|)
argument_list|)
operator|.
name|initCause
argument_list|(
name|var2
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|createActiveMQConnection (Transport transport, JMSStatsImpl stats)
specifier|protected
name|ActiveMQConnection
name|createActiveMQConnection
parameter_list|(
name|Transport
name|transport
parameter_list|,
name|JMSStatsImpl
name|stats
parameter_list|)
throws|throws
name|Exception
block|{
name|MockConnection
name|connection
init|=
operator|new
name|MockConnection
argument_list|(
name|transport
argument_list|,
name|this
operator|.
name|getClientIdGenerator
argument_list|()
argument_list|,
name|this
operator|.
name|getConnectionIdGenerator
argument_list|()
argument_list|,
name|stats
argument_list|,
name|returnBadSessionNTimes
argument_list|)
decl_stmt|;
return|return
name|connection
return|;
block|}
DECL|method|returnBadSessionNTimes (int returnBadSessionNTimes)
specifier|public
name|void
name|returnBadSessionNTimes
parameter_list|(
name|int
name|returnBadSessionNTimes
parameter_list|)
block|{
name|this
operator|.
name|returnBadSessionNTimes
operator|=
name|returnBadSessionNTimes
expr_stmt|;
block|}
block|}
end_class

end_unit

