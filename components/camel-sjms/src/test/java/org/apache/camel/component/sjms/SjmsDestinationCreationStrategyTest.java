begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.component.sjms
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sjms
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|activemq
operator|.
name|ActiveMQConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ExchangePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sjms
operator|.
name|jms
operator|.
name|DefaultDestinationCreationStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sjms
operator|.
name|support
operator|.
name|JmsTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Destination
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|Session
import|;
end_import

begin_comment
comment|/**  * @author  */
end_comment

begin_class
DECL|class|SjmsDestinationCreationStrategyTest
specifier|public
class|class
name|SjmsDestinationCreationStrategyTest
extends|extends
name|JmsTestSupport
block|{
DECL|field|createDestinationCalled
specifier|private
name|boolean
name|createDestinationCalled
init|=
literal|false
decl_stmt|;
DECL|field|createTemporaryDestination
specifier|private
name|boolean
name|createTemporaryDestination
init|=
literal|false
decl_stmt|;
annotation|@
name|Override
DECL|method|createCamelContext ()
specifier|protected
name|CamelContext
name|createCamelContext
parameter_list|()
throws|throws
name|Exception
block|{
name|CamelContext
name|camelContext
init|=
operator|new
name|DefaultCamelContext
argument_list|()
decl_stmt|;
name|ActiveMQConnectionFactory
name|connectionFactory
init|=
operator|new
name|ActiveMQConnectionFactory
argument_list|(
name|brokerUri
argument_list|)
decl_stmt|;
name|SjmsComponent
name|component
init|=
operator|new
name|SjmsComponent
argument_list|()
decl_stmt|;
name|component
operator|.
name|setConnectionFactory
argument_list|(
name|connectionFactory
argument_list|)
expr_stmt|;
name|component
operator|.
name|setDestinationCreationStrategy
argument_list|(
operator|new
name|TestDestinationCreationStrategyTest
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|addComponent
argument_list|(
literal|"sjms"
argument_list|,
name|component
argument_list|)
expr_stmt|;
return|return
name|camelContext
return|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
literal|"sjms:queue:inout?prefillPool=false&exchangePattern=InOut"
argument_list|)
operator|.
name|process
argument_list|(
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"response"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
annotation|@
name|Test
DECL|method|testSjmsComponentUsesCustomDestinationCreationStrategy ()
specifier|public
name|void
name|testSjmsComponentUsesCustomDestinationCreationStrategy
parameter_list|()
throws|throws
name|Exception
block|{
name|assertFalse
argument_list|(
name|createDestinationCalled
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
literal|"sjms:queue:inonly?prefillPool=false"
argument_list|,
literal|"hello world"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|createDestinationCalled
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|createTemporaryDestination
argument_list|)
expr_stmt|;
name|String
name|response
init|=
operator|(
name|String
operator|)
name|template
operator|.
name|sendBody
argument_list|(
literal|"sjms:queue:inout?prefillPool=false&exchangePattern=InOut"
argument_list|,
name|ExchangePattern
operator|.
name|InOut
argument_list|,
literal|"hello world 2"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|createTemporaryDestination
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"response"
argument_list|,
name|response
argument_list|)
expr_stmt|;
block|}
DECL|class|TestDestinationCreationStrategyTest
class|class
name|TestDestinationCreationStrategyTest
extends|extends
name|DefaultDestinationCreationStrategy
block|{
annotation|@
name|Override
DECL|method|createDestination (Session session, String name, boolean topic)
specifier|public
name|Destination
name|createDestination
parameter_list|(
name|Session
name|session
parameter_list|,
name|String
name|name
parameter_list|,
name|boolean
name|topic
parameter_list|)
throws|throws
name|JMSException
block|{
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
literal|"inonly"
argument_list|)
condition|)
block|{
name|createDestinationCalled
operator|=
literal|true
expr_stmt|;
block|}
return|return
name|super
operator|.
name|createDestination
argument_list|(
name|session
argument_list|,
name|name
argument_list|,
name|topic
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|createTemporaryDestination (Session session, boolean topic)
specifier|public
name|Destination
name|createTemporaryDestination
parameter_list|(
name|Session
name|session
parameter_list|,
name|boolean
name|topic
parameter_list|)
throws|throws
name|JMSException
block|{
name|createTemporaryDestination
operator|=
literal|true
expr_stmt|;
return|return
name|super
operator|.
name|createTemporaryDestination
argument_list|(
name|session
argument_list|,
name|topic
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

