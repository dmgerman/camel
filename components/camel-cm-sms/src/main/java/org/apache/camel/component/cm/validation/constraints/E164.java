begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cm.validation.constraints
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cm
operator|.
name|validation
operator|.
name|constraints
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Documented
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|ElementType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Retention
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|RetentionPolicy
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Target
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|validation
operator|.
name|Constraint
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|validation
operator|.
name|Payload
import|;
end_import

begin_annotation_defn
annotation|@
name|Target
argument_list|(
block|{
name|ElementType
operator|.
name|FIELD
block|,
name|ElementType
operator|.
name|METHOD
block|,
name|ElementType
operator|.
name|PARAMETER
block|,
name|ElementType
operator|.
name|ANNOTATION_TYPE
block|}
argument_list|)
annotation|@
name|Retention
argument_list|(
name|RetentionPolicy
operator|.
name|RUNTIME
argument_list|)
annotation|@
name|Constraint
argument_list|(
name|validatedBy
operator|=
name|E164Validator
operator|.
name|class
argument_list|)
annotation|@
name|Documented
DECL|annotation|E164
specifier|public
annotation_defn|@interface
name|E164
block|{
comment|// String message() default "{e164.message}";
DECL|method|message ()
name|String
name|message
parameter_list|()
default|default
literal|"E164 format expected for that phone number"
function_decl|;
DECL|method|groups ()
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|groups
argument_list|()
expr|default
block|{}
expr_stmt|;
DECL|method|payload ()
name|Class
argument_list|<
name|?
extends|extends
name|Payload
argument_list|>
index|[]
name|payload
argument_list|()
expr|default
block|{}
expr_stmt|;
block|}
end_annotation_defn

end_unit

