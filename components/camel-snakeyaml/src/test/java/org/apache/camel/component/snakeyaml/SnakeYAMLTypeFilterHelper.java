begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.snakeyaml
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|snakeyaml
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelExecutionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ProducerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|snakeyaml
operator|.
name|model
operator|.
name|RexPojo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|snakeyaml
operator|.
name|model
operator|.
name|TestPojo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|snakeyaml
operator|.
name|model
operator|.
name|UnsafePojo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|yaml
operator|.
name|snakeyaml
operator|.
name|constructor
operator|.
name|ConstructorException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_class
DECL|class|SnakeYAMLTypeFilterHelper
specifier|public
specifier|final
class|class
name|SnakeYAMLTypeFilterHelper
block|{
DECL|method|SnakeYAMLTypeFilterHelper ()
specifier|private
name|SnakeYAMLTypeFilterHelper
parameter_list|()
block|{     }
DECL|method|testSafeConstructor (ProducerTemplate template)
specifier|static
name|void
name|testSafeConstructor
parameter_list|(
name|ProducerTemplate
name|template
parameter_list|)
throws|throws
name|Exception
block|{
try|try
block|{
name|template
operator|.
name|sendBody
argument_list|(
literal|"direct:safe-constructor"
argument_list|,
literal|"!!org.apache.camel.component.snakeyaml.model.TestPojo {name: Camel}"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"As SnakeYAML uses SafeConstructor, custom types should not be allowed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CamelExecutionException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|ConstructorException
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testTypeConstructor (ProducerTemplate template)
specifier|static
name|void
name|testTypeConstructor
parameter_list|(
name|ProducerTemplate
name|template
parameter_list|)
throws|throws
name|Exception
block|{
name|Object
name|result
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:type-constructor"
argument_list|,
literal|"!!org.apache.camel.component.snakeyaml.model.TestPojo {name: Camel}"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|TestPojo
argument_list|)
expr_stmt|;
try|try
block|{
name|template
operator|.
name|sendBody
argument_list|(
literal|"direct:type-constructor"
argument_list|,
literal|"!!org.apache.camel.component.snakeyaml.model.UnsafePojo {name: Camel}"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"As SnakeYAML filters class is can unmarshall, UnsafePojo should not be allowed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CamelExecutionException
name|e
parameter_list|)
block|{
comment|// Wrapped by SnakeYAML
name|assertTrue
argument_list|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|ConstructorException
argument_list|)
expr_stmt|;
comment|// Thrown by SnakeYAMLDataFormat
name|assertTrue
argument_list|(
name|e
operator|.
name|getCause
argument_list|()
operator|.
name|getCause
argument_list|()
operator|instanceof
name|IllegalArgumentException
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testTypeConstructorFromDefinition (ProducerTemplate template)
specifier|static
name|void
name|testTypeConstructorFromDefinition
parameter_list|(
name|ProducerTemplate
name|template
parameter_list|)
throws|throws
name|Exception
block|{
name|Object
name|result
decl_stmt|;
comment|// TestPojo --> from definition type:
name|result
operator|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:type-constructor-strdef"
argument_list|,
literal|"!!org.apache.camel.component.snakeyaml.model.TestPojo {name: Camel}"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|TestPojo
argument_list|)
expr_stmt|;
comment|// RexPojo --> from definition rex:
name|result
operator|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:type-constructor-strdef"
argument_list|,
literal|"!!org.apache.camel.component.snakeyaml.model.RexPojo {name: Camel}"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|RexPojo
argument_list|)
expr_stmt|;
try|try
block|{
name|template
operator|.
name|sendBody
argument_list|(
literal|"direct:type-constructor-strdef"
argument_list|,
literal|"!!org.apache.camel.component.snakeyaml.model.UnsafePojo {name: Camel}"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"As SnakeYAML filters class is can unmarshall, UnsafePojo should not be allowed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CamelExecutionException
name|e
parameter_list|)
block|{
comment|// Wrapped by SnakeYAML
name|assertTrue
argument_list|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|ConstructorException
argument_list|)
expr_stmt|;
comment|// Thrown by SnakeYAMLDataFormat
name|assertTrue
argument_list|(
name|e
operator|.
name|getCause
argument_list|()
operator|.
name|getCause
argument_list|()
operator|instanceof
name|IllegalArgumentException
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testAllowAllConstructor (ProducerTemplate template)
specifier|static
name|void
name|testAllowAllConstructor
parameter_list|(
name|ProducerTemplate
name|template
parameter_list|)
throws|throws
name|Exception
block|{
name|Object
name|testPojo
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:all-constructor"
argument_list|,
literal|"!!org.apache.camel.component.snakeyaml.model.TestPojo {name: Camel}"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|testPojo
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|testPojo
operator|instanceof
name|TestPojo
argument_list|)
expr_stmt|;
name|Object
name|unsafePojo
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:all-constructor"
argument_list|,
literal|"!!org.apache.camel.component.snakeyaml.model.UnsafePojo {name: Camel}"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|unsafePojo
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|unsafePojo
operator|instanceof
name|UnsafePojo
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

