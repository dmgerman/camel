begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jmx
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jmx
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|OutputKeys
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Transformer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerConfigurationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|dom
operator|.
name|DOMResult
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|dom
operator|.
name|DOMSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamResult
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|custommonkey
operator|.
name|xmlunit
operator|.
name|Diff
import|;
end_import

begin_import
import|import
name|org
operator|.
name|custommonkey
operator|.
name|xmlunit
operator|.
name|Difference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|custommonkey
operator|.
name|xmlunit
operator|.
name|DifferenceConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|custommonkey
operator|.
name|xmlunit
operator|.
name|DifferenceListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|custommonkey
operator|.
name|xmlunit
operator|.
name|XMLAssert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|custommonkey
operator|.
name|xmlunit
operator|.
name|XMLUnit
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_class
DECL|class|XmlFixture
specifier|public
specifier|final
class|class
name|XmlFixture
block|{
DECL|method|XmlFixture ()
specifier|private
name|XmlFixture
parameter_list|()
block|{     }
DECL|method|toDoc (String aXmlString)
specifier|public
specifier|static
name|Document
name|toDoc
parameter_list|(
name|String
name|aXmlString
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|XMLUnit
operator|.
name|buildControlDocument
argument_list|(
name|aXmlString
argument_list|)
return|;
block|}
DECL|method|toDoc (File aFile)
specifier|public
specifier|static
name|Document
name|toDoc
parameter_list|(
name|File
name|aFile
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|XMLUnit
operator|.
name|buildControlDocument
argument_list|(
operator|new
name|InputSource
argument_list|(
name|aFile
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
DECL|method|assertXMLIgnorePrefix (String aMessage, Document aExpected, Document aActual)
specifier|public
specifier|static
name|void
name|assertXMLIgnorePrefix
parameter_list|(
name|String
name|aMessage
parameter_list|,
name|Document
name|aExpected
parameter_list|,
name|Document
name|aActual
parameter_list|)
throws|throws
name|Exception
block|{
name|XMLUnit
operator|.
name|setIgnoreComments
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|XMLUnit
operator|.
name|setIgnoreWhitespace
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|XMLUnit
operator|.
name|setIgnoreAttributeOrder
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Diff
name|diff
init|=
operator|new
name|Diff
argument_list|(
name|aExpected
argument_list|,
name|aActual
argument_list|)
decl_stmt|;
name|diff
operator|.
name|overrideDifferenceListener
argument_list|(
operator|new
name|DifferenceListener
argument_list|()
block|{
specifier|public
name|void
name|skippedComparison
parameter_list|(
name|Node
name|aArg0
parameter_list|,
name|Node
name|aArg1
parameter_list|)
block|{             }
specifier|public
name|int
name|differenceFound
parameter_list|(
name|Difference
name|aDifference
parameter_list|)
block|{
if|if
condition|(
name|aDifference
operator|.
name|getId
argument_list|()
operator|==
name|DifferenceConstants
operator|.
name|NAMESPACE_PREFIX_ID
condition|)
block|{
return|return
name|DifferenceListener
operator|.
name|RETURN_IGNORE_DIFFERENCE_NODES_IDENTICAL
return|;
block|}
return|return
name|DifferenceListener
operator|.
name|RETURN_ACCEPT_DIFFERENCE
return|;
block|}
block|}
argument_list|)
expr_stmt|;
try|try
block|{
name|XMLAssert
operator|.
name|assertXMLEqual
argument_list|(
name|diff
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|dump
argument_list|(
name|aActual
argument_list|)
expr_stmt|;
name|StringWriter
name|sw
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|t
operator|.
name|printStackTrace
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|sw
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
name|sw
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|dump (Document aActual)
specifier|public
specifier|static
name|void
name|dump
parameter_list|(
name|Document
name|aActual
parameter_list|)
throws|throws
name|TransformerConfigurationException
throws|,
name|TransformerException
block|{
name|TransformerFactory
name|tf
init|=
name|XMLUnit
operator|.
name|getTransformerFactory
argument_list|()
decl_stmt|;
name|Transformer
name|transformer
init|=
name|tf
operator|.
name|newTransformer
argument_list|()
decl_stmt|;
name|transformer
operator|.
name|setOutputProperty
argument_list|(
name|OutputKeys
operator|.
name|INDENT
argument_list|,
literal|"yes"
argument_list|)
expr_stmt|;
name|transformer
operator|.
name|transform
argument_list|(
operator|new
name|DOMSource
argument_list|(
name|aActual
argument_list|)
argument_list|,
operator|new
name|StreamResult
argument_list|(
name|System
operator|.
name|out
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|stripTimestamp (Document aDocument)
specifier|public
specifier|static
name|Document
name|stripTimestamp
parameter_list|(
name|Document
name|aDocument
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|resourcePath
init|=
literal|"/stripTimestamp.xsl"
decl_stmt|;
return|return
name|transform
argument_list|(
name|aDocument
argument_list|,
name|resourcePath
argument_list|)
return|;
block|}
DECL|method|stripUUID (Document aDocument)
specifier|public
specifier|static
name|Document
name|stripUUID
parameter_list|(
name|Document
name|aDocument
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|resourcePath
init|=
literal|"/stripUUID.xsl"
decl_stmt|;
return|return
name|transform
argument_list|(
name|aDocument
argument_list|,
name|resourcePath
argument_list|)
return|;
block|}
DECL|method|transform (Document aDocument, String aResourcePath)
specifier|protected
specifier|static
name|Document
name|transform
parameter_list|(
name|Document
name|aDocument
parameter_list|,
name|String
name|aResourcePath
parameter_list|)
throws|throws
name|Exception
block|{
name|TransformerFactory
name|tf
init|=
name|TransformerFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|InputStream
name|in
init|=
name|XmlFixture
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
name|aResourcePath
argument_list|)
decl_stmt|;
name|Source
name|src
init|=
operator|new
name|StreamSource
argument_list|(
name|in
argument_list|)
decl_stmt|;
name|src
operator|.
name|setSystemId
argument_list|(
name|XmlFixture
operator|.
name|class
operator|.
name|getResource
argument_list|(
name|aResourcePath
argument_list|)
operator|.
name|toExternalForm
argument_list|()
argument_list|)
expr_stmt|;
name|Transformer
name|t
init|=
name|tf
operator|.
name|newTransformer
argument_list|(
name|src
argument_list|)
decl_stmt|;
name|DOMResult
name|result
init|=
operator|new
name|DOMResult
argument_list|()
decl_stmt|;
name|t
operator|.
name|transform
argument_list|(
operator|new
name|DOMSource
argument_list|(
name|aDocument
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
return|return
operator|(
name|Document
operator|)
name|result
operator|.
name|getNode
argument_list|()
return|;
block|}
block|}
end_class

end_unit

