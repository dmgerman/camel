begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jmx
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jmx
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jmx
operator|.
name|beans
operator|.
name|ISimpleMXBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertSame
import|;
end_import

begin_comment
comment|/**  * Tests that we get the handback object in the message header  */
end_comment

begin_class
DECL|class|JMXHandbackTest
specifier|public
class|class
name|JMXHandbackTest
extends|extends
name|SimpleBeanFixture
block|{
DECL|field|hb
name|URI
name|hb
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|hb
operator|=
operator|new
name|URI
argument_list|(
literal|"urn:some:handback:object"
argument_list|)
expr_stmt|;
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|test ()
specifier|public
name|void
name|test
parameter_list|()
throws|throws
name|Exception
block|{
name|ISimpleMXBean
name|simpleBean
init|=
name|getSimpleMXBean
argument_list|()
decl_stmt|;
name|simpleBean
operator|.
name|userData
argument_list|(
literal|"myUserData"
argument_list|)
expr_stmt|;
name|getMockFixture
argument_list|()
operator|.
name|waitForMessages
argument_list|()
expr_stmt|;
name|Message
name|m
init|=
name|getMockFixture
argument_list|()
operator|.
name|getMessage
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|URI
name|uri
init|=
operator|(
name|URI
operator|)
name|m
operator|.
name|getHeader
argument_list|(
literal|"jmx.handback"
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|hb
argument_list|,
name|uri
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|buildFromURI ()
specifier|protected
name|JMXUriBuilder
name|buildFromURI
parameter_list|()
block|{
return|return
name|super
operator|.
name|buildFromURI
argument_list|()
operator|.
name|withHandback
argument_list|(
literal|"#hb"
argument_list|)
operator|.
name|withFormat
argument_list|(
literal|"raw"
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|initRegistry ()
specifier|protected
name|void
name|initRegistry
parameter_list|()
block|{
name|super
operator|.
name|initRegistry
argument_list|()
expr_stmt|;
name|getRegistry
argument_list|()
operator|.
name|bind
argument_list|(
literal|"hb"
argument_list|,
name|hb
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

