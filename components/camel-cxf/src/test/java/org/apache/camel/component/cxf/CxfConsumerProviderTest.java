begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cxf
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|converter
operator|.
name|jaxp
operator|.
name|XmlConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|ClientFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|ClientProxyFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|CxfConsumerProviderTest
specifier|public
class|class
name|CxfConsumerProviderTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|SIMPLE_ENDPOINT_ADDRESS
specifier|protected
specifier|static
specifier|final
name|String
name|SIMPLE_ENDPOINT_ADDRESS
init|=
literal|"http://localhost:28080/test"
decl_stmt|;
DECL|field|SIMPLE_ENDPOINT_URI
specifier|protected
specifier|static
specifier|final
name|String
name|SIMPLE_ENDPOINT_URI
init|=
literal|"cxf://"
operator|+
name|SIMPLE_ENDPOINT_ADDRESS
operator|+
literal|"?serviceClass=org.apache.camel.component.cxf.ServiceProvider"
decl_stmt|;
DECL|field|REQUEST_MESSAGE
specifier|protected
specifier|static
specifier|final
name|String
name|REQUEST_MESSAGE
init|=
literal|"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"test/service\">"
operator|+
literal|"<soapenv:Header/><soapenv:Body><ser:ping/></soapenv:Body></soapenv:Envelope>"
decl_stmt|;
DECL|field|RESPONSE_MESSAGE_BEGINE
specifier|protected
specifier|static
specifier|final
name|String
name|RESPONSE_MESSAGE_BEGINE
init|=
literal|"<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">"
operator|+
literal|"<soap:Body><pong xmlns=\"test/service\""
decl_stmt|;
DECL|field|RESPONSE_MESSAGE_END
specifier|protected
specifier|static
specifier|final
name|String
name|RESPONSE_MESSAGE_END
init|=
literal|"/></soap:Body></soap:Envelope>"
decl_stmt|;
DECL|field|RESPONSE
specifier|protected
specifier|static
specifier|final
name|String
name|RESPONSE
init|=
literal|"<pong xmlns=\"test/service\"/>"
decl_stmt|;
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|errorHandler
argument_list|(
name|noErrorHandler
argument_list|()
argument_list|)
expr_stmt|;
name|from
argument_list|(
name|SIMPLE_ENDPOINT_URI
argument_list|)
operator|.
name|process
argument_list|(
operator|new
name|Processor
argument_list|()
block|{
specifier|public
name|void
name|process
parameter_list|(
specifier|final
name|Exchange
name|exchange
parameter_list|)
block|{
name|Message
name|in
init|=
name|exchange
operator|.
name|getIn
argument_list|()
decl_stmt|;
comment|// Get the parameter list
name|Node
name|node
init|=
name|in
operator|.
name|getBody
argument_list|(
name|Node
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|node
argument_list|)
expr_stmt|;
name|XmlConverter
name|xmlConverter
init|=
operator|new
name|XmlConverter
argument_list|()
decl_stmt|;
comment|// Put the result back
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
name|xmlConverter
operator|.
name|toSource
argument_list|(
name|RESPONSE
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
annotation|@
name|Test
DECL|method|testInvokingServiceFromHttpCompnent ()
specifier|public
name|void
name|testInvokingServiceFromHttpCompnent
parameter_list|()
throws|throws
name|Exception
block|{
comment|// call the service with right post message
name|String
name|response
init|=
name|template
operator|.
name|requestBody
argument_list|(
name|SIMPLE_ENDPOINT_ADDRESS
argument_list|,
name|REQUEST_MESSAGE
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Get a wrong response "
argument_list|,
name|response
operator|.
name|startsWith
argument_list|(
name|RESPONSE_MESSAGE_BEGINE
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Get a wrong response "
argument_list|,
name|response
operator|.
name|endsWith
argument_list|(
name|RESPONSE_MESSAGE_END
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|response
operator|=
name|template
operator|.
name|requestBody
argument_list|(
name|SIMPLE_ENDPOINT_ADDRESS
argument_list|,
literal|null
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Excpetion to get exception here"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// do nothing here
block|}
name|response
operator|=
name|template
operator|.
name|requestBody
argument_list|(
name|SIMPLE_ENDPOINT_ADDRESS
argument_list|,
name|REQUEST_MESSAGE
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Get a wrong response "
argument_list|,
name|response
operator|.
name|startsWith
argument_list|(
name|RESPONSE_MESSAGE_BEGINE
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Get a wrong response "
argument_list|,
name|response
operator|.
name|endsWith
argument_list|(
name|RESPONSE_MESSAGE_END
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

