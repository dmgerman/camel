begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cxf.spring
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
operator|.
name|spring
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
operator|.
name|CXFTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
operator|.
name|CxfEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|CxfEndpointBeanTest
specifier|public
class|class
name|CxfEndpointBeanTest
extends|extends
name|AbstractSpringBeanTestSupport
block|{
DECL|field|port1
specifier|static
name|int
name|port1
init|=
name|CXFTestSupport
operator|.
name|getPort1
argument_list|()
decl_stmt|;
static|static
block|{
comment|//set them as system properties so Spring can use the property placeholder
comment|//things to set them into the URL's in the spring contexts
name|System
operator|.
name|setProperty
argument_list|(
literal|"CxfEndpointBeans.serviceName"
argument_list|,
literal|"{http://camel.apache.org/wsdl-first}PersonService"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"CxfEndpointBeans.endpointName"
argument_list|,
literal|"{http://camel.apache.org/wsdl-first}soap"
argument_list|)
expr_stmt|;
block|}
DECL|field|serviceName
specifier|private
name|QName
name|serviceName
init|=
name|QName
operator|.
name|valueOf
argument_list|(
literal|"{http://camel.apache.org/wsdl-first}PersonService"
argument_list|)
decl_stmt|;
DECL|field|endpointName
specifier|private
name|QName
name|endpointName
init|=
name|QName
operator|.
name|valueOf
argument_list|(
literal|"{http://camel.apache.org/wsdl-first}soap"
argument_list|)
decl_stmt|;
DECL|method|getApplicationContextFiles ()
specifier|protected
name|String
index|[]
name|getApplicationContextFiles
parameter_list|()
block|{
return|return
operator|new
name|String
index|[]
block|{
literal|"org/apache/camel/component/cxf/spring/CxfEndpointBeans.xml"
block|}
return|;
block|}
annotation|@
name|Test
DECL|method|testCxfEndpointBeanDefinitionParser ()
specifier|public
name|void
name|testCxfEndpointBeanDefinitionParser
parameter_list|()
block|{
name|CxfEndpoint
name|routerEndpoint
init|=
operator|(
name|CxfEndpoint
operator|)
name|ctx
operator|.
name|getBean
argument_list|(
literal|"routerEndpoint"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Got the wrong endpoint address"
argument_list|,
literal|"http://localhost:"
operator|+
name|port1
operator|+
literal|"/CxfEndpointBeanTest/router"
argument_list|,
name|routerEndpoint
operator|.
name|getAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Got the wrong endpont service class"
argument_list|,
literal|"org.apache.camel.component.cxf.HelloService"
argument_list|,
name|routerEndpoint
operator|.
name|getServiceClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Got the wrong handlers size"
argument_list|,
literal|1
argument_list|,
name|routerEndpoint
operator|.
name|getHandlers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Got the wrong schemalocations size"
argument_list|,
literal|1
argument_list|,
name|routerEndpoint
operator|.
name|getSchemaLocations
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Got the wrong schemalocation"
argument_list|,
literal|"classpath:wsdl/Message.xsd"
argument_list|,
name|routerEndpoint
operator|.
name|getSchemaLocations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|CxfEndpoint
name|myEndpoint
init|=
operator|(
name|CxfEndpoint
operator|)
name|ctx
operator|.
name|getBean
argument_list|(
literal|"myEndpoint"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Got the wrong endpointName"
argument_list|,
name|endpointName
argument_list|,
name|myEndpoint
operator|.
name|getPortName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Got the wrong serviceName"
argument_list|,
name|serviceName
argument_list|,
name|myEndpoint
operator|.
name|getServiceName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

