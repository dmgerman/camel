begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cxf.jaxrs.testbean
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|testbean
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|POST
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Cookie
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|NewCookie
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_class
annotation|@
name|Path
argument_list|(
literal|"/echoservice/"
argument_list|)
DECL|class|EchoService
specifier|public
class|class
name|EchoService
block|{
annotation|@
name|Context
DECL|field|headers
specifier|private
name|HttpHeaders
name|headers
decl_stmt|;
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/echo/"
argument_list|)
DECL|method|echo (String string)
specifier|public
name|Response
name|echo
parameter_list|(
name|String
name|string
parameter_list|)
block|{
name|Cookie
name|fooCookie
init|=
name|headers
operator|.
name|getCookies
argument_list|()
operator|.
name|get
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
if|if
condition|(
name|fooCookie
operator|!=
literal|null
operator|&&
literal|"bar"
operator|.
name|equals
argument_list|(
name|fooCookie
operator|.
name|getValue
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|Response
operator|.
name|ok
argument_list|(
literal|"Old "
operator|+
name|string
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
return|return
name|Response
operator|.
name|ok
argument_list|(
literal|"New "
operator|+
name|string
argument_list|)
operator|.
name|cookie
argument_list|(
operator|new
name|NewCookie
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|"/"
argument_list|,
literal|null
argument_list|,
literal|1
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
literal|false
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

