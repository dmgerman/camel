begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cxf.jaxrs.simplebinding.testbean
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|simplebinding
operator|.
name|testbean
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|activation
operator|.
name|DataHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Consumes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|POST
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PUT
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|QueryParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|testbean
operator|.
name|Customer
import|;
end_import

begin_class
annotation|@
name|Path
argument_list|(
literal|"/customerservice/"
argument_list|)
DECL|class|CustomerServiceResource
specifier|public
class|class
name|CustomerServiceResource
block|{
annotation|@
name|PathParam
argument_list|(
literal|"id"
argument_list|)
DECL|field|id
specifier|private
name|String
name|id
decl_stmt|;
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/customers/{id}/"
argument_list|)
DECL|method|getCustomer (@athParamR) String id)
specifier|public
name|Customer
name|getCustomer
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"id"
argument_list|)
name|String
name|id
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|PUT
annotation|@
name|Path
argument_list|(
literal|"/customers/{id}"
argument_list|)
DECL|method|updateCustomer (Customer customer, @PathParam(R) String id)
specifier|public
name|Response
name|updateCustomer
parameter_list|(
name|Customer
name|customer
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"id"
argument_list|)
name|String
name|id
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/customers/"
argument_list|)
DECL|method|newCustomer (Customer customer, @PathParam(R) String type, @QueryParam(R) int age)
specifier|public
name|Response
name|newCustomer
parameter_list|(
name|Customer
name|customer
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"type"
argument_list|)
name|String
name|type
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"age"
argument_list|)
name|int
name|age
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Path
argument_list|(
literal|"/customers/vip/{status}"
argument_list|)
DECL|method|vipCustomer (@athParamR) String status)
specifier|public
name|VipCustomerResource
name|vipCustomer
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"status"
argument_list|)
name|String
name|status
parameter_list|)
block|{
return|return
operator|new
name|VipCustomerResource
argument_list|()
return|;
block|}
annotation|@
name|Consumes
argument_list|(
literal|"image/jpeg"
argument_list|)
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/customers/{id}/image_inputstream"
argument_list|)
DECL|method|uploadImageInputStream (InputStream is)
specifier|public
name|Response
name|uploadImageInputStream
parameter_list|(
name|InputStream
name|is
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Consumes
argument_list|(
literal|"image/jpeg"
argument_list|)
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/customers/{id}/image_datahandler"
argument_list|)
DECL|method|uploadImageDataHandler (DataHandler dh)
specifier|public
name|Response
name|uploadImageDataHandler
parameter_list|(
name|DataHandler
name|dh
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Path
argument_list|(
literal|"/customers/multipart"
argument_list|)
DECL|method|multipart ()
specifier|public
name|MultipartCustomer
name|multipart
parameter_list|()
block|{
return|return
operator|new
name|MultipartCustomer
argument_list|()
return|;
block|}
DECL|method|getId ()
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
DECL|method|setId (String id)
specifier|public
name|void
name|setId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
block|}
end_class

end_unit

