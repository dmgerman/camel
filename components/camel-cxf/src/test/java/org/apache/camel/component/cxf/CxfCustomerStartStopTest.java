begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cxf
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|Bus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|BusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http_jetty
operator|.
name|JettyHTTPServerEngine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|transport
operator|.
name|http_jetty
operator|.
name|JettyHTTPServerEngineFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|ClassPathXmlApplicationContext
import|;
end_import

begin_class
annotation|@
name|org
operator|.
name|junit
operator|.
name|Ignore
DECL|class|CxfCustomerStartStopTest
specifier|public
class|class
name|CxfCustomerStartStopTest
extends|extends
name|Assert
block|{
DECL|field|PORT1
specifier|static
specifier|final
name|int
name|PORT1
init|=
name|CXFTestSupport
operator|.
name|getPort1
argument_list|()
decl_stmt|;
DECL|field|PORT2
specifier|static
specifier|final
name|int
name|PORT2
init|=
name|CXFTestSupport
operator|.
name|getPort1
argument_list|()
decl_stmt|;
annotation|@
name|Test
DECL|method|startAndStopService ()
specifier|public
name|void
name|startAndStopService
parameter_list|()
throws|throws
name|Exception
block|{
name|CamelContext
name|context
init|=
operator|new
name|DefaultCamelContext
argument_list|()
decl_stmt|;
comment|// start a server
name|context
operator|.
name|addRoutes
argument_list|(
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"cxf:http://localhost:"
operator|+
name|PORT1
operator|+
literal|"/test?serviceClass=org.apache.camel.component.cxf.HelloService"
argument_list|)
operator|.
name|to
argument_list|(
literal|"log:endpoint"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|300
argument_list|)
expr_stmt|;
name|context
operator|.
name|stop
argument_list|()
expr_stmt|;
name|Bus
name|bus
init|=
name|BusFactory
operator|.
name|getDefaultBus
argument_list|()
decl_stmt|;
name|JettyHTTPServerEngineFactory
name|factory
init|=
name|bus
operator|.
name|getExtension
argument_list|(
name|JettyHTTPServerEngineFactory
operator|.
name|class
argument_list|)
decl_stmt|;
name|JettyHTTPServerEngine
name|engine
init|=
name|factory
operator|.
name|retrieveJettyHTTPServerEngine
argument_list|(
name|PORT1
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Jetty engine should be found there"
argument_list|,
name|engine
argument_list|)
expr_stmt|;
comment|// Need to call the bus shutdown ourselves.
name|String
name|orig
init|=
name|System
operator|.
name|setProperty
argument_list|(
literal|"org.apache.cxf.transports.http_jetty.DontClosePort"
argument_list|,
literal|"false"
argument_list|)
decl_stmt|;
name|bus
operator|.
name|shutdown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"org.apache.cxf.transports.http_jetty.DontClosePort"
argument_list|,
name|orig
operator|==
literal|null
condition|?
literal|"true"
else|:
literal|"false"
argument_list|)
expr_stmt|;
name|engine
operator|=
name|factory
operator|.
name|retrieveJettyHTTPServerEngine
argument_list|(
name|PORT1
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"Jetty engine should be removed"
argument_list|,
name|engine
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|startAndStopServiceFromSpring ()
specifier|public
name|void
name|startAndStopServiceFromSpring
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"CamelCxfConsumerContext.port2"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|PORT2
argument_list|)
argument_list|)
expr_stmt|;
name|ClassPathXmlApplicationContext
name|applicationContext
init|=
operator|new
name|ClassPathXmlApplicationContext
argument_list|(
literal|"org/apache/camel/component/cxf/CamelCxfConsumerContext.xml"
argument_list|)
decl_stmt|;
name|Bus
name|bus
init|=
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"cxf"
argument_list|,
name|Bus
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Bus shutdown will be called when the application context is closed.
name|String
name|orig
init|=
name|System
operator|.
name|setProperty
argument_list|(
literal|"org.apache.cxf.transports.http_jetty.DontClosePort"
argument_list|,
literal|"false"
argument_list|)
decl_stmt|;
name|applicationContext
operator|.
name|close
argument_list|()
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"org.apache.cxf.transports.http_jetty.DontClosePort"
argument_list|,
name|orig
operator|==
literal|null
condition|?
literal|"true"
else|:
literal|"false"
argument_list|)
expr_stmt|;
name|JettyHTTPServerEngineFactory
name|factory
init|=
name|bus
operator|.
name|getExtension
argument_list|(
name|JettyHTTPServerEngineFactory
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// test if the port is still used
name|JettyHTTPServerEngine
name|engine
init|=
name|factory
operator|.
name|retrieveJettyHTTPServerEngine
argument_list|(
name|PORT2
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
literal|"Jetty engine should be removed"
argument_list|,
name|engine
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

