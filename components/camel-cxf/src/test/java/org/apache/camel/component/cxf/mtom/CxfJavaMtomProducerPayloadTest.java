begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cxf.mtom
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
operator|.
name|mtom
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|Holder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
operator|.
name|TestHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|CxfJavaMtomProducerPayloadTest
specifier|public
class|class
name|CxfJavaMtomProducerPayloadTest
extends|extends
name|CxfMtomConsumerTest
block|{
DECL|field|MTOM_ENDPOINT_URI_MTOM_ENABLE
specifier|protected
specifier|static
specifier|final
name|String
name|MTOM_ENDPOINT_URI_MTOM_ENABLE
init|=
name|MTOM_ENDPOINT_URI
operator|+
literal|"&properties.mtom-enabled=true"
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
DECL|method|testInvokingService ()
specifier|public
name|void
name|testInvokingService
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|MtomTestHelper
operator|.
name|isAwtHeadless
argument_list|(
literal|null
argument_list|,
name|log
argument_list|)
condition|)
block|{
return|return;
block|}
specifier|final
name|Holder
argument_list|<
name|byte
index|[]
argument_list|>
name|photo
init|=
operator|new
name|Holder
argument_list|<
name|byte
index|[]
argument_list|>
argument_list|(
literal|"RequestFromCXF"
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|Holder
argument_list|<
name|Image
argument_list|>
name|image
init|=
operator|new
name|Holder
argument_list|<
name|Image
argument_list|>
argument_list|(
name|getImage
argument_list|(
literal|"/java.jpg"
argument_list|)
argument_list|)
decl_stmt|;
name|Exchange
name|exchange
init|=
name|context
operator|.
name|createProducerTemplate
argument_list|()
operator|.
name|send
argument_list|(
name|MTOM_ENDPOINT_URI_MTOM_ENABLE
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
operator|new
name|Object
index|[]
block|{
name|photo
block|,
name|image
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
comment|// Make sure we don't put the attachement into out message
name|assertEquals
argument_list|(
literal|"The attachement size should be 0 "
argument_list|,
literal|0
argument_list|,
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getAttachments
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Object
index|[]
name|result
init|=
name|exchange
operator|.
name|getOut
argument_list|()
operator|.
name|getBody
argument_list|(
name|Object
index|[]
operator|.
expr|class
argument_list|)
decl_stmt|;
name|Holder
argument_list|<
name|byte
index|[]
argument_list|>
name|photo1
init|=
operator|(
name|Holder
argument_list|<
name|byte
index|[]
argument_list|>
operator|)
name|result
index|[
literal|1
index|]
decl_stmt|;
name|Holder
argument_list|<
name|Image
argument_list|>
name|image1
init|=
operator|(
name|Holder
argument_list|<
name|Image
argument_list|>
operator|)
name|result
index|[
literal|2
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"ResponseFromCamel"
argument_list|,
operator|new
name|String
argument_list|(
name|photo1
operator|.
name|value
argument_list|,
literal|"UTF-8"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|image1
operator|.
name|value
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

