begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cxf
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
package|;
end_package

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ExchangePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
operator|.
name|common
operator|.
name|message
operator|.
name|CxfConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|SpringCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|SoapFault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|AbstractXmlApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|ClassPathXmlApplicationContext
import|;
end_import

begin_class
DECL|class|CxfSpringCustomizedExceptionTest
specifier|public
class|class
name|CxfSpringCustomizedExceptionTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|EXCEPTION_MESSAGE
specifier|private
specifier|static
specifier|final
name|String
name|EXCEPTION_MESSAGE
init|=
literal|"This is an exception test message"
decl_stmt|;
DECL|field|DETAIL_TEXT
specifier|private
specifier|static
specifier|final
name|String
name|DETAIL_TEXT
init|=
literal|"This is a detail text node"
decl_stmt|;
DECL|field|SOAP_FAULT
specifier|private
specifier|static
specifier|final
name|SoapFault
name|SOAP_FAULT
decl_stmt|;
DECL|field|applicationContext
specifier|private
name|AbstractXmlApplicationContext
name|applicationContext
decl_stmt|;
static|static
block|{
comment|// START SNIPPET: FaultDefine
name|SOAP_FAULT
operator|=
operator|new
name|SoapFault
argument_list|(
name|EXCEPTION_MESSAGE
argument_list|,
name|SoapFault
operator|.
name|FAULT_CODE_CLIENT
argument_list|)
expr_stmt|;
name|Element
name|detail
init|=
name|SOAP_FAULT
operator|.
name|getOrCreateDetail
argument_list|()
decl_stmt|;
name|Document
name|doc
init|=
name|detail
operator|.
name|getOwnerDocument
argument_list|()
decl_stmt|;
name|Text
name|tn
init|=
name|doc
operator|.
name|createTextNode
argument_list|(
name|DETAIL_TEXT
argument_list|)
decl_stmt|;
name|detail
operator|.
name|appendChild
argument_list|(
name|tn
argument_list|)
expr_stmt|;
comment|// END SNIPPET: FaultDefine
block|}
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|CXFTestSupport
operator|.
name|getPort1
argument_list|()
expr_stmt|;
name|applicationContext
operator|=
name|createApplicationContext
argument_list|()
expr_stmt|;
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Should have created a valid spring context"
argument_list|,
name|applicationContext
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|applicationContext
operator|!=
literal|null
condition|)
block|{
name|applicationContext
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testInvokingServiceFromCamel ()
specifier|public
name|void
name|testInvokingServiceFromCamel
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|template
operator|.
name|sendBodyAndHeader
argument_list|(
literal|"direct:start"
argument_list|,
name|ExchangePattern
operator|.
name|InOut
argument_list|,
literal|"hello world"
argument_list|,
name|CxfConstants
operator|.
name|OPERATION_NAME
argument_list|,
literal|"echo"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|Throwable
name|result
init|=
name|ex
operator|.
name|getCause
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Exception is not instance of SoapFault"
argument_list|,
name|result
operator|instanceof
name|SoapFault
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Expect to get right detail message"
argument_list|,
name|DETAIL_TEXT
argument_list|,
operator|(
operator|(
name|SoapFault
operator|)
name|result
operator|)
operator|.
name|getDetail
argument_list|()
operator|.
name|getTextContent
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Expect to get right fault-code"
argument_list|,
literal|"{http://schemas.xmlsoap.org/soap/envelope/}Client"
argument_list|,
operator|(
operator|(
name|SoapFault
operator|)
name|result
operator|)
operator|.
name|getFaultCode
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|createCamelContext ()
specifier|protected
name|CamelContext
name|createCamelContext
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|SpringCamelContext
operator|.
name|springCamelContext
argument_list|(
name|applicationContext
argument_list|)
return|;
block|}
DECL|method|createApplicationContext ()
specifier|protected
name|ClassPathXmlApplicationContext
name|createApplicationContext
parameter_list|()
block|{
return|return
operator|new
name|ClassPathXmlApplicationContext
argument_list|(
literal|"org/apache/camel/component/cxf/CxfCustomizedExceptionContext.xml"
argument_list|)
return|;
block|}
DECL|class|SOAPFaultFactory
specifier|public
specifier|static
class|class
name|SOAPFaultFactory
block|{
DECL|method|getSoapFault ()
specifier|public
name|SoapFault
name|getSoapFault
parameter_list|()
block|{
return|return
name|SOAP_FAULT
return|;
block|}
block|}
block|}
end_class

end_unit

