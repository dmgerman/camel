begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cxf.jaxrs
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
operator|.
name|spring
operator|.
name|AbstractSpringBeanTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|feature
operator|.
name|Feature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpGet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|CloseableHttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|HttpClientBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|CxfRsEndpointWithProperties
specifier|public
class|class
name|CxfRsEndpointWithProperties
extends|extends
name|AbstractSpringBeanTestSupport
block|{
annotation|@
name|Override
DECL|method|getApplicationContextFiles ()
specifier|protected
name|String
index|[]
name|getApplicationContextFiles
parameter_list|()
block|{
return|return
operator|new
name|String
index|[]
block|{
literal|"org/apache/camel/component/cxf/jaxrs/CxfRsEndpointWithProperties.xml"
block|}
return|;
block|}
annotation|@
name|Test
annotation|@
name|Ignore
argument_list|(
literal|"Camel 3.0: investigate why this fail"
argument_list|)
DECL|method|testCxfRsBeanWithCamelPropertiesHolder ()
specifier|public
name|void
name|testCxfRsBeanWithCamelPropertiesHolder
parameter_list|()
throws|throws
name|Exception
block|{
comment|// get the camelContext from application context
name|CamelContext
name|camelContext
init|=
name|ctx
operator|.
name|getBean
argument_list|(
literal|"camel"
argument_list|,
name|CamelContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|CxfRsEndpoint
name|testEndpoint
init|=
name|camelContext
operator|.
name|getEndpoint
argument_list|(
literal|"cxfrs:bean:testEndpoint"
argument_list|,
name|CxfRsEndpoint
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Got a wrong address"
argument_list|,
literal|"http://localhost:9900/testEndpoint"
argument_list|,
name|testEndpoint
operator|.
name|getAddress
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Feature
argument_list|>
name|features
init|=
name|testEndpoint
operator|.
name|getFeatures
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Single feature is expected"
argument_list|,
literal|1
argument_list|,
name|features
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|endpointProps
init|=
name|testEndpoint
operator|.
name|getProperties
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Single endpoint property is expected"
argument_list|,
literal|1
argument_list|,
name|endpointProps
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Wrong property value"
argument_list|,
literal|"aValue"
argument_list|,
name|endpointProps
operator|.
name|get
argument_list|(
literal|"aKey"
argument_list|)
argument_list|)
expr_stmt|;
name|HttpGet
name|get
init|=
operator|new
name|HttpGet
argument_list|(
name|testEndpoint
operator|.
name|getAddress
argument_list|()
argument_list|)
decl_stmt|;
name|CloseableHttpClient
name|httpclient
init|=
name|HttpClientBuilder
operator|.
name|create
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|HttpResponse
name|response
init|=
name|httpclient
operator|.
name|execute
argument_list|(
name|get
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|404
argument_list|,
name|response
operator|.
name|getStatusLine
argument_list|()
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|httpclient
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

