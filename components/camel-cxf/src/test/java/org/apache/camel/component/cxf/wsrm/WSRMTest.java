begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cxf.wsrm
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
operator|.
name|wsrm
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
operator|.
name|CXFTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|bus
operator|.
name|spring
operator|.
name|SpringBusFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|common
operator|.
name|classloader
operator|.
name|ClassLoaderUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|frontend
operator|.
name|ClientFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxws
operator|.
name|JaxWsProxyFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|junit4
operator|.
name|AbstractJUnit4SpringContextTests
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
annotation|@
name|ContextConfiguration
DECL|class|WSRMTest
specifier|public
class|class
name|WSRMTest
extends|extends
name|AbstractJUnit4SpringContextTests
block|{
DECL|field|port1
specifier|protected
specifier|static
name|int
name|port1
init|=
name|CXFTestSupport
operator|.
name|getPort2
argument_list|()
decl_stmt|;
DECL|field|port2
specifier|protected
specifier|static
name|int
name|port2
init|=
name|CXFTestSupport
operator|.
name|getPort3
argument_list|()
decl_stmt|;
annotation|@
name|Autowired
DECL|field|context
specifier|protected
name|CamelContext
name|context
decl_stmt|;
DECL|method|getClientAddress ()
specifier|protected
name|String
name|getClientAddress
parameter_list|()
block|{
return|return
literal|"http://localhost:"
operator|+
name|port1
operator|+
literal|"/wsrm/HelloWorld"
return|;
block|}
annotation|@
name|Test
DECL|method|testWSAddressing ()
specifier|public
name|void
name|testWSAddressing
parameter_list|()
throws|throws
name|Exception
block|{
name|JaxWsProxyFactoryBean
name|proxyFactory
init|=
operator|new
name|JaxWsProxyFactoryBean
argument_list|()
decl_stmt|;
name|ClientFactoryBean
name|clientBean
init|=
name|proxyFactory
operator|.
name|getClientFactoryBean
argument_list|()
decl_stmt|;
name|clientBean
operator|.
name|setAddress
argument_list|(
name|getClientAddress
argument_list|()
argument_list|)
expr_stmt|;
name|clientBean
operator|.
name|setServiceClass
argument_list|(
name|HelloWorld
operator|.
name|class
argument_list|)
expr_stmt|;
name|clientBean
operator|.
name|setWsdlURL
argument_list|(
name|WSRMTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"/HelloWorld.wsdl"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|SpringBusFactory
name|bf
init|=
operator|new
name|SpringBusFactory
argument_list|()
decl_stmt|;
name|URL
name|cxfConfig
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|getCxfClientConfig
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|cxfConfig
operator|=
name|ClassLoaderUtils
operator|.
name|getResource
argument_list|(
name|getCxfClientConfig
argument_list|()
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|proxyFactory
operator|.
name|setBus
argument_list|(
name|bf
operator|.
name|createBus
argument_list|(
name|cxfConfig
argument_list|)
argument_list|)
expr_stmt|;
name|proxyFactory
operator|.
name|getOutInterceptors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|MessageLossSimulator
argument_list|()
argument_list|)
expr_stmt|;
name|HelloWorld
name|client
init|=
operator|(
name|HelloWorld
operator|)
name|proxyFactory
operator|.
name|create
argument_list|()
decl_stmt|;
name|String
name|result
init|=
name|client
operator|.
name|sayHi
argument_list|(
literal|"world!"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Get a wrong response"
argument_list|,
literal|"Hello world!"
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
comment|/**      * @return      */
DECL|method|getCxfClientConfig ()
specifier|protected
name|String
name|getCxfClientConfig
parameter_list|()
block|{
return|return
literal|"ws_rm.xml"
return|;
block|}
block|}
end_class

end_unit

