begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cxf.jaxrs
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
operator|.
name|jaxrs
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelExecutionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
operator|.
name|CXFTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|testbean
operator|.
name|Customer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|spring
operator|.
name|CamelSpringTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|AbstractXmlApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|ClassPathXmlApplicationContext
import|;
end_import

begin_class
DECL|class|CxfOperationExceptionTest
specifier|public
class|class
name|CxfOperationExceptionTest
extends|extends
name|CamelSpringTestSupport
block|{
DECL|field|PORT1
specifier|private
specifier|static
specifier|final
name|int
name|PORT1
init|=
name|CXFTestSupport
operator|.
name|getPort1
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|createApplicationContext ()
specifier|protected
name|AbstractXmlApplicationContext
name|createApplicationContext
parameter_list|()
block|{
return|return
operator|new
name|ClassPathXmlApplicationContext
argument_list|(
literal|"org/apache/camel/component/cxf/jaxrs/CxfOperationException.xml"
argument_list|)
return|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|CamelExecutionException
operator|.
name|class
argument_list|)
DECL|method|testRestServerDirectlyAddCustomer ()
specifier|public
name|void
name|testRestServerDirectlyAddCustomer
parameter_list|()
block|{
name|Customer
name|input
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
name|input
operator|.
name|setName
argument_list|(
literal|"Donald Duck"
argument_list|)
expr_stmt|;
comment|// we cannot convert directly to Customer as we need camel-jaxb
name|String
name|response
init|=
name|template
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"cxfrs:http://localhost:"
operator|+
name|PORT1
operator|+
literal|"/CxfOperationExceptionTest/customerservice/customers?throwExceptionOnFailure=true"
argument_list|,
name|input
argument_list|,
name|Exchange
operator|.
name|HTTP_METHOD
argument_list|,
literal|"POST"
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|response
operator|.
name|endsWith
argument_list|(
literal|"<name>Donald Duck</name></Customer>"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRestServerDirectlyAddCustomerWithExceptionsTurnedOff ()
specifier|public
name|void
name|testRestServerDirectlyAddCustomerWithExceptionsTurnedOff
parameter_list|()
block|{
name|Customer
name|input
init|=
operator|new
name|Customer
argument_list|()
decl_stmt|;
name|input
operator|.
name|setName
argument_list|(
literal|"Donald Duck"
argument_list|)
expr_stmt|;
comment|// we cannot convert directly to Customer as we need camel-jaxb
name|String
name|response
init|=
name|template
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"cxfrs:bean:rsClient?throwExceptionOnFailure=false"
argument_list|,
name|input
argument_list|,
name|Exchange
operator|.
name|HTTP_METHOD
argument_list|,
literal|"POST"
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|response
operator|.
name|contains
argument_list|(
literal|"Problem accessing /CxfOperationExceptionTest/rest"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

