begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.wsdl_first
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|wsdl_first
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|MessageContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|soap
operator|.
name|SOAPHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|ws
operator|.
name|handler
operator|.
name|soap
operator|.
name|SOAPMessageContext
import|;
end_import

begin_class
DECL|class|JaxwsTestHandler
specifier|public
class|class
name|JaxwsTestHandler
implements|implements
name|SOAPHandler
argument_list|<
name|SOAPMessageContext
argument_list|>
block|{
DECL|field|faultCount
specifier|private
name|int
name|faultCount
decl_stmt|;
DECL|field|messageCount
specifier|private
name|int
name|messageCount
decl_stmt|;
DECL|field|getHeadersCount
specifier|private
name|int
name|getHeadersCount
decl_stmt|;
DECL|method|getGetHeadersCount ()
specifier|public
name|int
name|getGetHeadersCount
parameter_list|()
block|{
return|return
name|getHeadersCount
return|;
block|}
annotation|@
name|Override
DECL|method|getHeaders ()
specifier|public
name|Set
argument_list|<
name|QName
argument_list|>
name|getHeaders
parameter_list|()
block|{
name|getHeadersCount
operator|++
expr_stmt|;
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|close (MessageContext messagecontext)
specifier|public
name|void
name|close
parameter_list|(
name|MessageContext
name|messagecontext
parameter_list|)
block|{              }
annotation|@
name|Override
DECL|method|handleFault (SOAPMessageContext messagecontext)
specifier|public
name|boolean
name|handleFault
parameter_list|(
name|SOAPMessageContext
name|messagecontext
parameter_list|)
block|{
name|faultCount
operator|++
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|Override
DECL|method|handleMessage (SOAPMessageContext messagecontext)
specifier|public
name|boolean
name|handleMessage
parameter_list|(
name|SOAPMessageContext
name|messagecontext
parameter_list|)
block|{
name|messageCount
operator|++
expr_stmt|;
return|return
literal|true
return|;
block|}
DECL|method|reset ()
specifier|public
name|void
name|reset
parameter_list|()
block|{
name|faultCount
operator|=
literal|0
expr_stmt|;
name|messageCount
operator|=
literal|0
expr_stmt|;
name|getHeadersCount
operator|=
literal|0
expr_stmt|;
block|}
DECL|method|getFaultCount ()
specifier|public
name|int
name|getFaultCount
parameter_list|()
block|{
return|return
name|faultCount
return|;
block|}
DECL|method|getMessageCount ()
specifier|public
name|int
name|getMessageCount
parameter_list|()
block|{
return|return
name|messageCount
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"faultCount="
operator|+
name|faultCount
operator|+
literal|", messageCount="
operator|+
name|messageCount
operator|+
literal|", getHeadersCount="
operator|+
name|getHeadersCount
return|;
block|}
block|}
end_class

end_unit

