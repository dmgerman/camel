begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cxf
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
operator|.
name|common
operator|.
name|message
operator|.
name|CxfConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|binding
operator|.
name|soap
operator|.
name|SoapBindingConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|CxfProducerSoapActionTest
specifier|public
class|class
name|CxfProducerSoapActionTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|SOAP_ACTION
specifier|private
specifier|static
specifier|final
name|String
name|SOAP_ACTION
init|=
literal|"http://camel.apache.org/order/Order"
decl_stmt|;
DECL|field|OPERATION_NAMESPACE
specifier|private
specifier|static
specifier|final
name|String
name|OPERATION_NAMESPACE
init|=
literal|"http://camel.apache.org/order"
decl_stmt|;
DECL|field|OPERATION_NAME
specifier|private
specifier|static
specifier|final
name|String
name|OPERATION_NAME
init|=
literal|"order"
decl_stmt|;
DECL|field|DIRECT_START
specifier|private
specifier|static
specifier|final
name|String
name|DIRECT_START
init|=
literal|"direct:start"
decl_stmt|;
DECL|field|CXF_ENDPOINT
specifier|private
specifier|static
specifier|final
name|String
name|CXF_ENDPOINT
init|=
literal|"cxf:http://localhost:9000/order?wsdlURL=classpath:order.wsdl&loggingFeatureEnabled=true"
decl_stmt|;
DECL|field|REQUEST_MESSAGE
specifier|private
specifier|static
specifier|final
name|String
name|REQUEST_MESSAGE
init|=
literal|"<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">"
operator|+
literal|"<Body/>"
operator|+
literal|"</Envelope>"
decl_stmt|;
annotation|@
name|Test
DECL|method|testSendSoapRequestWithoutSoapActionSet ()
specifier|public
name|void
name|testSendSoapRequestWithoutSoapActionSet
parameter_list|()
block|{
name|template
operator|.
name|requestBody
argument_list|(
name|DIRECT_START
argument_list|,
name|REQUEST_MESSAGE
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
name|DIRECT_START
argument_list|)
operator|.
name|setHeader
argument_list|(
name|CxfConstants
operator|.
name|OPERATION_NAME
argument_list|,
name|constant
argument_list|(
name|OPERATION_NAME
argument_list|)
argument_list|)
operator|.
name|setHeader
argument_list|(
name|CxfConstants
operator|.
name|OPERATION_NAMESPACE
argument_list|,
name|constant
argument_list|(
name|OPERATION_NAMESPACE
argument_list|)
argument_list|)
operator|.
name|process
argument_list|(
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"bar"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|params
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
operator|.
name|to
argument_list|(
literal|"log:org.apache.camel?level=DEBUG"
argument_list|)
operator|.
name|to
argument_list|(
name|CXF_ENDPOINT
operator|+
literal|"&serviceClass=org.apache.camel.order.OrderEndpoint"
argument_list|)
expr_stmt|;
name|from
argument_list|(
name|CXF_ENDPOINT
operator|+
literal|"&dataFormat=POJO&serviceClass=org.apache.camel.order.OrderEndpoint"
argument_list|)
operator|.
name|process
argument_list|(
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|soapAction
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|SoapBindingConstants
operator|.
name|SOAP_ACTION
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|SOAP_ACTION
argument_list|,
name|soapAction
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

