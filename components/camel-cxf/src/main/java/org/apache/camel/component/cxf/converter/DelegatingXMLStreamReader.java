begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cxf.converter
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
operator|.
name|converter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|NamespaceContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|Location
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamReader
import|;
end_import

begin_class
DECL|class|DelegatingXMLStreamReader
class|class
name|DelegatingXMLStreamReader
implements|implements
name|XMLStreamReader
block|{
DECL|field|reader
specifier|private
name|XMLStreamReader
name|reader
decl_stmt|;
DECL|field|xprefixes
specifier|private
specifier|final
name|String
index|[]
name|xprefixes
decl_stmt|;
DECL|field|depth
specifier|private
name|int
name|depth
decl_stmt|;
DECL|field|nsmap
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|nsmap
decl_stmt|;
DECL|method|DelegatingXMLStreamReader (XMLStreamReader reader, Map<String, String> nsmap)
name|DelegatingXMLStreamReader
parameter_list|(
name|XMLStreamReader
name|reader
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|nsmap
parameter_list|)
block|{
name|this
operator|.
name|reader
operator|=
name|reader
expr_stmt|;
name|this
operator|.
name|nsmap
operator|=
name|nsmap
expr_stmt|;
comment|//the original nsmap will be mutated if some of its declarations are redundantly present at the current reader
name|Set
argument_list|<
name|String
argument_list|>
name|prefixes
init|=
name|nsmap
operator|.
name|keySet
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|reader
operator|.
name|getNamespaceCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|prefixes
operator|.
name|remove
argument_list|(
name|reader
operator|.
name|getNamespacePrefix
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|xprefixes
operator|=
name|prefixes
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getProperty (String name)
specifier|public
name|Object
name|getProperty
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
return|return
name|reader
operator|.
name|getProperty
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|next ()
specifier|public
name|int
name|next
parameter_list|()
throws|throws
name|XMLStreamException
block|{
comment|// only inject namespaces at the root level
specifier|final
name|int
name|c
init|=
name|reader
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|c
operator|==
name|XMLStreamConstants
operator|.
name|START_ELEMENT
condition|)
block|{
name|depth
operator|++
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|c
operator|==
name|XMLStreamConstants
operator|.
name|END_ELEMENT
condition|)
block|{
name|depth
operator|--
expr_stmt|;
block|}
return|return
name|c
return|;
block|}
annotation|@
name|Override
DECL|method|require (int type, String namespaceURI, String localName)
specifier|public
name|void
name|require
parameter_list|(
name|int
name|type
parameter_list|,
name|String
name|namespaceURI
parameter_list|,
name|String
name|localName
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|reader
operator|.
name|require
argument_list|(
name|type
argument_list|,
name|namespaceURI
argument_list|,
name|localName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getElementText ()
specifier|public
name|String
name|getElementText
parameter_list|()
throws|throws
name|XMLStreamException
block|{
return|return
name|reader
operator|.
name|getElementText
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|nextTag ()
specifier|public
name|int
name|nextTag
parameter_list|()
throws|throws
name|XMLStreamException
block|{
return|return
name|reader
operator|.
name|nextTag
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|hasNext ()
specifier|public
name|boolean
name|hasNext
parameter_list|()
throws|throws
name|XMLStreamException
block|{
return|return
name|reader
operator|.
name|hasNext
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getNamespaceURI (String prefix)
specifier|public
name|String
name|getNamespaceURI
parameter_list|(
name|String
name|prefix
parameter_list|)
block|{
name|String
name|ret
init|=
name|reader
operator|.
name|getNamespaceURI
argument_list|(
name|prefix
argument_list|)
decl_stmt|;
if|if
condition|(
name|ret
operator|==
literal|null
condition|)
block|{
name|ret
operator|=
name|nsmap
operator|.
name|get
argument_list|(
name|prefix
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
annotation|@
name|Override
DECL|method|isStartElement ()
specifier|public
name|boolean
name|isStartElement
parameter_list|()
block|{
return|return
name|reader
operator|.
name|isStartElement
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|isEndElement ()
specifier|public
name|boolean
name|isEndElement
parameter_list|()
block|{
return|return
name|reader
operator|.
name|isEndElement
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|isCharacters ()
specifier|public
name|boolean
name|isCharacters
parameter_list|()
block|{
return|return
name|reader
operator|.
name|isCharacters
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|isWhiteSpace ()
specifier|public
name|boolean
name|isWhiteSpace
parameter_list|()
block|{
return|return
name|reader
operator|.
name|isWhiteSpace
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getAttributeValue (String namespaceURI, String localName)
specifier|public
name|String
name|getAttributeValue
parameter_list|(
name|String
name|namespaceURI
parameter_list|,
name|String
name|localName
parameter_list|)
block|{
return|return
name|reader
operator|.
name|getAttributeValue
argument_list|(
name|namespaceURI
argument_list|,
name|localName
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getAttributeCount ()
specifier|public
name|int
name|getAttributeCount
parameter_list|()
block|{
return|return
name|reader
operator|.
name|getAttributeCount
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getAttributeName (int index)
specifier|public
name|QName
name|getAttributeName
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|reader
operator|.
name|getAttributeName
argument_list|(
name|index
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getAttributeNamespace (int index)
specifier|public
name|String
name|getAttributeNamespace
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|reader
operator|.
name|getAttributeNamespace
argument_list|(
name|index
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getAttributeLocalName (int index)
specifier|public
name|String
name|getAttributeLocalName
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|reader
operator|.
name|getAttributeLocalName
argument_list|(
name|index
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getAttributePrefix (int index)
specifier|public
name|String
name|getAttributePrefix
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|reader
operator|.
name|getAttributePrefix
argument_list|(
name|index
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getAttributeType (int index)
specifier|public
name|String
name|getAttributeType
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|reader
operator|.
name|getAttributeType
argument_list|(
name|index
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getAttributeValue (int index)
specifier|public
name|String
name|getAttributeValue
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|reader
operator|.
name|getAttributeValue
argument_list|(
name|index
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|isAttributeSpecified (int index)
specifier|public
name|boolean
name|isAttributeSpecified
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|reader
operator|.
name|isAttributeSpecified
argument_list|(
name|index
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getNamespaceCount ()
specifier|public
name|int
name|getNamespaceCount
parameter_list|()
block|{
return|return
operator|(
name|depth
operator|==
literal|1
condition|?
name|xprefixes
operator|.
name|length
else|:
literal|0
operator|)
operator|+
name|reader
operator|.
name|getNamespaceCount
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getNamespacePrefix (int index)
specifier|public
name|String
name|getNamespacePrefix
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|depth
operator|==
literal|1
condition|)
block|{
return|return
name|index
operator|<
name|xprefixes
operator|.
name|length
condition|?
name|xprefixes
index|[
name|index
index|]
else|:
name|reader
operator|.
name|getNamespacePrefix
argument_list|(
name|index
operator|-
name|xprefixes
operator|.
name|length
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|reader
operator|.
name|getNamespacePrefix
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|getNamespaceURI (int index)
specifier|public
name|String
name|getNamespaceURI
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|depth
operator|==
literal|1
condition|)
block|{
return|return
name|index
operator|<
name|xprefixes
operator|.
name|length
condition|?
name|getNamespaceURI
argument_list|(
name|xprefixes
index|[
name|index
index|]
argument_list|)
else|:
name|reader
operator|.
name|getNamespaceURI
argument_list|(
name|index
operator|-
name|xprefixes
operator|.
name|length
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|reader
operator|.
name|getNamespaceURI
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|getNamespaceContext ()
specifier|public
name|NamespaceContext
name|getNamespaceContext
parameter_list|()
block|{
return|return
name|reader
operator|.
name|getNamespaceContext
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getEventType ()
specifier|public
name|int
name|getEventType
parameter_list|()
block|{
return|return
name|reader
operator|.
name|getEventType
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getText ()
specifier|public
name|String
name|getText
parameter_list|()
block|{
return|return
name|reader
operator|.
name|getText
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getTextCharacters ()
specifier|public
name|char
index|[]
name|getTextCharacters
parameter_list|()
block|{
return|return
name|reader
operator|.
name|getTextCharacters
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getTextCharacters (int sourceStart, char[] target, int targetStart, int length)
specifier|public
name|int
name|getTextCharacters
parameter_list|(
name|int
name|sourceStart
parameter_list|,
name|char
index|[]
name|target
parameter_list|,
name|int
name|targetStart
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|XMLStreamException
block|{
return|return
name|reader
operator|.
name|getTextCharacters
argument_list|(
name|sourceStart
argument_list|,
name|target
argument_list|,
name|targetStart
argument_list|,
name|length
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getTextStart ()
specifier|public
name|int
name|getTextStart
parameter_list|()
block|{
return|return
name|reader
operator|.
name|getTextStart
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getTextLength ()
specifier|public
name|int
name|getTextLength
parameter_list|()
block|{
return|return
name|reader
operator|.
name|getTextLength
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getEncoding ()
specifier|public
name|String
name|getEncoding
parameter_list|()
block|{
return|return
name|reader
operator|.
name|getEncoding
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|hasText ()
specifier|public
name|boolean
name|hasText
parameter_list|()
block|{
return|return
name|reader
operator|.
name|hasText
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getLocation ()
specifier|public
name|Location
name|getLocation
parameter_list|()
block|{
return|return
name|reader
operator|.
name|getLocation
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getName ()
specifier|public
name|QName
name|getName
parameter_list|()
block|{
return|return
name|reader
operator|.
name|getName
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getLocalName ()
specifier|public
name|String
name|getLocalName
parameter_list|()
block|{
return|return
name|reader
operator|.
name|getLocalName
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|hasName ()
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
name|reader
operator|.
name|hasName
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getNamespaceURI ()
specifier|public
name|String
name|getNamespaceURI
parameter_list|()
block|{
return|return
name|reader
operator|.
name|getNamespaceURI
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getPrefix ()
specifier|public
name|String
name|getPrefix
parameter_list|()
block|{
return|return
name|reader
operator|.
name|getPrefix
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getVersion ()
specifier|public
name|String
name|getVersion
parameter_list|()
block|{
return|return
name|reader
operator|.
name|getVersion
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|isStandalone ()
specifier|public
name|boolean
name|isStandalone
parameter_list|()
block|{
return|return
name|reader
operator|.
name|isStandalone
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|standaloneSet ()
specifier|public
name|boolean
name|standaloneSet
parameter_list|()
block|{
return|return
name|reader
operator|.
name|standaloneSet
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getCharacterEncodingScheme ()
specifier|public
name|String
name|getCharacterEncodingScheme
parameter_list|()
block|{
return|return
name|reader
operator|.
name|getCharacterEncodingScheme
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getPITarget ()
specifier|public
name|String
name|getPITarget
parameter_list|()
block|{
return|return
name|reader
operator|.
name|getPITarget
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getPIData ()
specifier|public
name|String
name|getPIData
parameter_list|()
block|{
return|return
name|reader
operator|.
name|getPIData
argument_list|()
return|;
block|}
block|}
end_class

end_unit

