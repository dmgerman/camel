begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cxf.converter
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cxf
operator|.
name|converter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Converter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|message
operator|.
name|MessageContentsList
import|;
end_import

begin_comment
comment|/**  * The<a href="http://activemq.apache.org/camel/type-converter.html">Type Converters</a>  * for CXF related types' converting .  *  * @version $Revision$  */
end_comment

begin_class
annotation|@
name|Converter
DECL|class|CxfConverter
specifier|public
specifier|final
class|class
name|CxfConverter
block|{
DECL|method|CxfConverter ()
specifier|private
name|CxfConverter
parameter_list|()
block|{
comment|// Helper class
block|}
annotation|@
name|Converter
DECL|method|toArray (final MessageContentsList list)
specifier|public
specifier|static
name|Object
index|[]
name|toArray
parameter_list|(
specifier|final
name|MessageContentsList
name|list
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|list
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"The MessageChannel is null"
argument_list|)
throw|;
block|}
return|return
name|list
operator|.
name|toArray
argument_list|()
return|;
block|}
DECL|method|toMessageContentsList (final Object[] array)
specifier|public
specifier|static
name|MessageContentsList
name|toMessageContentsList
parameter_list|(
specifier|final
name|Object
index|[]
name|array
parameter_list|)
block|{
if|if
condition|(
name|array
operator|!=
literal|null
condition|)
block|{
return|return
operator|new
name|MessageContentsList
argument_list|(
name|array
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|MessageContentsList
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

