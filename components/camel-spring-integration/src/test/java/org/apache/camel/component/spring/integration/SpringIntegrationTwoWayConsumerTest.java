begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.spring.integration
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|spring
operator|.
name|integration
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|SpringTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|support
operator|.
name|ClassPathXmlApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|integration
operator|.
name|channel
operator|.
name|MessageChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|integration
operator|.
name|message
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|integration
operator|.
name|message
operator|.
name|StringMessage
import|;
end_import

begin_class
DECL|class|SpringIntegrationTwoWayConsumerTest
specifier|public
class|class
name|SpringIntegrationTwoWayConsumerTest
extends|extends
name|SpringTestSupport
block|{
DECL|field|MESSAGE_BODY
specifier|private
specifier|static
specifier|final
name|String
name|MESSAGE_BODY
init|=
literal|"Request message"
decl_stmt|;
DECL|method|testDelyConfiguration ()
specifier|public
name|void
name|testDelyConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|SpringIntegrationEndpoint
name|endpoint
init|=
operator|(
name|SpringIntegrationEndpoint
operator|)
name|resolveMandatoryEndpoint
argument_list|(
literal|"spring-integration://requestChannel?outputChannel=responseChannel&inOut=true&consumer.delay=5000"
argument_list|)
decl_stmt|;
name|Map
name|map
init|=
name|endpoint
operator|.
name|getConsumerProperties
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"There should have a delay property "
argument_list|,
name|map
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The delay value is not right"
argument_list|,
name|map
operator|.
name|get
argument_list|(
literal|"delay"
argument_list|)
argument_list|,
literal|"5000"
argument_list|)
expr_stmt|;
block|}
DECL|method|testSendingTwoWayMessage ()
specifier|public
name|void
name|testSendingTwoWayMessage
parameter_list|()
throws|throws
name|Exception
block|{
name|MessageChannel
name|requestChannel
init|=
operator|(
name|MessageChannel
operator|)
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"requestChannel"
argument_list|)
decl_stmt|;
name|Message
name|message
init|=
operator|new
name|StringMessage
argument_list|(
name|MESSAGE_BODY
argument_list|)
decl_stmt|;
name|message
operator|.
name|getHeader
argument_list|()
operator|.
name|setReturnAddress
argument_list|(
literal|"responseChannel"
argument_list|)
expr_stmt|;
name|requestChannel
operator|.
name|send
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|MessageChannel
name|responseChannel
init|=
operator|(
name|MessageChannel
operator|)
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"responseChannel"
argument_list|)
decl_stmt|;
name|Message
name|responseMessage
init|=
name|responseChannel
operator|.
name|receive
argument_list|()
decl_stmt|;
name|String
name|result
init|=
operator|(
name|String
operator|)
name|responseMessage
operator|.
name|getPayload
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Get the wrong result"
argument_list|,
name|MESSAGE_BODY
operator|+
literal|" is processed"
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
DECL|method|createApplicationContext ()
specifier|public
name|ClassPathXmlApplicationContext
name|createApplicationContext
parameter_list|()
block|{
return|return
operator|new
name|ClassPathXmlApplicationContext
argument_list|(
literal|"org/apache/camel/component/spring/integration/twoWayConsumer.xml"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

