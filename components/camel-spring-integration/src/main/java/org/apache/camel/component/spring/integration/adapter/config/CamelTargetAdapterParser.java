begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.spring.integration.adapter.config
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|spring
operator|.
name|integration
operator|.
name|adapter
operator|.
name|config
package|;
end_package

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Attr
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NamedNodeMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|spring
operator|.
name|integration
operator|.
name|adapter
operator|.
name|CamelTargetAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|parsing
operator|.
name|BeanComponentDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|support
operator|.
name|BeanDefinitionBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|support
operator|.
name|RootBeanDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|xml
operator|.
name|AbstractSimpleBeanDefinitionParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|xml
operator|.
name|ParserContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|integration
operator|.
name|ConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|integration
operator|.
name|endpoint
operator|.
name|HandlerEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_comment
comment|/**  * Parser for the&lt;camelTarget/&gt; element  * @author Willem Jiang  *  * @version $Revision$  */
end_comment

begin_class
DECL|class|CamelTargetAdapterParser
specifier|public
class|class
name|CamelTargetAdapterParser
extends|extends
name|AbstractCamelContextBeanDefinitionParaser
block|{
DECL|method|getBeanClass (Element element)
specifier|protected
name|Class
argument_list|<
name|?
argument_list|>
name|getBeanClass
parameter_list|(
name|Element
name|element
parameter_list|)
block|{
return|return
name|HandlerEndpoint
operator|.
name|class
return|;
block|}
DECL|method|shouldGenerateId ()
specifier|protected
name|boolean
name|shouldGenerateId
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
DECL|method|shouldGenerateIdAsFallback ()
specifier|protected
name|boolean
name|shouldGenerateIdAsFallback
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
DECL|method|parseAttributes (Element element, ParserContext ctx, BeanDefinitionBuilder bean)
specifier|protected
name|void
name|parseAttributes
parameter_list|(
name|Element
name|element
parameter_list|,
name|ParserContext
name|ctx
parameter_list|,
name|BeanDefinitionBuilder
name|bean
parameter_list|)
block|{
name|NamedNodeMap
name|atts
init|=
name|element
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|atts
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Attr
name|node
init|=
operator|(
name|Attr
operator|)
name|atts
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|String
name|val
init|=
name|node
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|String
name|name
init|=
name|node
operator|.
name|getLocalName
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|name
operator|.
name|equals
argument_list|(
literal|"requestChannel"
argument_list|)
operator|&&
operator|!
name|name
operator|.
name|equals
argument_list|(
literal|"replyChannel"
argument_list|)
condition|)
block|{
name|mapToProperty
argument_list|(
name|bean
argument_list|,
name|name
argument_list|,
name|val
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|doParse (Element element, ParserContext parserContext, BeanDefinitionBuilder builder)
specifier|protected
name|void
name|doParse
parameter_list|(
name|Element
name|element
parameter_list|,
name|ParserContext
name|parserContext
parameter_list|,
name|BeanDefinitionBuilder
name|builder
parameter_list|)
block|{
name|BeanDefinitionBuilder
name|adapterDefBuilder
init|=
name|BeanDefinitionBuilder
operator|.
name|rootBeanDefinition
argument_list|(
name|CamelTargetAdapter
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|requestChannel
init|=
name|element
operator|.
name|getAttribute
argument_list|(
literal|"requestChannel"
argument_list|)
decl_stmt|;
name|String
name|replyChannel
init|=
name|element
operator|.
name|getAttribute
argument_list|(
literal|"replyChannel"
argument_list|)
decl_stmt|;
comment|// Check the requestChannel
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|hasText
argument_list|(
name|requestChannel
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|ConfigurationException
argument_list|(
literal|"The 'requestChannel' attribute is required."
argument_list|)
throw|;
block|}
comment|// Set the adapter bean's property
name|parseAttributes
argument_list|(
name|element
argument_list|,
name|parserContext
argument_list|,
name|adapterDefBuilder
argument_list|)
expr_stmt|;
name|parseCamelContext
argument_list|(
name|element
argument_list|,
name|parserContext
argument_list|,
name|adapterDefBuilder
argument_list|)
expr_stmt|;
name|String
name|adapterBeanName
init|=
name|parserContext
operator|.
name|getReaderContext
argument_list|()
operator|.
name|generateBeanName
argument_list|(
name|adapterDefBuilder
operator|.
name|getBeanDefinition
argument_list|()
argument_list|)
decl_stmt|;
name|parserContext
operator|.
name|registerBeanComponent
argument_list|(
operator|new
name|BeanComponentDefinition
argument_list|(
name|adapterDefBuilder
operator|.
name|getBeanDefinition
argument_list|()
argument_list|,
name|adapterBeanName
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addConstructorArgReference
argument_list|(
name|adapterBeanName
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addPropertyValue
argument_list|(
literal|"inputChannelName"
argument_list|,
name|requestChannel
argument_list|)
expr_stmt|;
if|if
condition|(
name|StringUtils
operator|.
name|hasText
argument_list|(
name|replyChannel
argument_list|)
condition|)
block|{
name|builder
operator|.
name|addPropertyValue
argument_list|(
literal|"outputChannelName"
argument_list|,
name|replyChannel
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

