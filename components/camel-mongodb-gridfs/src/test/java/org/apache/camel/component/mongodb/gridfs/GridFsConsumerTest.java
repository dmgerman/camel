begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.mongodb.gridfs
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mongodb
operator|.
name|gridfs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mongodb
operator|.
name|gridfs
operator|.
name|GridFS
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
DECL|class|GridFsConsumerTest
specifier|public
class|class
name|GridFsConsumerTest
extends|extends
name|AbstractMongoDbTest
block|{
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"direct:create"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mongodb-gridfs:myDb?database={{mongodb.testDb}}&operation=create&bucket="
operator|+
name|getBucket
argument_list|()
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:create-a"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mongodb-gridfs:myDb?database={{mongodb.testDb}}&operation=create&bucket="
operator|+
name|getBucket
argument_list|()
operator|+
literal|"-a"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:create-pts"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mongodb-gridfs:myDb?database={{mongodb.testDb}}&operation=create&bucket="
operator|+
name|getBucket
argument_list|()
operator|+
literal|"-pts"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"mongodb-gridfs:myDb?database={{mongodb.testDb}}&bucket="
operator|+
name|getBucket
argument_list|()
argument_list|)
operator|.
name|convertBodyTo
argument_list|(
name|String
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:test"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"mongodb-gridfs:myDb?database={{mongodb.testDb}}&bucket="
operator|+
name|getBucket
argument_list|()
operator|+
literal|"-a&queryStrategy=FileAttribute"
argument_list|)
operator|.
name|convertBodyTo
argument_list|(
name|String
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:test"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"mongodb-gridfs:myDb?database={{mongodb.testDb}}&bucket="
operator|+
name|getBucket
argument_list|()
operator|+
literal|"-pts&queryStrategy=PersistentTimestamp"
argument_list|)
operator|.
name|convertBodyTo
argument_list|(
name|String
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:test"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
annotation|@
name|Test
DECL|method|testTimestamp ()
specifier|public
name|void
name|testTimestamp
parameter_list|()
throws|throws
name|Exception
block|{
name|runTest
argument_list|(
literal|"direct:create"
argument_list|,
name|gridfs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|method|testAttribute ()
specifier|public
name|void
name|testAttribute
parameter_list|()
throws|throws
name|Exception
block|{
name|runTest
argument_list|(
literal|"direct:create-a"
argument_list|,
operator|new
name|GridFS
argument_list|(
name|mongo
operator|.
name|getDB
argument_list|(
literal|"test"
argument_list|)
argument_list|,
name|getBucket
argument_list|()
operator|+
literal|"-a"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|method|testPersistentTS ()
specifier|public
name|void
name|testPersistentTS
parameter_list|()
throws|throws
name|Exception
block|{
name|runTest
argument_list|(
literal|"direct:create-pts"
argument_list|,
operator|new
name|GridFS
argument_list|(
name|mongo
operator|.
name|getDB
argument_list|(
literal|"test"
argument_list|)
argument_list|,
name|getBucket
argument_list|()
operator|+
literal|"-pts"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|runTest (String target, GridFS gridfs)
specifier|public
name|void
name|runTest
parameter_list|(
name|String
name|target
parameter_list|,
name|GridFS
name|gridfs
parameter_list|)
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:test"
argument_list|)
decl_stmt|;
name|String
name|data
init|=
literal|"This is some stuff to go into the db"
decl_stmt|;
name|mock
operator|.
name|expectedMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|mock
operator|.
name|expectedBodiesReceived
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|String
name|fn
init|=
literal|"filename.for.db.txt"
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|gridfs
operator|.
name|find
argument_list|(
name|fn
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|headers
operator|.
name|put
argument_list|(
name|Exchange
operator|.
name|FILE_NAME
argument_list|,
name|fn
argument_list|)
expr_stmt|;
name|template
operator|.
name|requestBodyAndHeaders
argument_list|(
name|target
argument_list|,
name|data
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|mock
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
name|mock
operator|.
name|reset
argument_list|()
expr_stmt|;
name|mock
operator|.
name|expectedMessageCount
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|mock
operator|.
name|expectedBodiesReceived
argument_list|(
name|data
argument_list|,
name|data
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|headers
operator|.
name|put
argument_list|(
name|Exchange
operator|.
name|FILE_NAME
argument_list|,
name|fn
operator|+
literal|"_1"
argument_list|)
expr_stmt|;
name|template
operator|.
name|requestBodyAndHeaders
argument_list|(
name|target
argument_list|,
name|data
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|headers
operator|.
name|put
argument_list|(
name|Exchange
operator|.
name|FILE_NAME
argument_list|,
name|fn
operator|+
literal|"_2"
argument_list|)
expr_stmt|;
name|template
operator|.
name|requestBodyAndHeaders
argument_list|(
name|target
argument_list|,
name|data
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|headers
operator|.
name|put
argument_list|(
name|Exchange
operator|.
name|FILE_NAME
argument_list|,
name|fn
operator|+
literal|"_3"
argument_list|)
expr_stmt|;
name|template
operator|.
name|requestBodyAndHeaders
argument_list|(
name|target
argument_list|,
name|data
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|mock
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|mock
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

