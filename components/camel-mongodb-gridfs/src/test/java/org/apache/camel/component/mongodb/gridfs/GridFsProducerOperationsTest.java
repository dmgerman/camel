begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.mongodb.gridfs
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mongodb
operator|.
name|gridfs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|GridFsProducerOperationsTest
specifier|public
class|class
name|GridFsProducerOperationsTest
extends|extends
name|AbstractMongoDbTest
block|{
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"direct:create"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mongodb-gridfs:myDb?database={{mongodb.testDb}}&operation=create&bucket="
operator|+
name|getBucket
argument_list|()
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:remove"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mongodb-gridfs:myDb?database={{mongodb.testDb}}&operation=remove&bucket="
operator|+
name|getBucket
argument_list|()
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:findOne"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mongodb-gridfs:myDb?database={{mongodb.testDb}}&operation=findOne&bucket="
operator|+
name|getBucket
argument_list|()
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:listAll"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mongodb-gridfs:myDb?database={{mongodb.testDb}}&operation=listAll&bucket="
operator|+
name|getBucket
argument_list|()
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:count"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mongodb-gridfs:myDb?database={{mongodb.testDb}}&operation=count&bucket="
operator|+
name|getBucket
argument_list|()
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:headerOp"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mongodb-gridfs:myDb?database={{mongodb.testDb}}&bucket="
operator|+
name|getBucket
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
annotation|@
name|Test
DECL|method|testOperations ()
specifier|public
name|void
name|testOperations
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|String
name|fn
init|=
literal|"filename.for.db.txt"
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|gridfs
operator|.
name|find
argument_list|(
name|fn
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|headers
operator|.
name|put
argument_list|(
name|Exchange
operator|.
name|FILE_NAME
argument_list|,
name|fn
argument_list|)
expr_stmt|;
name|String
name|data
init|=
literal|"This is some stuff to go into the db"
decl_stmt|;
name|template
operator|.
name|requestBodyAndHeaders
argument_list|(
literal|"direct:create"
argument_list|,
name|data
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|gridfs
operator|.
name|find
argument_list|(
name|fn
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|template
operator|.
name|requestBodyAndHeaders
argument_list|(
literal|"direct:count"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
argument_list|)
expr_stmt|;
name|InputStream
name|ins
init|=
name|template
operator|.
name|requestBodyAndHeaders
argument_list|(
literal|"direct:findOne"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|,
name|InputStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ins
argument_list|)
expr_stmt|;
name|byte
name|b
index|[]
init|=
operator|new
name|byte
index|[
literal|2048
index|]
decl_stmt|;
name|int
name|i
init|=
name|ins
operator|.
name|read
argument_list|(
name|b
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|data
argument_list|,
operator|new
name|String
argument_list|(
name|b
argument_list|,
literal|0
argument_list|,
name|i
argument_list|,
literal|"utf-8"
argument_list|)
argument_list|)
expr_stmt|;
name|headers
operator|.
name|put
argument_list|(
name|Exchange
operator|.
name|FILE_NAME
argument_list|,
literal|"2-"
operator|+
name|fn
argument_list|)
expr_stmt|;
name|template
operator|.
name|requestBodyAndHeaders
argument_list|(
literal|"direct:create"
argument_list|,
name|data
operator|+
literal|"data2"
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|template
operator|.
name|requestBodyAndHeaders
argument_list|(
literal|"direct:count"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:count"
argument_list|,
literal|null
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|s
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:listAll"
argument_list|,
literal|null
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|s
operator|.
name|contains
argument_list|(
literal|"2-"
operator|+
name|fn
argument_list|)
argument_list|)
expr_stmt|;
name|template
operator|.
name|requestBodyAndHeaders
argument_list|(
literal|"direct:remove"
argument_list|,
literal|null
argument_list|,
name|headers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:count"
argument_list|,
literal|null
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:listAll"
argument_list|,
literal|null
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|s
operator|.
name|contains
argument_list|(
literal|"2-"
operator|+
name|fn
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

