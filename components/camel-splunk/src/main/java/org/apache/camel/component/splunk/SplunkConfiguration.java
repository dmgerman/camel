begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.splunk
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|splunk
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Callable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutorService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Executors
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Future
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|splunk
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|SplunkConfiguration
specifier|public
class|class
name|SplunkConfiguration
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|SplunkConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|host
specifier|private
name|String
name|host
init|=
name|Service
operator|.
name|DEFAULT_HOST
decl_stmt|;
DECL|field|port
specifier|private
name|int
name|port
init|=
name|Service
operator|.
name|DEFAULT_PORT
decl_stmt|;
DECL|field|scheme
specifier|private
name|String
name|scheme
init|=
name|Service
operator|.
name|DEFAULT_SCHEME
decl_stmt|;
DECL|field|app
specifier|private
name|String
name|app
decl_stmt|;
DECL|field|owner
specifier|private
name|String
name|owner
decl_stmt|;
DECL|field|username
specifier|private
name|String
name|username
decl_stmt|;
DECL|field|password
specifier|private
name|String
name|password
decl_stmt|;
DECL|field|connectionTimeout
specifier|private
name|int
name|connectionTimeout
init|=
literal|5000
decl_stmt|;
DECL|field|index
specifier|private
name|String
name|index
decl_stmt|;
DECL|field|sourceType
specifier|private
name|String
name|sourceType
decl_stmt|;
DECL|field|source
specifier|private
name|String
name|source
decl_stmt|;
DECL|field|tcpReceiverPort
specifier|private
name|int
name|tcpReceiverPort
decl_stmt|;
comment|// consumer properties
DECL|field|count
specifier|private
name|int
name|count
decl_stmt|;
DECL|field|fieldList
specifier|private
name|String
name|fieldList
decl_stmt|;
DECL|field|search
specifier|private
name|String
name|search
decl_stmt|;
DECL|field|savedSearch
specifier|private
name|String
name|savedSearch
decl_stmt|;
DECL|field|earliestTime
specifier|private
name|String
name|earliestTime
decl_stmt|;
DECL|field|latestTime
specifier|private
name|String
name|latestTime
decl_stmt|;
DECL|field|initEarliestTime
specifier|private
name|String
name|initEarliestTime
decl_stmt|;
DECL|method|SplunkConfiguration (final String host, final int port, final String username, final String password)
specifier|public
name|SplunkConfiguration
parameter_list|(
specifier|final
name|String
name|host
parameter_list|,
specifier|final
name|int
name|port
parameter_list|,
specifier|final
name|String
name|username
parameter_list|,
specifier|final
name|String
name|password
parameter_list|)
block|{
name|this
operator|.
name|host
operator|=
name|host
expr_stmt|;
name|this
operator|.
name|port
operator|=
name|port
expr_stmt|;
name|this
operator|.
name|username
operator|=
name|username
expr_stmt|;
name|this
operator|.
name|password
operator|=
name|password
expr_stmt|;
block|}
DECL|method|SplunkConfiguration (final String username, final String password)
specifier|public
name|SplunkConfiguration
parameter_list|(
specifier|final
name|String
name|username
parameter_list|,
specifier|final
name|String
name|password
parameter_list|)
block|{
name|this
argument_list|(
name|Service
operator|.
name|DEFAULT_HOST
argument_list|,
name|Service
operator|.
name|DEFAULT_PORT
argument_list|,
name|username
argument_list|,
name|password
argument_list|)
expr_stmt|;
block|}
DECL|method|getInitEarliestTime ()
specifier|public
name|String
name|getInitEarliestTime
parameter_list|()
block|{
return|return
name|initEarliestTime
return|;
block|}
DECL|method|setInitEarliestTime (String initEarliestTime)
specifier|public
name|void
name|setInitEarliestTime
parameter_list|(
name|String
name|initEarliestTime
parameter_list|)
block|{
name|this
operator|.
name|initEarliestTime
operator|=
name|initEarliestTime
expr_stmt|;
block|}
DECL|method|getCount ()
specifier|public
name|int
name|getCount
parameter_list|()
block|{
return|return
name|count
return|;
block|}
DECL|method|setCount (int count)
specifier|public
name|void
name|setCount
parameter_list|(
name|int
name|count
parameter_list|)
block|{
name|this
operator|.
name|count
operator|=
name|count
expr_stmt|;
block|}
DECL|method|getFieldList ()
specifier|public
name|String
name|getFieldList
parameter_list|()
block|{
return|return
name|fieldList
return|;
block|}
DECL|method|setFieldList (String fieldList)
specifier|public
name|void
name|setFieldList
parameter_list|(
name|String
name|fieldList
parameter_list|)
block|{
name|this
operator|.
name|fieldList
operator|=
name|fieldList
expr_stmt|;
block|}
DECL|method|getSearch ()
specifier|public
name|String
name|getSearch
parameter_list|()
block|{
return|return
name|search
return|;
block|}
DECL|method|setSearch (String search)
specifier|public
name|void
name|setSearch
parameter_list|(
name|String
name|search
parameter_list|)
block|{
name|this
operator|.
name|search
operator|=
name|search
expr_stmt|;
block|}
DECL|method|getEarliestTime ()
specifier|public
name|String
name|getEarliestTime
parameter_list|()
block|{
return|return
name|earliestTime
return|;
block|}
DECL|method|setEarliestTime (String earliestTime)
specifier|public
name|void
name|setEarliestTime
parameter_list|(
name|String
name|earliestTime
parameter_list|)
block|{
name|this
operator|.
name|earliestTime
operator|=
name|earliestTime
expr_stmt|;
block|}
DECL|method|getLatestTime ()
specifier|public
name|String
name|getLatestTime
parameter_list|()
block|{
return|return
name|latestTime
return|;
block|}
DECL|method|setLatestTime (String latestTime)
specifier|public
name|void
name|setLatestTime
parameter_list|(
name|String
name|latestTime
parameter_list|)
block|{
name|this
operator|.
name|latestTime
operator|=
name|latestTime
expr_stmt|;
block|}
DECL|method|getTcpReceiverPort ()
specifier|public
name|int
name|getTcpReceiverPort
parameter_list|()
block|{
return|return
name|tcpReceiverPort
return|;
block|}
DECL|method|setTcpReceiverPort (int tcpReceiverPort)
specifier|public
name|void
name|setTcpReceiverPort
parameter_list|(
name|int
name|tcpReceiverPort
parameter_list|)
block|{
name|this
operator|.
name|tcpReceiverPort
operator|=
name|tcpReceiverPort
expr_stmt|;
block|}
DECL|method|getSourceType ()
specifier|public
name|String
name|getSourceType
parameter_list|()
block|{
return|return
name|sourceType
return|;
block|}
DECL|method|setSourceType (String sourceType)
specifier|public
name|void
name|setSourceType
parameter_list|(
name|String
name|sourceType
parameter_list|)
block|{
name|this
operator|.
name|sourceType
operator|=
name|sourceType
expr_stmt|;
block|}
DECL|method|getSource ()
specifier|public
name|String
name|getSource
parameter_list|()
block|{
return|return
name|source
return|;
block|}
DECL|method|setSource (String source)
specifier|public
name|void
name|setSource
parameter_list|(
name|String
name|source
parameter_list|)
block|{
name|this
operator|.
name|source
operator|=
name|source
expr_stmt|;
block|}
DECL|method|setIndex (String index)
specifier|public
name|void
name|setIndex
parameter_list|(
name|String
name|index
parameter_list|)
block|{
name|this
operator|.
name|index
operator|=
name|index
expr_stmt|;
block|}
DECL|method|getIndex ()
specifier|public
name|String
name|getIndex
parameter_list|()
block|{
return|return
name|index
return|;
block|}
DECL|method|getHost ()
specifier|public
name|String
name|getHost
parameter_list|()
block|{
return|return
name|host
return|;
block|}
DECL|method|setHost (String host)
specifier|public
name|void
name|setHost
parameter_list|(
name|String
name|host
parameter_list|)
block|{
name|this
operator|.
name|host
operator|=
name|host
expr_stmt|;
block|}
DECL|method|getPort ()
specifier|public
name|int
name|getPort
parameter_list|()
block|{
return|return
name|port
return|;
block|}
DECL|method|setPort (int port)
specifier|public
name|void
name|setPort
parameter_list|(
name|int
name|port
parameter_list|)
block|{
name|this
operator|.
name|port
operator|=
name|port
expr_stmt|;
block|}
DECL|method|getScheme ()
specifier|public
name|String
name|getScheme
parameter_list|()
block|{
return|return
name|scheme
return|;
block|}
DECL|method|setScheme (String scheme)
specifier|public
name|void
name|setScheme
parameter_list|(
name|String
name|scheme
parameter_list|)
block|{
name|this
operator|.
name|scheme
operator|=
name|scheme
expr_stmt|;
block|}
DECL|method|getApp ()
specifier|public
name|String
name|getApp
parameter_list|()
block|{
return|return
name|app
return|;
block|}
DECL|method|setApp (String app)
specifier|public
name|void
name|setApp
parameter_list|(
name|String
name|app
parameter_list|)
block|{
name|this
operator|.
name|app
operator|=
name|app
expr_stmt|;
block|}
DECL|method|getOwner ()
specifier|public
name|String
name|getOwner
parameter_list|()
block|{
return|return
name|owner
return|;
block|}
DECL|method|setOwner (String owner)
specifier|public
name|void
name|setOwner
parameter_list|(
name|String
name|owner
parameter_list|)
block|{
name|this
operator|.
name|owner
operator|=
name|owner
expr_stmt|;
block|}
DECL|method|getUsername ()
specifier|public
name|String
name|getUsername
parameter_list|()
block|{
return|return
name|username
return|;
block|}
DECL|method|setUsername (String username)
specifier|public
name|void
name|setUsername
parameter_list|(
name|String
name|username
parameter_list|)
block|{
name|this
operator|.
name|username
operator|=
name|username
expr_stmt|;
block|}
DECL|method|getPassword ()
specifier|public
name|String
name|getPassword
parameter_list|()
block|{
return|return
name|password
return|;
block|}
DECL|method|setPassword (String password)
specifier|public
name|void
name|setPassword
parameter_list|(
name|String
name|password
parameter_list|)
block|{
name|this
operator|.
name|password
operator|=
name|password
expr_stmt|;
block|}
DECL|method|getConnectionTimeout ()
specifier|public
name|int
name|getConnectionTimeout
parameter_list|()
block|{
return|return
name|connectionTimeout
return|;
block|}
DECL|method|setConnectionTimeout (int timeout)
specifier|public
name|void
name|setConnectionTimeout
parameter_list|(
name|int
name|timeout
parameter_list|)
block|{
name|this
operator|.
name|connectionTimeout
operator|=
name|timeout
expr_stmt|;
block|}
DECL|method|getSavedSearch ()
specifier|public
name|String
name|getSavedSearch
parameter_list|()
block|{
return|return
name|this
operator|.
name|savedSearch
return|;
block|}
DECL|method|setSavedSearch (String savedSearch)
specifier|public
name|void
name|setSavedSearch
parameter_list|(
name|String
name|savedSearch
parameter_list|)
block|{
name|this
operator|.
name|savedSearch
operator|=
name|savedSearch
expr_stmt|;
block|}
DECL|method|createService ()
specifier|public
name|Service
name|createService
parameter_list|()
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|args
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|host
operator|!=
literal|null
condition|)
block|{
name|args
operator|.
name|put
argument_list|(
literal|"host"
argument_list|,
name|host
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|port
operator|>
literal|0
condition|)
block|{
name|args
operator|.
name|put
argument_list|(
literal|"port"
argument_list|,
name|port
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|scheme
operator|!=
literal|null
condition|)
block|{
name|args
operator|.
name|put
argument_list|(
literal|"scheme"
argument_list|,
name|scheme
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|app
operator|!=
literal|null
condition|)
block|{
name|args
operator|.
name|put
argument_list|(
literal|"app"
argument_list|,
name|app
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|owner
operator|!=
literal|null
condition|)
block|{
name|args
operator|.
name|put
argument_list|(
literal|"owner"
argument_list|,
name|owner
argument_list|)
expr_stmt|;
block|}
name|args
operator|.
name|put
argument_list|(
literal|"username"
argument_list|,
name|username
argument_list|)
expr_stmt|;
name|args
operator|.
name|put
argument_list|(
literal|"password"
argument_list|,
name|password
argument_list|)
expr_stmt|;
name|ExecutorService
name|executor
init|=
name|Executors
operator|.
name|newSingleThreadExecutor
argument_list|()
decl_stmt|;
name|Future
argument_list|<
name|Service
argument_list|>
name|future
init|=
name|executor
operator|.
name|submit
argument_list|(
operator|new
name|Callable
argument_list|<
name|Service
argument_list|>
argument_list|()
block|{
specifier|public
name|Service
name|call
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|Service
operator|.
name|connect
argument_list|(
name|args
argument_list|)
return|;
block|}
block|}
argument_list|)
decl_stmt|;
try|try
block|{
name|Service
name|service
decl_stmt|;
if|if
condition|(
name|connectionTimeout
operator|>
literal|0
condition|)
block|{
name|service
operator|=
name|future
operator|.
name|get
argument_list|(
name|connectionTimeout
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|service
operator|=
name|future
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
name|LOG
operator|.
name|info
argument_list|(
literal|"Successfully connected to Splunk"
argument_list|)
expr_stmt|;
return|return
name|service
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"could not connect to Splunk Server @ %s:%d - %s"
argument_list|,
name|host
argument_list|,
name|port
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

