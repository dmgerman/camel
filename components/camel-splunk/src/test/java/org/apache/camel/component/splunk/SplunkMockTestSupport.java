begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.splunk
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|splunk
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|Socket
import|;
end_import

begin_import
import|import
name|com
operator|.
name|splunk
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|MockitoAnnotations
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|reset
import|;
end_import

begin_class
DECL|class|SplunkMockTestSupport
specifier|public
specifier|abstract
class|class
name|SplunkMockTestSupport
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Mock
DECL|field|service
name|Service
name|service
decl_stmt|;
annotation|@
name|Mock
DECL|field|socket
name|Socket
name|socket
decl_stmt|;
annotation|@
name|Override
DECL|method|createCamelContext ()
specifier|protected
name|CamelContext
name|createCamelContext
parameter_list|()
throws|throws
name|Exception
block|{
name|CamelContext
name|context
init|=
name|super
operator|.
name|createCamelContext
argument_list|()
decl_stmt|;
comment|// set splunk to use mocked connection factory
name|MockitoAnnotations
operator|.
name|initMocks
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|reset
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|reset
argument_list|(
name|socket
argument_list|)
expr_stmt|;
name|SplunkComponent
name|splunk
init|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"splunk"
argument_list|,
name|SplunkComponent
operator|.
name|class
argument_list|)
decl_stmt|;
name|DefaultSplunkConfigurationFactory
name|cf
init|=
name|Helper
operator|.
name|mockComponent
argument_list|(
name|service
argument_list|,
name|socket
argument_list|)
decl_stmt|;
name|splunk
operator|.
name|setSplunkConfigurationFactory
argument_list|(
name|cf
argument_list|)
expr_stmt|;
return|return
name|context
return|;
block|}
block|}
end_class

end_unit

