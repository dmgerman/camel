begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.zendesk
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|zendesk
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|IntrospectionSupport
import|;
end_import

begin_comment
comment|/**  * A base class for Zendesk integration tests.  *<p>  * The camel-api-component-maven-plugin automatically generates a skeleton code of  * API integration tests in target/generated-test-sources/camel-component.  * To cover more API methods in integration tests, you can copy the test methods and  * routes from the skeleton code into one of the subclass of this class.  *</p>  */
end_comment

begin_class
DECL|class|AbstractZendeskTestSupport
specifier|public
class|class
name|AbstractZendeskTestSupport
extends|extends
name|CamelTestSupport
block|{
DECL|field|TEST_OPTIONS_PROPERTIES
specifier|public
specifier|static
specifier|final
name|String
name|TEST_OPTIONS_PROPERTIES
init|=
literal|"/test-options.properties"
decl_stmt|;
DECL|field|SYSPROP_ZENDESK_SERVER_URL
specifier|public
specifier|static
specifier|final
name|String
name|SYSPROP_ZENDESK_SERVER_URL
init|=
literal|"zendesk.serverUrl"
decl_stmt|;
DECL|field|SYSPROP_ZENDESK_USERNAME
specifier|public
specifier|static
specifier|final
name|String
name|SYSPROP_ZENDESK_USERNAME
init|=
literal|"zendesk.username"
decl_stmt|;
DECL|field|SYSPROP_ZENDESK_PASSWORD
specifier|public
specifier|static
specifier|final
name|String
name|SYSPROP_ZENDESK_PASSWORD
init|=
literal|"zendesk.password"
decl_stmt|;
DECL|field|SYSPROP_ZENDESK_TOKEN
specifier|public
specifier|static
specifier|final
name|String
name|SYSPROP_ZENDESK_TOKEN
init|=
literal|"zendesk.token"
decl_stmt|;
DECL|field|SYSPROP_ZENDESK_OAUTH_TOKEN
specifier|public
specifier|static
specifier|final
name|String
name|SYSPROP_ZENDESK_OAUTH_TOKEN
init|=
literal|"zendesk.oauthToken"
decl_stmt|;
DECL|field|ENV_ZENDESK_SERVER_URL
specifier|public
specifier|static
specifier|final
name|String
name|ENV_ZENDESK_SERVER_URL
init|=
literal|"ZENDESK_SERVER_URL"
decl_stmt|;
DECL|field|ENV_ZENDESK_USERNAME
specifier|public
specifier|static
specifier|final
name|String
name|ENV_ZENDESK_USERNAME
init|=
literal|"ZENDESK_SERVER_URL"
decl_stmt|;
DECL|field|ENV_ZENDESK_PASSWORD
specifier|public
specifier|static
specifier|final
name|String
name|ENV_ZENDESK_PASSWORD
init|=
literal|"zendesk.password"
decl_stmt|;
DECL|field|ENV_ZENDESK_TOKEN
specifier|public
specifier|static
specifier|final
name|String
name|ENV_ZENDESK_TOKEN
init|=
literal|"zendesk.token"
decl_stmt|;
DECL|field|ENV_ZENDESK_OAUTH_TOKEN
specifier|public
specifier|static
specifier|final
name|String
name|ENV_ZENDESK_OAUTH_TOKEN
init|=
literal|"zendesk.oauthToken"
decl_stmt|;
annotation|@
name|Override
DECL|method|createCamelContext ()
specifier|protected
name|CamelContext
name|createCamelContext
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|CamelContext
name|context
init|=
name|super
operator|.
name|createCamelContext
argument_list|()
decl_stmt|;
specifier|final
name|ZendeskConfiguration
name|configuration
init|=
operator|new
name|ZendeskConfiguration
argument_list|()
decl_stmt|;
specifier|final
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
try|try
block|{
name|properties
operator|.
name|load
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|TEST_OPTIONS_PROPERTIES
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|options
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|entry
range|:
name|properties
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|options
operator|.
name|put
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|IntrospectionSupport
operator|.
name|setProperties
argument_list|(
name|configuration
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// ignore - system property or ENV may be supplied
block|}
name|configuration
operator|.
name|setServerUrl
argument_list|(
name|System
operator|.
name|getenv
argument_list|(
name|ENV_ZENDESK_SERVER_URL
argument_list|)
operator|!=
literal|null
condition|?
name|System
operator|.
name|getenv
argument_list|(
name|ENV_ZENDESK_SERVER_URL
argument_list|)
else|:
name|configuration
operator|.
name|getServerUrl
argument_list|()
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setUsername
argument_list|(
name|System
operator|.
name|getenv
argument_list|(
name|ENV_ZENDESK_USERNAME
argument_list|)
operator|!=
literal|null
condition|?
name|System
operator|.
name|getenv
argument_list|(
name|ENV_ZENDESK_USERNAME
argument_list|)
else|:
name|configuration
operator|.
name|getUsername
argument_list|()
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setPassword
argument_list|(
name|System
operator|.
name|getenv
argument_list|(
name|ENV_ZENDESK_PASSWORD
argument_list|)
operator|!=
literal|null
condition|?
name|System
operator|.
name|getenv
argument_list|(
name|ENV_ZENDESK_PASSWORD
argument_list|)
else|:
name|configuration
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setToken
argument_list|(
name|System
operator|.
name|getenv
argument_list|(
name|ENV_ZENDESK_TOKEN
argument_list|)
operator|!=
literal|null
condition|?
name|System
operator|.
name|getenv
argument_list|(
name|ENV_ZENDESK_TOKEN
argument_list|)
else|:
name|configuration
operator|.
name|getToken
argument_list|()
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setOauthToken
argument_list|(
name|System
operator|.
name|getenv
argument_list|(
name|ENV_ZENDESK_OAUTH_TOKEN
argument_list|)
operator|!=
literal|null
condition|?
name|System
operator|.
name|getenv
argument_list|(
name|ENV_ZENDESK_OAUTH_TOKEN
argument_list|)
else|:
name|configuration
operator|.
name|getOauthToken
argument_list|()
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setServerUrl
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
name|SYSPROP_ZENDESK_SERVER_URL
argument_list|,
name|configuration
operator|.
name|getServerUrl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setUsername
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
name|SYSPROP_ZENDESK_USERNAME
argument_list|,
name|configuration
operator|.
name|getUsername
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setPassword
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
name|SYSPROP_ZENDESK_PASSWORD
argument_list|,
name|configuration
operator|.
name|getPassword
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setToken
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
name|SYSPROP_ZENDESK_TOKEN
argument_list|,
name|configuration
operator|.
name|getToken
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setOauthToken
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
name|SYSPROP_ZENDESK_OAUTH_TOKEN
argument_list|,
name|configuration
operator|.
name|getOauthToken
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|configuration
operator|.
name|getServerUrl
argument_list|()
operator|==
literal|null
operator|||
name|configuration
operator|.
name|getUsername
argument_list|()
operator|==
literal|null
operator|||
operator|(
name|configuration
operator|.
name|getPassword
argument_list|()
operator|==
literal|null
operator|&&
name|configuration
operator|.
name|getToken
argument_list|()
operator|==
literal|null
operator|&&
name|configuration
operator|.
name|getOauthToken
argument_list|()
operator|==
literal|null
operator|)
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Zendesk configuration is missing"
argument_list|)
throw|;
block|}
comment|// add ZendeskComponent to Camel context
specifier|final
name|ZendeskComponent
name|component
init|=
operator|new
name|ZendeskComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|component
operator|.
name|setConfiguration
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
literal|"zendesk"
argument_list|,
name|component
argument_list|)
expr_stmt|;
return|return
name|context
return|;
block|}
annotation|@
name|Override
DECL|method|isCreateCamelContextPerClass ()
specifier|public
name|boolean
name|isCreateCamelContextPerClass
parameter_list|()
block|{
comment|// only create the context once for this class
return|return
literal|true
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|requestBodyAndHeaders (String endpointUri, Object body, Map<String, Object> headers)
specifier|protected
parameter_list|<
name|T
parameter_list|>
name|T
name|requestBodyAndHeaders
parameter_list|(
name|String
name|endpointUri
parameter_list|,
name|Object
name|body
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
parameter_list|)
block|{
return|return
operator|(
name|T
operator|)
name|template
operator|.
name|requestBodyAndHeaders
argument_list|(
name|endpointUri
argument_list|,
name|body
argument_list|,
name|headers
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|requestBody (String endpointUri, Object body)
specifier|protected
parameter_list|<
name|T
parameter_list|>
name|T
name|requestBody
parameter_list|(
name|String
name|endpointUri
parameter_list|,
name|Object
name|body
parameter_list|)
block|{
return|return
operator|(
name|T
operator|)
name|template
operator|.
name|requestBody
argument_list|(
name|endpointUri
argument_list|,
name|body
argument_list|)
return|;
block|}
block|}
end_class

end_unit

