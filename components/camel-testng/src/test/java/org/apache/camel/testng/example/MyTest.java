begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.testng.example
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|testng
operator|.
name|example
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|testng
operator|.
name|SpringRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * @version $Revision: 1.1 $  */
end_comment

begin_class
annotation|@
name|Test
argument_list|(
name|groups
operator|=
block|{
literal|"routing"
block|}
argument_list|)
DECL|class|MyTest
specifier|public
class|class
name|MyTest
extends|extends
name|SpringRunner
block|{
DECL|field|appContextLocation
specifier|private
name|String
name|appContextLocation
init|=
literal|" org/apache/camel/testng/example/spring.xml"
decl_stmt|;
DECL|method|useCaseFoo ()
specifier|public
name|void
name|useCaseFoo
parameter_list|()
throws|throws
name|Exception
block|{
name|assertApplicationContextStarts
argument_list|(
name|appContextLocation
argument_list|,
name|createProperties
argument_list|(
literal|"useCase"
argument_list|,
literal|"foo/input1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertExpectedCount
argument_list|(
literal|2
argument_list|)
expr_stmt|;
block|}
DECL|method|useCaseBar ()
specifier|public
name|void
name|useCaseBar
parameter_list|()
throws|throws
name|Exception
block|{
name|assertApplicationContextStarts
argument_list|(
name|appContextLocation
argument_list|,
name|createProperties
argument_list|(
literal|"useCase"
argument_list|,
literal|"bar/input1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertExpectedCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
DECL|method|assertExpectedCount (int expectedCount)
specifier|protected
name|void
name|assertExpectedCount
parameter_list|(
name|int
name|expectedCount
parameter_list|)
throws|throws
name|InterruptedException
block|{
name|MockEndpoint
name|endpoint
init|=
name|getCamelContext
argument_list|()
operator|.
name|getEndpoint
argument_list|(
literal|"mock:results"
argument_list|,
name|MockEndpoint
operator|.
name|class
argument_list|)
decl_stmt|;
name|endpoint
operator|.
name|expectedMessageCount
argument_list|(
name|expectedCount
argument_list|)
expr_stmt|;
name|endpoint
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

