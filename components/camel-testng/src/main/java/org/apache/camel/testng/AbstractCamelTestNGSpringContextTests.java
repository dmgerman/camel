begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.testng
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|testng
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|spring
operator|.
name|CamelSpringTestContextLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|spring
operator|.
name|CamelSpringTestContextLoaderTestExecutionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|spring
operator|.
name|DisableJmxTestExecutionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|spring
operator|.
name|StopWatchTestExecutionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|TestExecutionListeners
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|support
operator|.
name|DependencyInjectionTestExecutionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|support
operator|.
name|DirtiesContextTestExecutionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|testng
operator|.
name|AbstractTestNGSpringContextTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|transaction
operator|.
name|TransactionalTestExecutionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|IHookable
import|;
end_import

begin_comment
comment|/**  * Bridges Camel testing capabilities from {@link CamelSpringTestSupport} into  * Spring Test driven classes. This class is based on {@link AbstractTestNGSpringContextTests}  * but must also declare a {@link ContextConfiguration} to enable the custom context loader needed  * to support some of the Camel testing capabilities.  */
end_comment

begin_class
annotation|@
name|TestExecutionListeners
argument_list|(
name|listeners
operator|=
block|{
name|CamelSpringTestContextLoaderTestExecutionListener
operator|.
name|class
block|,
name|DependencyInjectionTestExecutionListener
operator|.
name|class
block|,
name|DirtiesContextTestExecutionListener
operator|.
name|class
block|,
name|TransactionalTestExecutionListener
operator|.
name|class
block|,
name|DisableJmxTestExecutionListener
operator|.
name|class
block|,
name|StopWatchTestExecutionListener
operator|.
name|class
block|}
argument_list|,
name|inheritListeners
operator|=
literal|false
argument_list|)
annotation|@
name|ContextConfiguration
argument_list|(
name|loader
operator|=
name|AbstractCamelTestNGSpringContextTests
operator|.
name|TestNGCamelSpringTestContextLoader
operator|.
name|class
argument_list|)
DECL|class|AbstractCamelTestNGSpringContextTests
specifier|public
specifier|abstract
class|class
name|AbstractCamelTestNGSpringContextTests
extends|extends
name|AbstractTestNGSpringContextTests
implements|implements
name|IHookable
block|{
DECL|class|TestNGCamelSpringTestContextLoader
specifier|public
specifier|static
specifier|final
class|class
name|TestNGCamelSpringTestContextLoader
extends|extends
name|CamelSpringTestContextLoader
block|{
comment|/**          * Since {@link AbstractTestNGSpringContextTests} declares the test context as private and          * we cannot control its instantiation, we need to use {@link ContextConfiguration} on           * {@link AbstractCamelTestNGSpringContextTests}.  Unfortunately, this also tries to load          * the a context resource based on the default naming convention.  We don't want to require          * end users to always have a resource for their tests' abstract parent so we override          * the behavior here to prevent that from happening.           */
annotation|@
name|Override
DECL|method|generateDefaultLocations (Class<?> clazz)
specifier|protected
name|String
index|[]
name|generateDefaultLocations
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
parameter_list|)
block|{
if|if
condition|(
name|clazz
operator|==
name|AbstractCamelTestNGSpringContextTests
operator|.
name|class
condition|)
block|{
return|return
operator|new
name|String
index|[
literal|0
index|]
return|;
block|}
else|else
block|{
return|return
name|super
operator|.
name|generateDefaultLocations
argument_list|(
name|clazz
argument_list|)
return|;
block|}
block|}
block|}
block|}
end_class

end_unit

