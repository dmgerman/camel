begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.testng
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|testng
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|InvocationTargetException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|spring
operator|.
name|CamelSpringTestContextLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|spring
operator|.
name|CamelSpringTestContextLoaderTestExecutionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|spring
operator|.
name|DisableJmxTestExecutionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|spring
operator|.
name|StopWatchTestExecutionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContextAware
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|TestContextManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|TestExecutionListeners
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|support
operator|.
name|DependencyInjectionTestExecutionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|support
operator|.
name|DirtiesContextTestExecutionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|testng
operator|.
name|AbstractTestNGSpringContextTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|transaction
operator|.
name|TransactionalTestExecutionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|IHookCallBack
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|IHookable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|ITestResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|AfterMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|testng
operator|.
name|annotations
operator|.
name|BeforeMethod
import|;
end_import

begin_comment
comment|/**  * Bridges Camel testing capabilities from {@link CamelSpringTestSupport} into  * Spring Test driven classes. This class is based on {@link AbstractTestNGSpringContextTests}  * but must re-implement much of the logic due to a lack of extensibility in  * {@code AbstractTestNGSpringContextTests}. Specifically the need to inject a different default  * {@link ContextLoader} implementation and to prepend {@link TestExecutionListeners} to the list  * defined on {@code AbstractTestNGSpringContextTests}.  */
end_comment

begin_class
annotation|@
name|TestExecutionListeners
argument_list|(
name|listeners
operator|=
block|{
name|CamelSpringTestContextLoaderTestExecutionListener
operator|.
name|class
block|,
name|DependencyInjectionTestExecutionListener
operator|.
name|class
block|,
name|DirtiesContextTestExecutionListener
operator|.
name|class
block|,
name|TransactionalTestExecutionListener
operator|.
name|class
block|,
name|DisableJmxTestExecutionListener
operator|.
name|class
block|,
name|StopWatchTestExecutionListener
operator|.
name|class
block|}
argument_list|)
DECL|class|AbstractCamelTestNGSpringContextTests
specifier|public
specifier|abstract
class|class
name|AbstractCamelTestNGSpringContextTests
implements|implements
name|IHookable
implements|,
name|ApplicationContextAware
block|{
DECL|field|applicationContext
specifier|protected
name|ApplicationContext
name|applicationContext
decl_stmt|;
DECL|field|testContextManager
specifier|private
specifier|final
name|TestContextManager
name|testContextManager
decl_stmt|;
DECL|field|testException
specifier|private
name|Throwable
name|testException
decl_stmt|;
comment|/**      * Construct a new AbstractTestNGSpringContextTests instance and initialize      * the internal {@link TestContextManager} for the current test.      */
DECL|method|AbstractCamelTestNGSpringContextTests ()
specifier|public
name|AbstractCamelTestNGSpringContextTests
parameter_list|()
block|{
name|this
operator|.
name|testContextManager
operator|=
operator|new
name|TestContextManager
argument_list|(
name|getClass
argument_list|()
argument_list|,
name|getDefaultContextLoaderClassName
argument_list|(
name|getClass
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**     * Set the {@link ApplicationContext} to be used by this test instance,     * provided via {@link ApplicationContextAware} semantics.     *      * @param applicationContext the applicationContext to set     */
DECL|method|setApplicationContext (ApplicationContext applicationContext)
specifier|public
specifier|final
name|void
name|setApplicationContext
parameter_list|(
name|ApplicationContext
name|applicationContext
parameter_list|)
block|{
name|this
operator|.
name|applicationContext
operator|=
name|applicationContext
expr_stmt|;
block|}
comment|/**     * Returns the specialized loader for tight integration between Camel testing features     * and the application context initialization.     *      * @return Returns the class name for {@link CamelSpringTestContextLoader}     */
DECL|method|getDefaultContextLoaderClassName (Class<?> clazz)
specifier|protected
name|String
name|getDefaultContextLoaderClassName
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
parameter_list|)
block|{
return|return
name|CamelSpringTestContextLoader
operator|.
name|class
operator|.
name|getName
argument_list|()
return|;
block|}
annotation|@
name|BeforeClass
argument_list|(
name|alwaysRun
operator|=
literal|true
argument_list|)
DECL|method|springTestContextPrepareTestInstance ()
specifier|protected
name|void
name|springTestContextPrepareTestInstance
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|testContextManager
operator|.
name|beforeTestClass
argument_list|()
expr_stmt|;
name|this
operator|.
name|testContextManager
operator|.
name|prepareTestInstance
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
annotation|@
name|BeforeMethod
argument_list|(
name|alwaysRun
operator|=
literal|true
argument_list|)
DECL|method|springTestContextBeforeTestMethod (Method testMethod)
specifier|protected
name|void
name|springTestContextBeforeTestMethod
parameter_list|(
name|Method
name|testMethod
parameter_list|)
throws|throws
name|Exception
block|{
name|this
operator|.
name|testContextManager
operator|.
name|beforeTestMethod
argument_list|(
name|this
argument_list|,
name|testMethod
argument_list|)
expr_stmt|;
block|}
DECL|method|run (IHookCallBack callBack, ITestResult testResult)
specifier|public
name|void
name|run
parameter_list|(
name|IHookCallBack
name|callBack
parameter_list|,
name|ITestResult
name|testResult
parameter_list|)
block|{
name|callBack
operator|.
name|runTestMethod
argument_list|(
name|testResult
argument_list|)
expr_stmt|;
name|Throwable
name|testResultException
init|=
name|testResult
operator|.
name|getThrowable
argument_list|()
decl_stmt|;
if|if
condition|(
name|testResultException
operator|instanceof
name|InvocationTargetException
condition|)
block|{
name|testResultException
operator|=
operator|(
operator|(
name|InvocationTargetException
operator|)
name|testResultException
operator|)
operator|.
name|getCause
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|testException
operator|=
name|testResultException
expr_stmt|;
block|}
annotation|@
name|AfterMethod
argument_list|(
name|alwaysRun
operator|=
literal|true
argument_list|)
DECL|method|springTestContextAfterTestMethod (Method testMethod)
specifier|protected
name|void
name|springTestContextAfterTestMethod
parameter_list|(
name|Method
name|testMethod
parameter_list|)
throws|throws
name|Exception
block|{
try|try
block|{
name|this
operator|.
name|testContextManager
operator|.
name|afterTestMethod
argument_list|(
name|this
argument_list|,
name|testMethod
argument_list|,
name|this
operator|.
name|testException
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|this
operator|.
name|testException
operator|=
literal|null
expr_stmt|;
block|}
block|}
annotation|@
name|AfterClass
argument_list|(
name|alwaysRun
operator|=
literal|true
argument_list|)
DECL|method|springTestContextAfterTestClass ()
specifier|protected
name|void
name|springTestContextAfterTestClass
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|testContextManager
operator|.
name|afterTestClass
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

