begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.azure.queue
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|azure
operator|.
name|queue
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|OperationContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|StorageCredentials
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|StorageCredentialsAccountAndKey
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|queue
operator|.
name|CloudQueue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|queue
operator|.
name|CloudQueueMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ProducerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assume
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|QueueServiceProducerTest
specifier|public
class|class
name|QueueServiceProducerTest
block|{
DECL|field|AZURE_STORAGE_QUEUE
specifier|private
specifier|static
specifier|final
name|String
name|AZURE_STORAGE_QUEUE
init|=
literal|"AZURE_STORAGE_QUEUE"
decl_stmt|;
annotation|@
name|Test
DECL|method|testAppendQueue ()
specifier|public
name|void
name|testAppendQueue
parameter_list|()
throws|throws
name|Exception
block|{
name|StorageCredentials
name|creds
init|=
name|getStorageCredentials
argument_list|(
literal|"camelqueue"
argument_list|,
name|System
operator|.
name|getenv
argument_list|(
name|AZURE_STORAGE_QUEUE
argument_list|)
argument_list|)
decl_stmt|;
name|Assume
operator|.
name|assumeNotNull
argument_list|(
literal|"Credentials not null"
argument_list|,
name|creds
argument_list|)
expr_stmt|;
name|OperationContext
operator|.
name|setLoggingEnabledByDefault
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|CamelContext
name|camelctx
init|=
name|createCamelContext
argument_list|(
name|creds
argument_list|)
decl_stmt|;
name|camelctx
operator|.
name|addRoutes
argument_list|(
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
literal|"direct:createQueue"
argument_list|)
operator|.
name|to
argument_list|(
literal|"azure-queue://camelqueue/queue1?credentials=#creds&operation=createQueue"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:listQueues"
argument_list|)
operator|.
name|to
argument_list|(
literal|"azure-queue://camelqueue?credentials=#creds&operation=listQueues"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:deleteQueue"
argument_list|)
operator|.
name|to
argument_list|(
literal|"azure-queue://camelqueue/queue1?credentials=#creds&operation=deleteQueue"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:addMessage"
argument_list|)
operator|.
name|to
argument_list|(
literal|"azure-queue://camelqueue/queue1?credentials=#creds&operation=addMessage"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:retrieveMessage"
argument_list|)
operator|.
name|to
argument_list|(
literal|"azure-queue://camelqueue/queue1?credentials=#creds&operation=retrieveMessage"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|camelctx
operator|.
name|start
argument_list|()
expr_stmt|;
try|try
block|{
name|ProducerTemplate
name|producer
init|=
name|camelctx
operator|.
name|createProducerTemplate
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|?
argument_list|>
name|it
init|=
name|producer
operator|.
name|requestBody
argument_list|(
literal|"direct:listQueues"
argument_list|,
literal|null
argument_list|,
name|Iterable
operator|.
name|class
argument_list|)
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"No more queues"
argument_list|,
name|it
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|producer
operator|.
name|sendBody
argument_list|(
literal|"direct:addMessage"
argument_list|,
literal|"SomeMsg"
argument_list|)
expr_stmt|;
name|it
operator|=
name|producer
operator|.
name|requestBody
argument_list|(
literal|"direct:listQueues"
argument_list|,
literal|null
argument_list|,
name|Iterable
operator|.
name|class
argument_list|)
operator|.
name|iterator
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Has queues"
argument_list|,
name|it
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|CloudQueue
name|queue
init|=
operator|(
name|CloudQueue
operator|)
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"queue1"
argument_list|,
name|queue
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"No more queues"
argument_list|,
name|it
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|CloudQueueMessage
name|msg
init|=
name|producer
operator|.
name|requestBody
argument_list|(
literal|"direct:retrieveMessage"
argument_list|,
literal|null
argument_list|,
name|CloudQueueMessage
operator|.
name|class
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
literal|"Retrieve a message"
argument_list|,
name|msg
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"SomeMsg"
argument_list|,
name|msg
operator|.
name|getMessageContentAsString
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|queue
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|camelctx
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|getStorageCredentials (String account, String key)
specifier|private
name|StorageCredentials
name|getStorageCredentials
parameter_list|(
name|String
name|account
parameter_list|,
name|String
name|key
parameter_list|)
block|{
return|return
name|key
operator|!=
literal|null
condition|?
operator|new
name|StorageCredentialsAccountAndKey
argument_list|(
name|account
argument_list|,
name|key
argument_list|)
else|:
literal|null
return|;
block|}
DECL|method|createCamelContext (StorageCredentials credentials)
specifier|private
name|CamelContext
name|createCamelContext
parameter_list|(
name|StorageCredentials
name|credentials
parameter_list|)
throws|throws
name|Exception
block|{
name|CamelContext
name|context
init|=
operator|new
name|DefaultCamelContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|getRegistry
argument_list|()
operator|.
name|bind
argument_list|(
literal|"creds"
argument_list|,
name|credentials
argument_list|)
expr_stmt|;
return|return
name|context
return|;
block|}
block|}
end_class

end_unit

