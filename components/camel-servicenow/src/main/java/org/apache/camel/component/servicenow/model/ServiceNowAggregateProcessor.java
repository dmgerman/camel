begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.servicenow.model
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|servicenow
operator|.
name|model
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|servicenow
operator|.
name|ServiceNowConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|servicenow
operator|.
name|ServiceNowEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|servicenow
operator|.
name|ServiceNowProducerProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_class
DECL|class|ServiceNowAggregateProcessor
specifier|public
class|class
name|ServiceNowAggregateProcessor
extends|extends
name|ServiceNowProducerProcessor
argument_list|<
name|ServiceNowAggregate
argument_list|>
block|{
DECL|field|SUPPLIER
specifier|public
specifier|static
specifier|final
name|ServiceNowProducerProcessor
operator|.
name|Supplier
name|SUPPLIER
init|=
operator|new
name|ServiceNowProducerProcessor
operator|.
name|Supplier
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Processor
name|get
parameter_list|(
name|ServiceNowEndpoint
name|endpoint
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|new
name|ServiceNowAggregateProcessor
argument_list|(
name|endpoint
argument_list|)
return|;
block|}
block|}
decl_stmt|;
DECL|method|ServiceNowAggregateProcessor (ServiceNowEndpoint endpoint)
specifier|public
name|ServiceNowAggregateProcessor
parameter_list|(
name|ServiceNowEndpoint
name|endpoint
parameter_list|)
throws|throws
name|Exception
block|{
name|super
argument_list|(
name|endpoint
argument_list|,
name|ServiceNowAggregate
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doProcess (Exchange exchange, Class<?> model, String action, String tableName, String sysId)
specifier|protected
name|void
name|doProcess
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|model
parameter_list|,
name|String
name|action
parameter_list|,
name|String
name|tableName
parameter_list|,
name|String
name|sysId
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|ObjectHelper
operator|.
name|equal
argument_list|(
name|ServiceNowConstants
operator|.
name|ACTION_RETRIEVE
argument_list|,
name|action
argument_list|,
literal|true
argument_list|)
condition|)
block|{
name|retrieveStats
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
argument_list|,
name|model
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Unknown action "
operator|+
name|action
argument_list|)
throw|;
block|}
block|}
DECL|method|retrieveStats (Message in, Class<?> model, String tableName)
specifier|private
name|void
name|retrieveStats
parameter_list|(
name|Message
name|in
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
name|model
parameter_list|,
name|String
name|tableName
parameter_list|)
throws|throws
name|Exception
block|{
name|setBody
argument_list|(
name|in
argument_list|,
name|model
argument_list|,
name|client
operator|.
name|retrieveStats
argument_list|(
name|tableName
argument_list|,
name|in
operator|.
name|getHeader
argument_list|(
name|ServiceNowConstants
operator|.
name|SYSPARM_QUERY
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|in
operator|.
name|getHeader
argument_list|(
name|ServiceNowConstants
operator|.
name|SYSPARM_AVG_FIELDS
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|in
operator|.
name|getHeader
argument_list|(
name|ServiceNowConstants
operator|.
name|SYSPARM_COUNT
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|in
operator|.
name|getHeader
argument_list|(
name|ServiceNowConstants
operator|.
name|SYSPARM_MIN_FIELDS
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|in
operator|.
name|getHeader
argument_list|(
name|ServiceNowConstants
operator|.
name|SYSPARM_MAX_FIELDS
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|in
operator|.
name|getHeader
argument_list|(
name|ServiceNowConstants
operator|.
name|SYSPARM_SUM_FIELDS
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|in
operator|.
name|getHeader
argument_list|(
name|ServiceNowConstants
operator|.
name|SYSPARM_GROUP_BY
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|in
operator|.
name|getHeader
argument_list|(
name|ServiceNowConstants
operator|.
name|SYSPARM_ORDER_BY
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|in
operator|.
name|getHeader
argument_list|(
name|ServiceNowConstants
operator|.
name|SYSPARM_HAVING
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|in
operator|.
name|getHeader
argument_list|(
name|ServiceNowConstants
operator|.
name|SYSPARM_DISPLAY_VALUE
argument_list|,
name|config
operator|.
name|getDisplayValue
argument_list|()
argument_list|,
name|String
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

