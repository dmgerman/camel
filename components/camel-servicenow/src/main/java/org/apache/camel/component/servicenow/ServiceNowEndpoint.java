begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.servicenow
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|servicenow
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|jaxrs
operator|.
name|json
operator|.
name|JacksonJsonProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Consumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Producer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|servicenow
operator|.
name|auth
operator|.
name|AuthenticationRequestFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|servicenow
operator|.
name|auth
operator|.
name|OAuthToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriPath
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|client
operator|.
name|JAXRSClientFactory
import|;
end_import

begin_comment
comment|/**  * Represents a ServiceNow endpoint.  */
end_comment

begin_class
annotation|@
name|UriEndpoint
argument_list|(
name|scheme
operator|=
literal|"servicenow"
argument_list|,
name|title
operator|=
literal|"ServiceNow"
argument_list|,
name|syntax
operator|=
literal|"servicenow:instanceName"
argument_list|,
name|consumerClass
operator|=
name|ServiceNowConsumer
operator|.
name|class
argument_list|,
name|label
operator|=
literal|"api,cloud,management"
argument_list|)
DECL|class|ServiceNowEndpoint
specifier|public
class|class
name|ServiceNowEndpoint
extends|extends
name|DefaultEndpoint
block|{
annotation|@
name|UriPath
argument_list|(
name|description
operator|=
literal|"The ServiceNow instance name "
argument_list|)
annotation|@
name|Metadata
argument_list|(
name|required
operator|=
literal|"true"
argument_list|)
DECL|field|instanceName
specifier|private
specifier|final
name|String
name|instanceName
decl_stmt|;
DECL|field|configuration
specifier|private
specifier|final
name|ServiceNowConfiguration
name|configuration
decl_stmt|;
DECL|field|apiUrl
specifier|private
specifier|final
name|String
name|apiUrl
decl_stmt|;
DECL|field|oauthUrl
specifier|private
specifier|final
name|String
name|oauthUrl
decl_stmt|;
DECL|field|token
specifier|private
specifier|final
name|OAuthToken
name|token
decl_stmt|;
DECL|method|ServiceNowEndpoint (String uri, ServiceNowComponent component, ServiceNowConfiguration configuration, String instanceName)
specifier|public
name|ServiceNowEndpoint
parameter_list|(
name|String
name|uri
parameter_list|,
name|ServiceNowComponent
name|component
parameter_list|,
name|ServiceNowConfiguration
name|configuration
parameter_list|,
name|String
name|instanceName
parameter_list|)
throws|throws
name|Exception
block|{
name|super
argument_list|(
name|uri
argument_list|,
name|component
argument_list|)
expr_stmt|;
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
name|this
operator|.
name|instanceName
operator|=
name|component
operator|.
name|getCamelContext
argument_list|()
operator|.
name|resolvePropertyPlaceholders
argument_list|(
name|instanceName
argument_list|)
expr_stmt|;
name|this
operator|.
name|apiUrl
operator|=
name|configuration
operator|.
name|hasApiUrl
argument_list|()
condition|?
name|configuration
operator|.
name|getApiUrl
argument_list|()
else|:
name|String
operator|.
name|format
argument_list|(
literal|"https://%s.service-now.com/api/now"
argument_list|,
name|instanceName
argument_list|)
expr_stmt|;
name|this
operator|.
name|oauthUrl
operator|=
name|configuration
operator|.
name|hasOautTokenUrl
argument_list|()
condition|?
name|configuration
operator|.
name|getOauthTokenUrl
argument_list|()
else|:
name|String
operator|.
name|format
argument_list|(
literal|"https://%s.service-now.com/oauth_token.do"
argument_list|,
name|instanceName
argument_list|)
expr_stmt|;
name|this
operator|.
name|token
operator|=
name|configuration
operator|.
name|hasOAuthAuthentication
argument_list|()
condition|?
operator|new
name|OAuthToken
argument_list|(
name|this
operator|.
name|oauthUrl
argument_list|,
name|this
operator|.
name|configuration
argument_list|)
else|:
literal|null
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createProducer ()
specifier|public
name|Producer
name|createProducer
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|ServiceNowProducer
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|createConsumer (Processor processor)
specifier|public
name|Consumer
name|createConsumer
parameter_list|(
name|Processor
name|processor
parameter_list|)
throws|throws
name|Exception
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Consumer interface is not supported"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|isSingleton ()
specifier|public
name|boolean
name|isSingleton
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
DECL|method|getConfiguration ()
specifier|public
name|ServiceNowConfiguration
name|getConfiguration
parameter_list|()
block|{
return|return
name|configuration
return|;
block|}
DECL|method|getInstanceName ()
specifier|public
name|String
name|getInstanceName
parameter_list|()
block|{
return|return
name|instanceName
return|;
block|}
DECL|method|createClient (Class<T> type)
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|createClient
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|type
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|JAXRSClientFactory
operator|.
name|create
argument_list|(
name|apiUrl
argument_list|,
name|type
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|AuthenticationRequestFilter
argument_list|(
name|configuration
argument_list|,
name|token
argument_list|)
argument_list|,
operator|new
name|JacksonJsonProvider
argument_list|(
name|configuration
operator|.
name|getMapper
argument_list|()
argument_list|)
argument_list|,
operator|new
name|ServiceNowExceptionMapper
argument_list|(
name|configuration
operator|.
name|getMapper
argument_list|()
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

