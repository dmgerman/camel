begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.servicenow
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|servicenow
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelException
import|;
end_import

begin_class
DECL|class|ServiceNowException
specifier|public
class|class
name|ServiceNowException
extends|extends
name|CamelException
block|{
DECL|field|code
specifier|private
specifier|final
name|Integer
name|code
decl_stmt|;
DECL|field|status
specifier|private
specifier|final
name|String
name|status
decl_stmt|;
DECL|field|detail
specifier|private
specifier|final
name|String
name|detail
decl_stmt|;
DECL|field|attributes
specifier|private
specifier|final
name|Map
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|attributes
decl_stmt|;
DECL|method|ServiceNowException (Integer code, String status, String message, String detail)
specifier|public
name|ServiceNowException
parameter_list|(
name|Integer
name|code
parameter_list|,
name|String
name|status
parameter_list|,
name|String
name|message
parameter_list|,
name|String
name|detail
parameter_list|)
block|{
name|super
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|this
operator|.
name|code
operator|=
name|code
expr_stmt|;
name|this
operator|.
name|status
operator|=
name|status
expr_stmt|;
name|this
operator|.
name|detail
operator|=
name|detail
expr_stmt|;
name|this
operator|.
name|attributes
operator|=
name|Collections
operator|.
name|emptyMap
argument_list|()
expr_stmt|;
block|}
DECL|method|ServiceNowException (Integer code, Map<Object, Object> attributes)
specifier|public
name|ServiceNowException
parameter_list|(
name|Integer
name|code
parameter_list|,
name|Map
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|attributes
parameter_list|)
block|{
name|super
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"Status (%d)"
argument_list|,
name|code
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|code
operator|=
name|code
expr_stmt|;
name|this
operator|.
name|status
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|detail
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|attributes
operator|=
name|Collections
operator|.
name|unmodifiableMap
argument_list|(
name|attributes
argument_list|)
expr_stmt|;
block|}
DECL|method|getCode ()
specifier|public
name|Integer
name|getCode
parameter_list|()
block|{
return|return
name|code
return|;
block|}
DECL|method|getStatus ()
specifier|public
name|String
name|getStatus
parameter_list|()
block|{
return|return
name|status
return|;
block|}
DECL|method|getDetail ()
specifier|public
name|String
name|getDetail
parameter_list|()
block|{
return|return
name|detail
return|;
block|}
DECL|method|getAttributes ()
specifier|public
name|Map
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|getAttributes
parameter_list|()
block|{
return|return
name|attributes
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getMessage
argument_list|()
operator|!=
literal|null
condition|?
literal|""
operator|+
name|this
operator|.
name|status
operator|+
literal|": "
operator|+
name|getMessage
argument_list|()
else|:
name|super
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

