begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.servicenow.model
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|servicenow
operator|.
name|model
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonCreator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonProperty
import|;
end_import

begin_class
DECL|class|DictionaryEntry
specifier|public
class|class
name|DictionaryEntry
block|{
DECL|field|internalType
specifier|private
specifier|final
name|Reference
name|internalType
decl_stmt|;
DECL|field|reference
specifier|private
specifier|final
name|Reference
name|reference
decl_stmt|;
DECL|field|maxLength
specifier|private
specifier|final
name|Integer
name|maxLength
decl_stmt|;
DECL|field|mandatory
specifier|private
specifier|final
name|boolean
name|mandatory
decl_stmt|;
annotation|@
name|JsonCreator
DECL|method|DictionaryEntry ( @sonPropertyvalue = R) Reference internalType, @JsonProperty(value = R) Reference reference, @JsonProperty(value = R) Integer maxLength, @JsonProperty(value = R, defaultValue = R) boolean mandatory)
specifier|public
name|DictionaryEntry
parameter_list|(
annotation|@
name|JsonProperty
argument_list|(
name|value
operator|=
literal|"internal_type"
argument_list|)
name|Reference
name|internalType
parameter_list|,
annotation|@
name|JsonProperty
argument_list|(
name|value
operator|=
literal|"reference"
argument_list|)
name|Reference
name|reference
parameter_list|,
annotation|@
name|JsonProperty
argument_list|(
name|value
operator|=
literal|"max_length"
argument_list|)
name|Integer
name|maxLength
parameter_list|,
annotation|@
name|JsonProperty
argument_list|(
name|value
operator|=
literal|"mandatory"
argument_list|,
name|defaultValue
operator|=
literal|"false"
argument_list|)
name|boolean
name|mandatory
parameter_list|)
block|{
name|this
operator|.
name|internalType
operator|=
name|internalType
expr_stmt|;
name|this
operator|.
name|reference
operator|=
name|reference
expr_stmt|;
name|this
operator|.
name|maxLength
operator|=
name|maxLength
expr_stmt|;
name|this
operator|.
name|mandatory
operator|=
name|mandatory
expr_stmt|;
block|}
DECL|method|getInternalType ()
specifier|public
name|Reference
name|getInternalType
parameter_list|()
block|{
return|return
name|internalType
return|;
block|}
DECL|method|getReference ()
specifier|public
name|Reference
name|getReference
parameter_list|()
block|{
return|return
name|reference
return|;
block|}
DECL|method|getMaxLength ()
specifier|public
name|Integer
name|getMaxLength
parameter_list|()
block|{
return|return
name|maxLength
return|;
block|}
DECL|method|isMandatory ()
specifier|public
name|boolean
name|isMandatory
parameter_list|()
block|{
return|return
name|mandatory
return|;
block|}
block|}
end_class

end_unit

