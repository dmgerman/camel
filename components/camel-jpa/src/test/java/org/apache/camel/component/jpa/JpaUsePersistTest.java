begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jpa
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jpa
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|examples
operator|.
name|Address
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|examples
operator|.
name|Customer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * @version   */
end_comment

begin_class
DECL|class|JpaUsePersistTest
specifier|public
class|class
name|JpaUsePersistTest
extends|extends
name|AbstractJpaMethodTest
block|{
DECL|method|usePersist ()
specifier|public
name|boolean
name|usePersist
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Test
DECL|method|produceExistingEntityShouldThrowAnException ()
specifier|public
name|void
name|produceExistingEntityShouldThrowAnException
parameter_list|()
throws|throws
name|Exception
block|{
name|setUp
argument_list|(
literal|"jpa://"
operator|+
name|Customer
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|"?usePersist=true"
argument_list|)
expr_stmt|;
name|Customer
name|customer
init|=
name|createDefaultCustomer
argument_list|()
decl_stmt|;
name|save
argument_list|(
name|customer
argument_list|)
expr_stmt|;
name|long
name|id
init|=
name|customer
operator|.
name|getId
argument_list|()
decl_stmt|;
comment|// and adjust some values
name|customer
operator|=
name|createDefaultCustomer
argument_list|()
expr_stmt|;
name|customer
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|customer
operator|.
name|setName
argument_list|(
literal|"Max Mustermann"
argument_list|)
expr_stmt|;
name|customer
operator|.
name|getAddress
argument_list|()
operator|.
name|setAddressLine1
argument_list|(
literal|"Musterstr. 1"
argument_list|)
expr_stmt|;
name|customer
operator|.
name|getAddress
argument_list|()
operator|.
name|setAddressLine2
argument_list|(
literal|"11111 Enterhausen"
argument_list|)
expr_stmt|;
try|try
block|{
comment|// we cannot store the 2nd customer as its using the same id as the 1st
name|template
operator|.
name|requestBody
argument_list|(
name|endpoint
argument_list|,
name|customer
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should throw exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// expected
block|}
name|assertEntitiesInDatabase
argument_list|(
literal|1
argument_list|,
name|Customer
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEntitiesInDatabase
argument_list|(
literal|1
argument_list|,
name|Address
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

