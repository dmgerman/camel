begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jpa
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jpa
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|EntityManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|EntityManagerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|orm
operator|.
name|jpa
operator|.
name|SharedEntityManagerCreator
import|;
end_import

begin_comment
comment|/**  * Helper for JPA.  */
end_comment

begin_class
DECL|class|JpaHelper
specifier|public
specifier|final
class|class
name|JpaHelper
block|{
DECL|method|JpaHelper ()
specifier|private
name|JpaHelper
parameter_list|()
block|{     }
comment|/**      * Gets or creates an {@link javax.persistence.EntityManager} to use.      *      * @param exchange                 the current exchange, or<tt>null</tt> if no exchange      * @param entityManagerFactory     the entity manager factory (mandatory)      * @param usePassedInEntityManager whether to use an existing {@link javax.persistence.EntityManager} which has been stored      *                                 on the exchange in the header with key {@link org.apache.camel.component.jpa.JpaConstants#ENTITY_MANAGER}      * @param useSharedEntityManager   whether to use SharedEntityManagerCreator if not already passed in                                   * @return the entity manager (is never null)      */
DECL|method|getTargetEntityManager (Exchange exchange, EntityManagerFactory entityManagerFactory, boolean usePassedInEntityManager, boolean useSharedEntityManager)
specifier|public
specifier|static
name|EntityManager
name|getTargetEntityManager
parameter_list|(
name|Exchange
name|exchange
parameter_list|,
name|EntityManagerFactory
name|entityManagerFactory
parameter_list|,
name|boolean
name|usePassedInEntityManager
parameter_list|,
name|boolean
name|useSharedEntityManager
parameter_list|)
block|{
name|EntityManager
name|em
init|=
literal|null
decl_stmt|;
comment|// favor using entity manager provided as a header from the end user
if|if
condition|(
name|exchange
operator|!=
literal|null
operator|&&
name|usePassedInEntityManager
condition|)
block|{
name|em
operator|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|JpaConstants
operator|.
name|ENTITY_MANAGER
argument_list|,
name|EntityManager
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
comment|// then try reuse any entity manager which has been previously created and stored on the exchange
if|if
condition|(
name|em
operator|==
literal|null
operator|&&
name|exchange
operator|!=
literal|null
condition|)
block|{
name|em
operator|=
name|exchange
operator|.
name|getProperty
argument_list|(
name|JpaConstants
operator|.
name|ENTITY_MANAGER
argument_list|,
name|EntityManager
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|em
operator|==
literal|null
operator|&&
name|useSharedEntityManager
condition|)
block|{
name|em
operator|=
name|SharedEntityManagerCreator
operator|.
name|createSharedEntityManager
argument_list|(
name|entityManagerFactory
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|em
operator|==
literal|null
condition|)
block|{
comment|// create a new entity manager
name|em
operator|=
name|entityManagerFactory
operator|.
name|createEntityManager
argument_list|()
expr_stmt|;
if|if
condition|(
name|exchange
operator|!=
literal|null
condition|)
block|{
comment|// we want to reuse the EM so store as property and make sure we close it when done with the exchange
name|exchange
operator|.
name|setProperty
argument_list|(
name|JpaConstants
operator|.
name|ENTITY_MANAGER
argument_list|,
name|em
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|addOnCompletion
argument_list|(
operator|new
name|JpaCloseEntityManagerOnCompletion
argument_list|(
name|em
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|em
return|;
block|}
block|}
end_class

end_unit

