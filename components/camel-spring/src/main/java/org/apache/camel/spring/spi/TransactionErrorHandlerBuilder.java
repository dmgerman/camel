begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.spring.spi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|spi
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|ErrorHandlerBuilderSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|DelayPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|ErrorHandlerSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|exceptionpolicy
operator|.
name|ExceptionPolicyStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|RouteContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|InitializingBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|transaction
operator|.
name|support
operator|.
name|TransactionTemplate
import|;
end_import

begin_comment
comment|/**  * An error handler which will roll the exception back if there is an error  * rather than using the dead letter channel and retry logic.  *  * A delay is also used after a rollback  *  * @version $Revision$  */
end_comment

begin_class
DECL|class|TransactionErrorHandlerBuilder
specifier|public
class|class
name|TransactionErrorHandlerBuilder
extends|extends
name|ErrorHandlerBuilderSupport
implements|implements
name|InitializingBean
block|{
DECL|field|transactionTemplate
specifier|private
name|TransactionTemplate
name|transactionTemplate
decl_stmt|;
DECL|field|exceptionPolicyStrategy
specifier|private
name|ExceptionPolicyStrategy
name|exceptionPolicyStrategy
init|=
name|ErrorHandlerSupport
operator|.
name|createDefaultExceptionPolicyStrategy
argument_list|()
decl_stmt|;
DECL|method|TransactionErrorHandlerBuilder ()
specifier|public
name|TransactionErrorHandlerBuilder
parameter_list|()
block|{     }
DECL|method|getTransactionTemplate ()
specifier|public
name|TransactionTemplate
name|getTransactionTemplate
parameter_list|()
block|{
return|return
name|transactionTemplate
return|;
block|}
DECL|method|createErrorHandler (RouteContext routeContext, Processor processor)
specifier|public
name|Processor
name|createErrorHandler
parameter_list|(
name|RouteContext
name|routeContext
parameter_list|,
name|Processor
name|processor
parameter_list|)
throws|throws
name|Exception
block|{
name|TransactionErrorHandler
name|answer
init|=
operator|new
name|TransactionErrorHandler
argument_list|(
name|transactionTemplate
argument_list|,
name|processor
argument_list|,
name|exceptionPolicyStrategy
argument_list|)
decl_stmt|;
name|configure
argument_list|(
name|answer
argument_list|)
expr_stmt|;
return|return
name|answer
return|;
block|}
DECL|method|afterPropertiesSet ()
specifier|public
name|void
name|afterPropertiesSet
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectHelper
operator|.
name|notNull
argument_list|(
name|transactionTemplate
argument_list|,
literal|"transactionTemplate"
argument_list|)
expr_stmt|;
block|}
DECL|method|setTransactionTemplate (TransactionTemplate transactionTemplate)
specifier|public
name|void
name|setTransactionTemplate
parameter_list|(
name|TransactionTemplate
name|transactionTemplate
parameter_list|)
block|{
name|this
operator|.
name|transactionTemplate
operator|=
name|transactionTemplate
expr_stmt|;
block|}
DECL|method|setSpringTransactionPolicy (SpringTransactionPolicy policy)
specifier|public
name|void
name|setSpringTransactionPolicy
parameter_list|(
name|SpringTransactionPolicy
name|policy
parameter_list|)
block|{
name|this
operator|.
name|transactionTemplate
operator|=
name|policy
operator|.
name|getTransactionTemplate
argument_list|()
expr_stmt|;
block|}
comment|/**      * Sets the exception policy strategy to use for resolving the {@link org.apache.camel.model.OnExceptionDefinition}      * to use for a given thrown exception      */
DECL|method|getExceptionPolicyStrategy ()
specifier|public
name|ExceptionPolicyStrategy
name|getExceptionPolicyStrategy
parameter_list|()
block|{
return|return
name|exceptionPolicyStrategy
return|;
block|}
DECL|method|setExceptionPolicyStrategy (ExceptionPolicyStrategy exceptionPolicyStrategy)
specifier|public
name|void
name|setExceptionPolicyStrategy
parameter_list|(
name|ExceptionPolicyStrategy
name|exceptionPolicyStrategy
parameter_list|)
block|{
name|this
operator|.
name|exceptionPolicyStrategy
operator|=
name|exceptionPolicyStrategy
expr_stmt|;
block|}
comment|// Builder methods
comment|// -------------------------------------------------------------------------
comment|/**      * Sets the exception policy to use      */
DECL|method|exceptionPolicyStrategy (ExceptionPolicyStrategy exceptionPolicyStrategy)
specifier|public
name|TransactionErrorHandlerBuilder
name|exceptionPolicyStrategy
parameter_list|(
name|ExceptionPolicyStrategy
name|exceptionPolicyStrategy
parameter_list|)
block|{
name|setExceptionPolicyStrategy
argument_list|(
name|exceptionPolicyStrategy
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
end_class

end_unit

