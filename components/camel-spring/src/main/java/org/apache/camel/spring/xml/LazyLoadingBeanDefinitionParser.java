begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.spring.xml
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|xml
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_comment
comment|/**  * A {@link BeanDefinitionParser} which lazy loads the type on which it creates to allow the schema to be loosly coupled  * with the camel jars.  *  * @version $Revision: 1.1 $  */
end_comment

begin_class
DECL|class|LazyLoadingBeanDefinitionParser
specifier|public
class|class
name|LazyLoadingBeanDefinitionParser
extends|extends
name|BeanDefinitionParser
block|{
DECL|field|className
specifier|private
name|String
name|className
decl_stmt|;
DECL|field|moduleName
specifier|private
name|String
name|moduleName
decl_stmt|;
DECL|method|LazyLoadingBeanDefinitionParser (String className, String moduleName)
specifier|public
name|LazyLoadingBeanDefinitionParser
parameter_list|(
name|String
name|className
parameter_list|,
name|String
name|moduleName
parameter_list|)
block|{
name|this
operator|.
name|className
operator|=
name|className
expr_stmt|;
name|this
operator|.
name|moduleName
operator|=
name|moduleName
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|loadType ()
specifier|protected
name|Class
name|loadType
parameter_list|()
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|answer
init|=
name|ObjectHelper
operator|.
name|loadClass
argument_list|(
name|className
argument_list|,
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|answer
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Class: "
operator|+
name|className
operator|+
literal|" could not be found. You need to add Camel module: "
operator|+
name|moduleName
operator|+
literal|" to your classpath"
argument_list|)
throw|;
block|}
return|return
name|answer
return|;
block|}
block|}
end_class

end_unit

