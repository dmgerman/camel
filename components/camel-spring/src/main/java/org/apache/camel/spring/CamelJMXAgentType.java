begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.spring
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|IdentifiedType
import|;
end_import

begin_comment
comment|/**  * The JAXB type class for the configuration of jmxAgent  * @author Willem Jiang  *  * @version $Revision$  */
end_comment

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"jmxAgent"
argument_list|)
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|CamelJMXAgentType
specifier|public
class|class
name|CamelJMXAgentType
extends|extends
name|IdentifiedType
block|{
annotation|@
name|XmlAttribute
argument_list|(
name|required
operator|=
literal|false
argument_list|)
DECL|field|connectorPort
specifier|private
name|Integer
name|connectorPort
decl_stmt|;
annotation|@
name|XmlAttribute
argument_list|(
name|required
operator|=
literal|false
argument_list|)
DECL|field|jmxDomainName
specifier|private
name|String
name|jmxDomainName
decl_stmt|;
annotation|@
name|XmlAttribute
argument_list|(
name|required
operator|=
literal|false
argument_list|)
DECL|field|connectorPath
specifier|private
name|String
name|connectorPath
decl_stmt|;
annotation|@
name|XmlAttribute
argument_list|(
name|required
operator|=
literal|false
argument_list|)
DECL|field|createConnector
specifier|private
name|Boolean
name|createConnector
decl_stmt|;
annotation|@
name|XmlAttribute
argument_list|(
name|required
operator|=
literal|false
argument_list|)
DECL|field|usePlatformMBeanServer
specifier|private
name|Boolean
name|usePlatformMBeanServer
decl_stmt|;
DECL|method|setConnectorPort (Integer port)
specifier|public
name|void
name|setConnectorPort
parameter_list|(
name|Integer
name|port
parameter_list|)
block|{
name|connectorPort
operator|=
name|port
expr_stmt|;
block|}
DECL|method|getConnectorPort ()
specifier|public
name|Integer
name|getConnectorPort
parameter_list|()
block|{
return|return
name|connectorPort
return|;
block|}
DECL|method|setJmxDomainName (String name)
specifier|public
name|void
name|setJmxDomainName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|jmxDomainName
operator|=
name|name
expr_stmt|;
block|}
DECL|method|getJmxDomainName ()
specifier|public
name|String
name|getJmxDomainName
parameter_list|()
block|{
return|return
name|jmxDomainName
return|;
block|}
DECL|method|setConnectorPath (String path)
specifier|public
name|void
name|setConnectorPath
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|connectorPath
operator|=
name|path
expr_stmt|;
block|}
DECL|method|getConnectorPath ()
specifier|public
name|String
name|getConnectorPath
parameter_list|()
block|{
return|return
name|connectorPath
return|;
block|}
DECL|method|setCreateConnector (Boolean flag)
specifier|public
name|void
name|setCreateConnector
parameter_list|(
name|Boolean
name|flag
parameter_list|)
block|{
name|createConnector
operator|=
name|flag
expr_stmt|;
block|}
DECL|method|isCreateConnector ()
specifier|public
name|Boolean
name|isCreateConnector
parameter_list|()
block|{
return|return
name|createConnector
return|;
block|}
DECL|method|setUsePlatformMBeanServer (Boolean flag)
specifier|public
name|void
name|setUsePlatformMBeanServer
parameter_list|(
name|Boolean
name|flag
parameter_list|)
block|{
name|usePlatformMBeanServer
operator|=
name|flag
expr_stmt|;
block|}
DECL|method|isUsePlatformMBeanServer ()
specifier|public
name|Boolean
name|isUsePlatformMBeanServer
parameter_list|()
block|{
return|return
name|usePlatformMBeanServer
return|;
block|}
block|}
end_class

end_unit

