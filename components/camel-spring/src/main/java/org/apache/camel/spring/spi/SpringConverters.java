begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.spring.spi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|spi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|aopalliance
operator|.
name|intercept
operator|.
name|MethodInvocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Converter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|bean
operator|.
name|BeanInvocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|ByteArrayResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|FileSystemResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|core
operator|.
name|io
operator|.
name|UrlResource
import|;
end_import

begin_comment
comment|/**  * Some Spring based  *<a href="http://activemq.apache.org/camel/type-converter.html">Type Converters</a>  *  * @version $Revision$  */
end_comment

begin_class
annotation|@
name|Converter
DECL|class|SpringConverters
specifier|public
specifier|final
class|class
name|SpringConverters
block|{
DECL|method|SpringConverters ()
specifier|private
name|SpringConverters
parameter_list|()
block|{             }
annotation|@
name|Converter
DECL|method|toInputStream (Resource resource)
specifier|public
specifier|static
name|InputStream
name|toInputStream
parameter_list|(
name|Resource
name|resource
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|resource
operator|.
name|getInputStream
argument_list|()
return|;
block|}
annotation|@
name|Converter
DECL|method|toFile (Resource resource)
specifier|public
specifier|static
name|File
name|toFile
parameter_list|(
name|Resource
name|resource
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|resource
operator|.
name|getFile
argument_list|()
return|;
block|}
annotation|@
name|Converter
DECL|method|toUrl (Resource resource)
specifier|public
specifier|static
name|URL
name|toUrl
parameter_list|(
name|Resource
name|resource
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|resource
operator|.
name|getURL
argument_list|()
return|;
block|}
annotation|@
name|Converter
DECL|method|toResource (String uri)
specifier|public
specifier|static
name|UrlResource
name|toResource
parameter_list|(
name|String
name|uri
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|UrlResource
argument_list|(
name|uri
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toResource (URL uri)
specifier|public
specifier|static
name|UrlResource
name|toResource
parameter_list|(
name|URL
name|uri
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|UrlResource
argument_list|(
name|uri
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toResource (File file)
specifier|public
specifier|static
name|FileSystemResource
name|toResource
parameter_list|(
name|File
name|file
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|FileSystemResource
argument_list|(
name|file
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toResource (byte[] data)
specifier|public
specifier|static
name|ByteArrayResource
name|toResource
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|ByteArrayResource
argument_list|(
name|data
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toBeanInvocation (MethodInvocation invocation)
specifier|public
specifier|static
name|BeanInvocation
name|toBeanInvocation
parameter_list|(
name|MethodInvocation
name|invocation
parameter_list|)
block|{
return|return
operator|new
name|BeanInvocation
argument_list|(
name|invocation
operator|.
name|getMethod
argument_list|()
argument_list|,
name|invocation
operator|.
name|getArguments
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

