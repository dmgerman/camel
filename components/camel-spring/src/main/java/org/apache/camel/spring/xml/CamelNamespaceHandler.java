begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.spring.xml
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|xml
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|xml
operator|.
name|XPathBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|CamelBeanPostProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|CamelContextFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|EndpointFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
operator|.
name|isNotNullAndNonEmpty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|config
operator|.
name|BeanDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|config
operator|.
name|RuntimeBeanReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|parsing
operator|.
name|BeanComponentDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|support
operator|.
name|BeanDefinitionBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|xml
operator|.
name|NamespaceHandlerSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|xml
operator|.
name|ParserContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|util
operator|.
name|xml
operator|.
name|DomUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_class
DECL|class|CamelNamespaceHandler
specifier|public
class|class
name|CamelNamespaceHandler
extends|extends
name|NamespaceHandlerSupport
block|{
DECL|field|routesParser
specifier|protected
name|CamelBeanDefinitionParser
name|routesParser
init|=
operator|new
name|CamelBeanDefinitionParser
argument_list|(
name|this
argument_list|)
decl_stmt|;
DECL|field|endpointParser
specifier|protected
name|BeanDefinitionParser
name|endpointParser
init|=
operator|new
name|BeanDefinitionParser
argument_list|(
name|EndpointFactoryBean
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|beanPostProcessorParser
specifier|protected
name|BeanDefinitionParser
name|beanPostProcessorParser
init|=
operator|new
name|BeanDefinitionParser
argument_list|(
name|CamelBeanPostProcessor
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|parserElementNames
specifier|protected
name|Set
argument_list|<
name|String
argument_list|>
name|parserElementNames
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
DECL|method|init ()
specifier|public
name|void
name|init
parameter_list|()
block|{
name|registerParser
argument_list|(
literal|"routes"
argument_list|,
name|routesParser
argument_list|)
expr_stmt|;
name|registerParser
argument_list|(
literal|"routeBuilder"
argument_list|,
name|routesParser
argument_list|)
expr_stmt|;
name|registerParser
argument_list|(
literal|"endpoint"
argument_list|,
name|endpointParser
argument_list|)
expr_stmt|;
name|registerParser
argument_list|(
literal|"camelContext"
argument_list|,
operator|new
name|BeanDefinitionParser
argument_list|(
name|CamelContextFactoryBean
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|void
name|doParse
parameter_list|(
name|Element
name|element
parameter_list|,
name|ParserContext
name|parserContext
parameter_list|,
name|BeanDefinitionBuilder
name|builder
parameter_list|)
block|{
name|super
operator|.
name|doParse
argument_list|(
name|element
argument_list|,
name|parserContext
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|String
name|contextId
init|=
name|element
operator|.
name|getAttribute
argument_list|(
literal|"id"
argument_list|)
decl_stmt|;
comment|// lets avoid folks having to explicitly give an ID to a camel context
if|if
condition|(
name|ObjectHelper
operator|.
name|isNullOrBlank
argument_list|(
name|contextId
argument_list|)
condition|)
block|{
name|contextId
operator|=
literal|"camelContext"
expr_stmt|;
name|element
operator|.
name|setAttribute
argument_list|(
literal|"id"
argument_list|,
name|contextId
argument_list|)
expr_stmt|;
block|}
name|Element
name|routes
init|=
name|element
operator|.
name|getOwnerDocument
argument_list|()
operator|.
name|createElement
argument_list|(
literal|"routes"
argument_list|)
decl_stmt|;
comment|// now lets move all the content there...
name|NodeList
name|list
init|=
name|element
operator|.
name|getChildNodes
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|size
init|=
name|list
operator|.
name|getLength
argument_list|()
init|,
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|Node
name|child
init|=
name|list
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|child
operator|instanceof
name|Element
condition|)
block|{
name|Element
name|childElement
init|=
operator|(
name|Element
operator|)
name|child
decl_stmt|;
if|if
condition|(
name|child
operator|.
name|getLocalName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"beanPostProcessor"
argument_list|)
condition|)
block|{
name|String
name|beanPostProcessorId
init|=
name|contextId
operator|+
literal|":beanPostProcessor"
decl_stmt|;
name|childElement
operator|.
name|setAttribute
argument_list|(
literal|"id"
argument_list|,
name|beanPostProcessorId
argument_list|)
expr_stmt|;
name|BeanDefinition
name|definition
init|=
name|beanPostProcessorParser
operator|.
name|parse
argument_list|(
name|childElement
argument_list|,
name|parserContext
argument_list|)
decl_stmt|;
name|definition
operator|.
name|getPropertyValues
argument_list|()
operator|.
name|addPropertyValue
argument_list|(
literal|"camelContext"
argument_list|,
operator|new
name|RuntimeBeanReference
argument_list|(
name|contextId
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|element
operator|.
name|removeChild
argument_list|(
name|child
argument_list|)
expr_stmt|;
name|routes
operator|.
name|appendChild
argument_list|(
name|child
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|String
name|routeId
init|=
name|contextId
operator|+
literal|":routes"
decl_stmt|;
name|routes
operator|.
name|setAttribute
argument_list|(
literal|"id"
argument_list|,
name|routeId
argument_list|)
expr_stmt|;
name|BeanDefinition
name|definition
init|=
name|routesParser
operator|.
name|parse
argument_list|(
name|routes
argument_list|,
name|parserContext
argument_list|)
decl_stmt|;
name|definition
operator|.
name|getPropertyValues
argument_list|()
operator|.
name|addPropertyValue
argument_list|(
literal|"context"
argument_list|,
operator|new
name|RuntimeBeanReference
argument_list|(
name|contextId
argument_list|)
argument_list|)
expr_stmt|;
name|parserContext
operator|.
name|registerComponent
argument_list|(
operator|new
name|BeanComponentDefinition
argument_list|(
name|definition
argument_list|,
name|routeId
argument_list|)
argument_list|)
expr_stmt|;
name|list
operator|=
name|routes
operator|.
name|getElementsByTagName
argument_list|(
literal|"endpoint"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|size
init|=
name|list
operator|.
name|getLength
argument_list|()
init|,
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|Element
name|node
init|=
operator|(
name|Element
operator|)
name|list
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|definition
operator|=
name|endpointParser
operator|.
name|parse
argument_list|(
name|node
argument_list|,
name|parserContext
argument_list|)
expr_stmt|;
name|String
name|id
init|=
name|node
operator|.
name|getAttribute
argument_list|(
literal|"id"
argument_list|)
decl_stmt|;
if|if
condition|(
name|isNotNullAndNonEmpty
argument_list|(
name|id
argument_list|)
condition|)
block|{
name|definition
operator|.
name|getPropertyValues
argument_list|()
operator|.
name|addPropertyValue
argument_list|(
literal|"context"
argument_list|,
operator|new
name|RuntimeBeanReference
argument_list|(
name|contextId
argument_list|)
argument_list|)
expr_stmt|;
comment|//definition.getPropertyValues().addPropertyValue("context", builder.getBeanDefinition());
name|parserContext
operator|.
name|registerComponent
argument_list|(
operator|new
name|BeanComponentDefinition
argument_list|(
name|definition
argument_list|,
name|id
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|registerParser
argument_list|(
literal|"xpath"
argument_list|,
operator|new
name|BeanDefinitionParser
argument_list|(
name|XPathBuilder
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|void
name|doParse
parameter_list|(
name|Element
name|element
parameter_list|,
name|ParserContext
name|parserContext
parameter_list|,
name|BeanDefinitionBuilder
name|builder
parameter_list|)
block|{
comment|// lets create a child context
name|String
name|xpath
init|=
name|DomUtils
operator|.
name|getTextValue
argument_list|(
name|element
argument_list|)
decl_stmt|;
name|builder
operator|.
name|addConstructorArg
argument_list|(
name|xpath
argument_list|)
expr_stmt|;
name|super
operator|.
name|doParse
argument_list|(
name|element
argument_list|,
name|parserContext
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addPropertyValue
argument_list|(
literal|"namespacesFromDom"
argument_list|,
name|element
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
comment|// scripting expressions
name|registerScriptParser
argument_list|(
literal|"script"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|registerScriptParser
argument_list|(
literal|"groovy"
argument_list|,
literal|"groovy"
argument_list|)
expr_stmt|;
name|registerScriptParser
argument_list|(
literal|"ruby"
argument_list|,
literal|"jruby"
argument_list|)
expr_stmt|;
name|registerScriptParser
argument_list|(
literal|"javaScript"
argument_list|,
literal|"js"
argument_list|)
expr_stmt|;
name|registerScriptParser
argument_list|(
literal|"python"
argument_list|,
literal|"python"
argument_list|)
expr_stmt|;
name|registerScriptParser
argument_list|(
literal|"php"
argument_list|,
literal|"php"
argument_list|)
expr_stmt|;
block|}
DECL|method|registerScriptParser (String elementName, String engineName)
specifier|protected
name|void
name|registerScriptParser
parameter_list|(
name|String
name|elementName
parameter_list|,
name|String
name|engineName
parameter_list|)
block|{
name|registerParser
argument_list|(
name|elementName
argument_list|,
operator|new
name|ScriptDefinitionParser
argument_list|(
name|engineName
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|registerParser (String name, org.springframework.beans.factory.xml.BeanDefinitionParser parser)
specifier|protected
name|void
name|registerParser
parameter_list|(
name|String
name|name
parameter_list|,
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|xml
operator|.
name|BeanDefinitionParser
name|parser
parameter_list|)
block|{
name|parserElementNames
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|registerBeanDefinitionParser
argument_list|(
name|name
argument_list|,
name|parser
argument_list|)
expr_stmt|;
block|}
DECL|method|getParserElementNames ()
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getParserElementNames
parameter_list|()
block|{
return|return
name|parserElementNames
return|;
block|}
block|}
end_class

end_unit

