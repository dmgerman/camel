begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.util.spring
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|spring
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|jsse
operator|.
name|BaseSSLContextParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|jsse
operator|.
name|ClientAuthentication
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|jsse
operator|.
name|SSLContextParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|ContextConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|test
operator|.
name|context
operator|.
name|junit4
operator|.
name|SpringJUnit4ClassRunner
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|SpringJUnit4ClassRunner
operator|.
name|class
argument_list|)
annotation|@
name|ContextConfiguration
DECL|class|SSLContextParametersFactoryBeanTest
specifier|public
class|class
name|SSLContextParametersFactoryBeanTest
block|{
annotation|@
name|Resource
DECL|field|scp
name|SSLContextParameters
name|scp
decl_stmt|;
annotation|@
name|Test
DECL|method|testKeyStoreParameters ()
specifier|public
name|void
name|testKeyStoreParameters
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"provider"
argument_list|,
name|scp
operator|.
name|getProvider
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"protocol"
argument_list|,
name|scp
operator|.
name|getSecureSocketProtocol
argument_list|()
argument_list|)
expr_stmt|;
name|validateBaseSSLContextParameters
argument_list|(
name|scp
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|scp
operator|.
name|getKeyManagers
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"keyPassword"
argument_list|,
name|scp
operator|.
name|getKeyManagers
argument_list|()
operator|.
name|getKeyPassword
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"provider"
argument_list|,
name|scp
operator|.
name|getKeyManagers
argument_list|()
operator|.
name|getProvider
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|scp
operator|.
name|getKeyManagers
argument_list|()
operator|.
name|getKeyStore
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|scp
operator|.
name|getKeyManagers
argument_list|()
operator|.
name|getKeyStore
argument_list|()
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|scp
operator|.
name|getTrustManagers
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"provider"
argument_list|,
name|scp
operator|.
name|getTrustManagers
argument_list|()
operator|.
name|getProvider
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|scp
operator|.
name|getTrustManagers
argument_list|()
operator|.
name|getKeyStore
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type"
argument_list|,
name|scp
operator|.
name|getTrustManagers
argument_list|()
operator|.
name|getKeyStore
argument_list|()
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|scp
operator|.
name|getSecureRandom
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"provider"
argument_list|,
name|scp
operator|.
name|getSecureRandom
argument_list|()
operator|.
name|getProvider
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"algorithm"
argument_list|,
name|scp
operator|.
name|getSecureRandom
argument_list|()
operator|.
name|getAlgorithm
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|scp
operator|.
name|getClientParameters
argument_list|()
argument_list|)
expr_stmt|;
name|validateBaseSSLContextParameters
argument_list|(
name|scp
operator|.
name|getClientParameters
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|scp
operator|.
name|getServerParameters
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ClientAuthentication
operator|.
name|WANT
argument_list|,
name|scp
operator|.
name|getServerParameters
argument_list|()
operator|.
name|getClientAuthentication
argument_list|()
argument_list|)
expr_stmt|;
name|validateBaseSSLContextParameters
argument_list|(
name|scp
operator|.
name|getServerParameters
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|validateBaseSSLContextParameters (BaseSSLContextParameters params)
specifier|private
name|void
name|validateBaseSSLContextParameters
parameter_list|(
name|BaseSSLContextParameters
name|params
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|params
operator|.
name|getSessionTimeout
argument_list|()
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|params
operator|.
name|getCipherSuites
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|params
operator|.
name|getCipherSuites
argument_list|()
operator|.
name|getCipherSuite
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|params
operator|.
name|getCipherSuitesFilter
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|params
operator|.
name|getCipherSuitesFilter
argument_list|()
operator|.
name|getInclude
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|params
operator|.
name|getCipherSuitesFilter
argument_list|()
operator|.
name|getExclude
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|params
operator|.
name|getSecureSocketProtocols
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|params
operator|.
name|getSecureSocketProtocols
argument_list|()
operator|.
name|getSecureSocketProtocol
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|params
operator|.
name|getSecureSocketProtocolsFilter
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|params
operator|.
name|getSecureSocketProtocolsFilter
argument_list|()
operator|.
name|getInclude
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|params
operator|.
name|getSecureSocketProtocolsFilter
argument_list|()
operator|.
name|getExclude
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

