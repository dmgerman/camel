begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.kudu
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|kudu
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|KuduComponentConfigurationTest
specifier|public
class|class
name|KuduComponentConfigurationTest
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Test
DECL|method|createEndpoint ()
specifier|public
name|void
name|createEndpoint
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|host
init|=
literal|"localhost"
decl_stmt|;
name|String
name|port
init|=
literal|"7051"
decl_stmt|;
name|String
name|tableName
init|=
literal|"TableName"
decl_stmt|;
name|KuduOperations
name|operation
init|=
name|KuduOperations
operator|.
name|SCAN
decl_stmt|;
name|KuduComponent
name|component
init|=
operator|new
name|KuduComponent
argument_list|(
name|this
operator|.
name|context
argument_list|()
argument_list|)
decl_stmt|;
name|KuduEndpoint
name|endpoint
init|=
operator|(
name|KuduEndpoint
operator|)
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"kudu:"
operator|+
name|host
operator|+
literal|":"
operator|+
name|port
operator|+
literal|"/"
operator|+
name|tableName
operator|+
literal|"?operation="
operator|+
name|operation
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Host was not correctly detected. "
argument_list|,
name|host
argument_list|,
name|endpoint
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Port was not correctly detected. "
argument_list|,
name|port
argument_list|,
name|endpoint
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Table name was not correctly detected. "
argument_list|,
name|tableName
argument_list|,
name|endpoint
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Operation was not correctly detected. "
argument_list|,
name|operation
argument_list|,
name|endpoint
operator|.
name|getOperation
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|Exception
operator|.
name|class
argument_list|)
DECL|method|wrongUrl ()
specifier|public
name|void
name|wrongUrl
parameter_list|()
throws|throws
name|Exception
block|{
name|KuduComponent
name|component
init|=
operator|new
name|KuduComponent
argument_list|(
name|this
operator|.
name|context
argument_list|()
argument_list|)
decl_stmt|;
name|component
operator|.
name|createEndpoint
argument_list|(
literal|"wrong url"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

