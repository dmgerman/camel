begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.etcd
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|etcd
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeoutException
import|;
end_import

begin_import
import|import
name|mousio
operator|.
name|etcd4j
operator|.
name|EtcdClient
import|;
end_import

begin_import
import|import
name|mousio
operator|.
name|etcd4j
operator|.
name|requests
operator|.
name|EtcdKeyDeleteRequest
import|;
end_import

begin_import
import|import
name|mousio
operator|.
name|etcd4j
operator|.
name|requests
operator|.
name|EtcdKeyGetRequest
import|;
end_import

begin_import
import|import
name|mousio
operator|.
name|etcd4j
operator|.
name|requests
operator|.
name|EtcdKeyPutRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ExchangeTimedOutException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_class
DECL|class|EtcdKeysProducer
class|class
name|EtcdKeysProducer
extends|extends
name|AbstractEtcdProducer
block|{
DECL|field|configuration
specifier|private
specifier|final
name|EtcdKeysConfiguration
name|configuration
decl_stmt|;
DECL|field|defaultPath
specifier|private
specifier|final
name|String
name|defaultPath
decl_stmt|;
DECL|method|EtcdKeysProducer (EtcdKeysEndpoint endpoint, EtcdKeysConfiguration configuration, EtcdNamespace namespace, String path)
name|EtcdKeysProducer
parameter_list|(
name|EtcdKeysEndpoint
name|endpoint
parameter_list|,
name|EtcdKeysConfiguration
name|configuration
parameter_list|,
name|EtcdNamespace
name|namespace
parameter_list|,
name|String
name|path
parameter_list|)
block|{
name|super
argument_list|(
name|endpoint
argument_list|,
name|configuration
argument_list|,
name|namespace
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
name|this
operator|.
name|defaultPath
operator|=
name|endpoint
operator|.
name|getRemainingPath
argument_list|(
name|configuration
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|process (Exchange exchange)
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|action
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|EtcdConstants
operator|.
name|ETCD_ACTION
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|path
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
name|EtcdConstants
operator|.
name|ETCD_PATH
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|path
operator|==
literal|null
condition|)
block|{
name|path
operator|=
name|defaultPath
expr_stmt|;
block|}
name|ObjectHelper
operator|.
name|notEmpty
argument_list|(
name|path
argument_list|,
name|EtcdConstants
operator|.
name|ETCD_PATH
argument_list|)
expr_stmt|;
name|ObjectHelper
operator|.
name|notEmpty
argument_list|(
name|action
argument_list|,
name|EtcdConstants
operator|.
name|ETCD_ACTION
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|action
condition|)
block|{
case|case
name|EtcdConstants
operator|.
name|ETCD_KEYS_ACTION_SET
case|:
name|processSet
argument_list|(
name|getClient
argument_list|()
argument_list|,
name|path
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|EtcdConstants
operator|.
name|ETCD_KEYS_ACTION_GET
case|:
name|processGet
argument_list|(
name|getClient
argument_list|()
argument_list|,
name|path
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|EtcdConstants
operator|.
name|ETCD_KEYS_ACTION_DELETE
case|:
name|processDel
argument_list|(
name|getClient
argument_list|()
argument_list|,
name|path
argument_list|,
literal|false
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
break|break;
case|case
name|EtcdConstants
operator|.
name|ETCD_KEYS_ACTION_DELETE_DIR
case|:
name|processDel
argument_list|(
name|getClient
argument_list|()
argument_list|,
name|path
argument_list|,
literal|true
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Unknown action "
operator|+
name|action
argument_list|)
throw|;
block|}
block|}
comment|// *************************************************************************
comment|// Processors
comment|// *************************************************************************
DECL|method|processSet (EtcdClient client, String path, Exchange exchange)
specifier|private
name|void
name|processSet
parameter_list|(
name|EtcdClient
name|client
parameter_list|,
name|String
name|path
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|EtcdKeyPutRequest
name|request
init|=
name|client
operator|.
name|put
argument_list|(
name|path
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|configuration
operator|.
name|hasTimeToLive
argument_list|()
condition|)
block|{
name|request
operator|.
name|ttl
argument_list|(
name|configuration
operator|.
name|getTimeToLive
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|configuration
operator|.
name|hasTimeout
argument_list|()
condition|)
block|{
name|request
operator|.
name|timeout
argument_list|(
name|configuration
operator|.
name|getTimeout
argument_list|()
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|request
operator|.
name|send
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TimeoutException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ExchangeTimedOutException
argument_list|(
name|exchange
argument_list|,
name|configuration
operator|.
name|getTimeout
argument_list|()
argument_list|)
throw|;
block|}
block|}
DECL|method|processGet (EtcdClient client, String path, Exchange exchange)
specifier|private
name|void
name|processGet
parameter_list|(
name|EtcdClient
name|client
parameter_list|,
name|String
name|path
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|EtcdKeyGetRequest
name|request
init|=
name|client
operator|.
name|get
argument_list|(
name|path
argument_list|)
decl_stmt|;
if|if
condition|(
name|configuration
operator|.
name|hasTimeout
argument_list|()
condition|)
block|{
name|request
operator|.
name|timeout
argument_list|(
name|configuration
operator|.
name|getTimeout
argument_list|()
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|configuration
operator|.
name|isRecursive
argument_list|()
condition|)
block|{
name|request
operator|.
name|recursive
argument_list|()
expr_stmt|;
block|}
try|try
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|request
operator|.
name|send
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TimeoutException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ExchangeTimedOutException
argument_list|(
name|exchange
argument_list|,
name|configuration
operator|.
name|getTimeout
argument_list|()
argument_list|)
throw|;
block|}
block|}
DECL|method|processDel (EtcdClient client, String path, boolean dir, Exchange exchange)
specifier|private
name|void
name|processDel
parameter_list|(
name|EtcdClient
name|client
parameter_list|,
name|String
name|path
parameter_list|,
name|boolean
name|dir
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|EtcdKeyDeleteRequest
name|request
init|=
name|client
operator|.
name|delete
argument_list|(
name|path
argument_list|)
decl_stmt|;
if|if
condition|(
name|configuration
operator|.
name|hasTimeout
argument_list|()
condition|)
block|{
name|request
operator|.
name|timeout
argument_list|(
name|configuration
operator|.
name|getTimeout
argument_list|()
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|configuration
operator|.
name|isRecursive
argument_list|()
condition|)
block|{
name|request
operator|.
name|recursive
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|dir
condition|)
block|{
name|request
operator|.
name|dir
argument_list|()
expr_stmt|;
block|}
try|try
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|request
operator|.
name|send
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TimeoutException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ExchangeTimedOutException
argument_list|(
name|exchange
argument_list|,
name|configuration
operator|.
name|getTimeout
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

