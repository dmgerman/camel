begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.etcd.processor.remote
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|etcd
operator|.
name|processor
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|mousio
operator|.
name|etcd4j
operator|.
name|EtcdClient
import|;
end_import

begin_import
import|import
name|mousio
operator|.
name|etcd4j
operator|.
name|responses
operator|.
name|EtcdException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|etcd
operator|.
name|EtcdConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|etcd
operator|.
name|EtcdHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|etcd
operator|.
name|EtcdTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
annotation|@
name|Ignore
DECL|class|EtcdServiceCallServerListStrategyTest
specifier|public
class|class
name|EtcdServiceCallServerListStrategyTest
extends|extends
name|EtcdTestSupport
block|{
DECL|field|MAPPER
specifier|private
specifier|static
specifier|final
name|ObjectMapper
name|MAPPER
init|=
name|EtcdHelper
operator|.
name|createObjectMapper
argument_list|()
decl_stmt|;
DECL|field|CONFIGURATION
specifier|private
specifier|static
specifier|final
name|EtcdConfiguration
name|CONFIGURATION
init|=
operator|new
name|EtcdConfiguration
argument_list|(
literal|null
argument_list|)
decl_stmt|;
DECL|field|PORT
specifier|private
specifier|static
specifier|final
name|AtomicInteger
name|PORT
init|=
operator|new
name|AtomicInteger
argument_list|(
literal|0
argument_list|)
decl_stmt|;
DECL|field|client
specifier|private
name|EtcdClient
name|client
decl_stmt|;
annotation|@
name|Override
DECL|method|doPreSetup ()
specifier|public
name|void
name|doPreSetup
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|=
name|getClient
argument_list|()
expr_stmt|;
try|try
block|{
name|client
operator|.
name|deleteDir
argument_list|(
name|CONFIGURATION
operator|.
name|getServicePath
argument_list|()
argument_list|)
operator|.
name|recursive
argument_list|()
operator|.
name|send
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EtcdException
name|e
parameter_list|)
block|{
comment|// Ignore
block|}
block|}
annotation|@
name|Override
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|client
operator|.
name|deleteDir
argument_list|(
name|CONFIGURATION
operator|.
name|getServicePath
argument_list|()
argument_list|)
operator|.
name|recursive
argument_list|()
operator|.
name|send
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
name|client
operator|=
literal|null
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EtcdException
name|e
parameter_list|)
block|{
comment|// Ignore
block|}
block|}
annotation|@
name|Test
DECL|method|testOnDemandStrategy ()
specifier|public
name|void
name|testOnDemandStrategy
parameter_list|()
throws|throws
name|Exception
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
name|i
operator|++
control|)
block|{
name|addServer
argument_list|(
name|client
argument_list|,
literal|"serviceType-1"
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
block|{
name|addServer
argument_list|(
name|client
argument_list|,
literal|"serviceType-2"
argument_list|)
expr_stmt|;
block|}
name|EtcdServiceCallServerListStrategy
name|strategy
init|=
name|EtcdServiceCallServerListStrategies
operator|.
name|onDemand
argument_list|(
name|CONFIGURATION
argument_list|)
decl_stmt|;
name|strategy
operator|.
name|start
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|strategy
operator|.
name|getUpdatedListOfServers
argument_list|(
literal|"serviceType-1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|strategy
operator|.
name|getUpdatedListOfServers
argument_list|(
literal|"serviceType-2"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|strategy
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testWatchStrategy ()
specifier|public
name|void
name|testWatchStrategy
parameter_list|()
throws|throws
name|Exception
block|{
name|addServer
argument_list|(
name|client
argument_list|,
literal|"serviceType-3"
argument_list|)
expr_stmt|;
name|EtcdServiceCallServerListStrategy
name|strategy
init|=
name|EtcdServiceCallServerListStrategies
operator|.
name|watch
argument_list|(
name|CONFIGURATION
argument_list|)
decl_stmt|;
name|strategy
operator|.
name|start
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|strategy
operator|.
name|getUpdatedListOfServers
argument_list|(
literal|"serviceType-3"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|addServer
argument_list|(
name|client
argument_list|,
literal|"serviceType-3"
argument_list|)
expr_stmt|;
name|addServer
argument_list|(
name|client
argument_list|,
literal|"serviceType-3"
argument_list|)
expr_stmt|;
name|addServer
argument_list|(
name|client
argument_list|,
literal|"serviceType-4"
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|strategy
operator|.
name|getUpdatedListOfServers
argument_list|(
literal|"serviceType-3"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|strategy
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|method|addServer (EtcdClient client, String name)
specifier|private
name|void
name|addServer
parameter_list|(
name|EtcdClient
name|client
parameter_list|,
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
name|int
name|port
init|=
name|PORT
operator|.
name|incrementAndGet
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|server
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|server
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|server
operator|.
name|put
argument_list|(
literal|"address"
argument_list|,
literal|"127.0.0.1"
argument_list|)
expr_stmt|;
name|server
operator|.
name|put
argument_list|(
literal|"port"
argument_list|,
literal|8000
operator|+
name|port
argument_list|)
expr_stmt|;
name|client
operator|.
name|put
argument_list|(
name|CONFIGURATION
operator|.
name|getServicePath
argument_list|()
operator|+
literal|"service-"
operator|+
name|port
argument_list|,
name|MAPPER
operator|.
name|writeValueAsString
argument_list|(
name|server
argument_list|)
argument_list|)
operator|.
name|send
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

