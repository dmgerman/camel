begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.test.junit4
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|ExternalResource
import|;
end_import

begin_class
DECL|class|CamelTearDownRule
specifier|public
class|class
name|CamelTearDownRule
extends|extends
name|ExternalResource
block|{
DECL|field|testSupport
specifier|private
specifier|final
name|ThreadLocal
argument_list|<
name|CamelTestSupport
argument_list|>
name|testSupport
decl_stmt|;
DECL|method|CamelTearDownRule (ThreadLocal<CamelTestSupport> testSupport)
specifier|public
name|CamelTearDownRule
parameter_list|(
name|ThreadLocal
argument_list|<
name|CamelTestSupport
argument_list|>
name|testSupport
parameter_list|)
block|{
name|this
operator|.
name|testSupport
operator|=
name|testSupport
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|before ()
specifier|protected
name|void
name|before
parameter_list|()
throws|throws
name|Throwable
block|{
name|super
operator|.
name|before
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|after ()
specifier|protected
name|void
name|after
parameter_list|()
block|{
name|CamelTestSupport
name|support
init|=
name|testSupport
operator|.
name|get
argument_list|()
decl_stmt|;
if|if
condition|(
name|support
operator|!=
literal|null
operator|&&
name|support
operator|.
name|isCreateCamelContextPerClass
argument_list|()
condition|)
block|{
try|try
block|{
name|support
operator|.
name|tearDownCreateCamelContextPerClass
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
comment|// ignore
block|}
block|}
name|super
operator|.
name|after
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

