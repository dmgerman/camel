begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cometd
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cometd
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|cometd
operator|.
name|bayeux
operator|.
name|server
operator|.
name|BayeuxServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|cometd
operator|.
name|bayeux
operator|.
name|server
operator|.
name|ServerMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|cometd
operator|.
name|bayeux
operator|.
name|server
operator|.
name|ServerSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_class
annotation|@
name|Ignore
argument_list|(
literal|"Run this test manually"
argument_list|)
DECL|class|CometdProducerConsumerInteractiveExtensionMain
specifier|public
class|class
name|CometdProducerConsumerInteractiveExtensionMain
block|{
DECL|field|URI
specifier|private
specifier|static
specifier|final
name|String
name|URI
init|=
literal|"cometd://127.0.0.1:9091/channel/test?baseResource=file:./src/test/resources/webapp&"
operator|+
literal|"timeout=240000&interval=0&maxInterval=30000&multiFrameInterval=1500&jsonCommented=true&logLevel=2"
decl_stmt|;
DECL|field|URIS
specifier|private
specifier|static
specifier|final
name|String
name|URIS
init|=
literal|"cometds://127.0.0.1:9443/channel/test?baseResource=file:./src/test/resources/webapp&"
operator|+
literal|"timeout=240000&interval=0&maxInterval=30000&multiFrameInterval=1500&jsonCommented=true&logLevel=2"
decl_stmt|;
DECL|field|context
specifier|private
name|CamelContext
name|context
decl_stmt|;
DECL|field|pwd
specifier|private
name|String
name|pwd
init|=
literal|"changeit"
decl_stmt|;
DECL|method|main (String[] args)
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|CometdProducerConsumerInteractiveExtensionMain
name|me
init|=
operator|new
name|CometdProducerConsumerInteractiveExtensionMain
argument_list|()
decl_stmt|;
name|me
operator|.
name|testCometdProducerConsumerInteractive
argument_list|()
expr_stmt|;
block|}
DECL|method|testCometdProducerConsumerInteractive ()
specifier|public
name|void
name|testCometdProducerConsumerInteractive
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|=
operator|new
name|DefaultCamelContext
argument_list|()
expr_stmt|;
name|context
operator|.
name|addRoutes
argument_list|(
name|createRouteBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
DECL|method|createRouteBuilder ()
specifier|private
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|CometdComponent
name|component
init|=
operator|(
name|CometdComponent
operator|)
name|context
operator|.
name|getComponent
argument_list|(
literal|"cometds"
argument_list|)
decl_stmt|;
name|component
operator|.
name|setSslPassword
argument_list|(
name|pwd
argument_list|)
expr_stmt|;
name|component
operator|.
name|setSslKeyPassword
argument_list|(
name|pwd
argument_list|)
expr_stmt|;
name|CometdComponent
name|component2
init|=
operator|(
name|CometdComponent
operator|)
name|context
operator|.
name|getComponent
argument_list|(
literal|"cometd"
argument_list|)
decl_stmt|;
name|Censor
name|bayeuxAuthenticator
init|=
operator|new
name|Censor
argument_list|()
decl_stmt|;
name|component2
operator|.
name|addExtension
argument_list|(
name|bayeuxAuthenticator
argument_list|)
expr_stmt|;
name|File
name|file
init|=
operator|new
name|File
argument_list|(
literal|"./src/test/resources/jsse/localhost.ks"
argument_list|)
decl_stmt|;
name|URI
name|keyStoreUrl
init|=
name|file
operator|.
name|toURI
argument_list|()
decl_stmt|;
name|component
operator|.
name|setSslKeystore
argument_list|(
name|keyStoreUrl
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"stream:in"
argument_list|)
operator|.
name|to
argument_list|(
name|URI
argument_list|)
operator|.
name|to
argument_list|(
name|URIS
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
DECL|class|Censor
specifier|public
specifier|static
specifier|final
class|class
name|Censor
implements|implements
name|BayeuxServer
operator|.
name|Extension
implements|,
name|ServerSession
operator|.
name|RemoveListener
block|{
DECL|field|forbidden
specifier|private
name|HashSet
argument_list|<
name|String
argument_list|>
name|forbidden
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"one"
argument_list|,
literal|"two"
argument_list|)
argument_list|)
decl_stmt|;
DECL|method|removed (ServerSession session, boolean timeout)
specifier|public
name|void
name|removed
parameter_list|(
name|ServerSession
name|session
parameter_list|,
name|boolean
name|timeout
parameter_list|)
block|{
comment|// called on remove of client
block|}
DECL|method|rcv (ServerSession from, ServerMessage.Mutable message)
specifier|public
name|boolean
name|rcv
parameter_list|(
name|ServerSession
name|from
parameter_list|,
name|ServerMessage
operator|.
name|Mutable
name|message
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
DECL|method|rcvMeta (ServerSession from, ServerMessage.Mutable message)
specifier|public
name|boolean
name|rcvMeta
parameter_list|(
name|ServerSession
name|from
parameter_list|,
name|ServerMessage
operator|.
name|Mutable
name|message
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
DECL|method|send (ServerSession from, ServerSession to, ServerMessage.Mutable message)
specifier|public
name|boolean
name|send
parameter_list|(
name|ServerSession
name|from
parameter_list|,
name|ServerSession
name|to
parameter_list|,
name|ServerMessage
operator|.
name|Mutable
name|message
parameter_list|)
block|{
name|Object
name|data
init|=
name|message
operator|.
name|getData
argument_list|()
decl_stmt|;
if|if
condition|(
name|forbidden
operator|.
name|contains
argument_list|(
name|data
argument_list|)
condition|)
block|{
name|message
operator|.
name|put
argument_list|(
literal|"data"
argument_list|,
literal|"***"
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|sendMeta (ServerSession from, ServerMessage.Mutable message)
specifier|public
name|boolean
name|sendMeta
parameter_list|(
name|ServerSession
name|from
parameter_list|,
name|ServerMessage
operator|.
name|Mutable
name|message
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
block|}
block|}
end_class

end_unit

