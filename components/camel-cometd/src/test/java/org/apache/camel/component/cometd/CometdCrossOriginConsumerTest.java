begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.cometd
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|cometd
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|Filter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|AvailablePortFinder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Connector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|servlet
operator|.
name|FilterHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|servlet
operator|.
name|ServletContextHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|servlets
operator|.
name|CrossOriginFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|junit
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_comment
comment|/**  * Unit testing for using a CometdProducer and a CometdConsumer  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
DECL|class|CometdCrossOriginConsumerTest
specifier|public
class|class
name|CometdCrossOriginConsumerTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|FILTER_PATH
specifier|private
specifier|static
specifier|final
name|String
name|FILTER_PATH
init|=
literal|"testFilterPath"
decl_stmt|;
DECL|field|ALLOWED_ORIGINS
specifier|private
specifier|static
specifier|final
name|String
name|ALLOWED_ORIGINS
init|=
literal|"testAllowedOrigins"
decl_stmt|;
annotation|@
name|Mock
DECL|field|connector
name|Connector
name|connector
decl_stmt|;
annotation|@
name|Mock
DECL|field|endpoint
name|CometdEndpoint
name|endpoint
decl_stmt|;
annotation|@
name|Test
DECL|method|testFilterArgumentsSetOnEndpoint ()
specifier|public
name|void
name|testFilterArgumentsSetOnEndpoint
parameter_list|()
throws|throws
name|Exception
block|{
comment|// setup
name|CometdComponent
name|component
init|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"cometd"
argument_list|,
name|CometdComponent
operator|.
name|class
argument_list|)
decl_stmt|;
name|int
name|port
init|=
name|AvailablePortFinder
operator|.
name|getNextAvailable
argument_list|(
literal|23500
argument_list|)
decl_stmt|;
comment|// act
name|Endpoint
name|result
init|=
name|component
operator|.
name|createEndpoint
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"cometd://127.0.0.1:%s?crossOriginFilterOn=true&allowedOrigins=%s&filterPath=%s"
argument_list|,
name|port
argument_list|,
name|ALLOWED_ORIGINS
argument_list|,
name|FILTER_PATH
argument_list|)
argument_list|)
decl_stmt|;
comment|// assert
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|CometdEndpoint
argument_list|)
expr_stmt|;
name|CometdEndpoint
name|cometdEndpoint
init|=
operator|(
name|CometdEndpoint
operator|)
name|result
decl_stmt|;
name|assertTrue
argument_list|(
name|cometdEndpoint
operator|.
name|isCrossOriginFilterOn
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ALLOWED_ORIGINS
argument_list|,
name|cometdEndpoint
operator|.
name|getAllowedOrigins
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FILTER_PATH
argument_list|,
name|cometdEndpoint
operator|.
name|getFilterPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCrossOriginFilterAddedWhenOn ()
specifier|public
name|void
name|testCrossOriginFilterAddedWhenOn
parameter_list|()
throws|throws
name|Exception
block|{
comment|// setup
name|CometdComponent
name|component
init|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"cometd"
argument_list|,
name|CometdComponent
operator|.
name|class
argument_list|)
decl_stmt|;
name|Server
name|server
init|=
operator|new
name|Server
argument_list|()
decl_stmt|;
name|when
argument_list|(
name|endpoint
operator|.
name|isCrossOriginFilterOn
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|endpoint
operator|.
name|getFilterPath
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|FILTER_PATH
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|endpoint
operator|.
name|getAllowedOrigins
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ALLOWED_ORIGINS
argument_list|)
expr_stmt|;
comment|// act
name|component
operator|.
name|createServletForConnector
argument_list|(
name|server
argument_list|,
name|connector
argument_list|,
name|endpoint
argument_list|)
expr_stmt|;
comment|// assert
name|ServletContextHandler
name|handler
init|=
operator|(
name|ServletContextHandler
operator|)
name|server
operator|.
name|getHandler
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|handler
operator|.
name|getServletHandler
argument_list|()
operator|.
name|getFilters
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|FilterHolder
name|filterHolder
init|=
name|handler
operator|.
name|getServletHandler
argument_list|()
operator|.
name|getFilters
argument_list|()
index|[
literal|0
index|]
decl_stmt|;
name|Filter
name|filter
init|=
name|filterHolder
operator|.
name|getFilter
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|filter
operator|instanceof
name|CrossOriginFilter
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCrossOriginFilterNotAddedWhenOff ()
specifier|public
name|void
name|testCrossOriginFilterNotAddedWhenOff
parameter_list|()
throws|throws
name|Exception
block|{
comment|// setup
name|CometdComponent
name|component
init|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"cometd"
argument_list|,
name|CometdComponent
operator|.
name|class
argument_list|)
decl_stmt|;
name|Server
name|server
init|=
operator|new
name|Server
argument_list|()
decl_stmt|;
name|when
argument_list|(
name|endpoint
operator|.
name|isCrossOriginFilterOn
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// act
name|component
operator|.
name|createServletForConnector
argument_list|(
name|server
argument_list|,
name|connector
argument_list|,
name|endpoint
argument_list|)
expr_stmt|;
comment|// assert
name|ServletContextHandler
name|handler
init|=
operator|(
name|ServletContextHandler
operator|)
name|server
operator|.
name|getHandler
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|handler
operator|.
name|getServletHandler
argument_list|()
operator|.
name|getFilters
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

