begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.swagger
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|swagger
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|management
operator|.
name|ManagementFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanServer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|ModelHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|rest
operator|.
name|RestDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|rest
operator|.
name|RestsDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|CamelVersionHelper
import|;
end_import

begin_class
DECL|class|DefaultCamelSwaggerServlet
specifier|public
class|class
name|DefaultCamelSwaggerServlet
extends|extends
name|RestSwaggerApiDeclarationServlet
block|{
annotation|@
name|Override
DECL|method|getRestDefinitions (String camelId)
specifier|public
name|List
argument_list|<
name|RestDefinition
argument_list|>
name|getRestDefinitions
parameter_list|(
name|String
name|camelId
parameter_list|)
throws|throws
name|Exception
block|{
name|ObjectName
name|found
init|=
literal|null
decl_stmt|;
name|MBeanServer
name|server
init|=
name|ManagementFactory
operator|.
name|getPlatformMBeanServer
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|ObjectName
argument_list|>
name|names
init|=
name|server
operator|.
name|queryNames
argument_list|(
operator|new
name|ObjectName
argument_list|(
literal|"org.apache.camel:type=context,*"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
for|for
control|(
name|ObjectName
name|on
range|:
name|names
control|)
block|{
name|String
name|id
init|=
name|on
operator|.
name|getKeyProperty
argument_list|(
literal|"name"
argument_list|)
decl_stmt|;
if|if
condition|(
name|id
operator|.
name|startsWith
argument_list|(
literal|"\""
argument_list|)
operator|&&
name|id
operator|.
name|endsWith
argument_list|(
literal|"\""
argument_list|)
condition|)
block|{
name|id
operator|=
name|id
operator|.
name|substring
argument_list|(
literal|1
argument_list|,
name|id
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|camelId
operator|==
literal|null
operator|||
name|camelId
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
block|{
comment|// filter out older Camel versions as this requires Camel 2.15 or better
name|String
name|version
init|=
operator|(
name|String
operator|)
name|server
operator|.
name|getAttribute
argument_list|(
name|on
argument_list|,
literal|"CamelVersion"
argument_list|)
decl_stmt|;
if|if
condition|(
name|CamelVersionHelper
operator|.
name|isGE
argument_list|(
literal|"2.15.0"
argument_list|,
name|version
argument_list|)
condition|)
block|{
name|found
operator|=
name|on
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|found
operator|!=
literal|null
condition|)
block|{
name|String
name|xml
init|=
operator|(
name|String
operator|)
name|server
operator|.
name|invoke
argument_list|(
name|found
argument_list|,
literal|"dumpRestsAsXml"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|xml
operator|!=
literal|null
condition|)
block|{
name|RestsDefinition
name|rests
init|=
name|ModelHelper
operator|.
name|createModelFromXml
argument_list|(
literal|null
argument_list|,
name|xml
argument_list|,
name|RestsDefinition
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|rests
operator|!=
literal|null
condition|)
block|{
return|return
name|rests
operator|.
name|getRests
argument_list|()
return|;
block|}
block|}
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|findCamelContexts ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|findCamelContexts
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|answer
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|MBeanServer
name|server
init|=
name|ManagementFactory
operator|.
name|getPlatformMBeanServer
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|ObjectName
argument_list|>
name|names
init|=
name|server
operator|.
name|queryNames
argument_list|(
operator|new
name|ObjectName
argument_list|(
literal|"*:type=context,*"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
for|for
control|(
name|ObjectName
name|on
range|:
name|names
control|)
block|{
name|String
name|id
init|=
name|on
operator|.
name|getKeyProperty
argument_list|(
literal|"name"
argument_list|)
decl_stmt|;
if|if
condition|(
name|id
operator|.
name|startsWith
argument_list|(
literal|"\""
argument_list|)
operator|&&
name|id
operator|.
name|endsWith
argument_list|(
literal|"\""
argument_list|)
condition|)
block|{
name|id
operator|=
name|id
operator|.
name|substring
argument_list|(
literal|1
argument_list|,
name|id
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// filter out older Camel versions as this requires Camel 2.15 or better
name|String
name|version
init|=
operator|(
name|String
operator|)
name|server
operator|.
name|getAttribute
argument_list|(
name|on
argument_list|,
literal|"CamelVersion"
argument_list|)
decl_stmt|;
if|if
condition|(
name|CamelVersionHelper
operator|.
name|isGE
argument_list|(
literal|"2.15.0"
argument_list|,
name|version
argument_list|)
condition|)
block|{
name|answer
operator|.
name|add
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|answer
return|;
block|}
block|}
end_class

end_unit

