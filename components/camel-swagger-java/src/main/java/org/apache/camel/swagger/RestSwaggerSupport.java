begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.swagger
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|swagger
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|management
operator|.
name|ManagementFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanServer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonInclude
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|SerializationFeature
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|jaxrs
operator|.
name|config
operator|.
name|BeanConfig
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|models
operator|.
name|Contact
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|models
operator|.
name|Info
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|models
operator|.
name|License
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|models
operator|.
name|Swagger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultClassResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|ModelHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|rest
operator|.
name|RestDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|rest
operator|.
name|RestsDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|CamelVersionHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * A support class for that allows SPI to plugin  * and offer Swagger API service listings as part of the Camel component. This allows rest-dsl components  * such as servlet/jetty/netty4-http to offer Swagger API listings with minimal effort.  */
end_comment

begin_class
DECL|class|RestSwaggerSupport
specifier|public
class|class
name|RestSwaggerSupport
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|RestSwaggerSupport
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|reader
specifier|private
name|RestSwaggerReader
name|reader
init|=
operator|new
name|RestSwaggerReader
argument_list|()
decl_stmt|;
DECL|field|cors
specifier|private
name|boolean
name|cors
decl_stmt|;
DECL|method|initSwagger (BeanConfig swaggerConfig, Map<String, Object> config)
specifier|public
name|void
name|initSwagger
parameter_list|(
name|BeanConfig
name|swaggerConfig
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
parameter_list|)
block|{
comment|// configure swagger options
name|String
name|s
init|=
operator|(
name|String
operator|)
name|config
operator|.
name|get
argument_list|(
literal|"swagger.version"
argument_list|)
decl_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|swaggerConfig
operator|.
name|setVersion
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
name|s
operator|=
operator|(
name|String
operator|)
name|config
operator|.
name|get
argument_list|(
literal|"base.path"
argument_list|)
expr_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|swaggerConfig
operator|.
name|setBasePath
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
name|s
operator|=
operator|(
name|String
operator|)
name|config
operator|.
name|get
argument_list|(
literal|"host"
argument_list|)
expr_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|swaggerConfig
operator|.
name|setHost
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
name|s
operator|=
operator|(
name|String
operator|)
name|config
operator|.
name|get
argument_list|(
literal|"cors"
argument_list|)
expr_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|cors
operator|=
literal|"true"
operator|.
name|equalsIgnoreCase
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
name|s
operator|=
operator|(
name|String
operator|)
name|config
operator|.
name|get
argument_list|(
literal|"schemas"
argument_list|)
expr_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|String
index|[]
name|schemas
init|=
name|s
operator|.
name|split
argument_list|(
literal|","
argument_list|)
decl_stmt|;
name|swaggerConfig
operator|.
name|setSchemes
argument_list|(
name|schemas
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// assume http by default
name|swaggerConfig
operator|.
name|setSchemes
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"http"
block|}
argument_list|)
expr_stmt|;
block|}
name|String
name|version
init|=
operator|(
name|String
operator|)
name|config
operator|.
name|get
argument_list|(
literal|"api.version"
argument_list|)
decl_stmt|;
name|String
name|title
init|=
operator|(
name|String
operator|)
name|config
operator|.
name|get
argument_list|(
literal|"api.title"
argument_list|)
decl_stmt|;
name|String
name|description
init|=
operator|(
name|String
operator|)
name|config
operator|.
name|get
argument_list|(
literal|"api.description"
argument_list|)
decl_stmt|;
name|String
name|termsOfService
init|=
operator|(
name|String
operator|)
name|config
operator|.
name|get
argument_list|(
literal|"api.termsOfService"
argument_list|)
decl_stmt|;
name|String
name|licenseName
init|=
operator|(
name|String
operator|)
name|config
operator|.
name|get
argument_list|(
literal|"api.license.name"
argument_list|)
decl_stmt|;
name|String
name|licenseUrl
init|=
operator|(
name|String
operator|)
name|config
operator|.
name|get
argument_list|(
literal|"api.license.url"
argument_list|)
decl_stmt|;
name|String
name|contactName
init|=
operator|(
name|String
operator|)
name|config
operator|.
name|get
argument_list|(
literal|"api.contact.name"
argument_list|)
decl_stmt|;
name|String
name|contactUrl
init|=
operator|(
name|String
operator|)
name|config
operator|.
name|get
argument_list|(
literal|"api.contact.url"
argument_list|)
decl_stmt|;
name|String
name|contactEmail
init|=
operator|(
name|String
operator|)
name|config
operator|.
name|get
argument_list|(
literal|"api.contact.email"
argument_list|)
decl_stmt|;
name|Info
name|info
init|=
operator|new
name|Info
argument_list|()
decl_stmt|;
name|info
operator|.
name|setVersion
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|info
operator|.
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|info
operator|.
name|setDescription
argument_list|(
name|description
argument_list|)
expr_stmt|;
name|info
operator|.
name|setTermsOfService
argument_list|(
name|termsOfService
argument_list|)
expr_stmt|;
if|if
condition|(
name|licenseName
operator|!=
literal|null
operator|||
name|licenseUrl
operator|!=
literal|null
condition|)
block|{
name|License
name|license
init|=
operator|new
name|License
argument_list|()
decl_stmt|;
name|license
operator|.
name|setName
argument_list|(
name|licenseName
argument_list|)
expr_stmt|;
name|license
operator|.
name|setUrl
argument_list|(
name|licenseUrl
argument_list|)
expr_stmt|;
name|info
operator|.
name|setLicense
argument_list|(
name|license
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|contactName
operator|!=
literal|null
operator|||
name|contactUrl
operator|!=
literal|null
operator|||
name|contactEmail
operator|!=
literal|null
condition|)
block|{
name|Contact
name|contact
init|=
operator|new
name|Contact
argument_list|()
decl_stmt|;
name|contact
operator|.
name|setName
argument_list|(
name|contactName
argument_list|)
expr_stmt|;
name|contact
operator|.
name|setUrl
argument_list|(
name|contactUrl
argument_list|)
expr_stmt|;
name|contact
operator|.
name|setEmail
argument_list|(
name|contactEmail
argument_list|)
expr_stmt|;
name|info
operator|.
name|setContact
argument_list|(
name|contact
argument_list|)
expr_stmt|;
block|}
name|swaggerConfig
operator|.
name|setInfo
argument_list|(
name|info
argument_list|)
expr_stmt|;
block|}
DECL|method|getRestDefinitions (String camelId)
specifier|public
name|List
argument_list|<
name|RestDefinition
argument_list|>
name|getRestDefinitions
parameter_list|(
name|String
name|camelId
parameter_list|)
throws|throws
name|Exception
block|{
name|ObjectName
name|found
init|=
literal|null
decl_stmt|;
name|MBeanServer
name|server
init|=
name|ManagementFactory
operator|.
name|getPlatformMBeanServer
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|ObjectName
argument_list|>
name|names
init|=
name|server
operator|.
name|queryNames
argument_list|(
operator|new
name|ObjectName
argument_list|(
literal|"org.apache.camel:type=context,*"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
for|for
control|(
name|ObjectName
name|on
range|:
name|names
control|)
block|{
name|String
name|id
init|=
name|on
operator|.
name|getKeyProperty
argument_list|(
literal|"name"
argument_list|)
decl_stmt|;
if|if
condition|(
name|id
operator|.
name|startsWith
argument_list|(
literal|"\""
argument_list|)
operator|&&
name|id
operator|.
name|endsWith
argument_list|(
literal|"\""
argument_list|)
condition|)
block|{
name|id
operator|=
name|id
operator|.
name|substring
argument_list|(
literal|1
argument_list|,
name|id
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|camelId
operator|==
literal|null
operator|||
name|camelId
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
block|{
comment|// filter out older Camel versions as this requires Camel 2.15 or better (rest-dsl)
name|String
name|version
init|=
operator|(
name|String
operator|)
name|server
operator|.
name|getAttribute
argument_list|(
name|on
argument_list|,
literal|"CamelVersion"
argument_list|)
decl_stmt|;
if|if
condition|(
name|CamelVersionHelper
operator|.
name|isGE
argument_list|(
literal|"2.15.0"
argument_list|,
name|version
argument_list|)
condition|)
block|{
name|found
operator|=
name|on
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|found
operator|!=
literal|null
condition|)
block|{
name|String
name|xml
init|=
operator|(
name|String
operator|)
name|server
operator|.
name|invoke
argument_list|(
name|found
argument_list|,
literal|"dumpRestsAsXml"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|xml
operator|!=
literal|null
condition|)
block|{
name|RestsDefinition
name|rests
init|=
name|ModelHelper
operator|.
name|createModelFromXml
argument_list|(
literal|null
argument_list|,
name|xml
argument_list|,
name|RestsDefinition
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|rests
operator|!=
literal|null
condition|)
block|{
return|return
name|rests
operator|.
name|getRests
argument_list|()
return|;
block|}
block|}
block|}
return|return
literal|null
return|;
block|}
DECL|method|findCamelContexts ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|findCamelContexts
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|answer
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|MBeanServer
name|server
init|=
name|ManagementFactory
operator|.
name|getPlatformMBeanServer
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|ObjectName
argument_list|>
name|names
init|=
name|server
operator|.
name|queryNames
argument_list|(
operator|new
name|ObjectName
argument_list|(
literal|"*:type=context,*"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
for|for
control|(
name|ObjectName
name|on
range|:
name|names
control|)
block|{
name|String
name|id
init|=
name|on
operator|.
name|getKeyProperty
argument_list|(
literal|"name"
argument_list|)
decl_stmt|;
if|if
condition|(
name|id
operator|.
name|startsWith
argument_list|(
literal|"\""
argument_list|)
operator|&&
name|id
operator|.
name|endsWith
argument_list|(
literal|"\""
argument_list|)
condition|)
block|{
name|id
operator|=
name|id
operator|.
name|substring
argument_list|(
literal|1
argument_list|,
name|id
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// filter out older Camel versions as this requires Camel 2.15 or better (rest-dsl)
name|String
name|version
init|=
operator|(
name|String
operator|)
name|server
operator|.
name|getAttribute
argument_list|(
name|on
argument_list|,
literal|"CamelVersion"
argument_list|)
decl_stmt|;
if|if
condition|(
name|CamelVersionHelper
operator|.
name|isGE
argument_list|(
literal|"2.15.0"
argument_list|,
name|version
argument_list|)
condition|)
block|{
name|answer
operator|.
name|add
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|answer
return|;
block|}
DECL|method|renderResourceListing (RestApiResponseAdapter response, BeanConfig swaggerConfig, String contextId, String route)
specifier|public
name|void
name|renderResourceListing
parameter_list|(
name|RestApiResponseAdapter
name|response
parameter_list|,
name|BeanConfig
name|swaggerConfig
parameter_list|,
name|String
name|contextId
parameter_list|,
name|String
name|route
parameter_list|)
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|trace
argument_list|(
literal|"renderResourceListing"
argument_list|)
expr_stmt|;
if|if
condition|(
name|cors
condition|)
block|{
name|response
operator|.
name|addHeader
argument_list|(
literal|"Access-Control-Allow-Headers"
argument_list|,
literal|"Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
argument_list|)
expr_stmt|;
name|response
operator|.
name|addHeader
argument_list|(
literal|"Access-Control-Allow-Methods"
argument_list|,
literal|"GET, HEAD, POST, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH"
argument_list|)
expr_stmt|;
name|response
operator|.
name|addHeader
argument_list|(
literal|"Access-Control-Allow-Origin"
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|RestDefinition
argument_list|>
name|rests
init|=
name|getRestDefinitions
argument_list|(
name|contextId
argument_list|)
decl_stmt|;
if|if
condition|(
name|rests
operator|!=
literal|null
condition|)
block|{
comment|// read the rest-dsl into swagger model
name|Swagger
name|swagger
init|=
name|reader
operator|.
name|read
argument_list|(
name|rests
argument_list|,
name|route
argument_list|,
name|swaggerConfig
argument_list|,
operator|new
name|DefaultClassResolver
argument_list|()
argument_list|)
decl_stmt|;
name|ObjectMapper
name|mapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
name|mapper
operator|.
name|enable
argument_list|(
name|SerializationFeature
operator|.
name|INDENT_OUTPUT
argument_list|)
expr_stmt|;
name|mapper
operator|.
name|setSerializationInclusion
argument_list|(
name|JsonInclude
operator|.
name|Include
operator|.
name|NON_NULL
argument_list|)
expr_stmt|;
name|byte
index|[]
name|bytes
init|=
name|mapper
operator|.
name|writeValueAsBytes
argument_list|(
name|swagger
argument_list|)
decl_stmt|;
name|int
name|len
init|=
name|bytes
operator|.
name|length
decl_stmt|;
name|response
operator|.
name|addHeader
argument_list|(
name|Exchange
operator|.
name|CONTENT_LENGTH
argument_list|,
literal|""
operator|+
name|len
argument_list|)
expr_stmt|;
name|response
operator|.
name|writeBytes
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|response
operator|.
name|noContent
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**      * Renders a list of available CamelContexts in the JVM      */
DECL|method|renderCamelContexts (RestApiResponseAdapter response)
specifier|public
name|void
name|renderCamelContexts
parameter_list|(
name|RestApiResponseAdapter
name|response
parameter_list|)
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|trace
argument_list|(
literal|"renderCamelContexts"
argument_list|)
expr_stmt|;
if|if
condition|(
name|cors
condition|)
block|{
name|response
operator|.
name|addHeader
argument_list|(
literal|"Access-Control-Allow-Headers"
argument_list|,
literal|"Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
argument_list|)
expr_stmt|;
name|response
operator|.
name|addHeader
argument_list|(
literal|"Access-Control-Allow-Methods"
argument_list|,
literal|"GET, HEAD, POST, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH"
argument_list|)
expr_stmt|;
name|response
operator|.
name|addHeader
argument_list|(
literal|"Access-Control-Allow-Origin"
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
block|}
name|response
operator|.
name|addHeader
argument_list|(
name|Exchange
operator|.
name|CONTENT_TYPE
argument_list|,
literal|"application/json"
argument_list|)
expr_stmt|;
name|StringBuffer
name|sb
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|contexts
init|=
name|findCamelContexts
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"[\n"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|contexts
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|String
name|name
init|=
name|contexts
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"{\"name\": \""
argument_list|)
operator|.
name|append
argument_list|(
name|name
argument_list|)
operator|.
name|append
argument_list|(
literal|"\"}"
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
name|contexts
operator|.
name|size
argument_list|()
operator|-
literal|1
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|",\n"
argument_list|)
expr_stmt|;
block|}
block|}
name|sb
operator|.
name|append
argument_list|(
literal|"\n]"
argument_list|)
expr_stmt|;
name|int
name|len
init|=
name|sb
operator|.
name|length
argument_list|()
decl_stmt|;
name|response
operator|.
name|addHeader
argument_list|(
name|Exchange
operator|.
name|CONTENT_LENGTH
argument_list|,
literal|""
operator|+
name|len
argument_list|)
expr_stmt|;
name|response
operator|.
name|writeBytes
argument_list|(
name|sb
operator|.
name|toString
argument_list|()
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

