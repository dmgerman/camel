begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.bonita.api.util
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|bonita
operator|.
name|api
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|bonita
operator|.
name|api
operator|.
name|model
operator|.
name|FileInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|bonita
operator|.
name|api
operator|.
name|model
operator|.
name|ProcessDefinitionResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|bonita
operator|.
name|api
operator|.
name|model
operator|.
name|UploadFileResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|junit
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doReturn
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|spy
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
DECL|class|BonitaAPIUtilPrepareInputsTest
specifier|public
class|class
name|BonitaAPIUtilPrepareInputsTest
block|{
annotation|@
name|Mock
DECL|field|processDefinition
name|ProcessDefinitionResponse
name|processDefinition
decl_stmt|;
DECL|field|bonitaApiUtil
specifier|private
name|BonitaAPIUtil
name|bonitaApiUtil
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|bonitaApiUtil
operator|=
name|BonitaAPIUtil
operator|.
name|getInstance
argument_list|(
operator|new
name|BonitaAPIConfig
argument_list|(
literal|"hostname"
argument_list|,
literal|"port"
argument_list|,
literal|"username"
argument_list|,
literal|"password"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPrepareInputsEmpty ()
specifier|public
name|void
name|testPrepareInputsEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Serializable
argument_list|>
name|rawInputs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Serializable
argument_list|>
name|inputs
init|=
name|bonitaApiUtil
operator|.
name|prepareInputs
argument_list|(
name|processDefinition
argument_list|,
name|rawInputs
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|inputs
operator|.
name|size
argument_list|()
argument_list|,
name|rawInputs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPrepareInputsNoFiles ()
specifier|public
name|void
name|testPrepareInputsNoFiles
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Serializable
argument_list|>
name|rawInputs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|rawInputs
operator|.
name|put
argument_list|(
literal|"myVariable"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Serializable
argument_list|>
name|inputs
init|=
name|bonitaApiUtil
operator|.
name|prepareInputs
argument_list|(
name|processDefinition
argument_list|,
name|rawInputs
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|rawInputs
operator|.
name|size
argument_list|()
argument_list|,
name|inputs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPrepareInputsOneFile ()
specifier|public
name|void
name|testPrepareInputsOneFile
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Serializable
argument_list|>
name|rawInputs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|FileInput
name|file
init|=
operator|new
name|FileInput
argument_list|(
literal|"filename"
argument_list|,
literal|"String"
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|rawInputs
operator|.
name|put
argument_list|(
literal|"myVariable"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|rawInputs
operator|.
name|put
argument_list|(
literal|"filename"
argument_list|,
name|file
argument_list|)
expr_stmt|;
name|BonitaAPIUtil
name|bonitaApiUtilMod
init|=
name|spy
argument_list|(
name|bonitaApiUtil
argument_list|)
decl_stmt|;
name|UploadFileResponse
name|uploadFileResponse
init|=
operator|new
name|UploadFileResponse
argument_list|()
decl_stmt|;
name|uploadFileResponse
operator|.
name|setTempPath
argument_list|(
literal|"temp"
argument_list|)
expr_stmt|;
name|doReturn
argument_list|(
name|uploadFileResponse
argument_list|)
operator|.
name|when
argument_list|(
name|bonitaApiUtilMod
argument_list|)
operator|.
name|uploadFile
argument_list|(
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Serializable
argument_list|>
name|inputs
init|=
name|bonitaApiUtilMod
operator|.
name|prepareInputs
argument_list|(
name|processDefinition
argument_list|,
name|rawInputs
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|rawInputs
operator|.
name|size
argument_list|()
argument_list|,
name|inputs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPrepareInputsFileType ()
specifier|public
name|void
name|testPrepareInputsFileType
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Serializable
argument_list|>
name|rawInputs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|FileInput
name|file
init|=
operator|new
name|FileInput
argument_list|(
literal|"filename"
argument_list|,
literal|"String"
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|rawInputs
operator|.
name|put
argument_list|(
literal|"filename"
argument_list|,
name|file
argument_list|)
expr_stmt|;
name|BonitaAPIUtil
name|bonitaApiUtilMod
init|=
name|spy
argument_list|(
name|bonitaApiUtil
argument_list|)
decl_stmt|;
name|UploadFileResponse
name|uploadFileResponse
init|=
operator|new
name|UploadFileResponse
argument_list|()
decl_stmt|;
name|uploadFileResponse
operator|.
name|setTempPath
argument_list|(
literal|"temp"
argument_list|)
expr_stmt|;
name|doReturn
argument_list|(
name|uploadFileResponse
argument_list|)
operator|.
name|when
argument_list|(
name|bonitaApiUtilMod
argument_list|)
operator|.
name|uploadFile
argument_list|(
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Serializable
argument_list|>
name|inputs
init|=
name|bonitaApiUtilMod
operator|.
name|prepareInputs
argument_list|(
name|processDefinition
argument_list|,
name|rawInputs
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|Map
operator|.
name|class
operator|.
name|isInstance
argument_list|(
name|inputs
operator|.
name|get
argument_list|(
literal|"filename"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPrepareInputsTempFilePath ()
specifier|public
name|void
name|testPrepareInputsTempFilePath
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Serializable
argument_list|>
name|rawInputs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|FileInput
name|file
init|=
operator|new
name|FileInput
argument_list|(
literal|"filename"
argument_list|,
literal|"String"
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|rawInputs
operator|.
name|put
argument_list|(
literal|"filename"
argument_list|,
name|file
argument_list|)
expr_stmt|;
name|BonitaAPIUtil
name|bonitaApiUtilMod
init|=
name|spy
argument_list|(
name|bonitaApiUtil
argument_list|)
decl_stmt|;
name|UploadFileResponse
name|uploadFileResponse
init|=
operator|new
name|UploadFileResponse
argument_list|()
decl_stmt|;
name|uploadFileResponse
operator|.
name|setTempPath
argument_list|(
literal|"temp"
argument_list|)
expr_stmt|;
name|doReturn
argument_list|(
name|uploadFileResponse
argument_list|)
operator|.
name|when
argument_list|(
name|bonitaApiUtilMod
argument_list|)
operator|.
name|uploadFile
argument_list|(
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Serializable
argument_list|>
name|inputs
init|=
name|bonitaApiUtilMod
operator|.
name|prepareInputs
argument_list|(
name|processDefinition
argument_list|,
name|rawInputs
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Serializable
argument_list|>
name|fileMap
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Serializable
argument_list|>
operator|)
name|inputs
operator|.
name|get
argument_list|(
literal|"filename"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"temp"
argument_list|,
name|fileMap
operator|.
name|get
argument_list|(
literal|"tempPath"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

