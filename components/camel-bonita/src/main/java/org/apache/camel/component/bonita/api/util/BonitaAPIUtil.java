begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.bonita.api.util
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|bonita
operator|.
name|api
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|WebTarget
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|jaxrs
operator|.
name|json
operator|.
name|JacksonJsonProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|bonita
operator|.
name|api
operator|.
name|filter
operator|.
name|BonitaAuthFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|bonita
operator|.
name|api
operator|.
name|filter
operator|.
name|JsonClientFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|bonita
operator|.
name|api
operator|.
name|model
operator|.
name|FileInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|bonita
operator|.
name|api
operator|.
name|model
operator|.
name|ProcessDefinitionResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|bonita
operator|.
name|api
operator|.
name|model
operator|.
name|UploadFileResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|multipart
operator|.
name|Attachment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|multipart
operator|.
name|AttachmentBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cxf
operator|.
name|jaxrs
operator|.
name|ext
operator|.
name|multipart
operator|.
name|ContentDisposition
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|Entity
operator|.
name|entity
import|;
end_import

begin_class
DECL|class|BonitaAPIUtil
specifier|public
class|class
name|BonitaAPIUtil
block|{
DECL|field|instance
specifier|private
specifier|static
name|BonitaAPIUtil
name|instance
decl_stmt|;
DECL|field|webTarget
specifier|private
name|WebTarget
name|webTarget
decl_stmt|;
DECL|method|getInstance (BonitaAPIConfig bonitaAPIConfig)
specifier|public
specifier|static
name|BonitaAPIUtil
name|getInstance
parameter_list|(
name|BonitaAPIConfig
name|bonitaAPIConfig
parameter_list|)
block|{
if|if
condition|(
name|instance
operator|==
literal|null
condition|)
block|{
name|instance
operator|=
operator|new
name|BonitaAPIUtil
argument_list|()
expr_stmt|;
name|ClientBuilder
name|clientBuilder
init|=
name|ClientBuilder
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|Client
name|client
init|=
name|clientBuilder
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|register
argument_list|(
name|JacksonJsonProvider
operator|.
name|class
argument_list|)
expr_stmt|;
name|client
operator|.
name|register
argument_list|(
operator|new
name|JsonClientFilter
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|register
argument_list|(
operator|new
name|BonitaAuthFilter
argument_list|(
name|bonitaAPIConfig
argument_list|)
argument_list|)
expr_stmt|;
name|instance
operator|.
name|setWebTarget
argument_list|(
name|client
operator|.
name|target
argument_list|(
name|bonitaAPIConfig
operator|.
name|getBaseBonitaURI
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|instance
return|;
block|}
DECL|method|uploadFile (ProcessDefinitionResponse processDefinition, FileInput file)
specifier|public
name|UploadFileResponse
name|uploadFile
parameter_list|(
name|ProcessDefinitionResponse
name|processDefinition
parameter_list|,
name|FileInput
name|file
parameter_list|)
throws|throws
name|Exception
block|{
name|WebTarget
name|resource
init|=
name|webTarget
operator|.
name|path
argument_list|(
literal|"portal/resource/process/{processName}/{processVersion}/API/formFileUpload"
argument_list|)
operator|.
name|resolveTemplate
argument_list|(
literal|"processName"
argument_list|,
name|processDefinition
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|resolveTemplate
argument_list|(
literal|"processVersion"
argument_list|,
name|processDefinition
operator|.
name|getVersion
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|tempFile
init|=
name|Files
operator|.
name|createTempFile
argument_list|(
literal|"tempFile"
argument_list|,
literal|".tmp"
argument_list|)
operator|.
name|toFile
argument_list|()
decl_stmt|;
name|FileOutputStream
name|fos
init|=
operator|new
name|FileOutputStream
argument_list|(
name|tempFile
argument_list|)
decl_stmt|;
name|fos
operator|.
name|write
argument_list|(
name|file
operator|.
name|getContent
argument_list|()
argument_list|)
expr_stmt|;
name|fos
operator|.
name|close
argument_list|()
expr_stmt|;
name|String
name|dispositionValue
init|=
name|String
operator|.
name|format
argument_list|(
literal|"form-data;filename=%s;name=file"
argument_list|,
name|tempFile
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|Attachment
name|attachment
init|=
operator|new
name|AttachmentBuilder
argument_list|()
operator|.
name|object
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|file
operator|.
name|getContent
argument_list|()
argument_list|)
argument_list|)
operator|.
name|contentDisposition
argument_list|(
operator|new
name|ContentDisposition
argument_list|(
name|dispositionValue
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|resource
operator|.
name|request
argument_list|()
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|entity
argument_list|(
name|attachment
argument_list|,
name|MediaType
operator|.
name|MULTIPART_FORM_DATA
argument_list|)
argument_list|,
name|UploadFileResponse
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|prepareInputs (ProcessDefinitionResponse processDefinition, Map<String, Serializable> inputs)
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Serializable
argument_list|>
name|prepareInputs
parameter_list|(
name|ProcessDefinitionResponse
name|processDefinition
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Serializable
argument_list|>
name|inputs
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|Serializable
argument_list|>
name|entry
range|:
name|inputs
operator|.
name|entrySet
argument_list|()
control|)
block|{
if|if
condition|(
name|entry
operator|.
name|getValue
argument_list|()
operator|instanceof
name|FileInput
condition|)
block|{
name|FileInput
name|file
init|=
operator|(
name|FileInput
operator|)
name|entry
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|String
name|tmpFile
init|=
name|uploadFile
argument_list|(
name|processDefinition
argument_list|,
name|file
argument_list|)
operator|.
name|getTempPath
argument_list|()
decl_stmt|;
name|HashMap
argument_list|<
name|String
argument_list|,
name|Serializable
argument_list|>
name|fileInput
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|fileInput
operator|.
name|put
argument_list|(
literal|"filename"
argument_list|,
name|file
operator|.
name|getFilename
argument_list|()
argument_list|)
expr_stmt|;
name|fileInput
operator|.
name|put
argument_list|(
literal|"tempPath"
argument_list|,
name|tmpFile
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setValue
argument_list|(
name|fileInput
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|inputs
return|;
block|}
DECL|method|getWebTarget ()
specifier|public
name|WebTarget
name|getWebTarget
parameter_list|()
block|{
return|return
name|webTarget
return|;
block|}
DECL|method|setWebTarget (WebTarget webTarget)
specifier|public
name|void
name|setWebTarget
parameter_list|(
name|WebTarget
name|webTarget
parameter_list|)
block|{
name|this
operator|.
name|webTarget
operator|=
name|webTarget
expr_stmt|;
block|}
block|}
end_class

end_unit

