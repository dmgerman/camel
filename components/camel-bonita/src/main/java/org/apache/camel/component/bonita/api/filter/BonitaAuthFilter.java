begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.bonita.api.filter
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|bonita
operator|.
name|api
operator|.
name|filter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientRequestContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|ClientRequestFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|client
operator|.
name|WebTarget
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedHashMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|NewCookie
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|bonita
operator|.
name|api
operator|.
name|util
operator|.
name|BonitaAPIConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_class
DECL|class|BonitaAuthFilter
specifier|public
class|class
name|BonitaAuthFilter
implements|implements
name|ClientRequestFilter
block|{
DECL|field|bonitaApiConfig
specifier|private
name|BonitaAPIConfig
name|bonitaApiConfig
decl_stmt|;
DECL|method|BonitaAuthFilter (BonitaAPIConfig bonitaApiConfig)
specifier|public
name|BonitaAuthFilter
parameter_list|(
name|BonitaAPIConfig
name|bonitaApiConfig
parameter_list|)
block|{
name|this
operator|.
name|bonitaApiConfig
operator|=
name|bonitaApiConfig
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|filter (ClientRequestContext requestContext)
specifier|public
name|void
name|filter
parameter_list|(
name|ClientRequestContext
name|requestContext
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|requestContext
operator|.
name|getCookies
argument_list|()
operator|.
name|get
argument_list|(
literal|"JSESSIONID"
argument_list|)
operator|==
literal|null
condition|)
block|{
name|String
name|username
init|=
name|bonitaApiConfig
operator|.
name|getUsername
argument_list|()
decl_stmt|;
name|String
name|password
init|=
name|bonitaApiConfig
operator|.
name|getPassword
argument_list|()
decl_stmt|;
name|String
name|bonitaApiToken
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|ObjectHelper
operator|.
name|isEmpty
argument_list|(
name|username
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Username provided is null or empty."
argument_list|)
throw|;
block|}
if|if
condition|(
name|ObjectHelper
operator|.
name|isEmpty
argument_list|(
name|password
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Password provided is null or empty."
argument_list|)
throw|;
block|}
name|ClientBuilder
name|clientBuilder
init|=
name|ClientBuilder
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|Client
name|client
init|=
name|clientBuilder
operator|.
name|build
argument_list|()
decl_stmt|;
name|WebTarget
name|webTarget
init|=
name|client
operator|.
name|target
argument_list|(
name|bonitaApiConfig
operator|.
name|getBaseBonitaURI
argument_list|()
argument_list|)
operator|.
name|path
argument_list|(
literal|"loginservice"
argument_list|)
decl_stmt|;
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|form
init|=
operator|new
name|MultivaluedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|form
operator|.
name|add
argument_list|(
literal|"username"
argument_list|,
name|username
argument_list|)
expr_stmt|;
name|form
operator|.
name|add
argument_list|(
literal|"password"
argument_list|,
name|password
argument_list|)
expr_stmt|;
name|form
operator|.
name|add
argument_list|(
literal|"redirect"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|webTarget
operator|.
name|request
argument_list|()
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_FORM_URLENCODED
argument_list|)
operator|.
name|post
argument_list|(
name|Entity
operator|.
name|form
argument_list|(
name|form
argument_list|)
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|NewCookie
argument_list|>
name|cr
init|=
name|response
operator|.
name|getCookies
argument_list|()
decl_stmt|;
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|cookies
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|NewCookie
name|cookie
range|:
name|cr
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
literal|"X-Bonita-API-Token"
operator|.
name|equals
argument_list|(
name|cookie
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|bonitaApiToken
operator|=
name|cookie
operator|.
name|getValue
argument_list|()
expr_stmt|;
name|requestContext
operator|.
name|getHeaders
argument_list|()
operator|.
name|add
argument_list|(
literal|"X-Bonita-API-Token"
argument_list|,
name|bonitaApiToken
argument_list|)
expr_stmt|;
block|}
name|cookies
operator|.
name|add
argument_list|(
name|cookie
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|requestContext
operator|.
name|getHeaders
argument_list|()
operator|.
name|put
argument_list|(
literal|"Cookie"
argument_list|,
name|cookies
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getBonitaApiConfig ()
specifier|public
name|BonitaAPIConfig
name|getBonitaApiConfig
parameter_list|()
block|{
return|return
name|bonitaApiConfig
return|;
block|}
DECL|method|setBonitaApiConfig (BonitaAPIConfig bonitaApiConfig)
specifier|public
name|void
name|setBonitaApiConfig
parameter_list|(
name|BonitaAPIConfig
name|bonitaApiConfig
parameter_list|)
block|{
name|this
operator|.
name|bonitaApiConfig
operator|=
name|bonitaApiConfig
expr_stmt|;
block|}
block|}
end_class

end_unit

