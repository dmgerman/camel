begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.attachment
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|attachment
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Supplier
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|activation
operator|.
name|DataHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|InvalidPayloadException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_class
DECL|class|DefaultAttachmentMessage
specifier|public
specifier|final
class|class
name|DefaultAttachmentMessage
implements|implements
name|AttachmentMessage
block|{
comment|/*      * Attachments are stores as a property on the {@link Exchange} which ensures they are propagated      * during routing and we dont have to pollute the generic {@link Message} with attachment APIs      */
DECL|field|ATTACHMENT_OBJECTS
specifier|private
specifier|static
specifier|final
name|String
name|ATTACHMENT_OBJECTS
init|=
literal|"CamelAttachmentObjects"
decl_stmt|;
DECL|field|delegate
specifier|private
specifier|final
name|Message
name|delegate
decl_stmt|;
DECL|method|DefaultAttachmentMessage (Message delegate)
specifier|public
name|DefaultAttachmentMessage
parameter_list|(
name|Message
name|delegate
parameter_list|)
block|{
name|this
operator|.
name|delegate
operator|=
name|delegate
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getMessageId ()
specifier|public
name|String
name|getMessageId
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|getMessageId
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|setMessageId (String messageId)
specifier|public
name|void
name|setMessageId
parameter_list|(
name|String
name|messageId
parameter_list|)
block|{
name|delegate
operator|.
name|setMessageId
argument_list|(
name|messageId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getExchange ()
specifier|public
name|Exchange
name|getExchange
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|getExchange
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|isFault ()
specifier|public
name|boolean
name|isFault
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|isFault
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|setFault (boolean fault)
specifier|public
name|void
name|setFault
parameter_list|(
name|boolean
name|fault
parameter_list|)
block|{
name|delegate
operator|.
name|setFault
argument_list|(
name|fault
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getHeader (String name)
specifier|public
name|Object
name|getHeader
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|getHeader
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getHeader (String name, Object defaultValue)
specifier|public
name|Object
name|getHeader
parameter_list|(
name|String
name|name
parameter_list|,
name|Object
name|defaultValue
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|getHeader
argument_list|(
name|name
argument_list|,
name|defaultValue
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getHeader (String name, Supplier<Object> defaultValueSupplier)
specifier|public
name|Object
name|getHeader
parameter_list|(
name|String
name|name
parameter_list|,
name|Supplier
argument_list|<
name|Object
argument_list|>
name|defaultValueSupplier
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|getHeader
argument_list|(
name|name
argument_list|,
name|defaultValueSupplier
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getHeader (String name, Class<T> type)
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|getHeader
parameter_list|(
name|String
name|name
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|type
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|getHeader
argument_list|(
name|name
argument_list|,
name|type
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getHeader (String name, Object defaultValue, Class<T> type)
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|getHeader
parameter_list|(
name|String
name|name
parameter_list|,
name|Object
name|defaultValue
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|type
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|getHeader
argument_list|(
name|name
argument_list|,
name|defaultValue
argument_list|,
name|type
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getHeader (String name, Supplier<Object> defaultValueSupplier, Class<T> type)
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|getHeader
parameter_list|(
name|String
name|name
parameter_list|,
name|Supplier
argument_list|<
name|Object
argument_list|>
name|defaultValueSupplier
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|type
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|getHeader
argument_list|(
name|name
argument_list|,
name|defaultValueSupplier
argument_list|,
name|type
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setHeader (String name, Object value)
specifier|public
name|void
name|setHeader
parameter_list|(
name|String
name|name
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|delegate
operator|.
name|setHeader
argument_list|(
name|name
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|removeHeader (String name)
specifier|public
name|Object
name|removeHeader
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|removeHeader
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|removeHeaders (String pattern)
specifier|public
name|boolean
name|removeHeaders
parameter_list|(
name|String
name|pattern
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|removeHeaders
argument_list|(
name|pattern
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|removeHeaders (String pattern, String... excludePatterns)
specifier|public
name|boolean
name|removeHeaders
parameter_list|(
name|String
name|pattern
parameter_list|,
name|String
modifier|...
name|excludePatterns
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|removeHeaders
argument_list|(
name|pattern
argument_list|,
name|excludePatterns
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getHeaders ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getHeaders
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|getHeaders
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|setHeaders (Map<String, Object> headers)
specifier|public
name|void
name|setHeaders
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
parameter_list|)
block|{
name|delegate
operator|.
name|setHeaders
argument_list|(
name|headers
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|hasHeaders ()
specifier|public
name|boolean
name|hasHeaders
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|hasHeaders
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getBody ()
specifier|public
name|Object
name|getBody
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|getBody
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getMandatoryBody ()
specifier|public
name|Object
name|getMandatoryBody
parameter_list|()
throws|throws
name|InvalidPayloadException
block|{
return|return
name|delegate
operator|.
name|getMandatoryBody
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getBody (Class<T> type)
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|getBody
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|type
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|getBody
argument_list|(
name|type
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getMandatoryBody (Class<T> type)
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|getMandatoryBody
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|type
parameter_list|)
throws|throws
name|InvalidPayloadException
block|{
return|return
name|delegate
operator|.
name|getMandatoryBody
argument_list|(
name|type
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setBody (Object body)
specifier|public
name|void
name|setBody
parameter_list|(
name|Object
name|body
parameter_list|)
block|{
name|delegate
operator|.
name|setBody
argument_list|(
name|body
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setBody (Object body, Class<T> type)
specifier|public
parameter_list|<
name|T
parameter_list|>
name|void
name|setBody
parameter_list|(
name|Object
name|body
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|type
parameter_list|)
block|{
name|delegate
operator|.
name|setBody
argument_list|(
name|body
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|copy ()
specifier|public
name|Message
name|copy
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|copy
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|copyFrom (Message message)
specifier|public
name|void
name|copyFrom
parameter_list|(
name|Message
name|message
parameter_list|)
block|{
name|delegate
operator|.
name|copyFrom
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|copyFromWithNewBody (Message message, Object newBody)
specifier|public
name|void
name|copyFromWithNewBody
parameter_list|(
name|Message
name|message
parameter_list|,
name|Object
name|newBody
parameter_list|)
block|{
name|delegate
operator|.
name|copyFromWithNewBody
argument_list|(
name|message
argument_list|,
name|newBody
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|getAttachment (String id)
specifier|public
name|DataHandler
name|getAttachment
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Attachment
argument_list|>
name|map
init|=
name|getExchange
argument_list|()
operator|.
name|getProperty
argument_list|(
name|ATTACHMENT_OBJECTS
argument_list|,
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|map
operator|!=
literal|null
condition|)
block|{
name|Attachment
name|att
init|=
name|map
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|att
operator|!=
literal|null
condition|)
block|{
return|return
name|att
operator|.
name|getDataHandler
argument_list|()
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|getAttachmentObject (String id)
specifier|public
name|Attachment
name|getAttachmentObject
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Attachment
argument_list|>
name|map
init|=
name|getExchange
argument_list|()
operator|.
name|getProperty
argument_list|(
name|ATTACHMENT_OBJECTS
argument_list|,
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|map
operator|!=
literal|null
condition|)
block|{
return|return
name|map
operator|.
name|get
argument_list|(
name|id
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|getAttachmentNames ()
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getAttachmentNames
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Attachment
argument_list|>
name|map
init|=
name|getExchange
argument_list|()
operator|.
name|getProperty
argument_list|(
name|ATTACHMENT_OBJECTS
argument_list|,
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|map
operator|!=
literal|null
condition|)
block|{
return|return
name|map
operator|.
name|keySet
argument_list|()
return|;
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|removeAttachment (String id)
specifier|public
name|void
name|removeAttachment
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Attachment
argument_list|>
name|map
init|=
name|getExchange
argument_list|()
operator|.
name|getProperty
argument_list|(
name|ATTACHMENT_OBJECTS
argument_list|,
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|map
operator|!=
literal|null
condition|)
block|{
name|map
operator|.
name|remove
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|addAttachment (String id, DataHandler content)
specifier|public
name|void
name|addAttachment
parameter_list|(
name|String
name|id
parameter_list|,
name|DataHandler
name|content
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Attachment
argument_list|>
name|map
init|=
name|getExchange
argument_list|()
operator|.
name|getProperty
argument_list|(
name|ATTACHMENT_OBJECTS
argument_list|,
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|map
operator|==
literal|null
condition|)
block|{
name|map
operator|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|getExchange
argument_list|()
operator|.
name|setProperty
argument_list|(
name|ATTACHMENT_OBJECTS
argument_list|,
name|map
argument_list|)
expr_stmt|;
block|}
name|map
operator|.
name|put
argument_list|(
name|id
argument_list|,
operator|new
name|DefaultAttachment
argument_list|(
name|content
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|addAttachmentObject (String id, Attachment content)
specifier|public
name|void
name|addAttachmentObject
parameter_list|(
name|String
name|id
parameter_list|,
name|Attachment
name|content
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Attachment
argument_list|>
name|map
init|=
name|getExchange
argument_list|()
operator|.
name|getProperty
argument_list|(
name|ATTACHMENT_OBJECTS
argument_list|,
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|map
operator|==
literal|null
condition|)
block|{
name|map
operator|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|getExchange
argument_list|()
operator|.
name|setProperty
argument_list|(
name|ATTACHMENT_OBJECTS
argument_list|,
name|map
argument_list|)
expr_stmt|;
block|}
name|map
operator|.
name|put
argument_list|(
name|id
argument_list|,
name|content
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|getAttachments ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|DataHandler
argument_list|>
name|getAttachments
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Attachment
argument_list|>
name|map
init|=
name|getExchange
argument_list|()
operator|.
name|getProperty
argument_list|(
name|ATTACHMENT_OBJECTS
argument_list|,
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|map
operator|!=
literal|null
condition|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|DataHandler
argument_list|>
name|answer
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|map
operator|.
name|forEach
argument_list|(
parameter_list|(
name|id
parameter_list|,
name|att
parameter_list|)
lambda|->
name|answer
operator|.
name|put
argument_list|(
name|id
argument_list|,
name|att
operator|.
name|getDataHandler
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|answer
return|;
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|getAttachmentObjects ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Attachment
argument_list|>
name|getAttachmentObjects
parameter_list|()
block|{
return|return
name|getExchange
argument_list|()
operator|.
name|getProperty
argument_list|(
name|ATTACHMENT_OBJECTS
argument_list|,
name|Map
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setAttachments (Map<String, DataHandler> attachments)
specifier|public
name|void
name|setAttachments
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|DataHandler
argument_list|>
name|attachments
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Attachment
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|attachments
operator|.
name|forEach
argument_list|(
parameter_list|(
name|id
parameter_list|,
name|dh
parameter_list|)
lambda|->
name|map
operator|.
name|put
argument_list|(
name|id
argument_list|,
operator|new
name|DefaultAttachment
argument_list|(
name|dh
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|getExchange
argument_list|()
operator|.
name|setProperty
argument_list|(
name|ATTACHMENT_OBJECTS
argument_list|,
name|map
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setAttachmentObjects (Map<String, Attachment> attachments)
specifier|public
name|void
name|setAttachmentObjects
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Attachment
argument_list|>
name|attachments
parameter_list|)
block|{
name|getExchange
argument_list|()
operator|.
name|setProperty
argument_list|(
name|ATTACHMENT_OBJECTS
argument_list|,
name|attachments
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|hasAttachments ()
specifier|public
name|boolean
name|hasAttachments
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Attachment
argument_list|>
name|map
init|=
name|getExchange
argument_list|()
operator|.
name|getProperty
argument_list|(
name|ATTACHMENT_OBJECTS
argument_list|,
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|map
operator|!=
literal|null
operator|&&
operator|!
name|map
operator|.
name|isEmpty
argument_list|()
return|;
block|}
block|}
end_class

end_unit

