begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.pubnub
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pubnub
package|;
end_package

begin_import
import|import
name|com
operator|.
name|pubnub
operator|.
name|api
operator|.
name|models
operator|.
name|consumer
operator|.
name|pubsub
operator|.
name|PNPresenceEventResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|EndpointInject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|github
operator|.
name|tomakehurst
operator|.
name|wiremock
operator|.
name|client
operator|.
name|WireMock
operator|.
name|aResponse
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|github
operator|.
name|tomakehurst
operator|.
name|wiremock
operator|.
name|client
operator|.
name|WireMock
operator|.
name|get
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|github
operator|.
name|tomakehurst
operator|.
name|wiremock
operator|.
name|client
operator|.
name|WireMock
operator|.
name|stubFor
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|github
operator|.
name|tomakehurst
operator|.
name|wiremock
operator|.
name|client
operator|.
name|WireMock
operator|.
name|urlPathEqualTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|equalTo
import|;
end_import

begin_class
DECL|class|PubNubPresenceTest
specifier|public
class|class
name|PubNubPresenceTest
extends|extends
name|PubNubTestBase
block|{
annotation|@
name|EndpointInject
argument_list|(
name|uri
operator|=
literal|"mock:result"
argument_list|)
DECL|field|mockResult
specifier|private
name|MockEndpoint
name|mockResult
decl_stmt|;
annotation|@
name|Test
DECL|method|testPresence ()
specifier|public
name|void
name|testPresence
parameter_list|()
throws|throws
name|Exception
block|{
name|stubFor
argument_list|(
name|get
argument_list|(
name|urlPathEqualTo
argument_list|(
literal|"/v2/presence/sub-key/mySubscribeKey/channel/mychannel/heartbeat"
argument_list|)
argument_list|)
operator|.
name|willReturn
argument_list|(
name|aResponse
argument_list|()
operator|.
name|withBody
argument_list|(
literal|"{\"status\": 200, \"message\": \"OK\", \"service\": \"Presence\"}"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|stubFor
argument_list|(
name|get
argument_list|(
name|urlPathEqualTo
argument_list|(
literal|"/v2/subscribe/mySubscribeKey/mychannel,mychannel-pnpres/0"
argument_list|)
argument_list|)
operator|.
name|willReturn
argument_list|(
name|aResponse
argument_list|()
operator|.
name|withBody
argument_list|(
literal|"{\"t\":{\"t\":\"14637536741734954\",\"r\":1},\"m\":[{\"a\":\"4\",\"f\":512,\"p\":{\"t\":\"14637536740940378\",\"r\":1},\"k\":\"demo-36\",\"c\":\"mychannel-pnpres\","
operator|+
literal|"\"d\":{\"action\": \"join\", \"timestamp\": 1463753674, \"uuid\": \"24c9bb19-1fcd-4c40-a6f1-522a8a1329ef\", \"occupancy\": 3},\"b\":\"mychannel-pnpres\"},"
operator|+
literal|"{\"a\":\"4\",\"f\":512,\"p\":{\"t\":\"14637536741726901\",\"r\":1},\"k\":\"demo-36\",\"c\":\"mychannel-pnpres\",\"d\":{\"action\": \"state-change\", "
operator|+
literal|"\"timestamp\": 1463753674, \"data\": {\"state\": \"cool\"}, \"uuid\": \"24c9bb19-1fcd-4c40-a6f1-522a8a1329ef\", \"occupancy\": 3},\"b\":\"mychannel-pnpres\"}]}"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|startRoute
argument_list|(
literal|"presence-route"
argument_list|)
expr_stmt|;
name|mockResult
operator|.
name|expectedMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|mockResult
operator|.
name|expectedHeaderReceived
argument_list|(
name|PubNubConstants
operator|.
name|CHANNEL
argument_list|,
literal|"mychannel"
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
name|PNPresenceEventResult
name|presence
init|=
name|mockResult
operator|.
name|getReceivedExchanges
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|PNPresenceEventResult
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|presence
operator|.
name|getEvent
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"join"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|presence
operator|.
name|getOccupancy
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPresenceWithHereNowRefresh ()
specifier|public
name|void
name|testPresenceWithHereNowRefresh
parameter_list|()
throws|throws
name|Exception
block|{
name|stubFor
argument_list|(
name|get
argument_list|(
name|urlPathEqualTo
argument_list|(
literal|"/v2/presence/sub-key/mySubscribeKey/channel/mychannel/heartbeat"
argument_list|)
argument_list|)
operator|.
name|willReturn
argument_list|(
name|aResponse
argument_list|()
operator|.
name|withBody
argument_list|(
literal|"{\"status\": 200, \"message\": \"OK\", \"service\": \"Presence\"}"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|stubFor
argument_list|(
name|get
argument_list|(
name|urlPathEqualTo
argument_list|(
literal|"/v2/subscribe/mySubscribeKey/mychannel,mychannel-pnpres/0"
argument_list|)
argument_list|)
operator|.
name|willReturn
argument_list|(
name|aResponse
argument_list|()
operator|.
name|withBody
argument_list|(
literal|"{\"t\":{\"t\":\"14901247588021627\",\"r\":2},\"m\":[{\"a\":\"4\",\"f\":0,\"p\":{\"t\":\"14901247587675704\",\"r\":1},\"k\":\"demo-36\",\"c\":\"mychannel-pnpres\","
operator|+
literal|"\"d\":{\"action\": \"interval\", \"timestamp\": 1490124758, \"occupancy\": 2, \"here_now_refresh\": true, "
operator|+
literal|"\"join\": [\"2220E216-5A30-49AD-A89C-1E0B5AE26AD7\", \"4262AE3F-3202-4487-BEE0-1A0D91307DEB\"]},\"b\":\"mychannel-pnpres\"}]}"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|startRoute
argument_list|(
literal|"presence-route"
argument_list|)
expr_stmt|;
name|mockResult
operator|.
name|expectedMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
name|PNPresenceEventResult
name|presence
init|=
name|mockResult
operator|.
name|getReceivedExchanges
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|PNPresenceEventResult
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|presence
operator|.
name|getHereNowRefresh
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"pubnub:mychannel?pubnub=#pubnub&withPresence=true"
argument_list|)
operator|.
name|id
argument_list|(
literal|"presence-route"
argument_list|)
operator|.
name|autoStartup
argument_list|(
literal|false
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:result"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

