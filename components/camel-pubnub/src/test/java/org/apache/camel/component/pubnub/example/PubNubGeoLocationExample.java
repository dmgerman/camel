begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.component.pubnub.example
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pubnub
operator|.
name|example
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|main
operator|.
name|Main
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pubnub
operator|.
name|example
operator|.
name|PubNubExampleConstants
operator|.
name|PUBNUB_PUBLISH_KEY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|pubnub
operator|.
name|example
operator|.
name|PubNubExampleConstants
operator|.
name|PUBNUB_SUBSCRIBE_KEY
import|;
end_import

begin_comment
comment|/**  * Example of the use of GeoLocation Blocks https://www.pubnub.com/blocks-catalog/geolocation/  */
end_comment

begin_class
DECL|class|PubNubGeoLocationExample
specifier|public
class|class
name|PubNubGeoLocationExample
block|{
DECL|method|main (String[] args)
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|Main
name|main
init|=
operator|new
name|Main
argument_list|()
decl_stmt|;
name|main
operator|.
name|addRouteBuilder
argument_list|(
operator|new
name|GeoLocationRoute
argument_list|()
argument_list|)
expr_stmt|;
name|main
operator|.
name|run
argument_list|()
expr_stmt|;
block|}
DECL|class|GeoLocationRoute
specifier|static
class|class
name|GeoLocationRoute
extends|extends
name|RouteBuilder
block|{
annotation|@
name|Override
DECL|method|configure ()
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
literal|"timer:geotimer"
argument_list|)
operator|.
name|process
argument_list|(
name|exchange
lambda|->
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
operator|new
name|Foo
argument_list|(
literal|"bar"
argument_list|,
literal|"TEXT"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"pubnub:eon-maps-geolocation-input?operation=fire&publishKey="
operator|+
name|PUBNUB_PUBLISH_KEY
operator|+
literal|"&subscribeKey="
operator|+
name|PUBNUB_SUBSCRIBE_KEY
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"pubnub:eon-map-geolocation-output?subscribeKey="
operator|+
name|PUBNUB_SUBSCRIBE_KEY
argument_list|)
operator|.
name|log
argument_list|(
literal|"${body}"
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|Foo
specifier|static
class|class
name|Foo
block|{
DECL|field|foo
name|String
name|foo
decl_stmt|;
DECL|field|text
name|String
name|text
decl_stmt|;
DECL|method|Foo (String foo, String text)
specifier|public
name|Foo
parameter_list|(
name|String
name|foo
parameter_list|,
name|String
name|text
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|foo
operator|=
name|foo
expr_stmt|;
name|this
operator|.
name|text
operator|=
name|text
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

