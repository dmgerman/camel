begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.xmlsecurity
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|xmlsecurity
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyPair
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|crypto
operator|.
name|KeySelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|xmlsecurity
operator|.
name|api
operator|.
name|KeyAccessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|JndiRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spring
operator|.
name|SpringCamelContext
import|;
end_import

begin_class
DECL|class|SpringXmlSignatureTest
specifier|public
class|class
name|SpringXmlSignatureTest
extends|extends
name|XmlSignatureTest
block|{
DECL|field|rsaPair
specifier|private
specifier|static
name|KeyPair
name|rsaPair
decl_stmt|;
DECL|method|createCamelContext ()
specifier|protected
name|CamelContext
name|createCamelContext
parameter_list|()
throws|throws
name|Exception
block|{
name|rsaPair
operator|=
name|getKeyPair
argument_list|(
literal|"RSA"
argument_list|,
literal|1024
argument_list|)
expr_stmt|;
return|return
name|SpringCamelContext
operator|.
name|springCamelContext
argument_list|(
literal|"/org/apache/camel/component/xmlsecurity/SpringXmlSignatureTests.xml"
argument_list|)
return|;
block|}
DECL|method|getDsaKeyAccessor ()
specifier|public
specifier|static
name|KeyAccessor
name|getDsaKeyAccessor
parameter_list|()
block|{
return|return
name|getKeyAccessor
argument_list|(
name|getKeyPair
argument_list|(
literal|"DSA"
argument_list|,
literal|1024
argument_list|)
operator|.
name|getPrivate
argument_list|()
argument_list|)
return|;
block|}
DECL|method|getRsaKeyAccessor ()
specifier|public
specifier|static
name|KeyAccessor
name|getRsaKeyAccessor
parameter_list|()
block|{
return|return
name|getKeyAccessor
argument_list|(
name|rsaPair
operator|.
name|getPrivate
argument_list|()
argument_list|)
return|;
block|}
DECL|method|getDsaKeySelector ()
specifier|public
specifier|static
name|KeySelector
name|getDsaKeySelector
parameter_list|()
block|{
return|return
name|KeySelector
operator|.
name|singletonKeySelector
argument_list|(
name|getKeyPair
argument_list|(
literal|"DSA"
argument_list|,
literal|1024
argument_list|)
operator|.
name|getPublic
argument_list|()
argument_list|)
return|;
block|}
DECL|method|getRsaKeySelector ()
specifier|public
specifier|static
name|KeySelector
name|getRsaKeySelector
parameter_list|()
block|{
return|return
name|KeySelector
operator|.
name|singletonKeySelector
argument_list|(
name|rsaPair
operator|.
name|getPublic
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|createRegistry ()
specifier|protected
name|JndiRegistry
name|createRegistry
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|super
operator|.
name|createRegistry
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilders ()
specifier|protected
name|RouteBuilder
index|[]
name|createRouteBuilders
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
index|[]
block|{}
return|;
block|}
annotation|@
name|Override
DECL|method|getDetachedSignerEndpoint ()
name|XmlSignerEndpoint
name|getDetachedSignerEndpoint
parameter_list|()
block|{
name|XmlSignerEndpoint
name|endpoint
init|=
operator|(
name|XmlSignerEndpoint
operator|)
name|context
argument_list|()
operator|.
name|getEndpoint
argument_list|(
literal|"xmlsecurity:sign://detached?keyAccessor=#accessorRsa&xpathsToIdAttributes=#xpathsToIdAttributes&"
comment|//
operator|+
literal|"schemaResourceUri=org/apache/camel/component/xmlsecurity/Test.xsd&clearHeaders=false"
argument_list|)
decl_stmt|;
return|return
name|endpoint
return|;
block|}
block|}
end_class

end_unit

