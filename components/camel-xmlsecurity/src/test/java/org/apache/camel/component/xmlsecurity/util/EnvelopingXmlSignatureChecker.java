begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.xmlsecurity.util
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|xmlsecurity
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|crypto
operator|.
name|dsig
operator|.
name|CanonicalizationMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|xmlsecurity
operator|.
name|api
operator|.
name|XmlSignatureChecker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|xmlsecurity
operator|.
name|api
operator|.
name|XmlSignatureInvalidException
import|;
end_import

begin_comment
comment|/**  * Checks that root element local name is "Signature" and the root element  * namespace is "http://www.w3.org/2000/09/xmldsig#". If the checks fails then a  * {@link XmlSignatureInvalidException} is thrown.  */
end_comment

begin_class
DECL|class|EnvelopingXmlSignatureChecker
specifier|public
class|class
name|EnvelopingXmlSignatureChecker
implements|implements
name|XmlSignatureChecker
block|{
DECL|field|ALLOWED_TRANSFORM_ALGORITHMS
specifier|private
specifier|static
name|Set
argument_list|<
name|String
argument_list|>
name|ALLOWED_TRANSFORM_ALGORITHMS
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|(
literal|4
argument_list|)
decl_stmt|;
static|static
block|{
name|ALLOWED_TRANSFORM_ALGORITHMS
operator|.
name|add
argument_list|(
name|CanonicalizationMethod
operator|.
name|INCLUSIVE
argument_list|)
expr_stmt|;
name|ALLOWED_TRANSFORM_ALGORITHMS
operator|.
name|add
argument_list|(
name|CanonicalizationMethod
operator|.
name|INCLUSIVE_WITH_COMMENTS
argument_list|)
expr_stmt|;
name|ALLOWED_TRANSFORM_ALGORITHMS
operator|.
name|add
argument_list|(
name|CanonicalizationMethod
operator|.
name|EXCLUSIVE
argument_list|)
expr_stmt|;
name|ALLOWED_TRANSFORM_ALGORITHMS
operator|.
name|add
argument_list|(
name|CanonicalizationMethod
operator|.
name|EXCLUSIVE_WITH_COMMENTS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|checkBeforeCoreValidation (Input input)
specifier|public
name|void
name|checkBeforeCoreValidation
parameter_list|(
name|Input
name|input
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
operator|!
literal|"Signature"
operator|.
name|equals
argument_list|(
name|input
operator|.
name|getMessageBodyDocument
argument_list|()
operator|.
name|getDocumentElement
argument_list|()
operator|.
name|getLocalName
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|XmlSignatureInvalidException
argument_list|(
literal|"XML signature is not enveloping. Only enveloping XML signatures are allowed."
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

