begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.xmlsecurity.processor
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|xmlsecurity
operator|.
name|processor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|AccessController
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedAction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedExceptionAction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Security
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jcp
operator|.
name|xml
operator|.
name|dsig
operator|.
name|internal
operator|.
name|dom
operator|.
name|XMLDSigRI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xml
operator|.
name|security
operator|.
name|utils
operator|.
name|XMLUtils
import|;
end_import

begin_class
DECL|class|SantuarioUtil
specifier|public
specifier|final
class|class
name|SantuarioUtil
block|{
DECL|method|SantuarioUtil ()
specifier|private
name|SantuarioUtil
parameter_list|()
block|{
comment|//Helper class
block|}
DECL|method|initializeSantuario ()
specifier|public
specifier|static
name|void
name|initializeSantuario
parameter_list|()
block|{
comment|// Set ignoreLineBreaks to true
name|boolean
name|wasSet
init|=
literal|false
decl_stmt|;
try|try
block|{
comment|// Don't override if it was set explicitly
name|wasSet
operator|=
name|AccessController
operator|.
name|doPrivileged
argument_list|(
operator|new
name|PrivilegedAction
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
specifier|public
name|Boolean
name|run
parameter_list|()
block|{
name|String
name|lineBreakPropName
init|=
literal|"org.apache.xml.security.ignoreLineBreaks"
decl_stmt|;
if|if
condition|(
name|System
operator|.
name|getProperty
argument_list|(
name|lineBreakPropName
argument_list|)
operator|==
literal|null
condition|)
block|{
name|System
operator|.
name|setProperty
argument_list|(
name|lineBreakPropName
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
comment|//NOPMD
comment|//ignore
block|}
name|org
operator|.
name|apache
operator|.
name|xml
operator|.
name|security
operator|.
name|Init
operator|.
name|init
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|wasSet
condition|)
block|{
try|try
block|{
name|AccessController
operator|.
name|doPrivileged
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
specifier|public
name|Boolean
name|run
parameter_list|()
throws|throws
name|Exception
block|{
name|Field
name|f
init|=
name|XMLUtils
operator|.
name|class
operator|.
name|getDeclaredField
argument_list|(
literal|"ignoreLineBreaks"
argument_list|)
decl_stmt|;
name|f
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|f
operator|.
name|set
argument_list|(
literal|null
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
comment|//NOPMD
comment|//ignore
block|}
block|}
block|}
DECL|method|addSantuarioJSR105Provider ()
specifier|public
specifier|static
name|void
name|addSantuarioJSR105Provider
parameter_list|()
block|{
name|AccessController
operator|.
name|doPrivileged
argument_list|(
operator|new
name|PrivilegedAction
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
specifier|public
name|Boolean
name|run
parameter_list|()
block|{
name|String
name|providerName
init|=
literal|"ApacheXMLDSig"
decl_stmt|;
name|Provider
name|currentProvider
init|=
name|Security
operator|.
name|getProvider
argument_list|(
name|providerName
argument_list|)
decl_stmt|;
if|if
condition|(
name|currentProvider
operator|==
literal|null
condition|)
block|{
name|Security
operator|.
name|addProvider
argument_list|(
operator|new
name|XMLDSigRI
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

