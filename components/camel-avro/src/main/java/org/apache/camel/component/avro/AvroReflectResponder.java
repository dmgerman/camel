begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.avro
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|avro
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|Protocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|ipc
operator|.
name|reflect
operator|.
name|ReflectResponder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|reflect
operator|.
name|ReflectData
import|;
end_import

begin_class
DECL|class|AvroReflectResponder
specifier|public
class|class
name|AvroReflectResponder
extends|extends
name|ReflectResponder
block|{
DECL|field|listener
specifier|private
name|AvroListener
name|listener
decl_stmt|;
DECL|method|AvroReflectResponder (Protocol protocol, AvroListener listener)
specifier|public
name|AvroReflectResponder
parameter_list|(
name|Protocol
name|protocol
parameter_list|,
name|AvroListener
name|listener
parameter_list|)
throws|throws
name|Exception
block|{
name|super
argument_list|(
name|protocol
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|this
operator|.
name|listener
operator|=
name|listener
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|respond (Protocol.Message message, Object request)
specifier|public
name|Object
name|respond
parameter_list|(
name|Protocol
operator|.
name|Message
name|message
parameter_list|,
name|Object
name|request
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|listener
operator|.
name|respond
argument_list|(
name|message
argument_list|,
name|request
argument_list|,
name|ReflectData
operator|.
name|get
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

