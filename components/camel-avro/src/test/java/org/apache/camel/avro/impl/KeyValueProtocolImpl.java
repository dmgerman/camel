begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.avro.impl
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|avro
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|AvroRemoteException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|avro
operator|.
name|generated
operator|.
name|Key
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|avro
operator|.
name|generated
operator|.
name|KeyValueProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|avro
operator|.
name|generated
operator|.
name|Value
import|;
end_import

begin_class
DECL|class|KeyValueProtocolImpl
specifier|public
class|class
name|KeyValueProtocolImpl
implements|implements
name|KeyValueProtocol
block|{
DECL|field|store
specifier|private
name|Map
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
name|store
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|put (Key key, Value value)
specifier|public
name|Void
name|put
parameter_list|(
name|Key
name|key
parameter_list|,
name|Value
name|value
parameter_list|)
throws|throws
name|AvroRemoteException
block|{
name|store
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|get (Key key)
specifier|public
name|Value
name|get
parameter_list|(
name|Key
name|key
parameter_list|)
throws|throws
name|AvroRemoteException
block|{
return|return
name|store
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
DECL|method|getStore ()
specifier|public
name|Map
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
name|getStore
parameter_list|()
block|{
return|return
name|store
return|;
block|}
DECL|method|setStore (Map<Key, Value> store)
specifier|public
name|void
name|setStore
parameter_list|(
name|Map
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
name|store
parameter_list|)
block|{
name|this
operator|.
name|store
operator|=
name|store
expr_stmt|;
block|}
block|}
end_class

end_unit

