begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.avro
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|avro
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|AvailablePortFinder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_class
DECL|class|AvroTestSupport
specifier|public
class|class
name|AvroTestSupport
extends|extends
name|CamelTestSupport
block|{
DECL|field|port
specifier|protected
name|int
name|port
init|=
literal|9100
decl_stmt|;
DECL|field|avroPort
specifier|protected
name|int
name|avroPort
init|=
name|setupFreePort
argument_list|(
literal|"avroport"
argument_list|)
decl_stmt|;
DECL|field|avroPortReflection
specifier|protected
name|int
name|avroPortReflection
init|=
name|setupFreePort
argument_list|(
literal|"avroPortReflection"
argument_list|)
decl_stmt|;
DECL|method|setupFreePort (String name)
specifier|public
name|int
name|setupFreePort
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|port
operator|=
name|AvailablePortFinder
operator|.
name|getNextAvailable
argument_list|(
operator|++
name|port
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
name|name
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|port
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|port
return|;
block|}
annotation|@
name|Override
DECL|method|createCamelContext ()
specifier|protected
name|CamelContext
name|createCamelContext
parameter_list|()
throws|throws
name|Exception
block|{
name|CamelContext
name|context
init|=
name|super
operator|.
name|createCamelContext
argument_list|()
decl_stmt|;
name|AvroConfiguration
name|configuration
init|=
operator|new
name|AvroConfiguration
argument_list|()
decl_stmt|;
name|AvroComponent
name|component
init|=
operator|new
name|AvroComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|component
operator|.
name|setConfiguration
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
literal|"avro"
argument_list|,
name|component
argument_list|)
expr_stmt|;
return|return
name|context
return|;
block|}
block|}
end_class

end_unit

