begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.avro
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|avro
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|Protocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|ipc
operator|.
name|Requestor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|ipc
operator|.
name|Transceiver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|avro
operator|.
name|generated
operator|.
name|Key
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|avro
operator|.
name|generated
operator|.
name|KeyValueProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|avro
operator|.
name|generated
operator|.
name|Value
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|avro
operator|.
name|impl
operator|.
name|KeyValueProtocolImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|AvroConsumerTestSupport
specifier|public
specifier|abstract
class|class
name|AvroConsumerTestSupport
extends|extends
name|AvroTestSupport
block|{
DECL|field|transceiver
name|Transceiver
name|transceiver
decl_stmt|;
DECL|field|requestor
name|Requestor
name|requestor
decl_stmt|;
DECL|field|keyValue
name|KeyValueProtocolImpl
name|keyValue
init|=
operator|new
name|KeyValueProtocolImpl
argument_list|()
decl_stmt|;
DECL|method|initializeTranceiver ()
specifier|protected
specifier|abstract
name|void
name|initializeTranceiver
parameter_list|()
throws|throws
name|IOException
function_decl|;
annotation|@
name|Override
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
if|if
condition|(
name|transceiver
operator|!=
literal|null
condition|)
block|{
name|transceiver
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testInOnly ()
specifier|public
name|void
name|testInOnly
parameter_list|()
throws|throws
name|Exception
block|{
name|initializeTranceiver
argument_list|()
expr_stmt|;
name|Key
name|key
init|=
name|Key
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKey
argument_list|(
literal|"1"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Value
name|value
init|=
name|Value
operator|.
name|newBuilder
argument_list|()
operator|.
name|setValue
argument_list|(
literal|"test value"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Object
index|[]
name|request
init|=
block|{
name|key
block|,
name|value
block|}
decl_stmt|;
name|requestor
operator|.
name|request
argument_list|(
literal|"put"
argument_list|,
name|request
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testInOut ()
specifier|public
name|void
name|testInOut
parameter_list|()
throws|throws
name|Exception
block|{
name|initializeTranceiver
argument_list|()
expr_stmt|;
name|keyValue
operator|.
name|getStore
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|Key
name|key
init|=
name|Key
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKey
argument_list|(
literal|"2"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Value
name|value
init|=
name|Value
operator|.
name|newBuilder
argument_list|()
operator|.
name|setValue
argument_list|(
literal|"test value"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|keyValue
operator|.
name|getStore
argument_list|()
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|Object
index|[]
name|request
init|=
block|{
name|key
block|}
decl_stmt|;
name|Object
name|response
init|=
name|requestor
operator|.
name|request
argument_list|(
literal|"get"
argument_list|,
name|request
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|value
argument_list|,
name|response
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createCamelContext ()
specifier|protected
name|CamelContext
name|createCamelContext
parameter_list|()
throws|throws
name|Exception
block|{
name|CamelContext
name|context
init|=
name|super
operator|.
name|createCamelContext
argument_list|()
decl_stmt|;
name|Protocol
name|protocol
init|=
name|KeyValueProtocol
operator|.
name|PROTOCOL
decl_stmt|;
name|AvroConfiguration
name|configuration
init|=
operator|new
name|AvroConfiguration
argument_list|()
decl_stmt|;
name|configuration
operator|.
name|setProtocol
argument_list|(
name|protocol
argument_list|)
expr_stmt|;
name|AvroComponent
name|component
init|=
operator|new
name|AvroComponent
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|component
operator|.
name|setConfiguration
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|context
operator|.
name|addComponent
argument_list|(
literal|"avro"
argument_list|,
name|component
argument_list|)
expr_stmt|;
return|return
name|context
return|;
block|}
block|}
end_class

end_unit

