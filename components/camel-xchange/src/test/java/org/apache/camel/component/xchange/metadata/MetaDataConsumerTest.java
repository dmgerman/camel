begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.xchange.metadata
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|xchange
operator|.
name|metadata
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|xchange
operator|.
name|XChangeConfiguration
operator|.
name|HEADER_CURRENCY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|xchange
operator|.
name|XChangeConfiguration
operator|.
name|HEADER_CURRENCY_PAIR
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|knowm
operator|.
name|xchange
operator|.
name|currency
operator|.
name|Currency
import|;
end_import

begin_import
import|import
name|org
operator|.
name|knowm
operator|.
name|xchange
operator|.
name|currency
operator|.
name|CurrencyPair
import|;
end_import

begin_import
import|import
name|org
operator|.
name|knowm
operator|.
name|xchange
operator|.
name|dto
operator|.
name|meta
operator|.
name|CurrencyMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|knowm
operator|.
name|xchange
operator|.
name|dto
operator|.
name|meta
operator|.
name|CurrencyPairMetaData
import|;
end_import

begin_class
DECL|class|MetaDataConsumerTest
specifier|public
class|class
name|MetaDataConsumerTest
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
literal|"direct:currencies"
argument_list|)
operator|.
name|to
argument_list|(
literal|"xchange:binance?service=metadata&method=currencies"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:currencyMetaData"
argument_list|)
operator|.
name|to
argument_list|(
literal|"xchange:binance?service=metadata&method=currencyMetaData"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:currencyPairs"
argument_list|)
operator|.
name|to
argument_list|(
literal|"xchange:binance?service=metadata&method=currencyPairs"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:currencyPairMetaData"
argument_list|)
operator|.
name|to
argument_list|(
literal|"xchange:binance?service=metadata&method=currencyPairMetaData"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
annotation|@
name|Test
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|testCurrencies ()
specifier|public
name|void
name|testCurrencies
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Currency
argument_list|>
name|currencies
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:currencies"
argument_list|,
literal|null
argument_list|,
name|List
operator|.
name|class
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
literal|"Currencies not null"
argument_list|,
name|currencies
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Contains ETH"
argument_list|,
name|currencies
operator|.
name|contains
argument_list|(
name|Currency
operator|.
name|ETH
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCurrencyMetaData ()
specifier|public
name|void
name|testCurrencyMetaData
parameter_list|()
throws|throws
name|Exception
block|{
name|CurrencyMetaData
name|metadata
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:currencyMetaData"
argument_list|,
name|Currency
operator|.
name|ETH
argument_list|,
name|CurrencyMetaData
operator|.
name|class
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
literal|"CurrencyMetaData not null"
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|metadata
operator|=
name|template
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"direct:currencyMetaData"
argument_list|,
literal|null
argument_list|,
name|HEADER_CURRENCY
argument_list|,
name|Currency
operator|.
name|ETH
argument_list|,
name|CurrencyMetaData
operator|.
name|class
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
literal|"CurrencyMetaData not null"
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|testCurrencyPairs ()
specifier|public
name|void
name|testCurrencyPairs
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|CurrencyPair
argument_list|>
name|pairs
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:currencyPairs"
argument_list|,
literal|null
argument_list|,
name|List
operator|.
name|class
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
literal|"Pairs not null"
argument_list|,
name|pairs
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Contains EOS/ETH"
argument_list|,
name|pairs
operator|.
name|contains
argument_list|(
name|CurrencyPair
operator|.
name|EOS_ETH
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCurrencyPairMetaData ()
specifier|public
name|void
name|testCurrencyPairMetaData
parameter_list|()
throws|throws
name|Exception
block|{
name|CurrencyPairMetaData
name|metadata
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:currencyPairMetaData"
argument_list|,
name|CurrencyPair
operator|.
name|EOS_ETH
argument_list|,
name|CurrencyPairMetaData
operator|.
name|class
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
literal|"CurrencyPairMetaData not null"
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|metadata
operator|=
name|template
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"direct:currencyPairMetaData"
argument_list|,
literal|null
argument_list|,
name|HEADER_CURRENCY_PAIR
argument_list|,
name|CurrencyPair
operator|.
name|EOS_ETH
argument_list|,
name|CurrencyPairMetaData
operator|.
name|class
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
literal|"CurrencyPairMetaData not null"
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

