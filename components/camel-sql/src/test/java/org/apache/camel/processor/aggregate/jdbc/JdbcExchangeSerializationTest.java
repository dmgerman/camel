begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.processor.aggregate.jdbc
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|aggregate
operator|.
name|jdbc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|DefaultExchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|JdbcExchangeSerializationTest
specifier|public
class|class
name|JdbcExchangeSerializationTest
extends|extends
name|AbstractJdbcAggregationTestSupport
block|{
annotation|@
name|Test
DECL|method|testExchangeSerialization ()
specifier|public
name|void
name|testExchangeSerialization
parameter_list|()
block|{
name|Exchange
name|exchange
init|=
operator|new
name|DefaultExchange
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"Hello World"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"name"
argument_list|,
literal|"Olivier"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"number"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|setProperty
argument_list|(
literal|"quote"
argument_list|,
literal|"Camel rocks"
argument_list|)
expr_stmt|;
name|Date
name|now
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"date"
argument_list|,
name|now
argument_list|)
expr_stmt|;
name|repo
operator|.
name|add
argument_list|(
name|context
argument_list|,
literal|"foo"
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
name|Exchange
name|actual
init|=
name|repo
operator|.
name|get
argument_list|(
name|context
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Hello World"
argument_list|,
name|actual
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Olivier"
argument_list|,
name|actual
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|actual
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
literal|"number"
argument_list|)
argument_list|)
expr_stmt|;
name|Date
name|date
init|=
name|actual
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
literal|"date"
argument_list|,
name|Date
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|date
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|now
operator|.
name|getTime
argument_list|()
argument_list|,
name|date
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// we do not serialize properties to avoid storing all kind of not needed information
name|assertNull
argument_list|(
name|actual
operator|.
name|getProperty
argument_list|(
literal|"quote"
argument_list|)
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
argument_list|,
name|actual
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
comment|// change something
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"Bye World"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"name"
argument_list|,
literal|"Thomas"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|removeHeader
argument_list|(
literal|"date"
argument_list|)
expr_stmt|;
name|repo
operator|.
name|add
argument_list|(
name|context
argument_list|,
literal|"foo"
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
name|actual
operator|=
name|repo
operator|.
name|get
argument_list|(
name|context
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Bye World"
argument_list|,
name|actual
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Thomas"
argument_list|,
name|actual
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|actual
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
literal|"number"
argument_list|)
argument_list|)
expr_stmt|;
name|date
operator|=
name|actual
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
literal|"date"
argument_list|,
name|Date
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|date
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
argument_list|,
name|actual
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

