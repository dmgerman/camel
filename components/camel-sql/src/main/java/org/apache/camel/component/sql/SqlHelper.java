begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.sql
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sql
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|NoTypeConversionAvailableException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ResourceHelper
import|;
end_import

begin_class
DECL|class|SqlHelper
specifier|public
specifier|final
class|class
name|SqlHelper
block|{
DECL|method|SqlHelper ()
specifier|private
name|SqlHelper
parameter_list|()
block|{     }
comment|/**      * Resolve the query by loading the query from the classpath or file resource if needed.      */
DECL|method|resolveQuery (CamelContext camelContext, String query, String placeholder)
specifier|public
specifier|static
name|String
name|resolveQuery
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|,
name|String
name|query
parameter_list|,
name|String
name|placeholder
parameter_list|)
throws|throws
name|NoTypeConversionAvailableException
throws|,
name|IOException
block|{
name|String
name|answer
init|=
name|query
decl_stmt|;
if|if
condition|(
name|ResourceHelper
operator|.
name|hasScheme
argument_list|(
name|query
argument_list|)
condition|)
block|{
name|InputStream
name|is
init|=
name|ResourceHelper
operator|.
name|resolveMandatoryResourceAsInputStream
argument_list|(
name|camelContext
argument_list|,
name|query
argument_list|)
decl_stmt|;
name|answer
operator|=
name|camelContext
operator|.
name|getTypeConverter
argument_list|()
operator|.
name|mandatoryConvertTo
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|is
argument_list|)
expr_stmt|;
if|if
condition|(
name|placeholder
operator|!=
literal|null
condition|)
block|{
name|answer
operator|=
name|answer
operator|.
name|replaceAll
argument_list|(
name|placeholder
argument_list|,
literal|"?"
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|answer
return|;
block|}
block|}
end_class

end_unit

