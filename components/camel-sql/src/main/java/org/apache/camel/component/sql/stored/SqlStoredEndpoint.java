begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.component.sql.stored
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sql
operator|.
name|stored
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Producer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sql
operator|.
name|stored
operator|.
name|template
operator|.
name|TemplateStoredProcedureFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultPollingEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|UriPath
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sql
operator|.
name|DataSource
import|;
end_import

begin_class
annotation|@
name|UriEndpoint
argument_list|(
name|scheme
operator|=
literal|"sql-stored"
argument_list|,
name|title
operator|=
literal|"SQL stored"
argument_list|,
name|syntax
operator|=
literal|"sql-stored:template"
argument_list|,
name|label
operator|=
literal|"database,sql"
argument_list|)
DECL|class|SqlStoredEndpoint
specifier|public
class|class
name|SqlStoredEndpoint
extends|extends
name|DefaultPollingEndpoint
block|{
annotation|@
name|UriPath
argument_list|(
name|description
operator|=
literal|"Sets the stored procedure template to perform"
argument_list|)
annotation|@
name|Metadata
argument_list|(
name|required
operator|=
literal|"true"
argument_list|)
DECL|field|template
specifier|private
name|String
name|template
decl_stmt|;
DECL|field|templateStoredProcedureFactory
specifier|private
specifier|final
name|TemplateStoredProcedureFactory
name|templateStoredProcedureFactory
decl_stmt|;
DECL|field|dataSource
specifier|private
specifier|final
name|DataSource
name|dataSource
decl_stmt|;
DECL|method|SqlStoredEndpoint (TemplateStoredProcedureFactory templateStoredProcedureFactory, DataSource dataSource, String template)
specifier|public
name|SqlStoredEndpoint
parameter_list|(
name|TemplateStoredProcedureFactory
name|templateStoredProcedureFactory
parameter_list|,
name|DataSource
name|dataSource
parameter_list|,
name|String
name|template
parameter_list|)
block|{
name|this
operator|.
name|templateStoredProcedureFactory
operator|=
name|templateStoredProcedureFactory
expr_stmt|;
name|this
operator|.
name|dataSource
operator|=
name|dataSource
expr_stmt|;
name|this
operator|.
name|template
operator|=
name|template
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createProducer ()
specifier|public
name|Producer
name|createProducer
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|SqlStoredProducer
argument_list|(
name|this
argument_list|,
name|templateStoredProcedureFactory
operator|.
name|createFromString
argument_list|(
name|template
argument_list|,
name|dataSource
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|isSingleton ()
specifier|public
name|boolean
name|isSingleton
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|createEndpointUri ()
specifier|protected
name|String
name|createEndpointUri
parameter_list|()
block|{
return|return
literal|"sql-stored:"
operator|+
name|template
return|;
block|}
block|}
end_class

end_unit

