begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.component.sql.stored.template
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sql
operator|.
name|stored
operator|.
name|template
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sql
operator|.
name|stored
operator|.
name|template
operator|.
name|ast
operator|.
name|ParseRuntimeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sql
operator|.
name|stored
operator|.
name|template
operator|.
name|ast
operator|.
name|Template
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sql
operator|.
name|stored
operator|.
name|template
operator|.
name|generated
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|sql
operator|.
name|stored
operator|.
name|template
operator|.
name|generated
operator|.
name|SSPTParser
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sql
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_class
DECL|class|TemplateStoredProcedureFactory
specifier|public
class|class
name|TemplateStoredProcedureFactory
block|{
DECL|method|createFromString (String string, DataSource dataSource)
specifier|public
name|TemplateStoredProcedure
name|createFromString
parameter_list|(
name|String
name|string
parameter_list|,
name|DataSource
name|dataSource
parameter_list|)
block|{
name|Template
name|sptpRootNode
init|=
name|parseTemplate
argument_list|(
name|string
argument_list|)
decl_stmt|;
return|return
operator|new
name|TemplateStoredProcedure
argument_list|(
name|dataSource
argument_list|,
name|sptpRootNode
argument_list|)
return|;
block|}
DECL|method|parseTemplate (String template)
specifier|public
name|Template
name|parseTemplate
parameter_list|(
name|String
name|template
parameter_list|)
block|{
try|try
block|{
name|SSPTParser
name|parser
init|=
operator|new
name|SSPTParser
argument_list|(
operator|new
name|StringReader
argument_list|(
name|template
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|validate
argument_list|(
name|parser
operator|.
name|parse
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ParseException
name|parseException
parameter_list|)
block|{
throw|throw
operator|new
name|ParseRuntimeException
argument_list|(
name|parseException
argument_list|)
throw|;
block|}
block|}
DECL|method|validate (Template input)
specifier|private
name|Template
name|validate
parameter_list|(
name|Template
name|input
parameter_list|)
block|{
if|if
condition|(
name|input
operator|.
name|getOutParameterList
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|ParseRuntimeException
argument_list|(
literal|"At least one OUT parameter must be given."
argument_list|)
throw|;
block|}
return|return
name|input
return|;
block|}
block|}
end_class

end_unit

