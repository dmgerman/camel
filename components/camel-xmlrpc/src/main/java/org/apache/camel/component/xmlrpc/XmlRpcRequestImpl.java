begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.xmlrpc
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|xmlrpc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlrpc
operator|.
name|XmlRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlrpc
operator|.
name|XmlRpcRequestConfig
import|;
end_import

begin_class
DECL|class|XmlRpcRequestImpl
specifier|public
class|class
name|XmlRpcRequestImpl
implements|implements
name|XmlRpcRequest
block|{
DECL|field|ZERO_PARAMS
specifier|private
specifier|static
specifier|final
name|Object
index|[]
name|ZERO_PARAMS
init|=
operator|new
name|Object
index|[
literal|0
index|]
decl_stmt|;
DECL|field|methodName
specifier|private
specifier|final
name|String
name|methodName
decl_stmt|;
DECL|field|params
specifier|private
specifier|final
name|Object
index|[]
name|params
decl_stmt|;
DECL|method|XmlRpcRequestImpl (String pMethodName, Object[] pParams)
specifier|public
name|XmlRpcRequestImpl
parameter_list|(
name|String
name|pMethodName
parameter_list|,
name|Object
index|[]
name|pParams
parameter_list|)
block|{
name|methodName
operator|=
name|pMethodName
expr_stmt|;
if|if
condition|(
name|methodName
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|(
literal|"The method name must not be null."
argument_list|)
throw|;
block|}
name|params
operator|=
name|pParams
operator|==
literal|null
condition|?
name|ZERO_PARAMS
else|:
name|pParams
expr_stmt|;
block|}
DECL|method|XmlRpcRequestImpl (String pMethodName, List<?> pParams)
specifier|public
name|XmlRpcRequestImpl
parameter_list|(
name|String
name|pMethodName
parameter_list|,
name|List
argument_list|<
name|?
argument_list|>
name|pParams
parameter_list|)
block|{
name|this
argument_list|(
name|pMethodName
argument_list|,
name|pParams
operator|==
literal|null
condition|?
literal|null
else|:
name|pParams
operator|.
name|toArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// we don't want to use the config here
DECL|method|getConfig ()
specifier|public
name|XmlRpcRequestConfig
name|getConfig
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
DECL|method|getMethodName ()
specifier|public
name|String
name|getMethodName
parameter_list|()
block|{
return|return
name|methodName
return|;
block|}
DECL|method|getParameterCount ()
specifier|public
name|int
name|getParameterCount
parameter_list|()
block|{
return|return
name|params
operator|.
name|length
return|;
block|}
DECL|method|getParameter (int pIndex)
specifier|public
name|Object
name|getParameter
parameter_list|(
name|int
name|pIndex
parameter_list|)
block|{
return|return
name|params
index|[
name|pIndex
index|]
return|;
block|}
block|}
end_class

end_unit

