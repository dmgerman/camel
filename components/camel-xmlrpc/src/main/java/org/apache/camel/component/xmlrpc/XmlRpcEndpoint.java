begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.xmlrpc
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|xmlrpc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Consumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Producer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|SynchronousDelegateProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlrpc
operator|.
name|client
operator|.
name|XmlRpcClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlrpc
operator|.
name|client
operator|.
name|XmlRpcClientConfigImpl
import|;
end_import

begin_comment
comment|/**  * Represents a xmlrpc endpoint.  */
end_comment

begin_class
DECL|class|XmlRpcEndpoint
specifier|public
class|class
name|XmlRpcEndpoint
extends|extends
name|DefaultEndpoint
block|{
DECL|field|address
specifier|private
name|String
name|address
decl_stmt|;
DECL|field|clientConfigurer
specifier|private
name|XmlRpcClientConfigurer
name|clientConfigurer
decl_stmt|;
DECL|field|clientConfig
specifier|private
name|XmlRpcClientConfigImpl
name|clientConfig
init|=
operator|new
name|XmlRpcClientConfigImpl
argument_list|()
decl_stmt|;
DECL|method|XmlRpcEndpoint ()
specifier|public
name|XmlRpcEndpoint
parameter_list|()
block|{     }
DECL|method|XmlRpcEndpoint (String uri, XmlRpcComponent component, String address)
specifier|public
name|XmlRpcEndpoint
parameter_list|(
name|String
name|uri
parameter_list|,
name|XmlRpcComponent
name|component
parameter_list|,
name|String
name|address
parameter_list|)
block|{
name|super
argument_list|(
name|uri
argument_list|,
name|component
argument_list|)
expr_stmt|;
name|this
operator|.
name|setAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
block|}
DECL|method|createProducer ()
specifier|public
name|Producer
name|createProducer
parameter_list|()
throws|throws
name|Exception
block|{
name|Producer
name|answer
init|=
operator|new
name|XmlRpcProducer
argument_list|(
name|this
argument_list|)
decl_stmt|;
if|if
condition|(
name|isSynchronous
argument_list|()
condition|)
block|{
return|return
operator|new
name|SynchronousDelegateProducer
argument_list|(
name|answer
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|answer
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|createConsumer (Processor processor)
specifier|public
name|Consumer
name|createConsumer
parameter_list|(
name|Processor
name|processor
parameter_list|)
throws|throws
name|Exception
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"This component does not support consuming from this endpoint"
argument_list|)
throw|;
block|}
DECL|method|isSingleton ()
specifier|public
name|boolean
name|isSingleton
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
DECL|method|createClient ()
specifier|public
name|XmlRpcClient
name|createClient
parameter_list|()
throws|throws
name|MalformedURLException
block|{
name|XmlRpcClient
name|client
init|=
operator|new
name|XmlRpcClient
argument_list|()
decl_stmt|;
comment|// setup the client with the configuration from the XmlRpcEndpoint
name|XmlRpcClientConfigImpl
name|config
init|=
name|clientConfig
operator|.
name|cloneMe
argument_list|()
decl_stmt|;
comment|// setup the server url
name|config
operator|.
name|setServerURL
argument_list|(
operator|new
name|URL
argument_list|(
name|getAddress
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|setConfig
argument_list|(
name|config
argument_list|)
expr_stmt|;
if|if
condition|(
name|clientConfigurer
operator|!=
literal|null
condition|)
block|{
name|clientConfigurer
operator|.
name|configureXmlRpcClient
argument_list|(
name|client
argument_list|)
expr_stmt|;
block|}
return|return
name|client
return|;
block|}
DECL|method|getAddress ()
specifier|public
name|String
name|getAddress
parameter_list|()
block|{
return|return
name|address
return|;
block|}
DECL|method|setAddress (String address)
specifier|public
name|void
name|setAddress
parameter_list|(
name|String
name|address
parameter_list|)
block|{
name|this
operator|.
name|address
operator|=
name|address
expr_stmt|;
block|}
DECL|method|getClientConfigurer ()
specifier|public
name|XmlRpcClientConfigurer
name|getClientConfigurer
parameter_list|()
block|{
return|return
name|clientConfigurer
return|;
block|}
DECL|method|setClientConfigurer (XmlRpcClientConfigurer configurer)
specifier|public
name|void
name|setClientConfigurer
parameter_list|(
name|XmlRpcClientConfigurer
name|configurer
parameter_list|)
block|{
name|this
operator|.
name|clientConfigurer
operator|=
name|configurer
expr_stmt|;
block|}
DECL|method|setClientConfig (XmlRpcClientConfigImpl config)
specifier|public
name|void
name|setClientConfig
parameter_list|(
name|XmlRpcClientConfigImpl
name|config
parameter_list|)
block|{
name|this
operator|.
name|clientConfig
operator|=
name|config
expr_stmt|;
block|}
DECL|method|getClientConfig ()
specifier|public
name|XmlRpcClientConfigImpl
name|getClientConfig
parameter_list|()
block|{
return|return
name|clientConfig
return|;
block|}
block|}
end_class

end_unit

