begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.facebook
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|facebook
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|facebook
operator|.
name|config
operator|.
name|FacebookConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|facebook
operator|.
name|config
operator|.
name|FacebookEndpointConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|UriEndpointComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|IntrospectionSupport
import|;
end_import

begin_comment
comment|/**  * Represents the component that manages {@link FacebookEndpoint}.  */
end_comment

begin_class
DECL|class|FacebookComponent
specifier|public
class|class
name|FacebookComponent
extends|extends
name|UriEndpointComponent
block|{
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"advanced"
argument_list|)
DECL|field|configuration
specifier|private
name|FacebookConfiguration
name|configuration
decl_stmt|;
DECL|method|FacebookComponent ()
specifier|public
name|FacebookComponent
parameter_list|()
block|{
name|this
argument_list|(
operator|new
name|FacebookConfiguration
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|FacebookComponent (FacebookConfiguration configuration)
specifier|public
name|FacebookComponent
parameter_list|(
name|FacebookConfiguration
name|configuration
parameter_list|)
block|{
name|this
argument_list|(
literal|null
argument_list|,
name|configuration
argument_list|)
expr_stmt|;
block|}
DECL|method|FacebookComponent (CamelContext context)
specifier|public
name|FacebookComponent
parameter_list|(
name|CamelContext
name|context
parameter_list|)
block|{
name|this
argument_list|(
name|context
argument_list|,
operator|new
name|FacebookConfiguration
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|FacebookComponent (CamelContext context, FacebookConfiguration configuration)
specifier|public
name|FacebookComponent
parameter_list|(
name|CamelContext
name|context
parameter_list|,
name|FacebookConfiguration
name|configuration
parameter_list|)
block|{
name|super
argument_list|(
name|context
argument_list|,
name|FacebookEndpoint
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
block|}
DECL|method|createEndpoint (String uri, String remaining, Map<String, Object> parameters)
specifier|protected
name|Endpoint
name|createEndpoint
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|remaining
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|parameters
parameter_list|)
throws|throws
name|Exception
block|{
name|FacebookEndpointConfiguration
name|config
init|=
name|copyComponentProperties
argument_list|()
decl_stmt|;
specifier|final
name|FacebookEndpoint
name|endpoint
init|=
operator|new
name|FacebookEndpoint
argument_list|(
name|uri
argument_list|,
name|this
argument_list|,
name|remaining
argument_list|,
name|config
argument_list|)
decl_stmt|;
comment|// set endpoint property inBody so that it's available in initState()
name|setProperties
argument_list|(
name|endpoint
argument_list|,
name|parameters
argument_list|)
expr_stmt|;
comment|// configure endpoint properties
name|endpoint
operator|.
name|configureProperties
argument_list|(
name|parameters
argument_list|)
expr_stmt|;
comment|// validate parameters
name|validateParameters
argument_list|(
name|uri
argument_list|,
name|parameters
argument_list|,
literal|null
argument_list|)
expr_stmt|;
return|return
name|endpoint
return|;
block|}
DECL|method|copyComponentProperties ()
specifier|private
name|FacebookEndpointConfiguration
name|copyComponentProperties
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|componentProperties
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|IntrospectionSupport
operator|.
name|getProperties
argument_list|(
name|configuration
argument_list|,
name|componentProperties
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// create endpoint configuration with component properties
name|FacebookEndpointConfiguration
name|config
init|=
operator|new
name|FacebookEndpointConfiguration
argument_list|()
decl_stmt|;
name|IntrospectionSupport
operator|.
name|setProperties
argument_list|(
name|config
argument_list|,
name|componentProperties
argument_list|)
expr_stmt|;
return|return
name|config
return|;
block|}
DECL|method|getConfiguration ()
specifier|public
name|FacebookConfiguration
name|getConfiguration
parameter_list|()
block|{
return|return
name|configuration
return|;
block|}
comment|/**      * To use the shared configuration      */
DECL|method|setConfiguration (FacebookConfiguration configuration)
specifier|public
name|void
name|setConfiguration
parameter_list|(
name|FacebookConfiguration
name|configuration
parameter_list|)
block|{
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
block|}
block|}
end_class

end_unit

