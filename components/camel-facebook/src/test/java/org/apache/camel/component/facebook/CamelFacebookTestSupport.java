begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.facebook
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|facebook
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|facebook
operator|.
name|config
operator|.
name|FacebookConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|PropertyBindingSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_class
DECL|class|CamelFacebookTestSupport
specifier|public
specifier|abstract
class|class
name|CamelFacebookTestSupport
extends|extends
name|CamelTestSupport
block|{
DECL|field|properties
specifier|protected
name|Properties
name|properties
decl_stmt|;
DECL|field|configuration
specifier|protected
name|FacebookConfiguration
name|configuration
decl_stmt|;
DECL|method|loadProperties (CamelContext context)
specifier|protected
name|void
name|loadProperties
parameter_list|(
name|CamelContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
name|URL
name|url
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/test-options.properties"
argument_list|)
decl_stmt|;
name|InputStream
name|inStream
init|=
name|url
operator|.
name|openStream
argument_list|()
decl_stmt|;
name|properties
operator|=
operator|new
name|Properties
argument_list|()
expr_stmt|;
name|properties
operator|.
name|load
argument_list|(
name|inStream
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|options
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|entry
range|:
name|properties
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|options
operator|.
name|put
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|configuration
operator|=
operator|new
name|FacebookConfiguration
argument_list|()
expr_stmt|;
name|PropertyBindingSupport
operator|.
name|bindProperties
argument_list|(
name|context
argument_list|,
name|configuration
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createCamelContext ()
specifier|protected
name|CamelContext
name|createCamelContext
parameter_list|()
throws|throws
name|Exception
block|{
name|CamelContext
name|context
init|=
name|super
operator|.
name|createCamelContext
argument_list|()
decl_stmt|;
name|loadProperties
argument_list|(
name|context
argument_list|)
expr_stmt|;
return|return
name|context
return|;
block|}
DECL|method|getConfiguration ()
specifier|protected
name|FacebookConfiguration
name|getConfiguration
parameter_list|()
block|{
return|return
name|configuration
return|;
block|}
DECL|method|getOauthParams ()
specifier|protected
name|String
name|getOauthParams
parameter_list|()
block|{
return|return
literal|"oAuthAppId="
operator|+
name|properties
operator|.
name|get
argument_list|(
literal|"oAuthAppId"
argument_list|)
operator|+
literal|"&oAuthAppSecret="
operator|+
name|properties
operator|.
name|get
argument_list|(
literal|"oAuthAppSecret"
argument_list|)
operator|+
operator|(
name|properties
operator|.
name|get
argument_list|(
literal|"oAuthAccessToken"
argument_list|)
operator|!=
literal|null
condition|?
operator|(
literal|"&oAuthAccessToken="
operator|+
name|properties
operator|.
name|get
argument_list|(
literal|"oAuthAccessToken"
argument_list|)
operator|)
else|:
literal|""
operator|)
return|;
block|}
DECL|method|getAppOauthParams ()
specifier|protected
name|String
name|getAppOauthParams
parameter_list|()
block|{
return|return
literal|"oAuthAppId="
operator|+
name|properties
operator|.
name|get
argument_list|(
literal|"oAuthAppId"
argument_list|)
operator|+
literal|"&oAuthAppSecret="
operator|+
name|properties
operator|.
name|get
argument_list|(
literal|"oAuthAppSecret"
argument_list|)
return|;
block|}
DECL|method|getShortName (String name)
specifier|protected
name|String
name|getShortName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
name|name
operator|.
name|startsWith
argument_list|(
literal|"get"
argument_list|)
condition|)
block|{
name|name
operator|=
name|Character
operator|.
name|toLowerCase
argument_list|(
name|name
operator|.
name|charAt
argument_list|(
literal|3
argument_list|)
argument_list|)
operator|+
name|name
operator|.
name|substring
argument_list|(
literal|4
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|name
operator|.
name|startsWith
argument_list|(
literal|"search"
argument_list|)
operator|&&
operator|!
literal|"search"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|name
operator|=
name|Character
operator|.
name|toLowerCase
argument_list|(
name|name
operator|.
name|charAt
argument_list|(
literal|6
argument_list|)
argument_list|)
operator|+
name|name
operator|.
name|substring
argument_list|(
literal|7
argument_list|)
expr_stmt|;
block|}
return|return
name|name
return|;
block|}
block|}
end_class

end_unit

