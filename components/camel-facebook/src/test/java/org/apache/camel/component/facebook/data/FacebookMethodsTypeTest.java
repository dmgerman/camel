begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.facebook.data
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|facebook
operator|.
name|data
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import
name|facebook4j
operator|.
name|Facebook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test that all *Methods methods are mapped in {@link FacebookMethodsType}.  */
end_comment

begin_class
DECL|class|FacebookMethodsTypeTest
specifier|public
class|class
name|FacebookMethodsTypeTest
block|{
annotation|@
name|Test
DECL|method|areAllMethodsMapped ()
specifier|public
name|void
name|areAllMethodsMapped
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|interfaces
init|=
name|Facebook
operator|.
name|class
operator|.
name|getInterfaces
argument_list|()
decl_stmt|;
for|for
control|(
name|Class
name|clazz
range|:
name|interfaces
control|)
block|{
if|if
condition|(
name|clazz
operator|.
name|getName
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|"Methods"
argument_list|)
condition|)
block|{
comment|// check all methods of this *Methods interface
for|for
control|(
name|Method
name|method
range|:
name|clazz
operator|.
name|getDeclaredMethods
argument_list|()
control|)
block|{
specifier|final
name|FacebookMethodsType
name|methodsType
init|=
name|FacebookMethodsType
operator|.
name|findMethod
argument_list|(
name|method
operator|.
name|getName
argument_list|()
argument_list|,
name|method
operator|.
name|getParameterTypes
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|methodsType
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Methods are not equal"
argument_list|,
name|method
argument_list|,
name|methodsType
operator|.
name|getMethod
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

