begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *<p/>  * http://www.apache.org/licenses/LICENSE-2.0  *<p/>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.facebook
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|facebook
package|;
end_package

begin_import
import|import
name|facebook4j
operator|.
name|Post
import|;
end_import

begin_import
import|import
name|facebook4j
operator|.
name|ResponseList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|FacebookComponentPageIdProducerTest
specifier|public
class|class
name|FacebookComponentPageIdProducerTest
extends|extends
name|CamelFacebookTestSupport
block|{
DECL|field|APACHE_FOUNDATION_PAGE_ID
specifier|public
specifier|static
specifier|final
name|String
name|APACHE_FOUNDATION_PAGE_ID
init|=
literal|"6538157161"
decl_stmt|;
DECL|method|FacebookComponentPageIdProducerTest ()
specifier|public
name|FacebookComponentPageIdProducerTest
parameter_list|()
throws|throws
name|Exception
block|{     }
DECL|field|lastTimestamp
name|long
name|lastTimestamp
init|=
operator|-
literal|1
decl_stmt|;
annotation|@
name|Test
DECL|method|testProducers ()
specifier|public
name|void
name|testProducers
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:page"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMinimumMessageCount
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|mock
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"timer:period=20000"
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelFacebook.reading.limit"
argument_list|,
name|constant
argument_list|(
literal|"10"
argument_list|)
argument_list|)
operator|.
name|process
argument_list|(
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|lastTimestamp
operator|>
literal|0
condition|)
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"CamelFacebook.reading.since"
argument_list|,
name|lastTimestamp
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
operator|.
name|to
argument_list|(
literal|"facebook://getPosts?"
operator|+
name|getOauthParams
argument_list|()
operator|+
literal|"&userId="
operator|+
name|APACHE_FOUNDATION_PAGE_ID
operator|+
literal|"&reading.limit=5"
argument_list|)
operator|.
name|process
argument_list|(
operator|new
name|Processor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|ResponseList
argument_list|<
name|Post
argument_list|>
name|body
init|=
operator|(
name|ResponseList
argument_list|<
name|Post
argument_list|>
operator|)
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Number of posts received: {}"
argument_list|,
name|body
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Post
name|post
range|:
name|body
control|)
block|{
name|log
operator|.
name|debug
argument_list|(
name|post
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|body
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|lastTimestamp
operator|=
name|body
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getUpdatedTime
argument_list|()
operator|.
name|getTime
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:page"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

