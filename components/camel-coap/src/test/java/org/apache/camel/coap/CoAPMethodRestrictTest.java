begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.coap
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|coap
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RoutesBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|californium
operator|.
name|core
operator|.
name|network
operator|.
name|config
operator|.
name|NetworkConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|CoAPMethodRestrictTest
specifier|public
class|class
name|CoAPMethodRestrictTest
extends|extends
name|CoAPTestSupport
block|{
annotation|@
name|Test
DECL|method|testDefaultCoAPMethodRestrict ()
specifier|public
name|void
name|testDefaultCoAPMethodRestrict
parameter_list|()
block|{
name|NetworkConfig
operator|.
name|createStandardWithoutFile
argument_list|()
expr_stmt|;
comment|// All request methods should be valid on this endpoint
name|assertCoAPMethodRestrictResponse
argument_list|(
literal|"/test"
argument_list|,
name|CoAPConstants
operator|.
name|METHOD_RESTRICT_ALL
argument_list|,
literal|"GET: /test"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSpecifiedCoAPMethodRestrict ()
specifier|public
name|void
name|testSpecifiedCoAPMethodRestrict
parameter_list|()
block|{
name|NetworkConfig
operator|.
name|createStandardWithoutFile
argument_list|()
expr_stmt|;
comment|// Only GET is valid for /test/a
name|assertCoAPMethodRestrictResponse
argument_list|(
literal|"/test/a"
argument_list|,
literal|"GET"
argument_list|,
literal|"GET: /test/a"
argument_list|)
expr_stmt|;
comment|// Only DELETE is valid for /test/a/b
name|assertCoAPMethodRestrictResponse
argument_list|(
literal|"/test/a/b"
argument_list|,
literal|"DELETE"
argument_list|,
literal|"DELETE: /test/a/b"
argument_list|)
expr_stmt|;
comment|// Only DELETE& GET are valid for /test/a/b/c
name|assertCoAPMethodRestrictResponse
argument_list|(
literal|"/test/a/b/c"
argument_list|,
literal|"DELETE,GET"
argument_list|,
literal|"DELETE& GET: /test/a/b/c"
argument_list|)
expr_stmt|;
comment|// Only GET is valid for /test/b
name|assertCoAPMethodRestrictResponse
argument_list|(
literal|"/test/b"
argument_list|,
literal|"GET"
argument_list|,
literal|"GET: /test/b"
argument_list|)
expr_stmt|;
block|}
DECL|method|assertCoAPMethodRestrictResponse (String path, String methodRestrict, String expectedResponse)
specifier|private
name|void
name|assertCoAPMethodRestrictResponse
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|methodRestrict
parameter_list|,
name|String
name|expectedResponse
parameter_list|)
block|{
for|for
control|(
name|String
name|method
range|:
name|CoAPConstants
operator|.
name|METHOD_RESTRICT_ALL
operator|.
name|split
argument_list|(
literal|","
argument_list|)
control|)
block|{
name|String
name|result
init|=
name|template
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"coap://localhost:"
operator|+
name|PORT
operator|+
name|path
argument_list|,
literal|null
argument_list|,
name|CoAPConstants
operator|.
name|COAP_METHOD
argument_list|,
name|method
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|methodRestrict
operator|.
name|contains
argument_list|(
name|method
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
name|expectedResponse
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RoutesBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|fromF
argument_list|(
literal|"coap://localhost:%d/test"
argument_list|,
name|PORT
argument_list|)
operator|.
name|setBody
argument_list|(
name|constant
argument_list|(
literal|"GET: /test"
argument_list|)
argument_list|)
expr_stmt|;
name|fromF
argument_list|(
literal|"coap://localhost:%d/test/a?coapMethodRestrict=GET"
argument_list|,
name|PORT
argument_list|)
operator|.
name|setBody
argument_list|(
name|constant
argument_list|(
literal|"GET: /test/a"
argument_list|)
argument_list|)
expr_stmt|;
name|fromF
argument_list|(
literal|"coap://localhost:%d/test/a/b?coapMethodRestrict=DELETE"
argument_list|,
name|PORT
argument_list|)
operator|.
name|setBody
argument_list|(
name|constant
argument_list|(
literal|"DELETE: /test/a/b"
argument_list|)
argument_list|)
expr_stmt|;
name|fromF
argument_list|(
literal|"coap://localhost:%d/test/a/b/c?coapMethodRestrict=DELETE,GET"
argument_list|,
name|PORT
argument_list|)
operator|.
name|setBody
argument_list|(
name|constant
argument_list|(
literal|"DELETE& GET: /test/a/b/c"
argument_list|)
argument_list|)
expr_stmt|;
name|fromF
argument_list|(
literal|"coap://localhost:%d/test/b?coapMethodRestrict=GET"
argument_list|,
name|PORT
argument_list|)
operator|.
name|setBody
argument_list|(
name|constant
argument_list|(
literal|"GET: /test/b"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

