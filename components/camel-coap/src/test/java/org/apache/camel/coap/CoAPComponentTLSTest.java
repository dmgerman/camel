begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.coap
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|coap
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Produce
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ProducerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|jsse
operator|.
name|KeyStoreParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|AvailablePortFinder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|californium
operator|.
name|core
operator|.
name|coap
operator|.
name|CoAP
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|californium
operator|.
name|core
operator|.
name|coap
operator|.
name|MediaTypeRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|CoAPComponentTLSTest
specifier|public
class|class
name|CoAPComponentTLSTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|PORT
specifier|protected
specifier|static
specifier|final
name|int
name|PORT
init|=
name|AvailablePortFinder
operator|.
name|getNextAvailable
argument_list|()
decl_stmt|;
annotation|@
name|Produce
argument_list|(
literal|"direct:start"
argument_list|)
DECL|field|sender
specifier|protected
name|ProducerTemplate
name|sender
decl_stmt|;
annotation|@
name|Test
DECL|method|testTLS ()
specifier|public
name|void
name|testTLS
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:result"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMinimumMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|mock
operator|.
name|expectedBodiesReceived
argument_list|(
literal|"Hello Camel CoAP"
argument_list|)
expr_stmt|;
name|mock
operator|.
name|expectedHeaderReceived
argument_list|(
name|Exchange
operator|.
name|CONTENT_TYPE
argument_list|,
name|MediaTypeRegistry
operator|.
name|toString
argument_list|(
name|MediaTypeRegistry
operator|.
name|APPLICATION_OCTET_STREAM
argument_list|)
argument_list|)
expr_stmt|;
name|mock
operator|.
name|expectedHeaderReceived
argument_list|(
name|CoAPConstants
operator|.
name|COAP_RESPONSE_CODE
argument_list|,
name|CoAP
operator|.
name|ResponseCode
operator|.
name|CONTENT
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|sender
operator|.
name|sendBodyAndHeader
argument_list|(
literal|"Camel CoAP"
argument_list|,
name|CoAPConstants
operator|.
name|COAP_METHOD
argument_list|,
literal|"POST"
argument_list|)
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
name|KeyStoreParameters
name|keystoreParameters
init|=
operator|new
name|KeyStoreParameters
argument_list|()
decl_stmt|;
name|keystoreParameters
operator|.
name|setResource
argument_list|(
literal|"service.jks"
argument_list|)
expr_stmt|;
name|keystoreParameters
operator|.
name|setPassword
argument_list|(
literal|"security"
argument_list|)
expr_stmt|;
name|KeyStoreParameters
name|truststoreParameters
init|=
operator|new
name|KeyStoreParameters
argument_list|()
decl_stmt|;
name|truststoreParameters
operator|.
name|setResource
argument_list|(
literal|"truststore.jks"
argument_list|)
expr_stmt|;
name|truststoreParameters
operator|.
name|setPassword
argument_list|(
literal|"storepass"
argument_list|)
expr_stmt|;
name|context
operator|.
name|getRegistry
argument_list|()
operator|.
name|bind
argument_list|(
literal|"keyParams"
argument_list|,
name|keystoreParameters
argument_list|)
expr_stmt|;
name|context
operator|.
name|getRegistry
argument_list|()
operator|.
name|bind
argument_list|(
literal|"trustParams"
argument_list|,
name|truststoreParameters
argument_list|)
expr_stmt|;
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|fromF
argument_list|(
literal|"coaps://localhost:%d/TestResource?alias=service&password=security&"
operator|+
literal|"keyStoreParameters=#keyParams"
argument_list|,
name|PORT
argument_list|)
operator|.
name|transform
argument_list|(
name|body
argument_list|()
operator|.
name|prepend
argument_list|(
literal|"Hello "
argument_list|)
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:start"
argument_list|)
operator|.
name|toF
argument_list|(
literal|"coaps://localhost:%d/TestResource?trustStoreParameters=#trustParams"
argument_list|,
name|PORT
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:result"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

