begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.coap
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|coap
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|AvailablePortFinder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|californium
operator|.
name|core
operator|.
name|CoapClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|californium
operator|.
name|core
operator|.
name|CoapResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|californium
operator|.
name|core
operator|.
name|coap
operator|.
name|MediaTypeRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|californium
operator|.
name|core
operator|.
name|network
operator|.
name|config
operator|.
name|NetworkConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|CoAPRestVerbTest
specifier|public
class|class
name|CoAPRestVerbTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|coapport
specifier|static
name|int
name|coapport
init|=
name|AvailablePortFinder
operator|.
name|getNextAvailable
argument_list|()
decl_stmt|;
annotation|@
name|Test
DECL|method|testGetAll ()
specifier|public
name|void
name|testGetAll
parameter_list|()
throws|throws
name|Exception
block|{
name|NetworkConfig
operator|.
name|createStandardWithoutFile
argument_list|()
expr_stmt|;
name|CoapClient
name|client
init|=
operator|new
name|CoapClient
argument_list|(
literal|"coap://localhost:"
operator|+
name|coapport
operator|+
literal|"/users"
argument_list|)
decl_stmt|;
name|client
operator|.
name|setTimeout
argument_list|(
literal|1000000
argument_list|)
expr_stmt|;
name|CoapResponse
name|rsp
init|=
name|client
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"[{ \"id\":\"1\", \"name\":\"Scott\" },{ \"id\":\"2\", \"name\":\"Claus\" }]"
argument_list|,
name|rsp
operator|.
name|getResponseText
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetOne ()
specifier|public
name|void
name|testGetOne
parameter_list|()
throws|throws
name|Exception
block|{
name|NetworkConfig
operator|.
name|createStandardWithoutFile
argument_list|()
expr_stmt|;
name|CoapClient
name|client
init|=
operator|new
name|CoapClient
argument_list|(
literal|"coap://localhost:"
operator|+
name|coapport
operator|+
literal|"/users/1"
argument_list|)
decl_stmt|;
name|client
operator|.
name|setTimeout
argument_list|(
literal|1000000
argument_list|)
expr_stmt|;
name|CoapResponse
name|rsp
init|=
name|client
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"{ \"id\":\"1\", \"name\":\"Scott\" }"
argument_list|,
name|rsp
operator|.
name|getResponseText
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPost ()
specifier|public
name|void
name|testPost
parameter_list|()
throws|throws
name|Exception
block|{
name|NetworkConfig
operator|.
name|createStandardWithoutFile
argument_list|()
expr_stmt|;
specifier|final
name|String
name|body
init|=
literal|"{ \"id\":\"1\", \"name\":\"Scott\" }"
decl_stmt|;
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:create"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedBodiesReceived
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|CoapClient
name|client
init|=
operator|new
name|CoapClient
argument_list|(
literal|"coap://localhost:"
operator|+
name|coapport
operator|+
literal|"/users"
argument_list|)
decl_stmt|;
name|client
operator|.
name|setTimeout
argument_list|(
literal|1000000
argument_list|)
expr_stmt|;
name|CoapResponse
name|rsp
init|=
name|client
operator|.
name|post
argument_list|(
name|body
argument_list|,
name|MediaTypeRegistry
operator|.
name|APPLICATION_JSON
argument_list|)
decl_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPut ()
specifier|public
name|void
name|testPut
parameter_list|()
throws|throws
name|Exception
block|{
name|NetworkConfig
operator|.
name|createStandardWithoutFile
argument_list|()
expr_stmt|;
specifier|final
name|String
name|body
init|=
literal|"{ \"id\":\"1\", \"name\":\"Scott\" }"
decl_stmt|;
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:update"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedBodiesReceived
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|mock
operator|.
name|expectedHeaderReceived
argument_list|(
literal|"id"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|CoapClient
name|client
init|=
operator|new
name|CoapClient
argument_list|(
literal|"coap://localhost:"
operator|+
name|coapport
operator|+
literal|"/users/1"
argument_list|)
decl_stmt|;
name|client
operator|.
name|setTimeout
argument_list|(
literal|1000000
argument_list|)
expr_stmt|;
name|CoapResponse
name|rsp
init|=
name|client
operator|.
name|put
argument_list|(
name|body
argument_list|,
name|MediaTypeRegistry
operator|.
name|APPLICATION_JSON
argument_list|)
decl_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDelete ()
specifier|public
name|void
name|testDelete
parameter_list|()
throws|throws
name|Exception
block|{
name|NetworkConfig
operator|.
name|createStandardWithoutFile
argument_list|()
expr_stmt|;
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:delete"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedHeaderReceived
argument_list|(
literal|"id"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|CoapClient
name|client
init|=
operator|new
name|CoapClient
argument_list|(
literal|"coap://localhost:"
operator|+
name|coapport
operator|+
literal|"/users/1"
argument_list|)
decl_stmt|;
name|client
operator|.
name|setTimeout
argument_list|(
literal|1000000
argument_list|)
expr_stmt|;
name|CoapResponse
name|rsp
init|=
name|client
operator|.
name|delete
argument_list|()
decl_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|restConfiguration
argument_list|()
operator|.
name|component
argument_list|(
literal|"coap"
argument_list|)
operator|.
name|host
argument_list|(
literal|"localhost"
argument_list|)
operator|.
name|port
argument_list|(
name|coapport
argument_list|)
expr_stmt|;
name|rest
argument_list|()
operator|.
name|get
argument_list|(
literal|"/users"
argument_list|)
operator|.
name|route
argument_list|()
operator|.
name|transform
argument_list|()
operator|.
name|constant
argument_list|(
literal|"[{ \"id\":\"1\", \"name\":\"Scott\" },{ \"id\":\"2\", \"name\":\"Claus\" }]"
argument_list|)
operator|.
name|endRest
argument_list|()
operator|.
name|get
argument_list|(
literal|"/users/{id}"
argument_list|)
operator|.
name|route
argument_list|()
operator|.
name|transform
argument_list|()
operator|.
name|simple
argument_list|(
literal|"{ \"id\":\"${header.id}\", \"name\":\"Scott\" }"
argument_list|)
operator|.
name|endRest
argument_list|()
operator|.
name|post
argument_list|(
literal|"/users"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:create"
argument_list|)
operator|.
name|put
argument_list|(
literal|"/users/{id}"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:update"
argument_list|)
operator|.
name|delete
argument_list|(
literal|"/users/{id}"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:delete"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

