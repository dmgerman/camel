begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.beanstalk
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|beanstalk
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|NoSuchHeaderException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ExchangeHelper
import|;
end_import

begin_class
DECL|class|BeanstalkExchangeHelper
specifier|public
specifier|final
class|class
name|BeanstalkExchangeHelper
block|{
DECL|method|BeanstalkExchangeHelper ()
specifier|private
name|BeanstalkExchangeHelper
parameter_list|()
block|{     }
DECL|method|getPriority (final BeanstalkEndpoint endpoint, final Message in)
specifier|public
specifier|static
name|long
name|getPriority
parameter_list|(
specifier|final
name|BeanstalkEndpoint
name|endpoint
parameter_list|,
specifier|final
name|Message
name|in
parameter_list|)
block|{
return|return
name|in
operator|.
name|getHeader
argument_list|(
name|Headers
operator|.
name|PRIORITY
argument_list|,
name|endpoint
operator|.
name|getJobPriority
argument_list|()
argument_list|,
name|Long
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getDelay (final BeanstalkEndpoint endpoint, final Message in)
specifier|public
specifier|static
name|int
name|getDelay
parameter_list|(
specifier|final
name|BeanstalkEndpoint
name|endpoint
parameter_list|,
specifier|final
name|Message
name|in
parameter_list|)
block|{
return|return
name|in
operator|.
name|getHeader
argument_list|(
name|Headers
operator|.
name|DELAY
argument_list|,
name|endpoint
operator|.
name|getJobDelay
argument_list|()
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getTimeToRun (final BeanstalkEndpoint endpoint, final Message in)
specifier|public
specifier|static
name|int
name|getTimeToRun
parameter_list|(
specifier|final
name|BeanstalkEndpoint
name|endpoint
parameter_list|,
specifier|final
name|Message
name|in
parameter_list|)
block|{
return|return
name|in
operator|.
name|getHeader
argument_list|(
name|Headers
operator|.
name|TIME_TO_RUN
argument_list|,
name|endpoint
operator|.
name|getJobTimeToRun
argument_list|()
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|getJobID (final Exchange exchange)
specifier|public
specifier|static
name|long
name|getJobID
parameter_list|(
specifier|final
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|NoSuchHeaderException
block|{
name|Long
name|jobId
init|=
name|exchange
operator|.
name|getProperty
argument_list|(
name|Headers
operator|.
name|JOB_ID
argument_list|,
name|Long
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|jobId
operator|!=
literal|null
condition|)
block|{
return|return
name|jobId
return|;
block|}
return|return
name|ExchangeHelper
operator|.
name|getMandatoryHeader
argument_list|(
name|exchange
argument_list|,
name|Headers
operator|.
name|JOB_ID
argument_list|,
name|Long
operator|.
name|class
argument_list|)
return|;
block|}
block|}
end_class

end_unit

