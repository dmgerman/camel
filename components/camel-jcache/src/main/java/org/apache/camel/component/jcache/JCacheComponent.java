begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jcache
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jcache
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|cache
operator|.
name|Cache
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|cache
operator|.
name|CacheManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|cache
operator|.
name|configuration
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|DefaultComponent
import|;
end_import

begin_comment
comment|/**  * Represents the component that manages {@link JCacheEndpoint}.  */
end_comment

begin_class
DECL|class|JCacheComponent
specifier|public
class|class
name|JCacheComponent
extends|extends
name|DefaultComponent
block|{
DECL|field|cachingProvider
specifier|private
name|String
name|cachingProvider
decl_stmt|;
DECL|field|cacheConfiguration
specifier|private
name|Configuration
name|cacheConfiguration
decl_stmt|;
DECL|field|cacheConfigurationProperties
specifier|private
name|Properties
name|cacheConfigurationProperties
decl_stmt|;
DECL|field|configurationUri
specifier|private
name|String
name|configurationUri
decl_stmt|;
DECL|method|JCacheComponent ()
specifier|public
name|JCacheComponent
parameter_list|()
block|{     }
DECL|method|JCacheComponent (CamelContext context)
specifier|public
name|JCacheComponent
parameter_list|(
name|CamelContext
name|context
parameter_list|)
block|{
name|super
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createEndpoint (String uri, String remaining, Map<String, Object> parameters)
specifier|protected
name|Endpoint
name|createEndpoint
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|remaining
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|parameters
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|cacheName
init|=
name|remaining
decl_stmt|;
name|JCacheConfiguration
name|configuration
init|=
operator|new
name|JCacheConfiguration
argument_list|(
name|getCamelContext
argument_list|()
argument_list|,
name|cacheName
argument_list|)
decl_stmt|;
name|configuration
operator|.
name|setCachingProvider
argument_list|(
name|cachingProvider
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setCacheConfiguration
argument_list|(
name|cacheConfiguration
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setCacheConfigurationProperties
argument_list|(
name|cacheConfigurationProperties
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setConfigurationUri
argument_list|(
name|configurationUri
argument_list|)
expr_stmt|;
name|setProperties
argument_list|(
name|configuration
argument_list|,
name|parameters
argument_list|)
expr_stmt|;
return|return
operator|new
name|JCacheEndpoint
argument_list|(
name|uri
argument_list|,
name|this
argument_list|,
name|configuration
argument_list|)
return|;
block|}
comment|/**      * The fully qualified class name of the {@link javax.cache.spi.CachingProvider}      */
DECL|method|getCachingProvider ()
specifier|public
name|String
name|getCachingProvider
parameter_list|()
block|{
return|return
name|cachingProvider
return|;
block|}
DECL|method|setCachingProvider (String cachingProvider)
specifier|public
name|void
name|setCachingProvider
parameter_list|(
name|String
name|cachingProvider
parameter_list|)
block|{
name|this
operator|.
name|cachingProvider
operator|=
name|cachingProvider
expr_stmt|;
block|}
comment|/**      * A {@link Configuration} for the {@link Cache}      */
DECL|method|getCacheConfiguration ()
specifier|public
name|Configuration
name|getCacheConfiguration
parameter_list|()
block|{
return|return
name|cacheConfiguration
return|;
block|}
DECL|method|setCacheConfiguration (Configuration cacheConfiguration)
specifier|public
name|void
name|setCacheConfiguration
parameter_list|(
name|Configuration
name|cacheConfiguration
parameter_list|)
block|{
name|this
operator|.
name|cacheConfiguration
operator|=
name|cacheConfiguration
expr_stmt|;
block|}
comment|/**      * The {@link Properties} for the {@link javax.cache.spi.CachingProvider} to      * create the {@link CacheManager}      */
DECL|method|getCacheConfigurationProperties ()
specifier|public
name|Properties
name|getCacheConfigurationProperties
parameter_list|()
block|{
return|return
name|cacheConfigurationProperties
return|;
block|}
DECL|method|setCacheConfigurationProperties (Properties cacheConfigurationProperties)
specifier|public
name|void
name|setCacheConfigurationProperties
parameter_list|(
name|Properties
name|cacheConfigurationProperties
parameter_list|)
block|{
name|this
operator|.
name|cacheConfigurationProperties
operator|=
name|cacheConfigurationProperties
expr_stmt|;
block|}
comment|/**      * An implementation specific URI for the {@link CacheManager}      */
DECL|method|getConfigurationUri ()
specifier|public
name|String
name|getConfigurationUri
parameter_list|()
block|{
return|return
name|configurationUri
return|;
block|}
DECL|method|setConfigurationUri (String configurationUri)
specifier|public
name|void
name|setConfigurationUri
parameter_list|(
name|String
name|configurationUri
parameter_list|)
block|{
name|this
operator|.
name|configurationUri
operator|=
name|configurationUri
expr_stmt|;
block|}
block|}
end_class

end_unit

