begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.servlet
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|servlet
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|httpunit
operator|.
name|HttpUnitOptions
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|servletunit
operator|.
name|ServletRunner
import|;
end_import

begin_import
import|import
name|com
operator|.
name|meterware
operator|.
name|servletunit
operator|.
name|ServletUnitClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_class
DECL|class|ServletCamelRouterTestSupport
specifier|public
class|class
name|ServletCamelRouterTestSupport
extends|extends
name|CamelTestSupport
block|{
DECL|field|CONTEXT
specifier|public
specifier|static
specifier|final
name|String
name|CONTEXT
init|=
literal|"/mycontext"
decl_stmt|;
DECL|field|CONTEXT_URL
specifier|public
specifier|static
specifier|final
name|String
name|CONTEXT_URL
init|=
literal|"http://localhost/mycontext"
decl_stmt|;
DECL|field|sr
specifier|protected
name|ServletRunner
name|sr
decl_stmt|;
DECL|field|startCamelContext
specifier|protected
name|boolean
name|startCamelContext
init|=
literal|true
decl_stmt|;
annotation|@
name|Override
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|is
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|getConfiguration
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"The configuration input stream should not be null"
argument_list|,
name|is
argument_list|)
expr_stmt|;
name|sr
operator|=
operator|new
name|ServletRunner
argument_list|(
name|is
argument_list|,
name|CONTEXT
argument_list|)
expr_stmt|;
name|HttpUnitOptions
operator|.
name|setExceptionsThrownOnErrorStatus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|startCamelContext
condition|)
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|startCamelContext
condition|)
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
name|sr
operator|.
name|shutDown
argument_list|()
expr_stmt|;
block|}
comment|/**      * @return The web.xml to use for testing.      */
DECL|method|getConfiguration ()
specifier|protected
name|String
name|getConfiguration
parameter_list|()
block|{
return|return
literal|"/org/apache/camel/component/servlet/web.xml"
return|;
block|}
DECL|method|newClient ()
specifier|protected
name|ServletUnitClient
name|newClient
parameter_list|()
block|{
return|return
name|sr
operator|.
name|newClient
argument_list|()
return|;
block|}
block|}
end_class

end_unit

