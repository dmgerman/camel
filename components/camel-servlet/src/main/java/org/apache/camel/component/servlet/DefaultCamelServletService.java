begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.servlet
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|servlet
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|http
operator|.
name|CamelServlet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|http
operator|.
name|HttpConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_comment
comment|/**  * Default {@link CamelServletService}  */
end_comment

begin_class
DECL|class|DefaultCamelServletService
specifier|public
class|class
name|DefaultCamelServletService
implements|implements
name|CamelServletService
block|{
DECL|field|servletName
specifier|private
specifier|final
name|String
name|servletName
decl_stmt|;
DECL|field|consumers
specifier|private
specifier|final
name|Set
argument_list|<
name|HttpConsumer
argument_list|>
name|consumers
init|=
operator|new
name|HashSet
argument_list|<
name|HttpConsumer
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|camelServlet
specifier|private
name|CamelServlet
name|camelServlet
decl_stmt|;
DECL|method|DefaultCamelServletService (String servletName, HttpConsumer consumer)
specifier|public
name|DefaultCamelServletService
parameter_list|(
name|String
name|servletName
parameter_list|,
name|HttpConsumer
name|consumer
parameter_list|)
block|{
name|ObjectHelper
operator|.
name|notEmpty
argument_list|(
name|servletName
argument_list|,
literal|"ServletName"
argument_list|)
expr_stmt|;
name|ObjectHelper
operator|.
name|notNull
argument_list|(
name|consumer
argument_list|,
literal|"HttpConsumer"
argument_list|)
expr_stmt|;
name|this
operator|.
name|servletName
operator|=
name|servletName
expr_stmt|;
name|addConsumer
argument_list|(
name|consumer
argument_list|)
expr_stmt|;
block|}
DECL|method|DefaultCamelServletService (String servletName, CamelServlet camelServlet)
specifier|public
name|DefaultCamelServletService
parameter_list|(
name|String
name|servletName
parameter_list|,
name|CamelServlet
name|camelServlet
parameter_list|)
block|{
name|ObjectHelper
operator|.
name|notEmpty
argument_list|(
name|servletName
argument_list|,
literal|"ServletName"
argument_list|)
expr_stmt|;
name|ObjectHelper
operator|.
name|notNull
argument_list|(
name|camelServlet
argument_list|,
literal|"CamelServlet"
argument_list|)
expr_stmt|;
name|this
operator|.
name|servletName
operator|=
name|servletName
expr_stmt|;
name|this
operator|.
name|camelServlet
operator|=
name|camelServlet
expr_stmt|;
block|}
DECL|method|getServletName ()
specifier|public
name|String
name|getServletName
parameter_list|()
block|{
return|return
name|servletName
return|;
block|}
DECL|method|addConsumer (HttpConsumer consumer)
specifier|public
name|void
name|addConsumer
parameter_list|(
name|HttpConsumer
name|consumer
parameter_list|)
block|{
name|consumers
operator|.
name|add
argument_list|(
name|consumer
argument_list|)
expr_stmt|;
block|}
DECL|method|setCamelServlet (CamelServlet camelServlet)
specifier|public
name|void
name|setCamelServlet
parameter_list|(
name|CamelServlet
name|camelServlet
parameter_list|)
block|{
name|this
operator|.
name|camelServlet
operator|=
name|camelServlet
expr_stmt|;
block|}
DECL|method|connect (HttpConsumer consumer)
specifier|public
name|void
name|connect
parameter_list|(
name|HttpConsumer
name|consumer
parameter_list|)
block|{
if|if
condition|(
name|camelServlet
operator|!=
literal|null
condition|)
block|{
name|camelServlet
operator|.
name|connect
argument_list|(
name|consumer
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|disconnect (HttpConsumer consumer)
specifier|public
name|void
name|disconnect
parameter_list|(
name|HttpConsumer
name|consumer
parameter_list|)
block|{
if|if
condition|(
name|camelServlet
operator|!=
literal|null
condition|)
block|{
name|camelServlet
operator|.
name|disconnect
argument_list|(
name|consumer
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getConsumers ()
specifier|public
name|Set
argument_list|<
name|HttpConsumer
argument_list|>
name|getConsumers
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableSet
argument_list|(
name|consumers
argument_list|)
return|;
block|}
block|}
end_class

end_unit

