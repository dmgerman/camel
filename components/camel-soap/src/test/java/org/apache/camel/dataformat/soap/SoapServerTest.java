begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.dataformat.soap
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|soap
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|com
operator|.
name|example
operator|.
name|customerservice
operator|.
name|GetCustomersByName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Produce
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ProducerTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|soap
operator|.
name|name
operator|.
name|ElementNameStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|dataformat
operator|.
name|soap
operator|.
name|name
operator|.
name|TypeNameStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|CamelTestSupport
import|;
end_import

begin_class
DECL|class|SoapServerTest
specifier|public
class|class
name|SoapServerTest
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Produce
argument_list|(
name|uri
operator|=
literal|"direct:start"
argument_list|)
DECL|field|producer
specifier|protected
name|ProducerTemplate
name|producer
decl_stmt|;
DECL|method|testSuccess ()
specifier|public
name|void
name|testSuccess
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|sendAndCheckReply
argument_list|(
literal|"request.xml"
argument_list|,
literal|"response.xml"
argument_list|)
expr_stmt|;
block|}
DECL|method|testFault ()
specifier|public
name|void
name|testFault
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|sendAndCheckReply
argument_list|(
literal|"requestFault.xml"
argument_list|,
literal|"responseFault.xml"
argument_list|)
expr_stmt|;
block|}
DECL|method|sendAndCheckReply (String requestResource, String responseResource)
specifier|private
name|void
name|sendAndCheckReply
parameter_list|(
name|String
name|requestResource
parameter_list|,
name|String
name|responseResource
parameter_list|)
throws|throws
name|IOException
block|{
name|context
operator|.
name|setTracing
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|InputStream
name|requestIs
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|requestResource
argument_list|)
decl_stmt|;
name|InputStream
name|responseIs
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|responseResource
argument_list|)
decl_stmt|;
name|Object
name|reply
init|=
name|producer
operator|.
name|requestBody
argument_list|(
name|requestIs
argument_list|)
decl_stmt|;
name|String
name|replySt
init|=
name|context
operator|.
name|getTypeConverter
argument_list|()
operator|.
name|convertTo
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|reply
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TestUtil
operator|.
name|readStream
argument_list|(
name|responseIs
argument_list|)
argument_list|,
name|replySt
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
name|String
name|jaxbPackage
init|=
name|GetCustomersByName
operator|.
name|class
operator|.
name|getPackage
argument_list|()
operator|.
name|getName
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|ElementNameStrategy
name|elNameStrat
init|=
operator|new
name|TypeNameStrategy
argument_list|()
decl_stmt|;
name|SoapJaxbDataFormat
name|soapDataFormat
init|=
operator|new
name|SoapJaxbDataFormat
argument_list|(
name|jaxbPackage
argument_list|,
name|elNameStrat
argument_list|)
decl_stmt|;
name|CustomerServerBean
name|serverBean
init|=
operator|new
name|CustomerServerBean
argument_list|()
decl_stmt|;
name|from
argument_list|(
literal|"direct:start"
argument_list|)
operator|.
name|onException
argument_list|(
name|Exception
operator|.
name|class
argument_list|)
comment|//
operator|.
name|handled
argument_list|(
literal|true
argument_list|)
comment|//
operator|.
name|marshal
argument_list|(
name|soapDataFormat
argument_list|)
comment|//
operator|.
name|end
argument_list|()
comment|//
operator|.
name|unmarshal
argument_list|(
name|soapDataFormat
argument_list|)
comment|//
operator|.
name|bean
argument_list|(
name|serverBean
argument_list|)
comment|//
operator|.
name|marshal
argument_list|(
name|soapDataFormat
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

