begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.xmpp
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|xmpp
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyStore
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|SecureRandom
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|SSLContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|ssl
operator|.
name|TrustManagerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|Registry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|AvailablePortFinder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|vysper
operator|.
name|mina
operator|.
name|TCPEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|vysper
operator|.
name|storage
operator|.
name|StorageProviderRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|vysper
operator|.
name|storage
operator|.
name|inmemory
operator|.
name|MemoryStorageProviderRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|vysper
operator|.
name|xmpp
operator|.
name|addressing
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|vysper
operator|.
name|xmpp
operator|.
name|addressing
operator|.
name|EntityImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|vysper
operator|.
name|xmpp
operator|.
name|authorization
operator|.
name|AccountManagement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|vysper
operator|.
name|xmpp
operator|.
name|authorization
operator|.
name|Anonymous
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|vysper
operator|.
name|xmpp
operator|.
name|authorization
operator|.
name|SASLMechanism
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|vysper
operator|.
name|xmpp
operator|.
name|modules
operator|.
name|extension
operator|.
name|xep0045_muc
operator|.
name|MUCModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|vysper
operator|.
name|xmpp
operator|.
name|modules
operator|.
name|extension
operator|.
name|xep0045_muc
operator|.
name|model
operator|.
name|Conference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|vysper
operator|.
name|xmpp
operator|.
name|modules
operator|.
name|extension
operator|.
name|xep0045_muc
operator|.
name|model
operator|.
name|RoomType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|vysper
operator|.
name|xmpp
operator|.
name|server
operator|.
name|XMPPServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jivesoftware
operator|.
name|smack
operator|.
name|ConnectionConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jivesoftware
operator|.
name|smack
operator|.
name|tcp
operator|.
name|XMPPTCPConnectionConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jxmpp
operator|.
name|jid
operator|.
name|impl
operator|.
name|JidCreate
import|;
end_import

begin_class
DECL|class|EmbeddedXmppTestServer
specifier|public
specifier|final
class|class
name|EmbeddedXmppTestServer
block|{
DECL|field|xmppServer
specifier|private
name|XMPPServer
name|xmppServer
decl_stmt|;
DECL|field|endpoint
specifier|private
name|TCPEndpoint
name|endpoint
decl_stmt|;
DECL|field|port
specifier|private
name|int
name|port
decl_stmt|;
DECL|method|EmbeddedXmppTestServer ()
specifier|public
name|EmbeddedXmppTestServer
parameter_list|()
block|{
name|initializeXmppServer
argument_list|()
expr_stmt|;
block|}
DECL|method|initializeXmppServer ()
specifier|private
name|void
name|initializeXmppServer
parameter_list|()
block|{
try|try
block|{
name|xmppServer
operator|=
operator|new
name|XMPPServer
argument_list|(
literal|"apache.camel"
argument_list|)
expr_stmt|;
name|StorageProviderRegistry
name|providerRegistry
init|=
operator|new
name|MemoryStorageProviderRegistry
argument_list|()
decl_stmt|;
name|AccountManagement
name|accountManagement
init|=
operator|(
name|AccountManagement
operator|)
name|providerRegistry
operator|.
name|retrieve
argument_list|(
name|AccountManagement
operator|.
name|class
argument_list|)
decl_stmt|;
name|Entity
name|user
init|=
name|EntityImpl
operator|.
name|parseUnchecked
argument_list|(
literal|"camel_consumer@apache.camel"
argument_list|)
decl_stmt|;
name|accountManagement
operator|.
name|addUser
argument_list|(
name|user
argument_list|,
literal|"secret"
argument_list|)
expr_stmt|;
name|Entity
name|user2
init|=
name|EntityImpl
operator|.
name|parseUnchecked
argument_list|(
literal|"camel_producer@apache.camel"
argument_list|)
decl_stmt|;
name|accountManagement
operator|.
name|addUser
argument_list|(
name|user2
argument_list|,
literal|"secret"
argument_list|)
expr_stmt|;
name|Entity
name|user3
init|=
name|EntityImpl
operator|.
name|parseUnchecked
argument_list|(
literal|"camel_producer1@apache.camel"
argument_list|)
decl_stmt|;
name|accountManagement
operator|.
name|addUser
argument_list|(
name|user3
argument_list|,
literal|"secret"
argument_list|)
expr_stmt|;
name|xmppServer
operator|.
name|setStorageProviderRegistry
argument_list|(
name|providerRegistry
argument_list|)
expr_stmt|;
name|endpoint
operator|=
operator|new
name|TCPEndpoint
argument_list|()
expr_stmt|;
name|this
operator|.
name|port
operator|=
name|AvailablePortFinder
operator|.
name|getNextAvailable
argument_list|()
expr_stmt|;
name|endpoint
operator|.
name|setPort
argument_list|(
name|port
argument_list|)
expr_stmt|;
name|xmppServer
operator|.
name|addEndpoint
argument_list|(
name|endpoint
argument_list|)
expr_stmt|;
name|InputStream
name|stream
init|=
name|ObjectHelper
operator|.
name|loadResourceAsStream
argument_list|(
literal|"xmppServer.jks"
argument_list|)
decl_stmt|;
name|xmppServer
operator|.
name|setTLSCertificateInfo
argument_list|(
name|stream
argument_list|,
literal|"secret"
argument_list|)
expr_stmt|;
comment|// allow anonymous logins
name|xmppServer
operator|.
name|setSASLMechanisms
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|SASLMechanism
index|[]
block|{
operator|new
name|Anonymous
argument_list|()
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|xmppServer
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// add the multi-user chat module and create a few test rooms
name|Conference
name|conference
init|=
operator|new
name|Conference
argument_list|(
literal|"test conference"
argument_list|)
decl_stmt|;
name|conference
operator|.
name|createRoom
argument_list|(
name|EntityImpl
operator|.
name|parseUnchecked
argument_list|(
literal|"camel-anon@apache.camel"
argument_list|)
argument_list|,
literal|"camel-anon"
argument_list|,
name|RoomType
operator|.
name|FullyAnonymous
argument_list|)
expr_stmt|;
name|conference
operator|.
name|createRoom
argument_list|(
name|EntityImpl
operator|.
name|parseUnchecked
argument_list|(
literal|"camel-test@apache.camel"
argument_list|)
argument_list|,
literal|"camel-test"
argument_list|,
name|RoomType
operator|.
name|Public
argument_list|)
expr_stmt|;
name|xmppServer
operator|.
name|addModule
argument_list|(
operator|new
name|MUCModule
argument_list|(
literal|"conference"
argument_list|,
name|conference
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"An error occurred when initializing the XMPP Test Server."
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|startXmppEndpoint ()
specifier|public
name|void
name|startXmppEndpoint
parameter_list|()
throws|throws
name|Exception
block|{
name|endpoint
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
DECL|method|stopXmppEndpoint ()
specifier|public
name|void
name|stopXmppEndpoint
parameter_list|()
block|{
name|endpoint
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|method|getXmppPort ()
specifier|public
name|int
name|getXmppPort
parameter_list|()
block|{
return|return
name|port
return|;
block|}
DECL|method|bindSSLContextTo (Registry registry)
specifier|public
name|void
name|bindSSLContextTo
parameter_list|(
name|Registry
name|registry
parameter_list|)
throws|throws
name|Exception
block|{
name|KeyStore
name|keyStore
init|=
name|KeyStore
operator|.
name|getInstance
argument_list|(
literal|"JKS"
argument_list|)
decl_stmt|;
name|keyStore
operator|.
name|load
argument_list|(
name|ObjectHelper
operator|.
name|loadResourceAsStream
argument_list|(
literal|"xmppServer.jks"
argument_list|)
argument_list|,
literal|"secret"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|TrustManagerFactory
name|trustManagerFactory
init|=
name|TrustManagerFactory
operator|.
name|getInstance
argument_list|(
name|TrustManagerFactory
operator|.
name|getDefaultAlgorithm
argument_list|()
argument_list|)
decl_stmt|;
name|trustManagerFactory
operator|.
name|init
argument_list|(
name|keyStore
argument_list|)
expr_stmt|;
name|SSLContext
name|sslContext
init|=
name|SSLContext
operator|.
name|getInstance
argument_list|(
literal|"TLS"
argument_list|)
decl_stmt|;
name|sslContext
operator|.
name|init
argument_list|(
literal|null
argument_list|,
name|trustManagerFactory
operator|.
name|getTrustManagers
argument_list|()
argument_list|,
operator|new
name|SecureRandom
argument_list|()
argument_list|)
expr_stmt|;
name|ConnectionConfiguration
name|connectionConfig
init|=
name|XMPPTCPConnectionConfiguration
operator|.
name|builder
argument_list|()
operator|.
name|setXmppDomain
argument_list|(
name|JidCreate
operator|.
name|domainBareFrom
argument_list|(
literal|"apache.camel"
argument_list|)
argument_list|)
operator|.
name|setHostAddress
argument_list|(
name|InetAddress
operator|.
name|getLocalHost
argument_list|()
argument_list|)
operator|.
name|setPort
argument_list|(
name|getXmppPort
argument_list|()
argument_list|)
operator|.
name|setCustomSSLContext
argument_list|(
name|sslContext
argument_list|)
operator|.
name|setHostnameVerifier
argument_list|(
parameter_list|(
name|hostname
parameter_list|,
name|session
parameter_list|)
lambda|->
literal|true
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|registry
operator|.
name|bind
argument_list|(
literal|"customConnectionConfig"
argument_list|,
name|connectionConfig
argument_list|)
expr_stmt|;
block|}
DECL|method|stop ()
specifier|public
name|void
name|stop
parameter_list|()
block|{
name|xmppServer
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

