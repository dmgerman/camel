begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.xmpp
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|xmpp
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * @version   */
end_comment

begin_class
DECL|class|UriConfigurationTest
specifier|public
class|class
name|UriConfigurationTest
extends|extends
name|Assert
block|{
DECL|field|context
specifier|protected
name|CamelContext
name|context
init|=
operator|new
name|DefaultCamelContext
argument_list|()
decl_stmt|;
annotation|@
name|Test
DECL|method|testPrivateChatConfiguration ()
specifier|public
name|void
name|testPrivateChatConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|Endpoint
name|endpoint
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"xmpp://camel-user@localhost:123/test-user@localhost?password=secret&serviceName=someCoolChat"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Endpoint not an XmppEndpoint: "
operator|+
name|endpoint
argument_list|,
name|endpoint
operator|instanceof
name|XmppEndpoint
argument_list|)
expr_stmt|;
name|XmppEndpoint
name|xmppEndpoint
init|=
operator|(
name|XmppEndpoint
operator|)
name|endpoint
decl_stmt|;
name|assertEquals
argument_list|(
literal|"localhost"
argument_list|,
name|xmppEndpoint
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|xmppEndpoint
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"camel-user"
argument_list|,
name|xmppEndpoint
operator|.
name|getUser
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test-user@localhost"
argument_list|,
name|xmppEndpoint
operator|.
name|getParticipant
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"secret"
argument_list|,
name|xmppEndpoint
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"someCoolChat"
argument_list|,
name|xmppEndpoint
operator|.
name|getServiceName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGroupChatConfiguration ()
specifier|public
name|void
name|testGroupChatConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|Endpoint
name|endpoint
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"xmpp://camel-user@im.google.com:123?room=cheese&password=secret&nickname=incognito"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Endpoint not an XmppEndpoint: "
operator|+
name|endpoint
argument_list|,
name|endpoint
operator|instanceof
name|XmppEndpoint
argument_list|)
expr_stmt|;
name|XmppEndpoint
name|xmppEndpoint
init|=
operator|(
name|XmppEndpoint
operator|)
name|endpoint
decl_stmt|;
name|assertEquals
argument_list|(
literal|"im.google.com"
argument_list|,
name|xmppEndpoint
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|xmppEndpoint
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"camel-user"
argument_list|,
name|xmppEndpoint
operator|.
name|getUser
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cheese"
argument_list|,
name|xmppEndpoint
operator|.
name|getRoom
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"secret"
argument_list|,
name|xmppEndpoint
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"incognito"
argument_list|,
name|xmppEndpoint
operator|.
name|getNickname
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Changes in default resource name may break
comment|// clients program assuming the default "Camel" resource name
comment|// so it is better to avoid changing it.
annotation|@
name|Test
DECL|method|testDefaultResource ()
specifier|public
name|void
name|testDefaultResource
parameter_list|()
throws|throws
name|Exception
block|{
name|Endpoint
name|endpoint
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"xmpp://camel-user@im.google.com?password=secret"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Endpoint not an XmppEndpoint: "
operator|+
name|endpoint
argument_list|,
name|endpoint
operator|instanceof
name|XmppEndpoint
argument_list|)
expr_stmt|;
name|XmppEndpoint
name|xmppEndpoint
init|=
operator|(
name|XmppEndpoint
operator|)
name|endpoint
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Camel"
argument_list|,
name|xmppEndpoint
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPubSubConfiguration ()
specifier|public
name|void
name|testPubSubConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|Endpoint
name|endpoint
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"xmpp://camel-user@localhost:123?password=secret&pubsub=true"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Endpoint not an XmppEndpoint: "
operator|+
name|endpoint
argument_list|,
name|endpoint
operator|instanceof
name|XmppEndpoint
argument_list|)
expr_stmt|;
name|XmppEndpoint
name|xmppEndpoint
init|=
operator|(
name|XmppEndpoint
operator|)
name|endpoint
decl_stmt|;
name|assertEquals
argument_list|(
literal|"localhost"
argument_list|,
name|xmppEndpoint
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|xmppEndpoint
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"camel-user"
argument_list|,
name|xmppEndpoint
operator|.
name|getUser
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"secret"
argument_list|,
name|xmppEndpoint
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|xmppEndpoint
operator|.
name|isPubsub
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|xmppEndpoint
operator|.
name|isDoc
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

