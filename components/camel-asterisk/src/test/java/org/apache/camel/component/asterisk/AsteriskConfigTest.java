begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.asterisk
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|asterisk
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|AsteriskConfigTest
specifier|public
class|class
name|AsteriskConfigTest
extends|extends
name|CamelTestSupport
block|{
DECL|field|hostname
specifier|private
name|String
name|hostname
init|=
literal|"192.168.0.254"
decl_stmt|;
DECL|field|username
specifier|private
name|String
name|username
init|=
literal|"username"
decl_stmt|;
DECL|field|password
specifier|private
name|String
name|password
init|=
literal|"password"
decl_stmt|;
DECL|field|action
specifier|private
name|String
name|action
init|=
literal|"QUEUE_STATUS"
decl_stmt|;
annotation|@
name|Test
DECL|method|asteriskEndpointData ()
specifier|public
name|void
name|asteriskEndpointData
parameter_list|()
throws|throws
name|Exception
block|{
name|Endpoint
name|endpoint
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"asterisk://myVoIP?hostname="
operator|+
name|hostname
operator|+
literal|"&username="
operator|+
name|username
operator|+
literal|"&password="
operator|+
name|password
operator|+
literal|"&action="
operator|+
name|action
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Endpoint not an AsteriskEndpoint: "
operator|+
name|endpoint
argument_list|,
name|endpoint
operator|instanceof
name|AsteriskEndpoint
argument_list|)
expr_stmt|;
name|AsteriskEndpoint
name|asteriskEndpoint
init|=
operator|(
name|AsteriskEndpoint
operator|)
name|endpoint
decl_stmt|;
name|assertEquals
argument_list|(
name|hostname
argument_list|,
name|asteriskEndpoint
operator|.
name|getHostname
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|username
argument_list|,
name|asteriskEndpoint
operator|.
name|getUsername
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|password
argument_list|,
name|asteriskEndpoint
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|action
argument_list|,
name|asteriskEndpoint
operator|.
name|getAction
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

