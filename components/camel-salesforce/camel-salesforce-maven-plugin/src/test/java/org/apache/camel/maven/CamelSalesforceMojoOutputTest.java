begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.maven
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Consumer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Function
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|StreamSupport
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|SObjectDescription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|utils
operator|.
name|JsonUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|internal
operator|.
name|client
operator|.
name|RestClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|internal
operator|.
name|client
operator|.
name|RestClient
operator|.
name|ResponseCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|stubbing
operator|.
name|Answer
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyMap
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|eq
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doAnswer
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
DECL|class|CamelSalesforceMojoOutputTest
specifier|public
class|class
name|CamelSalesforceMojoOutputTest
block|{
DECL|field|TEST_CALCULATED_FORMULA_FILE
specifier|private
specifier|static
specifier|final
name|String
name|TEST_CALCULATED_FORMULA_FILE
init|=
literal|"complex_calculated_formula.json"
decl_stmt|;
DECL|field|TEST_CASE_FILE
specifier|private
specifier|static
specifier|final
name|String
name|TEST_CASE_FILE
init|=
literal|"case.json"
decl_stmt|;
annotation|@
name|Parameter
argument_list|(
literal|1
argument_list|)
DECL|field|description
specifier|public
name|SObjectDescription
name|description
decl_stmt|;
annotation|@
name|Parameter
argument_list|(
literal|4
argument_list|)
DECL|field|fileNameAdapter
specifier|public
name|Function
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|fileNameAdapter
init|=
name|Function
operator|.
name|identity
argument_list|()
decl_stmt|;
annotation|@
name|Parameter
argument_list|(
literal|0
argument_list|)
DECL|field|json
specifier|public
name|String
name|json
decl_stmt|;
annotation|@
name|Parameter
argument_list|(
literal|3
argument_list|)
DECL|field|mojo
specifier|public
name|GenerateMojo
name|mojo
decl_stmt|;
annotation|@
name|Parameter
argument_list|(
literal|2
argument_list|)
DECL|field|sources
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|sources
decl_stmt|;
annotation|@
name|Rule
DECL|field|temp
specifier|public
name|TemporaryFolder
name|temp
init|=
operator|new
name|TemporaryFolder
argument_list|()
decl_stmt|;
annotation|@
name|Test
DECL|method|testProcessDescription ()
specifier|public
name|void
name|testProcessDescription
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|File
name|pkgDir
init|=
name|temp
operator|.
name|newFolder
argument_list|()
decl_stmt|;
specifier|final
name|GenerateMojo
operator|.
name|GeneratorUtility
name|utility
init|=
name|mojo
operator|.
expr|new
name|GeneratorUtility
argument_list|()
decl_stmt|;
specifier|final
name|RestClient
name|client
init|=
name|mockRestClient
argument_list|()
decl_stmt|;
name|mojo
operator|.
name|descriptions
operator|=
operator|new
name|ObjectDescriptions
argument_list|(
name|client
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|mojo
operator|.
name|getLog
argument_list|()
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|sObjectNames
init|=
name|StreamSupport
operator|.
name|stream
argument_list|(
name|mojo
operator|.
name|descriptions
operator|.
name|fetched
argument_list|()
operator|.
name|spliterator
argument_list|()
argument_list|,
literal|false
argument_list|)
operator|.
name|map
argument_list|(
name|SObjectDescription
operator|::
name|getName
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toSet
argument_list|()
argument_list|)
decl_stmt|;
name|mojo
operator|.
name|processDescription
argument_list|(
name|pkgDir
argument_list|,
name|description
argument_list|,
name|utility
argument_list|,
name|sObjectNames
argument_list|)
expr_stmt|;
for|for
control|(
specifier|final
name|String
name|source
range|:
name|sources
control|)
block|{
specifier|final
name|String
name|expected
init|=
name|fileNameAdapter
operator|.
name|apply
argument_list|(
name|source
argument_list|)
decl_stmt|;
specifier|final
name|File
name|generatedFile
init|=
operator|new
name|File
argument_list|(
name|pkgDir
argument_list|,
name|source
argument_list|)
decl_stmt|;
specifier|final
name|String
name|generatedContent
init|=
name|FileUtils
operator|.
name|readFileToString
argument_list|(
name|generatedFile
argument_list|,
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
decl_stmt|;
specifier|final
name|String
name|expectedContent
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|CamelSalesforceMojoOutputTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"/generated/"
operator|+
name|expected
argument_list|)
argument_list|,
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Generated source file in "
operator|+
name|source
operator|+
literal|" must be equal to the one present in test/resources/"
operator|+
name|expected
argument_list|,
name|expectedContent
argument_list|,
name|generatedContent
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Parameters
argument_list|(
name|name
operator|=
literal|"json = {0}, source = {2}"
argument_list|)
DECL|method|parameters ()
specifier|public
specifier|static
name|Iterable
argument_list|<
name|Object
index|[]
argument_list|>
name|parameters
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|testCase
argument_list|(
name|TEST_CASE_FILE
argument_list|,
literal|"Case.java"
argument_list|)
argument_list|,
name|testCase
argument_list|(
name|TEST_CASE_FILE
argument_list|,
literal|"Case_PickListAccentMarkEnum.java"
argument_list|)
argument_list|,
name|testCase
argument_list|(
name|TEST_CASE_FILE
argument_list|,
literal|"Case_PickListQuotationMarkEnum.java"
argument_list|)
argument_list|,
name|testCase
argument_list|(
name|TEST_CASE_FILE
argument_list|,
literal|"Case_PickListSlashEnum.java"
argument_list|)
argument_list|,
comment|//
name|testCase
argument_list|(
name|TEST_CASE_FILE
argument_list|,
literal|"QueryRecordsCase.java"
argument_list|)
argument_list|,
name|testCase
argument_list|(
name|TEST_CALCULATED_FORMULA_FILE
argument_list|,
literal|"ComplexCalculatedFormula.java"
argument_list|)
argument_list|,
name|testCase
argument_list|(
name|TEST_CALCULATED_FORMULA_FILE
argument_list|,
literal|"QueryRecordsComplexCalculatedFormula.java"
argument_list|)
argument_list|,
name|testCase
argument_list|(
literal|"asset.json"
argument_list|,
literal|"Asset.java"
argument_list|)
argument_list|,
comment|//
name|testCase
argument_list|(
literal|"asset.json"
argument_list|,
name|mojo
lambda|->
block|{
name|mojo
operator|.
name|customTypes
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|mojo
operator|.
name|customTypes
operator|.
name|put
argument_list|(
literal|"date"
argument_list|,
literal|"java.time.LocalDateTime"
argument_list|)
expr_stmt|;
name|mojo
operator|.
name|setup
argument_list|()
expr_stmt|;
block|}
argument_list|,
name|s
lambda|->
literal|"Asset_LocalDateTime.java"
argument_list|,
literal|"Asset.java"
argument_list|)
argument_list|,
comment|//
name|testCase
argument_list|(
literal|"with_reference.json"
argument_list|,
literal|"With_Reference__c.java"
argument_list|)
argument_list|)
return|;
block|}
DECL|method|createMojo ()
specifier|static
name|GenerateMojo
name|createMojo
parameter_list|()
block|{
specifier|final
name|GenerateMojo
name|mojo
init|=
operator|new
name|GenerateMojo
argument_list|()
decl_stmt|;
name|mojo
operator|.
name|engine
operator|=
name|GenerateMojo
operator|.
name|createVelocityEngine
argument_list|()
expr_stmt|;
return|return
name|mojo
return|;
block|}
DECL|method|createSObjectDescription (final String name)
specifier|static
name|SObjectDescription
name|createSObjectDescription
parameter_list|(
specifier|final
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
try|try
init|(
name|InputStream
name|inputStream
init|=
name|CamelSalesforceMojoOutputTest
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"/"
operator|+
name|name
argument_list|)
init|)
block|{
specifier|final
name|ObjectMapper
name|mapper
init|=
name|JsonUtils
operator|.
name|createObjectMapper
argument_list|()
decl_stmt|;
return|return
name|mapper
operator|.
name|readValue
argument_list|(
name|inputStream
argument_list|,
name|SObjectDescription
operator|.
name|class
argument_list|)
return|;
block|}
block|}
DECL|method|mockRestClient ()
specifier|static
name|RestClient
name|mockRestClient
parameter_list|()
block|{
specifier|final
name|RestClient
name|client
init|=
name|mock
argument_list|(
name|RestClient
operator|.
name|class
argument_list|)
decl_stmt|;
name|doAnswer
argument_list|(
name|provideResource
argument_list|(
literal|"/global_sobjects.json"
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|client
argument_list|)
operator|.
name|getGlobalObjects
argument_list|(
name|anyMap
argument_list|()
argument_list|,
name|any
argument_list|(
name|ResponseCallback
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|doAnswer
argument_list|(
name|provideResource
argument_list|(
literal|"/account.json"
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|client
argument_list|)
operator|.
name|getDescription
argument_list|(
name|eq
argument_list|(
literal|"Account"
argument_list|)
argument_list|,
name|anyMap
argument_list|()
argument_list|,
name|any
argument_list|(
name|ResponseCallback
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|doAnswer
argument_list|(
name|provideResource
argument_list|(
literal|"/asset.json"
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|client
argument_list|)
operator|.
name|getDescription
argument_list|(
name|eq
argument_list|(
literal|"Asset"
argument_list|)
argument_list|,
name|anyMap
argument_list|()
argument_list|,
name|any
argument_list|(
name|ResponseCallback
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|doAnswer
argument_list|(
name|provideResource
argument_list|(
literal|"/case.json"
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|client
argument_list|)
operator|.
name|getDescription
argument_list|(
name|eq
argument_list|(
literal|"Case"
argument_list|)
argument_list|,
name|anyMap
argument_list|()
argument_list|,
name|any
argument_list|(
name|ResponseCallback
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|doAnswer
argument_list|(
name|provideResource
argument_list|(
literal|"/invoice.json"
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|client
argument_list|)
operator|.
name|getDescription
argument_list|(
name|eq
argument_list|(
literal|"Invoice__c"
argument_list|)
argument_list|,
name|anyMap
argument_list|()
argument_list|,
name|any
argument_list|(
name|ResponseCallback
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|doAnswer
argument_list|(
name|provideResource
argument_list|(
literal|"/line_item.json"
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|client
argument_list|)
operator|.
name|getDescription
argument_list|(
name|eq
argument_list|(
literal|"Line_Item__c"
argument_list|)
argument_list|,
name|anyMap
argument_list|()
argument_list|,
name|any
argument_list|(
name|ResponseCallback
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|doAnswer
argument_list|(
name|provideResource
argument_list|(
literal|"/merchandise.json"
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|client
argument_list|)
operator|.
name|getDescription
argument_list|(
name|eq
argument_list|(
literal|"Merchandise__c"
argument_list|)
argument_list|,
name|anyMap
argument_list|()
argument_list|,
name|any
argument_list|(
name|ResponseCallback
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|doAnswer
argument_list|(
name|provideResource
argument_list|(
literal|"/with_reference.json"
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|client
argument_list|)
operator|.
name|getDescription
argument_list|(
name|eq
argument_list|(
literal|"With_Reference__c"
argument_list|)
argument_list|,
name|anyMap
argument_list|()
argument_list|,
name|any
argument_list|(
name|ResponseCallback
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|doAnswer
argument_list|(
name|provideResource
argument_list|(
literal|"/product2.json"
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|client
argument_list|)
operator|.
name|getDescription
argument_list|(
name|eq
argument_list|(
literal|"Product2"
argument_list|)
argument_list|,
name|anyMap
argument_list|()
argument_list|,
name|any
argument_list|(
name|ResponseCallback
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|doAnswer
argument_list|(
name|provideResource
argument_list|(
literal|"/with_external_id.json"
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|client
argument_list|)
operator|.
name|getDescription
argument_list|(
name|eq
argument_list|(
literal|"With_External_Id__c"
argument_list|)
argument_list|,
name|anyMap
argument_list|()
argument_list|,
name|any
argument_list|(
name|ResponseCallback
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|doAnswer
argument_list|(
name|provideResource
argument_list|(
literal|"/group.json"
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|client
argument_list|)
operator|.
name|getDescription
argument_list|(
name|eq
argument_list|(
literal|"Group"
argument_list|)
argument_list|,
name|anyMap
argument_list|()
argument_list|,
name|any
argument_list|(
name|ResponseCallback
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|doAnswer
argument_list|(
name|provideResource
argument_list|(
literal|"/user.json"
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|client
argument_list|)
operator|.
name|getDescription
argument_list|(
name|eq
argument_list|(
literal|"User"
argument_list|)
argument_list|,
name|anyMap
argument_list|()
argument_list|,
name|any
argument_list|(
name|ResponseCallback
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|client
return|;
block|}
DECL|method|provideResource (final String resource)
specifier|static
name|Answer
argument_list|<
name|Void
argument_list|>
name|provideResource
parameter_list|(
specifier|final
name|String
name|resource
parameter_list|)
block|{
return|return
name|invocation
lambda|->
block|{
specifier|final
name|ResponseCallback
name|callback
init|=
name|Arrays
operator|.
name|stream
argument_list|(
name|invocation
operator|.
name|getArguments
argument_list|()
argument_list|)
operator|.
name|filter
argument_list|(
name|ResponseCallback
operator|.
name|class
operator|::
name|isInstance
argument_list|)
operator|.
name|map
argument_list|(
name|ResponseCallback
operator|.
name|class
operator|::
name|cast
argument_list|)
operator|.
name|findFirst
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
name|callback
operator|.
name|onResponse
argument_list|(
name|CamelSalesforceMojoOutputTest
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
name|resource
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
return|;
block|}
DECL|method|testCase (final String json, final Consumer<GenerateMojo> mojoConfigurator, final Function<String, String> adapter, final String... sources)
specifier|static
name|Object
index|[]
name|testCase
parameter_list|(
specifier|final
name|String
name|json
parameter_list|,
specifier|final
name|Consumer
argument_list|<
name|GenerateMojo
argument_list|>
name|mojoConfigurator
parameter_list|,
specifier|final
name|Function
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|adapter
parameter_list|,
specifier|final
name|String
modifier|...
name|sources
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|GenerateMojo
name|mojo
init|=
name|createMojo
argument_list|()
decl_stmt|;
name|mojoConfigurator
operator|.
name|accept
argument_list|(
name|mojo
argument_list|)
expr_stmt|;
return|return
operator|new
name|Object
index|[]
block|{
name|json
block|,
name|createSObjectDescription
argument_list|(
name|json
argument_list|)
block|,
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|sources
argument_list|)
argument_list|)
block|,
name|mojo
block|,
name|adapter
block|}
return|;
block|}
DECL|method|testCase (final String json, final Consumer<GenerateMojo> mojoConfigurator, final String... sources)
specifier|static
name|Object
index|[]
name|testCase
parameter_list|(
specifier|final
name|String
name|json
parameter_list|,
specifier|final
name|Consumer
argument_list|<
name|GenerateMojo
argument_list|>
name|mojoConfigurator
parameter_list|,
specifier|final
name|String
modifier|...
name|sources
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|testCase
argument_list|(
name|json
argument_list|,
name|mojoConfigurator
argument_list|,
name|Function
operator|.
name|identity
argument_list|()
argument_list|,
name|sources
argument_list|)
return|;
block|}
DECL|method|testCase (final String json, final String... sources)
specifier|static
name|Object
index|[]
name|testCase
parameter_list|(
specifier|final
name|String
name|json
parameter_list|,
specifier|final
name|String
modifier|...
name|sources
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|testCase
argument_list|(
name|json
argument_list|,
name|String
operator|::
name|valueOf
argument_list|,
name|sources
argument_list|)
return|;
block|}
block|}
end_class

end_unit

