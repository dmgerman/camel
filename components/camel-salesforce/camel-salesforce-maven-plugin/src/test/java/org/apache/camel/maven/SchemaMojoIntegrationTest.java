begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.maven
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|module
operator|.
name|jsonSchema
operator|.
name|JsonSchema
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|module
operator|.
name|jsonSchema
operator|.
name|types
operator|.
name|ObjectSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|utils
operator|.
name|JsonUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
operator|.
name|AbstractSalesforceMojoIntegrationTest
operator|.
name|setup
import|;
end_import

begin_class
DECL|class|SchemaMojoIntegrationTest
specifier|public
class|class
name|SchemaMojoIntegrationTest
block|{
annotation|@
name|Rule
DECL|field|temp
specifier|public
name|TemporaryFolder
name|temp
init|=
operator|new
name|TemporaryFolder
argument_list|()
decl_stmt|;
annotation|@
name|Test
DECL|method|testExecuteJsonSchema ()
specifier|public
name|void
name|testExecuteJsonSchema
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|SchemaMojo
name|mojo
init|=
operator|new
name|SchemaMojo
argument_list|()
decl_stmt|;
name|setup
argument_list|(
name|mojo
argument_list|)
expr_stmt|;
name|mojo
operator|.
name|includes
operator|=
operator|new
name|String
index|[]
block|{
literal|"Account"
block|}
expr_stmt|;
name|mojo
operator|.
name|outputDirectory
operator|=
name|temp
operator|.
name|getRoot
argument_list|()
expr_stmt|;
name|mojo
operator|.
name|jsonSchemaFilename
operator|=
literal|"test-schema.json"
expr_stmt|;
name|mojo
operator|.
name|jsonSchemaId
operator|=
name|JsonUtils
operator|.
name|DEFAULT_ID_PREFIX
expr_stmt|;
comment|// generate code
name|mojo
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// validate generated schema
specifier|final
name|File
name|schemaFile
init|=
name|mojo
operator|.
name|outputDirectory
operator|.
name|toPath
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"test-schema.json"
argument_list|)
operator|.
name|toFile
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Output file was not created"
argument_list|,
name|schemaFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|ObjectMapper
name|objectMapper
init|=
name|JsonUtils
operator|.
name|createObjectMapper
argument_list|()
decl_stmt|;
specifier|final
name|JsonSchema
name|jsonSchema
init|=
name|objectMapper
operator|.
name|readValue
argument_list|(
name|schemaFile
argument_list|,
name|JsonSchema
operator|.
name|class
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Expected root JSON schema with oneOf element"
argument_list|,
name|jsonSchema
operator|.
name|isObjectSchema
argument_list|()
operator|&&
operator|!
operator|(
operator|(
name|ObjectSchema
operator|)
name|jsonSchema
operator|)
operator|.
name|getOneOf
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

