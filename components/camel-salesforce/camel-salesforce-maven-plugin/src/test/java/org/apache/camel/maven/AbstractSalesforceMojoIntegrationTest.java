begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.maven
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|SalesforceEndpointConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|internal
operator|.
name|client
operator|.
name|RestClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|MojoExecutionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|MojoFailureException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertThat
import|;
end_import

begin_class
DECL|class|AbstractSalesforceMojoIntegrationTest
specifier|public
class|class
name|AbstractSalesforceMojoIntegrationTest
block|{
DECL|field|NO_HEADERS
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|NO_HEADERS
init|=
name|Collections
operator|.
name|emptyMap
argument_list|()
decl_stmt|;
DECL|field|TEST_LOGIN_PROPERTIES
specifier|private
specifier|static
specifier|final
name|String
name|TEST_LOGIN_PROPERTIES
init|=
literal|"../test-salesforce-login.properties"
decl_stmt|;
annotation|@
name|Test
DECL|method|shouldLoginAndProvideRestClient ()
specifier|public
name|void
name|shouldLoginAndProvideRestClient
parameter_list|()
throws|throws
name|IOException
throws|,
name|MojoExecutionException
throws|,
name|MojoFailureException
block|{
specifier|final
name|AbstractSalesforceMojo
name|mojo
init|=
operator|new
name|AbstractSalesforceMojo
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|void
name|executeWithClient
parameter_list|(
specifier|final
name|RestClient
name|client
parameter_list|)
throws|throws
name|MojoExecutionException
block|{
name|assertThat
argument_list|(
name|client
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|client
operator|.
name|getGlobalObjects
argument_list|(
name|NO_HEADERS
argument_list|,
parameter_list|(
name|response
parameter_list|,
name|headers
parameter_list|,
name|exception
parameter_list|)
lambda|->
block|{
name|assertThat
argument_list|(
name|exception
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|setup
argument_list|(
name|mojo
argument_list|)
expr_stmt|;
name|mojo
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
DECL|method|setup (final AbstractSalesforceMojo mojo)
specifier|static
name|void
name|setup
parameter_list|(
specifier|final
name|AbstractSalesforceMojo
name|mojo
parameter_list|)
throws|throws
name|IOException
block|{
comment|// load test-salesforce-login properties
try|try
init|(
specifier|final
name|InputStream
name|stream
init|=
operator|new
name|FileInputStream
argument_list|(
name|TEST_LOGIN_PROPERTIES
argument_list|)
init|)
block|{
specifier|final
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|properties
operator|.
name|load
argument_list|(
name|stream
argument_list|)
expr_stmt|;
name|mojo
operator|.
name|clientId
operator|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"salesforce.client.id"
argument_list|)
expr_stmt|;
name|mojo
operator|.
name|clientSecret
operator|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"salesforce.client.secret"
argument_list|)
expr_stmt|;
name|mojo
operator|.
name|userName
operator|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"salesforce.username"
argument_list|)
expr_stmt|;
name|mojo
operator|.
name|password
operator|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"salesforce.password"
argument_list|)
expr_stmt|;
name|mojo
operator|.
name|loginUrl
operator|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"salesforce.login.url"
argument_list|)
expr_stmt|;
name|mojo
operator|.
name|version
operator|=
name|SalesforceEndpointConfig
operator|.
name|DEFAULT_VERSION
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|FileNotFoundException
name|e
parameter_list|)
block|{
specifier|final
name|FileNotFoundException
name|exception
init|=
operator|new
name|FileNotFoundException
argument_list|(
literal|"Create a properties file named "
operator|+
name|TEST_LOGIN_PROPERTIES
operator|+
literal|" with clientId, clientSecret, userName, password"
operator|+
literal|" for a Salesforce account with Merchandise and Invoice objects from Salesforce Guides."
argument_list|)
decl_stmt|;
name|exception
operator|.
name|initCause
argument_list|(
name|e
argument_list|)
expr_stmt|;
throw|throw
name|exception
throw|;
block|}
block|}
block|}
end_class

end_unit

