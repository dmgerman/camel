begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.maven
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|SObjectDescription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|SObjectField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|endsWith
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
DECL|class|GenerateMojoTest
specifier|public
class|class
name|GenerateMojoTest
block|{
DECL|field|ACCOUNT
specifier|private
specifier|static
specifier|final
name|String
name|ACCOUNT
init|=
literal|"Account"
decl_stmt|;
DECL|field|CONTACT
specifier|private
specifier|static
specifier|final
name|String
name|CONTACT
init|=
literal|"Contact"
decl_stmt|;
DECL|field|MULTIPICKLIST
specifier|private
specifier|static
specifier|final
name|String
name|MULTIPICKLIST
init|=
literal|"multipicklist"
decl_stmt|;
DECL|field|PICKLIST
specifier|private
specifier|static
specifier|final
name|String
name|PICKLIST
init|=
literal|"picklist"
decl_stmt|;
DECL|field|PROPER_DEFAULT_MULTIPICKLIST_TYPE_ENDING
specifier|private
specifier|static
specifier|final
name|String
name|PROPER_DEFAULT_MULTIPICKLIST_TYPE_ENDING
init|=
literal|"Enum[]"
decl_stmt|;
DECL|field|PROPER_DEFAULT_PICKLIST_TYPE_ENDING
specifier|private
specifier|static
specifier|final
name|String
name|PROPER_DEFAULT_PICKLIST_TYPE_ENDING
init|=
literal|"Enum"
decl_stmt|;
DECL|field|PROPER_MULTIPICKLIST_TO_STRING_TYPE
specifier|private
specifier|static
specifier|final
name|String
name|PROPER_MULTIPICKLIST_TO_STRING_TYPE
init|=
name|String
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|"[]"
decl_stmt|;
DECL|field|PROPER_PICKLIST_TO_STRING_TYPE
specifier|private
specifier|static
specifier|final
name|String
name|PROPER_PICKLIST_TO_STRING_TYPE
init|=
name|String
operator|.
name|class
operator|.
name|getName
argument_list|()
decl_stmt|;
annotation|@
name|Test
DECL|method|shouldParsePicklistsToObjects ()
specifier|public
name|void
name|shouldParsePicklistsToObjects
parameter_list|()
block|{
comment|// given
specifier|final
name|int
name|properCountExceptions
init|=
literal|0
decl_stmt|;
specifier|final
name|GenerateMojo
name|mojo
init|=
operator|new
name|GenerateMojo
argument_list|()
decl_stmt|;
name|mojo
operator|.
name|picklistToStrings
operator|=
name|createValidPicklistToStrings
argument_list|()
expr_stmt|;
name|mojo
operator|.
name|picklistToEnums
operator|=
name|createValidPicklistToEnums
argument_list|()
expr_stmt|;
comment|// when
name|int
name|resultCountExceptions
init|=
literal|0
decl_stmt|;
try|try
block|{
name|mojo
operator|.
name|parsePicklistToEnums
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|resultCountExceptions
operator|++
expr_stmt|;
block|}
try|try
block|{
name|mojo
operator|.
name|parsePicklistToStrings
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|resultCountExceptions
operator|++
expr_stmt|;
block|}
comment|// then
name|assertEquals
argument_list|(
name|properCountExceptions
argument_list|,
name|resultCountExceptions
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldParsePicklistsToObjectsFail ()
specifier|public
name|void
name|shouldParsePicklistsToObjectsFail
parameter_list|()
block|{
comment|// given
specifier|final
name|int
name|properCountExceptions
init|=
literal|2
decl_stmt|;
specifier|final
name|String
index|[]
name|invalidPicklistToStrings
init|=
operator|new
name|String
index|[]
block|{
literal|"Account,DataSource"
block|}
decl_stmt|;
specifier|final
name|String
index|[]
name|invalidPicklistToEnums
init|=
operator|new
name|String
index|[]
block|{
literal|"Con-tact.Contact_Source_Information__c"
block|}
decl_stmt|;
specifier|final
name|GenerateMojo
name|mojo
init|=
operator|new
name|GenerateMojo
argument_list|()
decl_stmt|;
name|mojo
operator|.
name|picklistToStrings
operator|=
name|invalidPicklistToStrings
expr_stmt|;
name|mojo
operator|.
name|picklistToEnums
operator|=
name|invalidPicklistToEnums
expr_stmt|;
comment|// when
name|int
name|resultCountExceptions
init|=
literal|0
decl_stmt|;
try|try
block|{
name|mojo
operator|.
name|parsePicklistToEnums
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|resultCountExceptions
operator|++
expr_stmt|;
block|}
try|try
block|{
name|mojo
operator|.
name|parsePicklistToStrings
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|resultCountExceptions
operator|++
expr_stmt|;
block|}
comment|// then
name|assertEquals
argument_list|(
name|properCountExceptions
argument_list|,
name|resultCountExceptions
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldReturnStringOrEnumTypesDefaultEnumMode ()
specifier|public
name|void
name|shouldReturnStringOrEnumTypesDefaultEnumMode
parameter_list|()
block|{
comment|// given
specifier|final
name|String
name|sObjectName
init|=
name|ACCOUNT
decl_stmt|;
specifier|final
name|GenerateMojo
name|mojo
init|=
operator|new
name|GenerateMojo
argument_list|()
decl_stmt|;
name|mojo
operator|.
name|picklistToStrings
operator|=
operator|new
name|String
index|[]
block|{
name|sObjectName
operator|+
literal|".StandardPicklist"
block|,
name|sObjectName
operator|+
literal|".Stringified_Custom_Picklist_Type__c"
block|}
expr_stmt|;
name|mojo
operator|.
name|parsePicklistToStrings
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|mojo
operator|.
name|picklistToStrings
operator|!=
literal|null
operator|&&
name|mojo
operator|.
name|picklistToStrings
operator|.
name|length
operator|>
literal|1
argument_list|)
expr_stmt|;
specifier|final
name|SObjectDescription
name|accountDescription
init|=
operator|new
name|SObjectDescription
argument_list|()
decl_stmt|;
name|accountDescription
operator|.
name|setName
argument_list|(
name|ACCOUNT
argument_list|)
expr_stmt|;
name|accountDescription
operator|.
name|setFields
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|SObjectField
name|defaultPicklist
init|=
name|createField
argument_list|(
literal|"Default_Picklist__c"
argument_list|,
name|PICKLIST
argument_list|)
decl_stmt|;
specifier|final
name|SObjectField
name|defaultMultipicklist
init|=
name|createField
argument_list|(
literal|"Default_Multipicklist__c"
argument_list|,
name|MULTIPICKLIST
argument_list|)
decl_stmt|;
specifier|final
name|SObjectField
name|picklistToString
init|=
name|createField
argument_list|(
name|mojo
operator|.
name|picklistToStrings
index|[
literal|0
index|]
operator|.
name|substring
argument_list|(
name|mojo
operator|.
name|picklistToStrings
index|[
literal|0
index|]
operator|.
name|indexOf
argument_list|(
literal|'.'
argument_list|)
operator|+
literal|1
argument_list|)
argument_list|,
name|PICKLIST
argument_list|)
decl_stmt|;
specifier|final
name|SObjectField
name|multipicklistToString
init|=
name|createField
argument_list|(
name|mojo
operator|.
name|picklistToStrings
index|[
literal|1
index|]
operator|.
name|substring
argument_list|(
name|mojo
operator|.
name|picklistToStrings
index|[
literal|1
index|]
operator|.
name|indexOf
argument_list|(
literal|'.'
argument_list|)
operator|+
literal|1
argument_list|)
argument_list|,
name|MULTIPICKLIST
argument_list|)
decl_stmt|;
name|accountDescription
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
name|defaultPicklist
argument_list|)
expr_stmt|;
name|accountDescription
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
name|defaultMultipicklist
argument_list|)
expr_stmt|;
name|accountDescription
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
name|picklistToString
argument_list|)
expr_stmt|;
name|accountDescription
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
name|multipicklistToString
argument_list|)
expr_stmt|;
name|mojo
operator|.
name|useStringsForPicklists
operator|=
literal|false
expr_stmt|;
specifier|final
name|GenerateMojo
operator|.
name|GeneratorUtility
name|utility
init|=
name|mojo
operator|.
expr|new
name|GeneratorUtility
argument_list|()
decl_stmt|;
comment|// when
specifier|final
name|String
name|resultDefaultPicklistType
init|=
name|utility
operator|.
name|getFieldType
argument_list|(
name|accountDescription
argument_list|,
name|defaultPicklist
argument_list|)
decl_stmt|;
specifier|final
name|String
name|resultDefaultMultipicklistType
init|=
name|utility
operator|.
name|getFieldType
argument_list|(
name|accountDescription
argument_list|,
name|defaultMultipicklist
argument_list|)
decl_stmt|;
specifier|final
name|String
name|resultPicklistToStringType
init|=
name|utility
operator|.
name|getFieldType
argument_list|(
name|accountDescription
argument_list|,
name|picklistToString
argument_list|)
decl_stmt|;
specifier|final
name|String
name|resultMultipicklistToStringType
init|=
name|utility
operator|.
name|getFieldType
argument_list|(
name|accountDescription
argument_list|,
name|multipicklistToString
argument_list|)
decl_stmt|;
comment|// then
name|assertThat
argument_list|(
name|resultDefaultPicklistType
argument_list|,
name|endsWith
argument_list|(
name|PROPER_DEFAULT_PICKLIST_TYPE_ENDING
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|resultDefaultMultipicklistType
argument_list|,
name|endsWith
argument_list|(
name|PROPER_DEFAULT_MULTIPICKLIST_TYPE_ENDING
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|resultPicklistToStringType
argument_list|,
name|equalTo
argument_list|(
name|PROPER_PICKLIST_TO_STRING_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|resultMultipicklistToStringType
argument_list|,
name|equalTo
argument_list|(
name|PROPER_MULTIPICKLIST_TO_STRING_TYPE
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldReturnStringOrEnumTypesStringMode ()
specifier|public
name|void
name|shouldReturnStringOrEnumTypesStringMode
parameter_list|()
block|{
comment|// given
specifier|final
name|String
name|sObjectName
init|=
name|CONTACT
decl_stmt|;
specifier|final
name|GenerateMojo
name|mojo
init|=
operator|new
name|GenerateMojo
argument_list|()
decl_stmt|;
name|mojo
operator|.
name|picklistToEnums
operator|=
operator|new
name|String
index|[]
block|{
name|sObjectName
operator|+
literal|".Enum_Contact_Source_Information__c"
block|,
name|sObjectName
operator|+
literal|".Enum_Contract_Type__c"
block|}
expr_stmt|;
name|mojo
operator|.
name|parsePicklistToEnums
argument_list|()
expr_stmt|;
specifier|final
name|SObjectDescription
name|contactDescription
init|=
operator|new
name|SObjectDescription
argument_list|()
decl_stmt|;
name|contactDescription
operator|.
name|setName
argument_list|(
name|sObjectName
argument_list|)
expr_stmt|;
name|contactDescription
operator|.
name|setFields
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|SObjectField
name|stringPicklist
init|=
name|createField
argument_list|(
literal|"Nonspecific_Picklist__c"
argument_list|,
name|PICKLIST
argument_list|)
decl_stmt|;
specifier|final
name|SObjectField
name|stringMultipicklist
init|=
name|createField
argument_list|(
literal|"Nonspecific_Multipicklist__c"
argument_list|,
name|MULTIPICKLIST
argument_list|)
decl_stmt|;
specifier|final
name|SObjectField
name|picklistToEnum
init|=
name|createField
argument_list|(
name|mojo
operator|.
name|picklistToEnums
index|[
literal|0
index|]
operator|.
name|substring
argument_list|(
name|mojo
operator|.
name|picklistToEnums
index|[
literal|0
index|]
operator|.
name|indexOf
argument_list|(
literal|'.'
argument_list|)
operator|+
literal|1
argument_list|)
argument_list|,
name|PICKLIST
argument_list|)
decl_stmt|;
specifier|final
name|SObjectField
name|multipicklistToEnum
init|=
name|createField
argument_list|(
name|mojo
operator|.
name|picklistToEnums
index|[
literal|1
index|]
operator|.
name|substring
argument_list|(
name|mojo
operator|.
name|picklistToEnums
index|[
literal|1
index|]
operator|.
name|indexOf
argument_list|(
literal|'.'
argument_list|)
operator|+
literal|1
argument_list|)
argument_list|,
name|MULTIPICKLIST
argument_list|)
decl_stmt|;
name|contactDescription
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
name|stringPicklist
argument_list|)
expr_stmt|;
name|contactDescription
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
name|stringMultipicklist
argument_list|)
expr_stmt|;
name|contactDescription
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
name|picklistToEnum
argument_list|)
expr_stmt|;
name|contactDescription
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
name|multipicklistToEnum
argument_list|)
expr_stmt|;
name|mojo
operator|.
name|useStringsForPicklists
operator|=
literal|true
expr_stmt|;
specifier|final
name|GenerateMojo
operator|.
name|GeneratorUtility
name|utility
init|=
name|mojo
operator|.
expr|new
name|GeneratorUtility
argument_list|()
decl_stmt|;
comment|// when
specifier|final
name|String
name|resultStringPicklistType
init|=
name|utility
operator|.
name|getFieldType
argument_list|(
name|contactDescription
argument_list|,
name|stringPicklist
argument_list|)
decl_stmt|;
specifier|final
name|String
name|resultStringMultipicklistType
init|=
name|utility
operator|.
name|getFieldType
argument_list|(
name|contactDescription
argument_list|,
name|stringMultipicklist
argument_list|)
decl_stmt|;
specifier|final
name|String
name|resultPicklistToEnumType
init|=
name|utility
operator|.
name|getFieldType
argument_list|(
name|contactDescription
argument_list|,
name|picklistToEnum
argument_list|)
decl_stmt|;
specifier|final
name|String
name|resultMultipicklistToEnumType
init|=
name|utility
operator|.
name|getFieldType
argument_list|(
name|contactDescription
argument_list|,
name|multipicklistToEnum
argument_list|)
decl_stmt|;
comment|// then
name|assertThat
argument_list|(
name|resultPicklistToEnumType
argument_list|,
name|endsWith
argument_list|(
name|PROPER_DEFAULT_PICKLIST_TYPE_ENDING
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|resultMultipicklistToEnumType
argument_list|,
name|endsWith
argument_list|(
name|PROPER_DEFAULT_MULTIPICKLIST_TYPE_ENDING
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|resultStringPicklistType
argument_list|,
name|equalTo
argument_list|(
name|PROPER_PICKLIST_TO_STRING_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|resultStringMultipicklistType
argument_list|,
name|equalTo
argument_list|(
name|PROPER_MULTIPICKLIST_TO_STRING_TYPE
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|createField (final String name, final String type)
specifier|private
specifier|static
name|SObjectField
name|createField
parameter_list|(
specifier|final
name|String
name|name
parameter_list|,
specifier|final
name|String
name|type
parameter_list|)
block|{
specifier|final
name|SObjectField
name|field
init|=
operator|new
name|SObjectField
argument_list|()
decl_stmt|;
name|field
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|field
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
return|return
name|field
return|;
block|}
DECL|method|createValidPicklistToEnums ()
specifier|private
specifier|static
name|String
index|[]
name|createValidPicklistToEnums
parameter_list|()
block|{
return|return
operator|new
name|String
index|[]
block|{
name|CONTACT
operator|+
literal|".Contact_Source_Information__c"
block|,
name|CONTACT
operator|+
literal|".Contract_Type__c"
block|,
name|CONTACT
operator|+
literal|".Custom_Picklist_Type__c"
block|}
return|;
block|}
DECL|method|createValidPicklistToStrings ()
specifier|private
specifier|static
name|String
index|[]
name|createValidPicklistToStrings
parameter_list|()
block|{
return|return
operator|new
name|String
index|[]
block|{
name|ACCOUNT
operator|+
literal|".DataSource"
block|,
name|ACCOUNT
operator|+
literal|".Custom_Picklist_Type__c"
block|,
name|ACCOUNT
operator|+
literal|".Other_Custom_Picklist_Type__c"
block|}
return|;
block|}
block|}
end_class

end_unit

