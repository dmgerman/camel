begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce.internal.joda
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|internal
operator|.
name|joda
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|ZonedDateTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|format
operator|.
name|DateTimeFormatter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|format
operator|.
name|DateTimeFormatterBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|temporal
operator|.
name|TemporalQuery
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|JsonParser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|JsonProcessingException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|JsonToken
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|DeserializationContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|JsonDeserializer
import|;
end_import

begin_class
DECL|class|DateTimeDeserializer
specifier|public
class|class
name|DateTimeDeserializer
extends|extends
name|JsonDeserializer
argument_list|<
name|ZonedDateTime
argument_list|>
block|{
DECL|field|formatter
specifier|private
specifier|final
name|DateTimeFormatter
name|formatter
init|=
operator|new
name|DateTimeFormatterBuilder
argument_list|()
operator|.
name|appendPattern
argument_list|(
literal|"yyyy-MM-dd'T'HH:mm:ss"
argument_list|)
operator|.
name|appendOffset
argument_list|(
literal|"+HH:mm"
argument_list|,
literal|"Z"
argument_list|)
operator|.
name|toFormatter
argument_list|()
decl_stmt|;
DECL|method|DateTimeDeserializer ()
specifier|public
name|DateTimeDeserializer
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|deserialize (JsonParser jsonParser, DeserializationContext deserializationContext)
specifier|public
name|ZonedDateTime
name|deserialize
parameter_list|(
name|JsonParser
name|jsonParser
parameter_list|,
name|DeserializationContext
name|deserializationContext
parameter_list|)
throws|throws
name|IOException
throws|,
name|JsonProcessingException
block|{
name|JsonToken
name|currentToken
init|=
name|jsonParser
operator|.
name|getCurrentToken
argument_list|()
decl_stmt|;
if|if
condition|(
name|currentToken
operator|==
name|JsonToken
operator|.
name|VALUE_STRING
condition|)
block|{
name|String
name|dateTimeAsString
init|=
name|jsonParser
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
return|return
name|formatter
operator|.
name|parse
argument_list|(
name|dateTimeAsString
argument_list|,
name|ZonedDateTime
operator|::
name|from
argument_list|)
return|;
block|}
throw|throw
name|deserializationContext
operator|.
name|mappingException
argument_list|(
name|getClass
argument_list|()
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

