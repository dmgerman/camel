begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce.api.utils
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|format
operator|.
name|DateTimeFormatter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|format
operator|.
name|DateTimeFormatterBuilder
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|time
operator|.
name|temporal
operator|.
name|ChronoField
operator|.
name|HOUR_OF_DAY
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|time
operator|.
name|temporal
operator|.
name|ChronoField
operator|.
name|MINUTE_OF_HOUR
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|time
operator|.
name|temporal
operator|.
name|ChronoField
operator|.
name|NANO_OF_SECOND
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|time
operator|.
name|temporal
operator|.
name|ChronoField
operator|.
name|SECOND_OF_MINUTE
import|;
end_import

begin_class
DECL|class|DateTimeHandling
specifier|final
class|class
name|DateTimeHandling
block|{
DECL|field|ISO_OFFSET_DATE_TIME
specifier|static
specifier|final
name|DateTimeFormatter
name|ISO_OFFSET_DATE_TIME
init|=
operator|new
name|DateTimeFormatterBuilder
argument_list|()
comment|//
operator|.
name|parseCaseInsensitive
argument_list|()
comment|//
operator|.
name|append
argument_list|(
name|DateTimeFormatter
operator|.
name|ISO_LOCAL_DATE
argument_list|)
comment|//
operator|.
name|appendLiteral
argument_list|(
literal|'T'
argument_list|)
comment|//
operator|.
name|appendValue
argument_list|(
name|HOUR_OF_DAY
argument_list|,
literal|2
argument_list|)
comment|//
operator|.
name|appendLiteral
argument_list|(
literal|':'
argument_list|)
comment|//
operator|.
name|appendValue
argument_list|(
name|MINUTE_OF_HOUR
argument_list|,
literal|2
argument_list|)
comment|//
operator|.
name|appendLiteral
argument_list|(
literal|':'
argument_list|)
comment|//
operator|.
name|appendValue
argument_list|(
name|SECOND_OF_MINUTE
argument_list|,
literal|2
argument_list|)
comment|//
operator|.
name|optionalStart
argument_list|()
comment|//
operator|.
name|appendFraction
argument_list|(
name|NANO_OF_SECOND
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|,
literal|true
argument_list|)
comment|//
operator|.
name|optionalEnd
argument_list|()
comment|//
operator|.
name|appendOffset
argument_list|(
literal|"+HHMM"
argument_list|,
literal|"Z"
argument_list|)
comment|//
operator|.
name|toFormatter
argument_list|()
decl_stmt|;
DECL|field|ISO_OFFSET_TIME
specifier|static
specifier|final
name|DateTimeFormatter
name|ISO_OFFSET_TIME
init|=
operator|new
name|DateTimeFormatterBuilder
argument_list|()
comment|//
operator|.
name|parseCaseInsensitive
argument_list|()
comment|//
operator|.
name|appendValue
argument_list|(
name|HOUR_OF_DAY
argument_list|,
literal|2
argument_list|)
comment|//
operator|.
name|appendLiteral
argument_list|(
literal|':'
argument_list|)
comment|//
operator|.
name|appendValue
argument_list|(
name|MINUTE_OF_HOUR
argument_list|,
literal|2
argument_list|)
comment|//
operator|.
name|appendLiteral
argument_list|(
literal|':'
argument_list|)
comment|//
operator|.
name|appendValue
argument_list|(
name|SECOND_OF_MINUTE
argument_list|,
literal|2
argument_list|)
comment|//
operator|.
name|optionalStart
argument_list|()
comment|//
operator|.
name|appendFraction
argument_list|(
name|NANO_OF_SECOND
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|,
literal|true
argument_list|)
comment|//
operator|.
name|optionalEnd
argument_list|()
comment|//
operator|.
name|appendOffset
argument_list|(
literal|"+HHMM"
argument_list|,
literal|"Z"
argument_list|)
comment|//
operator|.
name|toFormatter
argument_list|()
decl_stmt|;
DECL|method|DateTimeHandling ()
specifier|private
name|DateTimeHandling
parameter_list|()
block|{     }
block|}
end_class

end_unit

