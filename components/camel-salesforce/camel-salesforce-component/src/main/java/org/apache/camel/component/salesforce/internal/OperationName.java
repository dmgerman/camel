begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce.internal
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|internal
package|;
end_package

begin_enum
DECL|enum|OperationName
specifier|public
enum|enum
name|OperationName
block|{
comment|// rest API
DECL|enumConstant|GET_VERSIONS
DECL|enumConstant|GET_RESOURCES
DECL|enumConstant|GET_GLOBAL_OBJECTS
DECL|enumConstant|GET_BASIC_INFO
DECL|enumConstant|GET_DESCRIPTION
name|GET_VERSIONS
argument_list|(
literal|"getVersions"
argument_list|)
block|,
name|GET_RESOURCES
argument_list|(
literal|"getResources"
argument_list|)
block|,
name|GET_GLOBAL_OBJECTS
argument_list|(
literal|"getGlobalObjects"
argument_list|)
block|,
name|GET_BASIC_INFO
argument_list|(
literal|"getBasicInfo"
argument_list|)
block|,
name|GET_DESCRIPTION
argument_list|(
DECL|enumConstant|GET_SOBJECT
DECL|enumConstant|CREATE_SOBJECT
DECL|enumConstant|UPDATE_SOBJECT
DECL|enumConstant|DELETE_SOBJECT
DECL|enumConstant|GET_SOBJECT_WITH_ID
literal|"getDescription"
argument_list|)
block|,
name|GET_SOBJECT
argument_list|(
literal|"getSObject"
argument_list|)
block|,
name|CREATE_SOBJECT
argument_list|(
literal|"createSObject"
argument_list|)
block|,
name|UPDATE_SOBJECT
argument_list|(
literal|"updateSObject"
argument_list|)
block|,
name|DELETE_SOBJECT
argument_list|(
literal|"deleteSObject"
argument_list|)
block|,
name|GET_SOBJECT_WITH_ID
argument_list|(
DECL|enumConstant|UPSERT_SOBJECT
DECL|enumConstant|DELETE_SOBJECT_WITH_ID
DECL|enumConstant|GET_BLOB_FIELD
literal|"getSObjectWithId"
argument_list|)
block|,
name|UPSERT_SOBJECT
argument_list|(
literal|"upsertSObject"
argument_list|)
block|,
name|DELETE_SOBJECT_WITH_ID
argument_list|(
literal|"deleteSObjectWithId"
argument_list|)
block|,
name|GET_BLOB_FIELD
argument_list|(
DECL|enumConstant|QUERY
DECL|enumConstant|QUERY_MORE
DECL|enumConstant|QUERY_ALL
DECL|enumConstant|SEARCH
DECL|enumConstant|APEX_CALL
DECL|enumConstant|RECENT
literal|"getBlobField"
argument_list|)
block|,
name|QUERY
argument_list|(
literal|"query"
argument_list|)
block|,
name|QUERY_MORE
argument_list|(
literal|"queryMore"
argument_list|)
block|,
name|QUERY_ALL
argument_list|(
literal|"queryAll"
argument_list|)
block|,
name|SEARCH
argument_list|(
literal|"search"
argument_list|)
block|,
name|APEX_CALL
argument_list|(
literal|"apexCall"
argument_list|)
block|,
name|RECENT
argument_list|(
literal|"recent"
argument_list|)
block|,
comment|// bulk API
DECL|enumConstant|CREATE_JOB
DECL|enumConstant|GET_JOB
DECL|enumConstant|CLOSE_JOB
DECL|enumConstant|ABORT_JOB
DECL|enumConstant|CREATE_BATCH
DECL|enumConstant|GET_BATCH
DECL|enumConstant|GET_ALL_BATCHES
name|CREATE_JOB
argument_list|(
literal|"createJob"
argument_list|)
block|,
name|GET_JOB
argument_list|(
literal|"getJob"
argument_list|)
block|,
name|CLOSE_JOB
argument_list|(
literal|"closeJob"
argument_list|)
block|,
name|ABORT_JOB
argument_list|(
literal|"abortJob"
argument_list|)
block|,
name|CREATE_BATCH
argument_list|(
literal|"createBatch"
argument_list|)
block|,
name|GET_BATCH
argument_list|(
literal|"getBatch"
argument_list|)
block|,
name|GET_ALL_BATCHES
argument_list|(
DECL|enumConstant|GET_REQUEST
literal|"getAllBatches"
argument_list|)
block|,
name|GET_REQUEST
argument_list|(
DECL|enumConstant|GET_RESULTS
DECL|enumConstant|CREATE_BATCH_QUERY
DECL|enumConstant|GET_QUERY_RESULT_IDS
DECL|enumConstant|GET_QUERY_RESULT
literal|"getRequest"
argument_list|)
block|,
name|GET_RESULTS
argument_list|(
literal|"getResults"
argument_list|)
block|,
name|CREATE_BATCH_QUERY
argument_list|(
literal|"createBatchQuery"
argument_list|)
block|,
name|GET_QUERY_RESULT_IDS
argument_list|(
literal|"getQueryResultIds"
argument_list|)
block|,
name|GET_QUERY_RESULT
argument_list|(
literal|"getQueryResult"
argument_list|)
block|,
comment|// analytics API
DECL|enumConstant|GET_RECENT_REPORTS
DECL|enumConstant|GET_REPORT_DESCRIPTION
DECL|enumConstant|EXECUTE_SYNCREPORT
DECL|enumConstant|EXECUTE_ASYNCREPORT
name|GET_RECENT_REPORTS
argument_list|(
literal|"getRecentReports"
argument_list|)
block|,
name|GET_REPORT_DESCRIPTION
argument_list|(
literal|"getReportDescription"
argument_list|)
block|,
name|EXECUTE_SYNCREPORT
argument_list|(
literal|"executeSyncReport"
argument_list|)
block|,
name|EXECUTE_ASYNCREPORT
argument_list|(
DECL|enumConstant|GET_REPORT_INSTANCES
DECL|enumConstant|GET_REPORT_RESULTS
literal|"executeAsyncReport"
argument_list|)
block|,
name|GET_REPORT_INSTANCES
argument_list|(
literal|"getReportInstances"
argument_list|)
block|,
name|GET_REPORT_RESULTS
argument_list|(
literal|"getReportResults"
argument_list|)
block|,
comment|// limits API
DECL|enumConstant|LIMITS
name|LIMITS
argument_list|(
literal|"limits"
argument_list|)
block|,
comment|// Approval Processes and Process Rules API
DECL|enumConstant|APPROVAL
DECL|enumConstant|APPROVALS
name|APPROVAL
argument_list|(
literal|"approval"
argument_list|)
block|,
name|APPROVALS
argument_list|(
literal|"approvals"
argument_list|)
block|,
comment|// Composite API
DECL|enumConstant|COMPOSITE_TREE
DECL|enumConstant|COMPOSITE_BATCH
DECL|enumConstant|COMPOSITE
name|COMPOSITE_TREE
argument_list|(
literal|"composite-tree"
argument_list|)
block|,
name|COMPOSITE_BATCH
argument_list|(
literal|"composite-batch"
argument_list|)
block|,
name|COMPOSITE
argument_list|(
literal|"composite"
argument_list|)
block|;
DECL|field|value
specifier|private
specifier|final
name|String
name|value
decl_stmt|;
DECL|method|OperationName (String value)
name|OperationName
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
DECL|method|value ()
specifier|public
name|String
name|value
parameter_list|()
block|{
return|return
name|value
return|;
block|}
DECL|method|fromValue (String value)
specifier|public
specifier|static
name|OperationName
name|fromValue
parameter_list|(
name|String
name|value
parameter_list|)
block|{
for|for
control|(
name|OperationName
name|operationName
range|:
name|OperationName
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|operationName
operator|.
name|value
operator|.
name|equals
argument_list|(
name|value
argument_list|)
condition|)
block|{
return|return
name|operationName
return|;
block|}
block|}
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|value
argument_list|)
throw|;
block|}
block|}
end_enum

end_unit

