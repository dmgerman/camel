begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce.api
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|JsonGenerator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|SerializerProvider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ser
operator|.
name|PropertyWriter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ser
operator|.
name|impl
operator|.
name|SimpleBeanPropertyFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|AbstractSObjectBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|reflect
operator|.
name|FieldUtils
import|;
end_import

begin_class
DECL|class|FieldsToNullPropertyFilter
specifier|public
class|class
name|FieldsToNullPropertyFilter
extends|extends
name|SimpleBeanPropertyFilter
block|{
annotation|@
name|Override
DECL|method|serializeAsField (Object pojo, JsonGenerator jgen, SerializerProvider provider, PropertyWriter writer)
specifier|public
name|void
name|serializeAsField
parameter_list|(
name|Object
name|pojo
parameter_list|,
name|JsonGenerator
name|jgen
parameter_list|,
name|SerializerProvider
name|provider
parameter_list|,
name|PropertyWriter
name|writer
parameter_list|)
throws|throws
name|Exception
block|{
name|AbstractSObjectBase
name|sob
init|=
operator|(
name|AbstractSObjectBase
operator|)
name|pojo
decl_stmt|;
name|String
name|fieldName
init|=
name|writer
operator|.
name|getName
argument_list|()
decl_stmt|;
name|Object
name|fieldValue
init|=
name|FieldUtils
operator|.
name|readField
argument_list|(
name|pojo
argument_list|,
name|fieldName
argument_list|,
literal|true
argument_list|)
decl_stmt|;
if|if
condition|(
name|sob
operator|.
name|getFieldsToNull
argument_list|()
operator|.
name|contains
argument_list|(
name|writer
operator|.
name|getName
argument_list|()
argument_list|)
operator|||
name|fieldValue
operator|!=
literal|null
condition|)
block|{
name|writer
operator|.
name|serializeAsField
argument_list|(
name|pojo
argument_list|,
name|jgen
argument_list|,
name|provider
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|writer
operator|.
name|serializeAsOmittedField
argument_list|(
name|pojo
argument_list|,
name|jgen
argument_list|,
name|provider
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

