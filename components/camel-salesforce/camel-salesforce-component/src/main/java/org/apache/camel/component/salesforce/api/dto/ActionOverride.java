begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce.api.dto
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
package|;
end_package

begin_import
import|import
name|com
operator|.
name|thoughtworks
operator|.
name|xstream
operator|.
name|annotations
operator|.
name|XStreamConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|PicklistEnumConverter
import|;
end_import

begin_class
DECL|class|ActionOverride
specifier|public
class|class
name|ActionOverride
extends|extends
name|AbstractDTOBase
block|{
DECL|field|actionName
specifier|private
name|String
name|actionName
decl_stmt|;
DECL|field|comment
specifier|private
name|String
name|comment
decl_stmt|;
DECL|field|content
specifier|private
name|String
name|content
decl_stmt|;
DECL|field|skipRecordTypeSelect
specifier|private
name|Boolean
name|skipRecordTypeSelect
decl_stmt|;
annotation|@
name|XStreamConverter
argument_list|(
name|PicklistEnumConverter
operator|.
name|class
argument_list|)
DECL|field|type
specifier|private
name|ActionOverrideTypeEnum
name|type
decl_stmt|;
DECL|method|getActionName ()
specifier|public
name|String
name|getActionName
parameter_list|()
block|{
return|return
name|actionName
return|;
block|}
DECL|method|setActionName (String actionName)
specifier|public
name|void
name|setActionName
parameter_list|(
name|String
name|actionName
parameter_list|)
block|{
name|this
operator|.
name|actionName
operator|=
name|actionName
expr_stmt|;
block|}
DECL|method|getComment ()
specifier|public
name|String
name|getComment
parameter_list|()
block|{
return|return
name|comment
return|;
block|}
DECL|method|setComment (String comment)
specifier|public
name|void
name|setComment
parameter_list|(
name|String
name|comment
parameter_list|)
block|{
name|this
operator|.
name|comment
operator|=
name|comment
expr_stmt|;
block|}
DECL|method|getContent ()
specifier|public
name|String
name|getContent
parameter_list|()
block|{
return|return
name|content
return|;
block|}
DECL|method|setContent (String content)
specifier|public
name|void
name|setContent
parameter_list|(
name|String
name|content
parameter_list|)
block|{
name|this
operator|.
name|content
operator|=
name|content
expr_stmt|;
block|}
DECL|method|getSkipRecordTypeSelect ()
specifier|public
name|Boolean
name|getSkipRecordTypeSelect
parameter_list|()
block|{
return|return
name|skipRecordTypeSelect
return|;
block|}
DECL|method|setSkipRecordTypeSelect (Boolean skipRecordTypeSelect)
specifier|public
name|void
name|setSkipRecordTypeSelect
parameter_list|(
name|Boolean
name|skipRecordTypeSelect
parameter_list|)
block|{
name|this
operator|.
name|skipRecordTypeSelect
operator|=
name|skipRecordTypeSelect
expr_stmt|;
block|}
DECL|method|getType ()
specifier|public
name|ActionOverrideTypeEnum
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
DECL|method|setType (ActionOverrideTypeEnum type)
specifier|public
name|void
name|setType
parameter_list|(
name|ActionOverrideTypeEnum
name|type
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
block|}
block|}
end_class

end_unit

