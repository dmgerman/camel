begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce.api
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|JsonGenerationException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|JsonGenerator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|SerializerProvider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ser
operator|.
name|std
operator|.
name|StdSerializer
import|;
end_import

begin_comment
comment|/**  * Jackson Serializer for generating ';' separated strings for MultiSelect pick-lists.  */
end_comment

begin_class
DECL|class|StringMultiSelectPicklistSerializer
specifier|public
class|class
name|StringMultiSelectPicklistSerializer
extends|extends
name|StdSerializer
argument_list|<
name|Object
argument_list|>
block|{
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1406195556960561677L
decl_stmt|;
DECL|method|StringMultiSelectPicklistSerializer (Class<Object> t)
specifier|protected
name|StringMultiSelectPicklistSerializer
parameter_list|(
name|Class
argument_list|<
name|Object
argument_list|>
name|t
parameter_list|)
block|{
name|super
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serialize (Object value, JsonGenerator jgen, SerializerProvider provider)
specifier|public
name|void
name|serialize
parameter_list|(
name|Object
name|value
parameter_list|,
name|JsonGenerator
name|jgen
parameter_list|,
name|SerializerProvider
name|provider
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|String
index|[]
name|a
init|=
operator|(
name|String
index|[]
operator|)
name|value
decl_stmt|;
specifier|final
name|int
name|length
init|=
name|a
operator|.
name|length
decl_stmt|;
comment|// construct a string of form value1;value2;...
specifier|final
name|StringBuilder
name|buffer
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|length
condition|;
name|i
operator|++
control|)
block|{
name|buffer
operator|.
name|append
argument_list|(
operator|(
name|String
operator|)
name|a
index|[
name|i
index|]
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
operator|(
name|length
operator|-
literal|1
operator|)
condition|)
block|{
name|buffer
operator|.
name|append
argument_list|(
literal|';'
argument_list|)
expr_stmt|;
block|}
block|}
name|jgen
operator|.
name|writeString
argument_list|(
name|buffer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|JsonGenerationException
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"Exception writing pick list value %s of type %s: %s"
argument_list|,
name|value
argument_list|,
name|value
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|jgen
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

