begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|internal
operator|.
name|SalesforceSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|internal
operator|.
name|client
operator|.
name|SalesforceHttpRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|internal
operator|.
name|client
operator|.
name|SalesforceSecurityHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|client
operator|.
name|HttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|client
operator|.
name|HttpClientTransport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|client
operator|.
name|HttpConversation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|client
operator|.
name|HttpRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|client
operator|.
name|api
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|util
operator|.
name|ssl
operator|.
name|SslContextFactory
import|;
end_import

begin_comment
comment|/**  * Custom Salesforce HTTP Client that creates {@link SalesforceHttpRequest} requests.  */
end_comment

begin_class
DECL|class|SalesforceHttpClient
specifier|public
class|class
name|SalesforceHttpClient
extends|extends
name|HttpClient
block|{
comment|// default total request timeout in msecs
DECL|field|DEFAULT_TIMEOUT
specifier|static
specifier|final
name|long
name|DEFAULT_TIMEOUT
init|=
literal|60000
decl_stmt|;
DECL|field|DEFAULT_MAX_RETRIES
specifier|private
specifier|static
specifier|final
name|int
name|DEFAULT_MAX_RETRIES
init|=
literal|3
decl_stmt|;
DECL|field|DEFAULT_MAX_CONTENT_LENGTH
specifier|private
specifier|static
specifier|final
name|int
name|DEFAULT_MAX_CONTENT_LENGTH
init|=
literal|4
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
DECL|field|session
specifier|private
name|SalesforceSession
name|session
decl_stmt|;
DECL|field|maxRetries
specifier|private
name|int
name|maxRetries
init|=
name|DEFAULT_MAX_RETRIES
decl_stmt|;
DECL|field|maxContentLength
specifier|private
name|int
name|maxContentLength
init|=
name|DEFAULT_MAX_CONTENT_LENGTH
decl_stmt|;
DECL|field|timeout
specifier|private
name|long
name|timeout
init|=
name|DEFAULT_TIMEOUT
decl_stmt|;
DECL|method|SalesforceHttpClient ()
specifier|public
name|SalesforceHttpClient
parameter_list|()
block|{     }
DECL|method|SalesforceHttpClient (SslContextFactory sslContextFactory)
specifier|public
name|SalesforceHttpClient
parameter_list|(
name|SslContextFactory
name|sslContextFactory
parameter_list|)
block|{
name|super
argument_list|(
name|sslContextFactory
argument_list|)
expr_stmt|;
block|}
DECL|method|SalesforceHttpClient (HttpClientTransport transport, SslContextFactory sslContextFactory)
specifier|public
name|SalesforceHttpClient
parameter_list|(
name|HttpClientTransport
name|transport
parameter_list|,
name|SslContextFactory
name|sslContextFactory
parameter_list|)
block|{
name|super
argument_list|(
name|transport
argument_list|,
name|sslContextFactory
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|newHttpRequest (HttpConversation conversation, URI uri)
specifier|public
name|HttpRequest
name|newHttpRequest
parameter_list|(
name|HttpConversation
name|conversation
parameter_list|,
name|URI
name|uri
parameter_list|)
block|{
specifier|final
name|SalesforceHttpRequest
name|request
init|=
operator|new
name|SalesforceHttpRequest
argument_list|(
name|this
argument_list|,
name|conversation
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|request
operator|.
name|timeout
argument_list|(
name|timeout
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
annotation|@
name|Override
DECL|method|copyRequest (HttpRequest oldRequest, URI newURI)
specifier|public
name|Request
name|copyRequest
parameter_list|(
name|HttpRequest
name|oldRequest
parameter_list|,
name|URI
name|newURI
parameter_list|)
block|{
return|return
name|super
operator|.
name|copyRequest
argument_list|(
name|oldRequest
argument_list|,
name|newURI
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|doStart ()
specifier|protected
name|void
name|doStart
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|getSession
argument_list|()
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Missing SalesforceSession in property session!"
argument_list|)
throw|;
block|}
name|getProtocolHandlers
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|SalesforceSecurityHandler
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
name|super
operator|.
name|doStart
argument_list|()
expr_stmt|;
block|}
DECL|method|getSession ()
specifier|public
name|SalesforceSession
name|getSession
parameter_list|()
block|{
return|return
name|session
return|;
block|}
DECL|method|setSession (SalesforceSession session)
specifier|public
name|void
name|setSession
parameter_list|(
name|SalesforceSession
name|session
parameter_list|)
block|{
name|this
operator|.
name|session
operator|=
name|session
expr_stmt|;
block|}
DECL|method|getMaxRetries ()
specifier|public
name|int
name|getMaxRetries
parameter_list|()
block|{
return|return
name|maxRetries
return|;
block|}
DECL|method|setMaxRetries (int maxRetries)
specifier|public
name|void
name|setMaxRetries
parameter_list|(
name|int
name|maxRetries
parameter_list|)
block|{
name|this
operator|.
name|maxRetries
operator|=
name|maxRetries
expr_stmt|;
block|}
DECL|method|getMaxContentLength ()
specifier|public
name|int
name|getMaxContentLength
parameter_list|()
block|{
return|return
name|maxContentLength
return|;
block|}
DECL|method|setMaxContentLength (int maxContentLength)
specifier|public
name|void
name|setMaxContentLength
parameter_list|(
name|int
name|maxContentLength
parameter_list|)
block|{
name|this
operator|.
name|maxContentLength
operator|=
name|maxContentLength
expr_stmt|;
block|}
DECL|method|getTimeout ()
specifier|public
name|long
name|getTimeout
parameter_list|()
block|{
return|return
name|timeout
return|;
block|}
DECL|method|setTimeout (long timeout)
specifier|public
name|void
name|setTimeout
parameter_list|(
name|long
name|timeout
parameter_list|)
block|{
name|this
operator|.
name|timeout
operator|=
name|timeout
expr_stmt|;
block|}
block|}
end_class

end_unit

