begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce.springboot
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|springboot
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|SalesforceEndpointConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|SalesforceLoginConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|jsse
operator|.
name|SSLContextParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|boot
operator|.
name|context
operator|.
name|properties
operator|.
name|ConfigurationProperties
import|;
end_import

begin_comment
comment|/**  * The salesforce component is used for integrating Camel with the massive  * Salesforce API.  *   * Generated by camel-package-maven-plugin - do not edit this file!  */
end_comment

begin_class
annotation|@
name|ConfigurationProperties
argument_list|(
name|prefix
operator|=
literal|"camel.component.salesforce"
argument_list|)
DECL|class|SalesforceComponentConfiguration
specifier|public
class|class
name|SalesforceComponentConfiguration
block|{
comment|/**      * To use the shared SalesforceLoginConfig as login configuration      */
DECL|field|loginConfig
specifier|private
name|SalesforceLoginConfig
name|loginConfig
decl_stmt|;
comment|/**      * To use the shared SalesforceLoginConfig as configuration      */
DECL|field|config
specifier|private
name|SalesforceEndpointConfig
name|config
decl_stmt|;
comment|/**      * Used for configuring HTTP client properties as key/value pairs      */
DECL|field|httpClientProperties
specifier|private
name|Map
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|,
name|java
operator|.
name|lang
operator|.
name|Object
argument_list|>
name|httpClientProperties
decl_stmt|;
comment|/**      * To configure security using SSLContextParameters      */
DECL|field|sslContextParameters
specifier|private
name|SSLContextParameters
name|sslContextParameters
decl_stmt|;
comment|/**      * To configure HTTP proxy host      */
DECL|field|httpProxyHost
specifier|private
name|String
name|httpProxyHost
decl_stmt|;
comment|/**      * To configure HTTP proxy port      */
DECL|field|httpProxyPort
specifier|private
name|Integer
name|httpProxyPort
decl_stmt|;
comment|/**      * To configure HTTP proxy username      */
DECL|field|httpProxyUsername
specifier|private
name|String
name|httpProxyUsername
decl_stmt|;
comment|/**      * To configure HTTP proxy password      */
DECL|field|httpProxyPassword
specifier|private
name|String
name|httpProxyPassword
decl_stmt|;
comment|/**      * Enable for Socks4 proxy false by default      */
DECL|field|isHttpProxySocks4
specifier|private
name|boolean
name|isHttpProxySocks4
decl_stmt|;
comment|/**      * Enable for TLS connections true by default      */
DECL|field|isHttpProxySecure
specifier|private
name|boolean
name|isHttpProxySecure
decl_stmt|;
comment|/**      * HTTP proxy included addresses      */
DECL|field|httpProxyIncludedAddresses
specifier|private
name|Set
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|httpProxyIncludedAddresses
decl_stmt|;
comment|/**      * HTTP proxy excluded addresses      */
DECL|field|httpProxyExcludedAddresses
specifier|private
name|Set
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|httpProxyExcludedAddresses
decl_stmt|;
comment|/**      * HTTP proxy authentication URI      */
DECL|field|httpProxyAuthUri
specifier|private
name|String
name|httpProxyAuthUri
decl_stmt|;
comment|/**      * HTTP proxy authentication realm      */
DECL|field|httpProxyRealm
specifier|private
name|String
name|httpProxyRealm
decl_stmt|;
comment|/**      * Use HTTP proxy Digest authentication false by default      */
DECL|field|httpProxyUseDigestAuth
specifier|private
name|boolean
name|httpProxyUseDigestAuth
decl_stmt|;
comment|/**      * Package names to scan for DTO classes (multiple packages can be separated      * by comma).      */
DECL|field|packages
specifier|private
name|String
index|[]
name|packages
decl_stmt|;
DECL|method|getLoginConfig ()
specifier|public
name|SalesforceLoginConfig
name|getLoginConfig
parameter_list|()
block|{
return|return
name|loginConfig
return|;
block|}
DECL|method|setLoginConfig (SalesforceLoginConfig loginConfig)
specifier|public
name|void
name|setLoginConfig
parameter_list|(
name|SalesforceLoginConfig
name|loginConfig
parameter_list|)
block|{
name|this
operator|.
name|loginConfig
operator|=
name|loginConfig
expr_stmt|;
block|}
DECL|method|getConfig ()
specifier|public
name|SalesforceEndpointConfig
name|getConfig
parameter_list|()
block|{
return|return
name|config
return|;
block|}
DECL|method|setConfig (SalesforceEndpointConfig config)
specifier|public
name|void
name|setConfig
parameter_list|(
name|SalesforceEndpointConfig
name|config
parameter_list|)
block|{
name|this
operator|.
name|config
operator|=
name|config
expr_stmt|;
block|}
DECL|method|getHttpClientProperties ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getHttpClientProperties
parameter_list|()
block|{
return|return
name|httpClientProperties
return|;
block|}
DECL|method|setHttpClientProperties (Map<String, Object> httpClientProperties)
specifier|public
name|void
name|setHttpClientProperties
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|httpClientProperties
parameter_list|)
block|{
name|this
operator|.
name|httpClientProperties
operator|=
name|httpClientProperties
expr_stmt|;
block|}
DECL|method|getSslContextParameters ()
specifier|public
name|SSLContextParameters
name|getSslContextParameters
parameter_list|()
block|{
return|return
name|sslContextParameters
return|;
block|}
DECL|method|setSslContextParameters ( SSLContextParameters sslContextParameters)
specifier|public
name|void
name|setSslContextParameters
parameter_list|(
name|SSLContextParameters
name|sslContextParameters
parameter_list|)
block|{
name|this
operator|.
name|sslContextParameters
operator|=
name|sslContextParameters
expr_stmt|;
block|}
DECL|method|getHttpProxyHost ()
specifier|public
name|String
name|getHttpProxyHost
parameter_list|()
block|{
return|return
name|httpProxyHost
return|;
block|}
DECL|method|setHttpProxyHost (String httpProxyHost)
specifier|public
name|void
name|setHttpProxyHost
parameter_list|(
name|String
name|httpProxyHost
parameter_list|)
block|{
name|this
operator|.
name|httpProxyHost
operator|=
name|httpProxyHost
expr_stmt|;
block|}
DECL|method|getHttpProxyPort ()
specifier|public
name|Integer
name|getHttpProxyPort
parameter_list|()
block|{
return|return
name|httpProxyPort
return|;
block|}
DECL|method|setHttpProxyPort (Integer httpProxyPort)
specifier|public
name|void
name|setHttpProxyPort
parameter_list|(
name|Integer
name|httpProxyPort
parameter_list|)
block|{
name|this
operator|.
name|httpProxyPort
operator|=
name|httpProxyPort
expr_stmt|;
block|}
DECL|method|getHttpProxyUsername ()
specifier|public
name|String
name|getHttpProxyUsername
parameter_list|()
block|{
return|return
name|httpProxyUsername
return|;
block|}
DECL|method|setHttpProxyUsername (String httpProxyUsername)
specifier|public
name|void
name|setHttpProxyUsername
parameter_list|(
name|String
name|httpProxyUsername
parameter_list|)
block|{
name|this
operator|.
name|httpProxyUsername
operator|=
name|httpProxyUsername
expr_stmt|;
block|}
DECL|method|getHttpProxyPassword ()
specifier|public
name|String
name|getHttpProxyPassword
parameter_list|()
block|{
return|return
name|httpProxyPassword
return|;
block|}
DECL|method|setHttpProxyPassword (String httpProxyPassword)
specifier|public
name|void
name|setHttpProxyPassword
parameter_list|(
name|String
name|httpProxyPassword
parameter_list|)
block|{
name|this
operator|.
name|httpProxyPassword
operator|=
name|httpProxyPassword
expr_stmt|;
block|}
DECL|method|isIsHttpProxySocks4 ()
specifier|public
name|boolean
name|isIsHttpProxySocks4
parameter_list|()
block|{
return|return
name|isHttpProxySocks4
return|;
block|}
DECL|method|setIsHttpProxySocks4 (boolean isHttpProxySocks4)
specifier|public
name|void
name|setIsHttpProxySocks4
parameter_list|(
name|boolean
name|isHttpProxySocks4
parameter_list|)
block|{
name|this
operator|.
name|isHttpProxySocks4
operator|=
name|isHttpProxySocks4
expr_stmt|;
block|}
DECL|method|isIsHttpProxySecure ()
specifier|public
name|boolean
name|isIsHttpProxySecure
parameter_list|()
block|{
return|return
name|isHttpProxySecure
return|;
block|}
DECL|method|setIsHttpProxySecure (boolean isHttpProxySecure)
specifier|public
name|void
name|setIsHttpProxySecure
parameter_list|(
name|boolean
name|isHttpProxySecure
parameter_list|)
block|{
name|this
operator|.
name|isHttpProxySecure
operator|=
name|isHttpProxySecure
expr_stmt|;
block|}
DECL|method|getHttpProxyIncludedAddresses ()
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getHttpProxyIncludedAddresses
parameter_list|()
block|{
return|return
name|httpProxyIncludedAddresses
return|;
block|}
DECL|method|setHttpProxyIncludedAddresses ( Set<String> httpProxyIncludedAddresses)
specifier|public
name|void
name|setHttpProxyIncludedAddresses
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|httpProxyIncludedAddresses
parameter_list|)
block|{
name|this
operator|.
name|httpProxyIncludedAddresses
operator|=
name|httpProxyIncludedAddresses
expr_stmt|;
block|}
DECL|method|getHttpProxyExcludedAddresses ()
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getHttpProxyExcludedAddresses
parameter_list|()
block|{
return|return
name|httpProxyExcludedAddresses
return|;
block|}
DECL|method|setHttpProxyExcludedAddresses ( Set<String> httpProxyExcludedAddresses)
specifier|public
name|void
name|setHttpProxyExcludedAddresses
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|httpProxyExcludedAddresses
parameter_list|)
block|{
name|this
operator|.
name|httpProxyExcludedAddresses
operator|=
name|httpProxyExcludedAddresses
expr_stmt|;
block|}
DECL|method|getHttpProxyAuthUri ()
specifier|public
name|String
name|getHttpProxyAuthUri
parameter_list|()
block|{
return|return
name|httpProxyAuthUri
return|;
block|}
DECL|method|setHttpProxyAuthUri (String httpProxyAuthUri)
specifier|public
name|void
name|setHttpProxyAuthUri
parameter_list|(
name|String
name|httpProxyAuthUri
parameter_list|)
block|{
name|this
operator|.
name|httpProxyAuthUri
operator|=
name|httpProxyAuthUri
expr_stmt|;
block|}
DECL|method|getHttpProxyRealm ()
specifier|public
name|String
name|getHttpProxyRealm
parameter_list|()
block|{
return|return
name|httpProxyRealm
return|;
block|}
DECL|method|setHttpProxyRealm (String httpProxyRealm)
specifier|public
name|void
name|setHttpProxyRealm
parameter_list|(
name|String
name|httpProxyRealm
parameter_list|)
block|{
name|this
operator|.
name|httpProxyRealm
operator|=
name|httpProxyRealm
expr_stmt|;
block|}
DECL|method|isHttpProxyUseDigestAuth ()
specifier|public
name|boolean
name|isHttpProxyUseDigestAuth
parameter_list|()
block|{
return|return
name|httpProxyUseDigestAuth
return|;
block|}
DECL|method|setHttpProxyUseDigestAuth (boolean httpProxyUseDigestAuth)
specifier|public
name|void
name|setHttpProxyUseDigestAuth
parameter_list|(
name|boolean
name|httpProxyUseDigestAuth
parameter_list|)
block|{
name|this
operator|.
name|httpProxyUseDigestAuth
operator|=
name|httpProxyUseDigestAuth
expr_stmt|;
block|}
DECL|method|getPackages ()
specifier|public
name|String
index|[]
name|getPackages
parameter_list|()
block|{
return|return
name|packages
return|;
block|}
DECL|method|setPackages (String[] packages)
specifier|public
name|void
name|setPackages
parameter_list|(
name|String
index|[]
name|packages
parameter_list|)
block|{
name|this
operator|.
name|packages
operator|=
name|packages
expr_stmt|;
block|}
block|}
end_class

end_unit

