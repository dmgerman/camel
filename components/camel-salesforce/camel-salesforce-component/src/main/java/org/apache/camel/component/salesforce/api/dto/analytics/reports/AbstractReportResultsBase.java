begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce.api.dto.analytics.reports
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|analytics
operator|.
name|reports
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|AbstractDTOBase
import|;
end_import

begin_comment
comment|/**  * Base DTO for report results.  */
end_comment

begin_class
DECL|class|AbstractReportResultsBase
specifier|public
specifier|abstract
class|class
name|AbstractReportResultsBase
extends|extends
name|AbstractDTOBase
block|{
DECL|field|hasDetailRows
specifier|private
name|Boolean
name|hasDetailRows
decl_stmt|;
DECL|field|reportMetadata
specifier|private
name|ReportMetadata
name|reportMetadata
decl_stmt|;
DECL|field|reportExtendedMetadata
specifier|private
name|ReportExtendedMetadata
name|reportExtendedMetadata
decl_stmt|;
DECL|field|groupingsDown
specifier|private
name|Groupings
name|groupingsDown
decl_stmt|;
DECL|field|groupingsAcross
specifier|private
name|Groupings
name|groupingsAcross
decl_stmt|;
DECL|field|allData
specifier|private
name|Boolean
name|allData
decl_stmt|;
DECL|field|factMap
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|ReportFactWithDetails
argument_list|>
name|factMap
decl_stmt|;
DECL|method|getHasDetailRows ()
specifier|public
name|Boolean
name|getHasDetailRows
parameter_list|()
block|{
return|return
name|hasDetailRows
return|;
block|}
DECL|method|setHasDetailRows (Boolean hasDetailRows)
specifier|public
name|void
name|setHasDetailRows
parameter_list|(
name|Boolean
name|hasDetailRows
parameter_list|)
block|{
name|this
operator|.
name|hasDetailRows
operator|=
name|hasDetailRows
expr_stmt|;
block|}
DECL|method|getReportMetadata ()
specifier|public
name|ReportMetadata
name|getReportMetadata
parameter_list|()
block|{
return|return
name|reportMetadata
return|;
block|}
DECL|method|setReportMetadata (ReportMetadata reportMetadata)
specifier|public
name|void
name|setReportMetadata
parameter_list|(
name|ReportMetadata
name|reportMetadata
parameter_list|)
block|{
name|this
operator|.
name|reportMetadata
operator|=
name|reportMetadata
expr_stmt|;
block|}
DECL|method|getReportExtendedMetadata ()
specifier|public
name|ReportExtendedMetadata
name|getReportExtendedMetadata
parameter_list|()
block|{
return|return
name|reportExtendedMetadata
return|;
block|}
DECL|method|setReportExtendedMetadata (ReportExtendedMetadata reportExtendedMetadata)
specifier|public
name|void
name|setReportExtendedMetadata
parameter_list|(
name|ReportExtendedMetadata
name|reportExtendedMetadata
parameter_list|)
block|{
name|this
operator|.
name|reportExtendedMetadata
operator|=
name|reportExtendedMetadata
expr_stmt|;
block|}
DECL|method|getGroupingsDown ()
specifier|public
name|Groupings
name|getGroupingsDown
parameter_list|()
block|{
return|return
name|groupingsDown
return|;
block|}
DECL|method|setGroupingsDown (Groupings groupingsDown)
specifier|public
name|void
name|setGroupingsDown
parameter_list|(
name|Groupings
name|groupingsDown
parameter_list|)
block|{
name|this
operator|.
name|groupingsDown
operator|=
name|groupingsDown
expr_stmt|;
block|}
DECL|method|getGroupingsAcross ()
specifier|public
name|Groupings
name|getGroupingsAcross
parameter_list|()
block|{
return|return
name|groupingsAcross
return|;
block|}
DECL|method|setGroupingsAcross (Groupings groupingsAcross)
specifier|public
name|void
name|setGroupingsAcross
parameter_list|(
name|Groupings
name|groupingsAcross
parameter_list|)
block|{
name|this
operator|.
name|groupingsAcross
operator|=
name|groupingsAcross
expr_stmt|;
block|}
DECL|method|getAllData ()
specifier|public
name|Boolean
name|getAllData
parameter_list|()
block|{
return|return
name|allData
return|;
block|}
DECL|method|setAllData (Boolean allData)
specifier|public
name|void
name|setAllData
parameter_list|(
name|Boolean
name|allData
parameter_list|)
block|{
name|this
operator|.
name|allData
operator|=
name|allData
expr_stmt|;
block|}
DECL|method|getFactMap ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|ReportFactWithDetails
argument_list|>
name|getFactMap
parameter_list|()
block|{
return|return
name|factMap
return|;
block|}
DECL|method|setFactMap (Map<String, ReportFactWithDetails> factMap)
specifier|public
name|void
name|setFactMap
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|ReportFactWithDetails
argument_list|>
name|factMap
parameter_list|)
block|{
name|this
operator|.
name|factMap
operator|=
name|factMap
expr_stmt|;
block|}
block|}
end_class

end_unit

