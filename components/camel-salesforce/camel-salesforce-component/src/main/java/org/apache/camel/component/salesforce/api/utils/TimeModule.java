begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce.api.utils
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|Instant
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|LocalDate
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|LocalDateTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|OffsetDateTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|ZonedDateTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|format
operator|.
name|DateTimeFormatter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|module
operator|.
name|SimpleModule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|datatype
operator|.
name|jsr310
operator|.
name|JavaTimeModule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|datatype
operator|.
name|jsr310
operator|.
name|deser
operator|.
name|LocalDateDeserializer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|datatype
operator|.
name|jsr310
operator|.
name|ser
operator|.
name|LocalDateSerializer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|datatype
operator|.
name|jsr310
operator|.
name|ser
operator|.
name|ZonedDateTimeSerializer
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|utils
operator|.
name|DateTimeHandling
operator|.
name|ISO_OFFSET_DATE_TIME
import|;
end_import

begin_class
DECL|class|TimeModule
specifier|public
class|class
name|TimeModule
extends|extends
name|SimpleModule
block|{
DECL|field|LOCAL_DATE_DESERIALIZER
specifier|private
specifier|static
specifier|final
name|LocalDateDeserializer
name|LOCAL_DATE_DESERIALIZER
init|=
operator|new
name|LocalDateDeserializer
argument_list|(
name|DateTimeFormatter
operator|.
name|ISO_DATE
argument_list|)
decl_stmt|;
DECL|field|LOCAL_DATE_SERIALIZER
specifier|private
specifier|static
specifier|final
name|LocalDateSerializer
name|LOCAL_DATE_SERIALIZER
init|=
operator|new
name|LocalDateSerializer
argument_list|(
name|DateTimeFormatter
operator|.
name|ISO_DATE
argument_list|)
decl_stmt|;
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
DECL|field|ZONED_DATE_TIME_SERIALIZER
specifier|private
specifier|static
specifier|final
name|ZonedDateTimeSerializer
name|ZONED_DATE_TIME_SERIALIZER
init|=
operator|new
name|ZonedDateTimeSerializer
argument_list|(
name|ISO_OFFSET_DATE_TIME
argument_list|)
decl_stmt|;
DECL|field|delegate
specifier|private
specifier|final
name|JavaTimeModule
name|delegate
init|=
operator|new
name|JavaTimeModule
argument_list|()
decl_stmt|;
DECL|method|TimeModule ()
specifier|public
name|TimeModule
parameter_list|()
block|{
name|addSerializer
argument_list|(
name|LocalDate
operator|.
name|class
argument_list|,
name|LOCAL_DATE_SERIALIZER
argument_list|)
expr_stmt|;
name|addDeserializer
argument_list|(
name|LocalDate
operator|.
name|class
argument_list|,
name|LOCAL_DATE_DESERIALIZER
argument_list|)
expr_stmt|;
name|addSerializer
argument_list|(
name|LocalDateTime
operator|.
name|class
argument_list|,
name|LocalDateTimeSerializer
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|addDeserializer
argument_list|(
name|LocalDateTime
operator|.
name|class
argument_list|,
name|LocalDateTimeDeserializer
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|addSerializer
argument_list|(
name|OffsetDateTime
operator|.
name|class
argument_list|,
name|OffsetDateTimeSerializer
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|addDeserializer
argument_list|(
name|OffsetDateTime
operator|.
name|class
argument_list|,
name|OffsetDateTimeDeserializer
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|addSerializer
argument_list|(
name|ZonedDateTime
operator|.
name|class
argument_list|,
name|ZONED_DATE_TIME_SERIALIZER
argument_list|)
expr_stmt|;
name|addDeserializer
argument_list|(
name|ZonedDateTime
operator|.
name|class
argument_list|,
name|ZonedDateTimeDeserializer
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|addSerializer
argument_list|(
name|Instant
operator|.
name|class
argument_list|,
name|InstantSerializer
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|addDeserializer
argument_list|(
name|Instant
operator|.
name|class
argument_list|,
name|InstantDeserializer
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setupModule (final SetupContext context)
specifier|public
name|void
name|setupModule
parameter_list|(
specifier|final
name|SetupContext
name|context
parameter_list|)
block|{
name|delegate
operator|.
name|setupModule
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|super
operator|.
name|setupModule
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

