begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|jsse
operator|.
name|KeyStoreParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_class
DECL|class|LoginConfigHelper
specifier|public
class|class
name|LoginConfigHelper
extends|extends
name|Assert
block|{
DECL|field|TEST_LOGIN_PROPERTIES
specifier|protected
specifier|static
specifier|final
name|String
name|TEST_LOGIN_PROPERTIES
init|=
literal|"../test-salesforce-login.properties"
decl_stmt|;
DECL|field|INSTANCE
specifier|private
specifier|static
specifier|final
name|LoginConfigHelper
name|INSTANCE
decl_stmt|;
static|static
block|{
try|try
block|{
name|INSTANCE
operator|=
operator|new
name|LoginConfigHelper
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ExceptionInInitializerError
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
DECL|field|config
specifier|private
name|SalesforceLoginConfig
name|config
decl_stmt|;
DECL|field|properties
specifier|private
specifier|final
name|Properties
name|properties
decl_stmt|;
DECL|method|LoginConfigHelper ()
specifier|public
name|LoginConfigHelper
parameter_list|()
throws|throws
name|IOException
block|{
comment|// load test-salesforce-login properties
try|try
init|(
name|InputStream
name|stream
init|=
operator|new
name|FileInputStream
argument_list|(
name|TEST_LOGIN_PROPERTIES
argument_list|)
init|;
init|)
block|{
name|properties
operator|=
operator|new
name|Properties
argument_list|()
expr_stmt|;
name|properties
operator|.
name|load
argument_list|(
name|stream
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|FileNotFoundException
name|ignored
parameter_list|)
block|{
throw|throw
operator|new
name|FileNotFoundException
argument_list|(
literal|"Create a properties file named "
operator|+
name|TEST_LOGIN_PROPERTIES
operator|+
literal|" with clientId, clientSecret, userName, and password or with clientId, clientSecret and refreshToken"
operator|+
literal|" for a Salesforce account with Merchandise and Invoice objects from Salesforce Guides."
argument_list|)
throw|;
block|}
specifier|final
name|boolean
name|hasPassword
init|=
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"password"
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|boolean
name|hasRefreshToken
init|=
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"refreshToken"
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|boolean
name|hasKeystore
init|=
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"keystore.resource"
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|boolean
name|lazyLogin
init|=
name|Boolean
operator|.
name|parseBoolean
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"lazyLogin"
argument_list|,
literal|"false"
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|String
name|loginUrl
init|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"loginUrl"
argument_list|,
name|SalesforceLoginConfig
operator|.
name|DEFAULT_LOGIN_URL
argument_list|)
decl_stmt|;
specifier|final
name|String
name|clientId
init|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"clientId"
argument_list|)
decl_stmt|;
specifier|final
name|String
name|clientSecret
init|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"clientSecret"
argument_list|)
decl_stmt|;
specifier|final
name|String
name|username
init|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"userName"
argument_list|)
decl_stmt|;
if|if
condition|(
name|hasPassword
condition|)
block|{
name|config
operator|=
operator|new
name|SalesforceLoginConfig
argument_list|(
name|loginUrl
argument_list|,
name|clientId
argument_list|,
name|clientSecret
argument_list|,
name|username
argument_list|,
name|properties
operator|.
name|getProperty
argument_list|(
literal|"password"
argument_list|)
argument_list|,
name|lazyLogin
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|hasRefreshToken
condition|)
block|{
name|config
operator|=
operator|new
name|SalesforceLoginConfig
argument_list|(
name|loginUrl
argument_list|,
name|clientId
argument_list|,
comment|//
name|clientSecret
argument_list|,
comment|//
name|properties
operator|.
name|getProperty
argument_list|(
literal|"refreshToken"
argument_list|)
argument_list|,
comment|//
name|lazyLogin
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|hasKeystore
condition|)
block|{
specifier|final
name|KeyStoreParameters
name|keystore
init|=
operator|new
name|KeyStoreParameters
argument_list|()
decl_stmt|;
name|keystore
operator|.
name|setResource
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"keystore.resource"
argument_list|)
argument_list|)
expr_stmt|;
name|keystore
operator|.
name|setType
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"keystore.type"
argument_list|)
argument_list|)
expr_stmt|;
name|keystore
operator|.
name|setPassword
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"keystore.password"
argument_list|)
argument_list|)
expr_stmt|;
name|config
operator|=
operator|new
name|SalesforceLoginConfig
argument_list|(
name|loginUrl
argument_list|,
name|clientId
argument_list|,
name|username
argument_list|,
name|keystore
argument_list|,
name|lazyLogin
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Must specifiy parameters in "
operator|+
name|TEST_LOGIN_PROPERTIES
argument_list|)
throw|;
block|}
block|}
DECL|method|getLoginConfig ()
specifier|public
specifier|static
name|SalesforceLoginConfig
name|getLoginConfig
parameter_list|()
block|{
return|return
name|INSTANCE
operator|.
name|config
return|;
block|}
DECL|method|testLoginProperties ()
specifier|public
specifier|static
name|Properties
name|testLoginProperties
parameter_list|()
block|{
return|return
name|INSTANCE
operator|.
name|properties
return|;
block|}
block|}
end_class

end_unit

