begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_class
DECL|class|LoginConfigHelper
specifier|public
class|class
name|LoginConfigHelper
extends|extends
name|Assert
block|{
DECL|field|TEST_LOGIN_PROPERTIES
specifier|private
specifier|static
specifier|final
name|String
name|TEST_LOGIN_PROPERTIES
init|=
literal|"test-salesforce-login.properties"
decl_stmt|;
DECL|method|getLoginConfig ()
specifier|public
specifier|static
name|SalesforceLoginConfig
name|getLoginConfig
parameter_list|()
throws|throws
name|IllegalAccessException
throws|,
name|IOException
block|{
comment|// load test-salesforce-login properties
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|InputStream
name|stream
init|=
operator|new
name|FileInputStream
argument_list|(
name|TEST_LOGIN_PROPERTIES
argument_list|)
decl_stmt|;
if|if
condition|(
literal|null
operator|==
name|stream
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Create a properties file named "
operator|+
name|TEST_LOGIN_PROPERTIES
operator|+
literal|" with clientId, clientSecret, userName, and password"
operator|+
literal|" for a Salesforce account with the Merchandise object from Salesforce Guides."
argument_list|)
throw|;
block|}
name|properties
operator|.
name|load
argument_list|(
name|stream
argument_list|)
expr_stmt|;
specifier|final
name|SalesforceLoginConfig
name|config
init|=
operator|new
name|SalesforceLoginConfig
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"loginUrl"
argument_list|,
name|SalesforceLoginConfig
operator|.
name|DEFAULT_LOGIN_URL
argument_list|)
argument_list|,
name|properties
operator|.
name|getProperty
argument_list|(
literal|"clientId"
argument_list|)
argument_list|,
name|properties
operator|.
name|getProperty
argument_list|(
literal|"clientSecret"
argument_list|)
argument_list|,
name|properties
operator|.
name|getProperty
argument_list|(
literal|"userName"
argument_list|)
argument_list|,
name|properties
operator|.
name|getProperty
argument_list|(
literal|"password"
argument_list|)
argument_list|,
name|Boolean
operator|.
name|parseBoolean
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"lazyLogin"
argument_list|,
literal|"false"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Null loginUrl"
argument_list|,
name|config
operator|.
name|getLoginUrl
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Null clientId"
argument_list|,
name|config
operator|.
name|getClientId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Null clientSecret"
argument_list|,
name|config
operator|.
name|getClientSecret
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Null userName"
argument_list|,
name|config
operator|.
name|getUserName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Null password"
argument_list|,
name|config
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|config
return|;
block|}
block|}
end_class

end_unit

