begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce.dto.generated
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|dto
operator|.
name|generated
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|MultiSelectPicklistConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|MultiSelectPicklistDeserializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|MultiSelectPicklistSerializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|AbstractSObjectBase
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonCreator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonInclude
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonInclude
operator|.
name|Include
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonProperty
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonValue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|annotation
operator|.
name|JsonDeserialize
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|annotation
operator|.
name|JsonSerialize
import|;
end_import

begin_import
import|import
name|com
operator|.
name|thoughtworks
operator|.
name|xstream
operator|.
name|annotations
operator|.
name|XStreamAlias
import|;
end_import

begin_import
import|import
name|com
operator|.
name|thoughtworks
operator|.
name|xstream
operator|.
name|annotations
operator|.
name|XStreamConverter
import|;
end_import

begin_comment
comment|/**  * Sample POJO for MSP tests.  */
end_comment

begin_comment
comment|//CHECKSTYLE:OFF
end_comment

begin_class
annotation|@
name|XStreamAlias
argument_list|(
literal|"MSPTest"
argument_list|)
DECL|class|MSPTest
specifier|public
class|class
name|MSPTest
extends|extends
name|AbstractSObjectBase
block|{
annotation|@
name|XStreamConverter
argument_list|(
name|MultiSelectPicklistConverter
operator|.
name|class
argument_list|)
DECL|field|MspField
specifier|private
name|MSPEnum
index|[]
name|MspField
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"MspField"
argument_list|)
annotation|@
name|JsonSerialize
argument_list|(
name|using
operator|=
name|MultiSelectPicklistSerializer
operator|.
name|class
argument_list|)
annotation|@
name|JsonInclude
argument_list|(
name|value
operator|=
name|Include
operator|.
name|ALWAYS
argument_list|)
DECL|method|getMspField ()
specifier|public
name|MSPEnum
index|[]
name|getMspField
parameter_list|()
block|{
return|return
name|MspField
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"MspField"
argument_list|)
annotation|@
name|JsonDeserialize
argument_list|(
name|using
operator|=
name|MultiSelectPicklistDeserializer
operator|.
name|class
argument_list|)
DECL|method|setMspField (MSPEnum[] mspField)
specifier|public
name|void
name|setMspField
parameter_list|(
name|MSPEnum
index|[]
name|mspField
parameter_list|)
block|{
name|this
operator|.
name|MspField
operator|=
name|mspField
expr_stmt|;
block|}
annotation|@
name|JsonDeserialize
DECL|enum|MSPEnum
specifier|public
enum|enum
name|MSPEnum
block|{
comment|// Value1
DECL|enumConstant|VALUE1
name|VALUE1
argument_list|(
literal|"Value1"
argument_list|)
block|,
comment|// Value1
DECL|enumConstant|VALUE2
name|VALUE2
argument_list|(
literal|"Value2"
argument_list|)
block|,
comment|// Value1
DECL|enumConstant|VALUE3
name|VALUE3
argument_list|(
literal|"Value3"
argument_list|)
block|;
DECL|field|value
specifier|final
name|String
name|value
decl_stmt|;
DECL|method|MSPEnum (String value)
specifier|private
name|MSPEnum
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
annotation|@
name|JsonValue
DECL|method|value ()
specifier|public
name|String
name|value
parameter_list|()
block|{
return|return
name|this
operator|.
name|value
return|;
block|}
annotation|@
name|JsonCreator
DECL|method|fromValue (String value)
specifier|public
specifier|static
name|MSPEnum
name|fromValue
parameter_list|(
name|String
name|value
parameter_list|)
block|{
for|for
control|(
name|MSPEnum
name|e
range|:
name|MSPEnum
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|e
operator|.
name|value
operator|.
name|equals
argument_list|(
name|value
argument_list|)
condition|)
block|{
return|return
name|e
return|;
block|}
block|}
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|value
argument_list|)
throw|;
block|}
block|}
block|}
end_class

begin_comment
comment|//CHECKSTYLE:ON
end_comment

end_unit

