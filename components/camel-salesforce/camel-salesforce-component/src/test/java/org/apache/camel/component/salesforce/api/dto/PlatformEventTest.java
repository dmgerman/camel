begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce.api.dto
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|ZonedDateTime
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|utils
operator|.
name|JsonUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
operator|.
name|entry
import|;
end_import

begin_class
DECL|class|PlatformEventTest
specifier|public
class|class
name|PlatformEventTest
block|{
annotation|@
name|Test
DECL|method|shouldDeserialize ()
specifier|public
name|void
name|shouldDeserialize
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|ObjectMapper
name|mapper
init|=
name|JsonUtils
operator|.
name|createObjectMapper
argument_list|()
decl_stmt|;
specifier|final
name|PlatformEvent
name|platformEvent
init|=
name|mapper
operator|.
name|readValue
argument_list|(
literal|"{\n"
operator|+
comment|//
literal|"  \"CreatedDate\": \"2017-04-14T13:35:23Z\", \n"
operator|+
comment|//
literal|"  \"CreatedById\": \"005B00000031mqb\", \n"
operator|+
comment|//
literal|"  \"Order_Number__c\": \"10013\", \n"
operator|+
comment|//
literal|"  \"Type__c\": \"Placed\"\n"
operator|+
comment|//
literal|"}"
argument_list|,
name|PlatformEvent
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|platformEvent
operator|.
name|getCreated
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ZonedDateTime
operator|.
name|parse
argument_list|(
literal|"2017-04-14T13:35:23Z"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|platformEvent
operator|.
name|getCreatedById
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"005B00000031mqb"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|platformEvent
operator|.
name|getEventData
argument_list|()
argument_list|)
operator|.
name|containsOnly
argument_list|(
name|entry
argument_list|(
literal|"Order_Number__c"
argument_list|,
literal|"10013"
argument_list|)
argument_list|,
name|entry
argument_list|(
literal|"Type__c"
argument_list|,
literal|"Placed"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

