begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce.api.dto.approval
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|approval
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|JsonProcessingException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|thoughtworks
operator|.
name|xstream
operator|.
name|XStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|approval
operator|.
name|ApprovalRequest
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|utils
operator|.
name|JsonUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|utils
operator|.
name|XStreamUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
DECL|class|ApprovalRequestsTest
specifier|public
class|class
name|ApprovalRequestsTest
block|{
DECL|field|requests
specifier|private
specifier|final
name|ApprovalRequests
name|requests
decl_stmt|;
DECL|method|ApprovalRequestsTest ()
specifier|public
name|ApprovalRequestsTest
parameter_list|()
block|{
specifier|final
name|String
name|actorId
init|=
literal|"005D00000015rZy"
decl_stmt|;
specifier|final
name|ApprovalRequest
name|request1
init|=
operator|new
name|ApprovalRequest
argument_list|()
decl_stmt|;
name|request1
operator|.
name|setActionType
argument_list|(
name|Action
operator|.
name|Submit
argument_list|)
expr_stmt|;
name|request1
operator|.
name|setContextId
argument_list|(
literal|"001D000000I8mIm"
argument_list|)
expr_stmt|;
name|request1
operator|.
name|setNextApproverIds
argument_list|(
literal|"005D00000015rY9"
argument_list|)
expr_stmt|;
name|request1
operator|.
name|setComments
argument_list|(
literal|"this is a test 1"
argument_list|)
expr_stmt|;
name|request1
operator|.
name|setContextActorId
argument_list|(
name|actorId
argument_list|)
expr_stmt|;
name|request1
operator|.
name|setProcessDefinitionNameOrId
argument_list|(
literal|"PTO_Request_Process"
argument_list|)
expr_stmt|;
name|request1
operator|.
name|setSkipEntryCriteria
argument_list|(
literal|true
argument_list|)
expr_stmt|;
specifier|final
name|ApprovalRequest
name|request2
init|=
operator|new
name|ApprovalRequest
argument_list|()
decl_stmt|;
name|request2
operator|.
name|setActionType
argument_list|(
name|Action
operator|.
name|Submit
argument_list|)
expr_stmt|;
name|request2
operator|.
name|setContextId
argument_list|(
literal|"001D000000I8dIm"
argument_list|)
expr_stmt|;
name|request2
operator|.
name|setNextApproverIds
argument_list|(
literal|"005D00000015xY9"
argument_list|)
expr_stmt|;
name|request2
operator|.
name|setComments
argument_list|(
literal|"this is a test 2"
argument_list|)
expr_stmt|;
name|request2
operator|.
name|setContextActorId
argument_list|(
name|actorId
argument_list|)
expr_stmt|;
name|request2
operator|.
name|setProcessDefinitionNameOrId
argument_list|(
literal|"PTO_Request_Process"
argument_list|)
expr_stmt|;
name|request2
operator|.
name|setSkipEntryCriteria
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|requests
operator|=
operator|new
name|ApprovalRequests
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|request1
argument_list|,
name|request2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldSerializeAsJson ()
specifier|public
name|void
name|shouldSerializeAsJson
parameter_list|()
throws|throws
name|JsonProcessingException
block|{
specifier|final
name|String
name|json
init|=
literal|"{\"requests\":["
comment|//
operator|+
literal|"{"
comment|//
operator|+
literal|"\"actionType\":\"Submit\","
comment|//
operator|+
literal|"\"contextActorId\":\"005D00000015rZy\","
comment|//
operator|+
literal|"\"contextId\":\"001D000000I8mIm\","
comment|//
operator|+
literal|"\"comments\":\"this is a test 1\","
comment|//
operator|+
literal|"\"nextApproverIds\":[\"005D00000015rY9\"],"
comment|//
operator|+
literal|"\"processDefinitionNameOrId\":\"PTO_Request_Process\","
comment|//
operator|+
literal|"\"skipEntryCriteria\":true"
comment|//
operator|+
literal|"},{"
comment|//
operator|+
literal|"\"actionType\":\"Submit\","
comment|//
operator|+
literal|"\"contextActorId\":\"005D00000015rZy\","
comment|//
operator|+
literal|"\"contextId\":\"001D000000I8dIm\","
comment|//
operator|+
literal|"\"comments\":\"this is a test 2\","
comment|//
operator|+
literal|"\"nextApproverIds\":[\"005D00000015xY9\"],"
comment|//
operator|+
literal|"\"processDefinitionNameOrId\":\"PTO_Request_Process\","
comment|//
operator|+
literal|"\"skipEntryCriteria\":true"
comment|//
operator|+
literal|"}"
comment|//
operator|+
literal|"]}"
decl_stmt|;
specifier|final
name|ObjectMapper
name|mapper
init|=
name|JsonUtils
operator|.
name|createObjectMapper
argument_list|()
decl_stmt|;
specifier|final
name|String
name|serialized
init|=
name|mapper
operator|.
name|writerFor
argument_list|(
name|ApprovalRequests
operator|.
name|class
argument_list|)
operator|.
name|writeValueAsString
argument_list|(
name|requests
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Approval requests should serialize as JSON"
argument_list|,
name|json
argument_list|,
name|serialized
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldSerializeAsXml ()
specifier|public
name|void
name|shouldSerializeAsXml
parameter_list|()
block|{
specifier|final
name|String
name|xml
init|=
literal|"<ProcessApprovalRequest>"
comment|//
operator|+
literal|"<requests>"
comment|//
operator|+
literal|"<actionType>Submit</actionType>"
comment|//
operator|+
literal|"<contextActorId>005D00000015rZy</contextActorId>"
comment|//
operator|+
literal|"<contextId>001D000000I8mIm</contextId>"
comment|//
operator|+
literal|"<comments>this is a test 1</comments>"
comment|//
operator|+
literal|"<nextApproverIds>005D00000015rY9</nextApproverIds>"
comment|//
operator|+
literal|"<processDefinitionNameOrId>PTO_Request_Process</processDefinitionNameOrId>"
comment|//
operator|+
literal|"<skipEntryCriteria>true</skipEntryCriteria>"
comment|//
operator|+
literal|"</requests>"
comment|//
operator|+
literal|"<requests>"
comment|//
operator|+
literal|"<actionType>Submit</actionType>"
comment|//
operator|+
literal|"<contextActorId>005D00000015rZy</contextActorId>"
comment|//
operator|+
literal|"<contextId>001D000000I8dIm</contextId>"
comment|//
operator|+
literal|"<comments>this is a test 2</comments>"
comment|//
operator|+
literal|"<nextApproverIds>005D00000015xY9</nextApproverIds>"
comment|//
operator|+
literal|"<processDefinitionNameOrId>PTO_Request_Process</processDefinitionNameOrId>"
comment|//
operator|+
literal|"<skipEntryCriteria>true</skipEntryCriteria>"
comment|//
operator|+
literal|"</requests>"
comment|//
operator|+
literal|"</ProcessApprovalRequest>"
decl_stmt|;
specifier|final
name|XStream
name|xStream
init|=
name|XStreamUtils
operator|.
name|createXStream
argument_list|(
name|ApprovalRequests
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|String
name|serialized
init|=
name|xStream
operator|.
name|toXML
argument_list|(
name|requests
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Approval requests should serialize as XML"
argument_list|,
name|xml
argument_list|,
name|serialized
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

