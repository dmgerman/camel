begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce.api.dto.approval
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|approval
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|JsonProcessingException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|thoughtworks
operator|.
name|xstream
operator|.
name|XStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|approval
operator|.
name|ApprovalRequest
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|utils
operator|.
name|JsonUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|utils
operator|.
name|XStreamUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|sameInstance
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|CombinableMatcher
operator|.
name|both
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|IsNot
operator|.
name|not
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_class
DECL|class|ApprovalRequestTest
specifier|public
class|class
name|ApprovalRequestTest
block|{
DECL|field|sampleRequest
specifier|private
specifier|final
name|ApprovalRequest
name|sampleRequest
decl_stmt|;
DECL|method|ApprovalRequestTest ()
specifier|public
name|ApprovalRequestTest
parameter_list|()
block|{
name|sampleRequest
operator|=
operator|new
name|ApprovalRequest
argument_list|()
expr_stmt|;
name|sampleRequest
operator|.
name|setActionType
argument_list|(
name|Action
operator|.
name|Submit
argument_list|)
expr_stmt|;
name|sampleRequest
operator|.
name|setContextId
argument_list|(
literal|"001D000000I8mIm"
argument_list|)
expr_stmt|;
name|sampleRequest
operator|.
name|addNextApproverId
argument_list|(
literal|"005D00000015rY9"
argument_list|)
expr_stmt|;
name|sampleRequest
operator|.
name|setComments
argument_list|(
literal|"this is a test"
argument_list|)
expr_stmt|;
name|sampleRequest
operator|.
name|setContextActorId
argument_list|(
literal|"005D00000015rZy"
argument_list|)
expr_stmt|;
name|sampleRequest
operator|.
name|setProcessDefinitionNameOrId
argument_list|(
literal|"PTO_Request_Process"
argument_list|)
expr_stmt|;
name|sampleRequest
operator|.
name|setSkipEntryCriteria
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldApplyValuesFromTemplate ()
specifier|public
name|void
name|shouldApplyValuesFromTemplate
parameter_list|()
block|{
specifier|final
name|ApprovalRequest
name|request
init|=
operator|new
name|ApprovalRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setActionType
argument_list|(
name|Action
operator|.
name|Approve
argument_list|)
expr_stmt|;
name|request
operator|.
name|setComments
argument_list|(
literal|"Comment"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setContextId
argument_list|(
literal|"Context Id"
argument_list|)
expr_stmt|;
specifier|final
name|ApprovalRequest
name|template
init|=
operator|new
name|ApprovalRequest
argument_list|()
decl_stmt|;
name|template
operator|.
name|setActionType
argument_list|(
name|Action
operator|.
name|Reject
argument_list|)
expr_stmt|;
name|template
operator|.
name|setComments
argument_list|(
literal|"Template comment"
argument_list|)
expr_stmt|;
name|template
operator|.
name|setNextApproverIds
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"Next approver "
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|ApprovalRequest
name|combined
init|=
name|request
operator|.
name|applyTemplate
argument_list|(
name|template
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
literal|"Combined approval request should be a new instance"
argument_list|,
name|combined
argument_list|,
name|both
argument_list|(
name|not
argument_list|(
name|sameInstance
argument_list|(
name|request
argument_list|)
argument_list|)
argument_list|)
operator|.
name|and
argument_list|(
name|not
argument_list|(
name|sameInstance
argument_list|(
name|template
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Action type should not be overwritten"
argument_list|,
name|request
operator|.
name|getActionType
argument_list|()
argument_list|,
name|combined
operator|.
name|getActionType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Comment should not be overwritten"
argument_list|,
name|request
operator|.
name|getComments
argument_list|()
argument_list|,
name|combined
operator|.
name|getComments
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Context id should not be overwritten"
argument_list|,
name|request
operator|.
name|getContextId
argument_list|()
argument_list|,
name|combined
operator|.
name|getContextId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Next approver id should be taken from template"
argument_list|,
name|template
operator|.
name|getNextApproverIds
argument_list|()
argument_list|,
name|combined
operator|.
name|getNextApproverIds
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldSerializeAsJson ()
specifier|public
name|void
name|shouldSerializeAsJson
parameter_list|()
throws|throws
name|JsonProcessingException
block|{
specifier|final
name|ObjectMapper
name|mapper
init|=
name|JsonUtils
operator|.
name|createObjectMapper
argument_list|()
decl_stmt|;
specifier|final
name|String
name|json
init|=
name|mapper
operator|.
name|writerFor
argument_list|(
name|ApprovalRequest
operator|.
name|class
argument_list|)
operator|.
name|writeValueAsString
argument_list|(
name|sampleRequest
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"ApprovalRequest should serialize as JSON from Salesforce examples"
argument_list|,
literal|"{\"actionType\":\"Submit\",\"contextActorId\":\"005D00000015rZy\",\"contextId\":\"001D000000I8mIm\""
operator|+
literal|",\"comments\":\"this is a test\",\"nextApproverIds\":[\"005D00000015rY9\"],"
operator|+
literal|"\"processDefinitionNameOrId\":\"PTO_Request_Process\",\"skipEntryCriteria\":true}"
argument_list|,
name|json
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldSerializeAsXml ()
specifier|public
name|void
name|shouldSerializeAsXml
parameter_list|()
block|{
specifier|final
name|XStream
name|xStream
init|=
name|XStreamUtils
operator|.
name|createXStream
argument_list|(
name|ApprovalRequest
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|String
name|xml
init|=
name|xStream
operator|.
name|toXML
argument_list|(
name|sampleRequest
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"ApprovalRequest should serialize as XML"
argument_list|,
literal|"<requests>"
comment|//
operator|+
literal|"<actionType>Submit</actionType>"
comment|//
operator|+
literal|"<contextActorId>005D00000015rZy</contextActorId>"
comment|//
operator|+
literal|"<contextId>001D000000I8mIm</contextId>"
comment|//
operator|+
literal|"<comments>this is a test</comments>"
comment|//
operator|+
literal|"<nextApproverIds>005D00000015rY9</nextApproverIds>"
comment|//
operator|+
literal|"<processDefinitionNameOrId>PTO_Request_Process</processDefinitionNameOrId>"
comment|//
operator|+
literal|"<skipEntryCriteria>true</skipEntryCriteria>"
comment|//
operator|+
literal|"</requests>"
argument_list|,
name|xml
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldTolerateNullTemplates ()
specifier|public
name|void
name|shouldTolerateNullTemplates
parameter_list|()
block|{
specifier|final
name|ApprovalRequest
name|request
init|=
operator|new
name|ApprovalRequest
argument_list|()
decl_stmt|;
specifier|final
name|ApprovalRequest
name|appliedTo
init|=
name|request
operator|.
name|applyTemplate
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
literal|"For null templates applyTemplate should return same object"
argument_list|,
name|appliedTo
argument_list|,
name|sameInstance
argument_list|(
name|request
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

