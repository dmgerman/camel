begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce.internal
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|GeneralSecurityException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|SalesforceHttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|SalesforceLoginConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|jsse
operator|.
name|KeyStoreParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_class
DECL|class|SalesforceSessionTest
specifier|public
class|class
name|SalesforceSessionTest
block|{
DECL|field|parameters
specifier|private
name|KeyStoreParameters
name|parameters
decl_stmt|;
DECL|method|SalesforceSessionTest ()
specifier|public
name|SalesforceSessionTest
parameter_list|()
block|{
name|parameters
operator|=
operator|new
name|KeyStoreParameters
argument_list|()
expr_stmt|;
name|parameters
operator|.
name|setResource
argument_list|(
literal|"test.p12"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|setType
argument_list|(
literal|"PKCS12"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|setPassword
argument_list|(
literal|"password"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldGenerateJwtTokens ()
specifier|public
name|void
name|shouldGenerateJwtTokens
parameter_list|()
throws|throws
name|GeneralSecurityException
throws|,
name|IOException
block|{
name|SalesforceLoginConfig
name|config
init|=
operator|new
name|SalesforceLoginConfig
argument_list|(
literal|"https://login.salesforce.com"
argument_list|,
literal|"ABCD"
argument_list|,
literal|"username"
argument_list|,
name|parameters
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|SalesforceSession
name|session
init|=
operator|new
name|SalesforceSession
argument_list|(
operator|new
name|DefaultCamelContext
argument_list|()
argument_list|,
name|mock
argument_list|(
name|SalesforceHttpClient
operator|.
name|class
argument_list|)
argument_list|,
literal|1
argument_list|,
name|config
argument_list|)
decl_stmt|;
name|String
name|jwtAssertion
init|=
name|session
operator|.
name|generateJwtAssertion
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|jwtAssertion
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

