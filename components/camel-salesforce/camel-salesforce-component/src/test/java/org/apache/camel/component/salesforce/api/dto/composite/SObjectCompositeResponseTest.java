begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce.api.dto.composite
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|composite
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|utils
operator|.
name|JsonUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertThat
import|;
end_import

begin_class
DECL|class|SObjectCompositeResponseTest
specifier|public
class|class
name|SObjectCompositeResponseTest
block|{
annotation|@
name|Test
DECL|method|shouldDeserializeFailedJsonResponse ()
specifier|public
name|void
name|shouldDeserializeFailedJsonResponse
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|String
name|json
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/org/apache/camel/component/salesforce/api/dto/composite_response_example_failure.json"
argument_list|)
argument_list|,
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|ObjectMapper
name|mapper
init|=
name|JsonUtils
operator|.
name|createObjectMapper
argument_list|()
decl_stmt|;
specifier|final
name|SObjectCompositeResponse
name|response
init|=
name|mapper
operator|.
name|readerFor
argument_list|(
name|SObjectCompositeResponse
operator|.
name|class
argument_list|)
operator|.
name|readValue
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|assertFailedResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldDeserializeSuccessfulJsonResponse ()
specifier|public
name|void
name|shouldDeserializeSuccessfulJsonResponse
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|String
name|json
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/org/apache/camel/component/salesforce/api/dto/composite_response_example_success.json"
argument_list|)
argument_list|,
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|ObjectMapper
name|mapper
init|=
name|JsonUtils
operator|.
name|createObjectMapper
argument_list|()
decl_stmt|;
specifier|final
name|SObjectCompositeResponse
name|response
init|=
name|mapper
operator|.
name|readerFor
argument_list|(
name|SObjectCompositeResponse
operator|.
name|class
argument_list|)
operator|.
name|readValue
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|assertSuccessfulResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
DECL|method|assertFailedResponse (final SObjectCompositeResponse response)
specifier|static
name|void
name|assertFailedResponse
parameter_list|(
specifier|final
name|SObjectCompositeResponse
name|response
parameter_list|)
block|{
specifier|final
name|List
argument_list|<
name|SObjectCompositeResult
argument_list|>
name|compositeResponse
init|=
name|response
operator|.
name|getCompositeResponse
argument_list|()
decl_stmt|;
specifier|final
name|List
argument_list|<
name|SObjectCompositeResult
argument_list|>
name|results
init|=
name|compositeResponse
decl_stmt|;
name|assertThat
argument_list|(
name|results
argument_list|)
operator|.
name|as
argument_list|(
literal|"It should contain 2 results"
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|2
argument_list|)
expr_stmt|;
comment|// upsert
specifier|final
name|SObjectCompositeResult
name|upsertResponse
init|=
name|compositeResponse
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|upsertResponse
operator|.
name|getReferenceId
argument_list|()
argument_list|)
operator|.
name|as
argument_list|(
literal|"ReferenceId of first operation should be NewPayment1"
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"NewPayment1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|upsertResponse
operator|.
name|getHttpStatusCode
argument_list|()
argument_list|)
operator|.
name|as
argument_list|(
literal|"httpStatusCode of first operation should be 400"
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|400
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|upsertResponse
operator|.
name|getBody
argument_list|()
argument_list|)
operator|.
name|isInstanceOf
argument_list|(
name|List
operator|.
name|class
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|final
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|upsertBody
init|=
operator|(
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
operator|)
name|upsertResponse
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|upsertBody
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|upsertBodyContent
init|=
name|upsertBody
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|upsertBodyContent
argument_list|)
operator|.
name|as
argument_list|(
literal|"message of the create operation should be populated properly"
argument_list|)
operator|.
name|containsEntry
argument_list|(
literal|"message"
argument_list|,
literal|"The transaction was rolled back since another operation in the same transaction failed."
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|upsertBodyContent
argument_list|)
operator|.
name|as
argument_list|(
literal|"errorCode of the create operation should be PROCESSING_HALTED"
argument_list|)
operator|.
name|containsEntry
argument_list|(
literal|"errorCode"
argument_list|,
literal|"PROCESSING_HALTED"
argument_list|)
expr_stmt|;
comment|// create
specifier|final
name|SObjectCompositeResult
name|createResponse
init|=
name|compositeResponse
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|createResponse
operator|.
name|getReferenceId
argument_list|()
argument_list|)
operator|.
name|as
argument_list|(
literal|"ReferenceId of first operation should be NewPayment2"
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"NewPayment2"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|createResponse
operator|.
name|getHttpStatusCode
argument_list|()
argument_list|)
operator|.
name|as
argument_list|(
literal|"httpStatusCode of first operation should be 400"
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|400
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|final
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|createBody
init|=
operator|(
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
operator|)
name|createResponse
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|createBody
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|createBodyContent
init|=
name|createBody
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|createBodyContent
argument_list|)
operator|.
name|as
argument_list|(
literal|"message of the create operation should be populated properly"
argument_list|)
operator|.
name|containsEntry
argument_list|(
literal|"message"
argument_list|,
literal|"Foreign key external ID: 0116 not found for field Invoice_External_Id__c in entity blng__Invoice__c"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|createBodyContent
argument_list|)
operator|.
name|as
argument_list|(
literal|"errorCode of the create operation should be INVALID_FIELD"
argument_list|)
operator|.
name|containsEntry
argument_list|(
literal|"errorCode"
argument_list|,
literal|"INVALID_FIELD"
argument_list|)
expr_stmt|;
block|}
DECL|method|assertSuccessfulResponse (final SObjectCompositeResponse response)
specifier|static
name|void
name|assertSuccessfulResponse
parameter_list|(
specifier|final
name|SObjectCompositeResponse
name|response
parameter_list|)
block|{
specifier|final
name|List
argument_list|<
name|SObjectCompositeResult
argument_list|>
name|compositeResponse
init|=
name|response
operator|.
name|getCompositeResponse
argument_list|()
decl_stmt|;
specifier|final
name|List
argument_list|<
name|SObjectCompositeResult
argument_list|>
name|results
init|=
name|compositeResponse
decl_stmt|;
name|assertThat
argument_list|(
name|results
argument_list|)
operator|.
name|as
argument_list|(
literal|"It should contain 2 results"
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|2
argument_list|)
expr_stmt|;
comment|// create 1
specifier|final
name|SObjectCompositeResult
name|firstResponse
init|=
name|compositeResponse
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|firstResponse
operator|.
name|getHttpHeaders
argument_list|()
argument_list|)
operator|.
name|as
argument_list|(
literal|"Location of the create resource should be populated"
argument_list|)
operator|.
name|containsEntry
argument_list|(
literal|"Location"
argument_list|,
literal|"/services/data/v41.0/sobjects/blng__Payment__c/a1V3E000000EXomUAM"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|firstResponse
operator|.
name|getHttpStatusCode
argument_list|()
argument_list|)
operator|.
name|as
argument_list|(
literal|"httpStatusCode of the create operation should be 201"
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|201
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|firstResponse
operator|.
name|getReferenceId
argument_list|()
argument_list|)
operator|.
name|as
argument_list|(
literal|"ReferenceId of the create operation should be NewPayment1"
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"NewPayment1"
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|firstResponseMap
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|firstResponse
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|firstResponseMap
argument_list|)
operator|.
name|as
argument_list|(
literal|"id of the create operation should be a1V3E000000EXomUAM"
argument_list|)
operator|.
name|containsEntry
argument_list|(
literal|"id"
argument_list|,
literal|"a1V3E000000EXomUAM"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|firstResponseMap
argument_list|)
operator|.
name|as
argument_list|(
literal|"success of the create operation should be true"
argument_list|)
operator|.
name|containsEntry
argument_list|(
literal|"success"
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
comment|// create 2
specifier|final
name|SObjectCompositeResult
name|secondResponse
init|=
name|compositeResponse
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|secondResponse
operator|.
name|getHttpHeaders
argument_list|()
argument_list|)
operator|.
name|as
argument_list|(
literal|"Location of the create resource should be populated"
argument_list|)
operator|.
name|containsEntry
argument_list|(
literal|"Location"
argument_list|,
literal|"/services/data/v41.0/sobjects/blng__Payment__c/a1V3E000000EXomUAG"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|secondResponse
operator|.
name|getHttpStatusCode
argument_list|()
argument_list|)
operator|.
name|as
argument_list|(
literal|"httpStatusCode of the create operation should be 201"
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|201
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|secondResponse
operator|.
name|getReferenceId
argument_list|()
argument_list|)
operator|.
name|as
argument_list|(
literal|"ReferenceId of the create operation should be NewPayment2"
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"NewPayment2"
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|secondResponseMap
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|secondResponse
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|secondResponseMap
argument_list|)
operator|.
name|as
argument_list|(
literal|"id of the create operation should be a1V3E000000EXomUAG"
argument_list|)
operator|.
name|containsEntry
argument_list|(
literal|"id"
argument_list|,
literal|"a1V3E000000EXomUAG"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|secondResponseMap
argument_list|)
operator|.
name|as
argument_list|(
literal|"success of the create operation should be true"
argument_list|)
operator|.
name|containsEntry
argument_list|(
literal|"success"
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

