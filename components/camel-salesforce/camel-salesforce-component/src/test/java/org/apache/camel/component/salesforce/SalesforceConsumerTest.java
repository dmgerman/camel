begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
package|;
end_package

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|ZonedDateTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|AsyncProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|PlatformEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|internal
operator|.
name|streaming
operator|.
name|SubscriptionHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ClassResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|cometd
operator|.
name|bayeux
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|cometd
operator|.
name|bayeux
operator|.
name|client
operator|.
name|ClientSessionChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|cometd
operator|.
name|common
operator|.
name|HashMapMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|same
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verifyNoMoreInteractions
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
DECL|class|SalesforceConsumerTest
specifier|public
class|class
name|SalesforceConsumerTest
block|{
DECL|class|AccountUpdates
specifier|public
specifier|static
class|class
name|AccountUpdates
block|{
annotation|@
name|JsonProperty
argument_list|(
literal|"Id"
argument_list|)
DECL|field|id
name|String
name|id
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"Name"
argument_list|)
DECL|field|name
name|String
name|name
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"Phone"
argument_list|)
DECL|field|phone
name|String
name|phone
decl_stmt|;
annotation|@
name|Override
DECL|method|equals (Object obj)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|AccountUpdates
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
specifier|final
name|AccountUpdates
name|other
init|=
operator|(
name|AccountUpdates
operator|)
name|obj
decl_stmt|;
return|return
name|Objects
operator|.
name|equals
argument_list|(
name|id
argument_list|,
name|other
operator|.
name|id
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|name
argument_list|,
name|other
operator|.
name|name
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|phone
argument_list|,
name|other
operator|.
name|phone
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hash
argument_list|(
name|id
argument_list|,
name|name
argument_list|,
name|phone
argument_list|)
return|;
block|}
block|}
DECL|field|NOT_USED
specifier|static
specifier|final
name|SubscriptionHelper
name|NOT_USED
init|=
literal|null
decl_stmt|;
DECL|field|configuration
name|SalesforceEndpointConfig
name|configuration
init|=
operator|new
name|SalesforceEndpointConfig
argument_list|()
decl_stmt|;
DECL|field|endpoint
name|SalesforceEndpoint
name|endpoint
init|=
name|mock
argument_list|(
name|SalesforceEndpoint
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|exchange
name|Exchange
name|exchange
init|=
name|mock
argument_list|(
name|Exchange
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|in
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
name|in
init|=
name|mock
argument_list|(
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|processor
name|AsyncProcessor
name|processor
init|=
name|mock
argument_list|(
name|AsyncProcessor
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|pushTopicMessage
name|Message
name|pushTopicMessage
decl_stmt|;
annotation|@
name|Before
DECL|method|setupMocks ()
specifier|public
name|void
name|setupMocks
parameter_list|()
block|{
name|when
argument_list|(
name|endpoint
operator|.
name|getConfiguration
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|endpoint
operator|.
name|createExchange
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|in
argument_list|)
expr_stmt|;
specifier|final
name|SalesforceComponent
name|component
init|=
name|mock
argument_list|(
name|SalesforceComponent
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|endpoint
operator|.
name|getComponent
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|component
argument_list|)
expr_stmt|;
specifier|final
name|CamelContext
name|camelContext
init|=
name|mock
argument_list|(
name|CamelContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|component
operator|.
name|getCamelContext
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|camelContext
argument_list|)
expr_stmt|;
specifier|final
name|ClassResolver
name|classResolver
init|=
name|mock
argument_list|(
name|ClassResolver
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|camelContext
operator|.
name|getClassResolver
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|classResolver
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|classResolver
operator|.
name|resolveClass
argument_list|(
name|AccountUpdates
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|(
name|Class
operator|)
name|AccountUpdates
operator|.
name|class
argument_list|)
expr_stmt|;
name|pushTopicMessage
operator|=
name|createPushTopicMessage
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldProcessMappedPayloadPushTopicMessages ()
specifier|public
name|void
name|shouldProcessMappedPayloadPushTopicMessages
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|endpoint
operator|.
name|getTopicName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"AccountUpdates"
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setSObjectClass
argument_list|(
name|AccountUpdates
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|SalesforceConsumer
name|consumer
init|=
operator|new
name|SalesforceConsumer
argument_list|(
name|endpoint
argument_list|,
name|processor
argument_list|,
name|NOT_USED
argument_list|)
decl_stmt|;
name|consumer
operator|.
name|processMessage
argument_list|(
name|mock
argument_list|(
name|ClientSessionChannel
operator|.
name|class
argument_list|)
argument_list|,
name|pushTopicMessage
argument_list|)
expr_stmt|;
specifier|final
name|AccountUpdates
name|accountUpdates
init|=
operator|new
name|AccountUpdates
argument_list|()
decl_stmt|;
name|accountUpdates
operator|.
name|phone
operator|=
literal|"(415) 555-1212"
expr_stmt|;
name|accountUpdates
operator|.
name|id
operator|=
literal|"001D000000KneakIAB"
expr_stmt|;
name|accountUpdates
operator|.
name|name
operator|=
literal|"Blackbeard"
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setBody
argument_list|(
name|accountUpdates
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceEventType"
argument_list|,
literal|"created"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceCreatedDate"
argument_list|,
literal|"2016-09-16T19:45:27.454Z"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceReplayId"
argument_list|,
literal|1L
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceTopicName"
argument_list|,
literal|"AccountUpdates"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceChannel"
argument_list|,
literal|"/topic/AccountUpdates"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceClientId"
argument_list|,
literal|"lxdl9o32njygi1gj47kgfaga4k"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|processor
argument_list|)
operator|.
name|process
argument_list|(
name|same
argument_list|(
name|exchange
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldProcessPlatformEvents ()
specifier|public
name|void
name|shouldProcessPlatformEvents
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|endpoint
operator|.
name|getTopicName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"/event/TestEvent__e"
argument_list|)
expr_stmt|;
specifier|final
name|Message
name|message
init|=
operator|new
name|HashMapMessage
argument_list|()
decl_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|data
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|data
operator|.
name|put
argument_list|(
literal|"schema"
argument_list|,
literal|"30H2pgzuWcF844p26Ityvg"
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|payload
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|payload
operator|.
name|put
argument_list|(
literal|"Test_Field__c"
argument_list|,
literal|"abc"
argument_list|)
expr_stmt|;
name|payload
operator|.
name|put
argument_list|(
literal|"CreatedById"
argument_list|,
literal|"00541000002WYFpAAO"
argument_list|)
expr_stmt|;
name|payload
operator|.
name|put
argument_list|(
literal|"CreatedDate"
argument_list|,
literal|"2018-07-06T12:41:04Z"
argument_list|)
expr_stmt|;
name|data
operator|.
name|put
argument_list|(
literal|"payload"
argument_list|,
name|payload
argument_list|)
expr_stmt|;
name|data
operator|.
name|put
argument_list|(
literal|"event"
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"replayId"
argument_list|,
literal|4L
argument_list|)
argument_list|)
expr_stmt|;
name|message
operator|.
name|put
argument_list|(
literal|"data"
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|message
operator|.
name|put
argument_list|(
literal|"channel"
argument_list|,
literal|"/event/TestEvent__e"
argument_list|)
expr_stmt|;
specifier|final
name|SalesforceConsumer
name|consumer
init|=
operator|new
name|SalesforceConsumer
argument_list|(
name|endpoint
argument_list|,
name|processor
argument_list|,
name|NOT_USED
argument_list|)
decl_stmt|;
name|consumer
operator|.
name|processMessage
argument_list|(
name|mock
argument_list|(
name|ClientSessionChannel
operator|.
name|class
argument_list|)
argument_list|,
name|message
argument_list|)
expr_stmt|;
specifier|final
name|ZonedDateTime
name|created
init|=
name|ZonedDateTime
operator|.
name|parse
argument_list|(
literal|"2018-07-06T12:41:04Z"
argument_list|)
decl_stmt|;
specifier|final
name|PlatformEvent
name|event
init|=
operator|new
name|PlatformEvent
argument_list|(
name|created
argument_list|,
literal|"00541000002WYFpAAO"
argument_list|)
decl_stmt|;
name|event
operator|.
name|set
argument_list|(
literal|"Test_Field__c"
argument_list|,
literal|"abc"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setBody
argument_list|(
name|event
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceCreatedDate"
argument_list|,
name|created
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceReplayId"
argument_list|,
literal|4L
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceChannel"
argument_list|,
literal|"/event/TestEvent__e"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceEventType"
argument_list|,
literal|"TestEvent__e"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforcePlatformEventSchema"
argument_list|,
literal|"30H2pgzuWcF844p26Ityvg"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|processor
argument_list|)
operator|.
name|process
argument_list|(
name|same
argument_list|(
name|exchange
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|in
argument_list|,
name|processor
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldProcessPushTopicMessages ()
specifier|public
name|void
name|shouldProcessPushTopicMessages
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|endpoint
operator|.
name|getTopicName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"AccountUpdates"
argument_list|)
expr_stmt|;
specifier|final
name|SalesforceConsumer
name|consumer
init|=
operator|new
name|SalesforceConsumer
argument_list|(
name|endpoint
argument_list|,
name|processor
argument_list|,
name|NOT_USED
argument_list|)
decl_stmt|;
name|consumer
operator|.
name|processMessage
argument_list|(
name|mock
argument_list|(
name|ClientSessionChannel
operator|.
name|class
argument_list|)
argument_list|,
name|pushTopicMessage
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|final
name|Object
name|sobject
init|=
operator|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|pushTopicMessage
operator|.
name|get
argument_list|(
literal|"data"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|"sobject"
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setBody
argument_list|(
name|sobject
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceEventType"
argument_list|,
literal|"created"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceCreatedDate"
argument_list|,
literal|"2016-09-16T19:45:27.454Z"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceReplayId"
argument_list|,
literal|1L
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceTopicName"
argument_list|,
literal|"AccountUpdates"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceChannel"
argument_list|,
literal|"/topic/AccountUpdates"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceClientId"
argument_list|,
literal|"lxdl9o32njygi1gj47kgfaga4k"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|processor
argument_list|)
operator|.
name|process
argument_list|(
name|same
argument_list|(
name|exchange
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldProcessRawPayloadPushTopicMessages ()
specifier|public
name|void
name|shouldProcessRawPayloadPushTopicMessages
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|endpoint
operator|.
name|getTopicName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"AccountUpdates"
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setRawPayload
argument_list|(
literal|true
argument_list|)
expr_stmt|;
specifier|final
name|SalesforceConsumer
name|consumer
init|=
operator|new
name|SalesforceConsumer
argument_list|(
name|endpoint
argument_list|,
name|processor
argument_list|,
name|NOT_USED
argument_list|)
decl_stmt|;
name|consumer
operator|.
name|processMessage
argument_list|(
name|mock
argument_list|(
name|ClientSessionChannel
operator|.
name|class
argument_list|)
argument_list|,
name|pushTopicMessage
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setBody
argument_list|(
literal|"{\"Phone\":\"(415) 555-1212\",\"Id\":\"001D000000KneakIAB\",\"Name\":\"Blackbeard\"}"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceEventType"
argument_list|,
literal|"created"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceCreatedDate"
argument_list|,
literal|"2016-09-16T19:45:27.454Z"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceReplayId"
argument_list|,
literal|1L
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceTopicName"
argument_list|,
literal|"AccountUpdates"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceChannel"
argument_list|,
literal|"/topic/AccountUpdates"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceClientId"
argument_list|,
literal|"lxdl9o32njygi1gj47kgfaga4k"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|processor
argument_list|)
operator|.
name|process
argument_list|(
name|same
argument_list|(
name|exchange
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldProcessRawPlatformEvents ()
specifier|public
name|void
name|shouldProcessRawPlatformEvents
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|endpoint
operator|.
name|getTopicName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"/event/TestEvent__e"
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setRawPayload
argument_list|(
literal|true
argument_list|)
expr_stmt|;
specifier|final
name|Message
name|message
init|=
operator|new
name|HashMapMessage
argument_list|()
decl_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|data
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|data
operator|.
name|put
argument_list|(
literal|"schema"
argument_list|,
literal|"30H2pgzuWcF844p26Ityvg"
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|payload
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|payload
operator|.
name|put
argument_list|(
literal|"Test_Field__c"
argument_list|,
literal|"abc"
argument_list|)
expr_stmt|;
name|payload
operator|.
name|put
argument_list|(
literal|"CreatedById"
argument_list|,
literal|"00541000002WYFpAAO"
argument_list|)
expr_stmt|;
name|payload
operator|.
name|put
argument_list|(
literal|"CreatedDate"
argument_list|,
literal|"2018-07-06T12:41:04Z"
argument_list|)
expr_stmt|;
name|data
operator|.
name|put
argument_list|(
literal|"payload"
argument_list|,
name|payload
argument_list|)
expr_stmt|;
name|data
operator|.
name|put
argument_list|(
literal|"event"
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"replayId"
argument_list|,
literal|4L
argument_list|)
argument_list|)
expr_stmt|;
name|message
operator|.
name|put
argument_list|(
literal|"data"
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|message
operator|.
name|put
argument_list|(
literal|"channel"
argument_list|,
literal|"/event/TestEvent__e"
argument_list|)
expr_stmt|;
specifier|final
name|SalesforceConsumer
name|consumer
init|=
operator|new
name|SalesforceConsumer
argument_list|(
name|endpoint
argument_list|,
name|processor
argument_list|,
name|NOT_USED
argument_list|)
decl_stmt|;
name|consumer
operator|.
name|processMessage
argument_list|(
name|mock
argument_list|(
name|ClientSessionChannel
operator|.
name|class
argument_list|)
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setBody
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceCreatedDate"
argument_list|,
name|ZonedDateTime
operator|.
name|parse
argument_list|(
literal|"2018-07-06T12:41:04Z"
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceReplayId"
argument_list|,
literal|4L
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceChannel"
argument_list|,
literal|"/event/TestEvent__e"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforceEventType"
argument_list|,
literal|"TestEvent__e"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|in
argument_list|)
operator|.
name|setHeader
argument_list|(
literal|"CamelSalesforcePlatformEventSchema"
argument_list|,
literal|"30H2pgzuWcF844p26Ityvg"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|processor
argument_list|)
operator|.
name|process
argument_list|(
name|same
argument_list|(
name|exchange
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|in
argument_list|,
name|processor
argument_list|)
expr_stmt|;
block|}
DECL|method|createPushTopicMessage ()
specifier|static
name|Message
name|createPushTopicMessage
parameter_list|()
block|{
specifier|final
name|Message
name|pushTopicMessage
init|=
operator|new
name|HashMapMessage
argument_list|()
decl_stmt|;
name|pushTopicMessage
operator|.
name|put
argument_list|(
literal|"clientId"
argument_list|,
literal|"lxdl9o32njygi1gj47kgfaga4k"
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|data
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|pushTopicMessage
operator|.
name|put
argument_list|(
literal|"data"
argument_list|,
name|data
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|event
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|data
operator|.
name|put
argument_list|(
literal|"event"
argument_list|,
name|event
argument_list|)
expr_stmt|;
name|event
operator|.
name|put
argument_list|(
literal|"createdDate"
argument_list|,
literal|"2016-09-16T19:45:27.454Z"
argument_list|)
expr_stmt|;
name|event
operator|.
name|put
argument_list|(
literal|"replayId"
argument_list|,
literal|1L
argument_list|)
expr_stmt|;
name|event
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"created"
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|sobject
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|data
operator|.
name|put
argument_list|(
literal|"sobject"
argument_list|,
name|sobject
argument_list|)
expr_stmt|;
name|sobject
operator|.
name|put
argument_list|(
literal|"Phone"
argument_list|,
literal|"(415) 555-1212"
argument_list|)
expr_stmt|;
name|sobject
operator|.
name|put
argument_list|(
literal|"Id"
argument_list|,
literal|"001D000000KneakIAB"
argument_list|)
expr_stmt|;
name|sobject
operator|.
name|put
argument_list|(
literal|"Name"
argument_list|,
literal|"Blackbeard"
argument_list|)
expr_stmt|;
name|pushTopicMessage
operator|.
name|put
argument_list|(
literal|"channel"
argument_list|,
literal|"/topic/AccountUpdates"
argument_list|)
expr_stmt|;
return|return
name|pushTopicMessage
return|;
block|}
block|}
end_class

end_unit

