begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|CreateSObjectResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|dto
operator|.
name|generated
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Test support for Salesforce compound data types. This test requires a custom  * field in the<code>Account</code> object called  *<code>"Shipping Location"</code> of type<code>Geolocation</code> in decimal  * units.  *   * @see<a href=  *      "https://www.salesforce.com/developer/docs/api/index_Left.htm#CSHID=compound_fields.htm|StartTopic=Content%2Fcompound_fields.htm|SkinName=webhelp">Compound  *      data types</a>  */
end_comment

begin_class
DECL|class|CompoundTypesIntegrationTest
specifier|public
class|class
name|CompoundTypesIntegrationTest
extends|extends
name|AbstractSalesforceTestBase
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|CompoundTypesIntegrationTest
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Test
DECL|method|testTypes ()
specifier|public
name|void
name|testTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestTypes
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|doTestTypes
argument_list|(
literal|"Xml"
argument_list|)
expr_stmt|;
block|}
DECL|method|doTestTypes (String suffix)
specifier|private
name|void
name|doTestTypes
parameter_list|(
name|String
name|suffix
parameter_list|)
block|{
name|Account
name|account
init|=
operator|new
name|Account
argument_list|()
decl_stmt|;
name|account
operator|.
name|setName
argument_list|(
literal|"Camel Test Account"
argument_list|)
expr_stmt|;
name|account
operator|.
name|setBillingCity
argument_list|(
literal|"San Francisco"
argument_list|)
expr_stmt|;
name|account
operator|.
name|setBillingCountry
argument_list|(
literal|"USA"
argument_list|)
expr_stmt|;
name|account
operator|.
name|setBillingPostalCode
argument_list|(
literal|"94105"
argument_list|)
expr_stmt|;
name|account
operator|.
name|setBillingState
argument_list|(
literal|"CA"
argument_list|)
expr_stmt|;
name|account
operator|.
name|setBillingStreet
argument_list|(
literal|"1 Market St #300"
argument_list|)
expr_stmt|;
name|account
operator|.
name|setBillingLatitude
argument_list|(
literal|37.793779
argument_list|)
expr_stmt|;
name|account
operator|.
name|setBillingLongitude
argument_list|(
operator|-
literal|122.39448
argument_list|)
expr_stmt|;
name|account
operator|.
name|setShippingCity
argument_list|(
literal|"San Francisco"
argument_list|)
expr_stmt|;
name|account
operator|.
name|setShippingCountry
argument_list|(
literal|"USA"
argument_list|)
expr_stmt|;
name|account
operator|.
name|setShippingPostalCode
argument_list|(
literal|"94105"
argument_list|)
expr_stmt|;
name|account
operator|.
name|setShippingState
argument_list|(
literal|"CA"
argument_list|)
expr_stmt|;
name|account
operator|.
name|setShippingStreet
argument_list|(
literal|"1 Market St #300"
argument_list|)
expr_stmt|;
name|account
operator|.
name|setShippingLatitude
argument_list|(
literal|37.793779
argument_list|)
expr_stmt|;
name|account
operator|.
name|setShippingLongitude
argument_list|(
operator|-
literal|122.39448
argument_list|)
expr_stmt|;
name|account
operator|.
name|setShipping_Location__Latitude__s
argument_list|(
literal|37.793779
argument_list|)
expr_stmt|;
name|account
operator|.
name|setShipping_Location__Longitude__s
argument_list|(
operator|-
literal|122.39448
argument_list|)
expr_stmt|;
name|CreateSObjectResult
name|result
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:createSObject"
operator|+
name|suffix
argument_list|,
name|account
argument_list|,
name|CreateSObjectResult
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Create success"
argument_list|,
name|result
operator|.
name|getSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Create: "
operator|+
name|result
argument_list|)
expr_stmt|;
try|try
block|{
comment|// get account with compound fields
name|account
operator|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:getSObject"
operator|+
name|suffix
argument_list|,
name|result
operator|.
name|getId
argument_list|()
argument_list|,
name|Account
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|account
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Billing Address"
argument_list|,
name|account
operator|.
name|getBillingAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Shipping Address"
argument_list|,
name|account
operator|.
name|getShippingAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Shipping Location"
argument_list|,
name|account
operator|.
name|getShippingAddress
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Retrieved fields billing address: {}, shipping location: {}"
argument_list|,
name|account
operator|.
name|getBillingAddress
argument_list|()
argument_list|,
name|account
operator|.
name|getShipping_Location__c
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// delete the test SObject
name|assertNull
argument_list|(
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:deleteSObject"
operator|+
name|suffix
argument_list|,
name|result
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Delete successful"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|doCreateRouteBuilder ()
specifier|protected
name|RouteBuilder
name|doCreateRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
comment|// testCreateSObject
name|from
argument_list|(
literal|"direct:createSObject"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:createSObject?sObjectName=Account"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:createSObjectXml"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:createSObject?format=XML&sObjectName=Account"
argument_list|)
expr_stmt|;
comment|// testGetSObject
name|from
argument_list|(
literal|"direct:getSObject"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:getSObject?sObjectName=Account&sObjectFields=Id,BillingAddress,ShippingAddress,Shipping_Location__c"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:getSObjectXml"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:getSObject?format=XML&sObjectName=Account&sObjectFields=Id,BillingAddress,ShippingAddress,Shipping_Location__c"
argument_list|)
expr_stmt|;
comment|// testDeleteSObject
name|from
argument_list|(
literal|"direct:deleteSObject"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:deleteSObject?sObjectName=Account"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:deleteSObjectXml"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:deleteSObject?format=XML&sObjectName=Account"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

