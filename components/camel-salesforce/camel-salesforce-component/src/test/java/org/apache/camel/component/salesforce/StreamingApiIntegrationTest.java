begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|CreateSObjectResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|dto
operator|.
name|Merchandise__c
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|internal
operator|.
name|dto
operator|.
name|QueryRecordsPushTopic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|StreamingApiIntegrationTest
specifier|public
class|class
name|StreamingApiIntegrationTest
extends|extends
name|AbstractSalesforceTestBase
block|{
annotation|@
name|Test
DECL|method|testSubscribeAndReceive ()
specifier|public
name|void
name|testSubscribeAndReceive
parameter_list|()
throws|throws
name|Exception
block|{
name|MockEndpoint
name|mock
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:CamelTestTopic"
argument_list|)
decl_stmt|;
name|mock
operator|.
name|expectedMessageCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
comment|// assert expected static headers
name|mock
operator|.
name|expectedHeaderReceived
argument_list|(
literal|"CamelSalesforceTopicName"
argument_list|,
literal|"CamelTestTopic"
argument_list|)
expr_stmt|;
name|mock
operator|.
name|expectedHeaderReceived
argument_list|(
literal|"CamelSalesforceChannel"
argument_list|,
literal|"/topic/CamelTestTopic"
argument_list|)
expr_stmt|;
name|Merchandise__c
name|merchandise
init|=
operator|new
name|Merchandise__c
argument_list|()
decl_stmt|;
name|merchandise
operator|.
name|setName
argument_list|(
literal|"TestNotification"
argument_list|)
expr_stmt|;
name|merchandise
operator|.
name|setDescription__c
argument_list|(
literal|"Merchandise for testing Streaming API updated on "
operator|+
operator|new
name|DateTime
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|merchandise
operator|.
name|setPrice__c
argument_list|(
literal|9.99
argument_list|)
expr_stmt|;
name|merchandise
operator|.
name|setTotal_Inventory__c
argument_list|(
literal|1000.0
argument_list|)
expr_stmt|;
name|CreateSObjectResult
name|result
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:upsertSObject"
argument_list|,
name|merchandise
argument_list|,
name|CreateSObjectResult
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Merchandise test record not created"
argument_list|,
name|result
operator|==
literal|null
operator|||
name|result
operator|.
name|getSuccess
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
comment|// wait for Salesforce notification
name|mock
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
specifier|final
name|Message
name|in
init|=
name|mock
operator|.
name|getExchanges
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getIn
argument_list|()
decl_stmt|;
name|merchandise
operator|=
name|in
operator|.
name|getMandatoryBody
argument_list|(
name|Merchandise__c
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Missing event body"
argument_list|,
name|merchandise
argument_list|)
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Merchandise notification: {}"
argument_list|,
name|merchandise
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Missing field Id"
argument_list|,
name|merchandise
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Missing field Name"
argument_list|,
name|merchandise
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|// validate dynamic message headers
name|assertNotNull
argument_list|(
literal|"Missing header CamelSalesforceClientId"
argument_list|,
name|in
operator|.
name|getHeader
argument_list|(
literal|"CamelSalesforceClientId"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Missing header CamelSalesforceEventType"
argument_list|,
name|in
operator|.
name|getHeader
argument_list|(
literal|"CamelSalesforceEventType"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Missing header CamelSalesforceCreatedDate"
argument_list|,
name|in
operator|.
name|getHeader
argument_list|(
literal|"CamelSalesforceCreatedDate"
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// remove the test record
name|assertNull
argument_list|(
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:deleteSObjectWithId"
argument_list|,
name|merchandise
argument_list|)
argument_list|)
expr_stmt|;
comment|// remove the test topic
comment|// find it using SOQL first
name|QueryRecordsPushTopic
name|records
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:query"
argument_list|,
literal|null
argument_list|,
name|QueryRecordsPushTopic
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Test topic not found"
argument_list|,
literal|1
argument_list|,
name|records
operator|.
name|getTotalSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:deleteSObject"
argument_list|,
name|records
operator|.
name|getRecords
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|doCreateRouteBuilder ()
specifier|protected
name|RouteBuilder
name|doCreateRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
comment|// test topic subscription
name|from
argument_list|(
literal|"salesforce:CamelTestTopic?notifyForFields=ALL&notifyForOperations=ALL&"
operator|+
literal|"sObjectName=Merchandise__c&"
operator|+
literal|"updateTopic=true&sObjectQuery=SELECT Id, Name FROM Merchandise__c"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:CamelTestTopic"
argument_list|)
expr_stmt|;
comment|// route for creating test record
name|from
argument_list|(
literal|"direct:upsertSObject"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:upsertSObject?SObjectIdName=Name"
argument_list|)
expr_stmt|;
comment|// route for finding test topic
name|from
argument_list|(
literal|"direct:query"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:query?sObjectQuery=SELECT Id FROM PushTopic WHERE Name = 'CamelTestTopic'&"
operator|+
literal|"sObjectClass=org.apache.camel.component.salesforce.internal.dto.QueryRecordsPushTopic"
argument_list|)
expr_stmt|;
comment|// route for removing test record
name|from
argument_list|(
literal|"direct:deleteSObjectWithId"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:deleteSObjectWithId?sObjectIdName=Name"
argument_list|)
expr_stmt|;
comment|// route for removing topic
name|from
argument_list|(
literal|"direct:deleteSObject"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:deleteSObject"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

