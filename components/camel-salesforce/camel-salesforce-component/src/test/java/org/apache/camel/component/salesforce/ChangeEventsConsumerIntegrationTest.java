begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|EndpointInject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|CreateSObjectResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|dto
operator|.
name|generated
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|awaitility
operator|.
name|Awaitility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_comment
comment|/**  * During integration tests setup, Salesforce has been configured to fire change  * events for Account objects. This test merely uses some API calls to trigger  * some change events, and then perform assertion on the received events.  */
end_comment

begin_class
annotation|@
name|Category
argument_list|(
name|Standalone
operator|.
name|class
argument_list|)
DECL|class|ChangeEventsConsumerIntegrationTest
specifier|public
class|class
name|ChangeEventsConsumerIntegrationTest
extends|extends
name|AbstractSalesforceTestBase
block|{
DECL|field|ACCOUNT_NAME
specifier|private
specifier|static
specifier|final
name|String
name|ACCOUNT_NAME
init|=
literal|"ChangeEventsConsumerIntegrationTest-TestAccount"
decl_stmt|;
DECL|field|ACCOUNT_DESCRIPTION
specifier|private
specifier|static
specifier|final
name|String
name|ACCOUNT_DESCRIPTION
init|=
literal|"Account used to check that creation, update and deletion fire change events"
decl_stmt|;
annotation|@
name|EndpointInject
argument_list|(
name|value
operator|=
literal|"mock:capturedChangeEvents"
argument_list|)
DECL|field|capturedChangeEvents
specifier|private
name|MockEndpoint
name|capturedChangeEvents
decl_stmt|;
annotation|@
name|Test
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|accountChangesShouldTriggerChangeEvents ()
specifier|public
name|void
name|accountChangesShouldTriggerChangeEvents
parameter_list|()
block|{
comment|// Trigger a CREATE event for an Account
specifier|final
name|Account
name|account
init|=
operator|new
name|Account
argument_list|()
decl_stmt|;
name|account
operator|.
name|setName
argument_list|(
name|ACCOUNT_NAME
argument_list|)
expr_stmt|;
specifier|final
name|CreateSObjectResult
name|result
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"salesforce:createSObject?sObjectName=Account"
argument_list|,
name|account
argument_list|,
name|CreateSObjectResult
operator|.
name|class
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|result
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|// Trigger an UPDATE event for an Account
name|account
operator|.
name|setDescription
argument_list|(
name|ACCOUNT_DESCRIPTION
argument_list|)
expr_stmt|;
name|account
operator|.
name|setId
argument_list|(
name|result
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
literal|"salesforce:updateSObject"
argument_list|,
name|account
argument_list|)
expr_stmt|;
comment|// Trigger a DELETE event for an Account
name|template
operator|.
name|sendBody
argument_list|(
literal|"salesforce:deleteSObject"
argument_list|,
name|account
argument_list|)
expr_stmt|;
name|Awaitility
operator|.
name|await
argument_list|()
operator|.
name|atMost
argument_list|(
literal|10
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
operator|.
name|untilAsserted
argument_list|(
parameter_list|()
lambda|->
block|{
name|Assertions
operator|.
name|assertThat
argument_list|(
name|capturedChangeEvents
operator|.
name|assertExchangeReceived
argument_list|(
literal|2
argument_list|)
operator|!=
literal|null
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
specifier|final
name|Message
name|createEvent
init|=
name|capturedChangeEvents
operator|.
name|getExchanges
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getIn
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|createEvent
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"CREATE"
argument_list|,
name|createEvent
operator|.
name|getHeader
argument_list|(
literal|"CamelSalesforceChangeType"
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|createEventBody
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|createEvent
operator|.
name|getBody
argument_list|(
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|createEventBody
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ACCOUNT_NAME
argument_list|,
name|createEventBody
operator|.
name|get
argument_list|(
literal|"Name"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|createEventBody
operator|.
name|containsKey
argument_list|(
literal|"Description"
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|Message
name|updateEvent
init|=
name|capturedChangeEvents
operator|.
name|getExchanges
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getIn
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|updateEvent
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"UPDATE"
argument_list|,
name|updateEvent
operator|.
name|getHeader
argument_list|(
literal|"CamelSalesforceChangeType"
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|updateEventBody
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|updateEvent
operator|.
name|getBody
argument_list|(
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|updateEventBody
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|updateEventBody
operator|.
name|containsKey
argument_list|(
literal|"Name"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ACCOUNT_DESCRIPTION
argument_list|,
name|updateEventBody
operator|.
name|get
argument_list|(
literal|"Description"
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|Message
name|deleteEvent
init|=
name|capturedChangeEvents
operator|.
name|getExchanges
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getIn
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|deleteEvent
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"DELETE"
argument_list|,
name|deleteEvent
operator|.
name|getHeader
argument_list|(
literal|"CamelSalesforceChangeType"
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|deleteEventBody
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|deleteEvent
operator|.
name|getBody
argument_list|(
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|deleteEventBody
operator|.
name|containsKey
argument_list|(
literal|"Name"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|deleteEventBody
operator|.
name|containsKey
argument_list|(
literal|"Description"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doCreateRouteBuilder ()
specifier|protected
name|RouteBuilder
name|doCreateRouteBuilder
parameter_list|()
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
literal|"salesforce:data/ChangeEvents?replayId=-1"
argument_list|)
operator|.
name|to
argument_list|(
name|capturedChangeEvents
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
annotation|@
name|Override
DECL|method|salesforceApiVersionToUse ()
specifier|protected
name|String
name|salesforceApiVersionToUse
parameter_list|()
block|{
return|return
literal|"45.0"
return|;
block|}
block|}
end_class

end_unit

