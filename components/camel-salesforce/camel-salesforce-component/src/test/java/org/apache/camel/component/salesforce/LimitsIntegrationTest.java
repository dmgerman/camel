begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|Limits
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|Limits
operator|.
name|Usage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|LimitsIntegrationTest
specifier|public
class|class
name|LimitsIntegrationTest
extends|extends
name|AbstractSalesforceTestBase
block|{
DECL|field|NOT_USED
specifier|private
specifier|static
specifier|final
name|Object
name|NOT_USED
init|=
literal|null
decl_stmt|;
annotation|@
name|Test
DECL|method|shouldFetchLimitsForOrganization ()
specifier|public
name|void
name|shouldFetchLimitsForOrganization
parameter_list|()
block|{
specifier|final
name|Limits
name|limits
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"direct:test-limits"
argument_list|,
name|NOT_USED
argument_list|,
name|Limits
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Should fetch limits from Salesforce REST API"
argument_list|,
name|limits
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"ConcurrentAsyncGetReportInstances"
argument_list|,
name|limits
operator|.
name|getConcurrentAsyncGetReportInstances
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"ConcurrentSyncReportRuns"
argument_list|,
name|limits
operator|.
name|getConcurrentSyncReportRuns
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"DailyApiRequests"
argument_list|,
name|limits
operator|.
name|getDailyApiRequests
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"DailyAsyncApexExecutions"
argument_list|,
name|limits
operator|.
name|getDailyAsyncApexExecutions
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"DailyBulkApiRequests"
argument_list|,
name|limits
operator|.
name|getDailyBulkApiRequests
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"DailyDurableGenericStreamingApiEvents"
argument_list|,
name|limits
operator|.
name|getDailyDurableGenericStreamingApiEvents
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"DailyDurableStreamingApiEvents"
argument_list|,
name|limits
operator|.
name|getDailyDurableStreamingApiEvents
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"DailyGenericStreamingApiEvents"
argument_list|,
name|limits
operator|.
name|getDailyGenericStreamingApiEvents
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"DailyStreamingApiEvents"
argument_list|,
name|limits
operator|.
name|getDailyStreamingApiEvents
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"DailyWorkflowEmails"
argument_list|,
name|limits
operator|.
name|getDailyWorkflowEmails
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"DataStorageMB"
argument_list|,
name|limits
operator|.
name|getDataStorageMB
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"DurableStreamingApiConcurrentClients"
argument_list|,
name|limits
operator|.
name|getDurableStreamingApiConcurrentClients
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"FileStorageMB"
argument_list|,
name|limits
operator|.
name|getFileStorageMB
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"HourlyAsyncReportRuns"
argument_list|,
name|limits
operator|.
name|getHourlyAsyncReportRuns
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"HourlyDashboardRefreshes"
argument_list|,
name|limits
operator|.
name|getHourlyDashboardRefreshes
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"HourlyDashboardResults"
argument_list|,
name|limits
operator|.
name|getHourlyDashboardResults
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"HourlyDashboardStatuses"
argument_list|,
name|limits
operator|.
name|getHourlyDashboardStatuses
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"HourlyODataCallout"
argument_list|,
name|limits
operator|.
name|getHourlyODataCallout
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"HourlySyncReportRuns"
argument_list|,
name|limits
operator|.
name|getHourlySyncReportRuns
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"HourlyTimeBasedWorkflow"
argument_list|,
name|limits
operator|.
name|getHourlyTimeBasedWorkflow
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"MassEmail"
argument_list|,
name|limits
operator|.
name|getMassEmail
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"SingleEmail"
argument_list|,
name|limits
operator|.
name|getSingleEmail
argument_list|()
argument_list|)
expr_stmt|;
name|assertLimitIsFetched
argument_list|(
literal|"StreamingApiConcurrentClients"
argument_list|,
name|limits
operator|.
name|getStreamingApiConcurrentClients
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|assertLimitIsFetched (String property, Usage usage)
specifier|private
specifier|static
name|void
name|assertLimitIsFetched
parameter_list|(
name|String
name|property
parameter_list|,
name|Usage
name|usage
parameter_list|)
block|{
name|assertNotNull
argument_list|(
literal|"Usage for `"
operator|+
name|property
operator|+
literal|"` should be defined"
argument_list|,
name|usage
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
literal|"Max usage for `"
operator|+
name|property
operator|+
literal|"` should be defined"
argument_list|,
literal|0
argument_list|,
name|usage
operator|.
name|getMax
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
literal|"Remaining usage for `"
operator|+
name|property
operator|+
literal|"` should be defined"
argument_list|,
literal|0
argument_list|,
name|usage
operator|.
name|getRemaining
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doCreateRouteBuilder ()
specifier|protected
name|RouteBuilder
name|doCreateRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
literal|"direct:test-limits"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:limits"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

