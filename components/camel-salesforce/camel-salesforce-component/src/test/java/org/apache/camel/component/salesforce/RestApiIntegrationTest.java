begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.salesforce
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|ZoneId
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|ZonedDateTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|com
operator|.
name|thoughtworks
operator|.
name|xstream
operator|.
name|annotations
operator|.
name|XStreamAlias
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelExecutionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|NoSuchSObjectException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|SalesforceException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|SalesforceMultipleChoicesException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|AbstractDTOBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|CreateSObjectResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|GlobalObjects
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|RestResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|SObjectBasicInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|SObjectDescription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|api
operator|.
name|dto
operator|.
name|Versions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|dto
operator|.
name|generated
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|dto
operator|.
name|generated
operator|.
name|Contact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|dto
operator|.
name|generated
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|dto
operator|.
name|generated
operator|.
name|Line_Item__c
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|dto
operator|.
name|generated
operator|.
name|Merchandise__c
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|dto
operator|.
name|generated
operator|.
name|QueryRecordsAccount
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|dto
operator|.
name|generated
operator|.
name|QueryRecordsContact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|dto
operator|.
name|generated
operator|.
name|QueryRecordsLine_Item__c
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|salesforce
operator|.
name|dto
operator|.
name|generated
operator|.
name|Task
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|jsse
operator|.
name|SSLContextParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|client
operator|.
name|HttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|client
operator|.
name|api
operator|.
name|ContentResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|client
operator|.
name|api
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|http
operator|.
name|HttpMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|http
operator|.
name|HttpStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|util
operator|.
name|ssl
operator|.
name|SslContextFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameters
import|;
end_import

begin_class
annotation|@
name|Category
argument_list|(
name|Standalone
operator|.
name|class
argument_list|)
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
DECL|class|RestApiIntegrationTest
specifier|public
class|class
name|RestApiIntegrationTest
extends|extends
name|AbstractSalesforceTestBase
block|{
comment|/**      * Request DTO for Salesforce APEX REST calls. See      * https://www.salesforce.com/us/developer/docs/apexcode/Content/apex_rest_methods.htm.      */
annotation|@
name|XStreamAlias
argument_list|(
literal|"request"
argument_list|)
DECL|class|MerchandiseRequest
specifier|public
specifier|static
class|class
name|MerchandiseRequest
extends|extends
name|AbstractDTOBase
block|{
DECL|field|merchandise
specifier|private
name|Merchandise__c
name|merchandise
decl_stmt|;
DECL|method|MerchandiseRequest (final Merchandise__c merchandise)
specifier|public
name|MerchandiseRequest
parameter_list|(
specifier|final
name|Merchandise__c
name|merchandise
parameter_list|)
block|{
name|this
operator|.
name|merchandise
operator|=
name|merchandise
expr_stmt|;
block|}
DECL|method|getMerchandise ()
specifier|public
name|Merchandise__c
name|getMerchandise
parameter_list|()
block|{
return|return
name|merchandise
return|;
block|}
DECL|method|setMerchandise (final Merchandise__c merchandise)
specifier|public
name|void
name|setMerchandise
parameter_list|(
specifier|final
name|Merchandise__c
name|merchandise
parameter_list|)
block|{
name|this
operator|.
name|merchandise
operator|=
name|merchandise
expr_stmt|;
block|}
block|}
comment|/**      * Response DTO for Salesforce APEX REST calls. See      * https://www.salesforce.com/us/developer/docs/apexcode/Content/apex_rest_methods.htm.      */
annotation|@
name|XStreamAlias
argument_list|(
literal|"response"
argument_list|)
DECL|class|MerchandiseResponse
specifier|public
specifier|static
class|class
name|MerchandiseResponse
extends|extends
name|Merchandise__c
block|{
comment|// XML response contains a type string with the SObject type name
DECL|field|type
specifier|private
name|String
name|type
decl_stmt|;
DECL|method|getType ()
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
DECL|method|setType (final String type)
specifier|public
name|void
name|setType
parameter_list|(
specifier|final
name|String
name|type
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
block|}
block|}
DECL|field|NEW_LINE_ITEM_ID
specifier|private
specifier|static
specifier|final
name|AtomicInteger
name|NEW_LINE_ITEM_ID
init|=
operator|new
name|AtomicInteger
argument_list|(
literal|100
argument_list|)
decl_stmt|;
DECL|field|TEST_DOCUMENT_ID
specifier|private
specifier|static
specifier|final
name|String
name|TEST_DOCUMENT_ID
init|=
literal|"Test Document"
decl_stmt|;
DECL|field|TEST_LINE_ITEM_ID
specifier|private
specifier|static
specifier|final
name|AtomicInteger
name|TEST_LINE_ITEM_ID
init|=
operator|new
name|AtomicInteger
argument_list|(
literal|1
argument_list|)
decl_stmt|;
annotation|@
name|Parameter
DECL|field|format
specifier|public
name|String
name|format
decl_stmt|;
DECL|field|merchandiseId
specifier|private
name|String
name|merchandiseId
decl_stmt|;
DECL|field|accountId
specifier|private
name|String
name|accountId
decl_stmt|;
DECL|field|contactId
specifier|private
name|String
name|contactId
decl_stmt|;
annotation|@
name|After
DECL|method|removeData ()
specifier|public
name|void
name|removeData
parameter_list|()
block|{
name|template
operator|.
name|request
argument_list|(
literal|"salesforce:deleteSObject?sObjectName=Merchandise__c&sObjectId="
operator|+
name|merchandiseId
argument_list|,
call|(
name|Processor
call|)
argument_list|(
name|e
argument_list|)
operator|->
block|{
comment|// NOOP
block|}
argument_list|)
expr_stmt|;
name|template
operator|.
name|request
argument_list|(
literal|"direct:deleteLineItems"
argument_list|,
call|(
name|Processor
call|)
argument_list|(
name|e
argument_list|)
operator|->
block|{
comment|// NOOP
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
DECL|method|setupData ()
specifier|public
name|void
name|setupData
parameter_list|()
block|{
specifier|final
name|Merchandise__c
name|merchandise
init|=
operator|new
name|Merchandise__c
argument_list|()
decl_stmt|;
name|merchandise
operator|.
name|setName
argument_list|(
literal|"Test Merchandise"
argument_list|)
expr_stmt|;
name|merchandise
operator|.
name|setPrice__c
argument_list|(
literal|10.0
argument_list|)
expr_stmt|;
name|merchandise
operator|.
name|setTotal_Inventory__c
argument_list|(
literal|100.0
argument_list|)
expr_stmt|;
name|merchandise
operator|.
name|setDescription__c
argument_list|(
literal|"Test Merchandise!"
argument_list|)
expr_stmt|;
specifier|final
name|CreateSObjectResult
name|merchandiseResult
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"salesforce:createSObject"
argument_list|,
name|merchandise
argument_list|,
name|CreateSObjectResult
operator|.
name|class
argument_list|)
decl_stmt|;
name|merchandiseId
operator|=
name|merchandiseResult
operator|.
name|getId
argument_list|()
expr_stmt|;
block|}
DECL|method|createAccountAndContact ()
specifier|private
name|void
name|createAccountAndContact
parameter_list|()
block|{
specifier|final
name|Account
name|account
init|=
operator|new
name|Account
argument_list|()
decl_stmt|;
name|account
operator|.
name|setName
argument_list|(
literal|"Child Test"
argument_list|)
expr_stmt|;
name|String
name|accountExternalId
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|account
operator|.
name|setExternal_Id__c
argument_list|(
name|accountExternalId
argument_list|)
expr_stmt|;
name|CreateSObjectResult
name|accountResult
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:createSObject"
argument_list|,
name|account
argument_list|,
name|CreateSObjectResult
operator|.
name|class
argument_list|)
decl_stmt|;
name|accountId
operator|=
name|accountResult
operator|.
name|getId
argument_list|()
expr_stmt|;
specifier|final
name|Account
name|accountRef
init|=
operator|new
name|Account
argument_list|()
decl_stmt|;
name|accountRef
operator|.
name|setExternal_Id__c
argument_list|(
name|accountExternalId
argument_list|)
expr_stmt|;
specifier|final
name|Contact
name|contact
init|=
operator|new
name|Contact
argument_list|()
decl_stmt|;
name|contact
operator|.
name|setAccount
argument_list|(
name|accountRef
argument_list|)
expr_stmt|;
name|contact
operator|.
name|setLastName
argument_list|(
literal|"RelationshipTest"
argument_list|)
expr_stmt|;
name|CreateSObjectResult
name|contactResult
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:createSObject"
argument_list|,
name|contact
argument_list|,
name|CreateSObjectResult
operator|.
name|class
argument_list|)
decl_stmt|;
name|contactId
operator|=
name|contactResult
operator|.
name|getId
argument_list|()
expr_stmt|;
block|}
DECL|method|deleteAccountAndContact ()
specifier|private
name|void
name|deleteAccountAndContact
parameter_list|()
block|{
if|if
condition|(
name|accountId
operator|!=
literal|null
condition|)
block|{
name|template
operator|.
name|request
argument_list|(
literal|"salesforce:deleteSObject?sObjectName=Account&sObjectId="
operator|+
name|accountId
argument_list|,
call|(
name|Processor
call|)
argument_list|(
name|e
argument_list|)
operator|->
block|{
comment|// NOOP
block|}
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|contactId
operator|!=
literal|null
condition|)
block|{
name|template
operator|.
name|request
argument_list|(
literal|"salesforce:deleteSObject?sObjectName=Contact&sObjectId="
operator|+
name|contactId
argument_list|,
call|(
name|Processor
call|)
argument_list|(
name|e
argument_list|)
operator|->
block|{
comment|// NOOP
block|}
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testApexCall ()
specifier|public
name|void
name|testApexCall
parameter_list|()
throws|throws
name|Exception
block|{
comment|// request merchandise with id in URI template
name|Merchandise__c
name|merchandise
init|=
name|template
argument_list|()
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"direct:apexCallGet"
argument_list|,
literal|null
argument_list|,
literal|"id"
argument_list|,
name|merchandiseId
argument_list|,
name|Merchandise__c
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|merchandise
argument_list|)
expr_stmt|;
comment|// request merchandise with id as query param
name|merchandise
operator|=
name|template
argument_list|()
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"direct:apexCallGetWithId"
argument_list|,
literal|null
argument_list|,
name|SalesforceEndpointConfig
operator|.
name|APEX_QUERY_PARAM_PREFIX
operator|+
literal|"id"
argument_list|,
name|merchandiseId
argument_list|,
name|Merchandise__c
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|merchandise
argument_list|)
expr_stmt|;
comment|// patch merchandise
comment|// clear fields that won't be modified
name|merchandise
operator|.
name|clearBaseFields
argument_list|()
expr_stmt|;
name|merchandise
operator|.
name|setId
argument_list|(
name|merchandiseId
argument_list|)
expr_stmt|;
name|merchandise
operator|.
name|setPrice__c
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|merchandise
operator|.
name|setTotal_Inventory__c
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|merchandise
operator|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:apexCallPatch"
argument_list|,
operator|new
name|MerchandiseRequest
argument_list|(
name|merchandise
argument_list|)
argument_list|,
name|Merchandise__c
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|merchandise
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCreateUpdateDelete ()
specifier|public
name|void
name|testCreateUpdateDelete
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Merchandise__c
name|merchandise
init|=
operator|new
name|Merchandise__c
argument_list|()
decl_stmt|;
name|merchandise
operator|.
name|setName
argument_list|(
literal|"Wee Wee Wee Plane"
argument_list|)
expr_stmt|;
name|merchandise
operator|.
name|setDescription__c
argument_list|(
literal|"Microlite plane"
argument_list|)
expr_stmt|;
name|merchandise
operator|.
name|setPrice__c
argument_list|(
literal|2000.0
argument_list|)
expr_stmt|;
name|merchandise
operator|.
name|setTotal_Inventory__c
argument_list|(
literal|50.0
argument_list|)
expr_stmt|;
specifier|final
name|CreateSObjectResult
name|result
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:createSObject"
argument_list|,
name|merchandise
argument_list|,
name|CreateSObjectResult
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Create success"
argument_list|,
name|result
operator|.
name|getSuccess
argument_list|()
argument_list|)
expr_stmt|;
comment|// test JSON update
comment|// make the plane cheaper
name|merchandise
operator|.
name|setPrice__c
argument_list|(
literal|1500.0
argument_list|)
expr_stmt|;
comment|// change inventory to half
name|merchandise
operator|.
name|setTotal_Inventory__c
argument_list|(
literal|25.0
argument_list|)
expr_stmt|;
comment|// also need to set the Id
name|merchandise
operator|.
name|setId
argument_list|(
name|result
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|template
argument_list|()
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"direct:updateSObject"
argument_list|,
name|merchandise
argument_list|,
name|SalesforceEndpointConfig
operator|.
name|SOBJECT_ID
argument_list|,
name|result
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// delete the newly created SObject
name|assertNull
argument_list|(
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:deleteSObject"
argument_list|,
name|result
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRelationshipCreateDelete ()
specifier|public
name|void
name|testRelationshipCreateDelete
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Account
name|account
init|=
operator|new
name|Account
argument_list|()
decl_stmt|;
name|account
operator|.
name|setName
argument_list|(
literal|"Account 1"
argument_list|)
expr_stmt|;
name|String
name|accountExternalId
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|account
operator|.
name|setExternal_Id__c
argument_list|(
name|accountExternalId
argument_list|)
expr_stmt|;
specifier|final
name|CreateSObjectResult
name|accountResult
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:createSObject"
argument_list|,
name|account
argument_list|,
name|CreateSObjectResult
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|accountResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Create success"
argument_list|,
name|accountResult
operator|.
name|getSuccess
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Account
name|accountRef
init|=
operator|new
name|Account
argument_list|()
decl_stmt|;
name|accountRef
operator|.
name|setExternal_Id__c
argument_list|(
name|accountExternalId
argument_list|)
expr_stmt|;
specifier|final
name|Contact
name|contact
init|=
operator|new
name|Contact
argument_list|()
decl_stmt|;
name|contact
operator|.
name|setAccount
argument_list|(
name|accountRef
argument_list|)
expr_stmt|;
name|contact
operator|.
name|setLastName
argument_list|(
literal|"RelationshipTest"
argument_list|)
expr_stmt|;
specifier|final
name|CreateSObjectResult
name|contactResult
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:createSObject"
argument_list|,
name|contact
argument_list|,
name|CreateSObjectResult
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|contactResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Create success"
argument_list|,
name|contactResult
operator|.
name|getSuccess
argument_list|()
argument_list|)
expr_stmt|;
comment|// delete the Contact
name|template
argument_list|()
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"direct:deleteSObject"
argument_list|,
name|contactResult
operator|.
name|getId
argument_list|()
argument_list|,
literal|"sObjectName"
argument_list|,
literal|"Contact"
argument_list|)
expr_stmt|;
comment|// delete the Account
name|template
argument_list|()
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"direct:deleteSObject"
argument_list|,
name|accountResult
operator|.
name|getId
argument_list|()
argument_list|,
literal|"sObjectName"
argument_list|,
literal|"Account"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFieldsToNull ()
specifier|public
name|void
name|testFieldsToNull
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Account
name|account
init|=
operator|new
name|Account
argument_list|()
decl_stmt|;
name|account
operator|.
name|setName
argument_list|(
literal|"Account 1"
argument_list|)
expr_stmt|;
name|account
operator|.
name|setSite
argument_list|(
literal|"test site"
argument_list|)
expr_stmt|;
specifier|final
name|CreateSObjectResult
name|accountResult
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:createSObject"
argument_list|,
name|account
argument_list|,
name|CreateSObjectResult
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|accountResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Create success"
argument_list|,
name|accountResult
operator|.
name|getSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|account
operator|.
name|setId
argument_list|(
name|accountResult
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|account
operator|.
name|setSite
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|account
operator|.
name|getFieldsToNull
argument_list|()
operator|.
name|add
argument_list|(
literal|"Site"
argument_list|)
expr_stmt|;
specifier|final
name|Object
name|updateAccountResult
init|=
name|template
argument_list|()
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"salesforce:updateSObject"
argument_list|,
name|account
argument_list|,
name|SalesforceEndpointConfig
operator|.
name|SOBJECT_ID
argument_list|,
name|account
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|updateAccountResult
argument_list|)
expr_stmt|;
name|Account
name|updatedAccount
init|=
operator|(
name|Account
operator|)
name|template
argument_list|()
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"salesforce:getSObject?sObjectFields=Id,Name,Site"
argument_list|,
name|account
operator|.
name|getId
argument_list|()
argument_list|,
literal|"sObjectName"
argument_list|,
literal|"Account"
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|updatedAccount
operator|.
name|getSite
argument_list|()
argument_list|)
expr_stmt|;
comment|// delete the Account
name|template
argument_list|()
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"direct:deleteSObject"
argument_list|,
name|accountResult
operator|.
name|getId
argument_list|()
argument_list|,
literal|"sObjectName"
argument_list|,
literal|"Account"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRelationshipUpdate ()
specifier|public
name|void
name|testRelationshipUpdate
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Contact
name|contact
init|=
operator|new
name|Contact
argument_list|()
decl_stmt|;
name|contact
operator|.
name|setLastName
argument_list|(
literal|"RelationshipTest"
argument_list|)
expr_stmt|;
specifier|final
name|CreateSObjectResult
name|contactResult
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:createSObject"
argument_list|,
name|contact
argument_list|,
name|CreateSObjectResult
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|contactResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Create success"
argument_list|,
name|contactResult
operator|.
name|getSuccess
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Account
name|account
init|=
operator|new
name|Account
argument_list|()
decl_stmt|;
name|account
operator|.
name|setName
argument_list|(
literal|"Account 1"
argument_list|)
expr_stmt|;
name|String
name|accountExternalId
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|account
operator|.
name|setExternal_Id__c
argument_list|(
name|accountExternalId
argument_list|)
expr_stmt|;
specifier|final
name|CreateSObjectResult
name|accountResult
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:createSObject"
argument_list|,
name|account
argument_list|,
name|CreateSObjectResult
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|accountResult
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Create success"
argument_list|,
name|accountResult
operator|.
name|getSuccess
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Account
name|accountRef
init|=
operator|new
name|Account
argument_list|()
decl_stmt|;
name|accountRef
operator|.
name|setExternal_Id__c
argument_list|(
name|accountExternalId
argument_list|)
expr_stmt|;
name|contact
operator|.
name|setAccount
argument_list|(
name|accountRef
argument_list|)
expr_stmt|;
name|contact
operator|.
name|setId
argument_list|(
name|contactResult
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Object
name|updateContactResult
init|=
name|template
argument_list|()
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"salesforce:updateSObject"
argument_list|,
name|contact
argument_list|,
name|SalesforceEndpointConfig
operator|.
name|SOBJECT_ID
argument_list|,
name|contact
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|updateContactResult
argument_list|)
expr_stmt|;
comment|// delete the Contact
name|template
argument_list|()
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"direct:deleteSObject"
argument_list|,
name|contactResult
operator|.
name|getId
argument_list|()
argument_list|,
literal|"sObjectName"
argument_list|,
literal|"Contact"
argument_list|)
expr_stmt|;
comment|// delete the Account
name|template
argument_list|()
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"direct:deleteSObject"
argument_list|,
name|accountResult
operator|.
name|getId
argument_list|()
argument_list|,
literal|"sObjectName"
argument_list|,
literal|"Account"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCreateUpdateDeleteTasks ()
specifier|public
name|void
name|testCreateUpdateDeleteTasks
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Task
name|taken
init|=
operator|new
name|Task
argument_list|()
decl_stmt|;
name|taken
operator|.
name|setDescription
argument_list|(
literal|"Task1"
argument_list|)
expr_stmt|;
name|taken
operator|.
name|setActivityDate
argument_list|(
name|ZonedDateTime
operator|.
name|of
argument_list|(
literal|1700
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
name|ZoneId
operator|.
name|systemDefault
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|CreateSObjectResult
name|result
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:createSObject"
argument_list|,
name|taken
argument_list|,
name|CreateSObjectResult
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Create success"
argument_list|,
name|result
operator|.
name|getSuccess
argument_list|()
argument_list|)
expr_stmt|;
comment|// test JSON update
comment|// make the plane cheaper
name|taken
operator|.
name|setId
argument_list|(
name|result
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|taken
operator|.
name|setActivityDate
argument_list|(
name|ZonedDateTime
operator|.
name|of
argument_list|(
literal|1991
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
name|ZoneId
operator|.
name|systemDefault
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|template
argument_list|()
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"direct:updateSObject"
argument_list|,
name|taken
argument_list|,
name|SalesforceEndpointConfig
operator|.
name|SOBJECT_ID
argument_list|,
name|result
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// delete the newly created SObject
name|assertNull
argument_list|(
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:deleteSObjectTaken"
argument_list|,
name|result
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCreateUpdateDeleteWithId ()
specifier|public
name|void
name|testCreateUpdateDeleteWithId
parameter_list|()
throws|throws
name|Exception
block|{
name|Line_Item__c
name|lineItem
init|=
operator|new
name|Line_Item__c
argument_list|()
decl_stmt|;
specifier|final
name|String
name|lineItemId
init|=
name|String
operator|.
name|valueOf
argument_list|(
name|TEST_LINE_ITEM_ID
operator|.
name|incrementAndGet
argument_list|()
argument_list|)
decl_stmt|;
name|lineItem
operator|.
name|setName
argument_list|(
name|lineItemId
argument_list|)
expr_stmt|;
name|CreateSObjectResult
name|result
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:createLineItem"
argument_list|,
name|lineItem
argument_list|,
name|CreateSObjectResult
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|.
name|getSuccess
argument_list|()
argument_list|)
expr_stmt|;
comment|// get line item with Name 1
name|lineItem
operator|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:getSObjectWithId"
argument_list|,
name|lineItemId
argument_list|,
name|Line_Item__c
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|lineItem
argument_list|)
expr_stmt|;
comment|// test insert with id
comment|// set the unit price and sold
name|lineItem
operator|.
name|setUnit_Price__c
argument_list|(
literal|1000.0
argument_list|)
expr_stmt|;
name|lineItem
operator|.
name|setUnits_Sold__c
argument_list|(
literal|50.0
argument_list|)
expr_stmt|;
comment|// update line item with Name NEW_LINE_ITEM_ID
specifier|final
name|String
name|newLineItemId
init|=
name|String
operator|.
name|valueOf
argument_list|(
name|NEW_LINE_ITEM_ID
operator|.
name|incrementAndGet
argument_list|()
argument_list|)
decl_stmt|;
name|lineItem
operator|.
name|setName
argument_list|(
name|newLineItemId
argument_list|)
expr_stmt|;
name|result
operator|=
name|template
argument_list|()
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"direct:upsertSObject"
argument_list|,
name|lineItem
argument_list|,
name|SalesforceEndpointConfig
operator|.
name|SOBJECT_EXT_ID_VALUE
argument_list|,
name|newLineItemId
argument_list|,
name|CreateSObjectResult
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|.
name|getSuccess
argument_list|()
argument_list|)
expr_stmt|;
comment|// clear read only parent type fields
name|lineItem
operator|.
name|setMerchandise__c
argument_list|(
literal|null
argument_list|)
expr_stmt|;
comment|// change the units sold
name|lineItem
operator|.
name|setUnits_Sold__c
argument_list|(
literal|25.0
argument_list|)
expr_stmt|;
comment|// update line item with Name NEW_LINE_ITEM_ID
name|result
operator|=
name|template
argument_list|()
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"direct:upsertSObject"
argument_list|,
name|lineItem
argument_list|,
name|SalesforceEndpointConfig
operator|.
name|SOBJECT_EXT_ID_VALUE
argument_list|,
name|newLineItemId
argument_list|,
name|CreateSObjectResult
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
comment|// delete the SObject with Name NEW_LINE_ITEM_ID
name|assertNull
argument_list|(
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:deleteSObjectWithId"
argument_list|,
name|newLineItemId
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetBasicInfo ()
specifier|public
name|void
name|testGetBasicInfo
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|SObjectBasicInfo
name|objectBasicInfo
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:getBasicInfo"
argument_list|,
literal|null
argument_list|,
name|SObjectBasicInfo
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|objectBasicInfo
argument_list|)
expr_stmt|;
comment|// set test Id for testGetSObject
name|assertFalse
argument_list|(
literal|"RecentItems is empty"
argument_list|,
name|objectBasicInfo
operator|.
name|getRecentItems
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|merchandiseId
operator|=
name|objectBasicInfo
operator|.
name|getRecentItems
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getId
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetBlobField ()
specifier|public
name|void
name|testGetBlobField
parameter_list|()
throws|throws
name|Exception
block|{
comment|// get document with Name "Test Document"
specifier|final
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
name|SalesforceEndpointConfig
operator|.
name|SOBJECT_NAME
argument_list|,
literal|"Document"
argument_list|)
expr_stmt|;
name|headers
operator|.
name|put
argument_list|(
name|SalesforceEndpointConfig
operator|.
name|SOBJECT_EXT_ID_NAME
argument_list|,
literal|"Name"
argument_list|)
expr_stmt|;
specifier|final
name|Document
name|document
init|=
name|template
argument_list|()
operator|.
name|requestBodyAndHeaders
argument_list|(
literal|"direct:getSObjectWithId"
argument_list|,
name|TEST_DOCUMENT_ID
argument_list|,
name|headers
argument_list|,
name|Document
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|document
argument_list|)
expr_stmt|;
comment|// get Body field for this document
try|try
init|(
specifier|final
name|InputStream
name|body
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:getBlobField"
argument_list|,
name|document
argument_list|,
name|InputStream
operator|.
name|class
argument_list|)
init|)
block|{
name|assertNotNull
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|body
operator|.
name|available
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetDescription ()
specifier|public
name|void
name|testGetDescription
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|SObjectDescription
name|sObjectDescription
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:getDescription"
argument_list|,
literal|null
argument_list|,
name|SObjectDescription
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|sObjectDescription
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetGlobalObjects ()
specifier|public
name|void
name|testGetGlobalObjects
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|GlobalObjects
name|globalObjects
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:getGlobalObjects"
argument_list|,
literal|null
argument_list|,
name|GlobalObjects
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|globalObjects
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetResources ()
specifier|public
name|void
name|testGetResources
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|RestResources
name|resources
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:getResources"
argument_list|,
literal|null
argument_list|,
name|RestResources
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|resources
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetSObject ()
specifier|public
name|void
name|testGetSObject
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Merchandise__c
name|merchandise
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:getSObject"
argument_list|,
name|merchandiseId
argument_list|,
name|Merchandise__c
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|merchandise
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|merchandise
operator|.
name|getTotal_Inventory__c
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|merchandise
operator|.
name|getPrice__c
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetVersions ()
specifier|public
name|void
name|testGetVersions
parameter_list|()
throws|throws
name|Exception
block|{
comment|// test getVersions doesn't need a body
comment|// assert expected result
specifier|final
name|Object
name|o
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:getVersions"
argument_list|,
operator|(
name|Object
operator|)
literal|null
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Version
argument_list|>
name|versions
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|o
operator|instanceof
name|Versions
condition|)
block|{
name|versions
operator|=
operator|(
operator|(
name|Versions
operator|)
name|o
operator|)
operator|.
name|getVersions
argument_list|()
expr_stmt|;
block|}
else|else
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|final
name|List
argument_list|<
name|Version
argument_list|>
name|tmp
init|=
operator|(
name|List
argument_list|<
name|Version
argument_list|>
operator|)
name|o
decl_stmt|;
name|versions
operator|=
name|tmp
expr_stmt|;
block|}
name|assertNotNull
argument_list|(
name|versions
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testQuery ()
specifier|public
name|void
name|testQuery
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|QueryRecordsLine_Item__c
name|queryRecords
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:query"
argument_list|,
literal|null
argument_list|,
name|QueryRecordsLine_Item__c
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|queryRecords
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParentRelationshipQuery ()
specifier|public
name|void
name|testParentRelationshipQuery
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|createAccountAndContact
argument_list|()
expr_stmt|;
specifier|final
name|QueryRecordsContact
name|queryRecords
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:parentRelationshipQuery"
argument_list|,
literal|null
argument_list|,
name|QueryRecordsContact
operator|.
name|class
argument_list|)
decl_stmt|;
name|Account
name|account
init|=
name|queryRecords
operator|.
name|getRecords
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAccount
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Account was null"
argument_list|,
name|account
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|deleteAccountAndContact
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testChildRelationshipQuery ()
specifier|public
name|void
name|testChildRelationshipQuery
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|createAccountAndContact
argument_list|()
expr_stmt|;
specifier|final
name|QueryRecordsAccount
name|queryRecords
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:childRelationshipQuery"
argument_list|,
literal|null
argument_list|,
name|QueryRecordsAccount
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|queryRecords
operator|.
name|getRecords
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|Account
name|account1
init|=
name|queryRecords
operator|.
name|getRecords
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|account1
operator|.
name|getContacts
argument_list|()
operator|.
name|getRecords
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|deleteAccountAndContact
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testQueryAll ()
specifier|public
name|void
name|testQueryAll
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|QueryRecordsLine_Item__c
name|queryRecords
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:queryAll"
argument_list|,
literal|null
argument_list|,
name|QueryRecordsLine_Item__c
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|queryRecords
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRetry ()
specifier|public
name|void
name|testRetry
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|SalesforceComponent
name|sf
init|=
name|context
argument_list|()
operator|.
name|getComponent
argument_list|(
literal|"salesforce"
argument_list|,
name|SalesforceComponent
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|String
name|accessToken
init|=
name|sf
operator|.
name|getSession
argument_list|()
operator|.
name|getAccessToken
argument_list|()
decl_stmt|;
specifier|final
name|SslContextFactory
name|sslContextFactory
init|=
operator|new
name|SslContextFactory
operator|.
name|Client
argument_list|()
decl_stmt|;
name|sslContextFactory
operator|.
name|setSslContext
argument_list|(
operator|new
name|SSLContextParameters
argument_list|()
operator|.
name|createSSLContext
argument_list|(
name|context
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|HttpClient
name|httpClient
init|=
operator|new
name|HttpClient
argument_list|(
name|sslContextFactory
argument_list|)
decl_stmt|;
name|httpClient
operator|.
name|setConnectTimeout
argument_list|(
literal|60000
argument_list|)
expr_stmt|;
name|httpClient
operator|.
name|start
argument_list|()
expr_stmt|;
specifier|final
name|String
name|uri
init|=
name|sf
operator|.
name|getLoginConfig
argument_list|()
operator|.
name|getLoginUrl
argument_list|()
operator|+
literal|"/services/oauth2/revoke?token="
operator|+
name|accessToken
decl_stmt|;
specifier|final
name|Request
name|logoutGet
init|=
name|httpClient
operator|.
name|newRequest
argument_list|(
name|uri
argument_list|)
operator|.
name|method
argument_list|(
name|HttpMethod
operator|.
name|GET
argument_list|)
operator|.
name|timeout
argument_list|(
literal|1
argument_list|,
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
decl_stmt|;
specifier|final
name|ContentResponse
name|response
init|=
name|logoutGet
operator|.
name|send
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|HttpStatus
operator|.
name|OK_200
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|testGetGlobalObjects
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRetryFailure ()
specifier|public
name|void
name|testRetryFailure
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|SalesforceComponent
name|sf
init|=
name|context
argument_list|()
operator|.
name|getComponent
argument_list|(
literal|"salesforce"
argument_list|,
name|SalesforceComponent
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|String
name|accessToken
init|=
name|sf
operator|.
name|getSession
argument_list|()
operator|.
name|getAccessToken
argument_list|()
decl_stmt|;
specifier|final
name|SslContextFactory
name|sslContextFactory
init|=
operator|new
name|SslContextFactory
operator|.
name|Client
argument_list|()
decl_stmt|;
name|sslContextFactory
operator|.
name|setSslContext
argument_list|(
operator|new
name|SSLContextParameters
argument_list|()
operator|.
name|createSSLContext
argument_list|(
name|context
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|HttpClient
name|httpClient
init|=
operator|new
name|HttpClient
argument_list|(
name|sslContextFactory
argument_list|)
decl_stmt|;
name|httpClient
operator|.
name|setConnectTimeout
argument_list|(
literal|60000
argument_list|)
expr_stmt|;
name|httpClient
operator|.
name|start
argument_list|()
expr_stmt|;
specifier|final
name|String
name|uri
init|=
name|sf
operator|.
name|getLoginConfig
argument_list|()
operator|.
name|getLoginUrl
argument_list|()
operator|+
literal|"/services/oauth2/revoke?token="
operator|+
name|accessToken
decl_stmt|;
specifier|final
name|Request
name|logoutGet
init|=
name|httpClient
operator|.
name|newRequest
argument_list|(
name|uri
argument_list|)
operator|.
name|method
argument_list|(
name|HttpMethod
operator|.
name|GET
argument_list|)
operator|.
name|timeout
argument_list|(
literal|1
argument_list|,
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
decl_stmt|;
specifier|final
name|ContentResponse
name|response
init|=
name|logoutGet
operator|.
name|send
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|HttpStatus
operator|.
name|OK_200
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
comment|// set component config to bad password to cause relogin attempts to
comment|// fail
specifier|final
name|String
name|password
init|=
name|sf
operator|.
name|getLoginConfig
argument_list|()
operator|.
name|getPassword
argument_list|()
decl_stmt|;
name|sf
operator|.
name|getLoginConfig
argument_list|()
operator|.
name|setPassword
argument_list|(
literal|"bad_password"
argument_list|)
expr_stmt|;
try|try
block|{
name|testGetGlobalObjects
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Expected CamelExecutionException!"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|CamelExecutionException
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|SalesforceException
condition|)
block|{
specifier|final
name|SalesforceException
name|cause
init|=
operator|(
name|SalesforceException
operator|)
name|e
operator|.
name|getCause
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Expected 400 on authentication retry failure"
argument_list|,
name|HttpStatus
operator|.
name|BAD_REQUEST_400
argument_list|,
name|cause
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|fail
argument_list|(
literal|"Expected SalesforceException!"
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
comment|// reset password and retries to allow other tests to pass
name|sf
operator|.
name|getLoginConfig
argument_list|()
operator|.
name|setPassword
argument_list|(
name|password
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testSearch ()
specifier|public
name|void
name|testSearch
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Object
name|obj
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:search"
argument_list|,
operator|(
name|Object
operator|)
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|obj
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testStatus300 ()
specifier|public
name|void
name|testStatus300
parameter_list|()
throws|throws
name|Exception
block|{
comment|// get test merchandise
comment|// note that the header value overrides sObjectFields in endpoint
specifier|final
name|Merchandise__c
name|merchandise
init|=
name|template
argument_list|()
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"direct:getSObject"
argument_list|,
name|merchandiseId
argument_list|,
literal|"sObjectFields"
argument_list|,
literal|"Name,Description__c,Price__c,Total_Inventory__c"
argument_list|,
name|Merchandise__c
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|merchandise
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|merchandise
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|merchandise
operator|.
name|getPrice__c
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|merchandise
operator|.
name|getTotal_Inventory__c
argument_list|()
argument_list|)
expr_stmt|;
name|CreateSObjectResult
name|result
init|=
literal|null
decl_stmt|;
try|try
block|{
name|merchandise
operator|.
name|clearBaseFields
argument_list|()
expr_stmt|;
name|result
operator|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:createSObject"
argument_list|,
name|merchandise
argument_list|,
name|CreateSObjectResult
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|result
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|// look by external Id to cause 300 error
comment|// note that the request SObject overrides settings on the endpoint
comment|// for LineItem__c
try|try
block|{
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:getSObjectWithId"
argument_list|,
name|merchandise
argument_list|,
name|Merchandise__c
operator|.
name|class
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Expected SalesforceException with statusCode 300"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|CamelExecutionException
name|e
parameter_list|)
block|{
specifier|final
name|Throwable
name|cause
init|=
name|e
operator|.
name|getCause
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|cause
operator|instanceof
name|SalesforceMultipleChoicesException
argument_list|)
expr_stmt|;
specifier|final
name|SalesforceMultipleChoicesException
name|multipleChoices
init|=
operator|(
name|SalesforceMultipleChoicesException
operator|)
name|cause
decl_stmt|;
name|assertEquals
argument_list|(
literal|300
argument_list|,
name|multipleChoices
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|choices
init|=
name|multipleChoices
operator|.
name|getChoices
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|choices
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|choices
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
comment|// delete the test clone
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
block|{
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:deleteSObject"
argument_list|,
name|result
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
DECL|method|testStatus400 ()
specifier|public
name|void
name|testStatus400
parameter_list|()
throws|throws
name|Exception
block|{
comment|// get test merchandise
comment|// note that the header value overrides sObjectFields in endpoint
specifier|final
name|Merchandise__c
name|merchandise
init|=
name|template
argument_list|()
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"direct:getSObject"
argument_list|,
name|merchandiseId
argument_list|,
literal|"sObjectFields"
argument_list|,
literal|"Description__c,Price__c"
argument_list|,
name|Merchandise__c
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|merchandise
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|merchandise
operator|.
name|getPrice__c
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|merchandise
operator|.
name|getTotal_Inventory__c
argument_list|()
argument_list|)
expr_stmt|;
name|merchandise
operator|.
name|clearBaseFields
argument_list|()
expr_stmt|;
comment|// required field Total_Inventory__c is missing
name|CreateSObjectResult
name|result
init|=
literal|null
decl_stmt|;
try|try
block|{
name|result
operator|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:createSObject"
argument_list|,
name|merchandise
argument_list|,
name|CreateSObjectResult
operator|.
name|class
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Expected SalesforceException with statusCode 400"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|CamelExecutionException
name|e
parameter_list|)
block|{
specifier|final
name|Throwable
name|cause
init|=
name|e
operator|.
name|getCause
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|cause
operator|instanceof
name|SalesforceException
argument_list|)
expr_stmt|;
specifier|final
name|SalesforceException
name|badRequest
init|=
operator|(
name|SalesforceException
operator|)
name|cause
decl_stmt|;
name|assertEquals
argument_list|(
literal|400
argument_list|,
name|badRequest
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|badRequest
operator|.
name|getErrors
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"[Total_Inventory__c]"
argument_list|,
name|badRequest
operator|.
name|getErrors
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getFields
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// delete the clone if created
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
block|{
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:deleteSObject"
argument_list|,
name|result
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
DECL|method|testStatus404 ()
specifier|public
name|void
name|testStatus404
parameter_list|()
block|{
comment|// try to get a non existent SObject
try|try
block|{
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"direct:getSObject"
argument_list|,
literal|"ILLEGAL_ID"
argument_list|,
name|Merchandise__c
operator|.
name|class
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Expected SalesforceException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|CamelExecutionException
name|e
parameter_list|)
block|{
specifier|final
name|Throwable
name|cause
init|=
name|e
operator|.
name|getCause
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|cause
operator|instanceof
name|NoSuchSObjectException
argument_list|)
expr_stmt|;
specifier|final
name|NoSuchSObjectException
name|noSuchObject
init|=
operator|(
name|NoSuchSObjectException
operator|)
name|cause
decl_stmt|;
name|assertEquals
argument_list|(
literal|404
argument_list|,
name|noSuchObject
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|noSuchObject
operator|.
name|getErrors
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testFetchingGlobalObjects ()
specifier|public
name|void
name|testFetchingGlobalObjects
parameter_list|()
block|{
specifier|final
name|GlobalObjects
name|globalObjects
init|=
name|template
argument_list|()
operator|.
name|requestBody
argument_list|(
literal|"salesforce:getGlobalObjects"
argument_list|,
literal|null
argument_list|,
name|GlobalObjects
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|globalObjects
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|globalObjects
operator|.
name|getSobjects
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doCreateRouteBuilder ()
specifier|protected
name|RouteBuilder
name|doCreateRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create test route
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
block|{
comment|// testGetVersion
name|from
argument_list|(
literal|"direct:getVersions"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:getVersions?format="
operator|+
name|format
argument_list|)
expr_stmt|;
comment|// testGetResources
name|from
argument_list|(
literal|"direct:getResources"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:getResources?format="
operator|+
name|format
argument_list|)
expr_stmt|;
comment|// testGetGlobalObjects
name|from
argument_list|(
literal|"direct:getGlobalObjects"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:getGlobalObjects?format="
operator|+
name|format
argument_list|)
expr_stmt|;
comment|// testGetBasicInfo
name|from
argument_list|(
literal|"direct:getBasicInfo"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:getBasicInfo?sObjectName=Merchandise__c&format="
operator|+
name|format
argument_list|)
expr_stmt|;
comment|// testGetDescription
name|from
argument_list|(
literal|"direct:getDescription"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:getDescription?sObjectName=Merchandise__c&format="
operator|+
name|format
argument_list|)
expr_stmt|;
comment|// testGetSObject
name|from
argument_list|(
literal|"direct:getSObject"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:getSObject?sObjectName=Merchandise__c&sObjectFields=Description__c,Price__c&format="
operator|+
name|format
argument_list|)
expr_stmt|;
comment|// testCreateSObject
name|from
argument_list|(
literal|"direct:createSObject"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:createSObject?sObjectName=Merchandise__c&format="
operator|+
name|format
argument_list|)
expr_stmt|;
comment|// testUpdateSObject
name|from
argument_list|(
literal|"direct:updateSObject"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:updateSObject?sObjectName=Merchandise__c&format="
operator|+
name|format
argument_list|)
expr_stmt|;
comment|// testDeleteSObject
name|from
argument_list|(
literal|"direct:deleteSObject"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:deleteSObject?sObjectName=Merchandise__c&format="
operator|+
name|format
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:deleteSObjectTaken"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:deleteSObject?sObjectName=Task&format="
operator|+
name|format
argument_list|)
expr_stmt|;
comment|// testGetSObjectWithId
name|from
argument_list|(
literal|"direct:getSObjectWithId"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:getSObjectWithId?sObjectName=Line_Item__c&sObjectIdName=Name&format="
operator|+
name|format
argument_list|)
expr_stmt|;
comment|// testUpsertSObject
name|from
argument_list|(
literal|"direct:deleteLineItems"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:query?sObjectQuery=SELECT Id FROM Line_Item__C&sObjectClass="
operator|+
name|QueryRecordsLine_Item__c
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|transform
argument_list|(
name|simple
argument_list|(
literal|"${body.records}"
argument_list|)
argument_list|)
operator|.
name|split
argument_list|(
name|body
argument_list|()
argument_list|)
operator|.
name|transform
argument_list|(
name|simple
argument_list|(
literal|"${body.id}"
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:deleteSObject?sObjectName=Line_Item__c"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:createLineItem"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:createSObject?sObjectName=Line_Item__c"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:upsertSObject"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:upsertSObject?sObjectName=Line_Item__c&sObjectIdName=Name&format="
operator|+
name|format
argument_list|)
expr_stmt|;
comment|// testDeleteSObjectWithId
name|from
argument_list|(
literal|"direct:deleteSObjectWithId"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:deleteSObjectWithId?sObjectName=Line_Item__c&sObjectIdName=Name&format="
operator|+
name|format
argument_list|)
expr_stmt|;
comment|// testGetBlobField
name|from
argument_list|(
literal|"direct:getBlobField"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:getBlobField?sObjectName=Document&sObjectBlobFieldName=Body&format="
operator|+
name|format
argument_list|)
expr_stmt|;
comment|// testQuery
name|from
argument_list|(
literal|"direct:query"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:query?sObjectQuery=SELECT name from Line_Item__c&sObjectClass="
operator|+
name|QueryRecordsLine_Item__c
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|"&format="
operator|+
name|format
argument_list|)
expr_stmt|;
comment|// testParentRelationshipQuery
name|from
argument_list|(
literal|"direct:parentRelationshipQuery"
argument_list|)
operator|.
name|process
argument_list|(
name|exchange
lambda|->
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"SELECT LastName, Account.Name FROM Contact WHERE Id = '"
operator|+
name|contactId
operator|+
literal|"'"
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:query?sObjectClass="
operator|+
name|QueryRecordsContact
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|"&format="
operator|+
name|format
argument_list|)
expr_stmt|;
comment|// testChildRelationshipQuery
name|from
argument_list|(
literal|"direct:childRelationshipQuery"
argument_list|)
operator|.
name|process
argument_list|(
name|exchange
lambda|->
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"SELECT Id, Name, (SELECT Id, LastName FROM Contacts)"
operator|+
literal|" FROM Account WHERE Id = '"
operator|+
name|accountId
operator|+
literal|"'"
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:query?sObjectClass="
operator|+
name|QueryRecordsAccount
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|"&format="
operator|+
name|format
argument_list|)
expr_stmt|;
comment|// testQueryAll
name|from
argument_list|(
literal|"direct:queryAll"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:queryAll?sObjectQuery=SELECT name from Line_Item__c&sObjectClass="
operator|+
name|QueryRecordsLine_Item__c
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|"&format="
operator|+
name|format
argument_list|)
expr_stmt|;
comment|// testSearch
name|from
argument_list|(
literal|"direct:search"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:search?sObjectSearch=FIND {Wee}&format="
operator|+
name|format
argument_list|)
expr_stmt|;
comment|// testApexCall
name|from
argument_list|(
literal|"direct:apexCallGet"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:apexCall?apexMethod=GET&apexUrl=Merchandise/{id}&sObjectName=Merchandise__c&format="
operator|+
name|format
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:apexCallGetWithId"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:apexCall/Merchandise/?apexMethod=GET&id=dummyId&format="
operator|+
name|format
operator|+
literal|"&sObjectClass="
operator|+
name|Merchandise__c
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:apexCallPatch"
argument_list|)
operator|.
name|to
argument_list|(
literal|"salesforce:apexCall/Merchandise/?format="
operator|+
name|format
operator|+
literal|"&apexMethod=PATCH&sObjectClass="
operator|+
name|MerchandiseResponse
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
annotation|@
name|Parameters
argument_list|(
name|name
operator|=
literal|"format = {0}"
argument_list|)
DECL|method|parameters ()
specifier|public
specifier|static
name|Iterable
argument_list|<
name|String
argument_list|>
name|parameters
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
literal|"XML"
argument_list|,
literal|"JSON"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

