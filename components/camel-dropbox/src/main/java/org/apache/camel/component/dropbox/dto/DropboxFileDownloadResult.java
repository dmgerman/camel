begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.dropbox.dto
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|dropbox
operator|.
name|dto
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|dropbox
operator|.
name|util
operator|.
name|DropboxResultHeader
import|;
end_import

begin_class
DECL|class|DropboxFileDownloadResult
specifier|public
class|class
name|DropboxFileDownloadResult
extends|extends
name|DropboxResult
block|{
comment|/**      * Object payload contained in Exchange      * In case of a single file Exchange Header is populated with the name of the remote path downloaded      * In case of a multiple files Exchange Header is populated with the name of the remote paths downloaded      * In case of a single file Exchange Body is populated with the ByteArrayOutputStream downloaded from dropbox.      * In case of multiple files Exchange Body is populated with a map containing as key the remote path      * and as value the linked ByteArrayOutputStream      * @param exchange      */
annotation|@
name|Override
DECL|method|populateExchange (Exchange exchange)
specifier|public
name|void
name|populateExchange
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
comment|//in case we have only one baos put it directly in body
name|Map
argument_list|<
name|String
argument_list|,
name|ByteArrayOutputStream
argument_list|>
name|map
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|ByteArrayOutputStream
argument_list|>
operator|)
name|resultEntries
decl_stmt|;
if|if
condition|(
name|map
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
block|{
comment|//set info in exchange
name|String
name|pathExtracted
init|=
literal|null
decl_stmt|;
name|ByteArrayOutputStream
name|baosExtracted
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|ByteArrayOutputStream
argument_list|>
name|entry
range|:
name|map
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|pathExtracted
operator|=
name|entry
operator|.
name|getKey
argument_list|()
expr_stmt|;
name|baosExtracted
operator|=
name|entry
operator|.
name|getValue
argument_list|()
expr_stmt|;
block|}
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|DropboxResultHeader
operator|.
name|DOWNLOADED_FILE
operator|.
name|name
argument_list|()
argument_list|,
name|pathExtracted
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|baosExtracted
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|StringBuffer
name|pathsExtracted
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|ByteArrayOutputStream
argument_list|>
name|entry
range|:
name|map
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|pathsExtracted
operator|.
name|append
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
block|}
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
name|DropboxResultHeader
operator|.
name|DOWNLOADED_FILES
operator|.
name|name
argument_list|()
argument_list|,
name|pathsExtracted
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|map
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

