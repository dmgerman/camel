begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.dropbox.util
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|dropbox
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_class
DECL|class|DropboxPropertyManager
specifier|public
specifier|final
class|class
name|DropboxPropertyManager
block|{
DECL|field|properties
specifier|private
specifier|static
name|Properties
name|properties
decl_stmt|;
DECL|field|instance
specifier|private
specifier|static
name|DropboxPropertyManager
name|instance
decl_stmt|;
DECL|method|DropboxPropertyManager ()
specifier|private
name|DropboxPropertyManager
parameter_list|()
block|{ }
DECL|method|getInstance ()
specifier|public
specifier|static
specifier|synchronized
name|DropboxPropertyManager
name|getInstance
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|instance
operator|==
literal|null
condition|)
block|{
name|instance
operator|=
operator|new
name|DropboxPropertyManager
argument_list|()
expr_stmt|;
name|properties
operator|=
name|loadProperties
argument_list|()
expr_stmt|;
block|}
return|return
name|instance
return|;
block|}
DECL|method|getProperty (String key)
specifier|public
name|String
name|getProperty
parameter_list|(
name|String
name|key
parameter_list|)
block|{
return|return
name|properties
operator|.
name|getProperty
argument_list|(
name|key
argument_list|)
return|;
block|}
DECL|method|loadProperties ()
specifier|private
specifier|static
name|Properties
name|loadProperties
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|url
init|=
name|DropboxPropertyManager
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"/dropbox.properties"
argument_list|)
decl_stmt|;
name|InputStream
name|inStream
decl_stmt|;
try|try
block|{
name|inStream
operator|=
name|url
operator|.
name|openStream
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
throw|throw
operator|new
name|DropboxException
argument_list|(
literal|"dropbox.properties could not be found"
argument_list|)
throw|;
block|}
name|properties
operator|=
operator|new
name|Properties
argument_list|()
expr_stmt|;
try|try
block|{
name|properties
operator|.
name|load
argument_list|(
name|inStream
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
throw|throw
operator|new
name|DropboxException
argument_list|(
literal|"dropbox.properties can't be read"
argument_list|)
throw|;
block|}
return|return
name|properties
return|;
block|}
block|}
end_class

end_unit

