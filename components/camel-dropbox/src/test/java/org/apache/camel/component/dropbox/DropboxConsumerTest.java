begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.dropbox
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|dropbox
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Consumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|dropbox
operator|.
name|integration
operator|.
name|DropboxTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|dropbox
operator|.
name|integration
operator|.
name|consumer
operator|.
name|DropboxScheduledPollGetConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|test
operator|.
name|junit4
operator|.
name|CamelTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|DropboxConsumerTest
specifier|public
class|class
name|DropboxConsumerTest
extends|extends
name|CamelTestSupport
block|{
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
literal|"dropbox://get?accessToken=accessToken&remotePath=/path"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:test1"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"dropbox://get?accessToken=accessToken&remotePath=/path with spaces/file"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:test2"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
annotation|@
name|Test
DECL|method|shouldCreateGetConsumer ()
specifier|public
name|void
name|shouldCreateGetConsumer
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Given
name|Endpoint
name|dropboxEndpoint1
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"dropbox://get?accessToken=accessToken&remotePath=/path"
argument_list|)
decl_stmt|;
comment|// When
name|Consumer
name|consumer1
init|=
name|dropboxEndpoint1
operator|.
name|createConsumer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
comment|// Then
name|Assert
operator|.
name|assertTrue
argument_list|(
name|consumer1
operator|instanceof
name|DropboxScheduledPollGetConsumer
argument_list|)
expr_stmt|;
comment|// Given
name|Endpoint
name|dropboxEndpoint2
init|=
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"dropbox://get?accessToken=accessToken&remotePath=/path with spaces/file"
argument_list|)
decl_stmt|;
comment|// When
name|Consumer
name|consumer2
init|=
name|dropboxEndpoint2
operator|.
name|createConsumer
argument_list|(
literal|null
argument_list|)
decl_stmt|;
comment|// Then
name|Assert
operator|.
name|assertTrue
argument_list|(
name|consumer2
operator|instanceof
name|DropboxScheduledPollGetConsumer
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

