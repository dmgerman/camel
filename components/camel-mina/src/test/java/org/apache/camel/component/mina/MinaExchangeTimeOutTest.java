begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.component.mina
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mina
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_comment
comment|/**  * To test timeout.  *  * @version $Revision$  */
end_comment

begin_class
DECL|class|MinaExchangeTimeOutTest
specifier|public
class|class
name|MinaExchangeTimeOutTest
extends|extends
name|ContextTestSupport
block|{
DECL|field|PORT
specifier|private
specifier|static
specifier|final
name|int
name|PORT
init|=
literal|6335
decl_stmt|;
DECL|field|uri
specifier|protected
name|String
name|uri
init|=
literal|"mina:tcp://localhost:"
operator|+
name|PORT
operator|+
literal|"?textline=true&sync=true"
decl_stmt|;
DECL|method|testDefaultTimeOut ()
specifier|public
name|void
name|testDefaultTimeOut
parameter_list|()
block|{
try|try
block|{
name|String
name|result
init|=
operator|(
name|String
operator|)
name|template
operator|.
name|requestBody
argument_list|(
name|uri
argument_list|,
literal|"Hello World"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Okay I will be faster in the future"
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RuntimeCamelException
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"Should not get a RuntimeCamelException"
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testUsingTimeoutParameter ()
specifier|public
name|void
name|testUsingTimeoutParameter
parameter_list|()
throws|throws
name|Exception
block|{
comment|// use a timeout value of 2 seconds (timeout is in millis) so we should actually get a response in this test
name|Endpoint
name|endpoint
init|=
name|this
operator|.
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"mina:tcp://localhost:"
operator|+
name|PORT
operator|+
literal|"?textline=true&sync=true&timeout=2000"
argument_list|)
decl_stmt|;
name|Producer
name|producer
init|=
name|endpoint
operator|.
name|createProducer
argument_list|()
decl_stmt|;
name|producer
operator|.
name|start
argument_list|()
expr_stmt|;
name|Exchange
name|exchange
init|=
name|producer
operator|.
name|createExchange
argument_list|()
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"Hello World"
argument_list|)
expr_stmt|;
try|try
block|{
name|producer
operator|.
name|process
argument_list|(
name|exchange
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown an ExchangeTimedOutException wrapped in a RuntimeCamelException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
literal|"Should have thrown an ExchangeTimedOutException"
argument_list|,
name|e
operator|instanceof
name|ExchangeTimedOutException
argument_list|)
expr_stmt|;
block|}
name|producer
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|method|testTimeoutInvalidParameter ()
specifier|public
name|void
name|testTimeoutInvalidParameter
parameter_list|()
throws|throws
name|Exception
block|{
comment|// invalid timeout parameter that can not be converted to a number
try|try
block|{
name|this
operator|.
name|context
operator|.
name|getEndpoint
argument_list|(
literal|"mina:tcp://localhost:"
operator|+
name|PORT
operator|+
literal|"?textline=true&sync=true&timeout=XXX"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown a ResolveEndpointFailedException due to invalid timeout parameter"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ResolveEndpointFailedException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|IllegalArgumentException
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The timeout parameter is not a number: XXX"
argument_list|,
name|e
operator|.
name|getCause
argument_list|()
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|from
argument_list|(
name|uri
argument_list|)
operator|.
name|process
argument_list|(
operator|new
name|Processor
argument_list|()
block|{
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|e
parameter_list|)
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|"Hello World"
argument_list|,
name|e
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// MinaProducer has a default timeout of 30 seconds so we just wait 5 seconds
comment|// (template.requestBody is a MinaProducer behind the doors)
name|Thread
operator|.
name|sleep
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|e
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"Okay I will be faster in the future"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

