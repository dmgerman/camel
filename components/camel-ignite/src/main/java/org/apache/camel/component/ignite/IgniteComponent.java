begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.ignite
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ignite
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ignite
operator|.
name|cache
operator|.
name|IgniteCacheEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ignite
operator|.
name|compute
operator|.
name|IgniteComputeEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ignite
operator|.
name|events
operator|.
name|IgniteEventsEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ignite
operator|.
name|idgen
operator|.
name|IgniteIdGenEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ignite
operator|.
name|messaging
operator|.
name|IgniteMessagingEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ignite
operator|.
name|queue
operator|.
name|IgniteQueueEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ignite
operator|.
name|set
operator|.
name|IgniteSetEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|URISupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ignite
operator|.
name|Ignite
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ignite
operator|.
name|configuration
operator|.
name|IgniteConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * The Ignite Component integrates Apache Camel with Apache Ignite, providing endpoints for the following functions:  *<ul>  *<li>Cache operations.</li>  *<li>Cluster computation.</li>  *<li>Messaging.</li>  *<li>Eventing.</li>  *<li>Id Generation.</li>  *<li>Set operations.</li>  *<li>Queue operations.</li>  *</ul>  * @deprecated Use   * {@link org.apache.camel.component.ignite.cache.IgniteCacheComponent},  * {@link org.apache.camel.component.ignite.compute.IgniteComputeComponent},  * {@link org.apache.camel.component.ignite.events.IgniteEventsComponent},  * {@link org.apache.camel.component.ignite.idgen.IgniteIdGenComponent},  * {@link org.apache.camel.component.ignite.messaging.IgniteMessagingComponent},  * {@link org.apache.camel.component.ignite.queue.IgniteQueueComponent} and  * {@link org.apache.camel.component.ignite.set.IgniteSetComponent}  */
end_comment

begin_class
annotation|@
name|Deprecated
DECL|class|IgniteComponent
specifier|public
class|class
name|IgniteComponent
extends|extends
name|AbstractIgniteComponent
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|IgniteComponent
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|method|fromIgnite (Ignite ignite)
specifier|public
specifier|static
name|IgniteComponent
name|fromIgnite
parameter_list|(
name|Ignite
name|ignite
parameter_list|)
block|{
name|IgniteComponent
name|answer
init|=
operator|new
name|IgniteComponent
argument_list|()
decl_stmt|;
name|answer
operator|.
name|setIgnite
argument_list|(
name|ignite
argument_list|)
expr_stmt|;
return|return
name|answer
return|;
block|}
DECL|method|fromConfiguration (IgniteConfiguration configuration)
specifier|public
specifier|static
name|IgniteComponent
name|fromConfiguration
parameter_list|(
name|IgniteConfiguration
name|configuration
parameter_list|)
block|{
name|IgniteComponent
name|answer
init|=
operator|new
name|IgniteComponent
argument_list|()
decl_stmt|;
name|answer
operator|.
name|setIgniteConfiguration
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
return|return
name|answer
return|;
block|}
DECL|method|fromInputStream (InputStream inputStream)
specifier|public
specifier|static
name|IgniteComponent
name|fromInputStream
parameter_list|(
name|InputStream
name|inputStream
parameter_list|)
block|{
name|IgniteComponent
name|answer
init|=
operator|new
name|IgniteComponent
argument_list|()
decl_stmt|;
name|answer
operator|.
name|setConfigurationResource
argument_list|(
name|inputStream
argument_list|)
expr_stmt|;
return|return
name|answer
return|;
block|}
DECL|method|fromUrl (URL url)
specifier|public
specifier|static
name|IgniteComponent
name|fromUrl
parameter_list|(
name|URL
name|url
parameter_list|)
block|{
name|IgniteComponent
name|answer
init|=
operator|new
name|IgniteComponent
argument_list|()
decl_stmt|;
name|answer
operator|.
name|setConfigurationResource
argument_list|(
name|url
argument_list|)
expr_stmt|;
return|return
name|answer
return|;
block|}
DECL|method|fromLocation (String location)
specifier|public
specifier|static
name|IgniteComponent
name|fromLocation
parameter_list|(
name|String
name|location
parameter_list|)
block|{
name|IgniteComponent
name|answer
init|=
operator|new
name|IgniteComponent
argument_list|()
decl_stmt|;
name|answer
operator|.
name|setConfigurationResource
argument_list|(
name|location
argument_list|)
expr_stmt|;
return|return
name|answer
return|;
block|}
annotation|@
name|Override
DECL|method|createEndpoint (String uri, String remaining, Map<String, Object> parameters)
specifier|protected
name|Endpoint
name|createEndpoint
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|remaining
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|parameters
parameter_list|)
throws|throws
name|Exception
block|{
name|ObjectHelper
operator|.
name|notNull
argument_list|(
name|getCamelContext
argument_list|()
argument_list|,
literal|"Camel Context"
argument_list|)
expr_stmt|;
name|AbstractIgniteEndpoint
name|answer
init|=
literal|null
decl_stmt|;
name|URI
name|remainingUri
init|=
operator|new
name|URI
argument_list|(
name|URISupport
operator|.
name|normalizeUri
argument_list|(
name|remaining
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|scheme
init|=
name|remainingUri
operator|.
name|getScheme
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|warn
argument_list|(
literal|"The scheme syntax 'ignite:{}' has been deprecated. Use 'ignite-{}' instead."
argument_list|,
name|scheme
argument_list|,
name|scheme
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|scheme
condition|)
block|{
case|case
literal|"cache"
case|:
name|answer
operator|=
operator|new
name|IgniteCacheEndpoint
argument_list|(
name|uri
argument_list|,
name|remainingUri
argument_list|,
name|parameters
argument_list|,
name|this
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"compute"
case|:
name|answer
operator|=
operator|new
name|IgniteComputeEndpoint
argument_list|(
name|uri
argument_list|,
name|remainingUri
argument_list|,
name|parameters
argument_list|,
name|this
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"messaging"
case|:
name|answer
operator|=
operator|new
name|IgniteMessagingEndpoint
argument_list|(
name|uri
argument_list|,
name|remainingUri
argument_list|,
name|parameters
argument_list|,
name|this
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"events"
case|:
name|answer
operator|=
operator|new
name|IgniteEventsEndpoint
argument_list|(
name|uri
argument_list|,
name|remainingUri
argument_list|,
name|parameters
argument_list|,
name|this
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"set"
case|:
name|answer
operator|=
operator|new
name|IgniteSetEndpoint
argument_list|(
name|uri
argument_list|,
name|remainingUri
argument_list|,
name|parameters
argument_list|,
name|this
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"idgen"
case|:
name|answer
operator|=
operator|new
name|IgniteIdGenEndpoint
argument_list|(
name|uri
argument_list|,
name|remainingUri
argument_list|,
name|parameters
argument_list|,
name|this
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"queue"
case|:
name|answer
operator|=
operator|new
name|IgniteQueueEndpoint
argument_list|(
name|uri
argument_list|,
name|remainingUri
argument_list|,
name|parameters
argument_list|,
name|this
argument_list|)
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|MalformedURLException
argument_list|(
literal|"An invalid Ignite endpoint URI was provided. Please check that "
operator|+
literal|"it starts with:"
operator|+
literal|" ignite:[cache/compute/messaging/...]:..."
argument_list|)
throw|;
block|}
name|setProperties
argument_list|(
name|answer
argument_list|,
name|parameters
argument_list|)
expr_stmt|;
return|return
name|answer
return|;
block|}
block|}
end_class

end_unit

