begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.ignite
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ignite
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|cache
operator|.
name|Cache
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ignite
operator|.
name|cache
operator|.
name|IgniteCacheComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|ignite
operator|.
name|cache
operator|.
name|IgniteCacheOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ignite
operator|.
name|IgniteCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ignite
operator|.
name|cache
operator|.
name|CachePeekMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ignite
operator|.
name|cache
operator|.
name|query
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ignite
operator|.
name|cache
operator|.
name|query
operator|.
name|ScanQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ignite
operator|.
name|lang
operator|.
name|IgniteBiPredicate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assert_
import|;
end_import

begin_class
DECL|class|IgniteCacheTest
specifier|public
class|class
name|IgniteCacheTest
extends|extends
name|AbstractIgniteTest
block|{
annotation|@
name|Override
DECL|method|getScheme ()
specifier|protected
name|String
name|getScheme
parameter_list|()
block|{
return|return
literal|"ignite-cache"
return|;
block|}
annotation|@
name|Override
DECL|method|createComponent ()
specifier|protected
name|AbstractIgniteComponent
name|createComponent
parameter_list|()
block|{
return|return
name|IgniteCacheComponent
operator|.
name|fromConfiguration
argument_list|(
name|createConfiguration
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Test
DECL|method|testAddEntry ()
specifier|public
name|void
name|testAddEntry
parameter_list|()
block|{
name|template
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"ignite-cache:"
operator|+
name|resourceUid
operator|+
literal|"?operation=PUT"
argument_list|,
literal|"1234"
argument_list|,
name|IgniteConstants
operator|.
name|IGNITE_CACHE_KEY
argument_list|,
literal|"abcd"
argument_list|)
expr_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|ignite
argument_list|()
operator|.
name|cache
argument_list|(
name|resourceUid
argument_list|)
operator|.
name|size
argument_list|(
name|CachePeekMode
operator|.
name|ALL
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|ignite
argument_list|()
operator|.
name|cache
argument_list|(
name|resourceUid
argument_list|)
operator|.
name|get
argument_list|(
literal|"abcd"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"1234"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddEntrySet ()
specifier|public
name|void
name|testAddEntrySet
parameter_list|()
block|{
name|template
operator|.
name|requestBody
argument_list|(
literal|"ignite-cache:"
operator|+
name|resourceUid
operator|+
literal|"?operation=PUT"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"abcd"
argument_list|,
literal|"1234"
argument_list|,
literal|"efgh"
argument_list|,
literal|"5678"
argument_list|)
argument_list|)
expr_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|ignite
argument_list|()
operator|.
name|cache
argument_list|(
name|resourceUid
argument_list|)
operator|.
name|size
argument_list|(
name|CachePeekMode
operator|.
name|ALL
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|ignite
argument_list|()
operator|.
name|cache
argument_list|(
name|resourceUid
argument_list|)
operator|.
name|get
argument_list|(
literal|"abcd"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"1234"
argument_list|)
expr_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|ignite
argument_list|()
operator|.
name|cache
argument_list|(
name|resourceUid
argument_list|)
operator|.
name|get
argument_list|(
literal|"efgh"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"5678"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetOne ()
specifier|public
name|void
name|testGetOne
parameter_list|()
block|{
name|testAddEntry
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"ignite-cache:"
operator|+
name|resourceUid
operator|+
literal|"?operation=GET"
argument_list|,
literal|"abcd"
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|result
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"1234"
argument_list|)
expr_stmt|;
name|result
operator|=
name|template
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"ignite-cache:"
operator|+
name|resourceUid
operator|+
literal|"?operation=GET"
argument_list|,
literal|"this value won't be used"
argument_list|,
name|IgniteConstants
operator|.
name|IGNITE_CACHE_KEY
argument_list|,
literal|"abcd"
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|result
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"1234"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|testGetMany ()
specifier|public
name|void
name|testGetMany
parameter_list|()
block|{
name|IgniteCache
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|cache
init|=
name|ignite
argument_list|()
operator|.
name|getOrCreateCache
argument_list|(
name|resourceUid
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|keys
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|cache
operator|.
name|put
argument_list|(
literal|"k"
operator|+
name|i
argument_list|,
literal|"v"
operator|+
name|i
argument_list|)
expr_stmt|;
name|keys
operator|.
name|add
argument_list|(
literal|"k"
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|result
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"ignite-cache:"
operator|+
name|resourceUid
operator|+
literal|"?operation=GET"
argument_list|,
name|keys
argument_list|,
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|k
range|:
name|keys
control|)
block|{
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|result
operator|.
name|get
argument_list|(
name|k
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|k
operator|.
name|replace
argument_list|(
literal|"k"
argument_list|,
literal|"v"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetSize ()
specifier|public
name|void
name|testGetSize
parameter_list|()
block|{
name|IgniteCache
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|cache
init|=
name|ignite
argument_list|()
operator|.
name|getOrCreateCache
argument_list|(
name|resourceUid
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|keys
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|cache
operator|.
name|put
argument_list|(
literal|"k"
operator|+
name|i
argument_list|,
literal|"v"
operator|+
name|i
argument_list|)
expr_stmt|;
name|keys
operator|.
name|add
argument_list|(
literal|"k"
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|Integer
name|result
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"ignite-cache:"
operator|+
name|resourceUid
operator|+
literal|"?operation=SIZE"
argument_list|,
name|keys
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
decl_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|result
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|100
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testQuery ()
specifier|public
name|void
name|testQuery
parameter_list|()
block|{
name|IgniteCache
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|cache
init|=
name|ignite
argument_list|()
operator|.
name|getOrCreateCache
argument_list|(
name|resourceUid
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|keys
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|cache
operator|.
name|put
argument_list|(
literal|"k"
operator|+
name|i
argument_list|,
literal|"v"
operator|+
name|i
argument_list|)
expr_stmt|;
name|keys
operator|.
name|add
argument_list|(
literal|"k"
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|Query
argument_list|<
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|query
init|=
operator|new
name|ScanQuery
argument_list|<>
argument_list|(
operator|new
name|IgniteBiPredicate
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|apply
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
name|Integer
operator|.
name|parseInt
argument_list|(
name|key
operator|.
name|replace
argument_list|(
literal|"k"
argument_list|,
literal|""
argument_list|)
argument_list|)
operator|>=
literal|50
return|;
block|}
block|}
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|results
init|=
name|template
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"ignite-cache:"
operator|+
name|resourceUid
operator|+
literal|"?operation=QUERY"
argument_list|,
name|keys
argument_list|,
name|IgniteConstants
operator|.
name|IGNITE_CACHE_QUERY
argument_list|,
name|query
argument_list|,
name|List
operator|.
name|class
argument_list|)
decl_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|results
operator|.
name|size
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|50
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetManyTreatCollectionsAsCacheObjects ()
specifier|public
name|void
name|testGetManyTreatCollectionsAsCacheObjects
parameter_list|()
block|{
name|IgniteCache
argument_list|<
name|Object
argument_list|,
name|String
argument_list|>
name|cache
init|=
name|ignite
argument_list|()
operator|.
name|getOrCreateCache
argument_list|(
name|resourceUid
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|keys
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|cache
operator|.
name|put
argument_list|(
literal|"k"
operator|+
name|i
argument_list|,
literal|"v"
operator|+
name|i
argument_list|)
expr_stmt|;
name|keys
operator|.
name|add
argument_list|(
literal|"k"
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
comment|// Also add a cache entry with the entire Set as a key.
name|cache
operator|.
name|put
argument_list|(
name|keys
argument_list|,
literal|"---"
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"ignite-cache:"
operator|+
name|resourceUid
operator|+
literal|"?operation=GET&treatCollectionsAsCacheObjects=true"
argument_list|,
name|keys
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|result
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"---"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveEntry ()
specifier|public
name|void
name|testRemoveEntry
parameter_list|()
block|{
name|IgniteCache
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|cache
init|=
name|ignite
argument_list|()
operator|.
name|getOrCreateCache
argument_list|(
name|resourceUid
argument_list|)
decl_stmt|;
name|cache
operator|.
name|put
argument_list|(
literal|"abcd"
argument_list|,
literal|"1234"
argument_list|)
expr_stmt|;
name|cache
operator|.
name|put
argument_list|(
literal|"efgh"
argument_list|,
literal|"5678"
argument_list|)
expr_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|cache
operator|.
name|size
argument_list|(
name|CachePeekMode
operator|.
name|ALL
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|template
operator|.
name|requestBody
argument_list|(
literal|"ignite-cache:"
operator|+
name|resourceUid
operator|+
literal|"?operation=REMOVE"
argument_list|,
literal|"abcd"
argument_list|)
expr_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|cache
operator|.
name|size
argument_list|(
name|CachePeekMode
operator|.
name|ALL
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|cache
operator|.
name|get
argument_list|(
literal|"abcd"
argument_list|)
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
name|template
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"ignite-cache:"
operator|+
name|resourceUid
operator|+
literal|"?operation=REMOVE"
argument_list|,
literal|"this value won't be used"
argument_list|,
name|IgniteConstants
operator|.
name|IGNITE_CACHE_KEY
argument_list|,
literal|"efgh"
argument_list|)
expr_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|cache
operator|.
name|size
argument_list|(
name|CachePeekMode
operator|.
name|ALL
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|cache
operator|.
name|get
argument_list|(
literal|"efgh"
argument_list|)
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testClearCache ()
specifier|public
name|void
name|testClearCache
parameter_list|()
block|{
name|IgniteCache
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|cache
init|=
name|ignite
argument_list|()
operator|.
name|getOrCreateCache
argument_list|(
name|resourceUid
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|cache
operator|.
name|put
argument_list|(
literal|"k"
operator|+
name|i
argument_list|,
literal|"v"
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|cache
operator|.
name|size
argument_list|(
name|CachePeekMode
operator|.
name|ALL
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|template
operator|.
name|requestBody
argument_list|(
literal|"ignite-cache:"
operator|+
name|resourceUid
operator|+
literal|"?operation=CLEAR"
argument_list|,
literal|"this value won't be used"
argument_list|)
expr_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|cache
operator|.
name|size
argument_list|(
name|CachePeekMode
operator|.
name|ALL
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testHeaderSetRemoveEntry ()
specifier|public
name|void
name|testHeaderSetRemoveEntry
parameter_list|()
block|{
name|testAddEntry
argument_list|()
expr_stmt|;
name|String
name|result
init|=
name|template
operator|.
name|requestBody
argument_list|(
literal|"ignite-cache:"
operator|+
name|resourceUid
operator|+
literal|"?operation=GET"
argument_list|,
literal|"abcd"
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|result
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"1234"
argument_list|)
expr_stmt|;
name|result
operator|=
name|template
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"ignite-cache:"
operator|+
name|resourceUid
operator|+
literal|"?operation=GET"
argument_list|,
literal|"abcd"
argument_list|,
name|IgniteConstants
operator|.
name|IGNITE_CACHE_OPERATION
argument_list|,
name|IgniteCacheOperation
operator|.
name|REMOVE
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// The body has not changed, but the cache entry is gone.
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|result
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"abcd"
argument_list|)
expr_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|ignite
argument_list|()
operator|.
name|cache
argument_list|(
name|resourceUid
argument_list|)
operator|.
name|size
argument_list|(
name|CachePeekMode
operator|.
name|ALL
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddEntryNoCacheCreation ()
specifier|public
name|void
name|testAddEntryNoCacheCreation
parameter_list|()
block|{
try|try
block|{
name|template
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"ignite-cache:testcache2?operation=PUT&failIfInexistentCache=true"
argument_list|,
literal|"1234"
argument_list|,
name|IgniteConstants
operator|.
name|IGNITE_CACHE_KEY
argument_list|,
literal|"abcd"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|ObjectHelper
operator|.
name|getException
argument_list|(
name|CamelException
operator|.
name|class
argument_list|,
name|e
argument_list|)
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|startsWith
argument_list|(
literal|"Ignite cache testcache2 doesn't exist"
argument_list|)
expr_stmt|;
return|return;
block|}
name|fail
argument_list|(
literal|"Should have thrown an exception"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddEntryDoNotPropagateIncomingBody ()
specifier|public
name|void
name|testAddEntryDoNotPropagateIncomingBody
parameter_list|()
block|{
name|Object
name|result
init|=
name|template
operator|.
name|requestBodyAndHeader
argument_list|(
literal|"ignite-cache:"
operator|+
name|resourceUid
operator|+
literal|"?operation=PUT&propagateIncomingBodyIfNoReturnValue=false"
argument_list|,
literal|"1234"
argument_list|,
name|IgniteConstants
operator|.
name|IGNITE_CACHE_KEY
argument_list|,
literal|"abcd"
argument_list|,
name|Object
operator|.
name|class
argument_list|)
decl_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|ignite
argument_list|()
operator|.
name|cache
argument_list|(
name|resourceUid
argument_list|)
operator|.
name|size
argument_list|(
name|CachePeekMode
operator|.
name|ALL
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|ignite
argument_list|()
operator|.
name|cache
argument_list|(
name|resourceUid
argument_list|)
operator|.
name|get
argument_list|(
literal|"abcd"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"1234"
argument_list|)
expr_stmt|;
name|assert_
argument_list|()
operator|.
name|that
argument_list|(
name|result
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|isCreateCamelContextPerClass ()
specifier|public
name|boolean
name|isCreateCamelContextPerClass
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|After
DECL|method|deleteCaches ()
specifier|public
name|void
name|deleteCaches
parameter_list|()
block|{
name|IgniteCache
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|cache
init|=
name|ignite
argument_list|()
operator|.
name|cache
argument_list|(
name|resourceUid
argument_list|)
decl_stmt|;
if|if
condition|(
name|cache
operator|!=
literal|null
condition|)
block|{
name|cache
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

