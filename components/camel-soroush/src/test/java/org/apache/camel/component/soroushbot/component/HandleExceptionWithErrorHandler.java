begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.soroushbot.component
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|soroushbot
operator|.
name|component
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RoutesBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|soroushbot
operator|.
name|models
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|soroushbot
operator|.
name|models
operator|.
name|SoroushMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|soroushbot
operator|.
name|support
operator|.
name|SoroushBotTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|HandleExceptionWithErrorHandler
specifier|public
class|class
name|HandleExceptionWithErrorHandler
extends|extends
name|SoroushBotTestSupport
block|{
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RoutesBuilder
name|createRouteBuilder
parameter_list|()
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|onException
argument_list|(
name|FileNotFoundException
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:exceptionRoute"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"soroush://"
operator|+
name|Endpoint
operator|.
name|getMessage
operator|+
literal|"/5?concurrentConsumers=2"
argument_list|)
operator|.
name|process
argument_list|(
name|exchange
lambda|->
block|{
name|SoroushMessage
name|body
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|SoroushMessage
operator|.
name|class
argument_list|)
decl_stmt|;
name|File
name|file
init|=
operator|new
name|File
argument_list|(
literal|"badFile-ShouldNotExits"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"file should not exists for this test"
argument_list|,
name|file
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|body
operator|.
name|setFile
argument_list|(
name|file
argument_list|)
expr_stmt|;
name|body
operator|.
name|setTo
argument_list|(
name|body
operator|.
name|getFrom
argument_list|()
argument_list|)
expr_stmt|;
block|}
argument_list|)
operator|.
name|to
argument_list|(
literal|"soroush://"
operator|+
name|Endpoint
operator|.
name|sendMessage
operator|+
literal|"/token"
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:mainRoute"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
annotation|@
name|Test
DECL|method|checkIfMessageGoesToExceptionRoute ()
specifier|public
name|void
name|checkIfMessageGoesToExceptionRoute
parameter_list|()
throws|throws
name|InterruptedException
block|{
name|MockEndpoint
name|exceptionEndpoint
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:exceptionRoute"
argument_list|)
decl_stmt|;
name|MockEndpoint
name|mainEndPoint
init|=
name|getMockEndpoint
argument_list|(
literal|"mock:mainRoute"
argument_list|)
decl_stmt|;
name|exceptionEndpoint
operator|.
name|setExpectedCount
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|mainEndPoint
operator|.
name|setExpectedCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|exceptionEndpoint
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
name|mainEndPoint
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

