begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.fhir.api
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|fhir
operator|.
name|api
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|fhir
operator|.
name|rest
operator|.
name|api
operator|.
name|MethodOutcome
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|fhir
operator|.
name|rest
operator|.
name|api
operator|.
name|PreferReturnEnum
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|fhir
operator|.
name|rest
operator|.
name|client
operator|.
name|api
operator|.
name|IGenericClient
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|fhir
operator|.
name|rest
operator|.
name|gclient
operator|.
name|ICreateTyped
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hl7
operator|.
name|fhir
operator|.
name|instance
operator|.
name|model
operator|.
name|api
operator|.
name|IBaseResource
import|;
end_import

begin_comment
comment|/**  * API for the "create" operation, which creates a new resource instance on the server  */
end_comment

begin_class
DECL|class|FhirCreate
specifier|public
class|class
name|FhirCreate
block|{
DECL|field|client
specifier|private
specifier|final
name|IGenericClient
name|client
decl_stmt|;
DECL|method|FhirCreate (IGenericClient client)
specifier|public
name|FhirCreate
parameter_list|(
name|IGenericClient
name|client
parameter_list|)
block|{
name|this
operator|.
name|client
operator|=
name|client
expr_stmt|;
block|}
comment|/**      * Creates a {@link IBaseResource} on the server      *      * @param resource The resource to create      * @param url The search URL to use. The format of this URL should be of the form<code>[ResourceType]?[Parameters]</code>,      *                     for example:<code>Patient?name=Smith&amp;identifier=13.2.4.11.4%7C847366</code>, may be null      * @param preferReturn Add a<code>Prefer</code> header to the request, which requests that the server include      *                  or suppress the resource body as a part of the result. If a resource is returned by the server      *                  it will be parsed an accessible to the client via {@link MethodOutcome#getResource()}, may be null      * @param extraParameters see {@link ExtraParameters} for a full list of parameters that can be passed, may be NULL      * @return The {@link MethodOutcome}      */
DECL|method|resource (IBaseResource resource, String url, PreferReturnEnum preferReturn, Map<ExtraParameters, Object> extraParameters)
specifier|public
name|MethodOutcome
name|resource
parameter_list|(
name|IBaseResource
name|resource
parameter_list|,
name|String
name|url
parameter_list|,
name|PreferReturnEnum
name|preferReturn
parameter_list|,
name|Map
argument_list|<
name|ExtraParameters
argument_list|,
name|Object
argument_list|>
name|extraParameters
parameter_list|)
block|{
name|ICreateTyped
name|createTyped
init|=
name|client
operator|.
name|create
argument_list|()
operator|.
name|resource
argument_list|(
name|resource
argument_list|)
decl_stmt|;
name|processOptionalParams
argument_list|(
name|url
argument_list|,
name|preferReturn
argument_list|,
name|createTyped
argument_list|)
expr_stmt|;
name|ExtraParameters
operator|.
name|process
argument_list|(
name|extraParameters
argument_list|,
name|createTyped
argument_list|)
expr_stmt|;
return|return
name|createTyped
operator|.
name|execute
argument_list|()
return|;
block|}
comment|/**      * Creates a {@link IBaseResource} on the server      *      * @param resourceAsString The resource to create      * @param url The search URL to use. The format of this URL should be of the form<code>[ResourceType]?[Parameters]</code>,      *                     for example:<code>Patient?name=Smith&amp;identifier=13.2.4.11.4%7C847366</code>, may be null      * @param preferReturn Add a<code>Prefer</code> header to the request, which requests that the server include      *                  or suppress the resource body as a part of the result. If a resource is returned by the server      *                  it will be parsed an accessible to the client via {@link MethodOutcome#getResource()}, may be null      * @param extraParameters see {@link ExtraParameters} for a full list of parameters that can be passed, may be NULL      * @return The {@link MethodOutcome}      */
DECL|method|resource (String resourceAsString, String url, PreferReturnEnum preferReturn, Map<ExtraParameters, Object> extraParameters)
specifier|public
name|MethodOutcome
name|resource
parameter_list|(
name|String
name|resourceAsString
parameter_list|,
name|String
name|url
parameter_list|,
name|PreferReturnEnum
name|preferReturn
parameter_list|,
name|Map
argument_list|<
name|ExtraParameters
argument_list|,
name|Object
argument_list|>
name|extraParameters
parameter_list|)
block|{
name|ICreateTyped
name|createTyped
init|=
name|client
operator|.
name|create
argument_list|()
operator|.
name|resource
argument_list|(
name|resourceAsString
argument_list|)
decl_stmt|;
name|processOptionalParams
argument_list|(
name|url
argument_list|,
name|preferReturn
argument_list|,
name|createTyped
argument_list|)
expr_stmt|;
name|ExtraParameters
operator|.
name|process
argument_list|(
name|extraParameters
argument_list|,
name|createTyped
argument_list|)
expr_stmt|;
return|return
name|createTyped
operator|.
name|execute
argument_list|()
return|;
block|}
DECL|method|processOptionalParams (String theSearchUrl, PreferReturnEnum theReturn, ICreateTyped createTyped)
specifier|private
name|void
name|processOptionalParams
parameter_list|(
name|String
name|theSearchUrl
parameter_list|,
name|PreferReturnEnum
name|theReturn
parameter_list|,
name|ICreateTyped
name|createTyped
parameter_list|)
block|{
if|if
condition|(
name|theSearchUrl
operator|!=
literal|null
condition|)
block|{
name|createTyped
operator|.
name|conditionalByUrl
argument_list|(
name|theSearchUrl
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|theReturn
operator|!=
literal|null
condition|)
block|{
name|createTyped
operator|.
name|prefer
argument_list|(
name|theReturn
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

