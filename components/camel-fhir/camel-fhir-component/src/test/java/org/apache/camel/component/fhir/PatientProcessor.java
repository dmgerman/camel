begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.fhir
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|fhir
package|;
end_package

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|hl7v2
operator|.
name|model
operator|.
name|v24
operator|.
name|message
operator|.
name|ORU_R01
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|hl7v2
operator|.
name|model
operator|.
name|v24
operator|.
name|segment
operator|.
name|PID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hl7
operator|.
name|fhir
operator|.
name|dstu3
operator|.
name|model
operator|.
name|Patient
import|;
end_import

begin_comment
comment|/**  * Simple Patient processor that converts the Patient segment of a {@link ORU_R01} message into a FHIR dtsu3 {@link Patient}.  */
end_comment

begin_class
DECL|class|PatientProcessor
specifier|public
class|class
name|PatientProcessor
implements|implements
name|Processor
block|{
annotation|@
name|Override
DECL|method|process (Exchange exchange)
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|Exception
block|{
name|ORU_R01
name|msg
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|ORU_R01
operator|.
name|class
argument_list|)
decl_stmt|;
comment|//map to Patient
name|Patient
name|patient
init|=
name|getPatient
argument_list|(
name|msg
argument_list|)
decl_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
name|patient
argument_list|)
expr_stmt|;
block|}
comment|/**      * Converts {@link ORU_R01} to {@link Patient}      */
DECL|method|getPatient (ORU_R01 msg)
specifier|private
name|Patient
name|getPatient
parameter_list|(
name|ORU_R01
name|msg
parameter_list|)
block|{
name|Patient
name|patient
init|=
operator|new
name|Patient
argument_list|()
decl_stmt|;
specifier|final
name|PID
name|pid
init|=
name|msg
operator|.
name|getPATIENT_RESULT
argument_list|()
operator|.
name|getPATIENT
argument_list|()
operator|.
name|getPID
argument_list|()
decl_stmt|;
name|String
name|surname
init|=
name|pid
operator|.
name|getPatientName
argument_list|()
index|[
literal|0
index|]
operator|.
name|getFamilyName
argument_list|()
operator|.
name|getFn1_Surname
argument_list|()
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|String
name|name
init|=
name|pid
operator|.
name|getPatientName
argument_list|()
index|[
literal|0
index|]
operator|.
name|getGivenName
argument_list|()
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|String
name|patientId
init|=
name|msg
operator|.
name|getPATIENT_RESULT
argument_list|()
operator|.
name|getPATIENT
argument_list|()
operator|.
name|getPID
argument_list|()
operator|.
name|getPatientID
argument_list|()
operator|.
name|getCx1_ID
argument_list|()
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|patient
operator|.
name|addName
argument_list|()
operator|.
name|addGiven
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|patient
operator|.
name|getNameFirstRep
argument_list|()
operator|.
name|setFamily
argument_list|(
name|surname
argument_list|)
expr_stmt|;
name|patient
operator|.
name|setId
argument_list|(
name|patientId
argument_list|)
expr_stmt|;
return|return
name|patient
return|;
block|}
block|}
end_class

end_unit

