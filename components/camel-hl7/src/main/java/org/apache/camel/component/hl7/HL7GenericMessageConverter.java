begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.hl7
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hl7
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|hl7v2
operator|.
name|DefaultHapiContext
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|hl7v2
operator|.
name|HL7Exception
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|hl7v2
operator|.
name|HapiContext
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|hl7v2
operator|.
name|model
operator|.
name|GenericMessage
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|hl7v2
operator|.
name|model
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|hl7v2
operator|.
name|parser
operator|.
name|GenericModelClassFactory
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|hl7v2
operator|.
name|parser
operator|.
name|Parser
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|hl7v2
operator|.
name|parser
operator|.
name|ParserConfiguration
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|hl7v2
operator|.
name|parser
operator|.
name|UnexpectedSegmentBehaviourEnum
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|hl7v2
operator|.
name|validation
operator|.
name|impl
operator|.
name|ValidationContextFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Converter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|TypeConversionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|converter
operator|.
name|IOConverter
import|;
end_import

begin_comment
comment|/**  * HL7 converters.  */
end_comment

begin_class
annotation|@
name|Converter
argument_list|(
name|loader
operator|=
literal|true
argument_list|)
DECL|class|HL7GenericMessageConverter
specifier|public
specifier|final
class|class
name|HL7GenericMessageConverter
block|{
DECL|field|GENERIC_MESSAGE_CONTEXT
specifier|private
specifier|static
specifier|final
name|HapiContext
name|GENERIC_MESSAGE_CONTEXT
decl_stmt|;
static|static
block|{
name|ParserConfiguration
name|parserConfiguration
init|=
operator|new
name|ParserConfiguration
argument_list|()
decl_stmt|;
name|parserConfiguration
operator|.
name|setDefaultObx2Type
argument_list|(
literal|"ST"
argument_list|)
expr_stmt|;
name|parserConfiguration
operator|.
name|setInvalidObx2Type
argument_list|(
literal|"ST"
argument_list|)
expr_stmt|;
name|parserConfiguration
operator|.
name|setUnexpectedSegmentBehaviour
argument_list|(
name|UnexpectedSegmentBehaviourEnum
operator|.
name|ADD_INLINE
argument_list|)
expr_stmt|;
name|GENERIC_MESSAGE_CONTEXT
operator|=
operator|new
name|DefaultHapiContext
argument_list|(
name|parserConfiguration
argument_list|,
name|ValidationContextFactory
operator|.
name|noValidation
argument_list|()
argument_list|,
operator|new
name|GenericModelClassFactory
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|HL7GenericMessageConverter ()
specifier|private
name|HL7GenericMessageConverter
parameter_list|()
block|{
comment|// Helper class
block|}
annotation|@
name|Converter
DECL|method|toGenericMessage (String body)
specifier|public
specifier|static
name|GenericMessage
name|toGenericMessage
parameter_list|(
name|String
name|body
parameter_list|)
throws|throws
name|HL7Exception
block|{
return|return
operator|(
name|GenericMessage
operator|)
name|GENERIC_MESSAGE_CONTEXT
operator|.
name|getGenericParser
argument_list|()
operator|.
name|parse
argument_list|(
name|body
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toGenericMessage (byte[] body, Exchange exchange)
specifier|public
specifier|static
name|GenericMessage
name|toGenericMessage
parameter_list|(
name|byte
index|[]
name|body
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
throws|throws
name|HL7Exception
throws|,
name|IOException
block|{
return|return
operator|(
name|GenericMessage
operator|)
name|GENERIC_MESSAGE_CONTEXT
operator|.
name|getGenericParser
argument_list|()
operator|.
name|parse
argument_list|(
name|IOConverter
operator|.
name|toString
argument_list|(
name|body
argument_list|,
name|exchange
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toV21GenericMessage (String hl7String)
specifier|public
specifier|static
name|GenericMessage
operator|.
name|V21
name|toV21GenericMessage
parameter_list|(
name|String
name|hl7String
parameter_list|)
throws|throws
name|HL7Exception
block|{
return|return
name|toGenericMessage
argument_list|(
name|GenericMessage
operator|.
name|V21
operator|.
name|class
argument_list|,
name|hl7String
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toV21GenericMessage (byte[] hl7Bytes, Exchange exchange)
specifier|public
specifier|static
name|GenericMessage
operator|.
name|V21
name|toV21GenericMessage
parameter_list|(
name|byte
index|[]
name|hl7Bytes
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
block|{
return|return
name|toGenericMessage
argument_list|(
name|GenericMessage
operator|.
name|V21
operator|.
name|class
argument_list|,
name|hl7Bytes
argument_list|,
name|exchange
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toV22GenericMessage (String hl7String)
specifier|public
specifier|static
name|GenericMessage
operator|.
name|V22
name|toV22GenericMessage
parameter_list|(
name|String
name|hl7String
parameter_list|)
throws|throws
name|HL7Exception
block|{
return|return
name|toGenericMessage
argument_list|(
name|GenericMessage
operator|.
name|V22
operator|.
name|class
argument_list|,
name|hl7String
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toV22GenericMessage (byte[] hl7Bytes, Exchange exchange)
specifier|public
specifier|static
name|GenericMessage
operator|.
name|V22
name|toV22GenericMessage
parameter_list|(
name|byte
index|[]
name|hl7Bytes
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
block|{
return|return
name|toGenericMessage
argument_list|(
name|GenericMessage
operator|.
name|V22
operator|.
name|class
argument_list|,
name|hl7Bytes
argument_list|,
name|exchange
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toV23GenericMessage (String hl7String)
specifier|public
specifier|static
name|GenericMessage
operator|.
name|V23
name|toV23GenericMessage
parameter_list|(
name|String
name|hl7String
parameter_list|)
throws|throws
name|HL7Exception
block|{
return|return
name|toGenericMessage
argument_list|(
name|GenericMessage
operator|.
name|V23
operator|.
name|class
argument_list|,
name|hl7String
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toV23GenericMessage (byte[] hl7Bytes, Exchange exchange)
specifier|public
specifier|static
name|GenericMessage
operator|.
name|V23
name|toV23GenericMessage
parameter_list|(
name|byte
index|[]
name|hl7Bytes
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
block|{
return|return
name|toGenericMessage
argument_list|(
name|GenericMessage
operator|.
name|V23
operator|.
name|class
argument_list|,
name|hl7Bytes
argument_list|,
name|exchange
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toV231GenericMessage (String hl7String)
specifier|public
specifier|static
name|GenericMessage
operator|.
name|V231
name|toV231GenericMessage
parameter_list|(
name|String
name|hl7String
parameter_list|)
throws|throws
name|HL7Exception
block|{
return|return
name|toGenericMessage
argument_list|(
name|GenericMessage
operator|.
name|V231
operator|.
name|class
argument_list|,
name|hl7String
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toV231GenericMessage (byte[] hl7Bytes, Exchange exchange)
specifier|public
specifier|static
name|GenericMessage
operator|.
name|V231
name|toV231GenericMessage
parameter_list|(
name|byte
index|[]
name|hl7Bytes
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
block|{
return|return
name|toGenericMessage
argument_list|(
name|GenericMessage
operator|.
name|V231
operator|.
name|class
argument_list|,
name|hl7Bytes
argument_list|,
name|exchange
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toV24GenericMessage (String hl7String)
specifier|public
specifier|static
name|GenericMessage
operator|.
name|V24
name|toV24GenericMessage
parameter_list|(
name|String
name|hl7String
parameter_list|)
throws|throws
name|HL7Exception
block|{
return|return
name|toGenericMessage
argument_list|(
name|GenericMessage
operator|.
name|V24
operator|.
name|class
argument_list|,
name|hl7String
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toV24GenericMessage (byte[] hl7Bytes, Exchange exchange)
specifier|public
specifier|static
name|GenericMessage
operator|.
name|V24
name|toV24GenericMessage
parameter_list|(
name|byte
index|[]
name|hl7Bytes
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
block|{
return|return
name|toGenericMessage
argument_list|(
name|GenericMessage
operator|.
name|V24
operator|.
name|class
argument_list|,
name|hl7Bytes
argument_list|,
name|exchange
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toV25GenericMessage (String hl7String)
specifier|public
specifier|static
name|GenericMessage
operator|.
name|V25
name|toV25GenericMessage
parameter_list|(
name|String
name|hl7String
parameter_list|)
throws|throws
name|HL7Exception
block|{
return|return
name|toGenericMessage
argument_list|(
name|GenericMessage
operator|.
name|V25
operator|.
name|class
argument_list|,
name|hl7String
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toV25GenericMessage (byte[] hl7Bytes, Exchange exchange)
specifier|public
specifier|static
name|GenericMessage
operator|.
name|V25
name|toV25GenericMessage
parameter_list|(
name|byte
index|[]
name|hl7Bytes
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
block|{
return|return
name|toGenericMessage
argument_list|(
name|GenericMessage
operator|.
name|V25
operator|.
name|class
argument_list|,
name|hl7Bytes
argument_list|,
name|exchange
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toV251GenericMessage (String hl7String)
specifier|public
specifier|static
name|GenericMessage
operator|.
name|V251
name|toV251GenericMessage
parameter_list|(
name|String
name|hl7String
parameter_list|)
throws|throws
name|HL7Exception
block|{
return|return
name|toGenericMessage
argument_list|(
name|GenericMessage
operator|.
name|V251
operator|.
name|class
argument_list|,
name|hl7String
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toV251GenericMessage (byte[] hl7Bytes, Exchange exchange)
specifier|public
specifier|static
name|GenericMessage
operator|.
name|V251
name|toV251GenericMessage
parameter_list|(
name|byte
index|[]
name|hl7Bytes
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
block|{
return|return
name|toGenericMessage
argument_list|(
name|GenericMessage
operator|.
name|V251
operator|.
name|class
argument_list|,
name|hl7Bytes
argument_list|,
name|exchange
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toV26GenericMessage (String hl7String)
specifier|public
specifier|static
name|GenericMessage
operator|.
name|V26
name|toV26GenericMessage
parameter_list|(
name|String
name|hl7String
parameter_list|)
throws|throws
name|HL7Exception
block|{
return|return
name|toGenericMessage
argument_list|(
name|GenericMessage
operator|.
name|V26
operator|.
name|class
argument_list|,
name|hl7String
argument_list|)
return|;
block|}
annotation|@
name|Converter
DECL|method|toV26GenericMessage (byte[] hl7Bytes, Exchange exchange)
specifier|public
specifier|static
name|GenericMessage
operator|.
name|V26
name|toV26GenericMessage
parameter_list|(
name|byte
index|[]
name|hl7Bytes
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
block|{
return|return
name|toGenericMessage
argument_list|(
name|GenericMessage
operator|.
name|V26
operator|.
name|class
argument_list|,
name|hl7Bytes
argument_list|,
name|exchange
argument_list|)
return|;
block|}
DECL|method|parse (String body, Parser parser)
specifier|static
name|Message
name|parse
parameter_list|(
name|String
name|body
parameter_list|,
name|Parser
name|parser
parameter_list|)
throws|throws
name|HL7Exception
block|{
return|return
name|parser
operator|.
name|parse
argument_list|(
name|body
argument_list|)
return|;
block|}
DECL|method|encode (Message message, Parser parser)
specifier|static
name|String
name|encode
parameter_list|(
name|Message
name|message
parameter_list|,
name|Parser
name|parser
parameter_list|)
throws|throws
name|HL7Exception
block|{
return|return
name|parser
operator|.
name|encode
argument_list|(
name|message
argument_list|)
return|;
block|}
DECL|method|toGenericMessage (Class<T> messageClass, String hl7String)
specifier|static
parameter_list|<
name|T
extends|extends
name|Message
parameter_list|>
name|T
name|toGenericMessage
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|messageClass
parameter_list|,
name|String
name|hl7String
parameter_list|)
block|{
try|try
block|{
name|T
name|genericMessage
init|=
name|GENERIC_MESSAGE_CONTEXT
operator|.
name|newMessage
argument_list|(
name|messageClass
argument_list|)
decl_stmt|;
name|genericMessage
operator|.
name|parse
argument_list|(
name|hl7String
argument_list|)
expr_stmt|;
return|return
name|genericMessage
return|;
block|}
catch|catch
parameter_list|(
name|HL7Exception
name|conversionEx
parameter_list|)
block|{
throw|throw
operator|new
name|TypeConversionException
argument_list|(
name|hl7String
argument_list|,
name|String
operator|.
name|class
argument_list|,
name|conversionEx
argument_list|)
throw|;
block|}
block|}
DECL|method|toGenericMessage (Class<T> messageClass, byte[] hl7Bytes, Exchange exchange)
specifier|static
parameter_list|<
name|T
extends|extends
name|Message
parameter_list|>
name|T
name|toGenericMessage
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|messageClass
parameter_list|,
name|byte
index|[]
name|hl7Bytes
parameter_list|,
name|Exchange
name|exchange
parameter_list|)
block|{
try|try
block|{
name|T
name|genericMessage
init|=
name|GENERIC_MESSAGE_CONTEXT
operator|.
name|newMessage
argument_list|(
name|messageClass
argument_list|)
decl_stmt|;
name|genericMessage
operator|.
name|parse
argument_list|(
name|IOConverter
operator|.
name|toString
argument_list|(
name|hl7Bytes
argument_list|,
name|exchange
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|genericMessage
return|;
block|}
catch|catch
parameter_list|(
name|HL7Exception
decl||
name|IOException
name|conversionEx
parameter_list|)
block|{
throw|throw
operator|new
name|TypeConversionException
argument_list|(
name|hl7Bytes
argument_list|,
name|byte
index|[]
operator|.
expr|class
argument_list|,
name|conversionEx
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

