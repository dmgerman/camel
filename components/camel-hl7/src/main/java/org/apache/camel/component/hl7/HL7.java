begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.hl7
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|hl7
package|;
end_package

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|hl7v2
operator|.
name|AcknowledgmentCode
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|hl7v2
operator|.
name|ErrorCode
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|hl7v2
operator|.
name|HapiContext
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|uhn
operator|.
name|hl7v2
operator|.
name|validation
operator|.
name|ValidationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Expression
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Predicate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|ValueBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|ExpressionAdapter
import|;
end_import

begin_class
DECL|class|HL7
specifier|public
specifier|final
class|class
name|HL7
block|{
DECL|method|HL7 ()
specifier|private
name|HL7
parameter_list|()
block|{
comment|// Helper class
block|}
DECL|method|terser (String expression)
specifier|public
specifier|static
name|ValueBuilder
name|terser
parameter_list|(
name|String
name|expression
parameter_list|)
block|{
return|return
operator|new
name|ValueBuilder
argument_list|(
operator|new
name|TerserExpression
argument_list|(
name|expression
argument_list|)
argument_list|)
return|;
block|}
DECL|method|ack ()
specifier|public
specifier|static
name|ValueBuilder
name|ack
parameter_list|()
block|{
return|return
operator|new
name|ValueBuilder
argument_list|(
operator|new
name|AckExpression
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * @deprecated Use {@link #ack(ca.uhn.hl7v2.AcknowledgmentCode)}      */
DECL|method|ack (AckCode code)
specifier|public
specifier|static
name|ValueBuilder
name|ack
parameter_list|(
name|AckCode
name|code
parameter_list|)
block|{
return|return
operator|new
name|ValueBuilder
argument_list|(
operator|new
name|AckExpression
argument_list|(
name|code
argument_list|)
argument_list|)
return|;
block|}
DECL|method|ack (AcknowledgmentCode code)
specifier|public
specifier|static
name|ValueBuilder
name|ack
parameter_list|(
name|AcknowledgmentCode
name|code
parameter_list|)
block|{
return|return
operator|new
name|ValueBuilder
argument_list|(
operator|new
name|AckExpression
argument_list|(
name|code
argument_list|)
argument_list|)
return|;
block|}
DECL|method|convertLFToCR ()
specifier|public
specifier|static
name|ValueBuilder
name|convertLFToCR
parameter_list|()
block|{
return|return
operator|new
name|ValueBuilder
argument_list|(
operator|new
name|ExpressionAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|evaluate
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
name|String
name|s
init|=
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|s
operator|!=
literal|null
condition|?
name|s
operator|.
name|replace
argument_list|(
literal|'\n'
argument_list|,
literal|'\r'
argument_list|)
else|:
literal|null
return|;
block|}
block|}
argument_list|)
return|;
block|}
comment|/**      * @deprecated Use {@link #ack(ca.uhn.hl7v2.AcknowledgmentCode, String, ErrorCode)}      */
annotation|@
name|Deprecated
DECL|method|ack (AckCode code, String errorMessage, int errorCode)
specifier|public
specifier|static
name|ValueBuilder
name|ack
parameter_list|(
name|AckCode
name|code
parameter_list|,
name|String
name|errorMessage
parameter_list|,
name|int
name|errorCode
parameter_list|)
block|{
return|return
name|ack
argument_list|(
name|code
operator|.
name|toAcknowledgmentCode
argument_list|()
argument_list|,
name|errorMessage
argument_list|,
name|ErrorCode
operator|.
name|errorCodeFor
argument_list|(
name|errorCode
argument_list|)
argument_list|)
return|;
block|}
comment|/**      * @deprecated Use {@link #ack(ca.uhn.hl7v2.AcknowledgmentCode, String, ErrorCode)}      */
annotation|@
name|Deprecated
DECL|method|ack (AckCode code, String errorMessage, ErrorCode errorCode)
specifier|public
specifier|static
name|ValueBuilder
name|ack
parameter_list|(
name|AckCode
name|code
parameter_list|,
name|String
name|errorMessage
parameter_list|,
name|ErrorCode
name|errorCode
parameter_list|)
block|{
return|return
name|ack
argument_list|(
name|code
operator|.
name|toAcknowledgmentCode
argument_list|()
argument_list|,
name|errorMessage
argument_list|,
name|errorCode
argument_list|)
return|;
block|}
DECL|method|ack (AcknowledgmentCode code, String errorMessage, ErrorCode errorCode)
specifier|public
specifier|static
name|ValueBuilder
name|ack
parameter_list|(
name|AcknowledgmentCode
name|code
parameter_list|,
name|String
name|errorMessage
parameter_list|,
name|ErrorCode
name|errorCode
parameter_list|)
block|{
return|return
operator|new
name|ValueBuilder
argument_list|(
operator|new
name|AckExpression
argument_list|(
name|code
argument_list|,
name|errorMessage
argument_list|,
name|errorCode
argument_list|)
argument_list|)
return|;
block|}
DECL|method|messageConforms ()
specifier|public
specifier|static
name|Predicate
name|messageConforms
parameter_list|()
block|{
return|return
operator|new
name|ValidationContextPredicate
argument_list|()
return|;
block|}
DECL|method|messageConformsTo (HapiContext hapiContext)
specifier|public
specifier|static
name|Predicate
name|messageConformsTo
parameter_list|(
name|HapiContext
name|hapiContext
parameter_list|)
block|{
return|return
operator|new
name|ValidationContextPredicate
argument_list|(
name|hapiContext
argument_list|)
return|;
block|}
DECL|method|messageConformsTo (ValidationContext validationContext)
specifier|public
specifier|static
name|Predicate
name|messageConformsTo
parameter_list|(
name|ValidationContext
name|validationContext
parameter_list|)
block|{
return|return
operator|new
name|ValidationContextPredicate
argument_list|(
name|validationContext
argument_list|)
return|;
block|}
DECL|method|messageConformsTo (Expression expression)
specifier|public
specifier|static
name|Predicate
name|messageConformsTo
parameter_list|(
name|Expression
name|expression
parameter_list|)
block|{
return|return
operator|new
name|ValidationContextPredicate
argument_list|(
name|expression
argument_list|)
return|;
block|}
block|}
end_class

end_unit

