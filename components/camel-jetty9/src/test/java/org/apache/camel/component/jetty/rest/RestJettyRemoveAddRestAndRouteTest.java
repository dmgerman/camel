begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jetty.rest
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jetty
operator|.
name|rest
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|RoutesBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jetty
operator|.
name|BaseJettyTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|RestJettyRemoveAddRestAndRouteTest
specifier|public
class|class
name|RestJettyRemoveAddRestAndRouteTest
extends|extends
name|BaseJettyTest
block|{
annotation|@
name|Test
DECL|method|testCallRoute ()
specifier|public
name|void
name|testCallRoute
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|stream
init|=
operator|new
name|URL
argument_list|(
literal|"http://localhost:"
operator|+
name|getPort
argument_list|()
operator|+
literal|"/issues/35"
argument_list|)
operator|.
name|openStream
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Here's your issue 35"
argument_list|,
name|IOUtils
operator|.
name|toString
argument_list|(
name|stream
argument_list|)
argument_list|)
expr_stmt|;
name|stream
operator|=
operator|new
name|URL
argument_list|(
literal|"http://localhost:"
operator|+
name|getPort
argument_list|()
operator|+
literal|"/listings"
argument_list|)
operator|.
name|openStream
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"some listings"
argument_list|,
name|IOUtils
operator|.
name|toString
argument_list|(
name|stream
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveAddRoute ()
specifier|public
name|void
name|testRemoveAddRoute
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|stopRoute
argument_list|(
literal|"issues"
argument_list|)
expr_stmt|;
name|boolean
name|removed
init|=
name|context
operator|.
name|removeRoute
argument_list|(
literal|"issues"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Should have removed route"
argument_list|,
name|removed
argument_list|)
expr_stmt|;
try|try
init|(
name|InputStream
name|stream
init|=
operator|new
name|URL
argument_list|(
literal|"http://localhost:"
operator|+
name|getPort
argument_list|()
operator|+
literal|"/issues/35"
argument_list|)
operator|.
name|openStream
argument_list|()
init|)
block|{
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{         }
operator|new
name|RouteBuilder
argument_list|(
name|context
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|rest
argument_list|(
literal|"/"
argument_list|)
operator|.
name|get
argument_list|(
literal|"/issues/{isin}/{sedol}"
argument_list|)
operator|.
name|route
argument_list|()
operator|.
name|id
argument_list|(
literal|"issues"
argument_list|)
operator|.
name|process
argument_list|(
name|e
lambda|->
name|e
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"Here's your issue "
operator|+
name|e
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
literal|"isin"
argument_list|)
operator|+
literal|":"
operator|+
name|e
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
literal|"sedol"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|endRest
argument_list|()
expr_stmt|;
block|}
block|}
operator|.
name|addRoutesToCamelContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
comment|// exception here since we have 2 rest configurations
comment|// org.apache.camel.model.rest.RestDefinition.asRouteDefinition(CamelContext camelContext) line 607 will have 2 rest contexts
comment|// and duplicate route definitions for the same route which will cause exception
name|InputStream
name|stream
init|=
operator|new
name|URL
argument_list|(
literal|"http://localhost:"
operator|+
name|getPort
argument_list|()
operator|+
literal|"/issues/35/65"
argument_list|)
operator|.
name|openStream
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Here's your issue 35:65"
argument_list|,
name|IOUtils
operator|.
name|toString
argument_list|(
name|stream
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createRouteBuilder ()
specifier|protected
name|RoutesBuilder
name|createRouteBuilder
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|restConfiguration
argument_list|(
literal|"jetty"
argument_list|)
operator|.
name|host
argument_list|(
literal|"localhost"
argument_list|)
operator|.
name|port
argument_list|(
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|rest
argument_list|(
literal|"/"
argument_list|)
operator|.
name|get
argument_list|(
literal|"/issues/{isin}"
argument_list|)
operator|.
name|route
argument_list|()
operator|.
name|id
argument_list|(
literal|"issues"
argument_list|)
operator|.
name|process
argument_list|(
name|e
lambda|->
name|e
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"Here's your issue "
operator|+
name|e
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
literal|"isin"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|endRest
argument_list|()
operator|.
name|get
argument_list|(
literal|"/listings"
argument_list|)
operator|.
name|route
argument_list|()
operator|.
name|id
argument_list|(
literal|"listings"
argument_list|)
operator|.
name|process
argument_list|(
name|e
lambda|->
name|e
operator|.
name|getOut
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"some listings"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

