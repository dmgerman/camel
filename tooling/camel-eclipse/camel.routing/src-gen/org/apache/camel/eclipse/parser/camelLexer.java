begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// $ANTLR 3.0b6 ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g 2007-04-05 12:20:03
end_comment

begin_package
DECL|package|org.apache.camel.eclipse.parser
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|eclipse
operator|.
name|parser
package|;
end_package

begin_import
import|import
name|org
operator|.
name|antlr
operator|.
name|runtime
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Stack
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_class
DECL|class|camelLexer
specifier|public
class|class
name|camelLexer
extends|extends
name|Lexer
block|{
DECL|field|T10
specifier|public
specifier|static
specifier|final
name|int
name|T10
init|=
literal|10
decl_stmt|;
DECL|field|T11
specifier|public
specifier|static
specifier|final
name|int
name|T11
init|=
literal|11
decl_stmt|;
DECL|field|INT
specifier|public
specifier|static
specifier|final
name|int
name|INT
init|=
literal|6
decl_stmt|;
DECL|field|EOF
specifier|public
specifier|static
specifier|final
name|int
name|EOF
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|WS
specifier|public
specifier|static
specifier|final
name|int
name|WS
init|=
literal|9
decl_stmt|;
DECL|field|STRING
specifier|public
specifier|static
specifier|final
name|int
name|STRING
init|=
literal|5
decl_stmt|;
DECL|field|T12
specifier|public
specifier|static
specifier|final
name|int
name|T12
init|=
literal|12
decl_stmt|;
DECL|field|Tokens
specifier|public
specifier|static
specifier|final
name|int
name|Tokens
init|=
literal|14
decl_stmt|;
DECL|field|ML_COMMENT
specifier|public
specifier|static
specifier|final
name|int
name|ML_COMMENT
init|=
literal|7
decl_stmt|;
DECL|field|T13
specifier|public
specifier|static
specifier|final
name|int
name|T13
init|=
literal|13
decl_stmt|;
DECL|field|SL_COMMENT
specifier|public
specifier|static
specifier|final
name|int
name|SL_COMMENT
init|=
literal|8
decl_stmt|;
DECL|field|ID
specifier|public
specifier|static
specifier|final
name|int
name|ID
init|=
literal|4
decl_stmt|;
DECL|method|camelLexer ()
specifier|public
name|camelLexer
parameter_list|()
block|{
empty_stmt|;
block|}
DECL|method|camelLexer (CharStream input)
specifier|public
name|camelLexer
parameter_list|(
name|CharStream
name|input
parameter_list|)
block|{
name|super
argument_list|(
name|input
argument_list|)
expr_stmt|;
block|}
DECL|method|getGrammarFileName ()
specifier|public
name|String
name|getGrammarFileName
parameter_list|()
block|{
return|return
literal|"..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g"
return|;
block|}
comment|// $ANTLR start T10
DECL|method|mT10 ()
specifier|public
name|void
name|mT10
parameter_list|()
throws|throws
name|RecognitionException
block|{
try|try
block|{
name|ruleNestingLevel
operator|++
expr_stmt|;
name|int
name|_type
init|=
name|T10
decl_stmt|;
name|int
name|_start
init|=
name|getCharIndex
argument_list|()
decl_stmt|;
name|int
name|_line
init|=
name|getLine
argument_list|()
decl_stmt|;
name|int
name|_charPosition
init|=
name|getCharPositionInLine
argument_list|()
decl_stmt|;
name|int
name|_channel
init|=
name|Token
operator|.
name|DEFAULT_CHANNEL
decl_stmt|;
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:6:7: ( 'from' )
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:6:7: 'from'
block|{
name|match
argument_list|(
literal|"from"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|token
operator|==
literal|null
operator|&&
name|ruleNestingLevel
operator|==
literal|1
condition|)
block|{
name|emit
argument_list|(
name|_type
argument_list|,
name|_line
argument_list|,
name|_charPosition
argument_list|,
name|_channel
argument_list|,
name|_start
argument_list|,
name|getCharIndex
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|ruleNestingLevel
operator|--
expr_stmt|;
block|}
block|}
comment|// $ANTLR end T10
comment|// $ANTLR start T11
DECL|method|mT11 ()
specifier|public
name|void
name|mT11
parameter_list|()
throws|throws
name|RecognitionException
block|{
try|try
block|{
name|ruleNestingLevel
operator|++
expr_stmt|;
name|int
name|_type
init|=
name|T11
decl_stmt|;
name|int
name|_start
init|=
name|getCharIndex
argument_list|()
decl_stmt|;
name|int
name|_line
init|=
name|getLine
argument_list|()
decl_stmt|;
name|int
name|_charPosition
init|=
name|getCharPositionInLine
argument_list|()
decl_stmt|;
name|int
name|_channel
init|=
name|Token
operator|.
name|DEFAULT_CHANNEL
decl_stmt|;
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:7:7: ( ';' )
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:7:7: ';'
block|{
name|match
argument_list|(
literal|';'
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|token
operator|==
literal|null
operator|&&
name|ruleNestingLevel
operator|==
literal|1
condition|)
block|{
name|emit
argument_list|(
name|_type
argument_list|,
name|_line
argument_list|,
name|_charPosition
argument_list|,
name|_channel
argument_list|,
name|_start
argument_list|,
name|getCharIndex
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|ruleNestingLevel
operator|--
expr_stmt|;
block|}
block|}
comment|// $ANTLR end T11
comment|// $ANTLR start T12
DECL|method|mT12 ()
specifier|public
name|void
name|mT12
parameter_list|()
throws|throws
name|RecognitionException
block|{
try|try
block|{
name|ruleNestingLevel
operator|++
expr_stmt|;
name|int
name|_type
init|=
name|T12
decl_stmt|;
name|int
name|_start
init|=
name|getCharIndex
argument_list|()
decl_stmt|;
name|int
name|_line
init|=
name|getLine
argument_list|()
decl_stmt|;
name|int
name|_charPosition
init|=
name|getCharPositionInLine
argument_list|()
decl_stmt|;
name|int
name|_channel
init|=
name|Token
operator|.
name|DEFAULT_CHANNEL
decl_stmt|;
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:8:7: ( 'to' )
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:8:7: 'to'
block|{
name|match
argument_list|(
literal|"to"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|token
operator|==
literal|null
operator|&&
name|ruleNestingLevel
operator|==
literal|1
condition|)
block|{
name|emit
argument_list|(
name|_type
argument_list|,
name|_line
argument_list|,
name|_charPosition
argument_list|,
name|_channel
argument_list|,
name|_start
argument_list|,
name|getCharIndex
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|ruleNestingLevel
operator|--
expr_stmt|;
block|}
block|}
comment|// $ANTLR end T12
comment|// $ANTLR start T13
DECL|method|mT13 ()
specifier|public
name|void
name|mT13
parameter_list|()
throws|throws
name|RecognitionException
block|{
try|try
block|{
name|ruleNestingLevel
operator|++
expr_stmt|;
name|int
name|_type
init|=
name|T13
decl_stmt|;
name|int
name|_start
init|=
name|getCharIndex
argument_list|()
decl_stmt|;
name|int
name|_line
init|=
name|getLine
argument_list|()
decl_stmt|;
name|int
name|_charPosition
init|=
name|getCharPositionInLine
argument_list|()
decl_stmt|;
name|int
name|_channel
init|=
name|Token
operator|.
name|DEFAULT_CHANNEL
decl_stmt|;
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:9:7: ( 'process' )
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:9:7: 'process'
block|{
name|match
argument_list|(
literal|"process"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|token
operator|==
literal|null
operator|&&
name|ruleNestingLevel
operator|==
literal|1
condition|)
block|{
name|emit
argument_list|(
name|_type
argument_list|,
name|_line
argument_list|,
name|_charPosition
argument_list|,
name|_channel
argument_list|,
name|_start
argument_list|,
name|getCharIndex
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|ruleNestingLevel
operator|--
expr_stmt|;
block|}
block|}
comment|// $ANTLR end T13
comment|// $ANTLR start STRING
DECL|method|mSTRING ()
specifier|public
name|void
name|mSTRING
parameter_list|()
throws|throws
name|RecognitionException
block|{
try|try
block|{
name|ruleNestingLevel
operator|++
expr_stmt|;
name|int
name|_type
init|=
name|STRING
decl_stmt|;
name|int
name|_start
init|=
name|getCharIndex
argument_list|()
decl_stmt|;
name|int
name|_line
init|=
name|getLine
argument_list|()
decl_stmt|;
name|int
name|_charPosition
init|=
name|getCharPositionInLine
argument_list|()
decl_stmt|;
name|int
name|_channel
init|=
name|Token
operator|.
name|DEFAULT_CHANNEL
decl_stmt|;
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:123:5: ( '\"' ( '\\\\' ('b'|'t'|'n'|'f'|'r'|'\\\"'|'\\''|'\\\\') | ~ ('\\\\'|'\"'))* '\"' | '\\'' ( '\\\\' ('b'|'t'|'n'|'f'|'r'|'\\\"'|'\\''|'\\\\') | ~ ('\\\\'|'\\''))* '\\'' )
name|int
name|alt3
init|=
literal|2
decl_stmt|;
name|int
name|LA3_0
init|=
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|LA3_0
operator|==
literal|'\"'
operator|)
condition|)
block|{
name|alt3
operator|=
literal|1
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|(
name|LA3_0
operator|==
literal|'\''
operator|)
condition|)
block|{
name|alt3
operator|=
literal|2
expr_stmt|;
block|}
else|else
block|{
name|NoViableAltException
name|nvae
init|=
operator|new
name|NoViableAltException
argument_list|(
literal|"122:1: STRING : ( '\"' ( '\\\\' ('b'|'t'|'n'|'f'|'r'|'\\\"'|'\\''|'\\\\') | ~ ('\\\\'|'\"'))* '\"' | '\\'' ( '\\\\' ('b'|'t'|'n'|'f'|'r'|'\\\"'|'\\''|'\\\\') | ~ ('\\\\'|'\\''))* '\\'' );"
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|,
name|input
argument_list|)
decl_stmt|;
throw|throw
name|nvae
throw|;
block|}
switch|switch
condition|(
name|alt3
condition|)
block|{
case|case
literal|1
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:123:5: '\"' ( '\\\\' ('b'|'t'|'n'|'f'|'r'|'\\\"'|'\\''|'\\\\') | ~ ('\\\\'|'\"'))* '\"'
block|{
name|match
argument_list|(
literal|'\"'
argument_list|)
expr_stmt|;
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:123:9: ( '\\\\' ('b'|'t'|'n'|'f'|'r'|'\\\"'|'\\''|'\\\\') | ~ ('\\\\'|'\"'))*
name|loop1
label|:
do|do
block|{
name|int
name|alt1
init|=
literal|3
decl_stmt|;
name|int
name|LA1_0
init|=
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|LA1_0
operator|==
literal|'\\'
operator|)
condition|)
block|{
name|alt1
operator|=
literal|1
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|(
operator|(
name|LA1_0
operator|>=
literal|'\u0000'
operator|&&
name|LA1_0
operator|<=
literal|'!'
operator|)
operator|||
operator|(
name|LA1_0
operator|>=
literal|'#'
operator|&&
name|LA1_0
operator|<=
literal|'['
operator|)
operator|||
operator|(
name|LA1_0
operator|>=
literal|']'
operator|&&
name|LA1_0
operator|<=
literal|'\uFFFE'
operator|)
operator|)
condition|)
block|{
name|alt1
operator|=
literal|2
expr_stmt|;
block|}
switch|switch
condition|(
name|alt1
condition|)
block|{
case|case
literal|1
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:123:11: '\\\\' ('b'|'t'|'n'|'f'|'r'|'\\\"'|'\\''|'\\\\')
block|{
name|match
argument_list|(
literal|'\\'
argument_list|)
expr_stmt|;
if|if
condition|(
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|'\"'
operator|||
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|'\''
operator|||
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|'\\'
operator|||
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|'b'
operator|||
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|'f'
operator|||
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|'n'
operator|||
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|'r'
operator|||
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|'t'
condition|)
block|{
name|input
operator|.
name|consume
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|MismatchedSetException
name|mse
init|=
operator|new
name|MismatchedSetException
argument_list|(
literal|null
argument_list|,
name|input
argument_list|)
decl_stmt|;
name|recover
argument_list|(
name|mse
argument_list|)
expr_stmt|;
throw|throw
name|mse
throw|;
block|}
block|}
break|break;
case|case
literal|2
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:123:55: ~ ('\\\\'|'\"')
block|{
if|if
condition|(
operator|(
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|>=
literal|'\u0000'
operator|&&
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|<=
literal|'!'
operator|)
operator|||
operator|(
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|>=
literal|'#'
operator|&&
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|<=
literal|'['
operator|)
operator|||
operator|(
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|>=
literal|']'
operator|&&
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|<=
literal|'\uFFFE'
operator|)
condition|)
block|{
name|input
operator|.
name|consume
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|MismatchedSetException
name|mse
init|=
operator|new
name|MismatchedSetException
argument_list|(
literal|null
argument_list|,
name|input
argument_list|)
decl_stmt|;
name|recover
argument_list|(
name|mse
argument_list|)
expr_stmt|;
throw|throw
name|mse
throw|;
block|}
block|}
break|break;
default|default :
break|break
name|loop1
break|;
block|}
block|}
do|while
condition|(
literal|true
condition|)
do|;
name|match
argument_list|(
literal|'\"'
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
literal|2
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:124:5: '\\'' ( '\\\\' ('b'|'t'|'n'|'f'|'r'|'\\\"'|'\\''|'\\\\') | ~ ('\\\\'|'\\''))* '\\''
block|{
name|match
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:124:10: ( '\\\\' ('b'|'t'|'n'|'f'|'r'|'\\\"'|'\\''|'\\\\') | ~ ('\\\\'|'\\''))*
name|loop2
label|:
do|do
block|{
name|int
name|alt2
init|=
literal|3
decl_stmt|;
name|int
name|LA2_0
init|=
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|LA2_0
operator|==
literal|'\\'
operator|)
condition|)
block|{
name|alt2
operator|=
literal|1
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|(
operator|(
name|LA2_0
operator|>=
literal|'\u0000'
operator|&&
name|LA2_0
operator|<=
literal|'&'
operator|)
operator|||
operator|(
name|LA2_0
operator|>=
literal|'('
operator|&&
name|LA2_0
operator|<=
literal|'['
operator|)
operator|||
operator|(
name|LA2_0
operator|>=
literal|']'
operator|&&
name|LA2_0
operator|<=
literal|'\uFFFE'
operator|)
operator|)
condition|)
block|{
name|alt2
operator|=
literal|2
expr_stmt|;
block|}
switch|switch
condition|(
name|alt2
condition|)
block|{
case|case
literal|1
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:124:12: '\\\\' ('b'|'t'|'n'|'f'|'r'|'\\\"'|'\\''|'\\\\')
block|{
name|match
argument_list|(
literal|'\\'
argument_list|)
expr_stmt|;
if|if
condition|(
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|'\"'
operator|||
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|'\''
operator|||
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|'\\'
operator|||
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|'b'
operator|||
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|'f'
operator|||
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|'n'
operator|||
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|'r'
operator|||
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|'t'
condition|)
block|{
name|input
operator|.
name|consume
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|MismatchedSetException
name|mse
init|=
operator|new
name|MismatchedSetException
argument_list|(
literal|null
argument_list|,
name|input
argument_list|)
decl_stmt|;
name|recover
argument_list|(
name|mse
argument_list|)
expr_stmt|;
throw|throw
name|mse
throw|;
block|}
block|}
break|break;
case|case
literal|2
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:124:56: ~ ('\\\\'|'\\'')
block|{
if|if
condition|(
operator|(
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|>=
literal|'\u0000'
operator|&&
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|<=
literal|'&'
operator|)
operator|||
operator|(
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|>=
literal|'('
operator|&&
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|<=
literal|'['
operator|)
operator|||
operator|(
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|>=
literal|']'
operator|&&
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|<=
literal|'\uFFFE'
operator|)
condition|)
block|{
name|input
operator|.
name|consume
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|MismatchedSetException
name|mse
init|=
operator|new
name|MismatchedSetException
argument_list|(
literal|null
argument_list|,
name|input
argument_list|)
decl_stmt|;
name|recover
argument_list|(
name|mse
argument_list|)
expr_stmt|;
throw|throw
name|mse
throw|;
block|}
block|}
break|break;
default|default :
break|break
name|loop2
break|;
block|}
block|}
do|while
condition|(
literal|true
condition|)
do|;
name|match
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
if|if
condition|(
name|token
operator|==
literal|null
operator|&&
name|ruleNestingLevel
operator|==
literal|1
condition|)
block|{
name|emit
argument_list|(
name|_type
argument_list|,
name|_line
argument_list|,
name|_charPosition
argument_list|,
name|_channel
argument_list|,
name|_start
argument_list|,
name|getCharIndex
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|ruleNestingLevel
operator|--
expr_stmt|;
block|}
block|}
comment|// $ANTLR end STRING
comment|// $ANTLR start ID
DECL|method|mID ()
specifier|public
name|void
name|mID
parameter_list|()
throws|throws
name|RecognitionException
block|{
try|try
block|{
name|ruleNestingLevel
operator|++
expr_stmt|;
name|int
name|_type
init|=
name|ID
decl_stmt|;
name|int
name|_start
init|=
name|getCharIndex
argument_list|()
decl_stmt|;
name|int
name|_line
init|=
name|getLine
argument_list|()
decl_stmt|;
name|int
name|_charPosition
init|=
name|getCharPositionInLine
argument_list|()
decl_stmt|;
name|int
name|_channel
init|=
name|Token
operator|.
name|DEFAULT_CHANNEL
decl_stmt|;
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:129:2: ( ( '^' )? ('a'..'z'|'A'..'Z'|'_') ( ('a'..'z'|'A'..'Z'|'_'|'0'..'9'))* )
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:129:2: ( '^' )? ('a'..'z'|'A'..'Z'|'_') ( ('a'..'z'|'A'..'Z'|'_'|'0'..'9'))*
block|{
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:129:2: ( '^' )?
name|int
name|alt4
init|=
literal|2
decl_stmt|;
name|int
name|LA4_0
init|=
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|LA4_0
operator|==
literal|'^'
operator|)
condition|)
block|{
name|alt4
operator|=
literal|1
expr_stmt|;
block|}
switch|switch
condition|(
name|alt4
condition|)
block|{
case|case
literal|1
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:129:3: '^'
block|{
name|match
argument_list|(
literal|'^'
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
if|if
condition|(
operator|(
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|>=
literal|'A'
operator|&&
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|<=
literal|'Z'
operator|)
operator|||
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|'_'
operator|||
operator|(
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|>=
literal|'a'
operator|&&
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|<=
literal|'z'
operator|)
condition|)
block|{
name|input
operator|.
name|consume
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|MismatchedSetException
name|mse
init|=
operator|new
name|MismatchedSetException
argument_list|(
literal|null
argument_list|,
name|input
argument_list|)
decl_stmt|;
name|recover
argument_list|(
name|mse
argument_list|)
expr_stmt|;
throw|throw
name|mse
throw|;
block|}
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:129:32: ( ('a'..'z'|'A'..'Z'|'_'|'0'..'9'))*
name|loop5
label|:
do|do
block|{
name|int
name|alt5
init|=
literal|2
decl_stmt|;
name|int
name|LA5_0
init|=
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|LA5_0
operator|>=
literal|'0'
operator|&&
name|LA5_0
operator|<=
literal|'9'
operator|)
operator|||
operator|(
name|LA5_0
operator|>=
literal|'A'
operator|&&
name|LA5_0
operator|<=
literal|'Z'
operator|)
operator|||
name|LA5_0
operator|==
literal|'_'
operator|||
operator|(
name|LA5_0
operator|>=
literal|'a'
operator|&&
name|LA5_0
operator|<=
literal|'z'
operator|)
operator|)
condition|)
block|{
name|alt5
operator|=
literal|1
expr_stmt|;
block|}
switch|switch
condition|(
name|alt5
condition|)
block|{
case|case
literal|1
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:129:33: ('a'..'z'|'A'..'Z'|'_'|'0'..'9')
block|{
if|if
condition|(
operator|(
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|>=
literal|'0'
operator|&&
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|<=
literal|'9'
operator|)
operator|||
operator|(
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|>=
literal|'A'
operator|&&
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|<=
literal|'Z'
operator|)
operator|||
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|'_'
operator|||
operator|(
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|>=
literal|'a'
operator|&&
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|<=
literal|'z'
operator|)
condition|)
block|{
name|input
operator|.
name|consume
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|MismatchedSetException
name|mse
init|=
operator|new
name|MismatchedSetException
argument_list|(
literal|null
argument_list|,
name|input
argument_list|)
decl_stmt|;
name|recover
argument_list|(
name|mse
argument_list|)
expr_stmt|;
throw|throw
name|mse
throw|;
block|}
block|}
break|break;
default|default :
break|break
name|loop5
break|;
block|}
block|}
do|while
condition|(
literal|true
condition|)
do|;
block|}
if|if
condition|(
name|token
operator|==
literal|null
operator|&&
name|ruleNestingLevel
operator|==
literal|1
condition|)
block|{
name|emit
argument_list|(
name|_type
argument_list|,
name|_line
argument_list|,
name|_charPosition
argument_list|,
name|_channel
argument_list|,
name|_start
argument_list|,
name|getCharIndex
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|ruleNestingLevel
operator|--
expr_stmt|;
block|}
block|}
comment|// $ANTLR end ID
comment|// $ANTLR start INT
DECL|method|mINT ()
specifier|public
name|void
name|mINT
parameter_list|()
throws|throws
name|RecognitionException
block|{
try|try
block|{
name|ruleNestingLevel
operator|++
expr_stmt|;
name|int
name|_type
init|=
name|INT
decl_stmt|;
name|int
name|_start
init|=
name|getCharIndex
argument_list|()
decl_stmt|;
name|int
name|_line
init|=
name|getLine
argument_list|()
decl_stmt|;
name|int
name|_charPosition
init|=
name|getCharPositionInLine
argument_list|()
decl_stmt|;
name|int
name|_channel
init|=
name|Token
operator|.
name|DEFAULT_CHANNEL
decl_stmt|;
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:135:2: ( ( '0' .. '9' )+ )
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:135:2: ( '0' .. '9' )+
block|{
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:135:2: ( '0' .. '9' )+
name|int
name|cnt6
init|=
literal|0
decl_stmt|;
name|loop6
label|:
do|do
block|{
name|int
name|alt6
init|=
literal|2
decl_stmt|;
name|int
name|LA6_0
init|=
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|LA6_0
operator|>=
literal|'0'
operator|&&
name|LA6_0
operator|<=
literal|'9'
operator|)
operator|)
condition|)
block|{
name|alt6
operator|=
literal|1
expr_stmt|;
block|}
switch|switch
condition|(
name|alt6
condition|)
block|{
case|case
literal|1
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:135:3: '0' .. '9'
block|{
name|matchRange
argument_list|(
literal|'0'
argument_list|,
literal|'9'
argument_list|)
expr_stmt|;
block|}
break|break;
default|default :
if|if
condition|(
name|cnt6
operator|>=
literal|1
condition|)
break|break
name|loop6
break|;
name|EarlyExitException
name|eee
init|=
operator|new
name|EarlyExitException
argument_list|(
literal|6
argument_list|,
name|input
argument_list|)
decl_stmt|;
throw|throw
name|eee
throw|;
block|}
name|cnt6
operator|++
expr_stmt|;
block|}
do|while
condition|(
literal|true
condition|)
do|;
block|}
if|if
condition|(
name|token
operator|==
literal|null
operator|&&
name|ruleNestingLevel
operator|==
literal|1
condition|)
block|{
name|emit
argument_list|(
name|_type
argument_list|,
name|_line
argument_list|,
name|_charPosition
argument_list|,
name|_channel
argument_list|,
name|_start
argument_list|,
name|getCharIndex
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|ruleNestingLevel
operator|--
expr_stmt|;
block|}
block|}
comment|// $ANTLR end INT
comment|// $ANTLR start ML_COMMENT
DECL|method|mML_COMMENT ()
specifier|public
name|void
name|mML_COMMENT
parameter_list|()
throws|throws
name|RecognitionException
block|{
try|try
block|{
name|ruleNestingLevel
operator|++
expr_stmt|;
name|int
name|_type
init|=
name|ML_COMMENT
decl_stmt|;
name|int
name|_start
init|=
name|getCharIndex
argument_list|()
decl_stmt|;
name|int
name|_line
init|=
name|getLine
argument_list|()
decl_stmt|;
name|int
name|_charPosition
init|=
name|getCharPositionInLine
argument_list|()
decl_stmt|;
name|int
name|_channel
init|=
name|Token
operator|.
name|DEFAULT_CHANNEL
decl_stmt|;
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:141:9: ( '/*' ( options {greedy=false; } : . )* '*/' )
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:141:9: '/*' ( options {greedy=false; } : . )* '*/'
block|{
name|match
argument_list|(
literal|"/*"
argument_list|)
expr_stmt|;
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:141:14: ( options {greedy=false; } : . )*
name|loop7
label|:
do|do
block|{
name|int
name|alt7
init|=
literal|2
decl_stmt|;
name|int
name|LA7_0
init|=
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|LA7_0
operator|==
literal|'*'
operator|)
condition|)
block|{
name|int
name|LA7_1
init|=
name|input
operator|.
name|LA
argument_list|(
literal|2
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|LA7_1
operator|==
literal|'/'
operator|)
condition|)
block|{
name|alt7
operator|=
literal|2
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|(
operator|(
name|LA7_1
operator|>=
literal|'\u0000'
operator|&&
name|LA7_1
operator|<=
literal|'.'
operator|)
operator|||
operator|(
name|LA7_1
operator|>=
literal|'0'
operator|&&
name|LA7_1
operator|<=
literal|'\uFFFE'
operator|)
operator|)
condition|)
block|{
name|alt7
operator|=
literal|1
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
operator|(
operator|(
name|LA7_0
operator|>=
literal|'\u0000'
operator|&&
name|LA7_0
operator|<=
literal|')'
operator|)
operator|||
operator|(
name|LA7_0
operator|>=
literal|'+'
operator|&&
name|LA7_0
operator|<=
literal|'\uFFFE'
operator|)
operator|)
condition|)
block|{
name|alt7
operator|=
literal|1
expr_stmt|;
block|}
switch|switch
condition|(
name|alt7
condition|)
block|{
case|case
literal|1
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:141:42: .
block|{
name|matchAny
argument_list|()
expr_stmt|;
block|}
break|break;
default|default :
break|break
name|loop7
break|;
block|}
block|}
do|while
condition|(
literal|true
condition|)
do|;
name|match
argument_list|(
literal|"*/"
argument_list|)
expr_stmt|;
name|skip
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|token
operator|==
literal|null
operator|&&
name|ruleNestingLevel
operator|==
literal|1
condition|)
block|{
name|emit
argument_list|(
name|_type
argument_list|,
name|_line
argument_list|,
name|_charPosition
argument_list|,
name|_channel
argument_list|,
name|_start
argument_list|,
name|getCharIndex
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|ruleNestingLevel
operator|--
expr_stmt|;
block|}
block|}
comment|// $ANTLR end ML_COMMENT
comment|// $ANTLR start SL_COMMENT
DECL|method|mSL_COMMENT ()
specifier|public
name|void
name|mSL_COMMENT
parameter_list|()
throws|throws
name|RecognitionException
block|{
try|try
block|{
name|ruleNestingLevel
operator|++
expr_stmt|;
name|int
name|_type
init|=
name|SL_COMMENT
decl_stmt|;
name|int
name|_start
init|=
name|getCharIndex
argument_list|()
decl_stmt|;
name|int
name|_line
init|=
name|getLine
argument_list|()
decl_stmt|;
name|int
name|_charPosition
init|=
name|getCharPositionInLine
argument_list|()
decl_stmt|;
name|int
name|_channel
init|=
name|Token
operator|.
name|DEFAULT_CHANNEL
decl_stmt|;
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:147:7: ( '//' (~ ('\\n'|'\\r'))* ( '\\r' )? '\\n' )
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:147:7: '//' (~ ('\\n'|'\\r'))* ( '\\r' )? '\\n'
block|{
name|match
argument_list|(
literal|"//"
argument_list|)
expr_stmt|;
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:147:12: (~ ('\\n'|'\\r'))*
name|loop8
label|:
do|do
block|{
name|int
name|alt8
init|=
literal|2
decl_stmt|;
name|int
name|LA8_0
init|=
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|LA8_0
operator|>=
literal|'\u0000'
operator|&&
name|LA8_0
operator|<=
literal|'\t'
operator|)
operator|||
operator|(
name|LA8_0
operator|>=
literal|'\u000B'
operator|&&
name|LA8_0
operator|<=
literal|'\f'
operator|)
operator|||
operator|(
name|LA8_0
operator|>=
literal|'\u000E'
operator|&&
name|LA8_0
operator|<=
literal|'\uFFFE'
operator|)
operator|)
condition|)
block|{
name|alt8
operator|=
literal|1
expr_stmt|;
block|}
switch|switch
condition|(
name|alt8
condition|)
block|{
case|case
literal|1
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:147:12: ~ ('\\n'|'\\r')
block|{
if|if
condition|(
operator|(
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|>=
literal|'\u0000'
operator|&&
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|<=
literal|'\t'
operator|)
operator|||
operator|(
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|>=
literal|'\u000B'
operator|&&
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|<=
literal|'\f'
operator|)
operator|||
operator|(
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|>=
literal|'\u000E'
operator|&&
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|<=
literal|'\uFFFE'
operator|)
condition|)
block|{
name|input
operator|.
name|consume
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|MismatchedSetException
name|mse
init|=
operator|new
name|MismatchedSetException
argument_list|(
literal|null
argument_list|,
name|input
argument_list|)
decl_stmt|;
name|recover
argument_list|(
name|mse
argument_list|)
expr_stmt|;
throw|throw
name|mse
throw|;
block|}
block|}
break|break;
default|default :
break|break
name|loop8
break|;
block|}
block|}
do|while
condition|(
literal|true
condition|)
do|;
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:147:26: ( '\\r' )?
name|int
name|alt9
init|=
literal|2
decl_stmt|;
name|int
name|LA9_0
init|=
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|LA9_0
operator|==
literal|'\r'
operator|)
condition|)
block|{
name|alt9
operator|=
literal|1
expr_stmt|;
block|}
switch|switch
condition|(
name|alt9
condition|)
block|{
case|case
literal|1
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:147:26: '\\r'
block|{
name|match
argument_list|(
literal|'\r'
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
name|match
argument_list|(
literal|'\n'
argument_list|)
expr_stmt|;
name|skip
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|token
operator|==
literal|null
operator|&&
name|ruleNestingLevel
operator|==
literal|1
condition|)
block|{
name|emit
argument_list|(
name|_type
argument_list|,
name|_line
argument_list|,
name|_charPosition
argument_list|,
name|_channel
argument_list|,
name|_start
argument_list|,
name|getCharIndex
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|ruleNestingLevel
operator|--
expr_stmt|;
block|}
block|}
comment|// $ANTLR end SL_COMMENT
comment|// $ANTLR start WS
DECL|method|mWS ()
specifier|public
name|void
name|mWS
parameter_list|()
throws|throws
name|RecognitionException
block|{
try|try
block|{
name|ruleNestingLevel
operator|++
expr_stmt|;
name|int
name|_type
init|=
name|WS
decl_stmt|;
name|int
name|_start
init|=
name|getCharIndex
argument_list|()
decl_stmt|;
name|int
name|_line
init|=
name|getLine
argument_list|()
decl_stmt|;
name|int
name|_charPosition
init|=
name|getCharPositionInLine
argument_list|()
decl_stmt|;
name|int
name|_channel
init|=
name|Token
operator|.
name|DEFAULT_CHANNEL
decl_stmt|;
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:152:6: ( ( (' '|'\\t'|'\\r'|'\\n'))+ )
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:152:6: ( (' '|'\\t'|'\\r'|'\\n'))+
block|{
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:152:6: ( (' '|'\\t'|'\\r'|'\\n'))+
name|int
name|cnt10
init|=
literal|0
decl_stmt|;
name|loop10
label|:
do|do
block|{
name|int
name|alt10
init|=
literal|2
decl_stmt|;
name|int
name|LA10_0
init|=
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|LA10_0
operator|>=
literal|'\t'
operator|&&
name|LA10_0
operator|<=
literal|'\n'
operator|)
operator|||
name|LA10_0
operator|==
literal|'\r'
operator|||
name|LA10_0
operator|==
literal|' '
operator|)
condition|)
block|{
name|alt10
operator|=
literal|1
expr_stmt|;
block|}
switch|switch
condition|(
name|alt10
condition|)
block|{
case|case
literal|1
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:152:7: (' '|'\\t'|'\\r'|'\\n')
block|{
if|if
condition|(
operator|(
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|>=
literal|'\t'
operator|&&
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|<=
literal|'\n'
operator|)
operator|||
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|'\r'
operator|||
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
operator|==
literal|' '
condition|)
block|{
name|input
operator|.
name|consume
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|MismatchedSetException
name|mse
init|=
operator|new
name|MismatchedSetException
argument_list|(
literal|null
argument_list|,
name|input
argument_list|)
decl_stmt|;
name|recover
argument_list|(
name|mse
argument_list|)
expr_stmt|;
throw|throw
name|mse
throw|;
block|}
block|}
break|break;
default|default :
if|if
condition|(
name|cnt10
operator|>=
literal|1
condition|)
break|break
name|loop10
break|;
name|EarlyExitException
name|eee
init|=
operator|new
name|EarlyExitException
argument_list|(
literal|10
argument_list|,
name|input
argument_list|)
decl_stmt|;
throw|throw
name|eee
throw|;
block|}
name|cnt10
operator|++
expr_stmt|;
block|}
do|while
condition|(
literal|true
condition|)
do|;
name|skip
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|token
operator|==
literal|null
operator|&&
name|ruleNestingLevel
operator|==
literal|1
condition|)
block|{
name|emit
argument_list|(
name|_type
argument_list|,
name|_line
argument_list|,
name|_charPosition
argument_list|,
name|_channel
argument_list|,
name|_start
argument_list|,
name|getCharIndex
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|ruleNestingLevel
operator|--
expr_stmt|;
block|}
block|}
comment|// $ANTLR end WS
DECL|method|mTokens ()
specifier|public
name|void
name|mTokens
parameter_list|()
throws|throws
name|RecognitionException
block|{
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:1:10: ( T10 | T11 | T12 | T13 | STRING | ID | INT | ML_COMMENT | SL_COMMENT | WS )
name|int
name|alt11
init|=
literal|10
decl_stmt|;
switch|switch
condition|(
name|input
operator|.
name|LA
argument_list|(
literal|1
argument_list|)
condition|)
block|{
case|case
literal|'f'
case|:
name|int
name|LA11_1
init|=
name|input
operator|.
name|LA
argument_list|(
literal|2
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|LA11_1
operator|==
literal|'r'
operator|)
condition|)
block|{
name|int
name|LA11_10
init|=
name|input
operator|.
name|LA
argument_list|(
literal|3
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|LA11_10
operator|==
literal|'o'
operator|)
condition|)
block|{
name|int
name|LA11_15
init|=
name|input
operator|.
name|LA
argument_list|(
literal|4
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|LA11_15
operator|==
literal|'m'
operator|)
condition|)
block|{
name|int
name|LA11_18
init|=
name|input
operator|.
name|LA
argument_list|(
literal|5
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|LA11_18
operator|>=
literal|'0'
operator|&&
name|LA11_18
operator|<=
literal|'9'
operator|)
operator|||
operator|(
name|LA11_18
operator|>=
literal|'A'
operator|&&
name|LA11_18
operator|<=
literal|'Z'
operator|)
operator|||
name|LA11_18
operator|==
literal|'_'
operator|||
operator|(
name|LA11_18
operator|>=
literal|'a'
operator|&&
name|LA11_18
operator|<=
literal|'z'
operator|)
operator|)
condition|)
block|{
name|alt11
operator|=
literal|6
expr_stmt|;
block|}
else|else
block|{
name|alt11
operator|=
literal|1
expr_stmt|;
block|}
block|}
else|else
block|{
name|alt11
operator|=
literal|6
expr_stmt|;
block|}
block|}
else|else
block|{
name|alt11
operator|=
literal|6
expr_stmt|;
block|}
block|}
else|else
block|{
name|alt11
operator|=
literal|6
expr_stmt|;
block|}
break|break;
case|case
literal|';'
case|:
name|alt11
operator|=
literal|2
expr_stmt|;
break|break;
case|case
literal|'t'
case|:
name|int
name|LA11_3
init|=
name|input
operator|.
name|LA
argument_list|(
literal|2
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|LA11_3
operator|==
literal|'o'
operator|)
condition|)
block|{
name|int
name|LA11_11
init|=
name|input
operator|.
name|LA
argument_list|(
literal|3
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|LA11_11
operator|>=
literal|'0'
operator|&&
name|LA11_11
operator|<=
literal|'9'
operator|)
operator|||
operator|(
name|LA11_11
operator|>=
literal|'A'
operator|&&
name|LA11_11
operator|<=
literal|'Z'
operator|)
operator|||
name|LA11_11
operator|==
literal|'_'
operator|||
operator|(
name|LA11_11
operator|>=
literal|'a'
operator|&&
name|LA11_11
operator|<=
literal|'z'
operator|)
operator|)
condition|)
block|{
name|alt11
operator|=
literal|6
expr_stmt|;
block|}
else|else
block|{
name|alt11
operator|=
literal|3
expr_stmt|;
block|}
block|}
else|else
block|{
name|alt11
operator|=
literal|6
expr_stmt|;
block|}
break|break;
case|case
literal|'p'
case|:
name|int
name|LA11_4
init|=
name|input
operator|.
name|LA
argument_list|(
literal|2
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|LA11_4
operator|==
literal|'r'
operator|)
condition|)
block|{
name|int
name|LA11_12
init|=
name|input
operator|.
name|LA
argument_list|(
literal|3
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|LA11_12
operator|==
literal|'o'
operator|)
condition|)
block|{
name|int
name|LA11_17
init|=
name|input
operator|.
name|LA
argument_list|(
literal|4
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|LA11_17
operator|==
literal|'c'
operator|)
condition|)
block|{
name|int
name|LA11_19
init|=
name|input
operator|.
name|LA
argument_list|(
literal|5
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|LA11_19
operator|==
literal|'e'
operator|)
condition|)
block|{
name|int
name|LA11_21
init|=
name|input
operator|.
name|LA
argument_list|(
literal|6
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|LA11_21
operator|==
literal|'s'
operator|)
condition|)
block|{
name|int
name|LA11_22
init|=
name|input
operator|.
name|LA
argument_list|(
literal|7
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|LA11_22
operator|==
literal|'s'
operator|)
condition|)
block|{
name|int
name|LA11_23
init|=
name|input
operator|.
name|LA
argument_list|(
literal|8
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|LA11_23
operator|>=
literal|'0'
operator|&&
name|LA11_23
operator|<=
literal|'9'
operator|)
operator|||
operator|(
name|LA11_23
operator|>=
literal|'A'
operator|&&
name|LA11_23
operator|<=
literal|'Z'
operator|)
operator|||
name|LA11_23
operator|==
literal|'_'
operator|||
operator|(
name|LA11_23
operator|>=
literal|'a'
operator|&&
name|LA11_23
operator|<=
literal|'z'
operator|)
operator|)
condition|)
block|{
name|alt11
operator|=
literal|6
expr_stmt|;
block|}
else|else
block|{
name|alt11
operator|=
literal|4
expr_stmt|;
block|}
block|}
else|else
block|{
name|alt11
operator|=
literal|6
expr_stmt|;
block|}
block|}
else|else
block|{
name|alt11
operator|=
literal|6
expr_stmt|;
block|}
block|}
else|else
block|{
name|alt11
operator|=
literal|6
expr_stmt|;
block|}
block|}
else|else
block|{
name|alt11
operator|=
literal|6
expr_stmt|;
block|}
block|}
else|else
block|{
name|alt11
operator|=
literal|6
expr_stmt|;
block|}
block|}
else|else
block|{
name|alt11
operator|=
literal|6
expr_stmt|;
block|}
break|break;
case|case
literal|'\"'
case|:
case|case
literal|'\''
case|:
name|alt11
operator|=
literal|5
expr_stmt|;
break|break;
case|case
literal|'A'
case|:
case|case
literal|'B'
case|:
case|case
literal|'C'
case|:
case|case
literal|'D'
case|:
case|case
literal|'E'
case|:
case|case
literal|'F'
case|:
case|case
literal|'G'
case|:
case|case
literal|'H'
case|:
case|case
literal|'I'
case|:
case|case
literal|'J'
case|:
case|case
literal|'K'
case|:
case|case
literal|'L'
case|:
case|case
literal|'M'
case|:
case|case
literal|'N'
case|:
case|case
literal|'O'
case|:
case|case
literal|'P'
case|:
case|case
literal|'Q'
case|:
case|case
literal|'R'
case|:
case|case
literal|'S'
case|:
case|case
literal|'T'
case|:
case|case
literal|'U'
case|:
case|case
literal|'V'
case|:
case|case
literal|'W'
case|:
case|case
literal|'X'
case|:
case|case
literal|'Y'
case|:
case|case
literal|'Z'
case|:
case|case
literal|'^'
case|:
case|case
literal|'_'
case|:
case|case
literal|'a'
case|:
case|case
literal|'b'
case|:
case|case
literal|'c'
case|:
case|case
literal|'d'
case|:
case|case
literal|'e'
case|:
case|case
literal|'g'
case|:
case|case
literal|'h'
case|:
case|case
literal|'i'
case|:
case|case
literal|'j'
case|:
case|case
literal|'k'
case|:
case|case
literal|'l'
case|:
case|case
literal|'m'
case|:
case|case
literal|'n'
case|:
case|case
literal|'o'
case|:
case|case
literal|'q'
case|:
case|case
literal|'r'
case|:
case|case
literal|'s'
case|:
case|case
literal|'u'
case|:
case|case
literal|'v'
case|:
case|case
literal|'w'
case|:
case|case
literal|'x'
case|:
case|case
literal|'y'
case|:
case|case
literal|'z'
case|:
name|alt11
operator|=
literal|6
expr_stmt|;
break|break;
case|case
literal|'0'
case|:
case|case
literal|'1'
case|:
case|case
literal|'2'
case|:
case|case
literal|'3'
case|:
case|case
literal|'4'
case|:
case|case
literal|'5'
case|:
case|case
literal|'6'
case|:
case|case
literal|'7'
case|:
case|case
literal|'8'
case|:
case|case
literal|'9'
case|:
name|alt11
operator|=
literal|7
expr_stmt|;
break|break;
case|case
literal|'/'
case|:
name|int
name|LA11_8
init|=
name|input
operator|.
name|LA
argument_list|(
literal|2
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|LA11_8
operator|==
literal|'/'
operator|)
condition|)
block|{
name|alt11
operator|=
literal|9
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|(
name|LA11_8
operator|==
literal|'*'
operator|)
condition|)
block|{
name|alt11
operator|=
literal|8
expr_stmt|;
block|}
else|else
block|{
name|NoViableAltException
name|nvae
init|=
operator|new
name|NoViableAltException
argument_list|(
literal|"1:1: Tokens : ( T10 | T11 | T12 | T13 | STRING | ID | INT | ML_COMMENT | SL_COMMENT | WS );"
argument_list|,
literal|11
argument_list|,
literal|8
argument_list|,
name|input
argument_list|)
decl_stmt|;
throw|throw
name|nvae
throw|;
block|}
break|break;
case|case
literal|'\t'
case|:
case|case
literal|'\n'
case|:
case|case
literal|'\r'
case|:
case|case
literal|' '
case|:
name|alt11
operator|=
literal|10
expr_stmt|;
break|break;
default|default:
name|NoViableAltException
name|nvae
init|=
operator|new
name|NoViableAltException
argument_list|(
literal|"1:1: Tokens : ( T10 | T11 | T12 | T13 | STRING | ID | INT | ML_COMMENT | SL_COMMENT | WS );"
argument_list|,
literal|11
argument_list|,
literal|0
argument_list|,
name|input
argument_list|)
decl_stmt|;
throw|throw
name|nvae
throw|;
block|}
switch|switch
condition|(
name|alt11
condition|)
block|{
case|case
literal|1
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:1:10: T10
block|{
name|mT10
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
literal|2
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:1:14: T11
block|{
name|mT11
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
literal|3
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:1:18: T12
block|{
name|mT12
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
literal|4
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:1:22: T13
block|{
name|mT13
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
literal|5
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:1:26: STRING
block|{
name|mSTRING
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
literal|6
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:1:33: ID
block|{
name|mID
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
literal|7
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:1:36: INT
block|{
name|mINT
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
literal|8
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:1:40: ML_COMMENT
block|{
name|mML_COMMENT
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
literal|9
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:1:51: SL_COMMENT
block|{
name|mSL_COMMENT
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
literal|10
case|:
comment|// ..//camel.routing/src-gen//org/apache/camel/eclipse/parser/camel.g:1:62: WS
block|{
name|mWS
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
end_class

end_unit

