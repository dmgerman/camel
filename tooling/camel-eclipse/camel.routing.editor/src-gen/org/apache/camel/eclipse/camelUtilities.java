begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.eclipse
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|eclipse
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|antlr
operator|.
name|runtime
operator|.
name|ANTLRInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|antlr
operator|.
name|runtime
operator|.
name|CommonTokenStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|antlr
operator|.
name|runtime
operator|.
name|RecognitionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|antlr
operator|.
name|runtime
operator|.
name|TokenStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|emf
operator|.
name|ecore
operator|.
name|EcorePackage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jface
operator|.
name|text
operator|.
name|rules
operator|.
name|IPartitionTokenScanner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openarchitectureware
operator|.
name|xtext
operator|.
name|AbstractLanguageUtilities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openarchitectureware
operator|.
name|type
operator|.
name|MetaModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openarchitectureware
operator|.
name|type
operator|.
name|emf
operator|.
name|EmfMetaModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openarchitectureware
operator|.
name|xtext
operator|.
name|parser
operator|.
name|EcoreModelFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openarchitectureware
operator|.
name|xtext
operator|.
name|parser
operator|.
name|ParseResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|eclipse
operator|.
name|parser
operator|.
name|camelLexer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|eclipse
operator|.
name|parser
operator|.
name|camelParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Bundle
import|;
end_import

begin_class
DECL|class|camelUtilities
specifier|public
class|class
name|camelUtilities
extends|extends
name|AbstractLanguageUtilities
block|{
DECL|method|getScanner (InputStream reader)
specifier|public
name|TokenStream
name|getScanner
parameter_list|(
name|InputStream
name|reader
parameter_list|)
throws|throws
name|IOException
block|{
name|ANTLRInputStream
name|input
init|=
operator|new
name|ANTLRInputStream
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|camelLexer
name|lexer
init|=
operator|new
name|camelLexer
argument_list|(
name|input
argument_list|)
decl_stmt|;
return|return
operator|new
name|CommonTokenStream
argument_list|(
name|lexer
argument_list|)
return|;
block|}
DECL|method|internalParse (TokenStream scanner, EcoreModelFactory f)
specifier|public
name|ParseResult
name|internalParse
parameter_list|(
name|TokenStream
name|scanner
parameter_list|,
name|EcoreModelFactory
name|f
parameter_list|)
throws|throws
name|RecognitionException
block|{
name|camelParser
name|p
init|=
operator|new
name|camelParser
argument_list|(
name|scanner
argument_list|,
name|f
argument_list|)
decl_stmt|;
return|return
operator|new
name|ParseResult
argument_list|(
name|p
operator|.
name|parse
argument_list|()
argument_list|,
name|p
operator|.
name|getErrors
argument_list|()
argument_list|)
return|;
block|}
DECL|method|getCheckFileName ()
specifier|public
name|String
name|getCheckFileName
parameter_list|()
block|{
return|return
literal|"org::apache::camel::eclipse::camelChecks"
return|;
block|}
DECL|method|getFileExtension ()
specifier|public
name|String
name|getFileExtension
parameter_list|()
block|{
return|return
literal|"camel"
return|;
block|}
DECL|field|mms
specifier|private
name|List
argument_list|<
name|MetaModel
argument_list|>
name|mms
init|=
literal|null
decl_stmt|;
annotation|@
name|Override
DECL|method|getMetaModels ()
specifier|public
name|List
argument_list|<
name|MetaModel
argument_list|>
name|getMetaModels
parameter_list|()
block|{
if|if
condition|(
name|mms
operator|==
literal|null
condition|)
block|{
name|mms
operator|=
operator|new
name|ArrayList
argument_list|<
name|MetaModel
argument_list|>
argument_list|()
expr_stmt|;
name|EmfMetaModel
name|mm
init|=
operator|new
name|EmfMetaModel
argument_list|()
decl_stmt|;
name|mm
operator|.
name|setMetaModelFile
argument_list|(
literal|"org/apache/camel/eclipse/camel.ecore"
argument_list|)
expr_stmt|;
name|mms
operator|.
name|add
argument_list|(
name|mm
argument_list|)
expr_stmt|;
block|}
return|return
name|mms
return|;
block|}
DECL|method|getLabelExtensionsFileName ()
specifier|public
name|String
name|getLabelExtensionsFileName
parameter_list|()
block|{
return|return
literal|"org::apache::camel::eclipse::camelEditorExtensions"
return|;
block|}
DECL|method|getImageExtensionsFileName ()
specifier|public
name|String
name|getImageExtensionsFileName
parameter_list|()
block|{
return|return
literal|"org::apache::camel::eclipse::camelEditorExtensions"
return|;
block|}
DECL|method|allKeywords ()
specifier|public
name|String
index|[]
name|allKeywords
parameter_list|()
block|{
return|return
operator|new
name|String
index|[]
block|{
literal|"process"
block|,
literal|"to"
block|,
literal|"from"
block|}
return|;
block|}
DECL|method|getClassLoader ()
specifier|public
name|ClassLoader
name|getClassLoader
parameter_list|()
block|{
return|return
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
return|;
block|}
DECL|method|getPartitionScanner ()
specifier|public
name|IPartitionTokenScanner
name|getPartitionScanner
parameter_list|()
block|{
return|return
operator|new
name|GeneratedPartitionScanner
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getPluginBundle ()
specifier|public
name|Bundle
name|getPluginBundle
parameter_list|()
block|{
return|return
name|camelEditorPlugin
operator|.
name|getDefault
argument_list|()
operator|.
name|getBundle
argument_list|()
return|;
block|}
block|}
end_class

end_unit

