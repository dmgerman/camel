begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.maven.packaging
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
operator|.
name|packaging
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Holder to keep information about detected errors.  */
end_comment

begin_class
DECL|class|ErrorDetail
specifier|public
specifier|final
class|class
name|ErrorDetail
block|{
DECL|field|kind
specifier|private
name|String
name|kind
decl_stmt|;
DECL|field|missingLabel
specifier|private
name|boolean
name|missingLabel
decl_stmt|;
DECL|field|missingDescription
specifier|private
name|boolean
name|missingDescription
decl_stmt|;
DECL|field|missingSyntax
specifier|private
name|boolean
name|missingSyntax
decl_stmt|;
DECL|field|missingUriPath
specifier|private
name|boolean
name|missingUriPath
decl_stmt|;
DECL|field|missingComponentDocumentation
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|missingComponentDocumentation
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|missingEndpointDocumentation
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|missingEndpointDocumentation
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|hasErrors ()
specifier|public
name|boolean
name|hasErrors
parameter_list|()
block|{
return|return
name|missingLabel
operator|||
name|missingDescription
operator|||
name|missingSyntax
operator|||
name|missingUriPath
operator|||
operator|!
name|missingComponentDocumentation
operator|.
name|isEmpty
argument_list|()
operator|||
operator|!
name|missingEndpointDocumentation
operator|.
name|isEmpty
argument_list|()
return|;
block|}
DECL|method|getKind ()
specifier|public
name|String
name|getKind
parameter_list|()
block|{
return|return
name|kind
return|;
block|}
DECL|method|setKind (String kind)
specifier|public
name|void
name|setKind
parameter_list|(
name|String
name|kind
parameter_list|)
block|{
name|this
operator|.
name|kind
operator|=
name|kind
expr_stmt|;
block|}
DECL|method|isMissingUriPath ()
specifier|public
name|boolean
name|isMissingUriPath
parameter_list|()
block|{
return|return
name|missingUriPath
return|;
block|}
DECL|method|setMissingUriPath (boolean missingUriPath)
specifier|public
name|void
name|setMissingUriPath
parameter_list|(
name|boolean
name|missingUriPath
parameter_list|)
block|{
name|this
operator|.
name|missingUriPath
operator|=
name|missingUriPath
expr_stmt|;
block|}
DECL|method|isMissingLabel ()
specifier|public
name|boolean
name|isMissingLabel
parameter_list|()
block|{
return|return
name|missingLabel
return|;
block|}
DECL|method|setMissingLabel (boolean missingLabel)
specifier|public
name|void
name|setMissingLabel
parameter_list|(
name|boolean
name|missingLabel
parameter_list|)
block|{
name|this
operator|.
name|missingLabel
operator|=
name|missingLabel
expr_stmt|;
block|}
DECL|method|isMissingDescription ()
specifier|public
name|boolean
name|isMissingDescription
parameter_list|()
block|{
return|return
name|missingDescription
return|;
block|}
DECL|method|setMissingDescription (boolean missingDescription)
specifier|public
name|void
name|setMissingDescription
parameter_list|(
name|boolean
name|missingDescription
parameter_list|)
block|{
name|this
operator|.
name|missingDescription
operator|=
name|missingDescription
expr_stmt|;
block|}
DECL|method|isMissingSyntax ()
specifier|public
name|boolean
name|isMissingSyntax
parameter_list|()
block|{
return|return
name|missingSyntax
return|;
block|}
DECL|method|setMissingSyntax (boolean missingSyntax)
specifier|public
name|void
name|setMissingSyntax
parameter_list|(
name|boolean
name|missingSyntax
parameter_list|)
block|{
name|this
operator|.
name|missingSyntax
operator|=
name|missingSyntax
expr_stmt|;
block|}
DECL|method|addMissingComponentDoc (String option)
specifier|public
name|void
name|addMissingComponentDoc
parameter_list|(
name|String
name|option
parameter_list|)
block|{
name|missingComponentDocumentation
operator|.
name|add
argument_list|(
name|option
argument_list|)
expr_stmt|;
block|}
DECL|method|addMissingEndpointDoc (String option)
specifier|public
name|void
name|addMissingEndpointDoc
parameter_list|(
name|String
name|option
parameter_list|)
block|{
name|missingEndpointDocumentation
operator|.
name|add
argument_list|(
name|option
argument_list|)
expr_stmt|;
block|}
DECL|method|getMissingComponentDocumentation ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getMissingComponentDocumentation
parameter_list|()
block|{
return|return
name|missingComponentDocumentation
return|;
block|}
DECL|method|getMissingEndpointDocumentation ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getMissingEndpointDocumentation
parameter_list|()
block|{
return|return
name|missingEndpointDocumentation
return|;
block|}
block|}
end_class

end_unit

