begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.maven.packaging.generics
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
operator|.
name|packaging
operator|.
name|generics
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|GenericArrayType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_class
DECL|class|OwbGenericArrayTypeImpl
specifier|public
class|class
name|OwbGenericArrayTypeImpl
implements|implements
name|GenericArrayType
block|{
DECL|field|componentType
specifier|private
name|Type
name|componentType
decl_stmt|;
DECL|method|OwbGenericArrayTypeImpl (Type componentType)
specifier|public
name|OwbGenericArrayTypeImpl
parameter_list|(
name|Type
name|componentType
parameter_list|)
block|{
name|this
operator|.
name|componentType
operator|=
name|componentType
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getGenericComponentType ()
specifier|public
name|Type
name|getGenericComponentType
parameter_list|()
block|{
return|return
name|componentType
return|;
block|}
comment|/*      * (non-Javadoc)      * @see java.lang.Object#hashCode()      */
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|componentType
operator|.
name|hashCode
argument_list|()
return|;
block|}
comment|/*      * (non-Javadoc)      * @see java.lang.Object#equals(java.lang.Object)      */
annotation|@
name|Override
DECL|method|equals (Object obj)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|obj
condition|)
block|{
return|return
literal|true
return|;
block|}
elseif|else
if|if
condition|(
name|obj
operator|instanceof
name|GenericArrayType
condition|)
block|{
return|return
operator|(
operator|(
name|GenericArrayType
operator|)
name|obj
operator|)
operator|.
name|getGenericComponentType
argument_list|()
operator|.
name|equals
argument_list|(
name|componentType
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|componentType
operator|+
literal|"[]"
return|;
block|}
block|}
end_class

end_unit

