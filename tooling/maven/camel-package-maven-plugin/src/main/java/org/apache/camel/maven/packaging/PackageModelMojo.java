begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.maven.packaging
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
operator|.
name|packaging
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|MojoExecutionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|MojoFailureException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugins
operator|.
name|annotations
operator|.
name|Mojo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugins
operator|.
name|annotations
operator|.
name|Parameter
import|;
end_import

begin_comment
comment|/**  * Analyses the Camel EIPs in a project and generates extra descriptor information for easier auto-discovery in Camel.  */
end_comment

begin_class
annotation|@
name|Mojo
argument_list|(
name|name
operator|=
literal|"generate-eips-list"
argument_list|,
name|threadSafe
operator|=
literal|true
argument_list|)
DECL|class|PackageModelMojo
specifier|public
class|class
name|PackageModelMojo
extends|extends
name|AbstractGeneratorMojo
block|{
comment|/**      * The camel-core directory      */
annotation|@
name|Parameter
argument_list|(
name|defaultValue
operator|=
literal|"${project.build.directory}"
argument_list|)
DECL|field|buildDir
specifier|protected
name|File
name|buildDir
decl_stmt|;
comment|/**      * The output directory for generated models file      */
annotation|@
name|Parameter
argument_list|(
name|defaultValue
operator|=
literal|"${project.build.directory}/generated/camel/models"
argument_list|)
DECL|field|outDir
specifier|protected
name|File
name|outDir
decl_stmt|;
comment|/**      * Execute goal.      *      * @throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the      *                 threads it generated failed.      * @throws org.apache.maven.plugin.MojoFailureException something bad happened...      */
DECL|method|execute ()
specifier|public
name|void
name|execute
parameter_list|()
throws|throws
name|MojoExecutionException
throws|,
name|MojoFailureException
block|{
name|File
name|camelMetaDir
init|=
operator|new
name|File
argument_list|(
name|outDir
argument_list|,
literal|"META-INF/services/org/apache/camel/"
argument_list|)
decl_stmt|;
name|camelMetaDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|Set
argument_list|<
name|File
argument_list|>
name|jsonFiles
init|=
operator|new
name|TreeSet
argument_list|<>
argument_list|()
decl_stmt|;
comment|// find all json files in camel-core
if|if
condition|(
name|buildDir
operator|!=
literal|null
operator|&&
name|buildDir
operator|.
name|isDirectory
argument_list|()
condition|)
block|{
name|File
name|target
init|=
operator|new
name|File
argument_list|(
name|buildDir
argument_list|,
literal|"classes/org/apache/camel/model"
argument_list|)
decl_stmt|;
name|PackageHelper
operator|.
name|findJsonFiles
argument_list|(
name|target
argument_list|,
name|jsonFiles
argument_list|,
operator|new
name|PackageHelper
operator|.
name|CamelComponentsModelFilter
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|String
argument_list|>
name|models
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
comment|// sort the names
for|for
control|(
name|File
name|file
range|:
name|jsonFiles
control|)
block|{
name|String
name|name
init|=
name|file
operator|.
name|getName
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|endsWith
argument_list|(
literal|".json"
argument_list|)
condition|)
block|{
comment|// strip out .json from the name
name|String
name|modelName
init|=
name|name
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|name
operator|.
name|length
argument_list|()
operator|-
literal|5
argument_list|)
decl_stmt|;
name|models
operator|.
name|add
argument_list|(
name|modelName
argument_list|)
expr_stmt|;
block|}
block|}
name|Collections
operator|.
name|sort
argument_list|(
name|models
argument_list|)
expr_stmt|;
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"# "
operator|+
name|GENERATED_MSG
operator|+
name|NL
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|name
range|:
name|models
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|name
argument_list|)
operator|.
name|append
argument_list|(
name|NL
argument_list|)
expr_stmt|;
block|}
name|Path
name|outFile
init|=
name|camelMetaDir
operator|.
name|toPath
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"model.properties"
argument_list|)
decl_stmt|;
name|updateResource
argument_list|(
name|outFile
argument_list|,
name|sb
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|getLog
argument_list|()
operator|.
name|info
argument_list|(
literal|"Generated "
operator|+
name|outFile
operator|+
literal|" containing "
operator|+
name|models
operator|.
name|size
argument_list|()
operator|+
literal|" Camel models"
argument_list|)
expr_stmt|;
name|addResourceDirectory
argument_list|(
name|outDir
operator|.
name|toPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

