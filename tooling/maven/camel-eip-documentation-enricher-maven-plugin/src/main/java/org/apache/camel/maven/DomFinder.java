begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.maven
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPath
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPathConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPathExpressionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_comment
comment|/**  * Finds xml elements where documentation can be added.  */
end_comment

begin_class
DECL|class|DomFinder
specifier|public
class|class
name|DomFinder
block|{
DECL|method|findElementsAndTypes (Document document, XPath xPath)
specifier|public
name|NodeList
name|findElementsAndTypes
parameter_list|(
name|Document
name|document
parameter_list|,
name|XPath
name|xPath
parameter_list|)
throws|throws
name|XPathExpressionException
block|{
return|return
operator|(
name|NodeList
operator|)
name|xPath
operator|.
name|compile
argument_list|(
literal|"/xs:schema/xs:element"
argument_list|)
operator|.
name|evaluate
argument_list|(
name|document
argument_list|,
name|XPathConstants
operator|.
name|NODESET
argument_list|)
return|;
block|}
DECL|method|findAttributesElements (Document document, XPath xPath, String name)
specifier|public
name|NodeList
name|findAttributesElements
parameter_list|(
name|Document
name|document
parameter_list|,
name|XPath
name|xPath
parameter_list|,
name|String
name|name
parameter_list|)
throws|throws
name|XPathExpressionException
block|{
return|return
operator|(
name|NodeList
operator|)
name|xPath
operator|.
name|compile
argument_list|(
literal|"/xs:schema/xs:complexType[@name='"
operator|+
name|name
operator|+
literal|"']//xs:attribute"
argument_list|)
operator|.
name|evaluate
argument_list|(
name|document
argument_list|,
name|XPathConstants
operator|.
name|NODESET
argument_list|)
return|;
block|}
DECL|method|findBaseType (Document document, XPath xPath, String name)
specifier|public
name|String
name|findBaseType
parameter_list|(
name|Document
name|document
parameter_list|,
name|XPath
name|xPath
parameter_list|,
name|String
name|name
parameter_list|)
throws|throws
name|XPathExpressionException
block|{
return|return
operator|(
name|String
operator|)
name|xPath
operator|.
name|compile
argument_list|(
literal|"/xs:schema/xs:complexType[@name='"
operator|+
name|name
operator|+
literal|"']//xs:extension/@base"
argument_list|)
operator|.
name|evaluate
argument_list|(
name|document
argument_list|,
name|XPathConstants
operator|.
name|STRING
argument_list|)
return|;
block|}
block|}
end_class

end_unit

