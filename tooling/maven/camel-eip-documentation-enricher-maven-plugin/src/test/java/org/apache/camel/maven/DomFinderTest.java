begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.maven
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPath
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
DECL|class|DomFinderTest
specifier|public
class|class
name|DomFinderTest
block|{
DECL|field|domFinder
specifier|private
name|DomFinder
name|domFinder
decl_stmt|;
annotation|@
name|Test
DECL|method|testFindElementsAndTypes ()
specifier|public
name|void
name|testFindElementsAndTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|Document
name|document
init|=
name|XmlHelper
operator|.
name|buildNamespaceAwareDocument
argument_list|(
name|ResourceUtils
operator|.
name|getResourceAsFile
argument_list|(
literal|"xmls/3_elements.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|XPath
name|xPath
init|=
name|XmlHelper
operator|.
name|buildXPath
argument_list|(
operator|new
name|CamelSpringNamespace
argument_list|()
argument_list|)
decl_stmt|;
name|domFinder
operator|=
operator|new
name|DomFinder
argument_list|(
name|document
argument_list|,
name|xPath
argument_list|)
expr_stmt|;
name|NodeList
name|elements
init|=
name|domFinder
operator|.
name|findElementsAndTypes
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|elements
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFindAttributesElements ()
specifier|public
name|void
name|testFindAttributesElements
parameter_list|()
throws|throws
name|Exception
block|{
name|Document
name|document
init|=
name|XmlHelper
operator|.
name|buildNamespaceAwareDocument
argument_list|(
name|ResourceUtils
operator|.
name|getResourceAsFile
argument_list|(
literal|"xmls/complex_type.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|XPath
name|xPath
init|=
name|XmlHelper
operator|.
name|buildXPath
argument_list|(
operator|new
name|CamelSpringNamespace
argument_list|()
argument_list|)
decl_stmt|;
name|domFinder
operator|=
operator|new
name|DomFinder
argument_list|(
name|document
argument_list|,
name|xPath
argument_list|)
expr_stmt|;
name|NodeList
name|attributesList
init|=
name|domFinder
operator|.
name|findAttributesElements
argument_list|(
literal|"interceptSendToEndpointDefinition"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|attributesList
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"uri"
argument_list|,
operator|(
operator|(
name|Element
operator|)
name|attributesList
operator|.
name|item
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getAttribute
argument_list|(
name|Constants
operator|.
name|NAME_ATTRIBUTE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"skipSendToOriginalEndpoint"
argument_list|,
operator|(
operator|(
name|Element
operator|)
name|attributesList
operator|.
name|item
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getAttribute
argument_list|(
name|Constants
operator|.
name|NAME_ATTRIBUTE_NAME
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFindBaseType ()
specifier|public
name|void
name|testFindBaseType
parameter_list|()
throws|throws
name|Exception
block|{
name|Document
name|document
init|=
name|XmlHelper
operator|.
name|buildNamespaceAwareDocument
argument_list|(
name|ResourceUtils
operator|.
name|getResourceAsFile
argument_list|(
literal|"xmls/complex_type_w_parent.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|XPath
name|xPath
init|=
name|XmlHelper
operator|.
name|buildXPath
argument_list|(
operator|new
name|CamelSpringNamespace
argument_list|()
argument_list|)
decl_stmt|;
name|domFinder
operator|=
operator|new
name|DomFinder
argument_list|(
name|document
argument_list|,
name|xPath
argument_list|)
expr_stmt|;
name|String
name|baseTypeName
init|=
name|domFinder
operator|.
name|findBaseType
argument_list|(
literal|"keyManagersParametersFactoryBean"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"tns:abstractKeyManagersParametersFactoryBean"
argument_list|,
name|baseTypeName
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

