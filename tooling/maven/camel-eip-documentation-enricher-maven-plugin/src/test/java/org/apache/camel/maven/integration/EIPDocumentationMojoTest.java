begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.maven.integration
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
operator|.
name|integration
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPath
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPathConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPathFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|CharacterData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
operator|.
name|CamelSpringNamespace
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
operator|.
name|EipDocumentationEnricherMojo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
operator|.
name|ResourceUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|containsString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|instanceOf
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_class
DECL|class|EIPDocumentationMojoTest
specifier|public
class|class
name|EIPDocumentationMojoTest
block|{
DECL|field|eipDocumentationEnricherMojo
name|EipDocumentationEnricherMojo
name|eipDocumentationEnricherMojo
init|=
operator|new
name|EipDocumentationEnricherMojo
argument_list|()
decl_stmt|;
DECL|field|xPath
name|XPath
name|xPath
init|=
name|XPathFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|newXPath
argument_list|()
decl_stmt|;
DECL|field|tempFile
name|File
name|tempFile
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|eipDocumentationEnricherMojo
operator|.
name|camelCoreDir
operator|=
name|ResourceUtils
operator|.
name|getResourceAsFile
argument_list|(
literal|"integration/camel-core-integration"
argument_list|)
expr_stmt|;
name|eipDocumentationEnricherMojo
operator|.
name|inputCamelSchemaFile
operator|=
name|ResourceUtils
operator|.
name|getResourceAsFile
argument_list|(
literal|"integration/camel-spring.xsd"
argument_list|)
expr_stmt|;
name|eipDocumentationEnricherMojo
operator|.
name|pathToModelDir
operator|=
literal|"trgt/classes/org/apache/camel/model"
expr_stmt|;
name|xPath
operator|.
name|setNamespaceContext
argument_list|(
operator|new
name|CamelSpringNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|tempFile
operator|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"outputXml"
argument_list|,
literal|".xml"
argument_list|)
expr_stmt|;
name|tempFile
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
name|eipDocumentationEnricherMojo
operator|.
name|outputCamelSchemaFile
operator|=
name|tempFile
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testExecuteMojo ()
specifier|public
name|void
name|testExecuteMojo
parameter_list|()
throws|throws
name|Exception
block|{
name|eipDocumentationEnricherMojo
operator|.
name|execute
argument_list|()
expr_stmt|;
name|DocumentBuilderFactory
name|documentBuilderFactory
init|=
name|DocumentBuilderFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|documentBuilderFactory
operator|.
name|setNamespaceAware
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|DocumentBuilder
name|documentBuilder
init|=
name|documentBuilderFactory
operator|.
name|newDocumentBuilder
argument_list|()
decl_stmt|;
name|Document
name|doc
init|=
name|documentBuilder
operator|.
name|parse
argument_list|(
name|tempFile
argument_list|)
decl_stmt|;
name|validateElement
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|validateAttributes
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|validateParentAttribute
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
DECL|method|validateParentAttribute (Document doc)
specifier|private
name|void
name|validateParentAttribute
parameter_list|(
name|Document
name|doc
parameter_list|)
throws|throws
name|Exception
block|{
name|Element
name|e
init|=
operator|(
name|Element
operator|)
name|xPath
operator|.
name|compile
argument_list|(
literal|"//xs:attribute[@name='id']"
argument_list|)
operator|.
name|evaluate
argument_list|(
name|doc
argument_list|,
name|XPathConstants
operator|.
name|NODE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"id"
argument_list|,
name|e
operator|.
name|getAttribute
argument_list|(
name|Constants
operator|.
name|NAME_ATTRIBUTE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|validateDocumentation
argument_list|(
name|e
argument_list|,
literal|"id documentation"
argument_list|)
expr_stmt|;
block|}
DECL|method|validateAttributes (Document doc)
specifier|private
name|void
name|validateAttributes
parameter_list|(
name|Document
name|doc
parameter_list|)
throws|throws
name|Exception
block|{
name|Element
name|e
init|=
operator|(
name|Element
operator|)
name|xPath
operator|.
name|compile
argument_list|(
literal|"//xs:attribute[@name='beforeUri']"
argument_list|)
operator|.
name|evaluate
argument_list|(
name|doc
argument_list|,
name|XPathConstants
operator|.
name|NODE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"beforeUri"
argument_list|,
name|e
operator|.
name|getAttribute
argument_list|(
name|Constants
operator|.
name|NAME_ATTRIBUTE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|validateDocumentation
argument_list|(
name|e
argument_list|,
literal|"beforeUri documentation"
argument_list|)
expr_stmt|;
block|}
DECL|method|validateElement (Document doc)
specifier|private
name|void
name|validateElement
parameter_list|(
name|Document
name|doc
parameter_list|)
block|{
name|NodeList
name|element
init|=
name|doc
operator|.
name|getElementsByTagName
argument_list|(
literal|"xs:element"
argument_list|)
decl_stmt|;
name|Element
name|e
init|=
operator|(
operator|(
name|Element
operator|)
name|element
operator|.
name|item
argument_list|(
literal|0
argument_list|)
operator|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"aop"
argument_list|,
name|e
operator|.
name|getAttribute
argument_list|(
name|Constants
operator|.
name|NAME_ATTRIBUTE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|validateDocumentation
argument_list|(
name|e
argument_list|,
literal|"element documentation"
argument_list|)
expr_stmt|;
block|}
DECL|method|validateDocumentation (Element element, String expectedText)
specifier|private
name|void
name|validateDocumentation
parameter_list|(
name|Element
name|element
parameter_list|,
name|String
name|expectedText
parameter_list|)
block|{
name|Element
name|annotation
init|=
name|getFirsElement
argument_list|(
name|element
operator|.
name|getChildNodes
argument_list|()
argument_list|)
decl_stmt|;
name|Element
name|documentation
init|=
name|getFirsElement
argument_list|(
name|annotation
operator|.
name|getChildNodes
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"xs:annotation"
argument_list|,
name|annotation
operator|.
name|getTagName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"xs:documentation"
argument_list|,
name|documentation
operator|.
name|getTagName
argument_list|()
argument_list|)
expr_stmt|;
name|Node
name|cdata
init|=
name|documentation
operator|.
name|getFirstChild
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|cdata
argument_list|,
name|instanceOf
argument_list|(
name|CharacterData
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|cdata
operator|.
name|getTextContent
argument_list|()
argument_list|,
name|containsString
argument_list|(
name|expectedText
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getFirsElement (NodeList nodeList)
specifier|private
name|Element
name|getFirsElement
parameter_list|(
name|NodeList
name|nodeList
parameter_list|)
block|{
return|return
operator|(
name|Element
operator|)
name|nodeList
operator|.
name|item
argument_list|(
literal|1
argument_list|)
return|;
block|}
block|}
end_class

end_unit

