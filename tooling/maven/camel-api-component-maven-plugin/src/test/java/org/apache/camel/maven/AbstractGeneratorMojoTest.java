begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.maven
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|DependencyResolutionRequiredException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|model
operator|.
name|Build
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|model
operator|.
name|Model
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|project
operator|.
name|MavenProject
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * Base class for Generator MOJO tests.  */
end_comment

begin_class
DECL|class|AbstractGeneratorMojoTest
specifier|public
specifier|abstract
class|class
name|AbstractGeneratorMojoTest
block|{
DECL|field|OUT_DIR
specifier|protected
specifier|static
specifier|final
name|String
name|OUT_DIR
init|=
literal|"target/generated-test-sources/camel-component"
decl_stmt|;
DECL|field|COMPONENT_PACKAGE
specifier|protected
specifier|static
specifier|final
name|String
name|COMPONENT_PACKAGE
init|=
literal|"org.apache.camel.component.test"
decl_stmt|;
DECL|field|OUT_PACKAGE
specifier|protected
specifier|static
specifier|final
name|String
name|OUT_PACKAGE
init|=
name|COMPONENT_PACKAGE
operator|+
literal|".internal"
decl_stmt|;
DECL|field|PACKAGE_PATH
specifier|protected
specifier|static
specifier|final
name|String
name|PACKAGE_PATH
init|=
name|OUT_PACKAGE
operator|.
name|replaceAll
argument_list|(
literal|"\\."
argument_list|,
literal|"/"
argument_list|)
operator|+
literal|"/"
decl_stmt|;
DECL|field|COMPONENT_PACKAGE_PATH
specifier|protected
specifier|static
specifier|final
name|String
name|COMPONENT_PACKAGE_PATH
init|=
name|COMPONENT_PACKAGE
operator|.
name|replaceAll
argument_list|(
literal|"\\."
argument_list|,
literal|"/"
argument_list|)
operator|+
literal|"/"
decl_stmt|;
DECL|field|COMPONENT_NAME
specifier|protected
specifier|static
specifier|final
name|String
name|COMPONENT_NAME
init|=
literal|"Test"
decl_stmt|;
DECL|field|SCHEME
specifier|protected
specifier|static
specifier|final
name|String
name|SCHEME
init|=
literal|"testComponent"
decl_stmt|;
DECL|method|assertExists (File outFile)
specifier|protected
name|void
name|assertExists
parameter_list|(
name|File
name|outFile
parameter_list|)
block|{
name|assertTrue
argument_list|(
literal|"Generated file not found "
operator|+
name|outFile
operator|.
name|getPath
argument_list|()
argument_list|,
name|outFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|configureSourceGeneratorMojo (AbstractSourceGeneratorMojo mojo)
specifier|protected
name|void
name|configureSourceGeneratorMojo
parameter_list|(
name|AbstractSourceGeneratorMojo
name|mojo
parameter_list|)
block|{
name|configureGeneratorMojo
argument_list|(
name|mojo
argument_list|)
expr_stmt|;
name|mojo
operator|.
name|generatedSrcDir
operator|=
operator|new
name|File
argument_list|(
name|OUT_DIR
argument_list|)
expr_stmt|;
name|mojo
operator|.
name|generatedTestDir
operator|=
operator|new
name|File
argument_list|(
name|OUT_DIR
argument_list|)
expr_stmt|;
block|}
DECL|method|configureGeneratorMojo (AbstractGeneratorMojo mojo)
specifier|protected
name|void
name|configureGeneratorMojo
parameter_list|(
name|AbstractGeneratorMojo
name|mojo
parameter_list|)
block|{
name|mojo
operator|.
name|componentName
operator|=
name|COMPONENT_NAME
expr_stmt|;
name|mojo
operator|.
name|scheme
operator|=
name|SCHEME
expr_stmt|;
name|mojo
operator|.
name|outPackage
operator|=
name|OUT_PACKAGE
expr_stmt|;
name|mojo
operator|.
name|componentPackage
operator|=
name|COMPONENT_PACKAGE
expr_stmt|;
name|mojo
operator|.
name|project
operator|=
operator|new
name|MavenProject
argument_list|(
operator|(
name|Model
operator|)
literal|null
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|List
name|getTestClasspathElements
parameter_list|()
throws|throws
name|DependencyResolutionRequiredException
block|{
return|return
name|Collections
operator|.
name|EMPTY_LIST
return|;
block|}
annotation|@
name|Override
specifier|public
name|Build
name|getBuild
parameter_list|()
block|{
return|return
operator|new
name|Build
argument_list|()
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
annotation|@
name|Override
specifier|public
name|String
name|getTestSourceDirectory
parameter_list|()
block|{
return|return
name|OUT_DIR
return|;
block|}
block|}
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getGroupId
parameter_list|()
block|{
return|return
literal|"org.apache.camel.component"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getArtifactId
parameter_list|()
block|{
return|return
literal|"camel-test"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getVersion
parameter_list|()
block|{
return|return
literal|"1.0-SNAPSHOT"
return|;
block|}
block|}
expr_stmt|;
block|}
block|}
end_class

end_unit

