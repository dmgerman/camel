begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Camel ApiMethod Enumeration generated by camel-component-util-maven-plugin  * Generated on: Fri May 23 17:35:21 PDT 2014  */
end_comment

begin_package
DECL|package|org.apache.camel.maven
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
operator|.
name|TestProxy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|component
operator|.
name|ApiMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|component
operator|.
name|ApiMethodImpl
import|;
end_import

begin_comment
comment|/**  * Camel {@link ApiMethod} Enumeration for org.apache.camel.maven.TestProxy  */
end_comment

begin_enum
DECL|enum|TestProxyApiMethod
specifier|public
enum|enum
name|TestProxyApiMethod
implements|implements
name|ApiMethod
block|{
DECL|enumConstant|GREETALL
name|GREETALL
argument_list|(
name|java
operator|.
name|lang
operator|.
name|String
operator|.
name|class
argument_list|,
literal|"greetAll"
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[
literal|0
index|]
operator|.
name|getClass
argument_list|()
argument_list|,
literal|"names"
argument_list|)
block|,
DECL|enumConstant|GREETALL_1
name|GREETALL_1
argument_list|(
name|java
operator|.
name|lang
operator|.
name|String
operator|.
name|class
argument_list|,
literal|"greetAll"
argument_list|,
name|java
operator|.
name|util
operator|.
name|List
operator|.
name|class
argument_list|,
literal|"namesList"
argument_list|)
block|,
DECL|enumConstant|GREETME
name|GREETME
argument_list|(
name|java
operator|.
name|lang
operator|.
name|String
operator|.
name|class
argument_list|,
literal|"greetMe"
argument_list|,
name|java
operator|.
name|lang
operator|.
name|String
operator|.
name|class
argument_list|,
literal|"name"
argument_list|)
block|,
DECL|enumConstant|GREETTIMES
name|GREETTIMES
argument_list|(
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[
literal|0
index|]
operator|.
name|getClass
argument_list|()
argument_list|,
literal|"greetTimes"
argument_list|,
name|java
operator|.
name|lang
operator|.
name|String
operator|.
name|class
argument_list|,
literal|"name"
argument_list|,
name|int
operator|.
name|class
argument_list|,
literal|"times"
argument_list|)
block|,
DECL|enumConstant|GREETUS
name|GREETUS
argument_list|(
name|java
operator|.
name|lang
operator|.
name|String
operator|.
name|class
argument_list|,
literal|"greetUs"
argument_list|,
name|java
operator|.
name|lang
operator|.
name|String
operator|.
name|class
argument_list|,
literal|"name1"
argument_list|,
name|java
operator|.
name|lang
operator|.
name|String
operator|.
name|class
argument_list|,
literal|"name2"
argument_list|)
block|,
DECL|enumConstant|SAYHI
name|SAYHI
argument_list|(
name|java
operator|.
name|lang
operator|.
name|String
operator|.
name|class
argument_list|,
literal|"sayHi"
argument_list|)
block|,
DECL|enumConstant|SAYHI_1
name|SAYHI_1
argument_list|(
name|java
operator|.
name|lang
operator|.
name|String
operator|.
name|class
argument_list|,
literal|"sayHi"
argument_list|,
name|java
operator|.
name|lang
operator|.
name|String
operator|.
name|class
argument_list|,
literal|"name"
argument_list|)
block|;
DECL|field|apiMethod
specifier|private
specifier|final
name|ApiMethod
name|apiMethod
decl_stmt|;
DECL|method|TestProxyApiMethod (Class<?> resultType, String name, Object... args)
specifier|private
name|TestProxyApiMethod
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|resultType
parameter_list|,
name|String
name|name
parameter_list|,
name|Object
modifier|...
name|args
parameter_list|)
block|{
name|this
operator|.
name|apiMethod
operator|=
operator|new
name|ApiMethodImpl
argument_list|(
name|TestProxy
operator|.
name|class
argument_list|,
name|resultType
argument_list|,
name|name
argument_list|,
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|apiMethod
operator|.
name|getName
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getResultType ()
specifier|public
name|Class
argument_list|<
name|?
argument_list|>
name|getResultType
parameter_list|()
block|{
return|return
name|apiMethod
operator|.
name|getResultType
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getArgNames ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getArgNames
parameter_list|()
block|{
return|return
name|apiMethod
operator|.
name|getArgNames
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getArgTypes ()
specifier|public
name|List
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|getArgTypes
parameter_list|()
block|{
return|return
name|apiMethod
operator|.
name|getArgTypes
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getMethod ()
specifier|public
name|Method
name|getMethod
parameter_list|()
block|{
return|return
name|apiMethod
operator|.
name|getMethod
argument_list|()
return|;
block|}
block|}
end_enum

end_unit

