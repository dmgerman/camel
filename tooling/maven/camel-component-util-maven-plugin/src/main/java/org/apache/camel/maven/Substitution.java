begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.maven
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
package|;
end_package

begin_comment
comment|/**  * Argument name substitution for {@link FileApiMethodGeneratorMojo}.  */
end_comment

begin_class
DECL|class|Substitution
specifier|public
class|class
name|Substitution
block|{
DECL|field|method
specifier|public
name|String
name|method
decl_stmt|;
DECL|field|argName
specifier|private
name|String
name|argName
decl_stmt|;
DECL|field|argType
specifier|private
name|String
name|argType
decl_stmt|;
DECL|field|replacement
specifier|private
name|String
name|replacement
decl_stmt|;
DECL|method|Substitution ()
specifier|public
name|Substitution
parameter_list|()
block|{     }
DECL|method|Substitution (String method, String argName, String argType, String replacement)
specifier|public
name|Substitution
parameter_list|(
name|String
name|method
parameter_list|,
name|String
name|argName
parameter_list|,
name|String
name|argType
parameter_list|,
name|String
name|replacement
parameter_list|)
block|{
name|this
operator|.
name|method
operator|=
name|method
expr_stmt|;
name|this
operator|.
name|argName
operator|=
name|argName
expr_stmt|;
name|this
operator|.
name|argType
operator|=
name|argType
expr_stmt|;
name|this
operator|.
name|replacement
operator|=
name|replacement
expr_stmt|;
block|}
DECL|method|getMethod ()
specifier|public
name|String
name|getMethod
parameter_list|()
block|{
return|return
name|method
return|;
block|}
DECL|method|setMethod (String method)
specifier|public
name|void
name|setMethod
parameter_list|(
name|String
name|method
parameter_list|)
block|{
name|this
operator|.
name|method
operator|=
name|method
expr_stmt|;
block|}
DECL|method|getArgName ()
specifier|public
name|String
name|getArgName
parameter_list|()
block|{
return|return
name|argName
return|;
block|}
DECL|method|setArgName (String argName)
specifier|public
name|void
name|setArgName
parameter_list|(
name|String
name|argName
parameter_list|)
block|{
name|this
operator|.
name|argName
operator|=
name|argName
expr_stmt|;
block|}
DECL|method|getArgType ()
specifier|public
name|String
name|getArgType
parameter_list|()
block|{
return|return
name|argType
return|;
block|}
DECL|method|setArgType (String argType)
specifier|public
name|void
name|setArgType
parameter_list|(
name|String
name|argType
parameter_list|)
block|{
name|this
operator|.
name|argType
operator|=
name|argType
expr_stmt|;
block|}
DECL|method|getReplacement ()
specifier|public
name|String
name|getReplacement
parameter_list|()
block|{
return|return
name|replacement
return|;
block|}
DECL|method|setReplacement (String replacement)
specifier|public
name|void
name|setReplacement
parameter_list|(
name|String
name|replacement
parameter_list|)
block|{
name|this
operator|.
name|replacement
operator|=
name|replacement
expr_stmt|;
block|}
block|}
end_class

end_unit

