begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.maven
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|maven
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Represents an API to use for generating Camel Component.  */
end_comment

begin_class
DECL|class|ApiProxy
specifier|public
class|class
name|ApiProxy
block|{
DECL|field|apiName
specifier|private
name|String
name|apiName
decl_stmt|;
DECL|field|proxyClass
specifier|private
name|String
name|proxyClass
decl_stmt|;
DECL|field|substitutions
specifier|private
name|Substitution
index|[]
name|substitutions
init|=
operator|new
name|Substitution
index|[
literal|0
index|]
decl_stmt|;
DECL|field|excludePackages
specifier|private
name|String
name|excludePackages
init|=
name|JavadocApiMethodGeneratorMojo
operator|.
name|DEFAULT_EXCLUDE_PACKAGES
decl_stmt|;
DECL|field|excludeClasses
specifier|private
name|String
name|excludeClasses
decl_stmt|;
DECL|field|signatureFile
specifier|private
name|File
name|signatureFile
decl_stmt|;
DECL|field|aliases
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|aliases
init|=
name|Collections
operator|.
name|EMPTY_MAP
decl_stmt|;
DECL|method|getApiName ()
specifier|public
name|String
name|getApiName
parameter_list|()
block|{
return|return
name|apiName
return|;
block|}
DECL|method|setApiName (String apiName)
specifier|public
name|void
name|setApiName
parameter_list|(
name|String
name|apiName
parameter_list|)
block|{
name|this
operator|.
name|apiName
operator|=
name|apiName
expr_stmt|;
block|}
DECL|method|getProxyClass ()
specifier|public
name|String
name|getProxyClass
parameter_list|()
block|{
return|return
name|proxyClass
return|;
block|}
DECL|method|setProxyClass (String proxyClass)
specifier|public
name|void
name|setProxyClass
parameter_list|(
name|String
name|proxyClass
parameter_list|)
block|{
name|this
operator|.
name|proxyClass
operator|=
name|proxyClass
expr_stmt|;
block|}
DECL|method|getSubstitutions ()
specifier|public
name|Substitution
index|[]
name|getSubstitutions
parameter_list|()
block|{
return|return
name|substitutions
return|;
block|}
DECL|method|setSubstitutions (Substitution[] substitutions)
specifier|public
name|void
name|setSubstitutions
parameter_list|(
name|Substitution
index|[]
name|substitutions
parameter_list|)
block|{
name|this
operator|.
name|substitutions
operator|=
name|substitutions
expr_stmt|;
block|}
DECL|method|getExcludePackages ()
specifier|public
name|String
name|getExcludePackages
parameter_list|()
block|{
return|return
name|excludePackages
return|;
block|}
DECL|method|setExcludePackages (String excludePackages)
specifier|public
name|void
name|setExcludePackages
parameter_list|(
name|String
name|excludePackages
parameter_list|)
block|{
name|this
operator|.
name|excludePackages
operator|=
name|excludePackages
expr_stmt|;
block|}
DECL|method|getExcludeClasses ()
specifier|public
name|String
name|getExcludeClasses
parameter_list|()
block|{
return|return
name|excludeClasses
return|;
block|}
DECL|method|setExcludeClasses (String excludeClasses)
specifier|public
name|void
name|setExcludeClasses
parameter_list|(
name|String
name|excludeClasses
parameter_list|)
block|{
name|this
operator|.
name|excludeClasses
operator|=
name|excludeClasses
expr_stmt|;
block|}
DECL|method|getSignatureFile ()
specifier|public
name|File
name|getSignatureFile
parameter_list|()
block|{
return|return
name|signatureFile
return|;
block|}
DECL|method|setSignatureFile (File signatureFile)
specifier|public
name|void
name|setSignatureFile
parameter_list|(
name|File
name|signatureFile
parameter_list|)
block|{
name|this
operator|.
name|signatureFile
operator|=
name|signatureFile
expr_stmt|;
block|}
DECL|method|getAliases ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getAliases
parameter_list|()
block|{
return|return
name|aliases
return|;
block|}
DECL|method|setAliases (Map<String, String> aliases)
specifier|public
name|void
name|setAliases
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|aliases
parameter_list|)
block|{
name|this
operator|.
name|aliases
operator|=
name|aliases
expr_stmt|;
block|}
DECL|method|validate ()
specifier|public
name|void
name|validate
parameter_list|()
block|{
if|if
condition|(
name|apiName
operator|==
literal|null
operator|||
name|proxyClass
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Properties apiName and proxyClass are required"
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

