begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.generator.swagger
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|generator
operator|.
name|swagger
package|;
end_package

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|models
operator|.
name|Info
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|models
operator|.
name|Swagger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertThat
import|;
end_import

begin_class
DECL|class|RestDslSourceCodeGeneratorTest
specifier|public
class|class
name|RestDslSourceCodeGeneratorTest
block|{
annotation|@
name|Test
DECL|method|shouldCreatePackageNamesFromHostnames ()
specifier|public
name|void
name|shouldCreatePackageNamesFromHostnames
parameter_list|()
block|{
specifier|final
name|Swagger
name|swagger
init|=
operator|new
name|Swagger
argument_list|()
decl_stmt|;
name|swagger
operator|.
name|setHost
argument_list|(
literal|"api.example.org"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestDslSourceCodeGenerator
operator|.
name|generatePackageName
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"org.example.api"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldCreatePackageNamesFromHostnamesWithPorts ()
specifier|public
name|void
name|shouldCreatePackageNamesFromHostnamesWithPorts
parameter_list|()
block|{
specifier|final
name|Swagger
name|swagger
init|=
operator|new
name|Swagger
argument_list|()
decl_stmt|;
name|swagger
operator|.
name|setHost
argument_list|(
literal|"api.example.org:8080"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestDslSourceCodeGenerator
operator|.
name|generatePackageName
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"org.example.api"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldGenerateClassNameFromTitle ()
specifier|public
name|void
name|shouldGenerateClassNameFromTitle
parameter_list|()
block|{
specifier|final
name|Swagger
name|swagger
init|=
operator|new
name|Swagger
argument_list|()
decl_stmt|;
name|swagger
operator|.
name|info
argument_list|(
operator|new
name|Info
argument_list|()
operator|.
name|title
argument_list|(
literal|"Example API"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestDslSourceCodeGenerator
operator|.
name|generateClassName
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"ExampleAPI"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldGenerateClassNameFromTitleWithNonValidJavaIdentifiers ()
specifier|public
name|void
name|shouldGenerateClassNameFromTitleWithNonValidJavaIdentifiers
parameter_list|()
block|{
specifier|final
name|Swagger
name|swagger
init|=
operator|new
name|Swagger
argument_list|()
decl_stmt|;
name|swagger
operator|.
name|info
argument_list|(
operator|new
name|Info
argument_list|()
operator|.
name|title
argument_list|(
literal|"Example-API 2.0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestDslSourceCodeGenerator
operator|.
name|generateClassName
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"ExampleAPI20"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldUseDefaultClassNameIfInfoOrTitleIsNotPresent ()
specifier|public
name|void
name|shouldUseDefaultClassNameIfInfoOrTitleIsNotPresent
parameter_list|()
block|{
specifier|final
name|Swagger
name|swagger
init|=
operator|new
name|Swagger
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|RestDslSourceCodeGenerator
operator|.
name|generateClassName
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|RestDslSourceCodeGenerator
operator|.
name|DEFAULT_CLASS_NAME
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestDslSourceCodeGenerator
operator|.
name|generateClassName
argument_list|(
name|swagger
operator|.
name|info
argument_list|(
operator|new
name|Info
argument_list|()
argument_list|)
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|RestDslSourceCodeGenerator
operator|.
name|DEFAULT_CLASS_NAME
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldUseDefaultClassNameIfTitleContainsOnlyNonValidJavaIdentifiers ()
specifier|public
name|void
name|shouldUseDefaultClassNameIfTitleContainsOnlyNonValidJavaIdentifiers
parameter_list|()
block|{
specifier|final
name|Swagger
name|swagger
init|=
operator|new
name|Swagger
argument_list|()
decl_stmt|;
name|swagger
operator|.
name|info
argument_list|(
operator|new
name|Info
argument_list|()
operator|.
name|title
argument_list|(
literal|"\\%/4"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestDslSourceCodeGenerator
operator|.
name|generateClassName
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|RestDslSourceCodeGenerator
operator|.
name|DEFAULT_CLASS_NAME
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldUseDefaultPackageNameForLocalhost ()
specifier|public
name|void
name|shouldUseDefaultPackageNameForLocalhost
parameter_list|()
block|{
specifier|final
name|Swagger
name|swagger
init|=
operator|new
name|Swagger
argument_list|()
decl_stmt|;
name|swagger
operator|.
name|setHost
argument_list|(
literal|"localhost"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestDslSourceCodeGenerator
operator|.
name|generatePackageName
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|RestDslSourceCodeGenerator
operator|.
name|DEFAULT_PACKAGE_NAME
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldUseDefaultPackageNameForLocalhostWithPort ()
specifier|public
name|void
name|shouldUseDefaultPackageNameForLocalhostWithPort
parameter_list|()
block|{
specifier|final
name|Swagger
name|swagger
init|=
operator|new
name|Swagger
argument_list|()
decl_stmt|;
name|swagger
operator|.
name|setHost
argument_list|(
literal|"localhost:8080"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|RestDslSourceCodeGenerator
operator|.
name|generatePackageName
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|RestDslSourceCodeGenerator
operator|.
name|DEFAULT_PACKAGE_NAME
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldUseDefaultPackageNameIfNoHostIsSpecified ()
specifier|public
name|void
name|shouldUseDefaultPackageNameIfNoHostIsSpecified
parameter_list|()
block|{
specifier|final
name|Swagger
name|swagger
init|=
operator|new
name|Swagger
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|RestDslSourceCodeGenerator
operator|.
name|generatePackageName
argument_list|(
name|swagger
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|RestDslSourceCodeGenerator
operator|.
name|DEFAULT_PACKAGE_NAME
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

