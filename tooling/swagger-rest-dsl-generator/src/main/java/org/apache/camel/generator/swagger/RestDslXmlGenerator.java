begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.generator.swagger
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|generator
operator|.
name|swagger
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|XMLConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Transformer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|dom
operator|.
name|DOMSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|models
operator|.
name|Swagger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|ModelHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|rest
operator|.
name|RestsDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
import|;
end_import

begin_class
DECL|class|RestDslXmlGenerator
specifier|public
class|class
name|RestDslXmlGenerator
extends|extends
name|RestDslGenerator
argument_list|<
name|RestDslXmlGenerator
argument_list|>
block|{
DECL|field|blueprint
specifier|private
name|boolean
name|blueprint
decl_stmt|;
DECL|method|RestDslXmlGenerator (final Swagger swagger)
name|RestDslXmlGenerator
parameter_list|(
specifier|final
name|Swagger
name|swagger
parameter_list|)
block|{
name|super
argument_list|(
name|swagger
argument_list|)
expr_stmt|;
block|}
DECL|method|generate (final CamelContext context)
specifier|public
name|String
name|generate
parameter_list|(
specifier|final
name|CamelContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|RestDefinitionEmitter
name|emitter
init|=
operator|new
name|RestDefinitionEmitter
argument_list|(
name|context
argument_list|)
decl_stmt|;
specifier|final
name|PathVisitor
argument_list|<
name|RestsDefinition
argument_list|>
name|restDslStatement
init|=
operator|new
name|PathVisitor
argument_list|<>
argument_list|(
name|swagger
operator|.
name|getBasePath
argument_list|()
argument_list|,
name|emitter
argument_list|,
name|filter
argument_list|,
name|destinationGenerator
argument_list|()
argument_list|)
decl_stmt|;
name|swagger
operator|.
name|getPaths
argument_list|()
operator|.
name|forEach
argument_list|(
name|restDslStatement
operator|::
name|visit
argument_list|)
expr_stmt|;
specifier|final
name|RestsDefinition
name|rests
init|=
name|emitter
operator|.
name|result
argument_list|()
decl_stmt|;
specifier|final
name|String
name|xml
init|=
name|ModelHelper
operator|.
name|dumpModelAsXml
argument_list|(
name|context
argument_list|,
name|rests
argument_list|)
decl_stmt|;
specifier|final
name|DocumentBuilderFactory
name|builderFactory
init|=
name|DocumentBuilderFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|builderFactory
operator|.
name|setFeature
argument_list|(
name|XMLConstants
operator|.
name|FEATURE_SECURE_PROCESSING
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|builderFactory
operator|.
name|setFeature
argument_list|(
literal|"http://apache.org/xml/features/disallow-doctype-decl"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|builderFactory
operator|.
name|setNamespaceAware
argument_list|(
literal|true
argument_list|)
expr_stmt|;
specifier|final
name|DocumentBuilder
name|builder
init|=
name|builderFactory
operator|.
name|newDocumentBuilder
argument_list|()
decl_stmt|;
specifier|final
name|Document
name|document
init|=
name|builder
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|xml
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|Element
name|root
init|=
name|document
operator|.
name|getDocumentElement
argument_list|()
decl_stmt|;
if|if
condition|(
name|blueprint
condition|)
block|{
name|document
operator|.
name|renameNode
argument_list|(
name|root
argument_list|,
literal|"http://camel.apache.org/schema/blueprint"
argument_list|,
name|root
operator|.
name|getTagName
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// remove all customId attributes as we do not want them in the output
specifier|final
name|NodeList
name|elements
init|=
name|document
operator|.
name|getElementsByTagName
argument_list|(
literal|"*"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|elements
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
specifier|final
name|Element
name|element
init|=
operator|(
name|Element
operator|)
name|elements
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|element
operator|.
name|removeAttribute
argument_list|(
literal|"customId"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|restComponent
operator|!=
literal|null
condition|)
block|{
specifier|final
name|Element
name|configuration
init|=
name|document
operator|.
name|createElement
argument_list|(
literal|"restConfiguration"
argument_list|)
decl_stmt|;
name|configuration
operator|.
name|setAttribute
argument_list|(
literal|"component"
argument_list|,
name|restComponent
argument_list|)
expr_stmt|;
if|if
condition|(
name|restContextPath
operator|!=
literal|null
condition|)
block|{
name|configuration
operator|.
name|setAttribute
argument_list|(
literal|"contextPath"
argument_list|,
name|restContextPath
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ObjectHelper
operator|.
name|isNotEmpty
argument_list|(
name|apiContextPath
argument_list|)
condition|)
block|{
name|configuration
operator|.
name|setAttribute
argument_list|(
literal|"apiContextPath"
argument_list|,
name|apiContextPath
argument_list|)
expr_stmt|;
block|}
name|root
operator|.
name|insertBefore
argument_list|(
name|configuration
argument_list|,
name|root
operator|.
name|getFirstChild
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|final
name|TransformerFactory
name|transformerFactory
init|=
name|TransformerFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
specifier|final
name|Transformer
name|transformer
init|=
name|transformerFactory
operator|.
name|newTransformer
argument_list|()
decl_stmt|;
specifier|final
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|transformer
operator|.
name|transform
argument_list|(
operator|new
name|DOMSource
argument_list|(
name|document
argument_list|)
argument_list|,
operator|new
name|StreamResult
argument_list|(
name|writer
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|writer
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|withBlueprint ()
specifier|public
name|RestDslXmlGenerator
name|withBlueprint
parameter_list|()
block|{
name|blueprint
operator|=
literal|true
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
end_class

end_unit

