begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|$
block|{
package|package
block|}
end_package

begin_empty_stmt
empty_stmt|;
end_empty_stmt

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * The ${name} producer.  */
end_comment

begin_class
DECL|class|$
specifier|public
class|class
name|$
block|{
name|name
block|}
end_class

begin_expr_stmt
DECL|class|$
name|Producer
expr|extends
name|DefaultProducer
block|{
specifier|private
specifier|static
name|final
specifier|transient
name|Logger
name|LOG
operator|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|$
block|{
name|name
block|}
name|Producer
operator|.
name|class
argument_list|)
block|;
specifier|private
name|$
block|{
name|name
block|}
name|Endpoint
name|endpoint
block|;
specifier|public
name|$
block|{
name|name
block|}
name|Producer
argument_list|(
name|$
block|{
name|name
block|}
name|Endpoint
name|endpoint
argument_list|)
block|{
name|super
argument_list|(
name|endpoint
argument_list|)
block|;
name|this
operator|.
name|endpoint
operator|=
name|endpoint
block|;     }
specifier|public
name|void
name|process
argument_list|(
name|Exchange
name|exchange
argument_list|)
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
argument_list|)
block|;         }
end_expr_stmt

unit|}
end_unit

