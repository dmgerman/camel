begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_expr_stmt
unit|#
name|set
argument_list|(
name|$symbol_pound
operator|=
literal|'#'
argument_list|)
expr|#
name|set
argument_list|(
name|$symbol_dollar
operator|=
literal|'$'
argument_list|)
expr|#
name|set
argument_list|(
name|$symbol_escape
operator|=
literal|'\' )
comment|// This file was generated from ${archetypeGroupId}/${archetypeArtifactId}/${archetypeVersion}
package|package
name|$
block|{
name|groupId
block|}
end_expr_stmt

begin_expr_stmt
operator|.
name|internal
expr_stmt|;
end_expr_stmt

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|LoggingLevel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|PredicateBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|SimpleRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|Validate
import|;
end_import

begin_class
DECL|class|$
specifier|public
class|class
name|$
block|{
name|className
block|}
end_class

begin_expr_stmt
DECL|class|$
name|Route
expr|extends
name|RouteBuilder
block|{
name|SimpleRegistry
name|registry
block|;
comment|// Configured fields
block|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|private
name|String
name|camelRouteId
block|;     @
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|private
name|Integer
name|maximumRedeliveries
block|;     @
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|private
name|Long
name|redeliveryDelay
block|;     @
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|private
name|Double
name|backOffMultiplier
block|;     @
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|private
name|Long
name|maximumRedeliveryDelay
block|;
specifier|protected
name|boolean
name|summaryLogging
operator|=
literal|false
block|;
specifier|public
name|$
block|{
name|className
block|}
name|Route
argument_list|(
name|final
name|SimpleRegistry
name|registry
argument_list|)
block|{
name|this
operator|.
name|registry
operator|=
name|registry
block|;     }
expr|@
name|Override
specifier|public
name|void
name|configure
argument_list|()
throws|throws
name|Exception
block|{
name|checkProperties
argument_list|()
block|;
comment|// Add a bean to Camel context registry
comment|// registry.put("test", "bean");
name|errorHandler
argument_list|(
name|defaultErrorHandler
argument_list|()
operator|.
name|retryAttemptedLogLevel
argument_list|(
name|LoggingLevel
operator|.
name|WARN
argument_list|)
operator|.
name|maximumRedeliveries
argument_list|(
name|maximumRedeliveries
argument_list|)
operator|.
name|redeliveryDelay
argument_list|(
name|redeliveryDelay
argument_list|)
operator|.
name|backOffMultiplier
argument_list|(
name|backOffMultiplier
argument_list|)
operator|.
name|maximumRedeliveryDelay
argument_list|(
name|maximumRedeliveryDelay
argument_list|)
argument_list|)
block|;
name|from
argument_list|(
literal|"{{from}}"
argument_list|)
operator|.
name|startupOrder
argument_list|(
literal|2
argument_list|)
operator|.
name|routeId
argument_list|(
name|camelRouteId
argument_list|)
operator|.
name|onCompletion
argument_list|()
operator|.
name|to
argument_list|(
literal|"direct:processCompletion"
argument_list|)
operator|.
name|end
argument_list|()
operator|.
name|removeHeaders
argument_list|(
literal|"*"
argument_list|,
literal|"breadcrumbId"
argument_list|)
operator|.
name|to
argument_list|(
literal|"{{to}}"
argument_list|)
block|;
name|from
argument_list|(
literal|"direct:processCompletion"
argument_list|)
operator|.
name|startupOrder
argument_list|(
literal|1
argument_list|)
operator|.
name|routeId
argument_list|(
name|camelRouteId
operator|+
literal|".completion"
argument_list|)
operator|.
name|choice
argument_list|()
operator|.
name|when
argument_list|(
name|PredicateBuilder
operator|.
name|and
argument_list|(
name|simple
argument_list|(
literal|"${exception} == null"
argument_list|)
argument_list|,
name|PredicateBuilder
operator|.
name|constant
argument_list|(
name|summaryLogging
argument_list|)
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"log:"
operator|+
name|camelRouteId
operator|+
literal|".success?groupInterval=60000"
argument_list|)
operator|.
name|when
argument_list|(
name|PredicateBuilder
operator|.
name|and
argument_list|(
name|simple
argument_list|(
literal|"${exception} == null"
argument_list|)
argument_list|,
name|PredicateBuilder
operator|.
name|constant
argument_list|(
operator|!
name|summaryLogging
argument_list|)
argument_list|)
argument_list|)
operator|.
name|log
argument_list|(
literal|"{{messageOk}}"
argument_list|)
operator|.
name|when
argument_list|(
name|PredicateBuilder
operator|.
name|constant
argument_list|(
name|summaryLogging
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"log:"
operator|+
name|camelRouteId
operator|+
literal|".failure?groupInterval=60000"
argument_list|)
operator|.
name|otherwise
argument_list|()
operator|.
name|log
argument_list|(
name|LoggingLevel
operator|.
name|ERROR
argument_list|,
literal|"{{messageError}}"
argument_list|)
operator|.
name|endChoice
argument_list|()
block|; 	}
specifier|public
name|void
name|checkProperties
argument_list|()
block|{
name|Validate
operator|.
name|notNull
argument_list|(
name|camelRouteId
argument_list|,
literal|"camelRouteId property is not set"
argument_list|)
block|;
name|Validate
operator|.
name|notNull
argument_list|(
name|maximumRedeliveries
argument_list|,
literal|"maximumRedeliveries property is not set"
argument_list|)
block|;
name|Validate
operator|.
name|notNull
argument_list|(
name|redeliveryDelay
argument_list|,
literal|"redeliveryDelay property is not set"
argument_list|)
block|;
name|Validate
operator|.
name|notNull
argument_list|(
name|backOffMultiplier
argument_list|,
literal|"backOffMultiplier property is not set"
argument_list|)
block|;
name|Validate
operator|.
name|notNull
argument_list|(
name|maximumRedeliveryDelay
argument_list|,
literal|"maximumRedeliveryDelay property is not set"
argument_list|)
block|;     }
end_expr_stmt

unit|}
end_unit

