begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.generator.openapi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|generator
operator|.
name|openapi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|processing
operator|.
name|Filer
import|;
end_import

begin_import
import|import
name|io
operator|.
name|apicurio
operator|.
name|datamodels
operator|.
name|openapi
operator|.
name|models
operator|.
name|OasDocument
import|;
end_import

begin_import
import|import
name|io
operator|.
name|apicurio
operator|.
name|datamodels
operator|.
name|openapi
operator|.
name|v2
operator|.
name|models
operator|.
name|Oas20Document
import|;
end_import

begin_import
import|import
name|io
operator|.
name|apicurio
operator|.
name|datamodels
operator|.
name|openapi
operator|.
name|v3
operator|.
name|models
operator|.
name|Oas30Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|rest
operator|.
name|RestsDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|ObjectHelper
operator|.
name|notNull
import|;
end_import

begin_comment
comment|/**  * Source code and {@link RestsDefinition} generator that generates Camel REST  * DSL implementations from OpenAPI specifications.  */
end_comment

begin_class
DECL|class|RestDslGenerator
specifier|public
specifier|abstract
class|class
name|RestDslGenerator
parameter_list|<
name|G
parameter_list|>
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|RestDslGenerator
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|openapi
specifier|final
name|OasDocument
name|openapi
decl_stmt|;
DECL|field|destinationGenerator
name|DestinationGenerator
name|destinationGenerator
init|=
operator|new
name|DirectToOperationId
argument_list|()
decl_stmt|;
DECL|field|filter
name|OperationFilter
name|filter
init|=
operator|new
name|OperationFilter
argument_list|()
decl_stmt|;
DECL|field|restComponent
name|String
name|restComponent
decl_stmt|;
DECL|field|restContextPath
name|String
name|restContextPath
decl_stmt|;
DECL|field|apiContextPath
name|String
name|apiContextPath
decl_stmt|;
DECL|field|springComponent
name|boolean
name|springComponent
decl_stmt|;
DECL|field|springBootProject
name|boolean
name|springBootProject
decl_stmt|;
DECL|method|RestDslGenerator (final OasDocument openapi)
name|RestDslGenerator
parameter_list|(
specifier|final
name|OasDocument
name|openapi
parameter_list|)
block|{
name|this
operator|.
name|openapi
operator|=
name|notNull
argument_list|(
name|openapi
argument_list|,
literal|"openapi"
argument_list|)
expr_stmt|;
block|}
DECL|method|withDestinationGenerator (final DestinationGenerator directRouteGenerator)
specifier|public
name|G
name|withDestinationGenerator
parameter_list|(
specifier|final
name|DestinationGenerator
name|directRouteGenerator
parameter_list|)
block|{
name|notNull
argument_list|(
name|directRouteGenerator
argument_list|,
literal|"directRouteGenerator"
argument_list|)
expr_stmt|;
name|this
operator|.
name|destinationGenerator
operator|=
name|directRouteGenerator
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|final
name|G
name|that
init|=
operator|(
name|G
operator|)
name|this
decl_stmt|;
return|return
name|that
return|;
block|}
DECL|method|destinationGenerator ()
name|DestinationGenerator
name|destinationGenerator
parameter_list|()
block|{
return|return
name|destinationGenerator
return|;
block|}
DECL|method|withOperationFilter (OperationFilter filter)
specifier|public
name|G
name|withOperationFilter
parameter_list|(
name|OperationFilter
name|filter
parameter_list|)
block|{
name|this
operator|.
name|filter
operator|=
name|filter
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|final
name|G
name|that
init|=
operator|(
name|G
operator|)
name|this
decl_stmt|;
return|return
name|that
return|;
block|}
DECL|method|withOperationFilter (String include)
specifier|public
name|G
name|withOperationFilter
parameter_list|(
name|String
name|include
parameter_list|)
block|{
name|this
operator|.
name|filter
operator|.
name|setIncludes
argument_list|(
name|include
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|final
name|G
name|that
init|=
operator|(
name|G
operator|)
name|this
decl_stmt|;
return|return
name|that
return|;
block|}
DECL|method|withRestComponent (String restComponent)
specifier|public
name|G
name|withRestComponent
parameter_list|(
name|String
name|restComponent
parameter_list|)
block|{
name|this
operator|.
name|restComponent
operator|=
name|restComponent
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|final
name|G
name|that
init|=
operator|(
name|G
operator|)
name|this
decl_stmt|;
return|return
name|that
return|;
block|}
DECL|method|withRestContextPath (String contextPath)
specifier|public
name|G
name|withRestContextPath
parameter_list|(
name|String
name|contextPath
parameter_list|)
block|{
name|this
operator|.
name|restContextPath
operator|=
name|contextPath
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|final
name|G
name|that
init|=
operator|(
name|G
operator|)
name|this
decl_stmt|;
return|return
name|that
return|;
block|}
DECL|method|withApiContextPath (String contextPath)
specifier|public
name|G
name|withApiContextPath
parameter_list|(
name|String
name|contextPath
parameter_list|)
block|{
name|this
operator|.
name|apiContextPath
operator|=
name|contextPath
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|final
name|G
name|that
init|=
operator|(
name|G
operator|)
name|this
decl_stmt|;
return|return
name|that
return|;
block|}
DECL|method|asSpringComponent ()
specifier|public
name|G
name|asSpringComponent
parameter_list|()
block|{
name|this
operator|.
name|springComponent
operator|=
literal|true
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|final
name|G
name|that
init|=
operator|(
name|G
operator|)
name|this
decl_stmt|;
return|return
name|that
return|;
block|}
DECL|method|asSpringBootProject ()
specifier|public
name|G
name|asSpringBootProject
parameter_list|()
block|{
name|this
operator|.
name|springBootProject
operator|=
literal|true
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|final
name|G
name|that
init|=
operator|(
name|G
operator|)
name|this
decl_stmt|;
return|return
name|that
return|;
block|}
DECL|method|toAppendable (final OasDocument openapi)
specifier|public
specifier|static
name|RestDslSourceCodeGenerator
argument_list|<
name|Appendable
argument_list|>
name|toAppendable
parameter_list|(
specifier|final
name|OasDocument
name|openapi
parameter_list|)
block|{
return|return
operator|new
name|AppendableGenerator
argument_list|(
name|openapi
argument_list|)
return|;
block|}
DECL|method|toDefinition (final OasDocument openapi)
specifier|public
specifier|static
name|RestDslDefinitionGenerator
name|toDefinition
parameter_list|(
specifier|final
name|OasDocument
name|openapi
parameter_list|)
block|{
return|return
operator|new
name|RestDslDefinitionGenerator
argument_list|(
name|openapi
argument_list|)
return|;
block|}
DECL|method|toXml (final OasDocument openapi)
specifier|public
specifier|static
name|RestDslXmlGenerator
name|toXml
parameter_list|(
specifier|final
name|OasDocument
name|openapi
parameter_list|)
block|{
return|return
operator|new
name|RestDslXmlGenerator
argument_list|(
name|openapi
argument_list|)
return|;
block|}
DECL|method|toFiler (final OasDocument openapi)
specifier|public
specifier|static
name|RestDslSourceCodeGenerator
argument_list|<
name|Filer
argument_list|>
name|toFiler
parameter_list|(
specifier|final
name|OasDocument
name|openapi
parameter_list|)
block|{
return|return
operator|new
name|FilerGenerator
argument_list|(
name|openapi
argument_list|)
return|;
block|}
DECL|method|toPath (final OasDocument openapi)
specifier|public
specifier|static
name|RestDslSourceCodeGenerator
argument_list|<
name|Path
argument_list|>
name|toPath
parameter_list|(
specifier|final
name|OasDocument
name|openapi
parameter_list|)
block|{
return|return
operator|new
name|PathGenerator
argument_list|(
name|openapi
argument_list|)
return|;
block|}
DECL|method|getHostFromOasDocument (final OasDocument openapi)
specifier|public
specifier|static
name|String
name|getHostFromOasDocument
parameter_list|(
specifier|final
name|OasDocument
name|openapi
parameter_list|)
block|{
name|String
name|host
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|openapi
operator|instanceof
name|Oas20Document
condition|)
block|{
name|host
operator|=
operator|(
operator|(
name|Oas20Document
operator|)
name|openapi
operator|)
operator|.
name|host
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|openapi
operator|instanceof
name|Oas30Document
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|Oas30Document
operator|)
name|openapi
operator|)
operator|.
name|getServers
argument_list|()
operator|!=
literal|null
operator|&&
operator|(
operator|(
name|Oas30Document
operator|)
name|openapi
operator|)
operator|.
name|getServers
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|URL
name|serverUrl
init|=
operator|new
name|URL
argument_list|(
operator|(
operator|(
name|Oas30Document
operator|)
name|openapi
operator|)
operator|.
name|getServers
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|url
argument_list|)
decl_stmt|;
name|host
operator|=
name|serverUrl
operator|.
name|getHost
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MalformedURLException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"error when parsing OpenApi 3.0 doc server url"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
name|host
return|;
block|}
DECL|method|getBasePathFromOasDocument (final OasDocument openapi)
specifier|public
specifier|static
name|String
name|getBasePathFromOasDocument
parameter_list|(
specifier|final
name|OasDocument
name|openapi
parameter_list|)
block|{
name|String
name|basePath
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|openapi
operator|instanceof
name|Oas20Document
condition|)
block|{
name|basePath
operator|=
operator|(
operator|(
name|Oas20Document
operator|)
name|openapi
operator|)
operator|.
name|basePath
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|openapi
operator|instanceof
name|Oas30Document
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|Oas30Document
operator|)
name|openapi
operator|)
operator|.
name|getServers
argument_list|()
operator|!=
literal|null
operator|&&
operator|(
operator|(
name|Oas30Document
operator|)
name|openapi
operator|)
operator|.
name|getServers
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|URL
name|serverUrl
init|=
operator|new
name|URL
argument_list|(
operator|(
operator|(
name|Oas30Document
operator|)
name|openapi
operator|)
operator|.
name|getServers
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|url
argument_list|)
decl_stmt|;
name|basePath
operator|=
name|serverUrl
operator|.
name|getPath
argument_list|()
expr_stmt|;
if|if
condition|(
name|basePath
operator|.
name|indexOf
argument_list|(
literal|"//"
argument_list|)
operator|==
literal|0
condition|)
block|{
comment|//strip off the first "/" if double "/" exists
name|basePath
operator|=
name|basePath
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
literal|"/"
operator|.
name|equals
argument_list|(
name|basePath
argument_list|)
condition|)
block|{
name|basePath
operator|=
literal|""
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|MalformedURLException
name|e
parameter_list|)
block|{
comment|//not a valid whole url, just the basePath
name|basePath
operator|=
operator|(
operator|(
name|Oas30Document
operator|)
name|openapi
operator|)
operator|.
name|getServers
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|url
expr_stmt|;
block|}
block|}
block|}
return|return
name|basePath
return|;
block|}
block|}
end_class

end_unit

