begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.parser.graph
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|parser
operator|.
name|graph
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|BufferedImage
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|imageio
operator|.
name|ImageIO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|parser
operator|.
name|model
operator|.
name|CamelNodeDetails
import|;
end_import

begin_comment
comment|/**  * @deprecated  experiment to render a route via Java image  */
end_comment

begin_class
annotation|@
name|Deprecated
DECL|class|RenderRoute
specifier|public
class|class
name|RenderRoute
block|{
DECL|method|main (String[] args)
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|RenderRoute
name|render
init|=
operator|new
name|RenderRoute
argument_list|()
decl_stmt|;
name|render
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|render (CamelNodeDetails root)
specifier|public
specifier|static
name|void
name|render
parameter_list|(
name|CamelNodeDetails
name|root
parameter_list|)
block|{
comment|// TODO:
try|try
block|{
name|int
name|width
init|=
literal|200
decl_stmt|,
name|height
init|=
literal|200
decl_stmt|;
comment|// TYPE_INT_ARGB specifies the image format: 8-bit RGBA packed
comment|// into integer pixels
comment|//            BufferedImage bi = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
name|BufferedImage
name|bi
init|=
operator|new
name|BufferedImage
argument_list|(
name|width
argument_list|,
name|height
argument_list|,
name|BufferedImage
operator|.
name|TYPE_INT_ARGB
argument_list|)
decl_stmt|;
name|Graphics2D
name|ig2
init|=
name|bi
operator|.
name|createGraphics
argument_list|()
decl_stmt|;
name|ig2
operator|.
name|drawRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|80
argument_list|,
literal|40
argument_list|)
expr_stmt|;
name|ig2
operator|.
name|drawLine
argument_list|(
literal|45
argument_list|,
literal|50
argument_list|,
literal|45
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|ig2
operator|.
name|drawRect
argument_list|(
literal|10
argument_list|,
literal|80
argument_list|,
literal|80
argument_list|,
literal|40
argument_list|)
expr_stmt|;
name|Font
name|font
init|=
operator|new
name|Font
argument_list|(
literal|"Arial"
argument_list|,
name|Font
operator|.
name|BOLD
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|ig2
operator|.
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|String
name|message
init|=
literal|"Apache Camel"
decl_stmt|;
name|FontMetrics
name|fontMetrics
init|=
name|ig2
operator|.
name|getFontMetrics
argument_list|()
decl_stmt|;
name|int
name|stringWidth
init|=
name|fontMetrics
operator|.
name|stringWidth
argument_list|(
name|message
argument_list|)
decl_stmt|;
name|int
name|stringHeight
init|=
name|fontMetrics
operator|.
name|getAscent
argument_list|()
decl_stmt|;
name|ig2
operator|.
name|setPaint
argument_list|(
name|Color
operator|.
name|black
argument_list|)
expr_stmt|;
name|ig2
operator|.
name|drawString
argument_list|(
name|message
argument_list|,
operator|(
name|width
operator|-
name|stringWidth
operator|)
operator|/
literal|2
argument_list|,
name|height
operator|/
literal|2
operator|+
name|stringHeight
operator|/
literal|4
argument_list|)
expr_stmt|;
name|ImageIO
operator|.
name|write
argument_list|(
name|bi
argument_list|,
literal|"PNG"
argument_list|,
operator|new
name|File
argument_list|(
literal|"target/route.png"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ie
parameter_list|)
block|{
name|ie
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

