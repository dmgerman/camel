begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.parser
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|parser
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|parser
operator|.
name|helper
operator|.
name|CamelXmlRestDslParserHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|parser
operator|.
name|helper
operator|.
name|XmlLineNumberParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|parser
operator|.
name|model
operator|.
name|RestConfigurationDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|parser
operator|.
name|model
operator|.
name|RestServiceDetails
import|;
end_import

begin_comment
comment|/**  * A Camel XML parser that parses Camel XML Rest DSL source code.  *<p/>  * This implementation is higher level details, and uses the lower level parser {@link CamelXmlRestDslParserHelper}.  */
end_comment

begin_class
DECL|class|XmlRestDslParser
specifier|public
specifier|final
class|class
name|XmlRestDslParser
block|{
DECL|method|XmlRestDslParser ()
specifier|private
name|XmlRestDslParser
parameter_list|()
block|{     }
comment|/**      * Parses the XML file and build a rest configuration model of the discovered rest configurations in the XML source file.      *      * @param xml                     the xml file as input stream      * @param baseDir                 the base of the source code      * @param fullyQualifiedFileName  the fully qualified source code file name      * @return a list of rest configurations (often there is only one)      */
DECL|method|parseRestConfiguration (InputStream xml, String baseDir, String fullyQualifiedFileName)
specifier|public
specifier|static
name|List
argument_list|<
name|RestConfigurationDetails
argument_list|>
name|parseRestConfiguration
parameter_list|(
name|InputStream
name|xml
parameter_list|,
name|String
name|baseDir
parameter_list|,
name|String
name|fullyQualifiedFileName
parameter_list|)
block|{
comment|// try parse it as dom
name|Document
name|dom
init|=
literal|null
decl_stmt|;
try|try
block|{
name|dom
operator|=
name|XmlLineNumberParser
operator|.
name|parseXml
argument_list|(
name|xml
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// ignore as the xml file may not be valid at this point
block|}
if|if
condition|(
name|dom
operator|!=
literal|null
condition|)
block|{
name|CamelXmlRestDslParserHelper
name|parser
init|=
operator|new
name|CamelXmlRestDslParserHelper
argument_list|()
decl_stmt|;
return|return
name|parser
operator|.
name|parseRestConfiguration
argument_list|(
name|dom
argument_list|,
name|baseDir
argument_list|,
name|fullyQualifiedFileName
argument_list|)
return|;
block|}
return|return
name|Collections
operator|.
name|EMPTY_LIST
return|;
block|}
comment|/**      * Parses the java source class and build a rest service model of the discovered rest services in the java source class.      *      * @param xml                     the xml file as input stream      * @param baseDir                 the base of the source code      * @param fullyQualifiedFileName  the fully qualified source code file name      * @return a list of rest services      */
DECL|method|parseRestService (InputStream xml, String baseDir, String fullyQualifiedFileName)
specifier|public
specifier|static
name|List
argument_list|<
name|RestServiceDetails
argument_list|>
name|parseRestService
parameter_list|(
name|InputStream
name|xml
parameter_list|,
name|String
name|baseDir
parameter_list|,
name|String
name|fullyQualifiedFileName
parameter_list|)
block|{
comment|// try parse it as dom
name|Document
name|dom
init|=
literal|null
decl_stmt|;
try|try
block|{
name|dom
operator|=
name|XmlLineNumberParser
operator|.
name|parseXml
argument_list|(
name|xml
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// ignore as the xml file may not be valid at this point
block|}
if|if
condition|(
name|dom
operator|!=
literal|null
condition|)
block|{
name|CamelXmlRestDslParserHelper
name|parser
init|=
operator|new
name|CamelXmlRestDslParserHelper
argument_list|()
decl_stmt|;
return|return
name|parser
operator|.
name|parseRestService
argument_list|(
name|dom
argument_list|,
name|baseDir
argument_list|,
name|fullyQualifiedFileName
argument_list|)
return|;
block|}
return|return
name|Collections
operator|.
name|EMPTY_LIST
return|;
block|}
block|}
end_class

end_unit

