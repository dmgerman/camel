begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.parser.helper
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|parser
operator|.
name|helper
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NamedNodeMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|parser
operator|.
name|model
operator|.
name|RestConfigurationDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|parser
operator|.
name|model
operator|.
name|RestServiceDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|parser
operator|.
name|model
operator|.
name|RestVerbDetails
import|;
end_import

begin_class
DECL|class|CamelXmlRestDslParserHelper
specifier|public
specifier|final
class|class
name|CamelXmlRestDslParserHelper
block|{
DECL|method|parseRestConfiguration (Node xmlNode, String baseDir, String fullyQualifiedFileName)
specifier|public
name|List
argument_list|<
name|RestConfigurationDetails
argument_list|>
name|parseRestConfiguration
parameter_list|(
name|Node
name|xmlNode
parameter_list|,
name|String
name|baseDir
parameter_list|,
name|String
name|fullyQualifiedFileName
parameter_list|)
block|{
name|List
argument_list|<
name|RestConfigurationDetails
argument_list|>
name|answer
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|RestConfigurationDetails
name|detail
init|=
operator|new
name|RestConfigurationDetails
argument_list|()
decl_stmt|;
name|detail
operator|.
name|setFileName
argument_list|(
name|fullyQualifiedFileName
argument_list|)
expr_stmt|;
name|walkXmlTree
argument_list|(
name|xmlNode
argument_list|,
name|detail
argument_list|)
expr_stmt|;
name|answer
operator|.
name|add
argument_list|(
name|detail
argument_list|)
expr_stmt|;
return|return
name|answer
return|;
block|}
DECL|method|parseRestService (Node xmlNode, String baseDir, String fullyQualifiedFileName)
specifier|public
name|List
argument_list|<
name|RestServiceDetails
argument_list|>
name|parseRestService
parameter_list|(
name|Node
name|xmlNode
parameter_list|,
name|String
name|baseDir
parameter_list|,
name|String
name|fullyQualifiedFileName
parameter_list|)
block|{
name|List
argument_list|<
name|RestServiceDetails
argument_list|>
name|answer
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|RestServiceDetails
name|detail
init|=
operator|new
name|RestServiceDetails
argument_list|()
decl_stmt|;
name|detail
operator|.
name|setFileName
argument_list|(
name|fullyQualifiedFileName
argument_list|)
expr_stmt|;
name|walkXmlTree
argument_list|(
name|xmlNode
argument_list|,
name|detail
argument_list|)
expr_stmt|;
name|answer
operator|.
name|add
argument_list|(
name|detail
argument_list|)
expr_stmt|;
return|return
name|answer
return|;
block|}
DECL|method|walkXmlTree (Node xmlNode, RestConfigurationDetails detail)
specifier|private
name|void
name|walkXmlTree
parameter_list|(
name|Node
name|xmlNode
parameter_list|,
name|RestConfigurationDetails
name|detail
parameter_list|)
block|{
if|if
condition|(
literal|"restConfiguration"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getNodeName
argument_list|()
argument_list|)
condition|)
block|{
name|String
name|lineNumber
init|=
operator|(
name|String
operator|)
name|xmlNode
operator|.
name|getUserData
argument_list|(
name|XmlLineNumberParser
operator|.
name|LINE_NUMBER
argument_list|)
decl_stmt|;
name|String
name|lineNumberEnd
init|=
operator|(
name|String
operator|)
name|xmlNode
operator|.
name|getUserData
argument_list|(
name|XmlLineNumberParser
operator|.
name|LINE_NUMBER_END
argument_list|)
decl_stmt|;
name|detail
operator|.
name|setLineNumber
argument_list|(
name|lineNumber
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setLineNumberEnd
argument_list|(
name|lineNumberEnd
argument_list|)
expr_stmt|;
name|NamedNodeMap
name|map
init|=
name|xmlNode
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
name|detail
operator|.
name|setComponent
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"component"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setApiComponent
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"apiComponent"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setProducerComponent
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"producerComponent"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setScheme
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"scheme"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setHost
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"host"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setApiHost
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"apiHost"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setPort
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"port"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setProducerApiDoc
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"producerApiDoc"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setContextPath
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"contextPath"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setApiContextPath
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"apiContextPath"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setApiContextRouteId
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"apiContextRouteId"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setApiContextIdPattern
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"apiContextIdPattern"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setApiContextListening
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"apiContextListening"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setApiVendorExtension
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"apiVendorExtension"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setHostNameResolver
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"hostNameResolver"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setBindingMode
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"bindingMode"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setSkipBindingOnErrorCode
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"skipBindingOnErrorCode"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setClientRequestValidation
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"clientRequestValidation"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setEnableCORS
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"enableCORS"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setJsonDataFormat
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"jsonDataFormat"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setXmlDataFormat
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"xmlDataFormat"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
literal|"componentProperty"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getNodeName
argument_list|()
argument_list|)
operator|&&
operator|(
name|xmlNode
operator|.
name|getParentNode
argument_list|()
operator|!=
literal|null
operator|&&
literal|"restConfiguration"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getParentNode
argument_list|()
operator|.
name|getNodeName
argument_list|()
argument_list|)
operator|)
condition|)
block|{
name|NamedNodeMap
name|map
init|=
name|xmlNode
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
name|String
name|key
init|=
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"key"
argument_list|)
decl_stmt|;
name|String
name|value
init|=
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
if|if
condition|(
name|key
operator|!=
literal|null
operator|&&
name|value
operator|!=
literal|null
condition|)
block|{
name|detail
operator|.
name|addComponentProperty
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
literal|"endpointProperty"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getNodeName
argument_list|()
argument_list|)
operator|&&
operator|(
name|xmlNode
operator|.
name|getParentNode
argument_list|()
operator|!=
literal|null
operator|&&
literal|"restConfiguration"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getParentNode
argument_list|()
operator|.
name|getNodeName
argument_list|()
argument_list|)
operator|)
condition|)
block|{
name|NamedNodeMap
name|map
init|=
name|xmlNode
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
name|String
name|key
init|=
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"key"
argument_list|)
decl_stmt|;
name|String
name|value
init|=
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
if|if
condition|(
name|key
operator|!=
literal|null
operator|&&
name|value
operator|!=
literal|null
condition|)
block|{
name|detail
operator|.
name|addEndpointProperty
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
literal|"consumerProperty"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getNodeName
argument_list|()
argument_list|)
operator|&&
operator|(
name|xmlNode
operator|.
name|getParentNode
argument_list|()
operator|!=
literal|null
operator|&&
literal|"restConfiguration"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getParentNode
argument_list|()
operator|.
name|getNodeName
argument_list|()
argument_list|)
operator|)
condition|)
block|{
name|NamedNodeMap
name|map
init|=
name|xmlNode
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
name|String
name|key
init|=
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"key"
argument_list|)
decl_stmt|;
name|String
name|value
init|=
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
if|if
condition|(
name|key
operator|!=
literal|null
operator|&&
name|value
operator|!=
literal|null
condition|)
block|{
name|detail
operator|.
name|addConsumerProperty
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
literal|"dataFormatProperty"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getNodeName
argument_list|()
argument_list|)
operator|&&
operator|(
name|xmlNode
operator|.
name|getParentNode
argument_list|()
operator|!=
literal|null
operator|&&
literal|"restConfiguration"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getParentNode
argument_list|()
operator|.
name|getNodeName
argument_list|()
argument_list|)
operator|)
condition|)
block|{
name|NamedNodeMap
name|map
init|=
name|xmlNode
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
name|String
name|key
init|=
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"key"
argument_list|)
decl_stmt|;
name|String
name|value
init|=
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
if|if
condition|(
name|key
operator|!=
literal|null
operator|&&
name|value
operator|!=
literal|null
condition|)
block|{
name|detail
operator|.
name|addDataFormatProperty
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
literal|"apiProperty"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getNodeName
argument_list|()
argument_list|)
operator|&&
operator|(
name|xmlNode
operator|.
name|getParentNode
argument_list|()
operator|!=
literal|null
operator|&&
literal|"restConfiguration"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getParentNode
argument_list|()
operator|.
name|getNodeName
argument_list|()
argument_list|)
operator|)
condition|)
block|{
name|NamedNodeMap
name|map
init|=
name|xmlNode
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
name|String
name|key
init|=
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"key"
argument_list|)
decl_stmt|;
name|String
name|value
init|=
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
if|if
condition|(
name|key
operator|!=
literal|null
operator|&&
name|value
operator|!=
literal|null
condition|)
block|{
name|detail
operator|.
name|addApiProperty
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
literal|"corsHeaders"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getNodeName
argument_list|()
argument_list|)
operator|&&
operator|(
name|xmlNode
operator|.
name|getParentNode
argument_list|()
operator|!=
literal|null
operator|&&
literal|"restConfiguration"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getParentNode
argument_list|()
operator|.
name|getNodeName
argument_list|()
argument_list|)
operator|)
condition|)
block|{
name|NamedNodeMap
name|map
init|=
name|xmlNode
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
name|String
name|key
init|=
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"key"
argument_list|)
decl_stmt|;
name|String
name|value
init|=
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
if|if
condition|(
name|key
operator|!=
literal|null
operator|&&
name|value
operator|!=
literal|null
condition|)
block|{
name|detail
operator|.
name|addCorsHeader
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
comment|// walk the rest of the children
name|NodeList
name|children
init|=
name|xmlNode
operator|.
name|getChildNodes
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|children
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Node
name|child
init|=
name|children
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|child
operator|.
name|getNodeType
argument_list|()
operator|==
name|Node
operator|.
name|ELEMENT_NODE
condition|)
block|{
name|walkXmlTree
argument_list|(
name|child
argument_list|,
name|detail
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|walkXmlTree (Node xmlNode, RestServiceDetails detail)
specifier|private
name|void
name|walkXmlTree
parameter_list|(
name|Node
name|xmlNode
parameter_list|,
name|RestServiceDetails
name|detail
parameter_list|)
block|{
if|if
condition|(
literal|"rest"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getNodeName
argument_list|()
argument_list|)
condition|)
block|{
name|String
name|lineNumber
init|=
operator|(
name|String
operator|)
name|xmlNode
operator|.
name|getUserData
argument_list|(
name|XmlLineNumberParser
operator|.
name|LINE_NUMBER
argument_list|)
decl_stmt|;
name|String
name|lineNumberEnd
init|=
operator|(
name|String
operator|)
name|xmlNode
operator|.
name|getUserData
argument_list|(
name|XmlLineNumberParser
operator|.
name|LINE_NUMBER_END
argument_list|)
decl_stmt|;
name|detail
operator|.
name|setLineNumber
argument_list|(
name|lineNumber
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setLineNumberEnd
argument_list|(
name|lineNumberEnd
argument_list|)
expr_stmt|;
name|extractAttributes
argument_list|(
name|xmlNode
argument_list|,
name|detail
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|isParentRest
argument_list|(
name|xmlNode
argument_list|)
condition|)
block|{
if|if
condition|(
literal|"delete"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getNodeName
argument_list|()
argument_list|)
condition|)
block|{
name|RestVerbDetails
name|verb
init|=
operator|new
name|RestVerbDetails
argument_list|()
decl_stmt|;
name|verb
operator|.
name|setMethod
argument_list|(
literal|"delete"
argument_list|)
expr_stmt|;
name|detail
operator|.
name|addVerb
argument_list|(
name|verb
argument_list|)
expr_stmt|;
name|extractAttributes
argument_list|(
name|xmlNode
argument_list|,
name|verb
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"get"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getNodeName
argument_list|()
argument_list|)
condition|)
block|{
name|RestVerbDetails
name|verb
init|=
operator|new
name|RestVerbDetails
argument_list|()
decl_stmt|;
name|verb
operator|.
name|setMethod
argument_list|(
literal|"get"
argument_list|)
expr_stmt|;
name|detail
operator|.
name|addVerb
argument_list|(
name|verb
argument_list|)
expr_stmt|;
name|extractAttributes
argument_list|(
name|xmlNode
argument_list|,
name|verb
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"head"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getNodeName
argument_list|()
argument_list|)
condition|)
block|{
name|RestVerbDetails
name|verb
init|=
operator|new
name|RestVerbDetails
argument_list|()
decl_stmt|;
name|verb
operator|.
name|setMethod
argument_list|(
literal|"head"
argument_list|)
expr_stmt|;
name|detail
operator|.
name|addVerb
argument_list|(
name|verb
argument_list|)
expr_stmt|;
name|extractAttributes
argument_list|(
name|xmlNode
argument_list|,
name|verb
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"patch"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getNodeName
argument_list|()
argument_list|)
condition|)
block|{
name|RestVerbDetails
name|verb
init|=
operator|new
name|RestVerbDetails
argument_list|()
decl_stmt|;
name|verb
operator|.
name|setMethod
argument_list|(
literal|"patch"
argument_list|)
expr_stmt|;
name|detail
operator|.
name|addVerb
argument_list|(
name|verb
argument_list|)
expr_stmt|;
name|extractAttributes
argument_list|(
name|xmlNode
argument_list|,
name|verb
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"post"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getNodeName
argument_list|()
argument_list|)
condition|)
block|{
name|RestVerbDetails
name|verb
init|=
operator|new
name|RestVerbDetails
argument_list|()
decl_stmt|;
name|verb
operator|.
name|setMethod
argument_list|(
literal|"post"
argument_list|)
expr_stmt|;
name|detail
operator|.
name|addVerb
argument_list|(
name|verb
argument_list|)
expr_stmt|;
name|extractAttributes
argument_list|(
name|xmlNode
argument_list|,
name|verb
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"put"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getNodeName
argument_list|()
argument_list|)
condition|)
block|{
name|RestVerbDetails
name|verb
init|=
operator|new
name|RestVerbDetails
argument_list|()
decl_stmt|;
name|verb
operator|.
name|setMethod
argument_list|(
literal|"put"
argument_list|)
expr_stmt|;
name|detail
operator|.
name|addVerb
argument_list|(
name|verb
argument_list|)
expr_stmt|;
name|extractAttributes
argument_list|(
name|xmlNode
argument_list|,
name|verb
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
literal|"description"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getNodeName
argument_list|()
argument_list|)
condition|)
block|{
name|String
name|value
init|=
name|xmlNode
operator|.
name|getTextContent
argument_list|()
decl_stmt|;
name|RestVerbDetails
name|verb
init|=
name|getLastVerb
argument_list|(
name|detail
argument_list|)
decl_stmt|;
if|if
condition|(
name|verb
operator|!=
literal|null
condition|)
block|{
name|verb
operator|.
name|setDescription
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|detail
operator|.
name|setDescription
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
literal|"to"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getNodeName
argument_list|()
argument_list|)
condition|)
block|{
name|NamedNodeMap
name|map
init|=
name|xmlNode
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
name|String
name|uri
init|=
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"uri"
argument_list|)
decl_stmt|;
name|RestVerbDetails
name|verb
init|=
name|getLastVerb
argument_list|(
name|detail
argument_list|)
decl_stmt|;
if|if
condition|(
name|verb
operator|!=
literal|null
condition|)
block|{
name|verb
operator|.
name|setTo
argument_list|(
name|uri
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
literal|"toD"
operator|.
name|equals
argument_list|(
name|xmlNode
operator|.
name|getNodeName
argument_list|()
argument_list|)
condition|)
block|{
name|NamedNodeMap
name|map
init|=
name|xmlNode
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
name|String
name|uri
init|=
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"uri"
argument_list|)
decl_stmt|;
name|RestVerbDetails
name|verb
init|=
name|getLastVerb
argument_list|(
name|detail
argument_list|)
decl_stmt|;
if|if
condition|(
name|verb
operator|!=
literal|null
condition|)
block|{
name|verb
operator|.
name|setToD
argument_list|(
name|uri
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|// walk the rest of the children
name|NodeList
name|children
init|=
name|xmlNode
operator|.
name|getChildNodes
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|children
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Node
name|child
init|=
name|children
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|child
operator|.
name|getNodeType
argument_list|()
operator|==
name|Node
operator|.
name|ELEMENT_NODE
condition|)
block|{
name|walkXmlTree
argument_list|(
name|child
argument_list|,
name|detail
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|extractAttributes (Node xmlNode, RestServiceDetails detail)
specifier|private
specifier|static
name|void
name|extractAttributes
parameter_list|(
name|Node
name|xmlNode
parameter_list|,
name|RestServiceDetails
name|detail
parameter_list|)
block|{
name|NamedNodeMap
name|map
init|=
name|xmlNode
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
name|detail
operator|.
name|setConsumes
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"consumes"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setProduces
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"produces"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setApiDocs
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"apiDocs"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setBindingMode
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"bindingMode"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setClientRequestValidation
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"clientRequestValidation"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setEnableCORS
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"enableCORS"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setPath
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"path"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setSkipBindingOnErrorCode
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"skipBindingOnErrorCode"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setTag
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"tag"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|extractAttributes (Node xmlNode, RestVerbDetails detail)
specifier|private
specifier|static
name|void
name|extractAttributes
parameter_list|(
name|Node
name|xmlNode
parameter_list|,
name|RestVerbDetails
name|detail
parameter_list|)
block|{
name|NamedNodeMap
name|map
init|=
name|xmlNode
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
name|detail
operator|.
name|setUri
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"uri"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setConsumes
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"consumes"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setProduces
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"produces"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setApiDocs
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"apiDocs"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setBindingMode
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"bindingMode"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setClientRequestValidation
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"clientRequestValidation"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setSkipBindingOnErrorCode
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"skipBindingOnErrorCode"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setType
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setOutType
argument_list|(
name|extractAttribute
argument_list|(
name|map
argument_list|,
literal|"outType"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getLastVerb (RestServiceDetails detail)
specifier|private
specifier|static
name|RestVerbDetails
name|getLastVerb
parameter_list|(
name|RestServiceDetails
name|detail
parameter_list|)
block|{
if|if
condition|(
name|detail
operator|.
name|getVerbs
argument_list|()
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
name|detail
operator|.
name|getVerbs
argument_list|()
operator|.
name|get
argument_list|(
name|detail
operator|.
name|getVerbs
argument_list|()
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
return|;
block|}
DECL|method|isParentRest (Node node)
specifier|private
specifier|static
name|boolean
name|isParentRest
parameter_list|(
name|Node
name|node
parameter_list|)
block|{
if|if
condition|(
name|node
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
name|String
name|name
init|=
name|node
operator|.
name|getNodeName
argument_list|()
decl_stmt|;
if|if
condition|(
literal|"rest"
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
else|else
block|{
return|return
name|isParentRest
argument_list|(
name|node
operator|.
name|getParentNode
argument_list|()
argument_list|)
return|;
block|}
block|}
DECL|method|extractAttribute (NamedNodeMap map, String name)
specifier|private
specifier|static
name|String
name|extractAttribute
parameter_list|(
name|NamedNodeMap
name|map
parameter_list|,
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
name|map
operator|!=
literal|null
condition|)
block|{
name|Node
name|attr
init|=
name|map
operator|.
name|getNamedItem
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|attr
operator|!=
literal|null
condition|)
block|{
return|return
name|attr
operator|.
name|getTextContent
argument_list|()
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

