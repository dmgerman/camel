begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.parser.model
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|parser
operator|.
name|model
package|;
end_package

begin_comment
comment|/**  * Details about a parsed and discovered Camel endpoint.  */
end_comment

begin_class
DECL|class|CamelEndpointDetails
specifier|public
class|class
name|CamelEndpointDetails
block|{
DECL|field|fileName
specifier|private
name|String
name|fileName
decl_stmt|;
DECL|field|lineNumber
specifier|private
name|String
name|lineNumber
decl_stmt|;
DECL|field|lineNumberEnd
specifier|private
name|String
name|lineNumberEnd
decl_stmt|;
DECL|field|absolutePosition
specifier|private
name|int
name|absolutePosition
decl_stmt|;
DECL|field|linePosition
specifier|private
name|int
name|linePosition
decl_stmt|;
DECL|field|className
specifier|private
name|String
name|className
decl_stmt|;
DECL|field|methodName
specifier|private
name|String
name|methodName
decl_stmt|;
DECL|field|endpointComponentName
specifier|private
name|String
name|endpointComponentName
decl_stmt|;
DECL|field|endpointInstance
specifier|private
name|String
name|endpointInstance
decl_stmt|;
DECL|field|endpointUri
specifier|private
name|String
name|endpointUri
decl_stmt|;
DECL|field|consumerOnly
specifier|private
name|boolean
name|consumerOnly
decl_stmt|;
DECL|field|producerOnly
specifier|private
name|boolean
name|producerOnly
decl_stmt|;
DECL|method|getFileName ()
specifier|public
name|String
name|getFileName
parameter_list|()
block|{
return|return
name|fileName
return|;
block|}
DECL|method|setFileName (String fileName)
specifier|public
name|void
name|setFileName
parameter_list|(
name|String
name|fileName
parameter_list|)
block|{
name|this
operator|.
name|fileName
operator|=
name|fileName
expr_stmt|;
block|}
DECL|method|getLineNumber ()
specifier|public
name|String
name|getLineNumber
parameter_list|()
block|{
return|return
name|lineNumber
return|;
block|}
DECL|method|setLineNumber (String lineNumber)
specifier|public
name|void
name|setLineNumber
parameter_list|(
name|String
name|lineNumber
parameter_list|)
block|{
name|this
operator|.
name|lineNumber
operator|=
name|lineNumber
expr_stmt|;
block|}
DECL|method|getLineNumberEnd ()
specifier|public
name|String
name|getLineNumberEnd
parameter_list|()
block|{
return|return
name|lineNumberEnd
return|;
block|}
DECL|method|setLineNumberEnd (String lineNumberEnd)
specifier|public
name|void
name|setLineNumberEnd
parameter_list|(
name|String
name|lineNumberEnd
parameter_list|)
block|{
name|this
operator|.
name|lineNumberEnd
operator|=
name|lineNumberEnd
expr_stmt|;
block|}
DECL|method|getAbsolutePosition ()
specifier|public
name|int
name|getAbsolutePosition
parameter_list|()
block|{
return|return
name|absolutePosition
return|;
block|}
comment|/**      * The absolute position where 0 is the beginning of the file. This is only available for Java DSL.      */
DECL|method|setAbsolutePosition (int absolutePosition)
specifier|public
name|void
name|setAbsolutePosition
parameter_list|(
name|int
name|absolutePosition
parameter_list|)
block|{
name|this
operator|.
name|absolutePosition
operator|=
name|absolutePosition
expr_stmt|;
block|}
DECL|method|getLinePosition ()
specifier|public
name|int
name|getLinePosition
parameter_list|()
block|{
return|return
name|linePosition
return|;
block|}
comment|/**      * The relative position in the line number (start line).      */
DECL|method|setLinePosition (int linePosition)
specifier|public
name|void
name|setLinePosition
parameter_list|(
name|int
name|linePosition
parameter_list|)
block|{
name|this
operator|.
name|linePosition
operator|=
name|linePosition
expr_stmt|;
block|}
DECL|method|getClassName ()
specifier|public
name|String
name|getClassName
parameter_list|()
block|{
return|return
name|className
return|;
block|}
DECL|method|setClassName (String className)
specifier|public
name|void
name|setClassName
parameter_list|(
name|String
name|className
parameter_list|)
block|{
name|this
operator|.
name|className
operator|=
name|className
expr_stmt|;
block|}
DECL|method|getMethodName ()
specifier|public
name|String
name|getMethodName
parameter_list|()
block|{
return|return
name|methodName
return|;
block|}
DECL|method|setMethodName (String methodName)
specifier|public
name|void
name|setMethodName
parameter_list|(
name|String
name|methodName
parameter_list|)
block|{
name|this
operator|.
name|methodName
operator|=
name|methodName
expr_stmt|;
block|}
DECL|method|getEndpointComponentName ()
specifier|public
name|String
name|getEndpointComponentName
parameter_list|()
block|{
return|return
name|endpointComponentName
return|;
block|}
DECL|method|setEndpointComponentName (String endpointComponentName)
specifier|public
name|void
name|setEndpointComponentName
parameter_list|(
name|String
name|endpointComponentName
parameter_list|)
block|{
name|this
operator|.
name|endpointComponentName
operator|=
name|endpointComponentName
expr_stmt|;
block|}
DECL|method|getEndpointInstance ()
specifier|public
name|String
name|getEndpointInstance
parameter_list|()
block|{
return|return
name|endpointInstance
return|;
block|}
DECL|method|setEndpointInstance (String endpointInstance)
specifier|public
name|void
name|setEndpointInstance
parameter_list|(
name|String
name|endpointInstance
parameter_list|)
block|{
name|this
operator|.
name|endpointInstance
operator|=
name|endpointInstance
expr_stmt|;
block|}
DECL|method|getEndpointUri ()
specifier|public
name|String
name|getEndpointUri
parameter_list|()
block|{
return|return
name|endpointUri
return|;
block|}
DECL|method|setEndpointUri (String endpointUri)
specifier|public
name|void
name|setEndpointUri
parameter_list|(
name|String
name|endpointUri
parameter_list|)
block|{
name|this
operator|.
name|endpointUri
operator|=
name|endpointUri
expr_stmt|;
block|}
DECL|method|isConsumerOnly ()
specifier|public
name|boolean
name|isConsumerOnly
parameter_list|()
block|{
return|return
name|consumerOnly
return|;
block|}
DECL|method|setConsumerOnly (boolean consumerOnly)
specifier|public
name|void
name|setConsumerOnly
parameter_list|(
name|boolean
name|consumerOnly
parameter_list|)
block|{
name|this
operator|.
name|consumerOnly
operator|=
name|consumerOnly
expr_stmt|;
block|}
DECL|method|isProducerOnly ()
specifier|public
name|boolean
name|isProducerOnly
parameter_list|()
block|{
return|return
name|producerOnly
return|;
block|}
DECL|method|setProducerOnly (boolean producerOnly)
specifier|public
name|void
name|setProducerOnly
parameter_list|(
name|boolean
name|producerOnly
parameter_list|)
block|{
name|this
operator|.
name|producerOnly
operator|=
name|producerOnly
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"CamelEndpointDetails["
operator|+
literal|"fileName='"
operator|+
name|fileName
operator|+
literal|'\''
operator|+
literal|", lineNumber='"
operator|+
name|lineNumber
operator|+
literal|'\''
operator|+
literal|", lineNumberEnd='"
operator|+
name|lineNumberEnd
operator|+
literal|'\''
operator|+
literal|", className='"
operator|+
name|className
operator|+
literal|'\''
operator|+
literal|", methodName='"
operator|+
name|methodName
operator|+
literal|'\''
operator|+
literal|", endpointComponentName='"
operator|+
name|endpointComponentName
operator|+
literal|'\''
operator|+
literal|", endpointInstance='"
operator|+
name|endpointInstance
operator|+
literal|'\''
operator|+
literal|", endpointUri='"
operator|+
name|endpointUri
operator|+
literal|'\''
operator|+
literal|", consumerOnly="
operator|+
name|consumerOnly
operator|+
literal|", producerOnly="
operator|+
name|producerOnly
operator|+
literal|']'
return|;
block|}
block|}
end_class

end_unit

