begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.parser.xml
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|parser
operator|.
name|xml
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|parser
operator|.
name|XmlRouteParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|parser
operator|.
name|model
operator|.
name|CamelEndpointDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|XmlRouteTest
specifier|public
class|class
name|XmlRouteTest
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|XmlRouteTest
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Test
DECL|method|testXml ()
specifier|public
name|void
name|testXml
parameter_list|()
throws|throws
name|Exception
block|{
name|test
argument_list|(
literal|"mycamel"
argument_list|,
literal|29
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testXmlWithNamespacePrefix ()
specifier|public
name|void
name|testXmlWithNamespacePrefix
parameter_list|()
throws|throws
name|Exception
block|{
name|test
argument_list|(
literal|"mycamel-withNamespacePrefix"
argument_list|,
literal|51
argument_list|)
expr_stmt|;
block|}
DECL|method|test (String filename, int pos)
specifier|private
name|void
name|test
parameter_list|(
name|String
name|filename
parameter_list|,
name|int
name|pos
parameter_list|)
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|CamelEndpointDetails
argument_list|>
name|endpoints
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|InputStream
name|is
init|=
operator|new
name|FileInputStream
argument_list|(
literal|"src/test/resources/org/apache/camel/parser/xml/"
operator|+
name|filename
operator|+
literal|".xml"
argument_list|)
decl_stmt|;
name|String
name|fqn
init|=
literal|"src/test/resources/org/apache/camel/camel/parser/xml/"
operator|+
name|filename
operator|+
literal|".xml"
decl_stmt|;
name|String
name|baseDir
init|=
literal|"src/test/resources"
decl_stmt|;
name|XmlRouteParser
operator|.
name|parseXmlRouteEndpoints
argument_list|(
name|is
argument_list|,
name|baseDir
argument_list|,
name|fqn
argument_list|,
name|endpoints
argument_list|)
expr_stmt|;
for|for
control|(
name|CamelEndpointDetails
name|detail
range|:
name|endpoints
control|)
block|{
name|LOG
operator|.
name|info
argument_list|(
name|detail
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"stream:in?promptMessage=Enter something:"
argument_list|,
name|endpoints
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"stream:out"
argument_list|,
name|endpoints
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getEndpointUri
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"39"
argument_list|,
name|endpoints
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getLineNumber
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|pos
argument_list|,
name|endpoints
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getLinePosition
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

