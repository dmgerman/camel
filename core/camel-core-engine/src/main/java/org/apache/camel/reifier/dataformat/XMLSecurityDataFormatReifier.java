begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.reifier.dataformat
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|reifier
operator|.
name|dataformat
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|DataFormatDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|dataformat
operator|.
name|XMLSecurityDataFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|DataFormat
import|;
end_import

begin_class
DECL|class|XMLSecurityDataFormatReifier
specifier|public
class|class
name|XMLSecurityDataFormatReifier
extends|extends
name|DataFormatReifier
argument_list|<
name|XMLSecurityDataFormat
argument_list|>
block|{
DECL|field|DEFAULT_ENCRYPTION_ALG
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_ENCRYPTION_ALG
init|=
literal|"http://www.w3.org/2009/xmlenc11#aes256-gcm"
decl_stmt|;
DECL|method|XMLSecurityDataFormatReifier (DataFormatDefinition definition)
specifier|public
name|XMLSecurityDataFormatReifier
parameter_list|(
name|DataFormatDefinition
name|definition
parameter_list|)
block|{
name|super
argument_list|(
operator|(
name|XMLSecurityDataFormat
operator|)
name|definition
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|configureDataFormat (DataFormat dataFormat, CamelContext camelContext)
specifier|protected
name|void
name|configureDataFormat
parameter_list|(
name|DataFormat
name|dataFormat
parameter_list|,
name|CamelContext
name|camelContext
parameter_list|)
block|{
if|if
condition|(
name|definition
operator|.
name|getSecureTag
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"secureTag"
argument_list|,
name|definition
operator|.
name|getSecureTag
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"secureTag"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
name|boolean
name|isSecureTagContents
init|=
name|definition
operator|.
name|getSecureTagContents
argument_list|()
operator|!=
literal|null
operator|&&
name|definition
operator|.
name|getSecureTagContents
argument_list|()
decl_stmt|;
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"secureTagContents"
argument_list|,
name|isSecureTagContents
argument_list|)
expr_stmt|;
if|if
condition|(
name|definition
operator|.
name|getPassPhrase
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"passPhrase"
argument_list|,
name|definition
operator|.
name|getPassPhrase
argument_list|()
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|definition
operator|.
name|getPassPhraseByte
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"passPhrase"
argument_list|,
name|definition
operator|.
name|getPassPhraseByte
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|definition
operator|.
name|getXmlCipherAlgorithm
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"xmlCipherAlgorithm"
argument_list|,
name|definition
operator|.
name|getXmlCipherAlgorithm
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"xmlCipherAlgorithm"
argument_list|,
name|DEFAULT_ENCRYPTION_ALG
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|definition
operator|.
name|getKeyCipherAlgorithm
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"keyCipherAlgorithm"
argument_list|,
name|definition
operator|.
name|getKeyCipherAlgorithm
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|definition
operator|.
name|getRecipientKeyAlias
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"recipientKeyAlias"
argument_list|,
name|definition
operator|.
name|getRecipientKeyAlias
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|definition
operator|.
name|getKeyOrTrustStoreParametersRef
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"keyOrTrustStoreParametersRef"
argument_list|,
name|definition
operator|.
name|getKeyOrTrustStoreParametersRef
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|definition
operator|.
name|getKeyOrTrustStoreParameters
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"keyOrTrustStoreParameters"
argument_list|,
name|definition
operator|.
name|getKeyOrTrustStoreParameters
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|definition
operator|.
name|getNamespaces
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"namespaces"
argument_list|,
name|definition
operator|.
name|getNamespaces
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|definition
operator|.
name|getKeyPassword
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"keyPassword"
argument_list|,
name|definition
operator|.
name|getKeyPassword
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|definition
operator|.
name|getDigestAlgorithm
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"digestAlgorithm"
argument_list|,
name|definition
operator|.
name|getDigestAlgorithm
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|definition
operator|.
name|getMgfAlgorithm
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"mgfAlgorithm"
argument_list|,
name|definition
operator|.
name|getMgfAlgorithm
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// should be true by default
name|boolean
name|isAddKeyValueForEncryptedKey
init|=
name|definition
operator|.
name|getAddKeyValueForEncryptedKey
argument_list|()
operator|==
literal|null
operator|||
name|definition
operator|.
name|getAddKeyValueForEncryptedKey
argument_list|()
decl_stmt|;
name|setProperty
argument_list|(
name|camelContext
argument_list|,
name|dataFormat
argument_list|,
literal|"addKeyValueForEncryptedKey"
argument_list|,
name|isAddKeyValueForEncryptedKey
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

