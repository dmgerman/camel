begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.builder.endpoint.dsl
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|dsl
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Generated
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ExchangePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointConsumerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointProducerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|AbstractEndpointBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ExceptionHandler
import|;
end_import

begin_comment
comment|/**  * The Kubernetes Replication Controllers component provides a producer to  * execute kubernetes replication controller operations and a consumer to  * consume replication controller events.  *   * Generated by camel-package-maven-plugin - do not edit this file!  */
end_comment

begin_interface
annotation|@
name|Generated
argument_list|(
literal|"org.apache.camel.maven.packaging.EndpointDslMojo"
argument_list|)
DECL|interface|KubernetesReplicationControllersEndpointBuilderFactory
specifier|public
interface|interface
name|KubernetesReplicationControllersEndpointBuilderFactory
block|{
comment|/**      * Builder for endpoint consumers for the Kubernetes Replication Controller      * component.      */
DECL|interface|KubernetesReplicationControllersEndpointConsumerBuilder
specifier|public
interface|interface
name|KubernetesReplicationControllersEndpointConsumerBuilder
extends|extends
name|EndpointConsumerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointConsumerBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedKubernetesReplicationControllersEndpointConsumerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * The Kubernetes API Version to use.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|apiVersion ( String apiVersion)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|apiVersion
parameter_list|(
name|String
name|apiVersion
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"apiVersion"
argument_list|,
name|apiVersion
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The dns domain, used for ServiceCall EIP.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|dnsDomain ( String dnsDomain)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|dnsDomain
parameter_list|(
name|String
name|dnsDomain
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"dnsDomain"
argument_list|,
name|dnsDomain
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Default KubernetesClient to use if provided.          *           * The option is a:          *<code>io.fabric8.kubernetes.client.KubernetesClient</code> type.          *           * Group: common          */
DECL|method|kubernetesClient ( Object kubernetesClient)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|kubernetesClient
parameter_list|(
name|Object
name|kubernetesClient
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"kubernetesClient"
argument_list|,
name|kubernetesClient
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Default KubernetesClient to use if provided.          *           * The option will be converted to a          *<code>io.fabric8.kubernetes.client.KubernetesClient</code> type.          *           * Group: common          */
DECL|method|kubernetesClient ( String kubernetesClient)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|kubernetesClient
parameter_list|(
name|String
name|kubernetesClient
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"kubernetesClient"
argument_list|,
name|kubernetesClient
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The port name, used for ServiceCall EIP.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|portName ( String portName)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|portName
parameter_list|(
name|String
name|portName
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"portName"
argument_list|,
name|portName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The port protocol, used for ServiceCall EIP.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|portProtocol ( String portProtocol)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|portProtocol
parameter_list|(
name|String
name|portProtocol
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"portProtocol"
argument_list|,
name|portProtocol
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Allows for bridging the consumer to the Camel routing Error Handler,          * which mean any exceptions occurred while the consumer is trying to          * pickup incoming messages, or the likes, will now be processed as a          * message and handled by the routing Error Handler. By default the          * consumer will use the org.apache.camel.spi.ExceptionHandler to deal          * with exceptions, that will be logged at WARN or ERROR level and          * ignored.          *           * The option is a:<code>boolean</code> type.          *           * Group: consumer          */
DECL|method|bridgeErrorHandler ( boolean bridgeErrorHandler)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|bridgeErrorHandler
parameter_list|(
name|boolean
name|bridgeErrorHandler
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"bridgeErrorHandler"
argument_list|,
name|bridgeErrorHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Allows for bridging the consumer to the Camel routing Error Handler,          * which mean any exceptions occurred while the consumer is trying to          * pickup incoming messages, or the likes, will now be processed as a          * message and handled by the routing Error Handler. By default the          * consumer will use the org.apache.camel.spi.ExceptionHandler to deal          * with exceptions, that will be logged at WARN or ERROR level and          * ignored.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: consumer          */
DECL|method|bridgeErrorHandler ( String bridgeErrorHandler)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|bridgeErrorHandler
parameter_list|(
name|String
name|bridgeErrorHandler
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"bridgeErrorHandler"
argument_list|,
name|bridgeErrorHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Consumer Label key when watching at some resources.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: consumer          */
DECL|method|labelKey ( String labelKey)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|labelKey
parameter_list|(
name|String
name|labelKey
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"labelKey"
argument_list|,
name|labelKey
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Consumer Label value when watching at some resources.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: consumer          */
DECL|method|labelValue ( String labelValue)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|labelValue
parameter_list|(
name|String
name|labelValue
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"labelValue"
argument_list|,
name|labelValue
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The namespace.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: consumer          */
DECL|method|namespace ( String namespace)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|namespace
parameter_list|(
name|String
name|namespace
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"namespace"
argument_list|,
name|namespace
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Consumer pool size.          *           * The option is a:<code>int</code> type.          *           * Group: consumer          */
DECL|method|poolSize ( int poolSize)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|poolSize
parameter_list|(
name|int
name|poolSize
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"poolSize"
argument_list|,
name|poolSize
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Consumer pool size.          *           * The option will be converted to a<code>int</code> type.          *           * Group: consumer          */
DECL|method|poolSize ( String poolSize)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|poolSize
parameter_list|(
name|String
name|poolSize
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"poolSize"
argument_list|,
name|poolSize
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Consumer Resource Name we would like to watch.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: consumer          */
DECL|method|resourceName ( String resourceName)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|resourceName
parameter_list|(
name|String
name|resourceName
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"resourceName"
argument_list|,
name|resourceName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The CA Cert Data.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|caCertData ( String caCertData)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|caCertData
parameter_list|(
name|String
name|caCertData
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"caCertData"
argument_list|,
name|caCertData
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The CA Cert File.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|caCertFile ( String caCertFile)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|caCertFile
parameter_list|(
name|String
name|caCertFile
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"caCertFile"
argument_list|,
name|caCertFile
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Client Cert Data.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|clientCertData ( String clientCertData)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|clientCertData
parameter_list|(
name|String
name|clientCertData
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"clientCertData"
argument_list|,
name|clientCertData
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Client Cert File.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|clientCertFile ( String clientCertFile)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|clientCertFile
parameter_list|(
name|String
name|clientCertFile
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"clientCertFile"
argument_list|,
name|clientCertFile
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Key Algorithm used by the client.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|clientKeyAlgo ( String clientKeyAlgo)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|clientKeyAlgo
parameter_list|(
name|String
name|clientKeyAlgo
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"clientKeyAlgo"
argument_list|,
name|clientKeyAlgo
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Client Key data.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|clientKeyData ( String clientKeyData)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|clientKeyData
parameter_list|(
name|String
name|clientKeyData
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"clientKeyData"
argument_list|,
name|clientKeyData
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Client Key file.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|clientKeyFile ( String clientKeyFile)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|clientKeyFile
parameter_list|(
name|String
name|clientKeyFile
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"clientKeyFile"
argument_list|,
name|clientKeyFile
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Client Key Passphrase.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|clientKeyPassphrase ( String clientKeyPassphrase)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|clientKeyPassphrase
parameter_list|(
name|String
name|clientKeyPassphrase
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"clientKeyPassphrase"
argument_list|,
name|clientKeyPassphrase
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Auth Token.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oauthToken ( String oauthToken)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|oauthToken
parameter_list|(
name|String
name|oauthToken
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"oauthToken"
argument_list|,
name|oauthToken
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Password to connect to Kubernetes.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|password ( String password)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|password
parameter_list|(
name|String
name|password
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"password"
argument_list|,
name|password
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Define if the certs we used are trusted anyway or not.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: security          */
DECL|method|trustCerts ( Boolean trustCerts)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|trustCerts
parameter_list|(
name|Boolean
name|trustCerts
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"trustCerts"
argument_list|,
name|trustCerts
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Define if the certs we used are trusted anyway or not.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: security          */
DECL|method|trustCerts ( String trustCerts)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|trustCerts
parameter_list|(
name|String
name|trustCerts
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"trustCerts"
argument_list|,
name|trustCerts
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Username to connect to Kubernetes.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|username ( String username)
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|username
parameter_list|(
name|String
name|username
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"username"
argument_list|,
name|username
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint consumers for the Kubernetes Replication      * Controller component.      */
DECL|interface|AdvancedKubernetesReplicationControllersEndpointConsumerBuilder
specifier|public
interface|interface
name|AdvancedKubernetesReplicationControllersEndpointConsumerBuilder
extends|extends
name|EndpointConsumerBuilder
block|{
DECL|method|basic ()
specifier|default
name|KubernetesReplicationControllersEndpointConsumerBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|KubernetesReplicationControllersEndpointConsumerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * To let the consumer use a custom ExceptionHandler. Notice if the          * option bridgeErrorHandler is enabled then this option is not in use.          * By default the consumer will deal with exceptions, that will be          * logged at WARN or ERROR level and ignored.          *           * The option is a:<code>org.apache.camel.spi.ExceptionHandler</code>          * type.          *           * Group: consumer (advanced)          */
DECL|method|exceptionHandler ( ExceptionHandler exceptionHandler)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointConsumerBuilder
name|exceptionHandler
parameter_list|(
name|ExceptionHandler
name|exceptionHandler
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"exceptionHandler"
argument_list|,
name|exceptionHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To let the consumer use a custom ExceptionHandler. Notice if the          * option bridgeErrorHandler is enabled then this option is not in use.          * By default the consumer will deal with exceptions, that will be          * logged at WARN or ERROR level and ignored.          *           * The option will be converted to a          *<code>org.apache.camel.spi.ExceptionHandler</code> type.          *           * Group: consumer (advanced)          */
DECL|method|exceptionHandler ( String exceptionHandler)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointConsumerBuilder
name|exceptionHandler
parameter_list|(
name|String
name|exceptionHandler
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"exceptionHandler"
argument_list|,
name|exceptionHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets the exchange pattern when the consumer creates an exchange.          *           * The option is a:<code>org.apache.camel.ExchangePattern</code> type.          *           * Group: consumer (advanced)          */
DECL|method|exchangePattern ( ExchangePattern exchangePattern)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointConsumerBuilder
name|exchangePattern
parameter_list|(
name|ExchangePattern
name|exchangePattern
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"exchangePattern"
argument_list|,
name|exchangePattern
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets the exchange pattern when the consumer creates an exchange.          *           * The option will be converted to a          *<code>org.apache.camel.ExchangePattern</code> type.          *           * Group: consumer (advanced)          */
DECL|method|exchangePattern ( String exchangePattern)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointConsumerBuilder
name|exchangePattern
parameter_list|(
name|String
name|exchangePattern
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"exchangePattern"
argument_list|,
name|exchangePattern
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointConsumerBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointConsumerBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Connection timeout in milliseconds to use when making requests to the          * Kubernetes API server.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: advanced          */
DECL|method|connectionTimeout ( Integer connectionTimeout)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointConsumerBuilder
name|connectionTimeout
parameter_list|(
name|Integer
name|connectionTimeout
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"connectionTimeout"
argument_list|,
name|connectionTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Connection timeout in milliseconds to use when making requests to the          * Kubernetes API server.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: advanced          */
DECL|method|connectionTimeout ( String connectionTimeout)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointConsumerBuilder
name|connectionTimeout
parameter_list|(
name|String
name|connectionTimeout
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"connectionTimeout"
argument_list|,
name|connectionTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( boolean synchronous)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointConsumerBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( String synchronous)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointConsumerBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Builder for endpoint producers for the Kubernetes Replication Controller      * component.      */
DECL|interface|KubernetesReplicationControllersEndpointProducerBuilder
specifier|public
interface|interface
name|KubernetesReplicationControllersEndpointProducerBuilder
extends|extends
name|EndpointProducerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointProducerBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedKubernetesReplicationControllersEndpointProducerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * The Kubernetes API Version to use.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|apiVersion ( String apiVersion)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|apiVersion
parameter_list|(
name|String
name|apiVersion
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"apiVersion"
argument_list|,
name|apiVersion
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The dns domain, used for ServiceCall EIP.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|dnsDomain ( String dnsDomain)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|dnsDomain
parameter_list|(
name|String
name|dnsDomain
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"dnsDomain"
argument_list|,
name|dnsDomain
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Default KubernetesClient to use if provided.          *           * The option is a:          *<code>io.fabric8.kubernetes.client.KubernetesClient</code> type.          *           * Group: common          */
DECL|method|kubernetesClient ( Object kubernetesClient)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|kubernetesClient
parameter_list|(
name|Object
name|kubernetesClient
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"kubernetesClient"
argument_list|,
name|kubernetesClient
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Default KubernetesClient to use if provided.          *           * The option will be converted to a          *<code>io.fabric8.kubernetes.client.KubernetesClient</code> type.          *           * Group: common          */
DECL|method|kubernetesClient ( String kubernetesClient)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|kubernetesClient
parameter_list|(
name|String
name|kubernetesClient
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"kubernetesClient"
argument_list|,
name|kubernetesClient
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The port name, used for ServiceCall EIP.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|portName ( String portName)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|portName
parameter_list|(
name|String
name|portName
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"portName"
argument_list|,
name|portName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The port protocol, used for ServiceCall EIP.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|portProtocol ( String portProtocol)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|portProtocol
parameter_list|(
name|String
name|portProtocol
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"portProtocol"
argument_list|,
name|portProtocol
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the producer should be started lazy (on the first message).          * By starting lazy you can use this to allow CamelContext and routes to          * startup in situations where a producer may otherwise fail during          * starting and cause the route to fail being started. By deferring this          * startup to be lazy then the startup failure can be handled during          * routing messages via Camel's routing error handlers. Beware that when          * the first message is processed then creating and starting the          * producer may take a little time and prolong the total processing time          * of the processing.          *           * The option is a:<code>boolean</code> type.          *           * Group: producer          */
DECL|method|lazyStartProducer ( boolean lazyStartProducer)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|lazyStartProducer
parameter_list|(
name|boolean
name|lazyStartProducer
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"lazyStartProducer"
argument_list|,
name|lazyStartProducer
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the producer should be started lazy (on the first message).          * By starting lazy you can use this to allow CamelContext and routes to          * startup in situations where a producer may otherwise fail during          * starting and cause the route to fail being started. By deferring this          * startup to be lazy then the startup failure can be handled during          * routing messages via Camel's routing error handlers. Beware that when          * the first message is processed then creating and starting the          * producer may take a little time and prolong the total processing time          * of the processing.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: producer          */
DECL|method|lazyStartProducer ( String lazyStartProducer)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|lazyStartProducer
parameter_list|(
name|String
name|lazyStartProducer
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"lazyStartProducer"
argument_list|,
name|lazyStartProducer
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Producer operation to do on Kubernetes.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: producer          */
DECL|method|operation ( String operation)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|operation
parameter_list|(
name|String
name|operation
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"operation"
argument_list|,
name|operation
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The CA Cert Data.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|caCertData ( String caCertData)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|caCertData
parameter_list|(
name|String
name|caCertData
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"caCertData"
argument_list|,
name|caCertData
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The CA Cert File.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|caCertFile ( String caCertFile)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|caCertFile
parameter_list|(
name|String
name|caCertFile
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"caCertFile"
argument_list|,
name|caCertFile
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Client Cert Data.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|clientCertData ( String clientCertData)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|clientCertData
parameter_list|(
name|String
name|clientCertData
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"clientCertData"
argument_list|,
name|clientCertData
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Client Cert File.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|clientCertFile ( String clientCertFile)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|clientCertFile
parameter_list|(
name|String
name|clientCertFile
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"clientCertFile"
argument_list|,
name|clientCertFile
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Key Algorithm used by the client.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|clientKeyAlgo ( String clientKeyAlgo)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|clientKeyAlgo
parameter_list|(
name|String
name|clientKeyAlgo
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"clientKeyAlgo"
argument_list|,
name|clientKeyAlgo
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Client Key data.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|clientKeyData ( String clientKeyData)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|clientKeyData
parameter_list|(
name|String
name|clientKeyData
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"clientKeyData"
argument_list|,
name|clientKeyData
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Client Key file.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|clientKeyFile ( String clientKeyFile)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|clientKeyFile
parameter_list|(
name|String
name|clientKeyFile
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"clientKeyFile"
argument_list|,
name|clientKeyFile
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Client Key Passphrase.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|clientKeyPassphrase ( String clientKeyPassphrase)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|clientKeyPassphrase
parameter_list|(
name|String
name|clientKeyPassphrase
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"clientKeyPassphrase"
argument_list|,
name|clientKeyPassphrase
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Auth Token.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oauthToken ( String oauthToken)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|oauthToken
parameter_list|(
name|String
name|oauthToken
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"oauthToken"
argument_list|,
name|oauthToken
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Password to connect to Kubernetes.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|password ( String password)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|password
parameter_list|(
name|String
name|password
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"password"
argument_list|,
name|password
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Define if the certs we used are trusted anyway or not.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: security          */
DECL|method|trustCerts ( Boolean trustCerts)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|trustCerts
parameter_list|(
name|Boolean
name|trustCerts
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"trustCerts"
argument_list|,
name|trustCerts
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Define if the certs we used are trusted anyway or not.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: security          */
DECL|method|trustCerts ( String trustCerts)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|trustCerts
parameter_list|(
name|String
name|trustCerts
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"trustCerts"
argument_list|,
name|trustCerts
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Username to connect to Kubernetes.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|username ( String username)
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|username
parameter_list|(
name|String
name|username
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"username"
argument_list|,
name|username
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint producers for the Kubernetes Replication      * Controller component.      */
DECL|interface|AdvancedKubernetesReplicationControllersEndpointProducerBuilder
specifier|public
interface|interface
name|AdvancedKubernetesReplicationControllersEndpointProducerBuilder
extends|extends
name|EndpointProducerBuilder
block|{
DECL|method|basic ()
specifier|default
name|KubernetesReplicationControllersEndpointProducerBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|KubernetesReplicationControllersEndpointProducerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointProducerBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointProducerBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Connection timeout in milliseconds to use when making requests to the          * Kubernetes API server.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: advanced          */
DECL|method|connectionTimeout ( Integer connectionTimeout)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointProducerBuilder
name|connectionTimeout
parameter_list|(
name|Integer
name|connectionTimeout
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"connectionTimeout"
argument_list|,
name|connectionTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Connection timeout in milliseconds to use when making requests to the          * Kubernetes API server.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: advanced          */
DECL|method|connectionTimeout ( String connectionTimeout)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointProducerBuilder
name|connectionTimeout
parameter_list|(
name|String
name|connectionTimeout
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"connectionTimeout"
argument_list|,
name|connectionTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( boolean synchronous)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointProducerBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( String synchronous)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointProducerBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Builder for endpoint for the Kubernetes Replication Controller component.      */
DECL|interface|KubernetesReplicationControllersEndpointBuilder
specifier|public
interface|interface
name|KubernetesReplicationControllersEndpointBuilder
extends|extends
name|KubernetesReplicationControllersEndpointConsumerBuilder
extends|,
name|KubernetesReplicationControllersEndpointProducerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedKubernetesReplicationControllersEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * The Kubernetes API Version to use.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|apiVersion ( String apiVersion)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|apiVersion
parameter_list|(
name|String
name|apiVersion
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"apiVersion"
argument_list|,
name|apiVersion
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The dns domain, used for ServiceCall EIP.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|dnsDomain ( String dnsDomain)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|dnsDomain
parameter_list|(
name|String
name|dnsDomain
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"dnsDomain"
argument_list|,
name|dnsDomain
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Default KubernetesClient to use if provided.          *           * The option is a:          *<code>io.fabric8.kubernetes.client.KubernetesClient</code> type.          *           * Group: common          */
DECL|method|kubernetesClient ( Object kubernetesClient)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|kubernetesClient
parameter_list|(
name|Object
name|kubernetesClient
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"kubernetesClient"
argument_list|,
name|kubernetesClient
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Default KubernetesClient to use if provided.          *           * The option will be converted to a          *<code>io.fabric8.kubernetes.client.KubernetesClient</code> type.          *           * Group: common          */
DECL|method|kubernetesClient ( String kubernetesClient)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|kubernetesClient
parameter_list|(
name|String
name|kubernetesClient
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"kubernetesClient"
argument_list|,
name|kubernetesClient
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The port name, used for ServiceCall EIP.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|portName ( String portName)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|portName
parameter_list|(
name|String
name|portName
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"portName"
argument_list|,
name|portName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The port protocol, used for ServiceCall EIP.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|portProtocol ( String portProtocol)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|portProtocol
parameter_list|(
name|String
name|portProtocol
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"portProtocol"
argument_list|,
name|portProtocol
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The CA Cert Data.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|caCertData ( String caCertData)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|caCertData
parameter_list|(
name|String
name|caCertData
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"caCertData"
argument_list|,
name|caCertData
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The CA Cert File.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|caCertFile ( String caCertFile)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|caCertFile
parameter_list|(
name|String
name|caCertFile
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"caCertFile"
argument_list|,
name|caCertFile
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Client Cert Data.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|clientCertData ( String clientCertData)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|clientCertData
parameter_list|(
name|String
name|clientCertData
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"clientCertData"
argument_list|,
name|clientCertData
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Client Cert File.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|clientCertFile ( String clientCertFile)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|clientCertFile
parameter_list|(
name|String
name|clientCertFile
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"clientCertFile"
argument_list|,
name|clientCertFile
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Key Algorithm used by the client.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|clientKeyAlgo ( String clientKeyAlgo)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|clientKeyAlgo
parameter_list|(
name|String
name|clientKeyAlgo
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"clientKeyAlgo"
argument_list|,
name|clientKeyAlgo
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Client Key data.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|clientKeyData ( String clientKeyData)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|clientKeyData
parameter_list|(
name|String
name|clientKeyData
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"clientKeyData"
argument_list|,
name|clientKeyData
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Client Key file.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|clientKeyFile ( String clientKeyFile)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|clientKeyFile
parameter_list|(
name|String
name|clientKeyFile
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"clientKeyFile"
argument_list|,
name|clientKeyFile
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Client Key Passphrase.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|clientKeyPassphrase ( String clientKeyPassphrase)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|clientKeyPassphrase
parameter_list|(
name|String
name|clientKeyPassphrase
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"clientKeyPassphrase"
argument_list|,
name|clientKeyPassphrase
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Auth Token.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oauthToken ( String oauthToken)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|oauthToken
parameter_list|(
name|String
name|oauthToken
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"oauthToken"
argument_list|,
name|oauthToken
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Password to connect to Kubernetes.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|password ( String password)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|password
parameter_list|(
name|String
name|password
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"password"
argument_list|,
name|password
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Define if the certs we used are trusted anyway or not.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: security          */
DECL|method|trustCerts ( Boolean trustCerts)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|trustCerts
parameter_list|(
name|Boolean
name|trustCerts
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"trustCerts"
argument_list|,
name|trustCerts
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Define if the certs we used are trusted anyway or not.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: security          */
DECL|method|trustCerts ( String trustCerts)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|trustCerts
parameter_list|(
name|String
name|trustCerts
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"trustCerts"
argument_list|,
name|trustCerts
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Username to connect to Kubernetes.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|username ( String username)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|username
parameter_list|(
name|String
name|username
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"username"
argument_list|,
name|username
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint for the Kubernetes Replication Controller      * component.      */
DECL|interface|AdvancedKubernetesReplicationControllersEndpointBuilder
specifier|public
interface|interface
name|AdvancedKubernetesReplicationControllersEndpointBuilder
extends|extends
name|AdvancedKubernetesReplicationControllersEndpointConsumerBuilder
extends|,
name|AdvancedKubernetesReplicationControllersEndpointProducerBuilder
block|{
DECL|method|basic ()
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|KubernetesReplicationControllersEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Connection timeout in milliseconds to use when making requests to the          * Kubernetes API server.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: advanced          */
DECL|method|connectionTimeout ( Integer connectionTimeout)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointBuilder
name|connectionTimeout
parameter_list|(
name|Integer
name|connectionTimeout
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"connectionTimeout"
argument_list|,
name|connectionTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Connection timeout in milliseconds to use when making requests to the          * Kubernetes API server.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: advanced          */
DECL|method|connectionTimeout ( String connectionTimeout)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointBuilder
name|connectionTimeout
parameter_list|(
name|String
name|connectionTimeout
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"connectionTimeout"
argument_list|,
name|connectionTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( boolean synchronous)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( String synchronous)
specifier|default
name|AdvancedKubernetesReplicationControllersEndpointBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Kubernetes Replication Controller (camel-kubernetes)      * The Kubernetes Replication Controllers component provides a producer to      * execute kubernetes replication controller operations and a consumer to      * consume replication controller events.      *       * Category: container,cloud,paas      * Available as of version: 2.17      * Maven coordinates: org.apache.camel:camel-kubernetes      *       * Syntax:<code>kubernetes-replication-controllers:masterUrl</code>      *       * Path parameter: masterUrl (required)      * Kubernetes Master url      */
DECL|method|kubernetesReplicationControllers ( String path)
specifier|default
name|KubernetesReplicationControllersEndpointBuilder
name|kubernetesReplicationControllers
parameter_list|(
name|String
name|path
parameter_list|)
block|{
class|class
name|KubernetesReplicationControllersEndpointBuilderImpl
extends|extends
name|AbstractEndpointBuilder
implements|implements
name|KubernetesReplicationControllersEndpointBuilder
implements|,
name|AdvancedKubernetesReplicationControllersEndpointBuilder
block|{
specifier|public
name|KubernetesReplicationControllersEndpointBuilderImpl
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|super
argument_list|(
literal|"kubernetes-replication-controllers"
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|new
name|KubernetesReplicationControllersEndpointBuilderImpl
argument_list|(
name|path
argument_list|)
return|;
block|}
block|}
end_interface

end_unit

