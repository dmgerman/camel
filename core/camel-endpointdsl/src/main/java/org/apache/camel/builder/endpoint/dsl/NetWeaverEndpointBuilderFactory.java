begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.builder.endpoint.dsl
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|dsl
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Generated
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointConsumerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointProducerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|AbstractEndpointBuilder
import|;
end_import

begin_comment
comment|/**  * The sap-netweaver component integrates with the SAP NetWeaver Gateway using  * HTTP transports.  *   * Generated by camel-package-maven-plugin - do not edit this file!  */
end_comment

begin_interface
annotation|@
name|Generated
argument_list|(
literal|"org.apache.camel.maven.packaging.EndpointDslMojo"
argument_list|)
DECL|interface|NetWeaverEndpointBuilderFactory
specifier|public
interface|interface
name|NetWeaverEndpointBuilderFactory
block|{
comment|/**      * Builder for endpoint for the SAP NetWeaver component.      */
DECL|interface|NetWeaverEndpointBuilder
specifier|public
interface|interface
name|NetWeaverEndpointBuilder
extends|extends
name|EndpointProducerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedNetWeaverEndpointBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedNetWeaverEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * If the JSON Map contains only a single entry, then flattern by          * storing that single entry value as the message body.          *           * The option is a:<code>boolean</code> type.          *           * Group: producer          */
DECL|method|flatternMap (boolean flatternMap)
specifier|default
name|NetWeaverEndpointBuilder
name|flatternMap
parameter_list|(
name|boolean
name|flatternMap
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"flatternMap"
argument_list|,
name|flatternMap
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * If the JSON Map contains only a single entry, then flattern by          * storing that single entry value as the message body.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: producer          */
DECL|method|flatternMap (String flatternMap)
specifier|default
name|NetWeaverEndpointBuilder
name|flatternMap
parameter_list|(
name|String
name|flatternMap
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"flatternMap"
argument_list|,
name|flatternMap
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether to return data in JSON format. If this option is false, then          * XML is returned in Atom format.          *           * The option is a:<code>boolean</code> type.          *           * Group: producer          */
DECL|method|json (boolean json)
specifier|default
name|NetWeaverEndpointBuilder
name|json
parameter_list|(
name|boolean
name|json
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"json"
argument_list|,
name|json
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether to return data in JSON format. If this option is false, then          * XML is returned in Atom format.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: producer          */
DECL|method|json (String json)
specifier|default
name|NetWeaverEndpointBuilder
name|json
parameter_list|(
name|String
name|json
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"json"
argument_list|,
name|json
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To transform the JSON from a String to a Map in the message body.          *           * The option is a:<code>boolean</code> type.          *           * Group: producer          */
DECL|method|jsonAsMap (boolean jsonAsMap)
specifier|default
name|NetWeaverEndpointBuilder
name|jsonAsMap
parameter_list|(
name|boolean
name|jsonAsMap
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"jsonAsMap"
argument_list|,
name|jsonAsMap
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To transform the JSON from a String to a Map in the message body.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: producer          */
DECL|method|jsonAsMap (String jsonAsMap)
specifier|default
name|NetWeaverEndpointBuilder
name|jsonAsMap
parameter_list|(
name|String
name|jsonAsMap
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"jsonAsMap"
argument_list|,
name|jsonAsMap
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Password for account.          *           * The option is a:<code>java.lang.String</code> type.          *           * Required: true          * Group: producer          */
DECL|method|password (String password)
specifier|default
name|NetWeaverEndpointBuilder
name|password
parameter_list|(
name|String
name|password
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"password"
argument_list|,
name|password
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Username for account.          *           * The option is a:<code>java.lang.String</code> type.          *           * Required: true          * Group: producer          */
DECL|method|username (String username)
specifier|default
name|NetWeaverEndpointBuilder
name|username
parameter_list|(
name|String
name|username
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"username"
argument_list|,
name|username
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint for the SAP NetWeaver component.      */
DECL|interface|AdvancedNetWeaverEndpointBuilder
specifier|public
interface|interface
name|AdvancedNetWeaverEndpointBuilder
extends|extends
name|EndpointProducerBuilder
block|{
DECL|method|basic ()
specifier|default
name|NetWeaverEndpointBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|NetWeaverEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedNetWeaverEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedNetWeaverEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous (boolean synchronous)
specifier|default
name|AdvancedNetWeaverEndpointBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous (String synchronous)
specifier|default
name|AdvancedNetWeaverEndpointBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * SAP NetWeaver (camel-sap-netweaver)      * The sap-netweaver component integrates with the SAP NetWeaver Gateway      * using HTTP transports.      *       * Category: sap      * Available as of version: 2.12      * Maven coordinates: org.apache.camel:camel-sap-netweaver      *       * Syntax:<code>sap-netweaver:url</code>      *       * Path parameter: url (required)      * Url to the SAP net-weaver gateway server.      */
DECL|method|netWeaver (String path)
specifier|default
name|NetWeaverEndpointBuilder
name|netWeaver
parameter_list|(
name|String
name|path
parameter_list|)
block|{
class|class
name|NetWeaverEndpointBuilderImpl
extends|extends
name|AbstractEndpointBuilder
implements|implements
name|NetWeaverEndpointBuilder
implements|,
name|AdvancedNetWeaverEndpointBuilder
block|{
specifier|public
name|NetWeaverEndpointBuilderImpl
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|super
argument_list|(
literal|"sap-netweaver"
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|new
name|NetWeaverEndpointBuilderImpl
argument_list|(
name|path
argument_list|)
return|;
block|}
block|}
end_interface

end_unit

