begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.builder.endpoint.dsl
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|dsl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Generated
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ExchangePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointConsumerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointProducerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|AbstractEndpointBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ExceptionHandler
import|;
end_import

begin_comment
comment|/**  * The Facebook component provides access to all of the Facebook APIs accessible  * using Facebook4J.  *   * Generated by camel-package-maven-plugin - do not edit this file!  */
end_comment

begin_interface
annotation|@
name|Generated
argument_list|(
literal|"org.apache.camel.maven.packaging.EndpointDslMojo"
argument_list|)
DECL|interface|FacebookEndpointBuilderFactory
specifier|public
interface|interface
name|FacebookEndpointBuilderFactory
block|{
comment|/**      * Builder for endpoint consumers for the Facebook component.      */
DECL|interface|FacebookEndpointConsumerBuilder
specifier|public
interface|interface
name|FacebookEndpointConsumerBuilder
extends|extends
name|EndpointConsumerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedFacebookEndpointConsumerBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedFacebookEndpointConsumerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * What operation to perform.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|methodName (String methodName)
specifier|default
name|FacebookEndpointConsumerBuilder
name|methodName
parameter_list|(
name|String
name|methodName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"methodName"
argument_list|,
name|methodName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The unique URL of the achievement.          *           * The option is a:<code>java.net.URL</code> type.          *           * Group: common          */
DECL|method|achievementURL ( URL achievementURL)
specifier|default
name|FacebookEndpointConsumerBuilder
name|achievementURL
parameter_list|(
name|URL
name|achievementURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"achievementURL"
argument_list|,
name|achievementURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The unique URL of the achievement.          *           * The option will be converted to a<code>java.net.URL</code> type.          *           * Group: common          */
DECL|method|achievementURL ( String achievementURL)
specifier|default
name|FacebookEndpointConsumerBuilder
name|achievementURL
parameter_list|(
name|String
name|achievementURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"achievementURL"
argument_list|,
name|achievementURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The album ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|albumId (String albumId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|albumId
parameter_list|(
name|String
name|albumId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"albumId"
argument_list|,
name|albumId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The facebook Album to be created or updated.          *           * The option is a:<code>facebook4j.AlbumUpdate</code> type.          *           * Group: common          */
DECL|method|albumUpdate (Object albumUpdate)
specifier|default
name|FacebookEndpointConsumerBuilder
name|albumUpdate
parameter_list|(
name|Object
name|albumUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"albumUpdate"
argument_list|,
name|albumUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The facebook Album to be created or updated.          *           * The option will be converted to a<code>facebook4j.AlbumUpdate</code>          * type.          *           * Group: common          */
DECL|method|albumUpdate (String albumUpdate)
specifier|default
name|FacebookEndpointConsumerBuilder
name|albumUpdate
parameter_list|(
name|String
name|albumUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"albumUpdate"
argument_list|,
name|albumUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ID of the Facebook Application.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|appId (String appId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|appId
parameter_list|(
name|String
name|appId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"appId"
argument_list|,
name|appId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Location latitude and longitude.          *           * The option is a:<code>facebook4j.GeoLocation</code> type.          *           * Group: common          */
DECL|method|center (Object center)
specifier|default
name|FacebookEndpointConsumerBuilder
name|center
parameter_list|(
name|Object
name|center
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"center"
argument_list|,
name|center
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Location latitude and longitude.          *           * The option will be converted to a<code>facebook4j.GeoLocation</code>          * type.          *           * Group: common          */
DECL|method|center (String center)
specifier|default
name|FacebookEndpointConsumerBuilder
name|center
parameter_list|(
name|String
name|center
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"center"
argument_list|,
name|center
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The checkin ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|checkinId (String checkinId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|checkinId
parameter_list|(
name|String
name|checkinId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"checkinId"
argument_list|,
name|checkinId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The checkin to be created. Deprecated, instead create a Post with an          * attached location.          *           * The option is a:<code>facebook4j.CheckinUpdate</code> type.          *           * Group: common          */
annotation|@
name|Deprecated
DECL|method|checkinUpdate ( Object checkinUpdate)
specifier|default
name|FacebookEndpointConsumerBuilder
name|checkinUpdate
parameter_list|(
name|Object
name|checkinUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"checkinUpdate"
argument_list|,
name|checkinUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The checkin to be created. Deprecated, instead create a Post with an          * attached location.          *           * The option will be converted to a          *<code>facebook4j.CheckinUpdate</code> type.          *           * Group: common          */
annotation|@
name|Deprecated
DECL|method|checkinUpdate ( String checkinUpdate)
specifier|default
name|FacebookEndpointConsumerBuilder
name|checkinUpdate
parameter_list|(
name|String
name|checkinUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"checkinUpdate"
argument_list|,
name|checkinUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Facebook4J API client URL.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|clientURL (String clientURL)
specifier|default
name|FacebookEndpointConsumerBuilder
name|clientURL
parameter_list|(
name|String
name|clientURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"clientURL"
argument_list|,
name|clientURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Facebook4J client API version.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|clientVersion ( String clientVersion)
specifier|default
name|FacebookEndpointConsumerBuilder
name|clientVersion
parameter_list|(
name|String
name|clientVersion
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"clientVersion"
argument_list|,
name|clientVersion
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The comment ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|commentId (String commentId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|commentId
parameter_list|(
name|String
name|commentId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"commentId"
argument_list|,
name|commentId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The facebook Comment to be created or updated.          *           * The option is a:<code>facebook4j.CommentUpdate</code> type.          *           * Group: common          */
DECL|method|commentUpdate ( Object commentUpdate)
specifier|default
name|FacebookEndpointConsumerBuilder
name|commentUpdate
parameter_list|(
name|Object
name|commentUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"commentUpdate"
argument_list|,
name|commentUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The facebook Comment to be created or updated.          *           * The option will be converted to a          *<code>facebook4j.CommentUpdate</code> type.          *           * Group: common          */
DECL|method|commentUpdate ( String commentUpdate)
specifier|default
name|FacebookEndpointConsumerBuilder
name|commentUpdate
parameter_list|(
name|String
name|commentUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"commentUpdate"
argument_list|,
name|commentUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Enables deubg output. Effective only with the embedded logger.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|debugEnabled ( Boolean debugEnabled)
specifier|default
name|FacebookEndpointConsumerBuilder
name|debugEnabled
parameter_list|(
name|Boolean
name|debugEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"debugEnabled"
argument_list|,
name|debugEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Enables deubg output. Effective only with the embedded logger.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|debugEnabled (String debugEnabled)
specifier|default
name|FacebookEndpointConsumerBuilder
name|debugEnabled
parameter_list|(
name|String
name|debugEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"debugEnabled"
argument_list|,
name|debugEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The description text.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|description (String description)
specifier|default
name|FacebookEndpointConsumerBuilder
name|description
parameter_list|(
name|String
name|description
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"description"
argument_list|,
name|description
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Distance in meters.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|distance (Integer distance)
specifier|default
name|FacebookEndpointConsumerBuilder
name|distance
parameter_list|(
name|Integer
name|distance
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"distance"
argument_list|,
name|distance
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Distance in meters.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|distance (String distance)
specifier|default
name|FacebookEndpointConsumerBuilder
name|distance
parameter_list|(
name|String
name|distance
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"distance"
argument_list|,
name|distance
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The domain ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|domainId (String domainId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|domainId
parameter_list|(
name|String
name|domainId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"domainId"
argument_list|,
name|domainId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The domain name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|domainName (String domainName)
specifier|default
name|FacebookEndpointConsumerBuilder
name|domainName
parameter_list|(
name|String
name|domainName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"domainName"
argument_list|,
name|domainName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The domain names.          *           * The option is a:<code>java.util.List&lt;java.lang.String&gt;</code>          * type.          *           * Group: common          */
DECL|method|domainNames ( List<String> domainNames)
specifier|default
name|FacebookEndpointConsumerBuilder
name|domainNames
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|domainNames
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"domainNames"
argument_list|,
name|domainNames
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The domain names.          *           * The option will be converted to a          *<code>java.util.List&lt;java.lang.String&gt;</code> type.          *           * Group: common          */
DECL|method|domainNames (String domainNames)
specifier|default
name|FacebookEndpointConsumerBuilder
name|domainNames
parameter_list|(
name|String
name|domainNames
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"domainNames"
argument_list|,
name|domainNames
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The event ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|eventId (String eventId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|eventId
parameter_list|(
name|String
name|eventId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"eventId"
argument_list|,
name|eventId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The event to be created or updated.          *           * The option is a:<code>facebook4j.EventUpdate</code> type.          *           * Group: common          */
DECL|method|eventUpdate (Object eventUpdate)
specifier|default
name|FacebookEndpointConsumerBuilder
name|eventUpdate
parameter_list|(
name|Object
name|eventUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"eventUpdate"
argument_list|,
name|eventUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The event to be created or updated.          *           * The option will be converted to a<code>facebook4j.EventUpdate</code>          * type.          *           * Group: common          */
DECL|method|eventUpdate (String eventUpdate)
specifier|default
name|FacebookEndpointConsumerBuilder
name|eventUpdate
parameter_list|(
name|String
name|eventUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"eventUpdate"
argument_list|,
name|eventUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The friend ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|friendId (String friendId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|friendId
parameter_list|(
name|String
name|friendId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"friendId"
argument_list|,
name|friendId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The friend list ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|friendlistId (String friendlistId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|friendlistId
parameter_list|(
name|String
name|friendlistId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"friendlistId"
argument_list|,
name|friendlistId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The friend list Name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|friendlistName ( String friendlistName)
specifier|default
name|FacebookEndpointConsumerBuilder
name|friendlistName
parameter_list|(
name|String
name|friendlistName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"friendlistName"
argument_list|,
name|friendlistName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The friend user ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|friendUserId (String friendUserId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|friendUserId
parameter_list|(
name|String
name|friendUserId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"friendUserId"
argument_list|,
name|friendUserId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The group ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|groupId (String groupId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|groupId
parameter_list|(
name|String
name|groupId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"groupId"
argument_list|,
name|groupId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Use Facebook GZIP encoding.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|gzipEnabled (Boolean gzipEnabled)
specifier|default
name|FacebookEndpointConsumerBuilder
name|gzipEnabled
parameter_list|(
name|Boolean
name|gzipEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"gzipEnabled"
argument_list|,
name|gzipEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Use Facebook GZIP encoding.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|gzipEnabled (String gzipEnabled)
specifier|default
name|FacebookEndpointConsumerBuilder
name|gzipEnabled
parameter_list|(
name|String
name|gzipEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"gzipEnabled"
argument_list|,
name|gzipEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Http connection timeout in milliseconds.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpConnectionTimeout ( Integer httpConnectionTimeout)
specifier|default
name|FacebookEndpointConsumerBuilder
name|httpConnectionTimeout
parameter_list|(
name|Integer
name|httpConnectionTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpConnectionTimeout"
argument_list|,
name|httpConnectionTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Http connection timeout in milliseconds.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpConnectionTimeout ( String httpConnectionTimeout)
specifier|default
name|FacebookEndpointConsumerBuilder
name|httpConnectionTimeout
parameter_list|(
name|String
name|httpConnectionTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpConnectionTimeout"
argument_list|,
name|httpConnectionTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP maximum connections per route.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpDefaultMaxPerRoute ( Integer httpDefaultMaxPerRoute)
specifier|default
name|FacebookEndpointConsumerBuilder
name|httpDefaultMaxPerRoute
parameter_list|(
name|Integer
name|httpDefaultMaxPerRoute
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpDefaultMaxPerRoute"
argument_list|,
name|httpDefaultMaxPerRoute
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP maximum connections per route.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpDefaultMaxPerRoute ( String httpDefaultMaxPerRoute)
specifier|default
name|FacebookEndpointConsumerBuilder
name|httpDefaultMaxPerRoute
parameter_list|(
name|String
name|httpDefaultMaxPerRoute
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpDefaultMaxPerRoute"
argument_list|,
name|httpDefaultMaxPerRoute
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP maximum total connections.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpMaxTotalConnections ( Integer httpMaxTotalConnections)
specifier|default
name|FacebookEndpointConsumerBuilder
name|httpMaxTotalConnections
parameter_list|(
name|Integer
name|httpMaxTotalConnections
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpMaxTotalConnections"
argument_list|,
name|httpMaxTotalConnections
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP maximum total connections.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpMaxTotalConnections ( String httpMaxTotalConnections)
specifier|default
name|FacebookEndpointConsumerBuilder
name|httpMaxTotalConnections
parameter_list|(
name|String
name|httpMaxTotalConnections
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpMaxTotalConnections"
argument_list|,
name|httpMaxTotalConnections
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Http read timeout in milliseconds.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpReadTimeout ( Integer httpReadTimeout)
specifier|default
name|FacebookEndpointConsumerBuilder
name|httpReadTimeout
parameter_list|(
name|Integer
name|httpReadTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpReadTimeout"
argument_list|,
name|httpReadTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Http read timeout in milliseconds.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpReadTimeout ( String httpReadTimeout)
specifier|default
name|FacebookEndpointConsumerBuilder
name|httpReadTimeout
parameter_list|(
name|String
name|httpReadTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpReadTimeout"
argument_list|,
name|httpReadTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Number of HTTP retries.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpRetryCount ( Integer httpRetryCount)
specifier|default
name|FacebookEndpointConsumerBuilder
name|httpRetryCount
parameter_list|(
name|Integer
name|httpRetryCount
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpRetryCount"
argument_list|,
name|httpRetryCount
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Number of HTTP retries.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpRetryCount ( String httpRetryCount)
specifier|default
name|FacebookEndpointConsumerBuilder
name|httpRetryCount
parameter_list|(
name|String
name|httpRetryCount
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpRetryCount"
argument_list|,
name|httpRetryCount
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP retry interval in seconds.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpRetryIntervalSeconds ( Integer httpRetryIntervalSeconds)
specifier|default
name|FacebookEndpointConsumerBuilder
name|httpRetryIntervalSeconds
parameter_list|(
name|Integer
name|httpRetryIntervalSeconds
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpRetryIntervalSeconds"
argument_list|,
name|httpRetryIntervalSeconds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP retry interval in seconds.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpRetryIntervalSeconds ( String httpRetryIntervalSeconds)
specifier|default
name|FacebookEndpointConsumerBuilder
name|httpRetryIntervalSeconds
parameter_list|(
name|String
name|httpRetryIntervalSeconds
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpRetryIntervalSeconds"
argument_list|,
name|httpRetryIntervalSeconds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP streaming read timeout in milliseconds.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpStreamingReadTimeout ( Integer httpStreamingReadTimeout)
specifier|default
name|FacebookEndpointConsumerBuilder
name|httpStreamingReadTimeout
parameter_list|(
name|Integer
name|httpStreamingReadTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpStreamingReadTimeout"
argument_list|,
name|httpStreamingReadTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP streaming read timeout in milliseconds.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpStreamingReadTimeout ( String httpStreamingReadTimeout)
specifier|default
name|FacebookEndpointConsumerBuilder
name|httpStreamingReadTimeout
parameter_list|(
name|String
name|httpStreamingReadTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpStreamingReadTimeout"
argument_list|,
name|httpStreamingReadTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ids of users.          *           * The option is a:<code>java.util.List&lt;java.lang.String&gt;</code>          * type.          *           * Group: common          */
DECL|method|ids (List<String> ids)
specifier|default
name|FacebookEndpointConsumerBuilder
name|ids
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|ids
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"ids"
argument_list|,
name|ids
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ids of users.          *           * The option will be converted to a          *<code>java.util.List&lt;java.lang.String&gt;</code> type.          *           * Group: common          */
DECL|method|ids (String ids)
specifier|default
name|FacebookEndpointConsumerBuilder
name|ids
parameter_list|(
name|String
name|ids
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"ids"
argument_list|,
name|ids
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets the name of a parameter to be passed in the exchange In Body.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|inBody (String inBody)
specifier|default
name|FacebookEndpointConsumerBuilder
name|inBody
parameter_list|(
name|String
name|inBody
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"inBody"
argument_list|,
name|inBody
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Enables notifications that the user has already read in addition to          * unread ones.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|includeRead (Boolean includeRead)
specifier|default
name|FacebookEndpointConsumerBuilder
name|includeRead
parameter_list|(
name|Boolean
name|includeRead
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"includeRead"
argument_list|,
name|includeRead
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Enables notifications that the user has already read in addition to          * unread ones.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|includeRead (String includeRead)
specifier|default
name|FacebookEndpointConsumerBuilder
name|includeRead
parameter_list|(
name|String
name|includeRead
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"includeRead"
argument_list|,
name|includeRead
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether hidden.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|isHidden (Boolean isHidden)
specifier|default
name|FacebookEndpointConsumerBuilder
name|isHidden
parameter_list|(
name|Boolean
name|isHidden
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"isHidden"
argument_list|,
name|isHidden
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether hidden.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|isHidden (String isHidden)
specifier|default
name|FacebookEndpointConsumerBuilder
name|isHidden
parameter_list|(
name|String
name|isHidden
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"isHidden"
argument_list|,
name|isHidden
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * If set to true, raw JSON forms will be stored in DataObjectFactory.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|jsonStoreEnabled ( Boolean jsonStoreEnabled)
specifier|default
name|FacebookEndpointConsumerBuilder
name|jsonStoreEnabled
parameter_list|(
name|Boolean
name|jsonStoreEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"jsonStoreEnabled"
argument_list|,
name|jsonStoreEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * If set to true, raw JSON forms will be stored in DataObjectFactory.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|jsonStoreEnabled ( String jsonStoreEnabled)
specifier|default
name|FacebookEndpointConsumerBuilder
name|jsonStoreEnabled
parameter_list|(
name|String
name|jsonStoreEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"jsonStoreEnabled"
argument_list|,
name|jsonStoreEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Link URL.          *           * The option is a:<code>java.net.URL</code> type.          *           * Group: common          */
DECL|method|link (URL link)
specifier|default
name|FacebookEndpointConsumerBuilder
name|link
parameter_list|(
name|URL
name|link
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"link"
argument_list|,
name|link
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Link URL.          *           * The option will be converted to a<code>java.net.URL</code> type.          *           * Group: common          */
DECL|method|link (String link)
specifier|default
name|FacebookEndpointConsumerBuilder
name|link
parameter_list|(
name|String
name|link
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"link"
argument_list|,
name|link
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Link ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|linkId (String linkId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|linkId
parameter_list|(
name|String
name|linkId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"linkId"
argument_list|,
name|linkId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Desired FQL locale.          *           * The option is a:<code>java.util.Locale</code> type.          *           * Group: common          */
DECL|method|locale (Locale locale)
specifier|default
name|FacebookEndpointConsumerBuilder
name|locale
parameter_list|(
name|Locale
name|locale
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"locale"
argument_list|,
name|locale
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Desired FQL locale.          *           * The option will be converted to a<code>java.util.Locale</code> type.          *           * Group: common          */
DECL|method|locale (String locale)
specifier|default
name|FacebookEndpointConsumerBuilder
name|locale
parameter_list|(
name|String
name|locale
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"locale"
argument_list|,
name|locale
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * If set to true, Facebook4J mbean will be registerd.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|mbeanEnabled ( Boolean mbeanEnabled)
specifier|default
name|FacebookEndpointConsumerBuilder
name|mbeanEnabled
parameter_list|(
name|Boolean
name|mbeanEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"mbeanEnabled"
argument_list|,
name|mbeanEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * If set to true, Facebook4J mbean will be registerd.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|mbeanEnabled (String mbeanEnabled)
specifier|default
name|FacebookEndpointConsumerBuilder
name|mbeanEnabled
parameter_list|(
name|String
name|mbeanEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"mbeanEnabled"
argument_list|,
name|mbeanEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The message text.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|message (String message)
specifier|default
name|FacebookEndpointConsumerBuilder
name|message
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"message"
argument_list|,
name|message
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The message ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|messageId (String messageId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|messageId
parameter_list|(
name|String
name|messageId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"messageId"
argument_list|,
name|messageId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The metric name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|metric (String metric)
specifier|default
name|FacebookEndpointConsumerBuilder
name|metric
parameter_list|(
name|String
name|metric
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"metric"
argument_list|,
name|metric
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The milestone id.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|milestoneId (String milestoneId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|milestoneId
parameter_list|(
name|String
name|milestoneId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"milestoneId"
argument_list|,
name|milestoneId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Test user name, must be of the form 'first last'.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|name (String name)
specifier|default
name|FacebookEndpointConsumerBuilder
name|name
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"name"
argument_list|,
name|name
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The note ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|noteId (String noteId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|noteId
parameter_list|(
name|String
name|noteId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"noteId"
argument_list|,
name|noteId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The notification ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|notificationId ( String notificationId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|notificationId
parameter_list|(
name|String
name|notificationId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"notificationId"
argument_list|,
name|notificationId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The insight object ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|objectId (String objectId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|objectId
parameter_list|(
name|String
name|objectId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"objectId"
argument_list|,
name|objectId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The offer id.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|offerId (String offerId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|offerId
parameter_list|(
name|String
name|offerId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"offerId"
argument_list|,
name|offerId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The question's answer option description.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|optionDescription ( String optionDescription)
specifier|default
name|FacebookEndpointConsumerBuilder
name|optionDescription
parameter_list|(
name|String
name|optionDescription
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"optionDescription"
argument_list|,
name|optionDescription
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The page id.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|pageId (String pageId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|pageId
parameter_list|(
name|String
name|pageId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pageId"
argument_list|,
name|pageId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The permission name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|permissionName ( String permissionName)
specifier|default
name|FacebookEndpointConsumerBuilder
name|permissionName
parameter_list|(
name|String
name|permissionName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"permissionName"
argument_list|,
name|permissionName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Test user permissions in the format perm1,perm2,...          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|permissions (String permissions)
specifier|default
name|FacebookEndpointConsumerBuilder
name|permissions
parameter_list|(
name|String
name|permissions
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"permissions"
argument_list|,
name|permissions
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The photo ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|photoId (String photoId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|photoId
parameter_list|(
name|String
name|photoId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"photoId"
argument_list|,
name|photoId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture id.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|pictureId (Integer pictureId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|pictureId
parameter_list|(
name|Integer
name|pictureId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pictureId"
argument_list|,
name|pictureId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture id.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|pictureId (String pictureId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|pictureId
parameter_list|(
name|String
name|pictureId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pictureId"
argument_list|,
name|pictureId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture2 id.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|pictureId2 (Integer pictureId2)
specifier|default
name|FacebookEndpointConsumerBuilder
name|pictureId2
parameter_list|(
name|Integer
name|pictureId2
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pictureId2"
argument_list|,
name|pictureId2
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture2 id.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|pictureId2 (String pictureId2)
specifier|default
name|FacebookEndpointConsumerBuilder
name|pictureId2
parameter_list|(
name|String
name|pictureId2
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pictureId2"
argument_list|,
name|pictureId2
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture size.          *           * The option is a:<code>facebook4j.PictureSize</code> type.          *           * Group: common          */
DECL|method|pictureSize ( PictureSize pictureSize)
specifier|default
name|FacebookEndpointConsumerBuilder
name|pictureSize
parameter_list|(
name|PictureSize
name|pictureSize
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pictureSize"
argument_list|,
name|pictureSize
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture size.          *           * The option will be converted to a<code>facebook4j.PictureSize</code>          * type.          *           * Group: common          */
DECL|method|pictureSize (String pictureSize)
specifier|default
name|FacebookEndpointConsumerBuilder
name|pictureSize
parameter_list|(
name|String
name|pictureSize
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pictureSize"
argument_list|,
name|pictureSize
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The place ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|placeId (String placeId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|placeId
parameter_list|(
name|String
name|placeId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"placeId"
argument_list|,
name|placeId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The post ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|postId (String postId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|postId
parameter_list|(
name|String
name|postId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"postId"
argument_list|,
name|postId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The post to create or update.          *           * The option is a:<code>facebook4j.PostUpdate</code> type.          *           * Group: common          */
DECL|method|postUpdate (Object postUpdate)
specifier|default
name|FacebookEndpointConsumerBuilder
name|postUpdate
parameter_list|(
name|Object
name|postUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"postUpdate"
argument_list|,
name|postUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The post to create or update.          *           * The option will be converted to a<code>facebook4j.PostUpdate</code>          * type.          *           * Group: common          */
DECL|method|postUpdate (String postUpdate)
specifier|default
name|FacebookEndpointConsumerBuilder
name|postUpdate
parameter_list|(
name|String
name|postUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"postUpdate"
argument_list|,
name|postUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Prettify JSON debug output if set to true.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|prettyDebugEnabled ( Boolean prettyDebugEnabled)
specifier|default
name|FacebookEndpointConsumerBuilder
name|prettyDebugEnabled
parameter_list|(
name|Boolean
name|prettyDebugEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"prettyDebugEnabled"
argument_list|,
name|prettyDebugEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Prettify JSON debug output if set to true.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|prettyDebugEnabled ( String prettyDebugEnabled)
specifier|default
name|FacebookEndpointConsumerBuilder
name|prettyDebugEnabled
parameter_list|(
name|String
name|prettyDebugEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"prettyDebugEnabled"
argument_list|,
name|prettyDebugEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * FQL queries.          *           * The option is a:<code>java.util.Map&lt;java.lang.String,          * java.lang.String&gt;</code> type.          *           * Group: common          */
DECL|method|queries ( Map<String, String> queries)
specifier|default
name|FacebookEndpointConsumerBuilder
name|queries
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|queries
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"queries"
argument_list|,
name|queries
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * FQL queries.          *           * The option will be converted to a          *<code>java.util.Map&lt;java.lang.String, java.lang.String&gt;</code>          * type.          *           * Group: common          */
DECL|method|queries (String queries)
specifier|default
name|FacebookEndpointConsumerBuilder
name|queries
parameter_list|(
name|String
name|queries
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"queries"
argument_list|,
name|queries
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * FQL query or search terms for search endpoints.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|query (String query)
specifier|default
name|FacebookEndpointConsumerBuilder
name|query
parameter_list|(
name|String
name|query
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"query"
argument_list|,
name|query
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The question id.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|questionId (String questionId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|questionId
parameter_list|(
name|String
name|questionId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"questionId"
argument_list|,
name|questionId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Optional reading parameters. See Reading Options(#reading).          *           * The option is a:<code>facebook4j.Reading</code> type.          *           * Group: common          */
DECL|method|reading (Object reading)
specifier|default
name|FacebookEndpointConsumerBuilder
name|reading
parameter_list|(
name|Object
name|reading
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"reading"
argument_list|,
name|reading
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Optional reading parameters. See Reading Options(#reading).          *           * The option will be converted to a<code>facebook4j.Reading</code>          * type.          *           * Group: common          */
DECL|method|reading (String reading)
specifier|default
name|FacebookEndpointConsumerBuilder
name|reading
parameter_list|(
name|String
name|reading
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"reading"
argument_list|,
name|reading
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To configure Reading using key/value pairs from the Map.          *           * The option is a:<code>java.util.Map&lt;java.lang.String,          * java.lang.Object&gt;</code> type.          *           * Group: common          */
DECL|method|readingOptions ( Map<String, Object> readingOptions)
specifier|default
name|FacebookEndpointConsumerBuilder
name|readingOptions
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|readingOptions
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"readingOptions"
argument_list|,
name|readingOptions
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To configure Reading using key/value pairs from the Map.          *           * The option will be converted to a          *<code>java.util.Map&lt;java.lang.String, java.lang.Object&gt;</code>          * type.          *           * Group: common          */
DECL|method|readingOptions ( String readingOptions)
specifier|default
name|FacebookEndpointConsumerBuilder
name|readingOptions
parameter_list|(
name|String
name|readingOptions
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"readingOptions"
argument_list|,
name|readingOptions
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * API base URL.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|restBaseURL (String restBaseURL)
specifier|default
name|FacebookEndpointConsumerBuilder
name|restBaseURL
parameter_list|(
name|String
name|restBaseURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"restBaseURL"
argument_list|,
name|restBaseURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The numeric score with value.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|scoreValue (Integer scoreValue)
specifier|default
name|FacebookEndpointConsumerBuilder
name|scoreValue
parameter_list|(
name|Integer
name|scoreValue
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"scoreValue"
argument_list|,
name|scoreValue
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The numeric score with value.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|scoreValue (String scoreValue)
specifier|default
name|FacebookEndpointConsumerBuilder
name|scoreValue
parameter_list|(
name|String
name|scoreValue
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"scoreValue"
argument_list|,
name|scoreValue
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture size, one of large, normal, small or square.          *           * The option is a:<code>facebook4j.PictureSize</code> type.          *           * Group: common          */
DECL|method|size (PictureSize size)
specifier|default
name|FacebookEndpointConsumerBuilder
name|size
parameter_list|(
name|PictureSize
name|size
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"size"
argument_list|,
name|size
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture size, one of large, normal, small or square.          *           * The option will be converted to a<code>facebook4j.PictureSize</code>          * type.          *           * Group: common          */
DECL|method|size (String size)
specifier|default
name|FacebookEndpointConsumerBuilder
name|size
parameter_list|(
name|String
name|size
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"size"
argument_list|,
name|size
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The media content from either a java.io.File or java.io.Inputstream.          *           * The option is a:<code>facebook4j.Media</code> type.          *           * Group: common          */
DECL|method|source (Object source)
specifier|default
name|FacebookEndpointConsumerBuilder
name|source
parameter_list|(
name|Object
name|source
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"source"
argument_list|,
name|source
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The media content from either a java.io.File or java.io.Inputstream.          *           * The option will be converted to a<code>facebook4j.Media</code> type.          *           * Group: common          */
DECL|method|source (String source)
specifier|default
name|FacebookEndpointConsumerBuilder
name|source
parameter_list|(
name|String
name|source
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"source"
argument_list|,
name|source
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The note of the subject.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|subject (String subject)
specifier|default
name|FacebookEndpointConsumerBuilder
name|subject
parameter_list|(
name|String
name|subject
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"subject"
argument_list|,
name|subject
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The tab id.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|tabId (String tabId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|tabId
parameter_list|(
name|String
name|tabId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"tabId"
argument_list|,
name|tabId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Photo tag information.          *           * The option is a:<code>facebook4j.TagUpdate</code> type.          *           * Group: common          */
DECL|method|tagUpdate (Object tagUpdate)
specifier|default
name|FacebookEndpointConsumerBuilder
name|tagUpdate
parameter_list|(
name|Object
name|tagUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"tagUpdate"
argument_list|,
name|tagUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Photo tag information.          *           * The option will be converted to a<code>facebook4j.TagUpdate</code>          * type.          *           * Group: common          */
DECL|method|tagUpdate (String tagUpdate)
specifier|default
name|FacebookEndpointConsumerBuilder
name|tagUpdate
parameter_list|(
name|String
name|tagUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"tagUpdate"
argument_list|,
name|tagUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Test user 1.          *           * The option is a:<code>facebook4j.TestUser</code> type.          *           * Group: common          */
DECL|method|testUser1 (Object testUser1)
specifier|default
name|FacebookEndpointConsumerBuilder
name|testUser1
parameter_list|(
name|Object
name|testUser1
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"testUser1"
argument_list|,
name|testUser1
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Test user 1.          *           * The option will be converted to a<code>facebook4j.TestUser</code>          * type.          *           * Group: common          */
DECL|method|testUser1 (String testUser1)
specifier|default
name|FacebookEndpointConsumerBuilder
name|testUser1
parameter_list|(
name|String
name|testUser1
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"testUser1"
argument_list|,
name|testUser1
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Test user 2.          *           * The option is a:<code>facebook4j.TestUser</code> type.          *           * Group: common          */
DECL|method|testUser2 (Object testUser2)
specifier|default
name|FacebookEndpointConsumerBuilder
name|testUser2
parameter_list|(
name|Object
name|testUser2
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"testUser2"
argument_list|,
name|testUser2
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Test user 2.          *           * The option will be converted to a<code>facebook4j.TestUser</code>          * type.          *           * Group: common          */
DECL|method|testUser2 (String testUser2)
specifier|default
name|FacebookEndpointConsumerBuilder
name|testUser2
parameter_list|(
name|String
name|testUser2
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"testUser2"
argument_list|,
name|testUser2
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ID of the test user.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|testUserId (String testUserId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|testUserId
parameter_list|(
name|String
name|testUserId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"testUserId"
argument_list|,
name|testUserId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The title text.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|title (String title)
specifier|default
name|FacebookEndpointConsumerBuilder
name|title
parameter_list|(
name|String
name|title
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"title"
argument_list|,
name|title
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ID of the user to tag.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|toUserId (String toUserId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|toUserId
parameter_list|(
name|String
name|toUserId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"toUserId"
argument_list|,
name|toUserId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The IDs of the users to tag.          *           * The option is a:<code>java.util.List&lt;java.lang.String&gt;</code>          * type.          *           * Group: common          */
DECL|method|toUserIds (List<String> toUserIds)
specifier|default
name|FacebookEndpointConsumerBuilder
name|toUserIds
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|toUserIds
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"toUserIds"
argument_list|,
name|toUserIds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The IDs of the users to tag.          *           * The option will be converted to a          *<code>java.util.List&lt;java.lang.String&gt;</code> type.          *           * Group: common          */
DECL|method|toUserIds (String toUserIds)
specifier|default
name|FacebookEndpointConsumerBuilder
name|toUserIds
parameter_list|(
name|String
name|toUserIds
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"toUserIds"
argument_list|,
name|toUserIds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Facebook user ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|userId (String userId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|userId
parameter_list|(
name|String
name|userId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"userId"
argument_list|,
name|userId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ID of a user 1.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|userId1 (String userId1)
specifier|default
name|FacebookEndpointConsumerBuilder
name|userId1
parameter_list|(
name|String
name|userId1
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"userId1"
argument_list|,
name|userId1
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ID of a user 2.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|userId2 (String userId2)
specifier|default
name|FacebookEndpointConsumerBuilder
name|userId2
parameter_list|(
name|String
name|userId2
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"userId2"
argument_list|,
name|userId2
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The IDs of users to invite to event.          *           * The option is a:<code>java.util.List&lt;java.lang.String&gt;</code>          * type.          *           * Group: common          */
DECL|method|userIds (List<String> userIds)
specifier|default
name|FacebookEndpointConsumerBuilder
name|userIds
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|userIds
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"userIds"
argument_list|,
name|userIds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The IDs of users to invite to event.          *           * The option will be converted to a          *<code>java.util.List&lt;java.lang.String&gt;</code> type.          *           * Group: common          */
DECL|method|userIds (String userIds)
specifier|default
name|FacebookEndpointConsumerBuilder
name|userIds
parameter_list|(
name|String
name|userIds
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"userIds"
argument_list|,
name|userIds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The test user locale.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|userLocale (String userLocale)
specifier|default
name|FacebookEndpointConsumerBuilder
name|userLocale
parameter_list|(
name|String
name|userLocale
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"userLocale"
argument_list|,
name|userLocale
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Use SSL.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|useSSL (Boolean useSSL)
specifier|default
name|FacebookEndpointConsumerBuilder
name|useSSL
parameter_list|(
name|Boolean
name|useSSL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"useSSL"
argument_list|,
name|useSSL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Use SSL.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|useSSL (String useSSL)
specifier|default
name|FacebookEndpointConsumerBuilder
name|useSSL
parameter_list|(
name|String
name|useSSL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"useSSL"
argument_list|,
name|useSSL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Video API base URL.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|videoBaseURL (String videoBaseURL)
specifier|default
name|FacebookEndpointConsumerBuilder
name|videoBaseURL
parameter_list|(
name|String
name|videoBaseURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"videoBaseURL"
argument_list|,
name|videoBaseURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The video ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|videoId (String videoId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|videoId
parameter_list|(
name|String
name|videoId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"videoId"
argument_list|,
name|videoId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Allows for bridging the consumer to the Camel routing Error Handler,          * which mean any exceptions occurred while the consumer is trying to          * pickup incoming messages, or the likes, will now be processed as a          * message and handled by the routing Error Handler. By default the          * consumer will use the org.apache.camel.spi.ExceptionHandler to deal          * with exceptions, that will be logged at WARN or ERROR level and          * ignored.          *           * The option is a:<code>boolean</code> type.          *           * Group: consumer          */
DECL|method|bridgeErrorHandler ( boolean bridgeErrorHandler)
specifier|default
name|FacebookEndpointConsumerBuilder
name|bridgeErrorHandler
parameter_list|(
name|boolean
name|bridgeErrorHandler
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"bridgeErrorHandler"
argument_list|,
name|bridgeErrorHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Allows for bridging the consumer to the Camel routing Error Handler,          * which mean any exceptions occurred while the consumer is trying to          * pickup incoming messages, or the likes, will now be processed as a          * message and handled by the routing Error Handler. By default the          * consumer will use the org.apache.camel.spi.ExceptionHandler to deal          * with exceptions, that will be logged at WARN or ERROR level and          * ignored.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: consumer          */
DECL|method|bridgeErrorHandler ( String bridgeErrorHandler)
specifier|default
name|FacebookEndpointConsumerBuilder
name|bridgeErrorHandler
parameter_list|(
name|String
name|bridgeErrorHandler
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"bridgeErrorHandler"
argument_list|,
name|bridgeErrorHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP proxy server host name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: proxy          */
DECL|method|httpProxyHost ( String httpProxyHost)
specifier|default
name|FacebookEndpointConsumerBuilder
name|httpProxyHost
parameter_list|(
name|String
name|httpProxyHost
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpProxyHost"
argument_list|,
name|httpProxyHost
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP proxy server password.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: proxy          */
DECL|method|httpProxyPassword ( String httpProxyPassword)
specifier|default
name|FacebookEndpointConsumerBuilder
name|httpProxyPassword
parameter_list|(
name|String
name|httpProxyPassword
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpProxyPassword"
argument_list|,
name|httpProxyPassword
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP proxy server port.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: proxy          */
DECL|method|httpProxyPort ( Integer httpProxyPort)
specifier|default
name|FacebookEndpointConsumerBuilder
name|httpProxyPort
parameter_list|(
name|Integer
name|httpProxyPort
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpProxyPort"
argument_list|,
name|httpProxyPort
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP proxy server port.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: proxy          */
DECL|method|httpProxyPort ( String httpProxyPort)
specifier|default
name|FacebookEndpointConsumerBuilder
name|httpProxyPort
parameter_list|(
name|String
name|httpProxyPort
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpProxyPort"
argument_list|,
name|httpProxyPort
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP proxy server user name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: proxy          */
DECL|method|httpProxyUser ( String httpProxyUser)
specifier|default
name|FacebookEndpointConsumerBuilder
name|httpProxyUser
parameter_list|(
name|String
name|httpProxyUser
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpProxyUser"
argument_list|,
name|httpProxyUser
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The user access token.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oAuthAccessToken ( String oAuthAccessToken)
specifier|default
name|FacebookEndpointConsumerBuilder
name|oAuthAccessToken
parameter_list|(
name|String
name|oAuthAccessToken
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oAuthAccessToken"
argument_list|,
name|oAuthAccessToken
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * OAuth access token URL.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oAuthAccessTokenURL ( String oAuthAccessTokenURL)
specifier|default
name|FacebookEndpointConsumerBuilder
name|oAuthAccessTokenURL
parameter_list|(
name|String
name|oAuthAccessTokenURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oAuthAccessTokenURL"
argument_list|,
name|oAuthAccessTokenURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The application Id.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oAuthAppId (String oAuthAppId)
specifier|default
name|FacebookEndpointConsumerBuilder
name|oAuthAppId
parameter_list|(
name|String
name|oAuthAppId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oAuthAppId"
argument_list|,
name|oAuthAppId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The application Secret.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oAuthAppSecret ( String oAuthAppSecret)
specifier|default
name|FacebookEndpointConsumerBuilder
name|oAuthAppSecret
parameter_list|(
name|String
name|oAuthAppSecret
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oAuthAppSecret"
argument_list|,
name|oAuthAppSecret
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * OAuth authorization URL.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oAuthAuthorizationURL ( String oAuthAuthorizationURL)
specifier|default
name|FacebookEndpointConsumerBuilder
name|oAuthAuthorizationURL
parameter_list|(
name|String
name|oAuthAuthorizationURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oAuthAuthorizationURL"
argument_list|,
name|oAuthAuthorizationURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Default OAuth permissions. Comma separated permission names. See          * https://developers.facebook.com/docs/reference/login/#permissions for          * the detail.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oAuthPermissions ( String oAuthPermissions)
specifier|default
name|FacebookEndpointConsumerBuilder
name|oAuthPermissions
parameter_list|(
name|String
name|oAuthPermissions
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oAuthPermissions"
argument_list|,
name|oAuthPermissions
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint consumers for the Facebook component.      */
DECL|interface|AdvancedFacebookEndpointConsumerBuilder
specifier|public
interface|interface
name|AdvancedFacebookEndpointConsumerBuilder
extends|extends
name|EndpointConsumerBuilder
block|{
DECL|method|basic ()
specifier|default
name|FacebookEndpointConsumerBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|FacebookEndpointConsumerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * To let the consumer use a custom ExceptionHandler. Notice if the          * option bridgeErrorHandler is enabled then this option is not in use.          * By default the consumer will deal with exceptions, that will be          * logged at WARN or ERROR level and ignored.          *           * The option is a:<code>org.apache.camel.spi.ExceptionHandler</code>          * type.          *           * Group: consumer (advanced)          */
DECL|method|exceptionHandler ( ExceptionHandler exceptionHandler)
specifier|default
name|AdvancedFacebookEndpointConsumerBuilder
name|exceptionHandler
parameter_list|(
name|ExceptionHandler
name|exceptionHandler
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"exceptionHandler"
argument_list|,
name|exceptionHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To let the consumer use a custom ExceptionHandler. Notice if the          * option bridgeErrorHandler is enabled then this option is not in use.          * By default the consumer will deal with exceptions, that will be          * logged at WARN or ERROR level and ignored.          *           * The option will be converted to a          *<code>org.apache.camel.spi.ExceptionHandler</code> type.          *           * Group: consumer (advanced)          */
DECL|method|exceptionHandler ( String exceptionHandler)
specifier|default
name|AdvancedFacebookEndpointConsumerBuilder
name|exceptionHandler
parameter_list|(
name|String
name|exceptionHandler
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"exceptionHandler"
argument_list|,
name|exceptionHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets the exchange pattern when the consumer creates an exchange.          *           * The option is a:<code>org.apache.camel.ExchangePattern</code> type.          *           * Group: consumer (advanced)          */
DECL|method|exchangePattern ( ExchangePattern exchangePattern)
specifier|default
name|AdvancedFacebookEndpointConsumerBuilder
name|exchangePattern
parameter_list|(
name|ExchangePattern
name|exchangePattern
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"exchangePattern"
argument_list|,
name|exchangePattern
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets the exchange pattern when the consumer creates an exchange.          *           * The option will be converted to a          *<code>org.apache.camel.ExchangePattern</code> type.          *           * Group: consumer (advanced)          */
DECL|method|exchangePattern ( String exchangePattern)
specifier|default
name|AdvancedFacebookEndpointConsumerBuilder
name|exchangePattern
parameter_list|(
name|String
name|exchangePattern
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"exchangePattern"
argument_list|,
name|exchangePattern
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedFacebookEndpointConsumerBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedFacebookEndpointConsumerBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( boolean synchronous)
specifier|default
name|AdvancedFacebookEndpointConsumerBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( String synchronous)
specifier|default
name|AdvancedFacebookEndpointConsumerBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Builder for endpoint producers for the Facebook component.      */
DECL|interface|FacebookEndpointProducerBuilder
specifier|public
interface|interface
name|FacebookEndpointProducerBuilder
extends|extends
name|EndpointProducerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedFacebookEndpointProducerBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedFacebookEndpointProducerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * What operation to perform.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|methodName (String methodName)
specifier|default
name|FacebookEndpointProducerBuilder
name|methodName
parameter_list|(
name|String
name|methodName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"methodName"
argument_list|,
name|methodName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The unique URL of the achievement.          *           * The option is a:<code>java.net.URL</code> type.          *           * Group: common          */
DECL|method|achievementURL ( URL achievementURL)
specifier|default
name|FacebookEndpointProducerBuilder
name|achievementURL
parameter_list|(
name|URL
name|achievementURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"achievementURL"
argument_list|,
name|achievementURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The unique URL of the achievement.          *           * The option will be converted to a<code>java.net.URL</code> type.          *           * Group: common          */
DECL|method|achievementURL ( String achievementURL)
specifier|default
name|FacebookEndpointProducerBuilder
name|achievementURL
parameter_list|(
name|String
name|achievementURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"achievementURL"
argument_list|,
name|achievementURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The album ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|albumId (String albumId)
specifier|default
name|FacebookEndpointProducerBuilder
name|albumId
parameter_list|(
name|String
name|albumId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"albumId"
argument_list|,
name|albumId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The facebook Album to be created or updated.          *           * The option is a:<code>facebook4j.AlbumUpdate</code> type.          *           * Group: common          */
DECL|method|albumUpdate (Object albumUpdate)
specifier|default
name|FacebookEndpointProducerBuilder
name|albumUpdate
parameter_list|(
name|Object
name|albumUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"albumUpdate"
argument_list|,
name|albumUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The facebook Album to be created or updated.          *           * The option will be converted to a<code>facebook4j.AlbumUpdate</code>          * type.          *           * Group: common          */
DECL|method|albumUpdate (String albumUpdate)
specifier|default
name|FacebookEndpointProducerBuilder
name|albumUpdate
parameter_list|(
name|String
name|albumUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"albumUpdate"
argument_list|,
name|albumUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ID of the Facebook Application.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|appId (String appId)
specifier|default
name|FacebookEndpointProducerBuilder
name|appId
parameter_list|(
name|String
name|appId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"appId"
argument_list|,
name|appId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Location latitude and longitude.          *           * The option is a:<code>facebook4j.GeoLocation</code> type.          *           * Group: common          */
DECL|method|center (Object center)
specifier|default
name|FacebookEndpointProducerBuilder
name|center
parameter_list|(
name|Object
name|center
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"center"
argument_list|,
name|center
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Location latitude and longitude.          *           * The option will be converted to a<code>facebook4j.GeoLocation</code>          * type.          *           * Group: common          */
DECL|method|center (String center)
specifier|default
name|FacebookEndpointProducerBuilder
name|center
parameter_list|(
name|String
name|center
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"center"
argument_list|,
name|center
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The checkin ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|checkinId (String checkinId)
specifier|default
name|FacebookEndpointProducerBuilder
name|checkinId
parameter_list|(
name|String
name|checkinId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"checkinId"
argument_list|,
name|checkinId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The checkin to be created. Deprecated, instead create a Post with an          * attached location.          *           * The option is a:<code>facebook4j.CheckinUpdate</code> type.          *           * Group: common          */
annotation|@
name|Deprecated
DECL|method|checkinUpdate ( Object checkinUpdate)
specifier|default
name|FacebookEndpointProducerBuilder
name|checkinUpdate
parameter_list|(
name|Object
name|checkinUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"checkinUpdate"
argument_list|,
name|checkinUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The checkin to be created. Deprecated, instead create a Post with an          * attached location.          *           * The option will be converted to a          *<code>facebook4j.CheckinUpdate</code> type.          *           * Group: common          */
annotation|@
name|Deprecated
DECL|method|checkinUpdate ( String checkinUpdate)
specifier|default
name|FacebookEndpointProducerBuilder
name|checkinUpdate
parameter_list|(
name|String
name|checkinUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"checkinUpdate"
argument_list|,
name|checkinUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Facebook4J API client URL.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|clientURL (String clientURL)
specifier|default
name|FacebookEndpointProducerBuilder
name|clientURL
parameter_list|(
name|String
name|clientURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"clientURL"
argument_list|,
name|clientURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Facebook4J client API version.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|clientVersion ( String clientVersion)
specifier|default
name|FacebookEndpointProducerBuilder
name|clientVersion
parameter_list|(
name|String
name|clientVersion
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"clientVersion"
argument_list|,
name|clientVersion
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The comment ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|commentId (String commentId)
specifier|default
name|FacebookEndpointProducerBuilder
name|commentId
parameter_list|(
name|String
name|commentId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"commentId"
argument_list|,
name|commentId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The facebook Comment to be created or updated.          *           * The option is a:<code>facebook4j.CommentUpdate</code> type.          *           * Group: common          */
DECL|method|commentUpdate ( Object commentUpdate)
specifier|default
name|FacebookEndpointProducerBuilder
name|commentUpdate
parameter_list|(
name|Object
name|commentUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"commentUpdate"
argument_list|,
name|commentUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The facebook Comment to be created or updated.          *           * The option will be converted to a          *<code>facebook4j.CommentUpdate</code> type.          *           * Group: common          */
DECL|method|commentUpdate ( String commentUpdate)
specifier|default
name|FacebookEndpointProducerBuilder
name|commentUpdate
parameter_list|(
name|String
name|commentUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"commentUpdate"
argument_list|,
name|commentUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Enables deubg output. Effective only with the embedded logger.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|debugEnabled ( Boolean debugEnabled)
specifier|default
name|FacebookEndpointProducerBuilder
name|debugEnabled
parameter_list|(
name|Boolean
name|debugEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"debugEnabled"
argument_list|,
name|debugEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Enables deubg output. Effective only with the embedded logger.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|debugEnabled (String debugEnabled)
specifier|default
name|FacebookEndpointProducerBuilder
name|debugEnabled
parameter_list|(
name|String
name|debugEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"debugEnabled"
argument_list|,
name|debugEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The description text.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|description (String description)
specifier|default
name|FacebookEndpointProducerBuilder
name|description
parameter_list|(
name|String
name|description
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"description"
argument_list|,
name|description
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Distance in meters.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|distance (Integer distance)
specifier|default
name|FacebookEndpointProducerBuilder
name|distance
parameter_list|(
name|Integer
name|distance
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"distance"
argument_list|,
name|distance
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Distance in meters.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|distance (String distance)
specifier|default
name|FacebookEndpointProducerBuilder
name|distance
parameter_list|(
name|String
name|distance
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"distance"
argument_list|,
name|distance
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The domain ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|domainId (String domainId)
specifier|default
name|FacebookEndpointProducerBuilder
name|domainId
parameter_list|(
name|String
name|domainId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"domainId"
argument_list|,
name|domainId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The domain name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|domainName (String domainName)
specifier|default
name|FacebookEndpointProducerBuilder
name|domainName
parameter_list|(
name|String
name|domainName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"domainName"
argument_list|,
name|domainName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The domain names.          *           * The option is a:<code>java.util.List&lt;java.lang.String&gt;</code>          * type.          *           * Group: common          */
DECL|method|domainNames ( List<String> domainNames)
specifier|default
name|FacebookEndpointProducerBuilder
name|domainNames
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|domainNames
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"domainNames"
argument_list|,
name|domainNames
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The domain names.          *           * The option will be converted to a          *<code>java.util.List&lt;java.lang.String&gt;</code> type.          *           * Group: common          */
DECL|method|domainNames (String domainNames)
specifier|default
name|FacebookEndpointProducerBuilder
name|domainNames
parameter_list|(
name|String
name|domainNames
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"domainNames"
argument_list|,
name|domainNames
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The event ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|eventId (String eventId)
specifier|default
name|FacebookEndpointProducerBuilder
name|eventId
parameter_list|(
name|String
name|eventId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"eventId"
argument_list|,
name|eventId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The event to be created or updated.          *           * The option is a:<code>facebook4j.EventUpdate</code> type.          *           * Group: common          */
DECL|method|eventUpdate (Object eventUpdate)
specifier|default
name|FacebookEndpointProducerBuilder
name|eventUpdate
parameter_list|(
name|Object
name|eventUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"eventUpdate"
argument_list|,
name|eventUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The event to be created or updated.          *           * The option will be converted to a<code>facebook4j.EventUpdate</code>          * type.          *           * Group: common          */
DECL|method|eventUpdate (String eventUpdate)
specifier|default
name|FacebookEndpointProducerBuilder
name|eventUpdate
parameter_list|(
name|String
name|eventUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"eventUpdate"
argument_list|,
name|eventUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The friend ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|friendId (String friendId)
specifier|default
name|FacebookEndpointProducerBuilder
name|friendId
parameter_list|(
name|String
name|friendId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"friendId"
argument_list|,
name|friendId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The friend list ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|friendlistId (String friendlistId)
specifier|default
name|FacebookEndpointProducerBuilder
name|friendlistId
parameter_list|(
name|String
name|friendlistId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"friendlistId"
argument_list|,
name|friendlistId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The friend list Name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|friendlistName ( String friendlistName)
specifier|default
name|FacebookEndpointProducerBuilder
name|friendlistName
parameter_list|(
name|String
name|friendlistName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"friendlistName"
argument_list|,
name|friendlistName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The friend user ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|friendUserId (String friendUserId)
specifier|default
name|FacebookEndpointProducerBuilder
name|friendUserId
parameter_list|(
name|String
name|friendUserId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"friendUserId"
argument_list|,
name|friendUserId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The group ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|groupId (String groupId)
specifier|default
name|FacebookEndpointProducerBuilder
name|groupId
parameter_list|(
name|String
name|groupId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"groupId"
argument_list|,
name|groupId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Use Facebook GZIP encoding.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|gzipEnabled (Boolean gzipEnabled)
specifier|default
name|FacebookEndpointProducerBuilder
name|gzipEnabled
parameter_list|(
name|Boolean
name|gzipEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"gzipEnabled"
argument_list|,
name|gzipEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Use Facebook GZIP encoding.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|gzipEnabled (String gzipEnabled)
specifier|default
name|FacebookEndpointProducerBuilder
name|gzipEnabled
parameter_list|(
name|String
name|gzipEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"gzipEnabled"
argument_list|,
name|gzipEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Http connection timeout in milliseconds.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpConnectionTimeout ( Integer httpConnectionTimeout)
specifier|default
name|FacebookEndpointProducerBuilder
name|httpConnectionTimeout
parameter_list|(
name|Integer
name|httpConnectionTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpConnectionTimeout"
argument_list|,
name|httpConnectionTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Http connection timeout in milliseconds.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpConnectionTimeout ( String httpConnectionTimeout)
specifier|default
name|FacebookEndpointProducerBuilder
name|httpConnectionTimeout
parameter_list|(
name|String
name|httpConnectionTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpConnectionTimeout"
argument_list|,
name|httpConnectionTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP maximum connections per route.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpDefaultMaxPerRoute ( Integer httpDefaultMaxPerRoute)
specifier|default
name|FacebookEndpointProducerBuilder
name|httpDefaultMaxPerRoute
parameter_list|(
name|Integer
name|httpDefaultMaxPerRoute
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpDefaultMaxPerRoute"
argument_list|,
name|httpDefaultMaxPerRoute
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP maximum connections per route.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpDefaultMaxPerRoute ( String httpDefaultMaxPerRoute)
specifier|default
name|FacebookEndpointProducerBuilder
name|httpDefaultMaxPerRoute
parameter_list|(
name|String
name|httpDefaultMaxPerRoute
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpDefaultMaxPerRoute"
argument_list|,
name|httpDefaultMaxPerRoute
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP maximum total connections.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpMaxTotalConnections ( Integer httpMaxTotalConnections)
specifier|default
name|FacebookEndpointProducerBuilder
name|httpMaxTotalConnections
parameter_list|(
name|Integer
name|httpMaxTotalConnections
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpMaxTotalConnections"
argument_list|,
name|httpMaxTotalConnections
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP maximum total connections.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpMaxTotalConnections ( String httpMaxTotalConnections)
specifier|default
name|FacebookEndpointProducerBuilder
name|httpMaxTotalConnections
parameter_list|(
name|String
name|httpMaxTotalConnections
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpMaxTotalConnections"
argument_list|,
name|httpMaxTotalConnections
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Http read timeout in milliseconds.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpReadTimeout ( Integer httpReadTimeout)
specifier|default
name|FacebookEndpointProducerBuilder
name|httpReadTimeout
parameter_list|(
name|Integer
name|httpReadTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpReadTimeout"
argument_list|,
name|httpReadTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Http read timeout in milliseconds.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpReadTimeout ( String httpReadTimeout)
specifier|default
name|FacebookEndpointProducerBuilder
name|httpReadTimeout
parameter_list|(
name|String
name|httpReadTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpReadTimeout"
argument_list|,
name|httpReadTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Number of HTTP retries.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpRetryCount ( Integer httpRetryCount)
specifier|default
name|FacebookEndpointProducerBuilder
name|httpRetryCount
parameter_list|(
name|Integer
name|httpRetryCount
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpRetryCount"
argument_list|,
name|httpRetryCount
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Number of HTTP retries.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpRetryCount ( String httpRetryCount)
specifier|default
name|FacebookEndpointProducerBuilder
name|httpRetryCount
parameter_list|(
name|String
name|httpRetryCount
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpRetryCount"
argument_list|,
name|httpRetryCount
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP retry interval in seconds.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpRetryIntervalSeconds ( Integer httpRetryIntervalSeconds)
specifier|default
name|FacebookEndpointProducerBuilder
name|httpRetryIntervalSeconds
parameter_list|(
name|Integer
name|httpRetryIntervalSeconds
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpRetryIntervalSeconds"
argument_list|,
name|httpRetryIntervalSeconds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP retry interval in seconds.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpRetryIntervalSeconds ( String httpRetryIntervalSeconds)
specifier|default
name|FacebookEndpointProducerBuilder
name|httpRetryIntervalSeconds
parameter_list|(
name|String
name|httpRetryIntervalSeconds
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpRetryIntervalSeconds"
argument_list|,
name|httpRetryIntervalSeconds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP streaming read timeout in milliseconds.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpStreamingReadTimeout ( Integer httpStreamingReadTimeout)
specifier|default
name|FacebookEndpointProducerBuilder
name|httpStreamingReadTimeout
parameter_list|(
name|Integer
name|httpStreamingReadTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpStreamingReadTimeout"
argument_list|,
name|httpStreamingReadTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP streaming read timeout in milliseconds.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpStreamingReadTimeout ( String httpStreamingReadTimeout)
specifier|default
name|FacebookEndpointProducerBuilder
name|httpStreamingReadTimeout
parameter_list|(
name|String
name|httpStreamingReadTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpStreamingReadTimeout"
argument_list|,
name|httpStreamingReadTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ids of users.          *           * The option is a:<code>java.util.List&lt;java.lang.String&gt;</code>          * type.          *           * Group: common          */
DECL|method|ids (List<String> ids)
specifier|default
name|FacebookEndpointProducerBuilder
name|ids
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|ids
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"ids"
argument_list|,
name|ids
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ids of users.          *           * The option will be converted to a          *<code>java.util.List&lt;java.lang.String&gt;</code> type.          *           * Group: common          */
DECL|method|ids (String ids)
specifier|default
name|FacebookEndpointProducerBuilder
name|ids
parameter_list|(
name|String
name|ids
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"ids"
argument_list|,
name|ids
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets the name of a parameter to be passed in the exchange In Body.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|inBody (String inBody)
specifier|default
name|FacebookEndpointProducerBuilder
name|inBody
parameter_list|(
name|String
name|inBody
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"inBody"
argument_list|,
name|inBody
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Enables notifications that the user has already read in addition to          * unread ones.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|includeRead (Boolean includeRead)
specifier|default
name|FacebookEndpointProducerBuilder
name|includeRead
parameter_list|(
name|Boolean
name|includeRead
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"includeRead"
argument_list|,
name|includeRead
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Enables notifications that the user has already read in addition to          * unread ones.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|includeRead (String includeRead)
specifier|default
name|FacebookEndpointProducerBuilder
name|includeRead
parameter_list|(
name|String
name|includeRead
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"includeRead"
argument_list|,
name|includeRead
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether hidden.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|isHidden (Boolean isHidden)
specifier|default
name|FacebookEndpointProducerBuilder
name|isHidden
parameter_list|(
name|Boolean
name|isHidden
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"isHidden"
argument_list|,
name|isHidden
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether hidden.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|isHidden (String isHidden)
specifier|default
name|FacebookEndpointProducerBuilder
name|isHidden
parameter_list|(
name|String
name|isHidden
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"isHidden"
argument_list|,
name|isHidden
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * If set to true, raw JSON forms will be stored in DataObjectFactory.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|jsonStoreEnabled ( Boolean jsonStoreEnabled)
specifier|default
name|FacebookEndpointProducerBuilder
name|jsonStoreEnabled
parameter_list|(
name|Boolean
name|jsonStoreEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"jsonStoreEnabled"
argument_list|,
name|jsonStoreEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * If set to true, raw JSON forms will be stored in DataObjectFactory.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|jsonStoreEnabled ( String jsonStoreEnabled)
specifier|default
name|FacebookEndpointProducerBuilder
name|jsonStoreEnabled
parameter_list|(
name|String
name|jsonStoreEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"jsonStoreEnabled"
argument_list|,
name|jsonStoreEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Link URL.          *           * The option is a:<code>java.net.URL</code> type.          *           * Group: common          */
DECL|method|link (URL link)
specifier|default
name|FacebookEndpointProducerBuilder
name|link
parameter_list|(
name|URL
name|link
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"link"
argument_list|,
name|link
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Link URL.          *           * The option will be converted to a<code>java.net.URL</code> type.          *           * Group: common          */
DECL|method|link (String link)
specifier|default
name|FacebookEndpointProducerBuilder
name|link
parameter_list|(
name|String
name|link
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"link"
argument_list|,
name|link
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Link ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|linkId (String linkId)
specifier|default
name|FacebookEndpointProducerBuilder
name|linkId
parameter_list|(
name|String
name|linkId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"linkId"
argument_list|,
name|linkId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Desired FQL locale.          *           * The option is a:<code>java.util.Locale</code> type.          *           * Group: common          */
DECL|method|locale (Locale locale)
specifier|default
name|FacebookEndpointProducerBuilder
name|locale
parameter_list|(
name|Locale
name|locale
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"locale"
argument_list|,
name|locale
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Desired FQL locale.          *           * The option will be converted to a<code>java.util.Locale</code> type.          *           * Group: common          */
DECL|method|locale (String locale)
specifier|default
name|FacebookEndpointProducerBuilder
name|locale
parameter_list|(
name|String
name|locale
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"locale"
argument_list|,
name|locale
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * If set to true, Facebook4J mbean will be registerd.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|mbeanEnabled ( Boolean mbeanEnabled)
specifier|default
name|FacebookEndpointProducerBuilder
name|mbeanEnabled
parameter_list|(
name|Boolean
name|mbeanEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"mbeanEnabled"
argument_list|,
name|mbeanEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * If set to true, Facebook4J mbean will be registerd.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|mbeanEnabled (String mbeanEnabled)
specifier|default
name|FacebookEndpointProducerBuilder
name|mbeanEnabled
parameter_list|(
name|String
name|mbeanEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"mbeanEnabled"
argument_list|,
name|mbeanEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The message text.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|message (String message)
specifier|default
name|FacebookEndpointProducerBuilder
name|message
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"message"
argument_list|,
name|message
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The message ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|messageId (String messageId)
specifier|default
name|FacebookEndpointProducerBuilder
name|messageId
parameter_list|(
name|String
name|messageId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"messageId"
argument_list|,
name|messageId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The metric name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|metric (String metric)
specifier|default
name|FacebookEndpointProducerBuilder
name|metric
parameter_list|(
name|String
name|metric
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"metric"
argument_list|,
name|metric
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The milestone id.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|milestoneId (String milestoneId)
specifier|default
name|FacebookEndpointProducerBuilder
name|milestoneId
parameter_list|(
name|String
name|milestoneId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"milestoneId"
argument_list|,
name|milestoneId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Test user name, must be of the form 'first last'.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|name (String name)
specifier|default
name|FacebookEndpointProducerBuilder
name|name
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"name"
argument_list|,
name|name
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The note ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|noteId (String noteId)
specifier|default
name|FacebookEndpointProducerBuilder
name|noteId
parameter_list|(
name|String
name|noteId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"noteId"
argument_list|,
name|noteId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The notification ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|notificationId ( String notificationId)
specifier|default
name|FacebookEndpointProducerBuilder
name|notificationId
parameter_list|(
name|String
name|notificationId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"notificationId"
argument_list|,
name|notificationId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The insight object ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|objectId (String objectId)
specifier|default
name|FacebookEndpointProducerBuilder
name|objectId
parameter_list|(
name|String
name|objectId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"objectId"
argument_list|,
name|objectId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The offer id.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|offerId (String offerId)
specifier|default
name|FacebookEndpointProducerBuilder
name|offerId
parameter_list|(
name|String
name|offerId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"offerId"
argument_list|,
name|offerId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The question's answer option description.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|optionDescription ( String optionDescription)
specifier|default
name|FacebookEndpointProducerBuilder
name|optionDescription
parameter_list|(
name|String
name|optionDescription
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"optionDescription"
argument_list|,
name|optionDescription
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The page id.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|pageId (String pageId)
specifier|default
name|FacebookEndpointProducerBuilder
name|pageId
parameter_list|(
name|String
name|pageId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pageId"
argument_list|,
name|pageId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The permission name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|permissionName ( String permissionName)
specifier|default
name|FacebookEndpointProducerBuilder
name|permissionName
parameter_list|(
name|String
name|permissionName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"permissionName"
argument_list|,
name|permissionName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Test user permissions in the format perm1,perm2,...          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|permissions (String permissions)
specifier|default
name|FacebookEndpointProducerBuilder
name|permissions
parameter_list|(
name|String
name|permissions
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"permissions"
argument_list|,
name|permissions
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The photo ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|photoId (String photoId)
specifier|default
name|FacebookEndpointProducerBuilder
name|photoId
parameter_list|(
name|String
name|photoId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"photoId"
argument_list|,
name|photoId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture id.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|pictureId (Integer pictureId)
specifier|default
name|FacebookEndpointProducerBuilder
name|pictureId
parameter_list|(
name|Integer
name|pictureId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pictureId"
argument_list|,
name|pictureId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture id.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|pictureId (String pictureId)
specifier|default
name|FacebookEndpointProducerBuilder
name|pictureId
parameter_list|(
name|String
name|pictureId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pictureId"
argument_list|,
name|pictureId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture2 id.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|pictureId2 (Integer pictureId2)
specifier|default
name|FacebookEndpointProducerBuilder
name|pictureId2
parameter_list|(
name|Integer
name|pictureId2
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pictureId2"
argument_list|,
name|pictureId2
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture2 id.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|pictureId2 (String pictureId2)
specifier|default
name|FacebookEndpointProducerBuilder
name|pictureId2
parameter_list|(
name|String
name|pictureId2
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pictureId2"
argument_list|,
name|pictureId2
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture size.          *           * The option is a:<code>facebook4j.PictureSize</code> type.          *           * Group: common          */
DECL|method|pictureSize ( PictureSize pictureSize)
specifier|default
name|FacebookEndpointProducerBuilder
name|pictureSize
parameter_list|(
name|PictureSize
name|pictureSize
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pictureSize"
argument_list|,
name|pictureSize
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture size.          *           * The option will be converted to a<code>facebook4j.PictureSize</code>          * type.          *           * Group: common          */
DECL|method|pictureSize (String pictureSize)
specifier|default
name|FacebookEndpointProducerBuilder
name|pictureSize
parameter_list|(
name|String
name|pictureSize
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pictureSize"
argument_list|,
name|pictureSize
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The place ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|placeId (String placeId)
specifier|default
name|FacebookEndpointProducerBuilder
name|placeId
parameter_list|(
name|String
name|placeId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"placeId"
argument_list|,
name|placeId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The post ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|postId (String postId)
specifier|default
name|FacebookEndpointProducerBuilder
name|postId
parameter_list|(
name|String
name|postId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"postId"
argument_list|,
name|postId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The post to create or update.          *           * The option is a:<code>facebook4j.PostUpdate</code> type.          *           * Group: common          */
DECL|method|postUpdate (Object postUpdate)
specifier|default
name|FacebookEndpointProducerBuilder
name|postUpdate
parameter_list|(
name|Object
name|postUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"postUpdate"
argument_list|,
name|postUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The post to create or update.          *           * The option will be converted to a<code>facebook4j.PostUpdate</code>          * type.          *           * Group: common          */
DECL|method|postUpdate (String postUpdate)
specifier|default
name|FacebookEndpointProducerBuilder
name|postUpdate
parameter_list|(
name|String
name|postUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"postUpdate"
argument_list|,
name|postUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Prettify JSON debug output if set to true.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|prettyDebugEnabled ( Boolean prettyDebugEnabled)
specifier|default
name|FacebookEndpointProducerBuilder
name|prettyDebugEnabled
parameter_list|(
name|Boolean
name|prettyDebugEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"prettyDebugEnabled"
argument_list|,
name|prettyDebugEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Prettify JSON debug output if set to true.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|prettyDebugEnabled ( String prettyDebugEnabled)
specifier|default
name|FacebookEndpointProducerBuilder
name|prettyDebugEnabled
parameter_list|(
name|String
name|prettyDebugEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"prettyDebugEnabled"
argument_list|,
name|prettyDebugEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * FQL queries.          *           * The option is a:<code>java.util.Map&lt;java.lang.String,          * java.lang.String&gt;</code> type.          *           * Group: common          */
DECL|method|queries ( Map<String, String> queries)
specifier|default
name|FacebookEndpointProducerBuilder
name|queries
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|queries
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"queries"
argument_list|,
name|queries
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * FQL queries.          *           * The option will be converted to a          *<code>java.util.Map&lt;java.lang.String, java.lang.String&gt;</code>          * type.          *           * Group: common          */
DECL|method|queries (String queries)
specifier|default
name|FacebookEndpointProducerBuilder
name|queries
parameter_list|(
name|String
name|queries
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"queries"
argument_list|,
name|queries
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * FQL query or search terms for search endpoints.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|query (String query)
specifier|default
name|FacebookEndpointProducerBuilder
name|query
parameter_list|(
name|String
name|query
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"query"
argument_list|,
name|query
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The question id.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|questionId (String questionId)
specifier|default
name|FacebookEndpointProducerBuilder
name|questionId
parameter_list|(
name|String
name|questionId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"questionId"
argument_list|,
name|questionId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Optional reading parameters. See Reading Options(#reading).          *           * The option is a:<code>facebook4j.Reading</code> type.          *           * Group: common          */
DECL|method|reading (Object reading)
specifier|default
name|FacebookEndpointProducerBuilder
name|reading
parameter_list|(
name|Object
name|reading
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"reading"
argument_list|,
name|reading
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Optional reading parameters. See Reading Options(#reading).          *           * The option will be converted to a<code>facebook4j.Reading</code>          * type.          *           * Group: common          */
DECL|method|reading (String reading)
specifier|default
name|FacebookEndpointProducerBuilder
name|reading
parameter_list|(
name|String
name|reading
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"reading"
argument_list|,
name|reading
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To configure Reading using key/value pairs from the Map.          *           * The option is a:<code>java.util.Map&lt;java.lang.String,          * java.lang.Object&gt;</code> type.          *           * Group: common          */
DECL|method|readingOptions ( Map<String, Object> readingOptions)
specifier|default
name|FacebookEndpointProducerBuilder
name|readingOptions
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|readingOptions
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"readingOptions"
argument_list|,
name|readingOptions
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To configure Reading using key/value pairs from the Map.          *           * The option will be converted to a          *<code>java.util.Map&lt;java.lang.String, java.lang.Object&gt;</code>          * type.          *           * Group: common          */
DECL|method|readingOptions ( String readingOptions)
specifier|default
name|FacebookEndpointProducerBuilder
name|readingOptions
parameter_list|(
name|String
name|readingOptions
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"readingOptions"
argument_list|,
name|readingOptions
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * API base URL.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|restBaseURL (String restBaseURL)
specifier|default
name|FacebookEndpointProducerBuilder
name|restBaseURL
parameter_list|(
name|String
name|restBaseURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"restBaseURL"
argument_list|,
name|restBaseURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The numeric score with value.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|scoreValue (Integer scoreValue)
specifier|default
name|FacebookEndpointProducerBuilder
name|scoreValue
parameter_list|(
name|Integer
name|scoreValue
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"scoreValue"
argument_list|,
name|scoreValue
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The numeric score with value.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|scoreValue (String scoreValue)
specifier|default
name|FacebookEndpointProducerBuilder
name|scoreValue
parameter_list|(
name|String
name|scoreValue
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"scoreValue"
argument_list|,
name|scoreValue
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture size, one of large, normal, small or square.          *           * The option is a:<code>facebook4j.PictureSize</code> type.          *           * Group: common          */
DECL|method|size (PictureSize size)
specifier|default
name|FacebookEndpointProducerBuilder
name|size
parameter_list|(
name|PictureSize
name|size
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"size"
argument_list|,
name|size
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture size, one of large, normal, small or square.          *           * The option will be converted to a<code>facebook4j.PictureSize</code>          * type.          *           * Group: common          */
DECL|method|size (String size)
specifier|default
name|FacebookEndpointProducerBuilder
name|size
parameter_list|(
name|String
name|size
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"size"
argument_list|,
name|size
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The media content from either a java.io.File or java.io.Inputstream.          *           * The option is a:<code>facebook4j.Media</code> type.          *           * Group: common          */
DECL|method|source (Object source)
specifier|default
name|FacebookEndpointProducerBuilder
name|source
parameter_list|(
name|Object
name|source
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"source"
argument_list|,
name|source
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The media content from either a java.io.File or java.io.Inputstream.          *           * The option will be converted to a<code>facebook4j.Media</code> type.          *           * Group: common          */
DECL|method|source (String source)
specifier|default
name|FacebookEndpointProducerBuilder
name|source
parameter_list|(
name|String
name|source
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"source"
argument_list|,
name|source
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The note of the subject.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|subject (String subject)
specifier|default
name|FacebookEndpointProducerBuilder
name|subject
parameter_list|(
name|String
name|subject
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"subject"
argument_list|,
name|subject
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The tab id.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|tabId (String tabId)
specifier|default
name|FacebookEndpointProducerBuilder
name|tabId
parameter_list|(
name|String
name|tabId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"tabId"
argument_list|,
name|tabId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Photo tag information.          *           * The option is a:<code>facebook4j.TagUpdate</code> type.          *           * Group: common          */
DECL|method|tagUpdate (Object tagUpdate)
specifier|default
name|FacebookEndpointProducerBuilder
name|tagUpdate
parameter_list|(
name|Object
name|tagUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"tagUpdate"
argument_list|,
name|tagUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Photo tag information.          *           * The option will be converted to a<code>facebook4j.TagUpdate</code>          * type.          *           * Group: common          */
DECL|method|tagUpdate (String tagUpdate)
specifier|default
name|FacebookEndpointProducerBuilder
name|tagUpdate
parameter_list|(
name|String
name|tagUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"tagUpdate"
argument_list|,
name|tagUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Test user 1.          *           * The option is a:<code>facebook4j.TestUser</code> type.          *           * Group: common          */
DECL|method|testUser1 (Object testUser1)
specifier|default
name|FacebookEndpointProducerBuilder
name|testUser1
parameter_list|(
name|Object
name|testUser1
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"testUser1"
argument_list|,
name|testUser1
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Test user 1.          *           * The option will be converted to a<code>facebook4j.TestUser</code>          * type.          *           * Group: common          */
DECL|method|testUser1 (String testUser1)
specifier|default
name|FacebookEndpointProducerBuilder
name|testUser1
parameter_list|(
name|String
name|testUser1
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"testUser1"
argument_list|,
name|testUser1
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Test user 2.          *           * The option is a:<code>facebook4j.TestUser</code> type.          *           * Group: common          */
DECL|method|testUser2 (Object testUser2)
specifier|default
name|FacebookEndpointProducerBuilder
name|testUser2
parameter_list|(
name|Object
name|testUser2
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"testUser2"
argument_list|,
name|testUser2
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Test user 2.          *           * The option will be converted to a<code>facebook4j.TestUser</code>          * type.          *           * Group: common          */
DECL|method|testUser2 (String testUser2)
specifier|default
name|FacebookEndpointProducerBuilder
name|testUser2
parameter_list|(
name|String
name|testUser2
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"testUser2"
argument_list|,
name|testUser2
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ID of the test user.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|testUserId (String testUserId)
specifier|default
name|FacebookEndpointProducerBuilder
name|testUserId
parameter_list|(
name|String
name|testUserId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"testUserId"
argument_list|,
name|testUserId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The title text.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|title (String title)
specifier|default
name|FacebookEndpointProducerBuilder
name|title
parameter_list|(
name|String
name|title
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"title"
argument_list|,
name|title
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ID of the user to tag.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|toUserId (String toUserId)
specifier|default
name|FacebookEndpointProducerBuilder
name|toUserId
parameter_list|(
name|String
name|toUserId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"toUserId"
argument_list|,
name|toUserId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The IDs of the users to tag.          *           * The option is a:<code>java.util.List&lt;java.lang.String&gt;</code>          * type.          *           * Group: common          */
DECL|method|toUserIds (List<String> toUserIds)
specifier|default
name|FacebookEndpointProducerBuilder
name|toUserIds
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|toUserIds
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"toUserIds"
argument_list|,
name|toUserIds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The IDs of the users to tag.          *           * The option will be converted to a          *<code>java.util.List&lt;java.lang.String&gt;</code> type.          *           * Group: common          */
DECL|method|toUserIds (String toUserIds)
specifier|default
name|FacebookEndpointProducerBuilder
name|toUserIds
parameter_list|(
name|String
name|toUserIds
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"toUserIds"
argument_list|,
name|toUserIds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Facebook user ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|userId (String userId)
specifier|default
name|FacebookEndpointProducerBuilder
name|userId
parameter_list|(
name|String
name|userId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"userId"
argument_list|,
name|userId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ID of a user 1.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|userId1 (String userId1)
specifier|default
name|FacebookEndpointProducerBuilder
name|userId1
parameter_list|(
name|String
name|userId1
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"userId1"
argument_list|,
name|userId1
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ID of a user 2.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|userId2 (String userId2)
specifier|default
name|FacebookEndpointProducerBuilder
name|userId2
parameter_list|(
name|String
name|userId2
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"userId2"
argument_list|,
name|userId2
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The IDs of users to invite to event.          *           * The option is a:<code>java.util.List&lt;java.lang.String&gt;</code>          * type.          *           * Group: common          */
DECL|method|userIds (List<String> userIds)
specifier|default
name|FacebookEndpointProducerBuilder
name|userIds
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|userIds
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"userIds"
argument_list|,
name|userIds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The IDs of users to invite to event.          *           * The option will be converted to a          *<code>java.util.List&lt;java.lang.String&gt;</code> type.          *           * Group: common          */
DECL|method|userIds (String userIds)
specifier|default
name|FacebookEndpointProducerBuilder
name|userIds
parameter_list|(
name|String
name|userIds
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"userIds"
argument_list|,
name|userIds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The test user locale.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|userLocale (String userLocale)
specifier|default
name|FacebookEndpointProducerBuilder
name|userLocale
parameter_list|(
name|String
name|userLocale
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"userLocale"
argument_list|,
name|userLocale
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Use SSL.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|useSSL (Boolean useSSL)
specifier|default
name|FacebookEndpointProducerBuilder
name|useSSL
parameter_list|(
name|Boolean
name|useSSL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"useSSL"
argument_list|,
name|useSSL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Use SSL.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|useSSL (String useSSL)
specifier|default
name|FacebookEndpointProducerBuilder
name|useSSL
parameter_list|(
name|String
name|useSSL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"useSSL"
argument_list|,
name|useSSL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Video API base URL.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|videoBaseURL (String videoBaseURL)
specifier|default
name|FacebookEndpointProducerBuilder
name|videoBaseURL
parameter_list|(
name|String
name|videoBaseURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"videoBaseURL"
argument_list|,
name|videoBaseURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The video ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|videoId (String videoId)
specifier|default
name|FacebookEndpointProducerBuilder
name|videoId
parameter_list|(
name|String
name|videoId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"videoId"
argument_list|,
name|videoId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the producer should be started lazy (on the first message).          * By starting lazy you can use this to allow CamelContext and routes to          * startup in situations where a producer may otherwise fail during          * starting and cause the route to fail being started. By deferring this          * startup to be lazy then the startup failure can be handled during          * routing messages via Camel's routing error handlers. Beware that when          * the first message is processed then creating and starting the          * producer may take a little time and prolong the total processing time          * of the processing.          *           * The option is a:<code>boolean</code> type.          *           * Group: producer          */
DECL|method|lazyStartProducer ( boolean lazyStartProducer)
specifier|default
name|FacebookEndpointProducerBuilder
name|lazyStartProducer
parameter_list|(
name|boolean
name|lazyStartProducer
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"lazyStartProducer"
argument_list|,
name|lazyStartProducer
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the producer should be started lazy (on the first message).          * By starting lazy you can use this to allow CamelContext and routes to          * startup in situations where a producer may otherwise fail during          * starting and cause the route to fail being started. By deferring this          * startup to be lazy then the startup failure can be handled during          * routing messages via Camel's routing error handlers. Beware that when          * the first message is processed then creating and starting the          * producer may take a little time and prolong the total processing time          * of the processing.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: producer          */
DECL|method|lazyStartProducer ( String lazyStartProducer)
specifier|default
name|FacebookEndpointProducerBuilder
name|lazyStartProducer
parameter_list|(
name|String
name|lazyStartProducer
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"lazyStartProducer"
argument_list|,
name|lazyStartProducer
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP proxy server host name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: proxy          */
DECL|method|httpProxyHost ( String httpProxyHost)
specifier|default
name|FacebookEndpointProducerBuilder
name|httpProxyHost
parameter_list|(
name|String
name|httpProxyHost
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpProxyHost"
argument_list|,
name|httpProxyHost
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP proxy server password.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: proxy          */
DECL|method|httpProxyPassword ( String httpProxyPassword)
specifier|default
name|FacebookEndpointProducerBuilder
name|httpProxyPassword
parameter_list|(
name|String
name|httpProxyPassword
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpProxyPassword"
argument_list|,
name|httpProxyPassword
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP proxy server port.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: proxy          */
DECL|method|httpProxyPort ( Integer httpProxyPort)
specifier|default
name|FacebookEndpointProducerBuilder
name|httpProxyPort
parameter_list|(
name|Integer
name|httpProxyPort
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpProxyPort"
argument_list|,
name|httpProxyPort
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP proxy server port.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: proxy          */
DECL|method|httpProxyPort ( String httpProxyPort)
specifier|default
name|FacebookEndpointProducerBuilder
name|httpProxyPort
parameter_list|(
name|String
name|httpProxyPort
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpProxyPort"
argument_list|,
name|httpProxyPort
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP proxy server user name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: proxy          */
DECL|method|httpProxyUser ( String httpProxyUser)
specifier|default
name|FacebookEndpointProducerBuilder
name|httpProxyUser
parameter_list|(
name|String
name|httpProxyUser
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpProxyUser"
argument_list|,
name|httpProxyUser
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The user access token.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oAuthAccessToken ( String oAuthAccessToken)
specifier|default
name|FacebookEndpointProducerBuilder
name|oAuthAccessToken
parameter_list|(
name|String
name|oAuthAccessToken
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oAuthAccessToken"
argument_list|,
name|oAuthAccessToken
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * OAuth access token URL.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oAuthAccessTokenURL ( String oAuthAccessTokenURL)
specifier|default
name|FacebookEndpointProducerBuilder
name|oAuthAccessTokenURL
parameter_list|(
name|String
name|oAuthAccessTokenURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oAuthAccessTokenURL"
argument_list|,
name|oAuthAccessTokenURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The application Id.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oAuthAppId (String oAuthAppId)
specifier|default
name|FacebookEndpointProducerBuilder
name|oAuthAppId
parameter_list|(
name|String
name|oAuthAppId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oAuthAppId"
argument_list|,
name|oAuthAppId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The application Secret.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oAuthAppSecret ( String oAuthAppSecret)
specifier|default
name|FacebookEndpointProducerBuilder
name|oAuthAppSecret
parameter_list|(
name|String
name|oAuthAppSecret
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oAuthAppSecret"
argument_list|,
name|oAuthAppSecret
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * OAuth authorization URL.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oAuthAuthorizationURL ( String oAuthAuthorizationURL)
specifier|default
name|FacebookEndpointProducerBuilder
name|oAuthAuthorizationURL
parameter_list|(
name|String
name|oAuthAuthorizationURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oAuthAuthorizationURL"
argument_list|,
name|oAuthAuthorizationURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Default OAuth permissions. Comma separated permission names. See          * https://developers.facebook.com/docs/reference/login/#permissions for          * the detail.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oAuthPermissions ( String oAuthPermissions)
specifier|default
name|FacebookEndpointProducerBuilder
name|oAuthPermissions
parameter_list|(
name|String
name|oAuthPermissions
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oAuthPermissions"
argument_list|,
name|oAuthPermissions
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint producers for the Facebook component.      */
DECL|interface|AdvancedFacebookEndpointProducerBuilder
specifier|public
interface|interface
name|AdvancedFacebookEndpointProducerBuilder
extends|extends
name|EndpointProducerBuilder
block|{
DECL|method|basic ()
specifier|default
name|FacebookEndpointProducerBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|FacebookEndpointProducerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedFacebookEndpointProducerBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedFacebookEndpointProducerBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( boolean synchronous)
specifier|default
name|AdvancedFacebookEndpointProducerBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( String synchronous)
specifier|default
name|AdvancedFacebookEndpointProducerBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Builder for endpoint for the Facebook component.      */
DECL|interface|FacebookEndpointBuilder
specifier|public
interface|interface
name|FacebookEndpointBuilder
extends|extends
name|FacebookEndpointConsumerBuilder
extends|,
name|FacebookEndpointProducerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedFacebookEndpointBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedFacebookEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * What operation to perform.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|methodName (String methodName)
specifier|default
name|FacebookEndpointBuilder
name|methodName
parameter_list|(
name|String
name|methodName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"methodName"
argument_list|,
name|methodName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The unique URL of the achievement.          *           * The option is a:<code>java.net.URL</code> type.          *           * Group: common          */
DECL|method|achievementURL (URL achievementURL)
specifier|default
name|FacebookEndpointBuilder
name|achievementURL
parameter_list|(
name|URL
name|achievementURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"achievementURL"
argument_list|,
name|achievementURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The unique URL of the achievement.          *           * The option will be converted to a<code>java.net.URL</code> type.          *           * Group: common          */
DECL|method|achievementURL (String achievementURL)
specifier|default
name|FacebookEndpointBuilder
name|achievementURL
parameter_list|(
name|String
name|achievementURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"achievementURL"
argument_list|,
name|achievementURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The album ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|albumId (String albumId)
specifier|default
name|FacebookEndpointBuilder
name|albumId
parameter_list|(
name|String
name|albumId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"albumId"
argument_list|,
name|albumId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The facebook Album to be created or updated.          *           * The option is a:<code>facebook4j.AlbumUpdate</code> type.          *           * Group: common          */
DECL|method|albumUpdate (Object albumUpdate)
specifier|default
name|FacebookEndpointBuilder
name|albumUpdate
parameter_list|(
name|Object
name|albumUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"albumUpdate"
argument_list|,
name|albumUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The facebook Album to be created or updated.          *           * The option will be converted to a<code>facebook4j.AlbumUpdate</code>          * type.          *           * Group: common          */
DECL|method|albumUpdate (String albumUpdate)
specifier|default
name|FacebookEndpointBuilder
name|albumUpdate
parameter_list|(
name|String
name|albumUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"albumUpdate"
argument_list|,
name|albumUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ID of the Facebook Application.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|appId (String appId)
specifier|default
name|FacebookEndpointBuilder
name|appId
parameter_list|(
name|String
name|appId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"appId"
argument_list|,
name|appId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Location latitude and longitude.          *           * The option is a:<code>facebook4j.GeoLocation</code> type.          *           * Group: common          */
DECL|method|center (Object center)
specifier|default
name|FacebookEndpointBuilder
name|center
parameter_list|(
name|Object
name|center
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"center"
argument_list|,
name|center
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Location latitude and longitude.          *           * The option will be converted to a<code>facebook4j.GeoLocation</code>          * type.          *           * Group: common          */
DECL|method|center (String center)
specifier|default
name|FacebookEndpointBuilder
name|center
parameter_list|(
name|String
name|center
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"center"
argument_list|,
name|center
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The checkin ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|checkinId (String checkinId)
specifier|default
name|FacebookEndpointBuilder
name|checkinId
parameter_list|(
name|String
name|checkinId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"checkinId"
argument_list|,
name|checkinId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The checkin to be created. Deprecated, instead create a Post with an          * attached location.          *           * The option is a:<code>facebook4j.CheckinUpdate</code> type.          *           * Group: common          */
annotation|@
name|Deprecated
DECL|method|checkinUpdate (Object checkinUpdate)
specifier|default
name|FacebookEndpointBuilder
name|checkinUpdate
parameter_list|(
name|Object
name|checkinUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"checkinUpdate"
argument_list|,
name|checkinUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The checkin to be created. Deprecated, instead create a Post with an          * attached location.          *           * The option will be converted to a          *<code>facebook4j.CheckinUpdate</code> type.          *           * Group: common          */
annotation|@
name|Deprecated
DECL|method|checkinUpdate (String checkinUpdate)
specifier|default
name|FacebookEndpointBuilder
name|checkinUpdate
parameter_list|(
name|String
name|checkinUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"checkinUpdate"
argument_list|,
name|checkinUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Facebook4J API client URL.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|clientURL (String clientURL)
specifier|default
name|FacebookEndpointBuilder
name|clientURL
parameter_list|(
name|String
name|clientURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"clientURL"
argument_list|,
name|clientURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Facebook4J client API version.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|clientVersion (String clientVersion)
specifier|default
name|FacebookEndpointBuilder
name|clientVersion
parameter_list|(
name|String
name|clientVersion
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"clientVersion"
argument_list|,
name|clientVersion
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The comment ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|commentId (String commentId)
specifier|default
name|FacebookEndpointBuilder
name|commentId
parameter_list|(
name|String
name|commentId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"commentId"
argument_list|,
name|commentId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The facebook Comment to be created or updated.          *           * The option is a:<code>facebook4j.CommentUpdate</code> type.          *           * Group: common          */
DECL|method|commentUpdate (Object commentUpdate)
specifier|default
name|FacebookEndpointBuilder
name|commentUpdate
parameter_list|(
name|Object
name|commentUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"commentUpdate"
argument_list|,
name|commentUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The facebook Comment to be created or updated.          *           * The option will be converted to a          *<code>facebook4j.CommentUpdate</code> type.          *           * Group: common          */
DECL|method|commentUpdate (String commentUpdate)
specifier|default
name|FacebookEndpointBuilder
name|commentUpdate
parameter_list|(
name|String
name|commentUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"commentUpdate"
argument_list|,
name|commentUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Enables deubg output. Effective only with the embedded logger.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|debugEnabled (Boolean debugEnabled)
specifier|default
name|FacebookEndpointBuilder
name|debugEnabled
parameter_list|(
name|Boolean
name|debugEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"debugEnabled"
argument_list|,
name|debugEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Enables deubg output. Effective only with the embedded logger.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|debugEnabled (String debugEnabled)
specifier|default
name|FacebookEndpointBuilder
name|debugEnabled
parameter_list|(
name|String
name|debugEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"debugEnabled"
argument_list|,
name|debugEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The description text.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|description (String description)
specifier|default
name|FacebookEndpointBuilder
name|description
parameter_list|(
name|String
name|description
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"description"
argument_list|,
name|description
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Distance in meters.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|distance (Integer distance)
specifier|default
name|FacebookEndpointBuilder
name|distance
parameter_list|(
name|Integer
name|distance
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"distance"
argument_list|,
name|distance
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Distance in meters.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|distance (String distance)
specifier|default
name|FacebookEndpointBuilder
name|distance
parameter_list|(
name|String
name|distance
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"distance"
argument_list|,
name|distance
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The domain ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|domainId (String domainId)
specifier|default
name|FacebookEndpointBuilder
name|domainId
parameter_list|(
name|String
name|domainId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"domainId"
argument_list|,
name|domainId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The domain name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|domainName (String domainName)
specifier|default
name|FacebookEndpointBuilder
name|domainName
parameter_list|(
name|String
name|domainName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"domainName"
argument_list|,
name|domainName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The domain names.          *           * The option is a:<code>java.util.List&lt;java.lang.String&gt;</code>          * type.          *           * Group: common          */
DECL|method|domainNames (List<String> domainNames)
specifier|default
name|FacebookEndpointBuilder
name|domainNames
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|domainNames
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"domainNames"
argument_list|,
name|domainNames
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The domain names.          *           * The option will be converted to a          *<code>java.util.List&lt;java.lang.String&gt;</code> type.          *           * Group: common          */
DECL|method|domainNames (String domainNames)
specifier|default
name|FacebookEndpointBuilder
name|domainNames
parameter_list|(
name|String
name|domainNames
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"domainNames"
argument_list|,
name|domainNames
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The event ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|eventId (String eventId)
specifier|default
name|FacebookEndpointBuilder
name|eventId
parameter_list|(
name|String
name|eventId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"eventId"
argument_list|,
name|eventId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The event to be created or updated.          *           * The option is a:<code>facebook4j.EventUpdate</code> type.          *           * Group: common          */
DECL|method|eventUpdate (Object eventUpdate)
specifier|default
name|FacebookEndpointBuilder
name|eventUpdate
parameter_list|(
name|Object
name|eventUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"eventUpdate"
argument_list|,
name|eventUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The event to be created or updated.          *           * The option will be converted to a<code>facebook4j.EventUpdate</code>          * type.          *           * Group: common          */
DECL|method|eventUpdate (String eventUpdate)
specifier|default
name|FacebookEndpointBuilder
name|eventUpdate
parameter_list|(
name|String
name|eventUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"eventUpdate"
argument_list|,
name|eventUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The friend ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|friendId (String friendId)
specifier|default
name|FacebookEndpointBuilder
name|friendId
parameter_list|(
name|String
name|friendId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"friendId"
argument_list|,
name|friendId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The friend list ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|friendlistId (String friendlistId)
specifier|default
name|FacebookEndpointBuilder
name|friendlistId
parameter_list|(
name|String
name|friendlistId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"friendlistId"
argument_list|,
name|friendlistId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The friend list Name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|friendlistName (String friendlistName)
specifier|default
name|FacebookEndpointBuilder
name|friendlistName
parameter_list|(
name|String
name|friendlistName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"friendlistName"
argument_list|,
name|friendlistName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The friend user ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|friendUserId (String friendUserId)
specifier|default
name|FacebookEndpointBuilder
name|friendUserId
parameter_list|(
name|String
name|friendUserId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"friendUserId"
argument_list|,
name|friendUserId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The group ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|groupId (String groupId)
specifier|default
name|FacebookEndpointBuilder
name|groupId
parameter_list|(
name|String
name|groupId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"groupId"
argument_list|,
name|groupId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Use Facebook GZIP encoding.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|gzipEnabled (Boolean gzipEnabled)
specifier|default
name|FacebookEndpointBuilder
name|gzipEnabled
parameter_list|(
name|Boolean
name|gzipEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"gzipEnabled"
argument_list|,
name|gzipEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Use Facebook GZIP encoding.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|gzipEnabled (String gzipEnabled)
specifier|default
name|FacebookEndpointBuilder
name|gzipEnabled
parameter_list|(
name|String
name|gzipEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"gzipEnabled"
argument_list|,
name|gzipEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Http connection timeout in milliseconds.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpConnectionTimeout ( Integer httpConnectionTimeout)
specifier|default
name|FacebookEndpointBuilder
name|httpConnectionTimeout
parameter_list|(
name|Integer
name|httpConnectionTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpConnectionTimeout"
argument_list|,
name|httpConnectionTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Http connection timeout in milliseconds.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpConnectionTimeout ( String httpConnectionTimeout)
specifier|default
name|FacebookEndpointBuilder
name|httpConnectionTimeout
parameter_list|(
name|String
name|httpConnectionTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpConnectionTimeout"
argument_list|,
name|httpConnectionTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP maximum connections per route.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpDefaultMaxPerRoute ( Integer httpDefaultMaxPerRoute)
specifier|default
name|FacebookEndpointBuilder
name|httpDefaultMaxPerRoute
parameter_list|(
name|Integer
name|httpDefaultMaxPerRoute
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpDefaultMaxPerRoute"
argument_list|,
name|httpDefaultMaxPerRoute
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP maximum connections per route.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpDefaultMaxPerRoute ( String httpDefaultMaxPerRoute)
specifier|default
name|FacebookEndpointBuilder
name|httpDefaultMaxPerRoute
parameter_list|(
name|String
name|httpDefaultMaxPerRoute
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpDefaultMaxPerRoute"
argument_list|,
name|httpDefaultMaxPerRoute
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP maximum total connections.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpMaxTotalConnections ( Integer httpMaxTotalConnections)
specifier|default
name|FacebookEndpointBuilder
name|httpMaxTotalConnections
parameter_list|(
name|Integer
name|httpMaxTotalConnections
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpMaxTotalConnections"
argument_list|,
name|httpMaxTotalConnections
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP maximum total connections.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpMaxTotalConnections ( String httpMaxTotalConnections)
specifier|default
name|FacebookEndpointBuilder
name|httpMaxTotalConnections
parameter_list|(
name|String
name|httpMaxTotalConnections
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpMaxTotalConnections"
argument_list|,
name|httpMaxTotalConnections
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Http read timeout in milliseconds.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpReadTimeout (Integer httpReadTimeout)
specifier|default
name|FacebookEndpointBuilder
name|httpReadTimeout
parameter_list|(
name|Integer
name|httpReadTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpReadTimeout"
argument_list|,
name|httpReadTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Http read timeout in milliseconds.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpReadTimeout (String httpReadTimeout)
specifier|default
name|FacebookEndpointBuilder
name|httpReadTimeout
parameter_list|(
name|String
name|httpReadTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpReadTimeout"
argument_list|,
name|httpReadTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Number of HTTP retries.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpRetryCount (Integer httpRetryCount)
specifier|default
name|FacebookEndpointBuilder
name|httpRetryCount
parameter_list|(
name|Integer
name|httpRetryCount
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpRetryCount"
argument_list|,
name|httpRetryCount
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Number of HTTP retries.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpRetryCount (String httpRetryCount)
specifier|default
name|FacebookEndpointBuilder
name|httpRetryCount
parameter_list|(
name|String
name|httpRetryCount
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpRetryCount"
argument_list|,
name|httpRetryCount
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP retry interval in seconds.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpRetryIntervalSeconds ( Integer httpRetryIntervalSeconds)
specifier|default
name|FacebookEndpointBuilder
name|httpRetryIntervalSeconds
parameter_list|(
name|Integer
name|httpRetryIntervalSeconds
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpRetryIntervalSeconds"
argument_list|,
name|httpRetryIntervalSeconds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP retry interval in seconds.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpRetryIntervalSeconds ( String httpRetryIntervalSeconds)
specifier|default
name|FacebookEndpointBuilder
name|httpRetryIntervalSeconds
parameter_list|(
name|String
name|httpRetryIntervalSeconds
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpRetryIntervalSeconds"
argument_list|,
name|httpRetryIntervalSeconds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP streaming read timeout in milliseconds.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|httpStreamingReadTimeout ( Integer httpStreamingReadTimeout)
specifier|default
name|FacebookEndpointBuilder
name|httpStreamingReadTimeout
parameter_list|(
name|Integer
name|httpStreamingReadTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpStreamingReadTimeout"
argument_list|,
name|httpStreamingReadTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP streaming read timeout in milliseconds.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|httpStreamingReadTimeout ( String httpStreamingReadTimeout)
specifier|default
name|FacebookEndpointBuilder
name|httpStreamingReadTimeout
parameter_list|(
name|String
name|httpStreamingReadTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpStreamingReadTimeout"
argument_list|,
name|httpStreamingReadTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ids of users.          *           * The option is a:<code>java.util.List&lt;java.lang.String&gt;</code>          * type.          *           * Group: common          */
DECL|method|ids (List<String> ids)
specifier|default
name|FacebookEndpointBuilder
name|ids
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|ids
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"ids"
argument_list|,
name|ids
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ids of users.          *           * The option will be converted to a          *<code>java.util.List&lt;java.lang.String&gt;</code> type.          *           * Group: common          */
DECL|method|ids (String ids)
specifier|default
name|FacebookEndpointBuilder
name|ids
parameter_list|(
name|String
name|ids
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"ids"
argument_list|,
name|ids
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets the name of a parameter to be passed in the exchange In Body.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|inBody (String inBody)
specifier|default
name|FacebookEndpointBuilder
name|inBody
parameter_list|(
name|String
name|inBody
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"inBody"
argument_list|,
name|inBody
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Enables notifications that the user has already read in addition to          * unread ones.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|includeRead (Boolean includeRead)
specifier|default
name|FacebookEndpointBuilder
name|includeRead
parameter_list|(
name|Boolean
name|includeRead
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"includeRead"
argument_list|,
name|includeRead
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Enables notifications that the user has already read in addition to          * unread ones.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|includeRead (String includeRead)
specifier|default
name|FacebookEndpointBuilder
name|includeRead
parameter_list|(
name|String
name|includeRead
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"includeRead"
argument_list|,
name|includeRead
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether hidden.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|isHidden (Boolean isHidden)
specifier|default
name|FacebookEndpointBuilder
name|isHidden
parameter_list|(
name|Boolean
name|isHidden
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"isHidden"
argument_list|,
name|isHidden
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether hidden.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|isHidden (String isHidden)
specifier|default
name|FacebookEndpointBuilder
name|isHidden
parameter_list|(
name|String
name|isHidden
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"isHidden"
argument_list|,
name|isHidden
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * If set to true, raw JSON forms will be stored in DataObjectFactory.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|jsonStoreEnabled ( Boolean jsonStoreEnabled)
specifier|default
name|FacebookEndpointBuilder
name|jsonStoreEnabled
parameter_list|(
name|Boolean
name|jsonStoreEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"jsonStoreEnabled"
argument_list|,
name|jsonStoreEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * If set to true, raw JSON forms will be stored in DataObjectFactory.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|jsonStoreEnabled (String jsonStoreEnabled)
specifier|default
name|FacebookEndpointBuilder
name|jsonStoreEnabled
parameter_list|(
name|String
name|jsonStoreEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"jsonStoreEnabled"
argument_list|,
name|jsonStoreEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Link URL.          *           * The option is a:<code>java.net.URL</code> type.          *           * Group: common          */
DECL|method|link (URL link)
specifier|default
name|FacebookEndpointBuilder
name|link
parameter_list|(
name|URL
name|link
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"link"
argument_list|,
name|link
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Link URL.          *           * The option will be converted to a<code>java.net.URL</code> type.          *           * Group: common          */
DECL|method|link (String link)
specifier|default
name|FacebookEndpointBuilder
name|link
parameter_list|(
name|String
name|link
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"link"
argument_list|,
name|link
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Link ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|linkId (String linkId)
specifier|default
name|FacebookEndpointBuilder
name|linkId
parameter_list|(
name|String
name|linkId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"linkId"
argument_list|,
name|linkId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Desired FQL locale.          *           * The option is a:<code>java.util.Locale</code> type.          *           * Group: common          */
DECL|method|locale (Locale locale)
specifier|default
name|FacebookEndpointBuilder
name|locale
parameter_list|(
name|Locale
name|locale
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"locale"
argument_list|,
name|locale
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Desired FQL locale.          *           * The option will be converted to a<code>java.util.Locale</code> type.          *           * Group: common          */
DECL|method|locale (String locale)
specifier|default
name|FacebookEndpointBuilder
name|locale
parameter_list|(
name|String
name|locale
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"locale"
argument_list|,
name|locale
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * If set to true, Facebook4J mbean will be registerd.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|mbeanEnabled (Boolean mbeanEnabled)
specifier|default
name|FacebookEndpointBuilder
name|mbeanEnabled
parameter_list|(
name|Boolean
name|mbeanEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"mbeanEnabled"
argument_list|,
name|mbeanEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * If set to true, Facebook4J mbean will be registerd.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|mbeanEnabled (String mbeanEnabled)
specifier|default
name|FacebookEndpointBuilder
name|mbeanEnabled
parameter_list|(
name|String
name|mbeanEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"mbeanEnabled"
argument_list|,
name|mbeanEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The message text.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|message (String message)
specifier|default
name|FacebookEndpointBuilder
name|message
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"message"
argument_list|,
name|message
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The message ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|messageId (String messageId)
specifier|default
name|FacebookEndpointBuilder
name|messageId
parameter_list|(
name|String
name|messageId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"messageId"
argument_list|,
name|messageId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The metric name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|metric (String metric)
specifier|default
name|FacebookEndpointBuilder
name|metric
parameter_list|(
name|String
name|metric
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"metric"
argument_list|,
name|metric
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The milestone id.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|milestoneId (String milestoneId)
specifier|default
name|FacebookEndpointBuilder
name|milestoneId
parameter_list|(
name|String
name|milestoneId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"milestoneId"
argument_list|,
name|milestoneId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Test user name, must be of the form 'first last'.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|name (String name)
specifier|default
name|FacebookEndpointBuilder
name|name
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"name"
argument_list|,
name|name
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The note ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|noteId (String noteId)
specifier|default
name|FacebookEndpointBuilder
name|noteId
parameter_list|(
name|String
name|noteId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"noteId"
argument_list|,
name|noteId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The notification ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|notificationId (String notificationId)
specifier|default
name|FacebookEndpointBuilder
name|notificationId
parameter_list|(
name|String
name|notificationId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"notificationId"
argument_list|,
name|notificationId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The insight object ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|objectId (String objectId)
specifier|default
name|FacebookEndpointBuilder
name|objectId
parameter_list|(
name|String
name|objectId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"objectId"
argument_list|,
name|objectId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The offer id.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|offerId (String offerId)
specifier|default
name|FacebookEndpointBuilder
name|offerId
parameter_list|(
name|String
name|offerId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"offerId"
argument_list|,
name|offerId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The question's answer option description.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|optionDescription ( String optionDescription)
specifier|default
name|FacebookEndpointBuilder
name|optionDescription
parameter_list|(
name|String
name|optionDescription
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"optionDescription"
argument_list|,
name|optionDescription
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The page id.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|pageId (String pageId)
specifier|default
name|FacebookEndpointBuilder
name|pageId
parameter_list|(
name|String
name|pageId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pageId"
argument_list|,
name|pageId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The permission name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|permissionName (String permissionName)
specifier|default
name|FacebookEndpointBuilder
name|permissionName
parameter_list|(
name|String
name|permissionName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"permissionName"
argument_list|,
name|permissionName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Test user permissions in the format perm1,perm2,...          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|permissions (String permissions)
specifier|default
name|FacebookEndpointBuilder
name|permissions
parameter_list|(
name|String
name|permissions
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"permissions"
argument_list|,
name|permissions
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The photo ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|photoId (String photoId)
specifier|default
name|FacebookEndpointBuilder
name|photoId
parameter_list|(
name|String
name|photoId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"photoId"
argument_list|,
name|photoId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture id.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|pictureId (Integer pictureId)
specifier|default
name|FacebookEndpointBuilder
name|pictureId
parameter_list|(
name|Integer
name|pictureId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pictureId"
argument_list|,
name|pictureId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture id.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|pictureId (String pictureId)
specifier|default
name|FacebookEndpointBuilder
name|pictureId
parameter_list|(
name|String
name|pictureId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pictureId"
argument_list|,
name|pictureId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture2 id.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|pictureId2 (Integer pictureId2)
specifier|default
name|FacebookEndpointBuilder
name|pictureId2
parameter_list|(
name|Integer
name|pictureId2
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pictureId2"
argument_list|,
name|pictureId2
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture2 id.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|pictureId2 (String pictureId2)
specifier|default
name|FacebookEndpointBuilder
name|pictureId2
parameter_list|(
name|String
name|pictureId2
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pictureId2"
argument_list|,
name|pictureId2
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture size.          *           * The option is a:<code>facebook4j.PictureSize</code> type.          *           * Group: common          */
DECL|method|pictureSize (PictureSize pictureSize)
specifier|default
name|FacebookEndpointBuilder
name|pictureSize
parameter_list|(
name|PictureSize
name|pictureSize
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pictureSize"
argument_list|,
name|pictureSize
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture size.          *           * The option will be converted to a<code>facebook4j.PictureSize</code>          * type.          *           * Group: common          */
DECL|method|pictureSize (String pictureSize)
specifier|default
name|FacebookEndpointBuilder
name|pictureSize
parameter_list|(
name|String
name|pictureSize
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"pictureSize"
argument_list|,
name|pictureSize
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The place ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|placeId (String placeId)
specifier|default
name|FacebookEndpointBuilder
name|placeId
parameter_list|(
name|String
name|placeId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"placeId"
argument_list|,
name|placeId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The post ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|postId (String postId)
specifier|default
name|FacebookEndpointBuilder
name|postId
parameter_list|(
name|String
name|postId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"postId"
argument_list|,
name|postId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The post to create or update.          *           * The option is a:<code>facebook4j.PostUpdate</code> type.          *           * Group: common          */
DECL|method|postUpdate (Object postUpdate)
specifier|default
name|FacebookEndpointBuilder
name|postUpdate
parameter_list|(
name|Object
name|postUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"postUpdate"
argument_list|,
name|postUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The post to create or update.          *           * The option will be converted to a<code>facebook4j.PostUpdate</code>          * type.          *           * Group: common          */
DECL|method|postUpdate (String postUpdate)
specifier|default
name|FacebookEndpointBuilder
name|postUpdate
parameter_list|(
name|String
name|postUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"postUpdate"
argument_list|,
name|postUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Prettify JSON debug output if set to true.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|prettyDebugEnabled ( Boolean prettyDebugEnabled)
specifier|default
name|FacebookEndpointBuilder
name|prettyDebugEnabled
parameter_list|(
name|Boolean
name|prettyDebugEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"prettyDebugEnabled"
argument_list|,
name|prettyDebugEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Prettify JSON debug output if set to true.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|prettyDebugEnabled ( String prettyDebugEnabled)
specifier|default
name|FacebookEndpointBuilder
name|prettyDebugEnabled
parameter_list|(
name|String
name|prettyDebugEnabled
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"prettyDebugEnabled"
argument_list|,
name|prettyDebugEnabled
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * FQL queries.          *           * The option is a:<code>java.util.Map&lt;java.lang.String,          * java.lang.String&gt;</code> type.          *           * Group: common          */
DECL|method|queries (Map<String, String> queries)
specifier|default
name|FacebookEndpointBuilder
name|queries
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|queries
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"queries"
argument_list|,
name|queries
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * FQL queries.          *           * The option will be converted to a          *<code>java.util.Map&lt;java.lang.String, java.lang.String&gt;</code>          * type.          *           * Group: common          */
DECL|method|queries (String queries)
specifier|default
name|FacebookEndpointBuilder
name|queries
parameter_list|(
name|String
name|queries
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"queries"
argument_list|,
name|queries
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * FQL query or search terms for search endpoints.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|query (String query)
specifier|default
name|FacebookEndpointBuilder
name|query
parameter_list|(
name|String
name|query
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"query"
argument_list|,
name|query
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The question id.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|questionId (String questionId)
specifier|default
name|FacebookEndpointBuilder
name|questionId
parameter_list|(
name|String
name|questionId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"questionId"
argument_list|,
name|questionId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Optional reading parameters. See Reading Options(#reading).          *           * The option is a:<code>facebook4j.Reading</code> type.          *           * Group: common          */
DECL|method|reading (Object reading)
specifier|default
name|FacebookEndpointBuilder
name|reading
parameter_list|(
name|Object
name|reading
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"reading"
argument_list|,
name|reading
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Optional reading parameters. See Reading Options(#reading).          *           * The option will be converted to a<code>facebook4j.Reading</code>          * type.          *           * Group: common          */
DECL|method|reading (String reading)
specifier|default
name|FacebookEndpointBuilder
name|reading
parameter_list|(
name|String
name|reading
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"reading"
argument_list|,
name|reading
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To configure Reading using key/value pairs from the Map.          *           * The option is a:<code>java.util.Map&lt;java.lang.String,          * java.lang.Object&gt;</code> type.          *           * Group: common          */
DECL|method|readingOptions ( Map<String, Object> readingOptions)
specifier|default
name|FacebookEndpointBuilder
name|readingOptions
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|readingOptions
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"readingOptions"
argument_list|,
name|readingOptions
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To configure Reading using key/value pairs from the Map.          *           * The option will be converted to a          *<code>java.util.Map&lt;java.lang.String, java.lang.Object&gt;</code>          * type.          *           * Group: common          */
DECL|method|readingOptions (String readingOptions)
specifier|default
name|FacebookEndpointBuilder
name|readingOptions
parameter_list|(
name|String
name|readingOptions
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"readingOptions"
argument_list|,
name|readingOptions
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * API base URL.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|restBaseURL (String restBaseURL)
specifier|default
name|FacebookEndpointBuilder
name|restBaseURL
parameter_list|(
name|String
name|restBaseURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"restBaseURL"
argument_list|,
name|restBaseURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The numeric score with value.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|scoreValue (Integer scoreValue)
specifier|default
name|FacebookEndpointBuilder
name|scoreValue
parameter_list|(
name|Integer
name|scoreValue
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"scoreValue"
argument_list|,
name|scoreValue
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The numeric score with value.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|scoreValue (String scoreValue)
specifier|default
name|FacebookEndpointBuilder
name|scoreValue
parameter_list|(
name|String
name|scoreValue
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"scoreValue"
argument_list|,
name|scoreValue
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture size, one of large, normal, small or square.          *           * The option is a:<code>facebook4j.PictureSize</code> type.          *           * Group: common          */
DECL|method|size (PictureSize size)
specifier|default
name|FacebookEndpointBuilder
name|size
parameter_list|(
name|PictureSize
name|size
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"size"
argument_list|,
name|size
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The picture size, one of large, normal, small or square.          *           * The option will be converted to a<code>facebook4j.PictureSize</code>          * type.          *           * Group: common          */
DECL|method|size (String size)
specifier|default
name|FacebookEndpointBuilder
name|size
parameter_list|(
name|String
name|size
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"size"
argument_list|,
name|size
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The media content from either a java.io.File or java.io.Inputstream.          *           * The option is a:<code>facebook4j.Media</code> type.          *           * Group: common          */
DECL|method|source (Object source)
specifier|default
name|FacebookEndpointBuilder
name|source
parameter_list|(
name|Object
name|source
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"source"
argument_list|,
name|source
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The media content from either a java.io.File or java.io.Inputstream.          *           * The option will be converted to a<code>facebook4j.Media</code> type.          *           * Group: common          */
DECL|method|source (String source)
specifier|default
name|FacebookEndpointBuilder
name|source
parameter_list|(
name|String
name|source
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"source"
argument_list|,
name|source
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The note of the subject.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|subject (String subject)
specifier|default
name|FacebookEndpointBuilder
name|subject
parameter_list|(
name|String
name|subject
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"subject"
argument_list|,
name|subject
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The tab id.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|tabId (String tabId)
specifier|default
name|FacebookEndpointBuilder
name|tabId
parameter_list|(
name|String
name|tabId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"tabId"
argument_list|,
name|tabId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Photo tag information.          *           * The option is a:<code>facebook4j.TagUpdate</code> type.          *           * Group: common          */
DECL|method|tagUpdate (Object tagUpdate)
specifier|default
name|FacebookEndpointBuilder
name|tagUpdate
parameter_list|(
name|Object
name|tagUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"tagUpdate"
argument_list|,
name|tagUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Photo tag information.          *           * The option will be converted to a<code>facebook4j.TagUpdate</code>          * type.          *           * Group: common          */
DECL|method|tagUpdate (String tagUpdate)
specifier|default
name|FacebookEndpointBuilder
name|tagUpdate
parameter_list|(
name|String
name|tagUpdate
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"tagUpdate"
argument_list|,
name|tagUpdate
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Test user 1.          *           * The option is a:<code>facebook4j.TestUser</code> type.          *           * Group: common          */
DECL|method|testUser1 (Object testUser1)
specifier|default
name|FacebookEndpointBuilder
name|testUser1
parameter_list|(
name|Object
name|testUser1
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"testUser1"
argument_list|,
name|testUser1
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Test user 1.          *           * The option will be converted to a<code>facebook4j.TestUser</code>          * type.          *           * Group: common          */
DECL|method|testUser1 (String testUser1)
specifier|default
name|FacebookEndpointBuilder
name|testUser1
parameter_list|(
name|String
name|testUser1
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"testUser1"
argument_list|,
name|testUser1
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Test user 2.          *           * The option is a:<code>facebook4j.TestUser</code> type.          *           * Group: common          */
DECL|method|testUser2 (Object testUser2)
specifier|default
name|FacebookEndpointBuilder
name|testUser2
parameter_list|(
name|Object
name|testUser2
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"testUser2"
argument_list|,
name|testUser2
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Test user 2.          *           * The option will be converted to a<code>facebook4j.TestUser</code>          * type.          *           * Group: common          */
DECL|method|testUser2 (String testUser2)
specifier|default
name|FacebookEndpointBuilder
name|testUser2
parameter_list|(
name|String
name|testUser2
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"testUser2"
argument_list|,
name|testUser2
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ID of the test user.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|testUserId (String testUserId)
specifier|default
name|FacebookEndpointBuilder
name|testUserId
parameter_list|(
name|String
name|testUserId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"testUserId"
argument_list|,
name|testUserId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The title text.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|title (String title)
specifier|default
name|FacebookEndpointBuilder
name|title
parameter_list|(
name|String
name|title
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"title"
argument_list|,
name|title
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ID of the user to tag.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|toUserId (String toUserId)
specifier|default
name|FacebookEndpointBuilder
name|toUserId
parameter_list|(
name|String
name|toUserId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"toUserId"
argument_list|,
name|toUserId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The IDs of the users to tag.          *           * The option is a:<code>java.util.List&lt;java.lang.String&gt;</code>          * type.          *           * Group: common          */
DECL|method|toUserIds (List<String> toUserIds)
specifier|default
name|FacebookEndpointBuilder
name|toUserIds
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|toUserIds
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"toUserIds"
argument_list|,
name|toUserIds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The IDs of the users to tag.          *           * The option will be converted to a          *<code>java.util.List&lt;java.lang.String&gt;</code> type.          *           * Group: common          */
DECL|method|toUserIds (String toUserIds)
specifier|default
name|FacebookEndpointBuilder
name|toUserIds
parameter_list|(
name|String
name|toUserIds
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"toUserIds"
argument_list|,
name|toUserIds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Facebook user ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|userId (String userId)
specifier|default
name|FacebookEndpointBuilder
name|userId
parameter_list|(
name|String
name|userId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"userId"
argument_list|,
name|userId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ID of a user 1.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|userId1 (String userId1)
specifier|default
name|FacebookEndpointBuilder
name|userId1
parameter_list|(
name|String
name|userId1
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"userId1"
argument_list|,
name|userId1
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ID of a user 2.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|userId2 (String userId2)
specifier|default
name|FacebookEndpointBuilder
name|userId2
parameter_list|(
name|String
name|userId2
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"userId2"
argument_list|,
name|userId2
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The IDs of users to invite to event.          *           * The option is a:<code>java.util.List&lt;java.lang.String&gt;</code>          * type.          *           * Group: common          */
DECL|method|userIds (List<String> userIds)
specifier|default
name|FacebookEndpointBuilder
name|userIds
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|userIds
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"userIds"
argument_list|,
name|userIds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The IDs of users to invite to event.          *           * The option will be converted to a          *<code>java.util.List&lt;java.lang.String&gt;</code> type.          *           * Group: common          */
DECL|method|userIds (String userIds)
specifier|default
name|FacebookEndpointBuilder
name|userIds
parameter_list|(
name|String
name|userIds
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"userIds"
argument_list|,
name|userIds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The test user locale.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|userLocale (String userLocale)
specifier|default
name|FacebookEndpointBuilder
name|userLocale
parameter_list|(
name|String
name|userLocale
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"userLocale"
argument_list|,
name|userLocale
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Use SSL.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: common          */
DECL|method|useSSL (Boolean useSSL)
specifier|default
name|FacebookEndpointBuilder
name|useSSL
parameter_list|(
name|Boolean
name|useSSL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"useSSL"
argument_list|,
name|useSSL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Use SSL.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: common          */
DECL|method|useSSL (String useSSL)
specifier|default
name|FacebookEndpointBuilder
name|useSSL
parameter_list|(
name|String
name|useSSL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"useSSL"
argument_list|,
name|useSSL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Video API base URL.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|videoBaseURL (String videoBaseURL)
specifier|default
name|FacebookEndpointBuilder
name|videoBaseURL
parameter_list|(
name|String
name|videoBaseURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"videoBaseURL"
argument_list|,
name|videoBaseURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The video ID.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|videoId (String videoId)
specifier|default
name|FacebookEndpointBuilder
name|videoId
parameter_list|(
name|String
name|videoId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"videoId"
argument_list|,
name|videoId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP proxy server host name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: proxy          */
DECL|method|httpProxyHost (String httpProxyHost)
specifier|default
name|FacebookEndpointBuilder
name|httpProxyHost
parameter_list|(
name|String
name|httpProxyHost
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpProxyHost"
argument_list|,
name|httpProxyHost
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP proxy server password.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: proxy          */
DECL|method|httpProxyPassword ( String httpProxyPassword)
specifier|default
name|FacebookEndpointBuilder
name|httpProxyPassword
parameter_list|(
name|String
name|httpProxyPassword
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpProxyPassword"
argument_list|,
name|httpProxyPassword
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP proxy server port.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: proxy          */
DECL|method|httpProxyPort (Integer httpProxyPort)
specifier|default
name|FacebookEndpointBuilder
name|httpProxyPort
parameter_list|(
name|Integer
name|httpProxyPort
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpProxyPort"
argument_list|,
name|httpProxyPort
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP proxy server port.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: proxy          */
DECL|method|httpProxyPort (String httpProxyPort)
specifier|default
name|FacebookEndpointBuilder
name|httpProxyPort
parameter_list|(
name|String
name|httpProxyPort
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpProxyPort"
argument_list|,
name|httpProxyPort
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * HTTP proxy server user name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: proxy          */
DECL|method|httpProxyUser (String httpProxyUser)
specifier|default
name|FacebookEndpointBuilder
name|httpProxyUser
parameter_list|(
name|String
name|httpProxyUser
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpProxyUser"
argument_list|,
name|httpProxyUser
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The user access token.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oAuthAccessToken (String oAuthAccessToken)
specifier|default
name|FacebookEndpointBuilder
name|oAuthAccessToken
parameter_list|(
name|String
name|oAuthAccessToken
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oAuthAccessToken"
argument_list|,
name|oAuthAccessToken
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * OAuth access token URL.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oAuthAccessTokenURL ( String oAuthAccessTokenURL)
specifier|default
name|FacebookEndpointBuilder
name|oAuthAccessTokenURL
parameter_list|(
name|String
name|oAuthAccessTokenURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oAuthAccessTokenURL"
argument_list|,
name|oAuthAccessTokenURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The application Id.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oAuthAppId (String oAuthAppId)
specifier|default
name|FacebookEndpointBuilder
name|oAuthAppId
parameter_list|(
name|String
name|oAuthAppId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oAuthAppId"
argument_list|,
name|oAuthAppId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The application Secret.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oAuthAppSecret (String oAuthAppSecret)
specifier|default
name|FacebookEndpointBuilder
name|oAuthAppSecret
parameter_list|(
name|String
name|oAuthAppSecret
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oAuthAppSecret"
argument_list|,
name|oAuthAppSecret
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * OAuth authorization URL.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oAuthAuthorizationURL ( String oAuthAuthorizationURL)
specifier|default
name|FacebookEndpointBuilder
name|oAuthAuthorizationURL
parameter_list|(
name|String
name|oAuthAuthorizationURL
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oAuthAuthorizationURL"
argument_list|,
name|oAuthAuthorizationURL
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Default OAuth permissions. Comma separated permission names. See          * https://developers.facebook.com/docs/reference/login/#permissions for          * the detail.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: security          */
DECL|method|oAuthPermissions (String oAuthPermissions)
specifier|default
name|FacebookEndpointBuilder
name|oAuthPermissions
parameter_list|(
name|String
name|oAuthPermissions
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oAuthPermissions"
argument_list|,
name|oAuthPermissions
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint for the Facebook component.      */
DECL|interface|AdvancedFacebookEndpointBuilder
specifier|public
interface|interface
name|AdvancedFacebookEndpointBuilder
extends|extends
name|AdvancedFacebookEndpointConsumerBuilder
extends|,
name|AdvancedFacebookEndpointProducerBuilder
block|{
DECL|method|basic ()
specifier|default
name|FacebookEndpointBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|FacebookEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedFacebookEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedFacebookEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous (boolean synchronous)
specifier|default
name|AdvancedFacebookEndpointBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous (String synchronous)
specifier|default
name|AdvancedFacebookEndpointBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Proxy enum for<code>facebook4j.PictureSize</code> enum.      */
DECL|enum|PictureSize
enum|enum
name|PictureSize
block|{
DECL|enumConstant|square
name|square
block|,
DECL|enumConstant|small
name|small
block|,
DECL|enumConstant|normal
name|normal
block|,
DECL|enumConstant|large
name|large
block|,
DECL|enumConstant|thumbnail
name|thumbnail
block|,
DECL|enumConstant|album
name|album
block|;     }
comment|/**      * Facebook (camel-facebook)      * The Facebook component provides access to all of the Facebook APIs      * accessible using Facebook4J.      *       * Syntax:<code>facebook:methodName</code>      * Category: social      * Available as of version: 2.14      * Maven coordinates: org.apache.camel:camel-facebook      */
DECL|method|facebook (String path)
specifier|default
name|FacebookEndpointBuilder
name|facebook
parameter_list|(
name|String
name|path
parameter_list|)
block|{
class|class
name|FacebookEndpointBuilderImpl
extends|extends
name|AbstractEndpointBuilder
implements|implements
name|FacebookEndpointBuilder
implements|,
name|AdvancedFacebookEndpointBuilder
block|{
specifier|public
name|FacebookEndpointBuilderImpl
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|super
argument_list|(
literal|"facebook"
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|new
name|FacebookEndpointBuilderImpl
argument_list|(
name|path
argument_list|)
return|;
block|}
block|}
end_interface

end_unit

