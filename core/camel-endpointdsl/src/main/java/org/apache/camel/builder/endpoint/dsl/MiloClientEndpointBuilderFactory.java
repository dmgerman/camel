begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.builder.endpoint.dsl
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|dsl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Generated
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ExchangePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointConsumerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointProducerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|AbstractEndpointBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ExceptionHandler
import|;
end_import

begin_comment
comment|/**  * Connect to OPC UA servers using the binary protocol for acquiring telemetry  * data  *   * Generated by camel-package-maven-plugin - do not edit this file!  */
end_comment

begin_interface
annotation|@
name|Generated
argument_list|(
literal|"org.apache.camel.maven.packaging.EndpointDslMojo"
argument_list|)
DECL|interface|MiloClientEndpointBuilderFactory
specifier|public
interface|interface
name|MiloClientEndpointBuilderFactory
block|{
comment|/**      * Builder for endpoint consumers for the OPC UA Client component.      */
DECL|interface|MiloClientEndpointConsumerBuilder
specifier|public
interface|interface
name|MiloClientEndpointConsumerBuilder
extends|extends
name|EndpointConsumerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedMiloClientEndpointConsumerBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedMiloClientEndpointConsumerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * A virtual client id to force the creation of a new connection          * instance.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|clientId (String clientId)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|clientId
parameter_list|(
name|String
name|clientId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"clientId"
argument_list|,
name|clientId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Default await setting for writes.          *           * The option is a:<code>boolean</code> type.          *           * Group: common          */
DECL|method|defaultAwaitWrites ( boolean defaultAwaitWrites)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|defaultAwaitWrites
parameter_list|(
name|boolean
name|defaultAwaitWrites
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"defaultAwaitWrites"
argument_list|,
name|defaultAwaitWrites
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Default await setting for writes.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: common          */
DECL|method|defaultAwaitWrites ( String defaultAwaitWrites)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|defaultAwaitWrites
parameter_list|(
name|String
name|defaultAwaitWrites
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"defaultAwaitWrites"
argument_list|,
name|defaultAwaitWrites
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * A suffix for endpoint URI when discovering.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|discoveryEndpointSuffix ( String discoveryEndpointSuffix)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|discoveryEndpointSuffix
parameter_list|(
name|String
name|discoveryEndpointSuffix
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"discoveryEndpointSuffix"
argument_list|,
name|discoveryEndpointSuffix
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * An alternative discovery URI.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|discoveryEndpointUri ( String discoveryEndpointUri)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|discoveryEndpointUri
parameter_list|(
name|String
name|discoveryEndpointUri
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"discoveryEndpointUri"
argument_list|,
name|discoveryEndpointUri
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The method definition (see Method ID).          *           * The option is a:          *<code>org.eclipse.milo.opcua.stack.core.types.builtin.ExpandedNodeId</code> type.          *           * Group: common          */
DECL|method|method (Object method)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|method
parameter_list|(
name|Object
name|method
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"method"
argument_list|,
name|method
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The method definition (see Method ID).          *           * The option will be converted to a          *<code>org.eclipse.milo.opcua.stack.core.types.builtin.ExpandedNodeId</code> type.          *           * Group: common          */
DECL|method|method (String method)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|method
parameter_list|(
name|String
name|method
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"method"
argument_list|,
name|method
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The node definition (see Node ID).          *           * The option is a:          *<code>org.eclipse.milo.opcua.stack.core.types.builtin.ExpandedNodeId</code> type.          *           * Group: common          */
DECL|method|node (Object node)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|node
parameter_list|(
name|Object
name|node
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"node"
argument_list|,
name|node
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The node definition (see Node ID).          *           * The option will be converted to a          *<code>org.eclipse.milo.opcua.stack.core.types.builtin.ExpandedNodeId</code> type.          *           * Group: common          */
DECL|method|node (String node)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|node
parameter_list|(
name|String
name|node
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"node"
argument_list|,
name|node
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The sampling interval in milliseconds.          *           * The option is a:<code>java.lang.Double</code> type.          *           * Group: common          */
DECL|method|samplingInterval ( Double samplingInterval)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|samplingInterval
parameter_list|(
name|Double
name|samplingInterval
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"samplingInterval"
argument_list|,
name|samplingInterval
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The sampling interval in milliseconds.          *           * The option will be converted to a<code>java.lang.Double</code> type.          *           * Group: common          */
DECL|method|samplingInterval ( String samplingInterval)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|samplingInterval
parameter_list|(
name|String
name|samplingInterval
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"samplingInterval"
argument_list|,
name|samplingInterval
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Allows for bridging the consumer to the Camel routing Error Handler,          * which mean any exceptions occurred while the consumer is trying to          * pickup incoming messages, or the likes, will now be processed as a          * message and handled by the routing Error Handler. By default the          * consumer will use the org.apache.camel.spi.ExceptionHandler to deal          * with exceptions, that will be logged at WARN or ERROR level and          * ignored.          *           * The option is a:<code>boolean</code> type.          *           * Group: consumer          */
DECL|method|bridgeErrorHandler ( boolean bridgeErrorHandler)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|bridgeErrorHandler
parameter_list|(
name|boolean
name|bridgeErrorHandler
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"bridgeErrorHandler"
argument_list|,
name|bridgeErrorHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Allows for bridging the consumer to the Camel routing Error Handler,          * which mean any exceptions occurred while the consumer is trying to          * pickup incoming messages, or the likes, will now be processed as a          * message and handled by the routing Error Handler. By default the          * consumer will use the org.apache.camel.spi.ExceptionHandler to deal          * with exceptions, that will be logged at WARN or ERROR level and          * ignored.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: consumer          */
DECL|method|bridgeErrorHandler ( String bridgeErrorHandler)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|bridgeErrorHandler
parameter_list|(
name|String
name|bridgeErrorHandler
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"bridgeErrorHandler"
argument_list|,
name|bridgeErrorHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * A set of allowed security policy URIs. Default is to accept all and          * use the highest.          *           * The option is a:<code>java.util.Set&lt;java.lang.String&gt;</code>          * type.          *           * Group: client          */
DECL|method|allowedSecurityPolicies ( Set<String> allowedSecurityPolicies)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|allowedSecurityPolicies
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|allowedSecurityPolicies
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"allowedSecurityPolicies"
argument_list|,
name|allowedSecurityPolicies
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * A set of allowed security policy URIs. Default is to accept all and          * use the highest.          *           * The option will be converted to a          *<code>java.util.Set&lt;java.lang.String&gt;</code> type.          *           * Group: client          */
DECL|method|allowedSecurityPolicies ( String allowedSecurityPolicies)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|allowedSecurityPolicies
parameter_list|(
name|String
name|allowedSecurityPolicies
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"allowedSecurityPolicies"
argument_list|,
name|allowedSecurityPolicies
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The application name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|applicationName ( String applicationName)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|applicationName
parameter_list|(
name|String
name|applicationName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"applicationName"
argument_list|,
name|applicationName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The application URI.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|applicationUri ( String applicationUri)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|applicationUri
parameter_list|(
name|String
name|applicationUri
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"applicationUri"
argument_list|,
name|applicationUri
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Channel lifetime in milliseconds.          *           * The option is a:<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|channelLifetime ( Long channelLifetime)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|channelLifetime
parameter_list|(
name|Long
name|channelLifetime
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"channelLifetime"
argument_list|,
name|channelLifetime
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Channel lifetime in milliseconds.          *           * The option will be converted to a<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|channelLifetime ( String channelLifetime)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|channelLifetime
parameter_list|(
name|String
name|channelLifetime
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"channelLifetime"
argument_list|,
name|channelLifetime
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The name of the key in the keystore file.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|keyAlias (String keyAlias)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|keyAlias
parameter_list|(
name|String
name|keyAlias
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"keyAlias"
argument_list|,
name|keyAlias
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The key password.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|keyPassword (String keyPassword)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|keyPassword
parameter_list|(
name|String
name|keyPassword
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"keyPassword"
argument_list|,
name|keyPassword
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The keystore password.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|keyStorePassword ( String keyStorePassword)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|keyStorePassword
parameter_list|(
name|String
name|keyStorePassword
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"keyStorePassword"
argument_list|,
name|keyStorePassword
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The key store type.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|keyStoreType ( String keyStoreType)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|keyStoreType
parameter_list|(
name|String
name|keyStoreType
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"keyStoreType"
argument_list|,
name|keyStoreType
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The URL where the key should be loaded from.          *           * The option is a:<code>java.net.URL</code> type.          *           * Group: client          */
DECL|method|keyStoreUrl (URL keyStoreUrl)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|keyStoreUrl
parameter_list|(
name|URL
name|keyStoreUrl
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"keyStoreUrl"
argument_list|,
name|keyStoreUrl
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The URL where the key should be loaded from.          *           * The option will be converted to a<code>java.net.URL</code> type.          *           * Group: client          */
DECL|method|keyStoreUrl (String keyStoreUrl)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|keyStoreUrl
parameter_list|(
name|String
name|keyStoreUrl
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"keyStoreUrl"
argument_list|,
name|keyStoreUrl
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The maximum number of pending publish requests.          *           * The option is a:<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|maxPendingPublishRequests ( Long maxPendingPublishRequests)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|maxPendingPublishRequests
parameter_list|(
name|Long
name|maxPendingPublishRequests
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"maxPendingPublishRequests"
argument_list|,
name|maxPendingPublishRequests
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The maximum number of pending publish requests.          *           * The option will be converted to a<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|maxPendingPublishRequests ( String maxPendingPublishRequests)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|maxPendingPublishRequests
parameter_list|(
name|String
name|maxPendingPublishRequests
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"maxPendingPublishRequests"
argument_list|,
name|maxPendingPublishRequests
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The maximum number of bytes a response message may have.          *           * The option is a:<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|maxResponseMessageSize ( Long maxResponseMessageSize)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|maxResponseMessageSize
parameter_list|(
name|Long
name|maxResponseMessageSize
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"maxResponseMessageSize"
argument_list|,
name|maxResponseMessageSize
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The maximum number of bytes a response message may have.          *           * The option will be converted to a<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|maxResponseMessageSize ( String maxResponseMessageSize)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|maxResponseMessageSize
parameter_list|(
name|String
name|maxResponseMessageSize
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"maxResponseMessageSize"
argument_list|,
name|maxResponseMessageSize
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Override the server reported endpoint host with the host from the          * endpoint URI.          *           * The option is a:<code>boolean</code> type.          *           * Group: client          */
DECL|method|overrideHost ( boolean overrideHost)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|overrideHost
parameter_list|(
name|boolean
name|overrideHost
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"overrideHost"
argument_list|,
name|overrideHost
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Override the server reported endpoint host with the host from the          * endpoint URI.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: client          */
DECL|method|overrideHost ( String overrideHost)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|overrideHost
parameter_list|(
name|String
name|overrideHost
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"overrideHost"
argument_list|,
name|overrideHost
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The product URI.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|productUri (String productUri)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|productUri
parameter_list|(
name|String
name|productUri
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"productUri"
argument_list|,
name|productUri
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Request timeout in milliseconds.          *           * The option is a:<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|requestTimeout ( Long requestTimeout)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|requestTimeout
parameter_list|(
name|Long
name|requestTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"requestTimeout"
argument_list|,
name|requestTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Request timeout in milliseconds.          *           * The option will be converted to a<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|requestTimeout ( String requestTimeout)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|requestTimeout
parameter_list|(
name|String
name|requestTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"requestTimeout"
argument_list|,
name|requestTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Session name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|sessionName (String sessionName)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|sessionName
parameter_list|(
name|String
name|sessionName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"sessionName"
argument_list|,
name|sessionName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Session timeout in milliseconds.          *           * The option is a:<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|sessionTimeout ( Long sessionTimeout)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|sessionTimeout
parameter_list|(
name|Long
name|sessionTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"sessionTimeout"
argument_list|,
name|sessionTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Session timeout in milliseconds.          *           * The option will be converted to a<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|sessionTimeout ( String sessionTimeout)
specifier|default
name|MiloClientEndpointConsumerBuilder
name|sessionTimeout
parameter_list|(
name|String
name|sessionTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"sessionTimeout"
argument_list|,
name|sessionTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint consumers for the OPC UA Client component.      */
DECL|interface|AdvancedMiloClientEndpointConsumerBuilder
specifier|public
interface|interface
name|AdvancedMiloClientEndpointConsumerBuilder
extends|extends
name|EndpointConsumerBuilder
block|{
DECL|method|basic ()
specifier|default
name|MiloClientEndpointConsumerBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|MiloClientEndpointConsumerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * To let the consumer use a custom ExceptionHandler. Notice if the          * option bridgeErrorHandler is enabled then this option is not in use.          * By default the consumer will deal with exceptions, that will be          * logged at WARN or ERROR level and ignored.          *           * The option is a:<code>org.apache.camel.spi.ExceptionHandler</code>          * type.          *           * Group: consumer (advanced)          */
DECL|method|exceptionHandler ( ExceptionHandler exceptionHandler)
specifier|default
name|AdvancedMiloClientEndpointConsumerBuilder
name|exceptionHandler
parameter_list|(
name|ExceptionHandler
name|exceptionHandler
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"exceptionHandler"
argument_list|,
name|exceptionHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To let the consumer use a custom ExceptionHandler. Notice if the          * option bridgeErrorHandler is enabled then this option is not in use.          * By default the consumer will deal with exceptions, that will be          * logged at WARN or ERROR level and ignored.          *           * The option will be converted to a          *<code>org.apache.camel.spi.ExceptionHandler</code> type.          *           * Group: consumer (advanced)          */
DECL|method|exceptionHandler ( String exceptionHandler)
specifier|default
name|AdvancedMiloClientEndpointConsumerBuilder
name|exceptionHandler
parameter_list|(
name|String
name|exceptionHandler
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"exceptionHandler"
argument_list|,
name|exceptionHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets the exchange pattern when the consumer creates an exchange.          *           * The option is a:<code>org.apache.camel.ExchangePattern</code> type.          *           * Group: consumer (advanced)          */
DECL|method|exchangePattern ( ExchangePattern exchangePattern)
specifier|default
name|AdvancedMiloClientEndpointConsumerBuilder
name|exchangePattern
parameter_list|(
name|ExchangePattern
name|exchangePattern
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"exchangePattern"
argument_list|,
name|exchangePattern
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets the exchange pattern when the consumer creates an exchange.          *           * The option will be converted to a          *<code>org.apache.camel.ExchangePattern</code> type.          *           * Group: consumer (advanced)          */
DECL|method|exchangePattern ( String exchangePattern)
specifier|default
name|AdvancedMiloClientEndpointConsumerBuilder
name|exchangePattern
parameter_list|(
name|String
name|exchangePattern
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"exchangePattern"
argument_list|,
name|exchangePattern
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedMiloClientEndpointConsumerBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedMiloClientEndpointConsumerBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( boolean synchronous)
specifier|default
name|AdvancedMiloClientEndpointConsumerBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( String synchronous)
specifier|default
name|AdvancedMiloClientEndpointConsumerBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Builder for endpoint producers for the OPC UA Client component.      */
DECL|interface|MiloClientEndpointProducerBuilder
specifier|public
interface|interface
name|MiloClientEndpointProducerBuilder
extends|extends
name|EndpointProducerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedMiloClientEndpointProducerBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedMiloClientEndpointProducerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * A virtual client id to force the creation of a new connection          * instance.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|clientId (String clientId)
specifier|default
name|MiloClientEndpointProducerBuilder
name|clientId
parameter_list|(
name|String
name|clientId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"clientId"
argument_list|,
name|clientId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Default await setting for writes.          *           * The option is a:<code>boolean</code> type.          *           * Group: common          */
DECL|method|defaultAwaitWrites ( boolean defaultAwaitWrites)
specifier|default
name|MiloClientEndpointProducerBuilder
name|defaultAwaitWrites
parameter_list|(
name|boolean
name|defaultAwaitWrites
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"defaultAwaitWrites"
argument_list|,
name|defaultAwaitWrites
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Default await setting for writes.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: common          */
DECL|method|defaultAwaitWrites ( String defaultAwaitWrites)
specifier|default
name|MiloClientEndpointProducerBuilder
name|defaultAwaitWrites
parameter_list|(
name|String
name|defaultAwaitWrites
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"defaultAwaitWrites"
argument_list|,
name|defaultAwaitWrites
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * A suffix for endpoint URI when discovering.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|discoveryEndpointSuffix ( String discoveryEndpointSuffix)
specifier|default
name|MiloClientEndpointProducerBuilder
name|discoveryEndpointSuffix
parameter_list|(
name|String
name|discoveryEndpointSuffix
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"discoveryEndpointSuffix"
argument_list|,
name|discoveryEndpointSuffix
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * An alternative discovery URI.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|discoveryEndpointUri ( String discoveryEndpointUri)
specifier|default
name|MiloClientEndpointProducerBuilder
name|discoveryEndpointUri
parameter_list|(
name|String
name|discoveryEndpointUri
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"discoveryEndpointUri"
argument_list|,
name|discoveryEndpointUri
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The method definition (see Method ID).          *           * The option is a:          *<code>org.eclipse.milo.opcua.stack.core.types.builtin.ExpandedNodeId</code> type.          *           * Group: common          */
DECL|method|method (Object method)
specifier|default
name|MiloClientEndpointProducerBuilder
name|method
parameter_list|(
name|Object
name|method
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"method"
argument_list|,
name|method
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The method definition (see Method ID).          *           * The option will be converted to a          *<code>org.eclipse.milo.opcua.stack.core.types.builtin.ExpandedNodeId</code> type.          *           * Group: common          */
DECL|method|method (String method)
specifier|default
name|MiloClientEndpointProducerBuilder
name|method
parameter_list|(
name|String
name|method
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"method"
argument_list|,
name|method
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The node definition (see Node ID).          *           * The option is a:          *<code>org.eclipse.milo.opcua.stack.core.types.builtin.ExpandedNodeId</code> type.          *           * Group: common          */
DECL|method|node (Object node)
specifier|default
name|MiloClientEndpointProducerBuilder
name|node
parameter_list|(
name|Object
name|node
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"node"
argument_list|,
name|node
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The node definition (see Node ID).          *           * The option will be converted to a          *<code>org.eclipse.milo.opcua.stack.core.types.builtin.ExpandedNodeId</code> type.          *           * Group: common          */
DECL|method|node (String node)
specifier|default
name|MiloClientEndpointProducerBuilder
name|node
parameter_list|(
name|String
name|node
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"node"
argument_list|,
name|node
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The sampling interval in milliseconds.          *           * The option is a:<code>java.lang.Double</code> type.          *           * Group: common          */
DECL|method|samplingInterval ( Double samplingInterval)
specifier|default
name|MiloClientEndpointProducerBuilder
name|samplingInterval
parameter_list|(
name|Double
name|samplingInterval
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"samplingInterval"
argument_list|,
name|samplingInterval
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The sampling interval in milliseconds.          *           * The option will be converted to a<code>java.lang.Double</code> type.          *           * Group: common          */
DECL|method|samplingInterval ( String samplingInterval)
specifier|default
name|MiloClientEndpointProducerBuilder
name|samplingInterval
parameter_list|(
name|String
name|samplingInterval
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"samplingInterval"
argument_list|,
name|samplingInterval
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the producer should be started lazy (on the first message).          * By starting lazy you can use this to allow CamelContext and routes to          * startup in situations where a producer may otherwise fail during          * starting and cause the route to fail being started. By deferring this          * startup to be lazy then the startup failure can be handled during          * routing messages via Camel's routing error handlers. Beware that when          * the first message is processed then creating and starting the          * producer may take a little time and prolong the total processing time          * of the processing.          *           * The option is a:<code>boolean</code> type.          *           * Group: producer          */
DECL|method|lazyStartProducer ( boolean lazyStartProducer)
specifier|default
name|MiloClientEndpointProducerBuilder
name|lazyStartProducer
parameter_list|(
name|boolean
name|lazyStartProducer
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"lazyStartProducer"
argument_list|,
name|lazyStartProducer
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the producer should be started lazy (on the first message).          * By starting lazy you can use this to allow CamelContext and routes to          * startup in situations where a producer may otherwise fail during          * starting and cause the route to fail being started. By deferring this          * startup to be lazy then the startup failure can be handled during          * routing messages via Camel's routing error handlers. Beware that when          * the first message is processed then creating and starting the          * producer may take a little time and prolong the total processing time          * of the processing.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: producer          */
DECL|method|lazyStartProducer ( String lazyStartProducer)
specifier|default
name|MiloClientEndpointProducerBuilder
name|lazyStartProducer
parameter_list|(
name|String
name|lazyStartProducer
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"lazyStartProducer"
argument_list|,
name|lazyStartProducer
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * A set of allowed security policy URIs. Default is to accept all and          * use the highest.          *           * The option is a:<code>java.util.Set&lt;java.lang.String&gt;</code>          * type.          *           * Group: client          */
DECL|method|allowedSecurityPolicies ( Set<String> allowedSecurityPolicies)
specifier|default
name|MiloClientEndpointProducerBuilder
name|allowedSecurityPolicies
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|allowedSecurityPolicies
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"allowedSecurityPolicies"
argument_list|,
name|allowedSecurityPolicies
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * A set of allowed security policy URIs. Default is to accept all and          * use the highest.          *           * The option will be converted to a          *<code>java.util.Set&lt;java.lang.String&gt;</code> type.          *           * Group: client          */
DECL|method|allowedSecurityPolicies ( String allowedSecurityPolicies)
specifier|default
name|MiloClientEndpointProducerBuilder
name|allowedSecurityPolicies
parameter_list|(
name|String
name|allowedSecurityPolicies
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"allowedSecurityPolicies"
argument_list|,
name|allowedSecurityPolicies
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The application name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|applicationName ( String applicationName)
specifier|default
name|MiloClientEndpointProducerBuilder
name|applicationName
parameter_list|(
name|String
name|applicationName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"applicationName"
argument_list|,
name|applicationName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The application URI.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|applicationUri ( String applicationUri)
specifier|default
name|MiloClientEndpointProducerBuilder
name|applicationUri
parameter_list|(
name|String
name|applicationUri
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"applicationUri"
argument_list|,
name|applicationUri
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Channel lifetime in milliseconds.          *           * The option is a:<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|channelLifetime ( Long channelLifetime)
specifier|default
name|MiloClientEndpointProducerBuilder
name|channelLifetime
parameter_list|(
name|Long
name|channelLifetime
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"channelLifetime"
argument_list|,
name|channelLifetime
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Channel lifetime in milliseconds.          *           * The option will be converted to a<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|channelLifetime ( String channelLifetime)
specifier|default
name|MiloClientEndpointProducerBuilder
name|channelLifetime
parameter_list|(
name|String
name|channelLifetime
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"channelLifetime"
argument_list|,
name|channelLifetime
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The name of the key in the keystore file.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|keyAlias (String keyAlias)
specifier|default
name|MiloClientEndpointProducerBuilder
name|keyAlias
parameter_list|(
name|String
name|keyAlias
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"keyAlias"
argument_list|,
name|keyAlias
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The key password.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|keyPassword (String keyPassword)
specifier|default
name|MiloClientEndpointProducerBuilder
name|keyPassword
parameter_list|(
name|String
name|keyPassword
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"keyPassword"
argument_list|,
name|keyPassword
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The keystore password.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|keyStorePassword ( String keyStorePassword)
specifier|default
name|MiloClientEndpointProducerBuilder
name|keyStorePassword
parameter_list|(
name|String
name|keyStorePassword
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"keyStorePassword"
argument_list|,
name|keyStorePassword
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The key store type.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|keyStoreType ( String keyStoreType)
specifier|default
name|MiloClientEndpointProducerBuilder
name|keyStoreType
parameter_list|(
name|String
name|keyStoreType
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"keyStoreType"
argument_list|,
name|keyStoreType
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The URL where the key should be loaded from.          *           * The option is a:<code>java.net.URL</code> type.          *           * Group: client          */
DECL|method|keyStoreUrl (URL keyStoreUrl)
specifier|default
name|MiloClientEndpointProducerBuilder
name|keyStoreUrl
parameter_list|(
name|URL
name|keyStoreUrl
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"keyStoreUrl"
argument_list|,
name|keyStoreUrl
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The URL where the key should be loaded from.          *           * The option will be converted to a<code>java.net.URL</code> type.          *           * Group: client          */
DECL|method|keyStoreUrl (String keyStoreUrl)
specifier|default
name|MiloClientEndpointProducerBuilder
name|keyStoreUrl
parameter_list|(
name|String
name|keyStoreUrl
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"keyStoreUrl"
argument_list|,
name|keyStoreUrl
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The maximum number of pending publish requests.          *           * The option is a:<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|maxPendingPublishRequests ( Long maxPendingPublishRequests)
specifier|default
name|MiloClientEndpointProducerBuilder
name|maxPendingPublishRequests
parameter_list|(
name|Long
name|maxPendingPublishRequests
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"maxPendingPublishRequests"
argument_list|,
name|maxPendingPublishRequests
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The maximum number of pending publish requests.          *           * The option will be converted to a<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|maxPendingPublishRequests ( String maxPendingPublishRequests)
specifier|default
name|MiloClientEndpointProducerBuilder
name|maxPendingPublishRequests
parameter_list|(
name|String
name|maxPendingPublishRequests
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"maxPendingPublishRequests"
argument_list|,
name|maxPendingPublishRequests
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The maximum number of bytes a response message may have.          *           * The option is a:<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|maxResponseMessageSize ( Long maxResponseMessageSize)
specifier|default
name|MiloClientEndpointProducerBuilder
name|maxResponseMessageSize
parameter_list|(
name|Long
name|maxResponseMessageSize
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"maxResponseMessageSize"
argument_list|,
name|maxResponseMessageSize
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The maximum number of bytes a response message may have.          *           * The option will be converted to a<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|maxResponseMessageSize ( String maxResponseMessageSize)
specifier|default
name|MiloClientEndpointProducerBuilder
name|maxResponseMessageSize
parameter_list|(
name|String
name|maxResponseMessageSize
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"maxResponseMessageSize"
argument_list|,
name|maxResponseMessageSize
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Override the server reported endpoint host with the host from the          * endpoint URI.          *           * The option is a:<code>boolean</code> type.          *           * Group: client          */
DECL|method|overrideHost ( boolean overrideHost)
specifier|default
name|MiloClientEndpointProducerBuilder
name|overrideHost
parameter_list|(
name|boolean
name|overrideHost
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"overrideHost"
argument_list|,
name|overrideHost
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Override the server reported endpoint host with the host from the          * endpoint URI.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: client          */
DECL|method|overrideHost ( String overrideHost)
specifier|default
name|MiloClientEndpointProducerBuilder
name|overrideHost
parameter_list|(
name|String
name|overrideHost
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"overrideHost"
argument_list|,
name|overrideHost
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The product URI.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|productUri (String productUri)
specifier|default
name|MiloClientEndpointProducerBuilder
name|productUri
parameter_list|(
name|String
name|productUri
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"productUri"
argument_list|,
name|productUri
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Request timeout in milliseconds.          *           * The option is a:<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|requestTimeout ( Long requestTimeout)
specifier|default
name|MiloClientEndpointProducerBuilder
name|requestTimeout
parameter_list|(
name|Long
name|requestTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"requestTimeout"
argument_list|,
name|requestTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Request timeout in milliseconds.          *           * The option will be converted to a<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|requestTimeout ( String requestTimeout)
specifier|default
name|MiloClientEndpointProducerBuilder
name|requestTimeout
parameter_list|(
name|String
name|requestTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"requestTimeout"
argument_list|,
name|requestTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Session name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|sessionName (String sessionName)
specifier|default
name|MiloClientEndpointProducerBuilder
name|sessionName
parameter_list|(
name|String
name|sessionName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"sessionName"
argument_list|,
name|sessionName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Session timeout in milliseconds.          *           * The option is a:<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|sessionTimeout ( Long sessionTimeout)
specifier|default
name|MiloClientEndpointProducerBuilder
name|sessionTimeout
parameter_list|(
name|Long
name|sessionTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"sessionTimeout"
argument_list|,
name|sessionTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Session timeout in milliseconds.          *           * The option will be converted to a<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|sessionTimeout ( String sessionTimeout)
specifier|default
name|MiloClientEndpointProducerBuilder
name|sessionTimeout
parameter_list|(
name|String
name|sessionTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"sessionTimeout"
argument_list|,
name|sessionTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint producers for the OPC UA Client component.      */
DECL|interface|AdvancedMiloClientEndpointProducerBuilder
specifier|public
interface|interface
name|AdvancedMiloClientEndpointProducerBuilder
extends|extends
name|EndpointProducerBuilder
block|{
DECL|method|basic ()
specifier|default
name|MiloClientEndpointProducerBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|MiloClientEndpointProducerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedMiloClientEndpointProducerBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedMiloClientEndpointProducerBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( boolean synchronous)
specifier|default
name|AdvancedMiloClientEndpointProducerBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( String synchronous)
specifier|default
name|AdvancedMiloClientEndpointProducerBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Builder for endpoint for the OPC UA Client component.      */
DECL|interface|MiloClientEndpointBuilder
specifier|public
interface|interface
name|MiloClientEndpointBuilder
extends|extends
name|MiloClientEndpointConsumerBuilder
extends|,
name|MiloClientEndpointProducerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedMiloClientEndpointBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedMiloClientEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * A virtual client id to force the creation of a new connection          * instance.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|clientId (String clientId)
specifier|default
name|MiloClientEndpointBuilder
name|clientId
parameter_list|(
name|String
name|clientId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"clientId"
argument_list|,
name|clientId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Default await setting for writes.          *           * The option is a:<code>boolean</code> type.          *           * Group: common          */
DECL|method|defaultAwaitWrites ( boolean defaultAwaitWrites)
specifier|default
name|MiloClientEndpointBuilder
name|defaultAwaitWrites
parameter_list|(
name|boolean
name|defaultAwaitWrites
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"defaultAwaitWrites"
argument_list|,
name|defaultAwaitWrites
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Default await setting for writes.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: common          */
DECL|method|defaultAwaitWrites ( String defaultAwaitWrites)
specifier|default
name|MiloClientEndpointBuilder
name|defaultAwaitWrites
parameter_list|(
name|String
name|defaultAwaitWrites
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"defaultAwaitWrites"
argument_list|,
name|defaultAwaitWrites
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * A suffix for endpoint URI when discovering.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|discoveryEndpointSuffix ( String discoveryEndpointSuffix)
specifier|default
name|MiloClientEndpointBuilder
name|discoveryEndpointSuffix
parameter_list|(
name|String
name|discoveryEndpointSuffix
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"discoveryEndpointSuffix"
argument_list|,
name|discoveryEndpointSuffix
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * An alternative discovery URI.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|discoveryEndpointUri ( String discoveryEndpointUri)
specifier|default
name|MiloClientEndpointBuilder
name|discoveryEndpointUri
parameter_list|(
name|String
name|discoveryEndpointUri
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"discoveryEndpointUri"
argument_list|,
name|discoveryEndpointUri
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The method definition (see Method ID).          *           * The option is a:          *<code>org.eclipse.milo.opcua.stack.core.types.builtin.ExpandedNodeId</code> type.          *           * Group: common          */
DECL|method|method (Object method)
specifier|default
name|MiloClientEndpointBuilder
name|method
parameter_list|(
name|Object
name|method
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"method"
argument_list|,
name|method
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The method definition (see Method ID).          *           * The option will be converted to a          *<code>org.eclipse.milo.opcua.stack.core.types.builtin.ExpandedNodeId</code> type.          *           * Group: common          */
DECL|method|method (String method)
specifier|default
name|MiloClientEndpointBuilder
name|method
parameter_list|(
name|String
name|method
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"method"
argument_list|,
name|method
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The node definition (see Node ID).          *           * The option is a:          *<code>org.eclipse.milo.opcua.stack.core.types.builtin.ExpandedNodeId</code> type.          *           * Group: common          */
DECL|method|node (Object node)
specifier|default
name|MiloClientEndpointBuilder
name|node
parameter_list|(
name|Object
name|node
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"node"
argument_list|,
name|node
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The node definition (see Node ID).          *           * The option will be converted to a          *<code>org.eclipse.milo.opcua.stack.core.types.builtin.ExpandedNodeId</code> type.          *           * Group: common          */
DECL|method|node (String node)
specifier|default
name|MiloClientEndpointBuilder
name|node
parameter_list|(
name|String
name|node
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"node"
argument_list|,
name|node
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The sampling interval in milliseconds.          *           * The option is a:<code>java.lang.Double</code> type.          *           * Group: common          */
DECL|method|samplingInterval ( Double samplingInterval)
specifier|default
name|MiloClientEndpointBuilder
name|samplingInterval
parameter_list|(
name|Double
name|samplingInterval
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"samplingInterval"
argument_list|,
name|samplingInterval
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The sampling interval in milliseconds.          *           * The option will be converted to a<code>java.lang.Double</code> type.          *           * Group: common          */
DECL|method|samplingInterval ( String samplingInterval)
specifier|default
name|MiloClientEndpointBuilder
name|samplingInterval
parameter_list|(
name|String
name|samplingInterval
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"samplingInterval"
argument_list|,
name|samplingInterval
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * A set of allowed security policy URIs. Default is to accept all and          * use the highest.          *           * The option is a:<code>java.util.Set&lt;java.lang.String&gt;</code>          * type.          *           * Group: client          */
DECL|method|allowedSecurityPolicies ( Set<String> allowedSecurityPolicies)
specifier|default
name|MiloClientEndpointBuilder
name|allowedSecurityPolicies
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|allowedSecurityPolicies
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"allowedSecurityPolicies"
argument_list|,
name|allowedSecurityPolicies
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * A set of allowed security policy URIs. Default is to accept all and          * use the highest.          *           * The option will be converted to a          *<code>java.util.Set&lt;java.lang.String&gt;</code> type.          *           * Group: client          */
DECL|method|allowedSecurityPolicies ( String allowedSecurityPolicies)
specifier|default
name|MiloClientEndpointBuilder
name|allowedSecurityPolicies
parameter_list|(
name|String
name|allowedSecurityPolicies
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"allowedSecurityPolicies"
argument_list|,
name|allowedSecurityPolicies
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The application name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|applicationName (String applicationName)
specifier|default
name|MiloClientEndpointBuilder
name|applicationName
parameter_list|(
name|String
name|applicationName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"applicationName"
argument_list|,
name|applicationName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The application URI.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|applicationUri (String applicationUri)
specifier|default
name|MiloClientEndpointBuilder
name|applicationUri
parameter_list|(
name|String
name|applicationUri
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"applicationUri"
argument_list|,
name|applicationUri
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Channel lifetime in milliseconds.          *           * The option is a:<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|channelLifetime (Long channelLifetime)
specifier|default
name|MiloClientEndpointBuilder
name|channelLifetime
parameter_list|(
name|Long
name|channelLifetime
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"channelLifetime"
argument_list|,
name|channelLifetime
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Channel lifetime in milliseconds.          *           * The option will be converted to a<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|channelLifetime (String channelLifetime)
specifier|default
name|MiloClientEndpointBuilder
name|channelLifetime
parameter_list|(
name|String
name|channelLifetime
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"channelLifetime"
argument_list|,
name|channelLifetime
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The name of the key in the keystore file.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|keyAlias (String keyAlias)
specifier|default
name|MiloClientEndpointBuilder
name|keyAlias
parameter_list|(
name|String
name|keyAlias
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"keyAlias"
argument_list|,
name|keyAlias
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The key password.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|keyPassword (String keyPassword)
specifier|default
name|MiloClientEndpointBuilder
name|keyPassword
parameter_list|(
name|String
name|keyPassword
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"keyPassword"
argument_list|,
name|keyPassword
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The keystore password.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|keyStorePassword ( String keyStorePassword)
specifier|default
name|MiloClientEndpointBuilder
name|keyStorePassword
parameter_list|(
name|String
name|keyStorePassword
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"keyStorePassword"
argument_list|,
name|keyStorePassword
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The key store type.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|keyStoreType (String keyStoreType)
specifier|default
name|MiloClientEndpointBuilder
name|keyStoreType
parameter_list|(
name|String
name|keyStoreType
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"keyStoreType"
argument_list|,
name|keyStoreType
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The URL where the key should be loaded from.          *           * The option is a:<code>java.net.URL</code> type.          *           * Group: client          */
DECL|method|keyStoreUrl (URL keyStoreUrl)
specifier|default
name|MiloClientEndpointBuilder
name|keyStoreUrl
parameter_list|(
name|URL
name|keyStoreUrl
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"keyStoreUrl"
argument_list|,
name|keyStoreUrl
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The URL where the key should be loaded from.          *           * The option will be converted to a<code>java.net.URL</code> type.          *           * Group: client          */
DECL|method|keyStoreUrl (String keyStoreUrl)
specifier|default
name|MiloClientEndpointBuilder
name|keyStoreUrl
parameter_list|(
name|String
name|keyStoreUrl
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"keyStoreUrl"
argument_list|,
name|keyStoreUrl
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The maximum number of pending publish requests.          *           * The option is a:<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|maxPendingPublishRequests ( Long maxPendingPublishRequests)
specifier|default
name|MiloClientEndpointBuilder
name|maxPendingPublishRequests
parameter_list|(
name|Long
name|maxPendingPublishRequests
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"maxPendingPublishRequests"
argument_list|,
name|maxPendingPublishRequests
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The maximum number of pending publish requests.          *           * The option will be converted to a<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|maxPendingPublishRequests ( String maxPendingPublishRequests)
specifier|default
name|MiloClientEndpointBuilder
name|maxPendingPublishRequests
parameter_list|(
name|String
name|maxPendingPublishRequests
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"maxPendingPublishRequests"
argument_list|,
name|maxPendingPublishRequests
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The maximum number of bytes a response message may have.          *           * The option is a:<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|maxResponseMessageSize ( Long maxResponseMessageSize)
specifier|default
name|MiloClientEndpointBuilder
name|maxResponseMessageSize
parameter_list|(
name|Long
name|maxResponseMessageSize
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"maxResponseMessageSize"
argument_list|,
name|maxResponseMessageSize
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The maximum number of bytes a response message may have.          *           * The option will be converted to a<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|maxResponseMessageSize ( String maxResponseMessageSize)
specifier|default
name|MiloClientEndpointBuilder
name|maxResponseMessageSize
parameter_list|(
name|String
name|maxResponseMessageSize
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"maxResponseMessageSize"
argument_list|,
name|maxResponseMessageSize
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Override the server reported endpoint host with the host from the          * endpoint URI.          *           * The option is a:<code>boolean</code> type.          *           * Group: client          */
DECL|method|overrideHost (boolean overrideHost)
specifier|default
name|MiloClientEndpointBuilder
name|overrideHost
parameter_list|(
name|boolean
name|overrideHost
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"overrideHost"
argument_list|,
name|overrideHost
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Override the server reported endpoint host with the host from the          * endpoint URI.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: client          */
DECL|method|overrideHost (String overrideHost)
specifier|default
name|MiloClientEndpointBuilder
name|overrideHost
parameter_list|(
name|String
name|overrideHost
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"overrideHost"
argument_list|,
name|overrideHost
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The product URI.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|productUri (String productUri)
specifier|default
name|MiloClientEndpointBuilder
name|productUri
parameter_list|(
name|String
name|productUri
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"productUri"
argument_list|,
name|productUri
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Request timeout in milliseconds.          *           * The option is a:<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|requestTimeout (Long requestTimeout)
specifier|default
name|MiloClientEndpointBuilder
name|requestTimeout
parameter_list|(
name|Long
name|requestTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"requestTimeout"
argument_list|,
name|requestTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Request timeout in milliseconds.          *           * The option will be converted to a<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|requestTimeout (String requestTimeout)
specifier|default
name|MiloClientEndpointBuilder
name|requestTimeout
parameter_list|(
name|String
name|requestTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"requestTimeout"
argument_list|,
name|requestTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Session name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: client          */
DECL|method|sessionName (String sessionName)
specifier|default
name|MiloClientEndpointBuilder
name|sessionName
parameter_list|(
name|String
name|sessionName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"sessionName"
argument_list|,
name|sessionName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Session timeout in milliseconds.          *           * The option is a:<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|sessionTimeout (Long sessionTimeout)
specifier|default
name|MiloClientEndpointBuilder
name|sessionTimeout
parameter_list|(
name|Long
name|sessionTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"sessionTimeout"
argument_list|,
name|sessionTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Session timeout in milliseconds.          *           * The option will be converted to a<code>java.lang.Long</code> type.          *           * Group: client          */
DECL|method|sessionTimeout (String sessionTimeout)
specifier|default
name|MiloClientEndpointBuilder
name|sessionTimeout
parameter_list|(
name|String
name|sessionTimeout
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"sessionTimeout"
argument_list|,
name|sessionTimeout
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint for the OPC UA Client component.      */
DECL|interface|AdvancedMiloClientEndpointBuilder
specifier|public
interface|interface
name|AdvancedMiloClientEndpointBuilder
extends|extends
name|AdvancedMiloClientEndpointConsumerBuilder
extends|,
name|AdvancedMiloClientEndpointProducerBuilder
block|{
DECL|method|basic ()
specifier|default
name|MiloClientEndpointBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|MiloClientEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedMiloClientEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedMiloClientEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( boolean synchronous)
specifier|default
name|AdvancedMiloClientEndpointBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous (String synchronous)
specifier|default
name|AdvancedMiloClientEndpointBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * OPC UA Client (camel-milo)      * Connect to OPC UA servers using the binary protocol for acquiring      * telemetry data      *       * Category: iot      * Available as of version: 2.19      * Maven coordinates: org.apache.camel:camel-milo      *       * Syntax:<code>milo-client:endpointUri</code>      *       * Path parameter: endpointUri (required)      * The OPC UA server endpoint      */
DECL|method|miloClient (String path)
specifier|default
name|MiloClientEndpointBuilder
name|miloClient
parameter_list|(
name|String
name|path
parameter_list|)
block|{
class|class
name|MiloClientEndpointBuilderImpl
extends|extends
name|AbstractEndpointBuilder
implements|implements
name|MiloClientEndpointBuilder
implements|,
name|AdvancedMiloClientEndpointBuilder
block|{
specifier|public
name|MiloClientEndpointBuilderImpl
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|super
argument_list|(
literal|"milo-client"
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|new
name|MiloClientEndpointBuilderImpl
argument_list|(
name|path
argument_list|)
return|;
block|}
block|}
end_interface

end_unit

