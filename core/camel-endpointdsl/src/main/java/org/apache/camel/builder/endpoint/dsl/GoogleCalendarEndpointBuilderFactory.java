begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.builder.endpoint.dsl
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|dsl
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Generated
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ExchangePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointConsumerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointProducerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|AbstractEndpointBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ExceptionHandler
import|;
end_import

begin_comment
comment|/**  * The google-calendar component provides access to Google Calendar.  *   * Generated by camel-package-maven-plugin - do not edit this file!  */
end_comment

begin_interface
annotation|@
name|Generated
argument_list|(
literal|"org.apache.camel.maven.packaging.EndpointDslMojo"
argument_list|)
DECL|interface|GoogleCalendarEndpointBuilderFactory
specifier|public
interface|interface
name|GoogleCalendarEndpointBuilderFactory
block|{
comment|/**      * Builder for endpoint consumers for the Google Calendar component.      */
DECL|interface|GoogleCalendarEndpointConsumerBuilder
specifier|public
interface|interface
name|GoogleCalendarEndpointConsumerBuilder
extends|extends
name|EndpointConsumerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedGoogleCalendarEndpointConsumerBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedGoogleCalendarEndpointConsumerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * What kind of operation to perform.          * The option is a          *<code>org.apache.camel.component.google.calendar.internal.GoogleCalendarApiName</code> type.          * @group common          */
DECL|method|apiName ( GoogleCalendarApiName apiName)
specifier|default
name|GoogleCalendarEndpointConsumerBuilder
name|apiName
parameter_list|(
name|GoogleCalendarApiName
name|apiName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"apiName"
argument_list|,
name|apiName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * What kind of operation to perform.          * The option will be converted to a          *<code>org.apache.camel.component.google.calendar.internal.GoogleCalendarApiName</code> type.          * @group common          */
DECL|method|apiName (String apiName)
specifier|default
name|GoogleCalendarEndpointConsumerBuilder
name|apiName
parameter_list|(
name|String
name|apiName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"apiName"
argument_list|,
name|apiName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * What sub operation to use for the selected operation.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|methodName ( String methodName)
specifier|default
name|GoogleCalendarEndpointConsumerBuilder
name|methodName
parameter_list|(
name|String
name|methodName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"methodName"
argument_list|,
name|methodName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * OAuth 2 access token. This typically expires after an hour so          * refreshToken is recommended for long term usage.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|accessToken ( String accessToken)
specifier|default
name|GoogleCalendarEndpointConsumerBuilder
name|accessToken
parameter_list|(
name|String
name|accessToken
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"accessToken"
argument_list|,
name|accessToken
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Google calendar application name. Example would be          * camel-google-calendar/1.0.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|applicationName ( String applicationName)
specifier|default
name|GoogleCalendarEndpointConsumerBuilder
name|applicationName
parameter_list|(
name|String
name|applicationName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"applicationName"
argument_list|,
name|applicationName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Client ID of the calendar application.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|clientId (String clientId)
specifier|default
name|GoogleCalendarEndpointConsumerBuilder
name|clientId
parameter_list|(
name|String
name|clientId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"clientId"
argument_list|,
name|clientId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Client secret of the calendar application.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|clientSecret ( String clientSecret)
specifier|default
name|GoogleCalendarEndpointConsumerBuilder
name|clientSecret
parameter_list|(
name|String
name|clientSecret
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"clientSecret"
argument_list|,
name|clientSecret
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The emailAddress of the Google Service Account.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|emailAddress ( String emailAddress)
specifier|default
name|GoogleCalendarEndpointConsumerBuilder
name|emailAddress
parameter_list|(
name|String
name|emailAddress
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"emailAddress"
argument_list|,
name|emailAddress
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets the name of a parameter to be passed in the exchange In Body.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|inBody (String inBody)
specifier|default
name|GoogleCalendarEndpointConsumerBuilder
name|inBody
parameter_list|(
name|String
name|inBody
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"inBody"
argument_list|,
name|inBody
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The name of the p12 file which has the private key to use with the          * Google Service Account.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|p12FileName ( String p12FileName)
specifier|default
name|GoogleCalendarEndpointConsumerBuilder
name|p12FileName
parameter_list|(
name|String
name|p12FileName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"p12FileName"
argument_list|,
name|p12FileName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * OAuth 2 refresh token. Using this, the Google Calendar component can          * obtain a new accessToken whenever the current one expires - a          * necessity if the application is long-lived.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|refreshToken ( String refreshToken)
specifier|default
name|GoogleCalendarEndpointConsumerBuilder
name|refreshToken
parameter_list|(
name|String
name|refreshToken
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"refreshToken"
argument_list|,
name|refreshToken
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Specifies the level of permissions you want a calendar application to          * have to a user account. You can separate multiple scopes by comma.          * See https://developers.google.com/google-apps/calendar/auth for more          * info.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|scopes (String scopes)
specifier|default
name|GoogleCalendarEndpointConsumerBuilder
name|scopes
parameter_list|(
name|String
name|scopes
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"scopes"
argument_list|,
name|scopes
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The email address of the user the application is trying to          * impersonate in the service account flow.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|user (String user)
specifier|default
name|GoogleCalendarEndpointConsumerBuilder
name|user
parameter_list|(
name|String
name|user
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"user"
argument_list|,
name|user
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Allows for bridging the consumer to the Camel routing Error Handler,          * which mean any exceptions occurred while the consumer is trying to          * pickup incoming messages, or the likes, will now be processed as a          * message and handled by the routing Error Handler. By default the          * consumer will use the org.apache.camel.spi.ExceptionHandler to deal          * with exceptions, that will be logged at WARN or ERROR level and          * ignored.          * The option is a<code>boolean</code> type.          * @group consumer          */
DECL|method|bridgeErrorHandler ( boolean bridgeErrorHandler)
specifier|default
name|GoogleCalendarEndpointConsumerBuilder
name|bridgeErrorHandler
parameter_list|(
name|boolean
name|bridgeErrorHandler
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"bridgeErrorHandler"
argument_list|,
name|bridgeErrorHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Allows for bridging the consumer to the Camel routing Error Handler,          * which mean any exceptions occurred while the consumer is trying to          * pickup incoming messages, or the likes, will now be processed as a          * message and handled by the routing Error Handler. By default the          * consumer will use the org.apache.camel.spi.ExceptionHandler to deal          * with exceptions, that will be logged at WARN or ERROR level and          * ignored.          * The option will be converted to a<code>boolean</code> type.          * @group consumer          */
DECL|method|bridgeErrorHandler ( String bridgeErrorHandler)
specifier|default
name|GoogleCalendarEndpointConsumerBuilder
name|bridgeErrorHandler
parameter_list|(
name|String
name|bridgeErrorHandler
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"bridgeErrorHandler"
argument_list|,
name|bridgeErrorHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint consumers for the Google Calendar      * component.      */
DECL|interface|AdvancedGoogleCalendarEndpointConsumerBuilder
specifier|public
interface|interface
name|AdvancedGoogleCalendarEndpointConsumerBuilder
extends|extends
name|EndpointConsumerBuilder
block|{
DECL|method|basic ()
specifier|default
name|GoogleCalendarEndpointConsumerBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|GoogleCalendarEndpointConsumerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * To let the consumer use a custom ExceptionHandler. Notice if the          * option bridgeErrorHandler is enabled then this option is not in use.          * By default the consumer will deal with exceptions, that will be          * logged at WARN or ERROR level and ignored.          * The option is a<code>org.apache.camel.spi.ExceptionHandler</code>          * type.          * @group consumer (advanced)          */
DECL|method|exceptionHandler ( ExceptionHandler exceptionHandler)
specifier|default
name|AdvancedGoogleCalendarEndpointConsumerBuilder
name|exceptionHandler
parameter_list|(
name|ExceptionHandler
name|exceptionHandler
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"exceptionHandler"
argument_list|,
name|exceptionHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To let the consumer use a custom ExceptionHandler. Notice if the          * option bridgeErrorHandler is enabled then this option is not in use.          * By default the consumer will deal with exceptions, that will be          * logged at WARN or ERROR level and ignored.          * The option will be converted to a          *<code>org.apache.camel.spi.ExceptionHandler</code> type.          * @group consumer (advanced)          */
DECL|method|exceptionHandler ( String exceptionHandler)
specifier|default
name|AdvancedGoogleCalendarEndpointConsumerBuilder
name|exceptionHandler
parameter_list|(
name|String
name|exceptionHandler
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"exceptionHandler"
argument_list|,
name|exceptionHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets the exchange pattern when the consumer creates an exchange.          * The option is a<code>org.apache.camel.ExchangePattern</code> type.          * @group consumer (advanced)          */
DECL|method|exchangePattern ( ExchangePattern exchangePattern)
specifier|default
name|AdvancedGoogleCalendarEndpointConsumerBuilder
name|exchangePattern
parameter_list|(
name|ExchangePattern
name|exchangePattern
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"exchangePattern"
argument_list|,
name|exchangePattern
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets the exchange pattern when the consumer creates an exchange.          * The option will be converted to a          *<code>org.apache.camel.ExchangePattern</code> type.          * @group consumer (advanced)          */
DECL|method|exchangePattern ( String exchangePattern)
specifier|default
name|AdvancedGoogleCalendarEndpointConsumerBuilder
name|exchangePattern
parameter_list|(
name|String
name|exchangePattern
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"exchangePattern"
argument_list|,
name|exchangePattern
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          * The option is a<code>boolean</code> type.          * @group advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedGoogleCalendarEndpointConsumerBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          * The option will be converted to a<code>boolean</code> type.          * @group advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedGoogleCalendarEndpointConsumerBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          * The option is a<code>boolean</code> type.          * @group advanced          */
DECL|method|synchronous ( boolean synchronous)
specifier|default
name|AdvancedGoogleCalendarEndpointConsumerBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          * The option will be converted to a<code>boolean</code> type.          * @group advanced          */
DECL|method|synchronous ( String synchronous)
specifier|default
name|AdvancedGoogleCalendarEndpointConsumerBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Builder for endpoint producers for the Google Calendar component.      */
DECL|interface|GoogleCalendarEndpointProducerBuilder
specifier|public
interface|interface
name|GoogleCalendarEndpointProducerBuilder
extends|extends
name|EndpointProducerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedGoogleCalendarEndpointProducerBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedGoogleCalendarEndpointProducerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * What kind of operation to perform.          * The option is a          *<code>org.apache.camel.component.google.calendar.internal.GoogleCalendarApiName</code> type.          * @group common          */
DECL|method|apiName ( GoogleCalendarApiName apiName)
specifier|default
name|GoogleCalendarEndpointProducerBuilder
name|apiName
parameter_list|(
name|GoogleCalendarApiName
name|apiName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"apiName"
argument_list|,
name|apiName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * What kind of operation to perform.          * The option will be converted to a          *<code>org.apache.camel.component.google.calendar.internal.GoogleCalendarApiName</code> type.          * @group common          */
DECL|method|apiName (String apiName)
specifier|default
name|GoogleCalendarEndpointProducerBuilder
name|apiName
parameter_list|(
name|String
name|apiName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"apiName"
argument_list|,
name|apiName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * What sub operation to use for the selected operation.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|methodName ( String methodName)
specifier|default
name|GoogleCalendarEndpointProducerBuilder
name|methodName
parameter_list|(
name|String
name|methodName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"methodName"
argument_list|,
name|methodName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * OAuth 2 access token. This typically expires after an hour so          * refreshToken is recommended for long term usage.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|accessToken ( String accessToken)
specifier|default
name|GoogleCalendarEndpointProducerBuilder
name|accessToken
parameter_list|(
name|String
name|accessToken
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"accessToken"
argument_list|,
name|accessToken
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Google calendar application name. Example would be          * camel-google-calendar/1.0.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|applicationName ( String applicationName)
specifier|default
name|GoogleCalendarEndpointProducerBuilder
name|applicationName
parameter_list|(
name|String
name|applicationName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"applicationName"
argument_list|,
name|applicationName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Client ID of the calendar application.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|clientId (String clientId)
specifier|default
name|GoogleCalendarEndpointProducerBuilder
name|clientId
parameter_list|(
name|String
name|clientId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"clientId"
argument_list|,
name|clientId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Client secret of the calendar application.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|clientSecret ( String clientSecret)
specifier|default
name|GoogleCalendarEndpointProducerBuilder
name|clientSecret
parameter_list|(
name|String
name|clientSecret
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"clientSecret"
argument_list|,
name|clientSecret
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The emailAddress of the Google Service Account.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|emailAddress ( String emailAddress)
specifier|default
name|GoogleCalendarEndpointProducerBuilder
name|emailAddress
parameter_list|(
name|String
name|emailAddress
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"emailAddress"
argument_list|,
name|emailAddress
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets the name of a parameter to be passed in the exchange In Body.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|inBody (String inBody)
specifier|default
name|GoogleCalendarEndpointProducerBuilder
name|inBody
parameter_list|(
name|String
name|inBody
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"inBody"
argument_list|,
name|inBody
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The name of the p12 file which has the private key to use with the          * Google Service Account.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|p12FileName ( String p12FileName)
specifier|default
name|GoogleCalendarEndpointProducerBuilder
name|p12FileName
parameter_list|(
name|String
name|p12FileName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"p12FileName"
argument_list|,
name|p12FileName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * OAuth 2 refresh token. Using this, the Google Calendar component can          * obtain a new accessToken whenever the current one expires - a          * necessity if the application is long-lived.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|refreshToken ( String refreshToken)
specifier|default
name|GoogleCalendarEndpointProducerBuilder
name|refreshToken
parameter_list|(
name|String
name|refreshToken
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"refreshToken"
argument_list|,
name|refreshToken
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Specifies the level of permissions you want a calendar application to          * have to a user account. You can separate multiple scopes by comma.          * See https://developers.google.com/google-apps/calendar/auth for more          * info.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|scopes (String scopes)
specifier|default
name|GoogleCalendarEndpointProducerBuilder
name|scopes
parameter_list|(
name|String
name|scopes
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"scopes"
argument_list|,
name|scopes
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The email address of the user the application is trying to          * impersonate in the service account flow.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|user (String user)
specifier|default
name|GoogleCalendarEndpointProducerBuilder
name|user
parameter_list|(
name|String
name|user
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"user"
argument_list|,
name|user
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the producer should be started lazy (on the first message).          * By starting lazy you can use this to allow CamelContext and routes to          * startup in situations where a producer may otherwise fail during          * starting and cause the route to fail being started. By deferring this          * startup to be lazy then the startup failure can be handled during          * routing messages via Camel's routing error handlers. Beware that when          * the first message is processed then creating and starting the          * producer may take a little time and prolong the total processing time          * of the processing.          * The option is a<code>boolean</code> type.          * @group producer          */
DECL|method|lazyStartProducer ( boolean lazyStartProducer)
specifier|default
name|GoogleCalendarEndpointProducerBuilder
name|lazyStartProducer
parameter_list|(
name|boolean
name|lazyStartProducer
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"lazyStartProducer"
argument_list|,
name|lazyStartProducer
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the producer should be started lazy (on the first message).          * By starting lazy you can use this to allow CamelContext and routes to          * startup in situations where a producer may otherwise fail during          * starting and cause the route to fail being started. By deferring this          * startup to be lazy then the startup failure can be handled during          * routing messages via Camel's routing error handlers. Beware that when          * the first message is processed then creating and starting the          * producer may take a little time and prolong the total processing time          * of the processing.          * The option will be converted to a<code>boolean</code> type.          * @group producer          */
DECL|method|lazyStartProducer ( String lazyStartProducer)
specifier|default
name|GoogleCalendarEndpointProducerBuilder
name|lazyStartProducer
parameter_list|(
name|String
name|lazyStartProducer
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"lazyStartProducer"
argument_list|,
name|lazyStartProducer
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint producers for the Google Calendar      * component.      */
DECL|interface|AdvancedGoogleCalendarEndpointProducerBuilder
specifier|public
interface|interface
name|AdvancedGoogleCalendarEndpointProducerBuilder
extends|extends
name|EndpointProducerBuilder
block|{
DECL|method|basic ()
specifier|default
name|GoogleCalendarEndpointProducerBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|GoogleCalendarEndpointProducerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          * The option is a<code>boolean</code> type.          * @group advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedGoogleCalendarEndpointProducerBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          * The option will be converted to a<code>boolean</code> type.          * @group advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedGoogleCalendarEndpointProducerBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          * The option is a<code>boolean</code> type.          * @group advanced          */
DECL|method|synchronous ( boolean synchronous)
specifier|default
name|AdvancedGoogleCalendarEndpointProducerBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          * The option will be converted to a<code>boolean</code> type.          * @group advanced          */
DECL|method|synchronous ( String synchronous)
specifier|default
name|AdvancedGoogleCalendarEndpointProducerBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Builder for endpoint for the Google Calendar component.      */
DECL|interface|GoogleCalendarEndpointBuilder
specifier|public
interface|interface
name|GoogleCalendarEndpointBuilder
extends|extends
name|GoogleCalendarEndpointConsumerBuilder
extends|,
name|GoogleCalendarEndpointProducerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedGoogleCalendarEndpointBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedGoogleCalendarEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * What kind of operation to perform.          * The option is a          *<code>org.apache.camel.component.google.calendar.internal.GoogleCalendarApiName</code> type.          * @group common          */
DECL|method|apiName ( GoogleCalendarApiName apiName)
specifier|default
name|GoogleCalendarEndpointBuilder
name|apiName
parameter_list|(
name|GoogleCalendarApiName
name|apiName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"apiName"
argument_list|,
name|apiName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * What kind of operation to perform.          * The option will be converted to a          *<code>org.apache.camel.component.google.calendar.internal.GoogleCalendarApiName</code> type.          * @group common          */
DECL|method|apiName (String apiName)
specifier|default
name|GoogleCalendarEndpointBuilder
name|apiName
parameter_list|(
name|String
name|apiName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"apiName"
argument_list|,
name|apiName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * What sub operation to use for the selected operation.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|methodName (String methodName)
specifier|default
name|GoogleCalendarEndpointBuilder
name|methodName
parameter_list|(
name|String
name|methodName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"methodName"
argument_list|,
name|methodName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * OAuth 2 access token. This typically expires after an hour so          * refreshToken is recommended for long term usage.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|accessToken (String accessToken)
specifier|default
name|GoogleCalendarEndpointBuilder
name|accessToken
parameter_list|(
name|String
name|accessToken
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"accessToken"
argument_list|,
name|accessToken
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Google calendar application name. Example would be          * camel-google-calendar/1.0.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|applicationName ( String applicationName)
specifier|default
name|GoogleCalendarEndpointBuilder
name|applicationName
parameter_list|(
name|String
name|applicationName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"applicationName"
argument_list|,
name|applicationName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Client ID of the calendar application.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|clientId (String clientId)
specifier|default
name|GoogleCalendarEndpointBuilder
name|clientId
parameter_list|(
name|String
name|clientId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"clientId"
argument_list|,
name|clientId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Client secret of the calendar application.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|clientSecret (String clientSecret)
specifier|default
name|GoogleCalendarEndpointBuilder
name|clientSecret
parameter_list|(
name|String
name|clientSecret
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"clientSecret"
argument_list|,
name|clientSecret
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The emailAddress of the Google Service Account.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|emailAddress (String emailAddress)
specifier|default
name|GoogleCalendarEndpointBuilder
name|emailAddress
parameter_list|(
name|String
name|emailAddress
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"emailAddress"
argument_list|,
name|emailAddress
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets the name of a parameter to be passed in the exchange In Body.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|inBody (String inBody)
specifier|default
name|GoogleCalendarEndpointBuilder
name|inBody
parameter_list|(
name|String
name|inBody
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"inBody"
argument_list|,
name|inBody
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The name of the p12 file which has the private key to use with the          * Google Service Account.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|p12FileName (String p12FileName)
specifier|default
name|GoogleCalendarEndpointBuilder
name|p12FileName
parameter_list|(
name|String
name|p12FileName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"p12FileName"
argument_list|,
name|p12FileName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * OAuth 2 refresh token. Using this, the Google Calendar component can          * obtain a new accessToken whenever the current one expires - a          * necessity if the application is long-lived.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|refreshToken (String refreshToken)
specifier|default
name|GoogleCalendarEndpointBuilder
name|refreshToken
parameter_list|(
name|String
name|refreshToken
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"refreshToken"
argument_list|,
name|refreshToken
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Specifies the level of permissions you want a calendar application to          * have to a user account. You can separate multiple scopes by comma.          * See https://developers.google.com/google-apps/calendar/auth for more          * info.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|scopes (String scopes)
specifier|default
name|GoogleCalendarEndpointBuilder
name|scopes
parameter_list|(
name|String
name|scopes
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"scopes"
argument_list|,
name|scopes
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The email address of the user the application is trying to          * impersonate in the service account flow.          * The option is a<code>java.lang.String</code> type.          * @group common          */
DECL|method|user (String user)
specifier|default
name|GoogleCalendarEndpointBuilder
name|user
parameter_list|(
name|String
name|user
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"user"
argument_list|,
name|user
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint for the Google Calendar component.      */
DECL|interface|AdvancedGoogleCalendarEndpointBuilder
specifier|public
interface|interface
name|AdvancedGoogleCalendarEndpointBuilder
extends|extends
name|AdvancedGoogleCalendarEndpointConsumerBuilder
extends|,
name|AdvancedGoogleCalendarEndpointProducerBuilder
block|{
DECL|method|basic ()
specifier|default
name|GoogleCalendarEndpointBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|GoogleCalendarEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          * The option is a<code>boolean</code> type.          * @group advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedGoogleCalendarEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          * The option will be converted to a<code>boolean</code> type.          * @group advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedGoogleCalendarEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          * The option is a<code>boolean</code> type.          * @group advanced          */
DECL|method|synchronous ( boolean synchronous)
specifier|default
name|AdvancedGoogleCalendarEndpointBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          * The option will be converted to a<code>boolean</code> type.          * @group advanced          */
DECL|method|synchronous ( String synchronous)
specifier|default
name|AdvancedGoogleCalendarEndpointBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Proxy enum for      *<code>org.apache.camel.component.google.calendar.internal.GoogleCalendarApiName</code> enum.      */
DECL|enum|GoogleCalendarApiName
specifier|static
enum|enum
name|GoogleCalendarApiName
block|{
DECL|enumConstant|ACL
DECL|enumConstant|LIST
DECL|enumConstant|CALENDARS
DECL|enumConstant|CHANNELS
DECL|enumConstant|COLORS
DECL|enumConstant|FREEBUSY
DECL|enumConstant|EVENTS
DECL|enumConstant|SETTINGS
name|ACL
block|,
name|LIST
block|,
name|CALENDARS
block|,
name|CHANNELS
block|,
name|COLORS
block|,
name|FREEBUSY
block|,
name|EVENTS
block|,
name|SETTINGS
block|;     }
comment|/**      * The google-calendar component provides access to Google Calendar. Creates      * a builder to build endpoints for the Google Calendar component.      */
DECL|method|googleCalendar (String path)
specifier|default
name|GoogleCalendarEndpointBuilder
name|googleCalendar
parameter_list|(
name|String
name|path
parameter_list|)
block|{
class|class
name|GoogleCalendarEndpointBuilderImpl
extends|extends
name|AbstractEndpointBuilder
implements|implements
name|GoogleCalendarEndpointBuilder
implements|,
name|AdvancedGoogleCalendarEndpointBuilder
block|{
specifier|public
name|GoogleCalendarEndpointBuilderImpl
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|super
argument_list|(
literal|"google-calendar"
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|new
name|GoogleCalendarEndpointBuilderImpl
argument_list|(
name|path
argument_list|)
return|;
block|}
block|}
end_interface

end_unit

