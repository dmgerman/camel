begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.builder.endpoint.dsl
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|dsl
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Generated
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointConsumerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointProducerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|AbstractEndpointBuilder
import|;
end_import

begin_comment
comment|/**  * The aws-sdb component is for storing and retrieving data from/to Amazon's SDB  * service.  *   * Generated by camel-package-maven-plugin - do not edit this file!  */
end_comment

begin_interface
annotation|@
name|Generated
argument_list|(
literal|"org.apache.camel.maven.packaging.EndpointDslMojo"
argument_list|)
DECL|interface|SdbEndpointBuilderFactory
specifier|public
interface|interface
name|SdbEndpointBuilderFactory
block|{
comment|/**      * Builder for endpoint for the AWS SimpleDB component.      */
DECL|interface|SdbEndpointBuilder
specifier|public
interface|interface
name|SdbEndpointBuilder
extends|extends
name|EndpointProducerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedSdbEndpointBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedSdbEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * The name of the domain currently worked with.          * The option is a<code>java.lang.String</code> type.          * @group producer          */
DECL|method|domainName (String domainName)
specifier|default
name|SdbEndpointBuilder
name|domainName
parameter_list|(
name|String
name|domainName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"domainName"
argument_list|,
name|domainName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Amazon AWS Access Key.          * The option is a<code>java.lang.String</code> type.          * @group producer          */
DECL|method|accessKey (String accessKey)
specifier|default
name|SdbEndpointBuilder
name|accessKey
parameter_list|(
name|String
name|accessKey
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"accessKey"
argument_list|,
name|accessKey
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To use the AmazonSimpleDB as the client.          * The option is a          *<code>com.amazonaws.services.simpledb.AmazonSimpleDB</code> type.          * @group producer          */
DECL|method|amazonSDBClient (Object amazonSDBClient)
specifier|default
name|SdbEndpointBuilder
name|amazonSDBClient
parameter_list|(
name|Object
name|amazonSDBClient
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"amazonSDBClient"
argument_list|,
name|amazonSDBClient
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To use the AmazonSimpleDB as the client.          * The option will be converted to a          *<code>com.amazonaws.services.simpledb.AmazonSimpleDB</code> type.          * @group producer          */
DECL|method|amazonSDBClient (String amazonSDBClient)
specifier|default
name|SdbEndpointBuilder
name|amazonSDBClient
parameter_list|(
name|String
name|amazonSDBClient
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"amazonSDBClient"
argument_list|,
name|amazonSDBClient
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Determines whether or not strong consistency should be enforced when          * data is read.          * The option is a<code>boolean</code> type.          * @group producer          */
DECL|method|consistentRead (boolean consistentRead)
specifier|default
name|SdbEndpointBuilder
name|consistentRead
parameter_list|(
name|boolean
name|consistentRead
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"consistentRead"
argument_list|,
name|consistentRead
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Determines whether or not strong consistency should be enforced when          * data is read.          * The option will be converted to a<code>boolean</code> type.          * @group producer          */
DECL|method|consistentRead (String consistentRead)
specifier|default
name|SdbEndpointBuilder
name|consistentRead
parameter_list|(
name|String
name|consistentRead
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"consistentRead"
argument_list|,
name|consistentRead
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The maximum number of domain names you want returned. The range is 1          * to 100.          * The option is a<code>java.lang.Integer</code> type.          * @group producer          */
DECL|method|maxNumberOfDomains (Integer maxNumberOfDomains)
specifier|default
name|SdbEndpointBuilder
name|maxNumberOfDomains
parameter_list|(
name|Integer
name|maxNumberOfDomains
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"maxNumberOfDomains"
argument_list|,
name|maxNumberOfDomains
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The maximum number of domain names you want returned. The range is 1          * to 100.          * The option will be converted to a<code>java.lang.Integer</code>          * type.          * @group producer          */
DECL|method|maxNumberOfDomains (String maxNumberOfDomains)
specifier|default
name|SdbEndpointBuilder
name|maxNumberOfDomains
parameter_list|(
name|String
name|maxNumberOfDomains
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"maxNumberOfDomains"
argument_list|,
name|maxNumberOfDomains
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Operation to perform.          * The option is a          *<code>org.apache.camel.component.aws.sdb.SdbOperations</code> type.          * @group producer          */
DECL|method|operation (SdbOperations operation)
specifier|default
name|SdbEndpointBuilder
name|operation
parameter_list|(
name|SdbOperations
name|operation
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"operation"
argument_list|,
name|operation
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Operation to perform.          * The option will be converted to a          *<code>org.apache.camel.component.aws.sdb.SdbOperations</code> type.          * @group producer          */
DECL|method|operation (String operation)
specifier|default
name|SdbEndpointBuilder
name|operation
parameter_list|(
name|String
name|operation
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"operation"
argument_list|,
name|operation
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To define a proxy host when instantiating the SDB client.          * The option is a<code>java.lang.String</code> type.          * @group producer          */
DECL|method|proxyHost (String proxyHost)
specifier|default
name|SdbEndpointBuilder
name|proxyHost
parameter_list|(
name|String
name|proxyHost
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"proxyHost"
argument_list|,
name|proxyHost
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To define a proxy port when instantiating the SDB client.          * The option is a<code>java.lang.Integer</code> type.          * @group producer          */
DECL|method|proxyPort (Integer proxyPort)
specifier|default
name|SdbEndpointBuilder
name|proxyPort
parameter_list|(
name|Integer
name|proxyPort
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"proxyPort"
argument_list|,
name|proxyPort
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To define a proxy port when instantiating the SDB client.          * The option will be converted to a<code>java.lang.Integer</code>          * type.          * @group producer          */
DECL|method|proxyPort (String proxyPort)
specifier|default
name|SdbEndpointBuilder
name|proxyPort
parameter_list|(
name|String
name|proxyPort
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"proxyPort"
argument_list|,
name|proxyPort
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The region in which SDB client needs to work.          * The option is a<code>java.lang.String</code> type.          * @group producer          */
DECL|method|region (String region)
specifier|default
name|SdbEndpointBuilder
name|region
parameter_list|(
name|String
name|region
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"region"
argument_list|,
name|region
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Amazon AWS Secret Key.          * The option is a<code>java.lang.String</code> type.          * @group producer          */
DECL|method|secretKey (String secretKey)
specifier|default
name|SdbEndpointBuilder
name|secretKey
parameter_list|(
name|String
name|secretKey
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"secretKey"
argument_list|,
name|secretKey
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint for the AWS SimpleDB component.      */
DECL|interface|AdvancedSdbEndpointBuilder
specifier|public
interface|interface
name|AdvancedSdbEndpointBuilder
extends|extends
name|EndpointProducerBuilder
block|{
DECL|method|basic ()
specifier|default
name|SdbEndpointBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|SdbEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          * The option is a<code>boolean</code> type.          * @group advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedSdbEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          * The option will be converted to a<code>boolean</code> type.          * @group advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedSdbEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          * The option is a<code>boolean</code> type.          * @group advanced          */
DECL|method|synchronous (boolean synchronous)
specifier|default
name|AdvancedSdbEndpointBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          * The option will be converted to a<code>boolean</code> type.          * @group advanced          */
DECL|method|synchronous (String synchronous)
specifier|default
name|AdvancedSdbEndpointBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Proxy enum for      *<code>org.apache.camel.component.aws.sdb.SdbOperations</code> enum.      */
DECL|enum|SdbOperations
specifier|static
enum|enum
name|SdbOperations
block|{
DECL|enumConstant|BatchDeleteAttributes
DECL|enumConstant|BatchPutAttributes
DECL|enumConstant|DeleteAttributes
DECL|enumConstant|DeleteDomain
DECL|enumConstant|DomainMetadata
DECL|enumConstant|GetAttributes
DECL|enumConstant|ListDomains
DECL|enumConstant|PutAttributes
DECL|enumConstant|Select
name|BatchDeleteAttributes
block|,
name|BatchPutAttributes
block|,
name|DeleteAttributes
block|,
name|DeleteDomain
block|,
name|DomainMetadata
block|,
name|GetAttributes
block|,
name|ListDomains
block|,
name|PutAttributes
block|,
name|Select
block|;     }
comment|/**      * The aws-sdb component is for storing and retrieving data from/to Amazon's      * SDB service. Creates a builder to build endpoints for the AWS SimpleDB      * component.      */
DECL|method|sdb (String path)
specifier|default
name|SdbEndpointBuilder
name|sdb
parameter_list|(
name|String
name|path
parameter_list|)
block|{
class|class
name|SdbEndpointBuilderImpl
extends|extends
name|AbstractEndpointBuilder
implements|implements
name|SdbEndpointBuilder
implements|,
name|AdvancedSdbEndpointBuilder
block|{
specifier|public
name|SdbEndpointBuilderImpl
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|super
argument_list|(
literal|"aws-sdb"
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|new
name|SdbEndpointBuilderImpl
argument_list|(
name|path
argument_list|)
return|;
block|}
block|}
end_interface

end_unit

