begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.builder.endpoint.dsl
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|dsl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Generated
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointConsumerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointProducerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|AbstractEndpointBuilder
import|;
end_import

begin_comment
comment|/**  * The servicenow component is used to integrate Camel with ServiceNow cloud  * services.  *   * Generated by camel-package-maven-plugin - do not edit this file!  */
end_comment

begin_interface
annotation|@
name|Generated
argument_list|(
literal|"org.apache.camel.maven.packaging.EndpointDslMojo"
argument_list|)
DECL|interface|ServiceNowEndpointBuilderFactory
specifier|public
interface|interface
name|ServiceNowEndpointBuilderFactory
block|{
comment|/**      * Builder for endpoint for the ServiceNow component.      */
DECL|interface|ServiceNowEndpointBuilder
specifier|public
interface|interface
name|ServiceNowEndpointBuilder
extends|extends
name|EndpointProducerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedServiceNowEndpointBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedServiceNowEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * The ServiceNow instance name.          * The option is a<code>java.lang.String</code> type.          * @group producer          */
DECL|method|instanceName (String instanceName)
specifier|default
name|ServiceNowEndpointBuilder
name|instanceName
parameter_list|(
name|String
name|instanceName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"instanceName"
argument_list|,
name|instanceName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this parameter to true to return only scorecards where the          * indicator Display field is selected. Set this parameter to all to          * return scorecards with any Display field value. This parameter is          * true by default.          * The option is a<code>java.lang.String</code> type.          * @group producer          */
DECL|method|display (String display)
specifier|default
name|ServiceNowEndpointBuilder
name|display
parameter_list|(
name|String
name|display
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"display"
argument_list|,
name|display
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Return the display value (true), actual value (false), or both (all)          * for reference fields (default: false).          * The option is a<code>java.lang.String</code> type.          * @group producer          */
DECL|method|displayValue (String displayValue)
specifier|default
name|ServiceNowEndpointBuilder
name|displayValue
parameter_list|(
name|String
name|displayValue
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"displayValue"
argument_list|,
name|displayValue
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * True to exclude Table API links for reference fields (default:          * false).          * The option is a<code>java.lang.Boolean</code> type.          * @group producer          */
DECL|method|excludeReferenceLink ( Boolean excludeReferenceLink)
specifier|default
name|ServiceNowEndpointBuilder
name|excludeReferenceLink
parameter_list|(
name|Boolean
name|excludeReferenceLink
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"excludeReferenceLink"
argument_list|,
name|excludeReferenceLink
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * True to exclude Table API links for reference fields (default:          * false).          * The option will be converted to a<code>java.lang.Boolean</code>          * type.          * @group producer          */
DECL|method|excludeReferenceLink ( String excludeReferenceLink)
specifier|default
name|ServiceNowEndpointBuilder
name|excludeReferenceLink
parameter_list|(
name|String
name|excludeReferenceLink
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"excludeReferenceLink"
argument_list|,
name|excludeReferenceLink
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this parameter to true to return only scorecards that are          * favorites of the querying user.          * The option is a<code>java.lang.Boolean</code> type.          * @group producer          */
DECL|method|favorites (Boolean favorites)
specifier|default
name|ServiceNowEndpointBuilder
name|favorites
parameter_list|(
name|Boolean
name|favorites
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"favorites"
argument_list|,
name|favorites
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this parameter to true to return only scorecards that are          * favorites of the querying user.          * The option will be converted to a<code>java.lang.Boolean</code>          * type.          * @group producer          */
DECL|method|favorites (String favorites)
specifier|default
name|ServiceNowEndpointBuilder
name|favorites
parameter_list|(
name|String
name|favorites
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"favorites"
argument_list|,
name|favorites
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this parameter to true to always return all available aggregates          * for an indicator, including when an aggregate has already been          * applied. If a value is not specified, this parameter defaults to          * false and returns no aggregates.          * The option is a<code>java.lang.Boolean</code> type.          * @group producer          */
DECL|method|includeAggregates ( Boolean includeAggregates)
specifier|default
name|ServiceNowEndpointBuilder
name|includeAggregates
parameter_list|(
name|Boolean
name|includeAggregates
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"includeAggregates"
argument_list|,
name|includeAggregates
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this parameter to true to always return all available aggregates          * for an indicator, including when an aggregate has already been          * applied. If a value is not specified, this parameter defaults to          * false and returns no aggregates.          * The option will be converted to a<code>java.lang.Boolean</code>          * type.          * @group producer          */
DECL|method|includeAggregates ( String includeAggregates)
specifier|default
name|ServiceNowEndpointBuilder
name|includeAggregates
parameter_list|(
name|String
name|includeAggregates
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"includeAggregates"
argument_list|,
name|includeAggregates
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this parameter to true to return all available aggregates for an          * indicator when no aggregate has been applied. If a value is not          * specified, this parameter defaults to false and returns no          * aggregates.          * The option is a<code>java.lang.Boolean</code> type.          * @group producer          */
DECL|method|includeAvailableAggregates ( Boolean includeAvailableAggregates)
specifier|default
name|ServiceNowEndpointBuilder
name|includeAvailableAggregates
parameter_list|(
name|Boolean
name|includeAvailableAggregates
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"includeAvailableAggregates"
argument_list|,
name|includeAvailableAggregates
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this parameter to true to return all available aggregates for an          * indicator when no aggregate has been applied. If a value is not          * specified, this parameter defaults to false and returns no          * aggregates.          * The option will be converted to a<code>java.lang.Boolean</code>          * type.          * @group producer          */
DECL|method|includeAvailableAggregates ( String includeAvailableAggregates)
specifier|default
name|ServiceNowEndpointBuilder
name|includeAvailableAggregates
parameter_list|(
name|String
name|includeAvailableAggregates
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"includeAvailableAggregates"
argument_list|,
name|includeAvailableAggregates
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this parameter to true to return all available breakdowns for an          * indicator. If a value is not specified, this parameter defaults to          * false and returns no breakdowns.          * The option is a<code>java.lang.Boolean</code> type.          * @group producer          */
DECL|method|includeAvailableBreakdowns ( Boolean includeAvailableBreakdowns)
specifier|default
name|ServiceNowEndpointBuilder
name|includeAvailableBreakdowns
parameter_list|(
name|Boolean
name|includeAvailableBreakdowns
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"includeAvailableBreakdowns"
argument_list|,
name|includeAvailableBreakdowns
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this parameter to true to return all available breakdowns for an          * indicator. If a value is not specified, this parameter defaults to          * false and returns no breakdowns.          * The option will be converted to a<code>java.lang.Boolean</code>          * type.          * @group producer          */
DECL|method|includeAvailableBreakdowns ( String includeAvailableBreakdowns)
specifier|default
name|ServiceNowEndpointBuilder
name|includeAvailableBreakdowns
parameter_list|(
name|String
name|includeAvailableBreakdowns
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"includeAvailableBreakdowns"
argument_list|,
name|includeAvailableBreakdowns
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this parameter to true to return all notes associated with the          * score. The note element contains the note text as well as the author          * and timestamp when the note was added.          * The option is a<code>java.lang.Boolean</code> type.          * @group producer          */
DECL|method|includeScoreNotes ( Boolean includeScoreNotes)
specifier|default
name|ServiceNowEndpointBuilder
name|includeScoreNotes
parameter_list|(
name|Boolean
name|includeScoreNotes
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"includeScoreNotes"
argument_list|,
name|includeScoreNotes
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this parameter to true to return all notes associated with the          * score. The note element contains the note text as well as the author          * and timestamp when the note was added.          * The option will be converted to a<code>java.lang.Boolean</code>          * type.          * @group producer          */
DECL|method|includeScoreNotes ( String includeScoreNotes)
specifier|default
name|ServiceNowEndpointBuilder
name|includeScoreNotes
parameter_list|(
name|String
name|includeScoreNotes
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"includeScoreNotes"
argument_list|,
name|includeScoreNotes
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this parameter to true to return all scores for a scorecard. If a          * value is not specified, this parameter defaults to false and returns          * only the most recent score value.          * The option is a<code>java.lang.Boolean</code> type.          * @group producer          */
DECL|method|includeScores (Boolean includeScores)
specifier|default
name|ServiceNowEndpointBuilder
name|includeScores
parameter_list|(
name|Boolean
name|includeScores
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"includeScores"
argument_list|,
name|includeScores
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this parameter to true to return all scores for a scorecard. If a          * value is not specified, this parameter defaults to false and returns          * only the most recent score value.          * The option will be converted to a<code>java.lang.Boolean</code>          * type.          * @group producer          */
DECL|method|includeScores (String includeScores)
specifier|default
name|ServiceNowEndpointBuilder
name|includeScores
parameter_list|(
name|String
name|includeScores
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"includeScores"
argument_list|,
name|includeScores
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * True to set raw value of input fields (default: false).          * The option is a<code>java.lang.Boolean</code> type.          * @group producer          */
DECL|method|inputDisplayValue ( Boolean inputDisplayValue)
specifier|default
name|ServiceNowEndpointBuilder
name|inputDisplayValue
parameter_list|(
name|Boolean
name|inputDisplayValue
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"inputDisplayValue"
argument_list|,
name|inputDisplayValue
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * True to set raw value of input fields (default: false).          * The option will be converted to a<code>java.lang.Boolean</code>          * type.          * @group producer          */
DECL|method|inputDisplayValue ( String inputDisplayValue)
specifier|default
name|ServiceNowEndpointBuilder
name|inputDisplayValue
parameter_list|(
name|String
name|inputDisplayValue
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"inputDisplayValue"
argument_list|,
name|inputDisplayValue
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this parameter to true to return only scorecards for key          * indicators.          * The option is a<code>java.lang.Boolean</code> type.          * @group producer          */
DECL|method|key (Boolean key)
specifier|default
name|ServiceNowEndpointBuilder
name|key
parameter_list|(
name|Boolean
name|key
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"key"
argument_list|,
name|key
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this parameter to true to return only scorecards for key          * indicators.          * The option will be converted to a<code>java.lang.Boolean</code>          * type.          * @group producer          */
DECL|method|key (String key)
specifier|default
name|ServiceNowEndpointBuilder
name|key
parameter_list|(
name|String
name|key
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"key"
argument_list|,
name|key
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Defines both request and response models.          * The option is a<code>java.util.Map&lt;java.lang.String,          * java.lang.Class&lt;java.lang.Object&gt;&gt;</code> type.          * @group producer          */
DECL|method|models ( Map<String, Class<Object>> models)
specifier|default
name|ServiceNowEndpointBuilder
name|models
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Class
argument_list|<
name|Object
argument_list|>
argument_list|>
name|models
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"models"
argument_list|,
name|models
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Defines both request and response models.          * The option will be converted to a          *<code>java.util.Map&lt;java.lang.String,          * java.lang.Class&lt;java.lang.Object&gt;&gt;</code> type.          * @group producer          */
DECL|method|models (String models)
specifier|default
name|ServiceNowEndpointBuilder
name|models
parameter_list|(
name|String
name|models
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"models"
argument_list|,
name|models
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Enter the maximum number of scorecards each query can return. By          * default this value is 10, and the maximum is 100.          * The option is a<code>java.lang.Integer</code> type.          * @group producer          */
DECL|method|perPage (Integer perPage)
specifier|default
name|ServiceNowEndpointBuilder
name|perPage
parameter_list|(
name|Integer
name|perPage
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"perPage"
argument_list|,
name|perPage
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Enter the maximum number of scorecards each query can return. By          * default this value is 10, and the maximum is 100.          * The option will be converted to a<code>java.lang.Integer</code>          * type.          * @group producer          */
DECL|method|perPage (String perPage)
specifier|default
name|ServiceNowEndpointBuilder
name|perPage
parameter_list|(
name|String
name|perPage
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"perPage"
argument_list|,
name|perPage
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ServiceNow release to target, default to Helsinki See          * https://docs.servicenow.com.          * The option is a          *<code>org.apache.camel.component.servicenow.ServiceNowRelease</code>          * type.          * @group producer          */
DECL|method|release (ServiceNowRelease release)
specifier|default
name|ServiceNowEndpointBuilder
name|release
parameter_list|(
name|ServiceNowRelease
name|release
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"release"
argument_list|,
name|release
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ServiceNow release to target, default to Helsinki See          * https://docs.servicenow.com.          * The option will be converted to a          *<code>org.apache.camel.component.servicenow.ServiceNowRelease</code>          * type.          * @group producer          */
DECL|method|release (String release)
specifier|default
name|ServiceNowEndpointBuilder
name|release
parameter_list|(
name|String
name|release
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"release"
argument_list|,
name|release
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Defines the request model.          * The option is a<code>java.util.Map&lt;java.lang.String,          * java.lang.Class&lt;java.lang.Object&gt;&gt;</code> type.          * @group producer          */
DECL|method|requestModels ( Map<String, Class<Object>> requestModels)
specifier|default
name|ServiceNowEndpointBuilder
name|requestModels
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Class
argument_list|<
name|Object
argument_list|>
argument_list|>
name|requestModels
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"requestModels"
argument_list|,
name|requestModels
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Defines the request model.          * The option will be converted to a          *<code>java.util.Map&lt;java.lang.String,          * java.lang.Class&lt;java.lang.Object&gt;&gt;</code> type.          * @group producer          */
DECL|method|requestModels (String requestModels)
specifier|default
name|ServiceNowEndpointBuilder
name|requestModels
parameter_list|(
name|String
name|requestModels
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"requestModels"
argument_list|,
name|requestModels
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The default resource, can be overridden by header          * CamelServiceNowResource.          * The option is a<code>java.lang.String</code> type.          * @group producer          */
DECL|method|resource (String resource)
specifier|default
name|ServiceNowEndpointBuilder
name|resource
parameter_list|(
name|String
name|resource
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"resource"
argument_list|,
name|resource
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Defines the response model.          * The option is a<code>java.util.Map&lt;java.lang.String,          * java.lang.Class&lt;java.lang.Object&gt;&gt;</code> type.          * @group producer          */
DECL|method|responseModels ( Map<String, Class<Object>> responseModels)
specifier|default
name|ServiceNowEndpointBuilder
name|responseModels
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Class
argument_list|<
name|Object
argument_list|>
argument_list|>
name|responseModels
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"responseModels"
argument_list|,
name|responseModels
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Defines the response model.          * The option will be converted to a          *<code>java.util.Map&lt;java.lang.String,          * java.lang.Class&lt;java.lang.Object&gt;&gt;</code> type.          * @group producer          */
DECL|method|responseModels (String responseModels)
specifier|default
name|ServiceNowEndpointBuilder
name|responseModels
parameter_list|(
name|String
name|responseModels
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"responseModels"
argument_list|,
name|responseModels
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Specify the value to use when sorting results. By default, queries          * sort records by value.          * The option is a<code>java.lang.String</code> type.          * @group producer          */
DECL|method|sortBy (String sortBy)
specifier|default
name|ServiceNowEndpointBuilder
name|sortBy
parameter_list|(
name|String
name|sortBy
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"sortBy"
argument_list|,
name|sortBy
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Specify the sort direction, ascending or descending. By default,          * queries sort records in descending order. Use sysparm_sortdir=asc to          * sort in ascending order.          * The option is a<code>java.lang.String</code> type.          * @group producer          */
DECL|method|sortDir (String sortDir)
specifier|default
name|ServiceNowEndpointBuilder
name|sortDir
parameter_list|(
name|String
name|sortDir
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"sortDir"
argument_list|,
name|sortDir
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * True to suppress auto generation of system fields (default: false).          * The option is a<code>java.lang.Boolean</code> type.          * @group producer          */
DECL|method|suppressAutoSysField ( Boolean suppressAutoSysField)
specifier|default
name|ServiceNowEndpointBuilder
name|suppressAutoSysField
parameter_list|(
name|Boolean
name|suppressAutoSysField
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"suppressAutoSysField"
argument_list|,
name|suppressAutoSysField
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * True to suppress auto generation of system fields (default: false).          * The option will be converted to a<code>java.lang.Boolean</code>          * type.          * @group producer          */
DECL|method|suppressAutoSysField ( String suppressAutoSysField)
specifier|default
name|ServiceNowEndpointBuilder
name|suppressAutoSysField
parameter_list|(
name|String
name|suppressAutoSysField
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"suppressAutoSysField"
argument_list|,
name|suppressAutoSysField
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this value to true to remove the Link header from the response.          * The Link header allows you to request additional pages of data when          * the number of records matching your query exceeds the query limit.          * The option is a<code>java.lang.Boolean</code> type.          * @group producer          */
DECL|method|suppressPaginationHeader ( Boolean suppressPaginationHeader)
specifier|default
name|ServiceNowEndpointBuilder
name|suppressPaginationHeader
parameter_list|(
name|Boolean
name|suppressPaginationHeader
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"suppressPaginationHeader"
argument_list|,
name|suppressPaginationHeader
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this value to true to remove the Link header from the response.          * The Link header allows you to request additional pages of data when          * the number of records matching your query exceeds the query limit.          * The option will be converted to a<code>java.lang.Boolean</code>          * type.          * @group producer          */
DECL|method|suppressPaginationHeader ( String suppressPaginationHeader)
specifier|default
name|ServiceNowEndpointBuilder
name|suppressPaginationHeader
parameter_list|(
name|String
name|suppressPaginationHeader
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"suppressPaginationHeader"
argument_list|,
name|suppressPaginationHeader
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The default table, can be overridden by header CamelServiceNowTable.          * The option is a<code>java.lang.String</code> type.          * @group producer          */
DECL|method|table (String table)
specifier|default
name|ServiceNowEndpointBuilder
name|table
parameter_list|(
name|String
name|table
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"table"
argument_list|,
name|table
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this parameter to true to return only scorecards that have a          * target.          * The option is a<code>java.lang.Boolean</code> type.          * @group producer          */
DECL|method|target (Boolean target)
specifier|default
name|ServiceNowEndpointBuilder
name|target
parameter_list|(
name|Boolean
name|target
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"target"
argument_list|,
name|target
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this parameter to true to return only scorecards that have a          * target.          * The option will be converted to a<code>java.lang.Boolean</code>          * type.          * @group producer          */
DECL|method|target (String target)
specifier|default
name|ServiceNowEndpointBuilder
name|target
parameter_list|(
name|String
name|target
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"target"
argument_list|,
name|target
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Gets only those categories whose parent is a catalog.          * The option is a<code>java.lang.Boolean</code> type.          * @group producer          */
DECL|method|topLevelOnly (Boolean topLevelOnly)
specifier|default
name|ServiceNowEndpointBuilder
name|topLevelOnly
parameter_list|(
name|Boolean
name|topLevelOnly
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"topLevelOnly"
argument_list|,
name|topLevelOnly
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Gets only those categories whose parent is a catalog.          * The option will be converted to a<code>java.lang.Boolean</code>          * type.          * @group producer          */
DECL|method|topLevelOnly (String topLevelOnly)
specifier|default
name|ServiceNowEndpointBuilder
name|topLevelOnly
parameter_list|(
name|String
name|topLevelOnly
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"topLevelOnly"
argument_list|,
name|topLevelOnly
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The proxy host name.          * The option is a<code>java.lang.String</code> type.          * @group proxy          */
DECL|method|proxyHost (String proxyHost)
specifier|default
name|ServiceNowEndpointBuilder
name|proxyHost
parameter_list|(
name|String
name|proxyHost
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"proxyHost"
argument_list|,
name|proxyHost
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The proxy port number.          * The option is a<code>java.lang.Integer</code> type.          * @group proxy          */
DECL|method|proxyPort (Integer proxyPort)
specifier|default
name|ServiceNowEndpointBuilder
name|proxyPort
parameter_list|(
name|Integer
name|proxyPort
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"proxyPort"
argument_list|,
name|proxyPort
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The proxy port number.          * The option will be converted to a<code>java.lang.Integer</code>          * type.          * @group proxy          */
DECL|method|proxyPort (String proxyPort)
specifier|default
name|ServiceNowEndpointBuilder
name|proxyPort
parameter_list|(
name|String
name|proxyPort
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"proxyPort"
argument_list|,
name|proxyPort
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The ServiceNow REST API url.          * The option is a<code>java.lang.String</code> type.          * @group security          */
DECL|method|apiUrl (String apiUrl)
specifier|default
name|ServiceNowEndpointBuilder
name|apiUrl
parameter_list|(
name|String
name|apiUrl
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"apiUrl"
argument_list|,
name|apiUrl
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * OAuth2 ClientID.          * The option is a<code>java.lang.String</code> type.          * @group security          */
DECL|method|oauthClientId (String oauthClientId)
specifier|default
name|ServiceNowEndpointBuilder
name|oauthClientId
parameter_list|(
name|String
name|oauthClientId
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oauthClientId"
argument_list|,
name|oauthClientId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * OAuth2 ClientSecret.          * The option is a<code>java.lang.String</code> type.          * @group security          */
DECL|method|oauthClientSecret ( String oauthClientSecret)
specifier|default
name|ServiceNowEndpointBuilder
name|oauthClientSecret
parameter_list|(
name|String
name|oauthClientSecret
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oauthClientSecret"
argument_list|,
name|oauthClientSecret
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * OAuth token Url.          * The option is a<code>java.lang.String</code> type.          * @group security          */
DECL|method|oauthTokenUrl (String oauthTokenUrl)
specifier|default
name|ServiceNowEndpointBuilder
name|oauthTokenUrl
parameter_list|(
name|String
name|oauthTokenUrl
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"oauthTokenUrl"
argument_list|,
name|oauthTokenUrl
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * ServiceNow account password, MUST be provided.          * The option is a<code>java.lang.String</code> type.          * @group security          */
DECL|method|password (String password)
specifier|default
name|ServiceNowEndpointBuilder
name|password
parameter_list|(
name|String
name|password
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"password"
argument_list|,
name|password
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Password for proxy authentication.          * The option is a<code>java.lang.String</code> type.          * @group security          */
DECL|method|proxyPassword (String proxyPassword)
specifier|default
name|ServiceNowEndpointBuilder
name|proxyPassword
parameter_list|(
name|String
name|proxyPassword
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"proxyPassword"
argument_list|,
name|proxyPassword
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Username for proxy authentication.          * The option is a<code>java.lang.String</code> type.          * @group security          */
DECL|method|proxyUserName (String proxyUserName)
specifier|default
name|ServiceNowEndpointBuilder
name|proxyUserName
parameter_list|(
name|String
name|proxyUserName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"proxyUserName"
argument_list|,
name|proxyUserName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To configure security using SSLContextParameters. See          * http://camel.apache.org/camel-configuration-utilities.html.          * The option is a          *<code>org.apache.camel.support.jsse.SSLContextParameters</code> type.          * @group security          */
DECL|method|sslContextParameters ( Object sslContextParameters)
specifier|default
name|ServiceNowEndpointBuilder
name|sslContextParameters
parameter_list|(
name|Object
name|sslContextParameters
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"sslContextParameters"
argument_list|,
name|sslContextParameters
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To configure security using SSLContextParameters. See          * http://camel.apache.org/camel-configuration-utilities.html.          * The option will be converted to a          *<code>org.apache.camel.support.jsse.SSLContextParameters</code> type.          * @group security          */
DECL|method|sslContextParameters ( String sslContextParameters)
specifier|default
name|ServiceNowEndpointBuilder
name|sslContextParameters
parameter_list|(
name|String
name|sslContextParameters
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"sslContextParameters"
argument_list|,
name|sslContextParameters
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * ServiceNow user account name, MUST be provided.          * The option is a<code>java.lang.String</code> type.          * @group security          */
DECL|method|userName (String userName)
specifier|default
name|ServiceNowEndpointBuilder
name|userName
parameter_list|(
name|String
name|userName
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"userName"
argument_list|,
name|userName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint for the ServiceNow component.      */
DECL|interface|AdvancedServiceNowEndpointBuilder
specifier|public
interface|interface
name|AdvancedServiceNowEndpointBuilder
extends|extends
name|EndpointProducerBuilder
block|{
DECL|method|basic ()
specifier|default
name|ServiceNowEndpointBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|ServiceNowEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * The ServiceNow REST API version, default latest.          * The option is a<code>java.lang.String</code> type.          * @group advanced          */
DECL|method|apiVersion (String apiVersion)
specifier|default
name|AdvancedServiceNowEndpointBuilder
name|apiVersion
parameter_list|(
name|String
name|apiVersion
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"apiVersion"
argument_list|,
name|apiVersion
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          * The option is a<code>boolean</code> type.          * @group advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedServiceNowEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          * The option will be converted to a<code>boolean</code> type.          * @group advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedServiceNowEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The date format used for Json serialization/deserialization.          * The option is a<code>java.lang.String</code> type.          * @group advanced          */
DECL|method|dateFormat (String dateFormat)
specifier|default
name|AdvancedServiceNowEndpointBuilder
name|dateFormat
parameter_list|(
name|String
name|dateFormat
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"dateFormat"
argument_list|,
name|dateFormat
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The date-time format used for Json serialization/deserialization.          * The option is a<code>java.lang.String</code> type.          * @group advanced          */
DECL|method|dateTimeFormat ( String dateTimeFormat)
specifier|default
name|AdvancedServiceNowEndpointBuilder
name|dateTimeFormat
parameter_list|(
name|String
name|dateTimeFormat
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"dateTimeFormat"
argument_list|,
name|dateTimeFormat
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To configure http-client.          * The option is a          *<code>org.apache.cxf.transports.http.configuration.HTTPClientPolicy</code> type.          * @group advanced          */
DECL|method|httpClientPolicy ( Object httpClientPolicy)
specifier|default
name|AdvancedServiceNowEndpointBuilder
name|httpClientPolicy
parameter_list|(
name|Object
name|httpClientPolicy
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpClientPolicy"
argument_list|,
name|httpClientPolicy
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To configure http-client.          * The option will be converted to a          *<code>org.apache.cxf.transports.http.configuration.HTTPClientPolicy</code> type.          * @group advanced          */
DECL|method|httpClientPolicy ( String httpClientPolicy)
specifier|default
name|AdvancedServiceNowEndpointBuilder
name|httpClientPolicy
parameter_list|(
name|String
name|httpClientPolicy
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"httpClientPolicy"
argument_list|,
name|httpClientPolicy
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets Jackson's ObjectMapper to use for request/reply.          * The option is a          *<code>com.fasterxml.jackson.databind.ObjectMapper</code> type.          * @group advanced          */
DECL|method|mapper (Object mapper)
specifier|default
name|AdvancedServiceNowEndpointBuilder
name|mapper
parameter_list|(
name|Object
name|mapper
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"mapper"
argument_list|,
name|mapper
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets Jackson's ObjectMapper to use for request/reply.          * The option will be converted to a          *<code>com.fasterxml.jackson.databind.ObjectMapper</code> type.          * @group advanced          */
DECL|method|mapper (String mapper)
specifier|default
name|AdvancedServiceNowEndpointBuilder
name|mapper
parameter_list|(
name|String
name|mapper
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"mapper"
argument_list|,
name|mapper
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To configure proxy authentication.          * The option is a          *<code>org.apache.cxf.configuration.security.ProxyAuthorizationPolicy</code> type.          * @group advanced          */
DECL|method|proxyAuthorizationPolicy ( Object proxyAuthorizationPolicy)
specifier|default
name|AdvancedServiceNowEndpointBuilder
name|proxyAuthorizationPolicy
parameter_list|(
name|Object
name|proxyAuthorizationPolicy
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"proxyAuthorizationPolicy"
argument_list|,
name|proxyAuthorizationPolicy
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To configure proxy authentication.          * The option will be converted to a          *<code>org.apache.cxf.configuration.security.ProxyAuthorizationPolicy</code> type.          * @group advanced          */
DECL|method|proxyAuthorizationPolicy ( String proxyAuthorizationPolicy)
specifier|default
name|AdvancedServiceNowEndpointBuilder
name|proxyAuthorizationPolicy
parameter_list|(
name|String
name|proxyAuthorizationPolicy
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"proxyAuthorizationPolicy"
argument_list|,
name|proxyAuthorizationPolicy
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this parameter to true to retrieve the target record when using          * import set api. The import set result is then replaced by the target          * record.          * The option is a<code>java.lang.Boolean</code> type.          * @group advanced          */
DECL|method|retrieveTargetRecordOnImport ( Boolean retrieveTargetRecordOnImport)
specifier|default
name|AdvancedServiceNowEndpointBuilder
name|retrieveTargetRecordOnImport
parameter_list|(
name|Boolean
name|retrieveTargetRecordOnImport
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"retrieveTargetRecordOnImport"
argument_list|,
name|retrieveTargetRecordOnImport
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Set this parameter to true to retrieve the target record when using          * import set api. The import set result is then replaced by the target          * record.          * The option will be converted to a<code>java.lang.Boolean</code>          * type.          * @group advanced          */
DECL|method|retrieveTargetRecordOnImport ( String retrieveTargetRecordOnImport)
specifier|default
name|AdvancedServiceNowEndpointBuilder
name|retrieveTargetRecordOnImport
parameter_list|(
name|String
name|retrieveTargetRecordOnImport
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"retrieveTargetRecordOnImport"
argument_list|,
name|retrieveTargetRecordOnImport
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          * The option is a<code>boolean</code> type.          * @group advanced          */
DECL|method|synchronous ( boolean synchronous)
specifier|default
name|AdvancedServiceNowEndpointBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          * The option will be converted to a<code>boolean</code> type.          * @group advanced          */
DECL|method|synchronous (String synchronous)
specifier|default
name|AdvancedServiceNowEndpointBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The time format used for Json serialization/deserialization.          * The option is a<code>java.lang.String</code> type.          * @group advanced          */
DECL|method|timeFormat (String timeFormat)
specifier|default
name|AdvancedServiceNowEndpointBuilder
name|timeFormat
parameter_list|(
name|String
name|timeFormat
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"timeFormat"
argument_list|,
name|timeFormat
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Proxy enum for      *<code>org.apache.camel.component.servicenow.ServiceNowRelease</code>      * enum.      */
DECL|enum|ServiceNowRelease
enum|enum
name|ServiceNowRelease
block|{
DECL|enumConstant|FUJI
name|FUJI
block|,
DECL|enumConstant|GENEVA
name|GENEVA
block|,
DECL|enumConstant|HELSINKI
name|HELSINKI
block|;     }
comment|/**      * The servicenow component is used to integrate Camel with ServiceNow cloud      * services. Creates a builder to build endpoints for the ServiceNow      * component.      */
DECL|method|serviceNow (String path)
specifier|default
name|ServiceNowEndpointBuilder
name|serviceNow
parameter_list|(
name|String
name|path
parameter_list|)
block|{
class|class
name|ServiceNowEndpointBuilderImpl
extends|extends
name|AbstractEndpointBuilder
implements|implements
name|ServiceNowEndpointBuilder
implements|,
name|AdvancedServiceNowEndpointBuilder
block|{
specifier|public
name|ServiceNowEndpointBuilderImpl
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|super
argument_list|(
literal|"servicenow"
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|new
name|ServiceNowEndpointBuilderImpl
argument_list|(
name|path
argument_list|)
return|;
block|}
block|}
end_interface

end_unit

