begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.builder.endpoint.dsl
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|dsl
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Generated
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointConsumerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointProducerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|AbstractEndpointBuilder
import|;
end_import

begin_comment
comment|/**  * A Camel GraphQL Component  *   * Generated by camel-package-maven-plugin - do not edit this file!  */
end_comment

begin_interface
annotation|@
name|Generated
argument_list|(
literal|"org.apache.camel.maven.packaging.EndpointDslMojo"
argument_list|)
DECL|interface|GraphqlEndpointBuilderFactory
specifier|public
interface|interface
name|GraphqlEndpointBuilderFactory
block|{
comment|/**      * Builder for endpoint for the GraphQL component.      */
DECL|interface|GraphqlEndpointBuilder
specifier|public
interface|interface
name|GraphqlEndpointBuilder
extends|extends
name|EndpointProducerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedGraphqlEndpointBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedGraphqlEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * The access token sent in the Authorization header.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: producer          */
DECL|method|accessToken (String accessToken)
specifier|default
name|GraphqlEndpointBuilder
name|accessToken
parameter_list|(
name|String
name|accessToken
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"accessToken"
argument_list|,
name|accessToken
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The query or mutation name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: producer          */
DECL|method|operationName (String operationName)
specifier|default
name|GraphqlEndpointBuilder
name|operationName
parameter_list|(
name|String
name|operationName
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"operationName"
argument_list|,
name|operationName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The password for Basic authentication.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: producer          */
DECL|method|password (String password)
specifier|default
name|GraphqlEndpointBuilder
name|password
parameter_list|(
name|String
name|password
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"password"
argument_list|,
name|password
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The proxy host in the format hostname:port.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: producer          */
DECL|method|proxyHost (String proxyHost)
specifier|default
name|GraphqlEndpointBuilder
name|proxyHost
parameter_list|(
name|String
name|proxyHost
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"proxyHost"
argument_list|,
name|proxyHost
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The query text.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: producer          */
DECL|method|query (String query)
specifier|default
name|GraphqlEndpointBuilder
name|query
parameter_list|(
name|String
name|query
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"query"
argument_list|,
name|query
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The query file name located in the classpath.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: producer          */
DECL|method|queryFile (String queryFile)
specifier|default
name|GraphqlEndpointBuilder
name|queryFile
parameter_list|(
name|String
name|queryFile
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"queryFile"
argument_list|,
name|queryFile
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The username for Basic authentication.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: producer          */
DECL|method|username (String username)
specifier|default
name|GraphqlEndpointBuilder
name|username
parameter_list|(
name|String
name|username
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"username"
argument_list|,
name|username
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The JsonObject instance containing the operation variables.          *           * The option is a:<code>org.apache.camel.util.json.JsonObject</code>          * type.          *           * Group: producer          */
DECL|method|variables (Object variables)
specifier|default
name|GraphqlEndpointBuilder
name|variables
parameter_list|(
name|Object
name|variables
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"variables"
argument_list|,
name|variables
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The JsonObject instance containing the operation variables.          *           * The option will be converted to a          *<code>org.apache.camel.util.json.JsonObject</code> type.          *           * Group: producer          */
DECL|method|variables (String variables)
specifier|default
name|GraphqlEndpointBuilder
name|variables
parameter_list|(
name|String
name|variables
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"variables"
argument_list|,
name|variables
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint for the GraphQL component.      */
DECL|interface|AdvancedGraphqlEndpointBuilder
specifier|public
interface|interface
name|AdvancedGraphqlEndpointBuilder
extends|extends
name|EndpointProducerBuilder
block|{
DECL|method|basic ()
specifier|default
name|GraphqlEndpointBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|GraphqlEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedGraphqlEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedGraphqlEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous (boolean synchronous)
specifier|default
name|AdvancedGraphqlEndpointBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous (String synchronous)
specifier|default
name|AdvancedGraphqlEndpointBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * GraphQL (camel-graphql)      * A Camel GraphQL Component      *       * Category: graphql      * Available as of version: 3.0      * Maven coordinates: org.apache.camel:camel-graphql      *       * Syntax:<code>graphql:httpUri?options</code>      *       * Path parameter: httpUri (required)      * The GraphQL server URI.      */
DECL|method|graphql (String path)
specifier|default
name|GraphqlEndpointBuilder
name|graphql
parameter_list|(
name|String
name|path
parameter_list|)
block|{
class|class
name|GraphqlEndpointBuilderImpl
extends|extends
name|AbstractEndpointBuilder
implements|implements
name|GraphqlEndpointBuilder
implements|,
name|AdvancedGraphqlEndpointBuilder
block|{
specifier|public
name|GraphqlEndpointBuilderImpl
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|super
argument_list|(
literal|"graphql"
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|new
name|GraphqlEndpointBuilderImpl
argument_list|(
name|path
argument_list|)
return|;
block|}
block|}
end_interface

end_unit

