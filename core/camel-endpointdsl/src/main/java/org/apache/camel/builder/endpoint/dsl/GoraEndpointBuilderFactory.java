begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.builder.endpoint.dsl
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|dsl
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Generated
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ExchangePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointConsumerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointProducerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|AbstractEndpointBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ExceptionHandler
import|;
end_import

begin_comment
comment|/**  * The gora component allows you to work with NoSQL databases using the Apache  * Gora framework.  *   * Generated by camel-package-maven-plugin - do not edit this file!  */
end_comment

begin_interface
annotation|@
name|Generated
argument_list|(
literal|"org.apache.camel.maven.packaging.EndpointDslMojo"
argument_list|)
DECL|interface|GoraEndpointBuilderFactory
specifier|public
interface|interface
name|GoraEndpointBuilderFactory
block|{
comment|/**      * Builder for endpoint consumers for the Gora component.      */
DECL|interface|GoraEndpointConsumerBuilder
specifier|public
interface|interface
name|GoraEndpointConsumerBuilder
extends|extends
name|EndpointConsumerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedGoraEndpointConsumerBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedGoraEndpointConsumerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * The type of the dataStore.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|dataStoreClass (String dataStoreClass)
specifier|default
name|GoraEndpointConsumerBuilder
name|dataStoreClass
parameter_list|(
name|String
name|dataStoreClass
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"dataStoreClass"
argument_list|,
name|dataStoreClass
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The type class of the key.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|keyClass (String keyClass)
specifier|default
name|GoraEndpointConsumerBuilder
name|keyClass
parameter_list|(
name|String
name|keyClass
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"keyClass"
argument_list|,
name|keyClass
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The type of the value.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|valueClass (String valueClass)
specifier|default
name|GoraEndpointConsumerBuilder
name|valueClass
parameter_list|(
name|String
name|valueClass
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"valueClass"
argument_list|,
name|valueClass
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Allows for bridging the consumer to the Camel routing Error Handler,          * which mean any exceptions occurred while the consumer is trying to          * pickup incoming messages, or the likes, will now be processed as a          * message and handled by the routing Error Handler. By default the          * consumer will use the org.apache.camel.spi.ExceptionHandler to deal          * with exceptions, that will be logged at WARN or ERROR level and          * ignored.          *           * The option is a:<code>boolean</code> type.          *           * Group: consumer          */
DECL|method|bridgeErrorHandler ( boolean bridgeErrorHandler)
specifier|default
name|GoraEndpointConsumerBuilder
name|bridgeErrorHandler
parameter_list|(
name|boolean
name|bridgeErrorHandler
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"bridgeErrorHandler"
argument_list|,
name|bridgeErrorHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Allows for bridging the consumer to the Camel routing Error Handler,          * which mean any exceptions occurred while the consumer is trying to          * pickup incoming messages, or the likes, will now be processed as a          * message and handled by the routing Error Handler. By default the          * consumer will use the org.apache.camel.spi.ExceptionHandler to deal          * with exceptions, that will be logged at WARN or ERROR level and          * ignored.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: consumer          */
DECL|method|bridgeErrorHandler ( String bridgeErrorHandler)
specifier|default
name|GoraEndpointConsumerBuilder
name|bridgeErrorHandler
parameter_list|(
name|String
name|bridgeErrorHandler
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"bridgeErrorHandler"
argument_list|,
name|bridgeErrorHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Number of concurrent consumers.          *           * The option is a:<code>int</code> type.          *           * Group: consumer          */
DECL|method|concurrentConsumers ( int concurrentConsumers)
specifier|default
name|GoraEndpointConsumerBuilder
name|concurrentConsumers
parameter_list|(
name|int
name|concurrentConsumers
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"concurrentConsumers"
argument_list|,
name|concurrentConsumers
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Number of concurrent consumers.          *           * The option will be converted to a<code>int</code> type.          *           * Group: consumer          */
DECL|method|concurrentConsumers ( String concurrentConsumers)
specifier|default
name|GoraEndpointConsumerBuilder
name|concurrentConsumers
parameter_list|(
name|String
name|concurrentConsumers
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"concurrentConsumers"
argument_list|,
name|concurrentConsumers
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The End Key.          *           * The option is a:<code>java.lang.Object</code> type.          *           * Group: consumer          */
DECL|method|endKey (Object endKey)
specifier|default
name|GoraEndpointConsumerBuilder
name|endKey
parameter_list|(
name|Object
name|endKey
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"endKey"
argument_list|,
name|endKey
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The End Key.          *           * The option will be converted to a<code>java.lang.Object</code> type.          *           * Group: consumer          */
DECL|method|endKey (String endKey)
specifier|default
name|GoraEndpointConsumerBuilder
name|endKey
parameter_list|(
name|String
name|endKey
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"endKey"
argument_list|,
name|endKey
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The End Time.          *           * The option is a:<code>long</code> type.          *           * Group: consumer          */
DECL|method|endTime (long endTime)
specifier|default
name|GoraEndpointConsumerBuilder
name|endTime
parameter_list|(
name|long
name|endTime
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"endTime"
argument_list|,
name|endTime
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The End Time.          *           * The option will be converted to a<code>long</code> type.          *           * Group: consumer          */
DECL|method|endTime (String endTime)
specifier|default
name|GoraEndpointConsumerBuilder
name|endTime
parameter_list|(
name|String
name|endTime
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"endTime"
argument_list|,
name|endTime
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Fields.          *           * The option is a:<code>com.google.common.base.Strings</code> type.          *           * Group: consumer          */
DECL|method|fields (Object fields)
specifier|default
name|GoraEndpointConsumerBuilder
name|fields
parameter_list|(
name|Object
name|fields
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"fields"
argument_list|,
name|fields
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Fields.          *           * The option will be converted to a          *<code>com.google.common.base.Strings</code> type.          *           * Group: consumer          */
DECL|method|fields (String fields)
specifier|default
name|GoraEndpointConsumerBuilder
name|fields
parameter_list|(
name|String
name|fields
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"fields"
argument_list|,
name|fields
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Key Range From.          *           * The option is a:<code>java.lang.Object</code> type.          *           * Group: consumer          */
DECL|method|keyRangeFrom (Object keyRangeFrom)
specifier|default
name|GoraEndpointConsumerBuilder
name|keyRangeFrom
parameter_list|(
name|Object
name|keyRangeFrom
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"keyRangeFrom"
argument_list|,
name|keyRangeFrom
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Key Range From.          *           * The option will be converted to a<code>java.lang.Object</code> type.          *           * Group: consumer          */
DECL|method|keyRangeFrom (String keyRangeFrom)
specifier|default
name|GoraEndpointConsumerBuilder
name|keyRangeFrom
parameter_list|(
name|String
name|keyRangeFrom
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"keyRangeFrom"
argument_list|,
name|keyRangeFrom
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Key Range To.          *           * The option is a:<code>java.lang.Object</code> type.          *           * Group: consumer          */
DECL|method|keyRangeTo (Object keyRangeTo)
specifier|default
name|GoraEndpointConsumerBuilder
name|keyRangeTo
parameter_list|(
name|Object
name|keyRangeTo
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"keyRangeTo"
argument_list|,
name|keyRangeTo
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Key Range To.          *           * The option will be converted to a<code>java.lang.Object</code> type.          *           * Group: consumer          */
DECL|method|keyRangeTo (String keyRangeTo)
specifier|default
name|GoraEndpointConsumerBuilder
name|keyRangeTo
parameter_list|(
name|String
name|keyRangeTo
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"keyRangeTo"
argument_list|,
name|keyRangeTo
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Limit.          *           * The option is a:<code>long</code> type.          *           * Group: consumer          */
DECL|method|limit (long limit)
specifier|default
name|GoraEndpointConsumerBuilder
name|limit
parameter_list|(
name|long
name|limit
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"limit"
argument_list|,
name|limit
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Limit.          *           * The option will be converted to a<code>long</code> type.          *           * Group: consumer          */
DECL|method|limit (String limit)
specifier|default
name|GoraEndpointConsumerBuilder
name|limit
parameter_list|(
name|String
name|limit
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"limit"
argument_list|,
name|limit
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Start Key.          *           * The option is a:<code>java.lang.Object</code> type.          *           * Group: consumer          */
DECL|method|startKey (Object startKey)
specifier|default
name|GoraEndpointConsumerBuilder
name|startKey
parameter_list|(
name|Object
name|startKey
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"startKey"
argument_list|,
name|startKey
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Start Key.          *           * The option will be converted to a<code>java.lang.Object</code> type.          *           * Group: consumer          */
DECL|method|startKey (String startKey)
specifier|default
name|GoraEndpointConsumerBuilder
name|startKey
parameter_list|(
name|String
name|startKey
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"startKey"
argument_list|,
name|startKey
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Start Time.          *           * The option is a:<code>long</code> type.          *           * Group: consumer          */
DECL|method|startTime (long startTime)
specifier|default
name|GoraEndpointConsumerBuilder
name|startTime
parameter_list|(
name|long
name|startTime
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"startTime"
argument_list|,
name|startTime
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Start Time.          *           * The option will be converted to a<code>long</code> type.          *           * Group: consumer          */
DECL|method|startTime (String startTime)
specifier|default
name|GoraEndpointConsumerBuilder
name|startTime
parameter_list|(
name|String
name|startTime
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"startTime"
argument_list|,
name|startTime
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Time Range From.          *           * The option is a:<code>long</code> type.          *           * Group: consumer          */
DECL|method|timeRangeFrom (long timeRangeFrom)
specifier|default
name|GoraEndpointConsumerBuilder
name|timeRangeFrom
parameter_list|(
name|long
name|timeRangeFrom
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"timeRangeFrom"
argument_list|,
name|timeRangeFrom
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Time Range From.          *           * The option will be converted to a<code>long</code> type.          *           * Group: consumer          */
DECL|method|timeRangeFrom (String timeRangeFrom)
specifier|default
name|GoraEndpointConsumerBuilder
name|timeRangeFrom
parameter_list|(
name|String
name|timeRangeFrom
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"timeRangeFrom"
argument_list|,
name|timeRangeFrom
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Time Range To.          *           * The option is a:<code>long</code> type.          *           * Group: consumer          */
DECL|method|timeRangeTo (long timeRangeTo)
specifier|default
name|GoraEndpointConsumerBuilder
name|timeRangeTo
parameter_list|(
name|long
name|timeRangeTo
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"timeRangeTo"
argument_list|,
name|timeRangeTo
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Time Range To.          *           * The option will be converted to a<code>long</code> type.          *           * Group: consumer          */
DECL|method|timeRangeTo (String timeRangeTo)
specifier|default
name|GoraEndpointConsumerBuilder
name|timeRangeTo
parameter_list|(
name|String
name|timeRangeTo
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"timeRangeTo"
argument_list|,
name|timeRangeTo
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Timestamp.          *           * The option is a:<code>long</code> type.          *           * Group: consumer          */
DECL|method|timestamp (long timestamp)
specifier|default
name|GoraEndpointConsumerBuilder
name|timestamp
parameter_list|(
name|long
name|timestamp
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"timestamp"
argument_list|,
name|timestamp
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The Timestamp.          *           * The option will be converted to a<code>long</code> type.          *           * Group: consumer          */
DECL|method|timestamp (String timestamp)
specifier|default
name|GoraEndpointConsumerBuilder
name|timestamp
parameter_list|(
name|String
name|timestamp
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"timestamp"
argument_list|,
name|timestamp
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint consumers for the Gora component.      */
DECL|interface|AdvancedGoraEndpointConsumerBuilder
specifier|public
interface|interface
name|AdvancedGoraEndpointConsumerBuilder
extends|extends
name|EndpointConsumerBuilder
block|{
DECL|method|basic ()
specifier|default
name|GoraEndpointConsumerBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|GoraEndpointConsumerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * To let the consumer use a custom ExceptionHandler. Notice if the          * option bridgeErrorHandler is enabled then this option is not in use.          * By default the consumer will deal with exceptions, that will be          * logged at WARN or ERROR level and ignored.          *           * The option is a:<code>org.apache.camel.spi.ExceptionHandler</code>          * type.          *           * Group: consumer (advanced)          */
DECL|method|exceptionHandler ( ExceptionHandler exceptionHandler)
specifier|default
name|AdvancedGoraEndpointConsumerBuilder
name|exceptionHandler
parameter_list|(
name|ExceptionHandler
name|exceptionHandler
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"exceptionHandler"
argument_list|,
name|exceptionHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * To let the consumer use a custom ExceptionHandler. Notice if the          * option bridgeErrorHandler is enabled then this option is not in use.          * By default the consumer will deal with exceptions, that will be          * logged at WARN or ERROR level and ignored.          *           * The option will be converted to a          *<code>org.apache.camel.spi.ExceptionHandler</code> type.          *           * Group: consumer (advanced)          */
DECL|method|exceptionHandler ( String exceptionHandler)
specifier|default
name|AdvancedGoraEndpointConsumerBuilder
name|exceptionHandler
parameter_list|(
name|String
name|exceptionHandler
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"exceptionHandler"
argument_list|,
name|exceptionHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets the exchange pattern when the consumer creates an exchange.          *           * The option is a:<code>org.apache.camel.ExchangePattern</code> type.          *           * Group: consumer (advanced)          */
DECL|method|exchangePattern ( ExchangePattern exchangePattern)
specifier|default
name|AdvancedGoraEndpointConsumerBuilder
name|exchangePattern
parameter_list|(
name|ExchangePattern
name|exchangePattern
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"exchangePattern"
argument_list|,
name|exchangePattern
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets the exchange pattern when the consumer creates an exchange.          *           * The option will be converted to a          *<code>org.apache.camel.ExchangePattern</code> type.          *           * Group: consumer (advanced)          */
DECL|method|exchangePattern ( String exchangePattern)
specifier|default
name|AdvancedGoraEndpointConsumerBuilder
name|exchangePattern
parameter_list|(
name|String
name|exchangePattern
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"exchangePattern"
argument_list|,
name|exchangePattern
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedGoraEndpointConsumerBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedGoraEndpointConsumerBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Hadoop Configuration.          *           * The option is a:<code>org.apache.hadoop.conf.Configuration</code>          * type.          *           * Group: advanced          */
DECL|method|hadoopConfiguration ( Object hadoopConfiguration)
specifier|default
name|AdvancedGoraEndpointConsumerBuilder
name|hadoopConfiguration
parameter_list|(
name|Object
name|hadoopConfiguration
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"hadoopConfiguration"
argument_list|,
name|hadoopConfiguration
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Hadoop Configuration.          *           * The option will be converted to a          *<code>org.apache.hadoop.conf.Configuration</code> type.          *           * Group: advanced          */
DECL|method|hadoopConfiguration ( String hadoopConfiguration)
specifier|default
name|AdvancedGoraEndpointConsumerBuilder
name|hadoopConfiguration
parameter_list|(
name|String
name|hadoopConfiguration
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"hadoopConfiguration"
argument_list|,
name|hadoopConfiguration
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( boolean synchronous)
specifier|default
name|AdvancedGoraEndpointConsumerBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( String synchronous)
specifier|default
name|AdvancedGoraEndpointConsumerBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Builder for endpoint producers for the Gora component.      */
DECL|interface|GoraEndpointProducerBuilder
specifier|public
interface|interface
name|GoraEndpointProducerBuilder
extends|extends
name|EndpointProducerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedGoraEndpointProducerBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedGoraEndpointProducerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * The type of the dataStore.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|dataStoreClass (String dataStoreClass)
specifier|default
name|GoraEndpointProducerBuilder
name|dataStoreClass
parameter_list|(
name|String
name|dataStoreClass
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"dataStoreClass"
argument_list|,
name|dataStoreClass
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The type class of the key.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|keyClass (String keyClass)
specifier|default
name|GoraEndpointProducerBuilder
name|keyClass
parameter_list|(
name|String
name|keyClass
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"keyClass"
argument_list|,
name|keyClass
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The type of the value.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|valueClass (String valueClass)
specifier|default
name|GoraEndpointProducerBuilder
name|valueClass
parameter_list|(
name|String
name|valueClass
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"valueClass"
argument_list|,
name|valueClass
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Flush on every operation.          *           * The option is a:<code>boolean</code> type.          *           * Group: producer          */
DECL|method|flushOnEveryOperation ( boolean flushOnEveryOperation)
specifier|default
name|GoraEndpointProducerBuilder
name|flushOnEveryOperation
parameter_list|(
name|boolean
name|flushOnEveryOperation
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"flushOnEveryOperation"
argument_list|,
name|flushOnEveryOperation
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Flush on every operation.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: producer          */
DECL|method|flushOnEveryOperation ( String flushOnEveryOperation)
specifier|default
name|GoraEndpointProducerBuilder
name|flushOnEveryOperation
parameter_list|(
name|String
name|flushOnEveryOperation
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"flushOnEveryOperation"
argument_list|,
name|flushOnEveryOperation
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the producer should be started lazy (on the first message).          * By starting lazy you can use this to allow CamelContext and routes to          * startup in situations where a producer may otherwise fail during          * starting and cause the route to fail being started. By deferring this          * startup to be lazy then the startup failure can be handled during          * routing messages via Camel's routing error handlers. Beware that when          * the first message is processed then creating and starting the          * producer may take a little time and prolong the total processing time          * of the processing.          *           * The option is a:<code>boolean</code> type.          *           * Group: producer          */
DECL|method|lazyStartProducer ( boolean lazyStartProducer)
specifier|default
name|GoraEndpointProducerBuilder
name|lazyStartProducer
parameter_list|(
name|boolean
name|lazyStartProducer
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"lazyStartProducer"
argument_list|,
name|lazyStartProducer
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the producer should be started lazy (on the first message).          * By starting lazy you can use this to allow CamelContext and routes to          * startup in situations where a producer may otherwise fail during          * starting and cause the route to fail being started. By deferring this          * startup to be lazy then the startup failure can be handled during          * routing messages via Camel's routing error handlers. Beware that when          * the first message is processed then creating and starting the          * producer may take a little time and prolong the total processing time          * of the processing.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: producer          */
DECL|method|lazyStartProducer ( String lazyStartProducer)
specifier|default
name|GoraEndpointProducerBuilder
name|lazyStartProducer
parameter_list|(
name|String
name|lazyStartProducer
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"lazyStartProducer"
argument_list|,
name|lazyStartProducer
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint producers for the Gora component.      */
DECL|interface|AdvancedGoraEndpointProducerBuilder
specifier|public
interface|interface
name|AdvancedGoraEndpointProducerBuilder
extends|extends
name|EndpointProducerBuilder
block|{
DECL|method|basic ()
specifier|default
name|GoraEndpointProducerBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|GoraEndpointProducerBuilder
operator|)
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedGoraEndpointProducerBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedGoraEndpointProducerBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Hadoop Configuration.          *           * The option is a:<code>org.apache.hadoop.conf.Configuration</code>          * type.          *           * Group: advanced          */
DECL|method|hadoopConfiguration ( Object hadoopConfiguration)
specifier|default
name|AdvancedGoraEndpointProducerBuilder
name|hadoopConfiguration
parameter_list|(
name|Object
name|hadoopConfiguration
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"hadoopConfiguration"
argument_list|,
name|hadoopConfiguration
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Hadoop Configuration.          *           * The option will be converted to a          *<code>org.apache.hadoop.conf.Configuration</code> type.          *           * Group: advanced          */
DECL|method|hadoopConfiguration ( String hadoopConfiguration)
specifier|default
name|AdvancedGoraEndpointProducerBuilder
name|hadoopConfiguration
parameter_list|(
name|String
name|hadoopConfiguration
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"hadoopConfiguration"
argument_list|,
name|hadoopConfiguration
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( boolean synchronous)
specifier|default
name|AdvancedGoraEndpointProducerBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( String synchronous)
specifier|default
name|AdvancedGoraEndpointProducerBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Builder for endpoint for the Gora component.      */
DECL|interface|GoraEndpointBuilder
specifier|public
interface|interface
name|GoraEndpointBuilder
extends|extends
name|GoraEndpointConsumerBuilder
extends|,
name|GoraEndpointProducerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedGoraEndpointBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedGoraEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * The type of the dataStore.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|dataStoreClass (String dataStoreClass)
specifier|default
name|GoraEndpointBuilder
name|dataStoreClass
parameter_list|(
name|String
name|dataStoreClass
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"dataStoreClass"
argument_list|,
name|dataStoreClass
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The type class of the key.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|keyClass (String keyClass)
specifier|default
name|GoraEndpointBuilder
name|keyClass
parameter_list|(
name|String
name|keyClass
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"keyClass"
argument_list|,
name|keyClass
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * The type of the value.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|valueClass (String valueClass)
specifier|default
name|GoraEndpointBuilder
name|valueClass
parameter_list|(
name|String
name|valueClass
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"valueClass"
argument_list|,
name|valueClass
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint for the Gora component.      */
DECL|interface|AdvancedGoraEndpointBuilder
specifier|public
interface|interface
name|AdvancedGoraEndpointBuilder
extends|extends
name|AdvancedGoraEndpointConsumerBuilder
extends|,
name|AdvancedGoraEndpointProducerBuilder
block|{
DECL|method|basic ()
specifier|default
name|GoraEndpointBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|GoraEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedGoraEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedGoraEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Hadoop Configuration.          *           * The option is a:<code>org.apache.hadoop.conf.Configuration</code>          * type.          *           * Group: advanced          */
DECL|method|hadoopConfiguration ( Object hadoopConfiguration)
specifier|default
name|AdvancedGoraEndpointBuilder
name|hadoopConfiguration
parameter_list|(
name|Object
name|hadoopConfiguration
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"hadoopConfiguration"
argument_list|,
name|hadoopConfiguration
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Hadoop Configuration.          *           * The option will be converted to a          *<code>org.apache.hadoop.conf.Configuration</code> type.          *           * Group: advanced          */
DECL|method|hadoopConfiguration ( String hadoopConfiguration)
specifier|default
name|AdvancedGoraEndpointBuilder
name|hadoopConfiguration
parameter_list|(
name|String
name|hadoopConfiguration
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"hadoopConfiguration"
argument_list|,
name|hadoopConfiguration
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous (boolean synchronous)
specifier|default
name|AdvancedGoraEndpointBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous (String synchronous)
specifier|default
name|AdvancedGoraEndpointBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|doSetProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Gora (camel-gora)      * The gora component allows you to work with NoSQL databases using the      * Apache Gora framework.      *       * Category: database,hadoop,nosql      * Since: 2.14      * Maven coordinates: org.apache.camel:camel-gora      *       * Syntax:<code>gora:name</code>      *       * Path parameter: name (required)      * Instance name      */
DECL|method|gora (String path)
specifier|default
name|GoraEndpointBuilder
name|gora
parameter_list|(
name|String
name|path
parameter_list|)
block|{
class|class
name|GoraEndpointBuilderImpl
extends|extends
name|AbstractEndpointBuilder
implements|implements
name|GoraEndpointBuilder
implements|,
name|AdvancedGoraEndpointBuilder
block|{
specifier|public
name|GoraEndpointBuilderImpl
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|super
argument_list|(
literal|"gora"
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|new
name|GoraEndpointBuilderImpl
argument_list|(
name|path
argument_list|)
return|;
block|}
block|}
end_interface

end_unit

