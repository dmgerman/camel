begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.builder.endpoint.dsl
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|dsl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Generated
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointConsumerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|EndpointProducerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|endpoint
operator|.
name|AbstractEndpointBuilder
import|;
end_import

begin_comment
comment|/**  * Consumer endpoint to receive from PostgreSQL Replication Slot.  *   * Generated by camel-package-maven-plugin - do not edit this file!  */
end_comment

begin_interface
annotation|@
name|Generated
argument_list|(
literal|"org.apache.camel.maven.packaging.EndpointDslMojo"
argument_list|)
DECL|interface|PgReplicationSlotEndpointBuilderFactory
specifier|public
interface|interface
name|PgReplicationSlotEndpointBuilderFactory
block|{
comment|/**      * Builder for endpoint for the PostgresSQL Replication Slot component.      */
DECL|interface|PgReplicationSlotEndpointBuilder
specifier|public
interface|interface
name|PgReplicationSlotEndpointBuilder
extends|extends
name|EndpointConsumerBuilder
block|{
DECL|method|advanced ()
specifier|default
name|AdvancedPgReplicationSlotEndpointBuilder
name|advanced
parameter_list|()
block|{
return|return
operator|(
name|AdvancedPgReplicationSlotEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * Replication slot name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|slot (String slot)
specifier|default
name|PgReplicationSlotEndpointBuilder
name|slot
parameter_list|(
name|String
name|slot
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"slot"
argument_list|,
name|slot
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * PostgreSQL server host.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|host (String host)
specifier|default
name|PgReplicationSlotEndpointBuilder
name|host
parameter_list|(
name|String
name|host
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"host"
argument_list|,
name|host
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * PostgreSQL server port.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: common          */
DECL|method|port (Integer port)
specifier|default
name|PgReplicationSlotEndpointBuilder
name|port
parameter_list|(
name|Integer
name|port
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"port"
argument_list|,
name|port
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * PostgreSQL server port.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: common          */
DECL|method|port (String port)
specifier|default
name|PgReplicationSlotEndpointBuilder
name|port
parameter_list|(
name|String
name|port
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"port"
argument_list|,
name|port
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * PostgreSQL database name.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|database (String database)
specifier|default
name|PgReplicationSlotEndpointBuilder
name|database
parameter_list|(
name|String
name|database
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"database"
argument_list|,
name|database
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Output plugin name (e.g. test_decoding, wal2json).          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|outputPlugin ( String outputPlugin)
specifier|default
name|PgReplicationSlotEndpointBuilder
name|outputPlugin
parameter_list|(
name|String
name|outputPlugin
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"outputPlugin"
argument_list|,
name|outputPlugin
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * PostgreSQL password.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|password (String password)
specifier|default
name|PgReplicationSlotEndpointBuilder
name|password
parameter_list|(
name|String
name|password
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"password"
argument_list|,
name|password
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * PostgreSQL username.          *           * The option is a:<code>java.lang.String</code> type.          *           * Group: common          */
DECL|method|user (String user)
specifier|default
name|PgReplicationSlotEndpointBuilder
name|user
parameter_list|(
name|String
name|user
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"user"
argument_list|,
name|user
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * Advanced builder for endpoint for the PostgresSQL Replication Slot      * component.      */
DECL|interface|AdvancedPgReplicationSlotEndpointBuilder
specifier|public
interface|interface
name|AdvancedPgReplicationSlotEndpointBuilder
extends|extends
name|EndpointConsumerBuilder
block|{
DECL|method|basic ()
specifier|default
name|PgReplicationSlotEndpointBuilder
name|basic
parameter_list|()
block|{
return|return
operator|(
name|PgReplicationSlotEndpointBuilder
operator|)
name|this
return|;
block|}
comment|/**          * Auto create slot if it does not exist.          *           * The option is a:<code>java.lang.Boolean</code> type.          *           * Group: advanced          */
DECL|method|autoCreateSlot ( Boolean autoCreateSlot)
specifier|default
name|AdvancedPgReplicationSlotEndpointBuilder
name|autoCreateSlot
parameter_list|(
name|Boolean
name|autoCreateSlot
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"autoCreateSlot"
argument_list|,
name|autoCreateSlot
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Auto create slot if it does not exist.          *           * The option will be converted to a<code>java.lang.Boolean</code>          * type.          *           * Group: advanced          */
DECL|method|autoCreateSlot ( String autoCreateSlot)
specifier|default
name|AdvancedPgReplicationSlotEndpointBuilder
name|autoCreateSlot
parameter_list|(
name|String
name|autoCreateSlot
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"autoCreateSlot"
argument_list|,
name|autoCreateSlot
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( boolean basicPropertyBinding)
specifier|default
name|AdvancedPgReplicationSlotEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|boolean
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Whether the endpoint should use basic property binding (Camel 2.x) or          * the newer property binding with additional capabilities.          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|basicPropertyBinding ( String basicPropertyBinding)
specifier|default
name|AdvancedPgReplicationSlotEndpointBuilder
name|basicPropertyBinding
parameter_list|(
name|String
name|basicPropertyBinding
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"basicPropertyBinding"
argument_list|,
name|basicPropertyBinding
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Slot options to be passed to the output plugin.          *           * The option is a:<code>java.util.Map&lt;java.lang.String,          * java.lang.Object&gt;</code> type.          *           * Group: advanced          */
DECL|method|slotOptions ( Map<String, Object> slotOptions)
specifier|default
name|AdvancedPgReplicationSlotEndpointBuilder
name|slotOptions
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|slotOptions
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"slotOptions"
argument_list|,
name|slotOptions
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Slot options to be passed to the output plugin.          *           * The option will be converted to a          *<code>java.util.Map&lt;java.lang.String, java.lang.Object&gt;</code>          * type.          *           * Group: advanced          */
DECL|method|slotOptions ( String slotOptions)
specifier|default
name|AdvancedPgReplicationSlotEndpointBuilder
name|slotOptions
parameter_list|(
name|String
name|slotOptions
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"slotOptions"
argument_list|,
name|slotOptions
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Specifies the number of seconds between status packets sent back to          * Postgres server.          *           * The option is a:<code>java.lang.Integer</code> type.          *           * Group: advanced          */
DECL|method|statusInterval ( Integer statusInterval)
specifier|default
name|AdvancedPgReplicationSlotEndpointBuilder
name|statusInterval
parameter_list|(
name|Integer
name|statusInterval
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"statusInterval"
argument_list|,
name|statusInterval
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Specifies the number of seconds between status packets sent back to          * Postgres server.          *           * The option will be converted to a<code>java.lang.Integer</code>          * type.          *           * Group: advanced          */
DECL|method|statusInterval ( String statusInterval)
specifier|default
name|AdvancedPgReplicationSlotEndpointBuilder
name|statusInterval
parameter_list|(
name|String
name|statusInterval
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"statusInterval"
argument_list|,
name|statusInterval
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option is a:<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( boolean synchronous)
specifier|default
name|AdvancedPgReplicationSlotEndpointBuilder
name|synchronous
parameter_list|(
name|boolean
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          * Sets whether synchronous processing should be strictly used, or Camel          * is allowed to use asynchronous processing (if supported).          *           * The option will be converted to a<code>boolean</code> type.          *           * Group: advanced          */
DECL|method|synchronous ( String synchronous)
specifier|default
name|AdvancedPgReplicationSlotEndpointBuilder
name|synchronous
parameter_list|(
name|String
name|synchronous
parameter_list|)
block|{
name|setProperty
argument_list|(
literal|"synchronous"
argument_list|,
name|synchronous
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**      * PostgresSQL Replication Slot (camel-pg-replication-slot)      * Consumer endpoint to receive from PostgreSQL Replication Slot.      *       * Syntax:<code>pg-replication-slot:host:port/database/slot:plugin</code>      * Category: database,sql      * Available as of version: 3.0      * Maven coordinates: org.apache.camel:camel-pg-replication-slot      */
DECL|method|pgReplicationSlot (String path)
specifier|default
name|PgReplicationSlotEndpointBuilder
name|pgReplicationSlot
parameter_list|(
name|String
name|path
parameter_list|)
block|{
class|class
name|PgReplicationSlotEndpointBuilderImpl
extends|extends
name|AbstractEndpointBuilder
implements|implements
name|PgReplicationSlotEndpointBuilder
implements|,
name|AdvancedPgReplicationSlotEndpointBuilder
block|{
specifier|public
name|PgReplicationSlotEndpointBuilderImpl
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|super
argument_list|(
literal|"pg-replication-slot"
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|new
name|PgReplicationSlotEndpointBuilderImpl
argument_list|(
name|path
argument_list|)
return|;
block|}
block|}
end_interface

end_unit

