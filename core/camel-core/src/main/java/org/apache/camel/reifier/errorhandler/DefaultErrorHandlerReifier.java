begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.camel.reifier.errorhandler
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|reifier
operator|.
name|errorhandler
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutorService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ScheduledExecutorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ErrorHandlerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|NoSuchEndpointException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|DeadLetterChannelBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|DefaultErrorHandlerBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|errorhandler
operator|.
name|DeadLetterChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|errorhandler
operator|.
name|DefaultErrorHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ExecutorServiceManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|RouteContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ThreadPoolProfile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|util
operator|.
name|StringHelper
import|;
end_import

begin_class
DECL|class|DefaultErrorHandlerReifier
specifier|public
class|class
name|DefaultErrorHandlerReifier
parameter_list|<
name|T
extends|extends
name|DefaultErrorHandlerBuilder
parameter_list|>
extends|extends
name|ErrorHandlerReifier
argument_list|<
name|T
argument_list|>
block|{
DECL|method|DefaultErrorHandlerReifier (ErrorHandlerFactory definition)
specifier|public
name|DefaultErrorHandlerReifier
parameter_list|(
name|ErrorHandlerFactory
name|definition
parameter_list|)
block|{
name|super
argument_list|(
operator|(
name|T
operator|)
name|definition
argument_list|)
expr_stmt|;
block|}
DECL|method|createErrorHandler (RouteContext routeContext, Processor processor)
specifier|public
name|Processor
name|createErrorHandler
parameter_list|(
name|RouteContext
name|routeContext
parameter_list|,
name|Processor
name|processor
parameter_list|)
throws|throws
name|Exception
block|{
name|DefaultErrorHandler
name|answer
init|=
operator|new
name|DefaultErrorHandler
argument_list|(
name|routeContext
operator|.
name|getCamelContext
argument_list|()
argument_list|,
name|processor
argument_list|,
name|definition
operator|.
name|getLogger
argument_list|()
argument_list|,
name|definition
operator|.
name|getOnRedelivery
argument_list|()
argument_list|,
name|definition
operator|.
name|getRedeliveryPolicy
argument_list|()
argument_list|,
name|definition
operator|.
name|getExceptionPolicyStrategy
argument_list|()
argument_list|,
name|definition
operator|.
name|getRetryWhilePolicy
argument_list|(
name|routeContext
operator|.
name|getCamelContext
argument_list|()
argument_list|)
argument_list|,
name|getExecutorService
argument_list|(
name|routeContext
operator|.
name|getCamelContext
argument_list|()
argument_list|)
argument_list|,
name|definition
operator|.
name|getOnPrepareFailure
argument_list|()
argument_list|,
name|definition
operator|.
name|getOnExceptionOccurred
argument_list|()
argument_list|)
decl_stmt|;
comment|// configure error handler before we can use it
name|configure
argument_list|(
name|routeContext
argument_list|,
name|answer
argument_list|)
expr_stmt|;
return|return
name|answer
return|;
block|}
DECL|method|getExecutorService (CamelContext camelContext)
specifier|protected
specifier|synchronized
name|ScheduledExecutorService
name|getExecutorService
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|)
block|{
name|ScheduledExecutorService
name|executorService
init|=
name|definition
operator|.
name|getExecutorService
argument_list|()
decl_stmt|;
name|String
name|executorServiceRef
init|=
name|definition
operator|.
name|getExecutorServiceRef
argument_list|()
decl_stmt|;
if|if
condition|(
name|executorService
operator|==
literal|null
operator|||
name|executorService
operator|.
name|isShutdown
argument_list|()
condition|)
block|{
comment|// camel context will shutdown the executor when it shutdown so no need to shut it down when stopping
if|if
condition|(
name|executorServiceRef
operator|!=
literal|null
condition|)
block|{
name|executorService
operator|=
name|camelContext
operator|.
name|getRegistry
argument_list|()
operator|.
name|lookupByNameAndType
argument_list|(
name|executorServiceRef
argument_list|,
name|ScheduledExecutorService
operator|.
name|class
argument_list|)
expr_stmt|;
if|if
condition|(
name|executorService
operator|==
literal|null
condition|)
block|{
name|ExecutorServiceManager
name|manager
init|=
name|camelContext
operator|.
name|getExecutorServiceManager
argument_list|()
decl_stmt|;
name|ThreadPoolProfile
name|profile
init|=
name|manager
operator|.
name|getThreadPoolProfile
argument_list|(
name|executorServiceRef
argument_list|)
decl_stmt|;
name|executorService
operator|=
name|manager
operator|.
name|newScheduledThreadPool
argument_list|(
name|this
argument_list|,
name|executorServiceRef
argument_list|,
name|profile
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|executorService
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"ExecutorServiceRef "
operator|+
name|executorServiceRef
operator|+
literal|" not found in registry."
argument_list|)
throw|;
block|}
block|}
else|else
block|{
comment|// no explicit configured thread pool, so leave it up to the error handler to decide if it need
comment|// a default thread pool from CamelContext#getErrorHandlerExecutorService
name|executorService
operator|=
literal|null
expr_stmt|;
block|}
comment|// TODO: ErrorHandler: no modification to the model should be done
name|definition
operator|.
name|setExecutorService
argument_list|(
name|executorService
argument_list|)
expr_stmt|;
block|}
return|return
name|executorService
return|;
block|}
block|}
end_class

end_unit

