begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.model.rest
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|rest
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|Metadata
import|;
end_import

begin_comment
comment|/**  * Rest security basic auth definition  */
end_comment

begin_class
annotation|@
name|Metadata
argument_list|(
name|label
operator|=
literal|"rest"
argument_list|)
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"apiKey"
argument_list|)
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|RestSecurityApiKey
specifier|public
class|class
name|RestSecurityApiKey
extends|extends
name|RestSecurityDefinition
block|{
annotation|@
name|XmlAttribute
argument_list|(
name|name
operator|=
literal|"name"
argument_list|,
name|required
operator|=
literal|true
argument_list|)
annotation|@
name|Metadata
argument_list|(
name|required
operator|=
literal|true
argument_list|)
DECL|field|name
specifier|private
name|String
name|name
decl_stmt|;
annotation|@
name|XmlAttribute
argument_list|(
name|name
operator|=
literal|"inHeader"
argument_list|)
DECL|field|inHeader
specifier|private
name|Boolean
name|inHeader
decl_stmt|;
annotation|@
name|XmlAttribute
argument_list|(
name|name
operator|=
literal|"inQuery"
argument_list|)
DECL|field|inQuery
specifier|private
name|Boolean
name|inQuery
decl_stmt|;
DECL|method|RestSecurityApiKey ()
specifier|public
name|RestSecurityApiKey
parameter_list|()
block|{     }
DECL|method|RestSecurityApiKey (RestDefinition rest)
specifier|public
name|RestSecurityApiKey
parameter_list|(
name|RestDefinition
name|rest
parameter_list|)
block|{
name|super
argument_list|(
name|rest
argument_list|)
expr_stmt|;
block|}
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
comment|/**      * The name of the header or query parameter to be used.      */
DECL|method|setName (String name)
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
DECL|method|getInHeader ()
specifier|public
name|Boolean
name|getInHeader
parameter_list|()
block|{
return|return
name|inHeader
return|;
block|}
comment|/**      * To use header as the location of the API key.      */
DECL|method|setInHeader (Boolean inHeader)
specifier|public
name|void
name|setInHeader
parameter_list|(
name|Boolean
name|inHeader
parameter_list|)
block|{
name|this
operator|.
name|inHeader
operator|=
name|inHeader
expr_stmt|;
block|}
DECL|method|getInQuery ()
specifier|public
name|Boolean
name|getInQuery
parameter_list|()
block|{
return|return
name|inQuery
return|;
block|}
comment|/**      * To use query parameter as the location of the API key.      */
DECL|method|setInQuery (Boolean inQuery)
specifier|public
name|void
name|setInQuery
parameter_list|(
name|Boolean
name|inQuery
parameter_list|)
block|{
name|this
operator|.
name|inQuery
operator|=
name|inQuery
expr_stmt|;
block|}
DECL|method|withHeader (String name)
specifier|public
name|RestSecurityApiKey
name|withHeader
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|setInHeader
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setInQuery
argument_list|(
literal|false
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withQuery (String name)
specifier|public
name|RestSecurityApiKey
name|withQuery
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|setInQuery
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setInHeader
argument_list|(
literal|false
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|end ()
specifier|public
name|RestSecuritiesDefinition
name|end
parameter_list|()
block|{
return|return
name|rest
operator|.
name|getSecurityDefinitions
argument_list|()
return|;
block|}
block|}
end_class

end_unit

