begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.log
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|log
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ContextTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ExtendedCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|PropertyBindingSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|processor
operator|.
name|DefaultExchangeFormatter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|LogComponentOptionsTest
specifier|public
class|class
name|LogComponentOptionsTest
extends|extends
name|ContextTestSupport
block|{
annotation|@
name|Override
DECL|method|isUseRouteBuilder ()
specifier|public
name|boolean
name|isUseRouteBuilder
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Test
DECL|method|testFastLogComponentOptions ()
specifier|public
name|void
name|testFastLogComponentOptions
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
name|long
name|before
init|=
name|context
operator|.
name|adapt
argument_list|(
name|ExtendedCamelContext
operator|.
name|class
argument_list|)
operator|.
name|getBeanIntrospection
argument_list|()
operator|.
name|getInvokedCounter
argument_list|()
decl_stmt|;
name|DefaultExchangeFormatter
name|myFormatter
init|=
operator|new
name|DefaultExchangeFormatter
argument_list|()
decl_stmt|;
name|LogComponent
name|log
init|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"log"
argument_list|,
name|LogComponent
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|log
operator|.
name|getExchangeFormatter
argument_list|()
argument_list|)
expr_stmt|;
operator|new
name|PropertyBindingSupport
operator|.
name|Builder
argument_list|()
operator|.
name|withCamelContext
argument_list|(
name|context
argument_list|)
operator|.
name|withTarget
argument_list|(
name|log
argument_list|)
operator|.
name|withConfigurer
argument_list|(
name|log
operator|.
name|getComponentPropertyConfigurer
argument_list|()
argument_list|)
operator|.
name|withProperty
argument_list|(
literal|"exchangeFormatter"
argument_list|,
name|myFormatter
argument_list|)
operator|.
name|bind
argument_list|()
expr_stmt|;
name|assertSame
argument_list|(
name|myFormatter
argument_list|,
name|log
operator|.
name|getExchangeFormatter
argument_list|()
argument_list|)
expr_stmt|;
name|long
name|after
init|=
name|context
operator|.
name|adapt
argument_list|(
name|ExtendedCamelContext
operator|.
name|class
argument_list|)
operator|.
name|getBeanIntrospection
argument_list|()
operator|.
name|getInvokedCounter
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Should not use Java reflection"
argument_list|,
name|before
argument_list|,
name|after
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFastLogComponentNestedOptions ()
specifier|public
name|void
name|testFastLogComponentNestedOptions
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
name|long
name|before
init|=
name|context
operator|.
name|adapt
argument_list|(
name|ExtendedCamelContext
operator|.
name|class
argument_list|)
operator|.
name|getBeanIntrospection
argument_list|()
operator|.
name|getInvokedCounter
argument_list|()
decl_stmt|;
name|DefaultExchangeFormatter
name|myFormatter
init|=
operator|new
name|DefaultExchangeFormatter
argument_list|()
decl_stmt|;
name|LogComponent
name|log
init|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"log"
argument_list|,
name|LogComponent
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|log
operator|.
name|getExchangeFormatter
argument_list|()
argument_list|)
expr_stmt|;
operator|new
name|PropertyBindingSupport
operator|.
name|Builder
argument_list|()
operator|.
name|withCamelContext
argument_list|(
name|context
argument_list|)
operator|.
name|withTarget
argument_list|(
name|log
argument_list|)
operator|.
name|withConfigurer
argument_list|(
name|log
operator|.
name|getComponentPropertyConfigurer
argument_list|()
argument_list|)
operator|.
name|withProperty
argument_list|(
literal|"exchangeFormatter"
argument_list|,
name|myFormatter
argument_list|)
operator|.
name|withProperty
argument_list|(
literal|"exchangeFormatter.showExchangeId"
argument_list|,
literal|"true"
argument_list|)
operator|.
name|bind
argument_list|()
expr_stmt|;
name|assertSame
argument_list|(
name|myFormatter
argument_list|,
name|log
operator|.
name|getExchangeFormatter
argument_list|()
argument_list|)
expr_stmt|;
name|long
name|after
init|=
name|context
operator|.
name|adapt
argument_list|(
name|ExtendedCamelContext
operator|.
name|class
argument_list|)
operator|.
name|getBeanIntrospection
argument_list|()
operator|.
name|getInvokedCounter
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Should use Java reflection"
argument_list|,
name|after
operator|>
name|before
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFastLogComponentOptionsLookupRegistry ()
specifier|public
name|void
name|testFastLogComponentOptionsLookupRegistry
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
name|long
name|before
init|=
name|context
operator|.
name|adapt
argument_list|(
name|ExtendedCamelContext
operator|.
name|class
argument_list|)
operator|.
name|getBeanIntrospection
argument_list|()
operator|.
name|getInvokedCounter
argument_list|()
decl_stmt|;
name|DefaultExchangeFormatter
name|myFormatter
init|=
operator|new
name|DefaultExchangeFormatter
argument_list|()
decl_stmt|;
name|context
operator|.
name|getRegistry
argument_list|()
operator|.
name|bind
argument_list|(
literal|"myGreatFormatter"
argument_list|,
name|myFormatter
argument_list|)
expr_stmt|;
name|LogComponent
name|log
init|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"log"
argument_list|,
name|LogComponent
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|log
operator|.
name|getExchangeFormatter
argument_list|()
argument_list|)
expr_stmt|;
operator|new
name|PropertyBindingSupport
operator|.
name|Builder
argument_list|()
operator|.
name|withCamelContext
argument_list|(
name|context
argument_list|)
operator|.
name|withTarget
argument_list|(
name|log
argument_list|)
operator|.
name|withConfigurer
argument_list|(
name|log
operator|.
name|getComponentPropertyConfigurer
argument_list|()
argument_list|)
operator|.
name|withProperty
argument_list|(
literal|"exchangeFormatter"
argument_list|,
literal|"#bean:myGreatFormatter"
argument_list|)
operator|.
name|bind
argument_list|()
expr_stmt|;
name|assertSame
argument_list|(
name|myFormatter
argument_list|,
name|log
operator|.
name|getExchangeFormatter
argument_list|()
argument_list|)
expr_stmt|;
name|long
name|after
init|=
name|context
operator|.
name|adapt
argument_list|(
name|ExtendedCamelContext
operator|.
name|class
argument_list|)
operator|.
name|getBeanIntrospection
argument_list|()
operator|.
name|getInvokedCounter
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Should not use Java reflection"
argument_list|,
name|before
argument_list|,
name|after
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSlowLogComponentOptions ()
specifier|public
name|void
name|testSlowLogComponentOptions
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
name|long
name|before
init|=
name|context
operator|.
name|adapt
argument_list|(
name|ExtendedCamelContext
operator|.
name|class
argument_list|)
operator|.
name|getBeanIntrospection
argument_list|()
operator|.
name|getInvokedCounter
argument_list|()
decl_stmt|;
name|DefaultExchangeFormatter
name|myFormatter
init|=
operator|new
name|DefaultExchangeFormatter
argument_list|()
decl_stmt|;
name|LogComponent
name|log
init|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"log"
argument_list|,
name|LogComponent
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|log
operator|.
name|getExchangeFormatter
argument_list|()
argument_list|)
expr_stmt|;
operator|new
name|PropertyBindingSupport
operator|.
name|Builder
argument_list|()
operator|.
name|withCamelContext
argument_list|(
name|context
argument_list|)
operator|.
name|withTarget
argument_list|(
name|log
argument_list|)
operator|.
name|withProperty
argument_list|(
literal|"exchangeFormatter"
argument_list|,
name|myFormatter
argument_list|)
operator|.
name|withProperty
argument_list|(
literal|"exchangeFormatter.showExchangeId"
argument_list|,
literal|"true"
argument_list|)
operator|.
name|bind
argument_list|()
expr_stmt|;
name|assertSame
argument_list|(
name|myFormatter
argument_list|,
name|log
operator|.
name|getExchangeFormatter
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|myFormatter
operator|.
name|isShowExchangeId
argument_list|()
argument_list|)
expr_stmt|;
name|long
name|after
init|=
name|context
operator|.
name|adapt
argument_list|(
name|ExtendedCamelContext
operator|.
name|class
argument_list|)
operator|.
name|getBeanIntrospection
argument_list|()
operator|.
name|getInvokedCounter
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Should use reflection"
argument_list|,
name|after
operator|>
name|before
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSlowLogComponentOptionsLookupRegistry ()
specifier|public
name|void
name|testSlowLogComponentOptionsLookupRegistry
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
name|long
name|before
init|=
name|context
operator|.
name|adapt
argument_list|(
name|ExtendedCamelContext
operator|.
name|class
argument_list|)
operator|.
name|getBeanIntrospection
argument_list|()
operator|.
name|getInvokedCounter
argument_list|()
decl_stmt|;
name|DefaultExchangeFormatter
name|myFormatter
init|=
operator|new
name|DefaultExchangeFormatter
argument_list|()
decl_stmt|;
name|context
operator|.
name|getRegistry
argument_list|()
operator|.
name|bind
argument_list|(
literal|"myGreatFormatter"
argument_list|,
name|myFormatter
argument_list|)
expr_stmt|;
name|LogComponent
name|log
init|=
name|context
operator|.
name|getComponent
argument_list|(
literal|"log"
argument_list|,
name|LogComponent
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|log
operator|.
name|getExchangeFormatter
argument_list|()
argument_list|)
expr_stmt|;
operator|new
name|PropertyBindingSupport
operator|.
name|Builder
argument_list|()
operator|.
name|withCamelContext
argument_list|(
name|context
argument_list|)
operator|.
name|withTarget
argument_list|(
name|log
argument_list|)
operator|.
name|withProperty
argument_list|(
literal|"exchangeFormatter"
argument_list|,
literal|"#bean:myGreatFormatter"
argument_list|)
operator|.
name|withProperty
argument_list|(
literal|"exchangeFormatter.showExchangeId"
argument_list|,
literal|"true"
argument_list|)
operator|.
name|bind
argument_list|()
expr_stmt|;
name|assertSame
argument_list|(
name|myFormatter
argument_list|,
name|log
operator|.
name|getExchangeFormatter
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|myFormatter
operator|.
name|isShowExchangeId
argument_list|()
argument_list|)
expr_stmt|;
name|long
name|after
init|=
name|context
operator|.
name|adapt
argument_list|(
name|ExtendedCamelContext
operator|.
name|class
argument_list|)
operator|.
name|getBeanIntrospection
argument_list|()
operator|.
name|getInvokedCounter
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Should use reflection"
argument_list|,
name|after
operator|>
name|before
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

