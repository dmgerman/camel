begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.dataset
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|dataset
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ContextTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|DataSetConsumerTest
specifier|public
class|class
name|DataSetConsumerTest
extends|extends
name|ContextTestSupport
block|{
DECL|field|dataSet
specifier|protected
name|SimpleDataSet
name|dataSet
init|=
operator|new
name|SimpleDataSet
argument_list|(
literal|5
argument_list|)
decl_stmt|;
DECL|field|dataSetName
specifier|final
name|String
name|dataSetName
init|=
literal|"foo"
decl_stmt|;
DECL|field|dataSetUri
specifier|final
name|String
name|dataSetUri
init|=
literal|"dataset://"
operator|+
name|dataSetName
operator|+
literal|"?initialDelay=0"
decl_stmt|;
DECL|field|dataSetUriWithDataSetIndexSetToOff
specifier|final
name|String
name|dataSetUriWithDataSetIndexSetToOff
init|=
name|dataSetUri
operator|+
literal|"&dataSetIndex=off"
decl_stmt|;
DECL|field|dataSetUriWithDataSetIndexSetToLenient
specifier|final
name|String
name|dataSetUriWithDataSetIndexSetToLenient
init|=
name|dataSetUri
operator|+
literal|"&dataSetIndex=lenient"
decl_stmt|;
DECL|field|dataSetUriWithDataSetIndexSetToStrict
specifier|final
name|String
name|dataSetUriWithDataSetIndexSetToStrict
init|=
name|dataSetUri
operator|+
literal|"&dataSetIndex=strict"
decl_stmt|;
DECL|field|resultUri
specifier|final
name|String
name|resultUri
init|=
literal|"mock://result"
decl_stmt|;
annotation|@
name|Override
DECL|method|createJndiContext ()
specifier|protected
name|Context
name|createJndiContext
parameter_list|()
throws|throws
name|Exception
block|{
name|Context
name|context
init|=
name|super
operator|.
name|createJndiContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|bind
argument_list|(
name|dataSetName
argument_list|,
name|dataSet
argument_list|)
expr_stmt|;
return|return
name|context
return|;
block|}
comment|/**      * Ensure the expected message count for a consumer-only endpoint defaults to zero      */
annotation|@
name|Test
DECL|method|testConsumerOnlyEndpoint ()
specifier|public
name|void
name|testConsumerOnlyEndpoint
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|addRoutes
argument_list|(
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
name|dataSetUri
argument_list|)
operator|.
name|to
argument_list|(
name|resultUri
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"expectedMessageCount should be unset(i.e. -1) for a consumer-only endpoint"
argument_list|,
operator|-
literal|1
argument_list|,
name|getMockEndpoint
argument_list|(
name|dataSetUri
argument_list|)
operator|.
name|getExpectedCount
argument_list|()
argument_list|)
expr_stmt|;
name|MockEndpoint
name|result
init|=
name|getMockEndpoint
argument_list|(
name|resultUri
argument_list|)
decl_stmt|;
name|result
operator|.
name|expectedMessageCount
argument_list|(
operator|(
name|int
operator|)
name|dataSet
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|assertMessagesAscending
argument_list|(
name|header
argument_list|(
name|Exchange
operator|.
name|DATASET_INDEX
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
block|}
comment|/**      * Ensure the expected message count for a consumer-producer endpoint defaults to the size of the dataset      */
annotation|@
name|Test
DECL|method|testConsumerWithProducer ()
specifier|public
name|void
name|testConsumerWithProducer
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|addRoutes
argument_list|(
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
name|dataSetUri
argument_list|)
operator|.
name|to
argument_list|(
name|dataSetUri
argument_list|)
operator|.
name|to
argument_list|(
name|resultUri
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"expectedMessageCount should be the same as the DataSet size for a consumer-producer endpoint"
argument_list|,
name|dataSet
operator|.
name|getSize
argument_list|()
argument_list|,
name|getMockEndpoint
argument_list|(
name|dataSetUri
argument_list|)
operator|.
name|getExpectedCount
argument_list|()
argument_list|)
expr_stmt|;
name|MockEndpoint
name|result
init|=
name|getMockEndpoint
argument_list|(
name|resultUri
argument_list|)
decl_stmt|;
name|result
operator|.
name|expectedMessageCount
argument_list|(
operator|(
name|int
operator|)
name|dataSet
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|expectsAscending
argument_list|(
name|header
argument_list|(
name|Exchange
operator|.
name|DATASET_INDEX
argument_list|)
operator|.
name|convertTo
argument_list|(
name|Number
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testWithDataSetIndexUriParameterUnset ()
specifier|public
name|void
name|testWithDataSetIndexUriParameterUnset
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|addRoutes
argument_list|(
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
name|dataSetUri
argument_list|)
operator|.
name|to
argument_list|(
name|resultUri
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|MockEndpoint
name|result
init|=
name|getMockEndpoint
argument_list|(
name|resultUri
argument_list|)
decl_stmt|;
name|result
operator|.
name|expectedMessageCount
argument_list|(
operator|(
name|int
operator|)
name|dataSet
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|allMessages
argument_list|()
operator|.
name|header
argument_list|(
name|Exchange
operator|.
name|DATASET_INDEX
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|result
operator|.
name|expectsAscending
argument_list|(
name|header
argument_list|(
name|Exchange
operator|.
name|DATASET_INDEX
argument_list|)
operator|.
name|convertTo
argument_list|(
name|Number
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testWithDataSetIndexUriParameterSetToOff ()
specifier|public
name|void
name|testWithDataSetIndexUriParameterSetToOff
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|addRoutes
argument_list|(
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
name|dataSetUriWithDataSetIndexSetToOff
argument_list|)
operator|.
name|to
argument_list|(
name|resultUri
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|MockEndpoint
name|result
init|=
name|getMockEndpoint
argument_list|(
name|resultUri
argument_list|)
decl_stmt|;
name|result
operator|.
name|expectedMessageCount
argument_list|(
operator|(
name|int
operator|)
name|dataSet
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|allMessages
argument_list|()
operator|.
name|header
argument_list|(
name|Exchange
operator|.
name|DATASET_INDEX
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testWithDataSetIndexUriParameterSetToLenient ()
specifier|public
name|void
name|testWithDataSetIndexUriParameterSetToLenient
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|addRoutes
argument_list|(
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
name|dataSetUriWithDataSetIndexSetToLenient
argument_list|)
operator|.
name|to
argument_list|(
name|resultUri
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|MockEndpoint
name|result
init|=
name|getMockEndpoint
argument_list|(
name|resultUri
argument_list|)
decl_stmt|;
name|result
operator|.
name|expectedMessageCount
argument_list|(
operator|(
name|int
operator|)
name|dataSet
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|allMessages
argument_list|()
operator|.
name|header
argument_list|(
name|Exchange
operator|.
name|DATASET_INDEX
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|result
operator|.
name|expectsAscending
argument_list|(
name|header
argument_list|(
name|Exchange
operator|.
name|DATASET_INDEX
argument_list|)
operator|.
name|convertTo
argument_list|(
name|Number
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testWithDataSetIndexUriParameterSetToStrict ()
specifier|public
name|void
name|testWithDataSetIndexUriParameterSetToStrict
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|addRoutes
argument_list|(
operator|new
name|RouteBuilder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|Exception
block|{
name|from
argument_list|(
name|dataSetUriWithDataSetIndexSetToStrict
argument_list|)
operator|.
name|to
argument_list|(
name|resultUri
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|MockEndpoint
name|result
init|=
name|getMockEndpoint
argument_list|(
name|resultUri
argument_list|)
decl_stmt|;
name|result
operator|.
name|expectedMessageCount
argument_list|(
operator|(
name|int
operator|)
name|dataSet
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|allMessages
argument_list|()
operator|.
name|header
argument_list|(
name|Exchange
operator|.
name|DATASET_INDEX
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|result
operator|.
name|expectsAscending
argument_list|(
name|header
argument_list|(
name|Exchange
operator|.
name|DATASET_INDEX
argument_list|)
operator|.
name|convertTo
argument_list|(
name|Number
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|start
argument_list|()
expr_stmt|;
name|assertMockEndpointsSatisfied
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

