begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.rest
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|rest
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|impl
operator|.
name|DefaultCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|RestComponentTest
specifier|public
class|class
name|RestComponentTest
block|{
DECL|field|context
specifier|private
name|CamelContext
name|context
decl_stmt|;
DECL|field|rest
specifier|private
name|RestComponent
name|rest
decl_stmt|;
annotation|@
name|Before
DECL|method|createSubjects ()
specifier|public
name|void
name|createSubjects
parameter_list|()
block|{
name|context
operator|=
operator|new
name|DefaultCamelContext
argument_list|()
expr_stmt|;
name|context
operator|.
name|getRegistry
argument_list|()
operator|.
name|bind
argument_list|(
literal|"host-ref"
argument_list|,
literal|"http://localhost:8080"
argument_list|)
expr_stmt|;
name|rest
operator|=
operator|new
name|RestComponent
argument_list|()
expr_stmt|;
name|rest
operator|.
name|setCamelContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldResolveHostParameterAsReference ()
specifier|public
name|void
name|shouldResolveHostParameterAsReference
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|parameters
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|parameters
operator|.
name|put
argument_list|(
literal|"host"
argument_list|,
literal|"#host-ref"
argument_list|)
expr_stmt|;
specifier|final
name|RestEndpoint
name|endpoint
init|=
operator|(
name|RestEndpoint
operator|)
name|rest
operator|.
name|createEndpoint
argument_list|(
literal|"rest://GET:/path:?host=#host-ref"
argument_list|,
literal|"GET:/path"
argument_list|,
name|parameters
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"http://localhost:8080"
argument_list|,
name|endpoint
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|shouldResolveHostParameterAsGivenValue ()
specifier|public
name|void
name|shouldResolveHostParameterAsGivenValue
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|parameters
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|parameters
operator|.
name|put
argument_list|(
literal|"host"
argument_list|,
literal|"http://localhost:8080"
argument_list|)
expr_stmt|;
specifier|final
name|RestEndpoint
name|endpoint
init|=
operator|(
name|RestEndpoint
operator|)
name|rest
operator|.
name|createEndpoint
argument_list|(
literal|"rest://GET:/path:?host=http%3A%2F%2Flocalhost%3A8080"
argument_list|,
literal|"GET:/path"
argument_list|,
name|parameters
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"http://localhost:8080"
argument_list|,
name|endpoint
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

