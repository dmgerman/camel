begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.processor.enricher
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|processor
operator|.
name|enricher
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ContextTestSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ExchangePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|mock
operator|.
name|MockEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|EnricherTest
specifier|public
class|class
name|EnricherTest
extends|extends
name|ContextTestSupport
block|{
DECL|field|aggregationStrategy
specifier|private
specifier|static
name|SampleAggregator
name|aggregationStrategy
init|=
operator|new
name|SampleAggregator
argument_list|()
decl_stmt|;
DECL|field|mock
specifier|protected
name|MockEndpoint
name|mock
decl_stmt|;
annotation|@
name|Override
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|mock
operator|=
name|getMockEndpoint
argument_list|(
literal|"mock:mock"
argument_list|)
expr_stmt|;
block|}
comment|// -------------------------------------------------------------
comment|//  InOnly routes
comment|// -------------------------------------------------------------
annotation|@
name|Test
DECL|method|testEnrichInOnly ()
specifier|public
name|void
name|testEnrichInOnly
parameter_list|()
throws|throws
name|InterruptedException
block|{
name|mock
operator|.
name|expectedBodiesReceived
argument_list|(
literal|"test:blah"
argument_list|)
expr_stmt|;
name|mock
operator|.
name|message
argument_list|(
literal|0
argument_list|)
operator|.
name|exchangeProperty
argument_list|(
name|Exchange
operator|.
name|TO_ENDPOINT
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"mock://mock"
argument_list|)
expr_stmt|;
name|template
operator|.
name|sendBody
argument_list|(
literal|"direct:enricher-test-1"
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|mock
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEnrichErrorInOnly ()
specifier|public
name|void
name|testEnrichErrorInOnly
parameter_list|()
throws|throws
name|InterruptedException
block|{
name|mock
operator|.
name|expectedMessageCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|Exchange
name|exchange
init|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:enricher-test-4"
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|mock
operator|.
name|assertIsSatisfied
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"failed"
argument_list|,
name|exchange
operator|.
name|getException
argument_list|()
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|exchange
operator|.
name|hasOut
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// -------------------------------------------------------------
comment|//  InOut routes
comment|// -------------------------------------------------------------
annotation|@
name|Test
DECL|method|testEnrichInOut ()
specifier|public
name|void
name|testEnrichInOut
parameter_list|()
throws|throws
name|InterruptedException
block|{
name|String
name|result
init|=
operator|(
name|String
operator|)
name|template
operator|.
name|sendBody
argument_list|(
literal|"direct:enricher-test-5"
argument_list|,
name|ExchangePattern
operator|.
name|InOut
argument_list|,
literal|"test"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"test:blah"
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEnrichInOutPlusHeader ()
specifier|public
name|void
name|testEnrichInOutPlusHeader
parameter_list|()
throws|throws
name|InterruptedException
block|{
name|Exchange
name|exchange
init|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:enricher-test-5"
argument_list|,
name|ExchangePattern
operator|.
name|InOut
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setHeader
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"bar"
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getHeader
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test:blah"
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|exchange
operator|.
name|hasOut
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|exchange
operator|.
name|getException
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEnrichErrorInOut ()
specifier|public
name|void
name|testEnrichErrorInOut
parameter_list|()
throws|throws
name|InterruptedException
block|{
name|Exchange
name|exchange
init|=
name|template
operator|.
name|send
argument_list|(
literal|"direct:enricher-test-8"
argument_list|,
name|ExchangePattern
operator|.
name|InOut
argument_list|,
operator|new
name|Processor
argument_list|()
block|{
specifier|public
name|void
name|process
parameter_list|(
name|Exchange
name|exchange
parameter_list|)
block|{
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|setBody
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"failed"
argument_list|,
name|exchange
operator|.
name|getException
argument_list|()
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|exchange
operator|.
name|hasOut
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createRouteBuilder ()
specifier|protected
name|RouteBuilder
name|createRouteBuilder
parameter_list|()
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
comment|// -------------------------------------------------------------
comment|//  InOnly routes
comment|// -------------------------------------------------------------
name|from
argument_list|(
literal|"direct:enricher-test-1"
argument_list|)
operator|.
name|enrich
argument_list|(
literal|"direct:enricher-constant-resource"
argument_list|,
name|aggregationStrategy
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:mock"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:enricher-test-3"
argument_list|)
operator|.
name|enrich
argument_list|(
literal|"direct:enricher-fault-resource"
argument_list|,
name|aggregationStrategy
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:mock"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:enricher-test-4"
argument_list|)
operator|.
name|errorHandler
argument_list|(
name|noErrorHandler
argument_list|()
argument_list|)
comment|// avoid re-deliveries
operator|.
name|enrich
argument_list|(
literal|"direct:enricher-error-resource"
argument_list|,
name|aggregationStrategy
argument_list|)
operator|.
name|to
argument_list|(
literal|"mock:mock"
argument_list|)
expr_stmt|;
comment|// -------------------------------------------------------------
comment|//  InOut routes
comment|// -------------------------------------------------------------
name|from
argument_list|(
literal|"direct:enricher-test-5"
argument_list|)
operator|.
name|enrich
argument_list|(
literal|"direct:enricher-constant-resource"
argument_list|,
name|aggregationStrategy
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:enricher-test-7"
argument_list|)
operator|.
name|enrich
argument_list|(
literal|"direct:enricher-fault-resource"
argument_list|,
name|aggregationStrategy
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:enricher-test-8"
argument_list|)
operator|.
name|errorHandler
argument_list|(
name|noErrorHandler
argument_list|()
argument_list|)
comment|// avoid re-deliveries
operator|.
name|enrich
argument_list|(
literal|"direct:enricher-error-resource"
argument_list|,
name|aggregationStrategy
argument_list|)
expr_stmt|;
comment|// -------------------------------------------------------------
comment|//  Enricher resources
comment|// -------------------------------------------------------------
name|from
argument_list|(
literal|"direct:enricher-constant-resource"
argument_list|)
operator|.
name|transform
argument_list|()
operator|.
name|constant
argument_list|(
literal|"blah"
argument_list|)
expr_stmt|;
name|from
argument_list|(
literal|"direct:enricher-error-resource"
argument_list|)
operator|.
name|errorHandler
argument_list|(
name|noErrorHandler
argument_list|()
argument_list|)
operator|.
name|process
argument_list|(
operator|new
name|FailureProcessor
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

