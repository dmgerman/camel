begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.spi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Processor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Route
import|;
end_import

begin_comment
comment|/**  * This interface is implemented by all events.  */
end_comment

begin_interface
DECL|interface|CamelEvent
specifier|public
interface|interface
name|CamelEvent
block|{
DECL|enum|Type
enum|enum
name|Type
block|{
DECL|enumConstant|CamelContextResumed
name|CamelContextResumed
block|,
DECL|enumConstant|CamelContextResumeFailure
name|CamelContextResumeFailure
block|,
DECL|enumConstant|CamelContextResuming
name|CamelContextResuming
block|,
DECL|enumConstant|CamelContextStarted
name|CamelContextStarted
block|,
DECL|enumConstant|CamelContextStarting
name|CamelContextStarting
block|,
DECL|enumConstant|CamelContextStartupFailure
name|CamelContextStartupFailure
block|,
DECL|enumConstant|CamelContextStopFailure
name|CamelContextStopFailure
block|,
DECL|enumConstant|CamelContextStopped
name|CamelContextStopped
block|,
DECL|enumConstant|CamelContextStopping
name|CamelContextStopping
block|,
DECL|enumConstant|CamelContextSuspended
name|CamelContextSuspended
block|,
DECL|enumConstant|CamelContextSuspending
name|CamelContextSuspending
block|,
DECL|enumConstant|ExchangeCompleted
name|ExchangeCompleted
block|,
DECL|enumConstant|ExchangeCreated
name|ExchangeCreated
block|,
DECL|enumConstant|ExchangeFailed
name|ExchangeFailed
block|,
DECL|enumConstant|ExchangeFailureHandled
name|ExchangeFailureHandled
block|,
DECL|enumConstant|ExchangeFailureHandling
name|ExchangeFailureHandling
block|,
DECL|enumConstant|ExchangeRedelivery
name|ExchangeRedelivery
block|,
DECL|enumConstant|ExchangeSending
name|ExchangeSending
block|,
DECL|enumConstant|ExchangeSent
name|ExchangeSent
block|,
DECL|enumConstant|StepStarted
name|StepStarted
block|,
DECL|enumConstant|StepCompleted
name|StepCompleted
block|,
DECL|enumConstant|StepFailed
name|StepFailed
block|,
DECL|enumConstant|RouteAdded
name|RouteAdded
block|,
DECL|enumConstant|RouteRemoved
name|RouteRemoved
block|,
DECL|enumConstant|RouteStarted
name|RouteStarted
block|,
DECL|enumConstant|RouteStopped
name|RouteStopped
block|,
DECL|enumConstant|ServiceStartupFailure
name|ServiceStartupFailure
block|,
DECL|enumConstant|ServiceStopFailure
name|ServiceStopFailure
block|,
DECL|enumConstant|Custom
name|Custom
block|}
DECL|method|getType ()
name|Type
name|getType
parameter_list|()
function_decl|;
DECL|method|getSource ()
name|Object
name|getSource
parameter_list|()
function_decl|;
comment|/**      * This interface is implemented by all events that contain an exception and is used to      * retrieve the exception in a universal way.      */
DECL|interface|FailureEvent
interface|interface
name|FailureEvent
extends|extends
name|CamelEvent
block|{
DECL|method|getCause ()
name|Throwable
name|getCause
parameter_list|()
function_decl|;
block|}
DECL|interface|CamelContextEvent
interface|interface
name|CamelContextEvent
extends|extends
name|CamelEvent
block|{
DECL|method|getContext ()
name|CamelContext
name|getContext
parameter_list|()
function_decl|;
DECL|method|getSource ()
specifier|default
name|Object
name|getSource
parameter_list|()
block|{
return|return
name|getContext
argument_list|()
return|;
block|}
block|}
DECL|interface|CamelContextResumedEvent
interface|interface
name|CamelContextResumedEvent
extends|extends
name|CamelContextEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|CamelContextResumed
return|;
block|}
block|}
DECL|interface|CamelContextResumeFailureEvent
interface|interface
name|CamelContextResumeFailureEvent
extends|extends
name|CamelContextEvent
extends|,
name|FailureEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|CamelContextResumeFailure
return|;
block|}
block|}
DECL|interface|CamelContextResumingEvent
interface|interface
name|CamelContextResumingEvent
extends|extends
name|CamelContextEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|CamelContextResuming
return|;
block|}
block|}
DECL|interface|CamelContextStartedEvent
interface|interface
name|CamelContextStartedEvent
extends|extends
name|CamelContextEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|CamelContextStarted
return|;
block|}
block|}
DECL|interface|CamelContextStartingEvent
interface|interface
name|CamelContextStartingEvent
extends|extends
name|CamelContextEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|CamelContextStarting
return|;
block|}
block|}
DECL|interface|CamelContextStartupFailureEvent
interface|interface
name|CamelContextStartupFailureEvent
extends|extends
name|CamelContextEvent
extends|,
name|FailureEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|CamelContextStartupFailure
return|;
block|}
block|}
DECL|interface|CamelContextStopFailureEvent
interface|interface
name|CamelContextStopFailureEvent
extends|extends
name|CamelContextEvent
extends|,
name|FailureEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|CamelContextStopFailure
return|;
block|}
block|}
DECL|interface|CamelContextStoppedEvent
interface|interface
name|CamelContextStoppedEvent
extends|extends
name|CamelContextEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|CamelContextStopped
return|;
block|}
block|}
DECL|interface|CamelContextStoppingEvent
interface|interface
name|CamelContextStoppingEvent
extends|extends
name|CamelContextEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|CamelContextStopping
return|;
block|}
block|}
DECL|interface|CamelContextSuspendedEvent
interface|interface
name|CamelContextSuspendedEvent
extends|extends
name|CamelContextEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|CamelContextSuspended
return|;
block|}
block|}
DECL|interface|CamelContextSuspendingEvent
interface|interface
name|CamelContextSuspendingEvent
extends|extends
name|CamelContextEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|CamelContextSuspending
return|;
block|}
block|}
DECL|interface|ExchangeEvent
interface|interface
name|ExchangeEvent
extends|extends
name|CamelEvent
block|{
DECL|method|getExchange ()
name|Exchange
name|getExchange
parameter_list|()
function_decl|;
DECL|method|getSource ()
specifier|default
name|Object
name|getSource
parameter_list|()
block|{
return|return
name|getExchange
argument_list|()
return|;
block|}
block|}
DECL|interface|ExchangeCompletedEvent
interface|interface
name|ExchangeCompletedEvent
extends|extends
name|ExchangeEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|ExchangeCompleted
return|;
block|}
block|}
DECL|interface|ExchangeCreatedEvent
interface|interface
name|ExchangeCreatedEvent
extends|extends
name|ExchangeEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|ExchangeCreated
return|;
block|}
block|}
DECL|interface|ExchangeFailedEvent
interface|interface
name|ExchangeFailedEvent
extends|extends
name|ExchangeEvent
extends|,
name|FailureEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|ExchangeFailed
return|;
block|}
block|}
DECL|interface|ExchangeFailureEvent
interface|interface
name|ExchangeFailureEvent
extends|extends
name|ExchangeEvent
block|{
DECL|method|getFailureHandler ()
name|Processor
name|getFailureHandler
parameter_list|()
function_decl|;
DECL|method|isDeadLetterChannel ()
name|boolean
name|isDeadLetterChannel
parameter_list|()
function_decl|;
DECL|method|getDeadLetterUri ()
name|String
name|getDeadLetterUri
parameter_list|()
function_decl|;
block|}
DECL|interface|ExchangeFailureHandledEvent
interface|interface
name|ExchangeFailureHandledEvent
extends|extends
name|ExchangeFailureEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|ExchangeFailureHandled
return|;
block|}
block|}
DECL|interface|ExchangeFailureHandlingEvent
interface|interface
name|ExchangeFailureHandlingEvent
extends|extends
name|ExchangeFailureEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|ExchangeFailureHandling
return|;
block|}
block|}
DECL|interface|ExchangeRedeliveryEvent
interface|interface
name|ExchangeRedeliveryEvent
extends|extends
name|ExchangeEvent
block|{
DECL|method|getAttempt ()
name|int
name|getAttempt
parameter_list|()
function_decl|;
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|ExchangeRedelivery
return|;
block|}
block|}
DECL|interface|ExchangeSendingEvent
interface|interface
name|ExchangeSendingEvent
extends|extends
name|ExchangeEvent
block|{
DECL|method|getEndpoint ()
name|Endpoint
name|getEndpoint
parameter_list|()
function_decl|;
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|ExchangeSending
return|;
block|}
block|}
DECL|interface|ExchangeSentEvent
interface|interface
name|ExchangeSentEvent
extends|extends
name|ExchangeEvent
block|{
DECL|method|getEndpoint ()
name|Endpoint
name|getEndpoint
parameter_list|()
function_decl|;
DECL|method|getTimeTaken ()
name|long
name|getTimeTaken
parameter_list|()
function_decl|;
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|ExchangeSent
return|;
block|}
block|}
DECL|interface|StepEvent
interface|interface
name|StepEvent
extends|extends
name|ExchangeEvent
block|{
DECL|method|getStepId ()
name|String
name|getStepId
parameter_list|()
function_decl|;
block|}
DECL|interface|StepStartedEvent
interface|interface
name|StepStartedEvent
extends|extends
name|StepEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|StepStarted
return|;
block|}
block|}
DECL|interface|StepCompletedEvent
interface|interface
name|StepCompletedEvent
extends|extends
name|StepEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|StepCompleted
return|;
block|}
block|}
DECL|interface|StepFailedEvent
interface|interface
name|StepFailedEvent
extends|extends
name|StepEvent
extends|,
name|FailureEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|StepFailed
return|;
block|}
block|}
DECL|interface|RouteEvent
interface|interface
name|RouteEvent
extends|extends
name|CamelEvent
block|{
DECL|method|getRoute ()
name|Route
name|getRoute
parameter_list|()
function_decl|;
DECL|method|getSource ()
specifier|default
name|Object
name|getSource
parameter_list|()
block|{
return|return
name|getRoute
argument_list|()
return|;
block|}
block|}
DECL|interface|RouteAddedEvent
interface|interface
name|RouteAddedEvent
extends|extends
name|RouteEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|RouteAdded
return|;
block|}
block|}
DECL|interface|RouteRemovedEvent
interface|interface
name|RouteRemovedEvent
extends|extends
name|RouteEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|RouteRemoved
return|;
block|}
block|}
DECL|interface|RouteStartedEvent
interface|interface
name|RouteStartedEvent
extends|extends
name|RouteEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|RouteStarted
return|;
block|}
block|}
DECL|interface|RouteStoppedEvent
interface|interface
name|RouteStoppedEvent
extends|extends
name|RouteEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|RouteStopped
return|;
block|}
block|}
DECL|interface|ServiceEvent
interface|interface
name|ServiceEvent
extends|extends
name|CamelEvent
block|{
DECL|method|getService ()
name|Object
name|getService
parameter_list|()
function_decl|;
DECL|method|getSource ()
specifier|default
name|Object
name|getSource
parameter_list|()
block|{
return|return
name|getService
argument_list|()
return|;
block|}
block|}
DECL|interface|ServiceStartupFailureEvent
interface|interface
name|ServiceStartupFailureEvent
extends|extends
name|ServiceEvent
extends|,
name|FailureEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|ServiceStartupFailure
return|;
block|}
block|}
DECL|interface|ServiceStopFailureEvent
interface|interface
name|ServiceStopFailureEvent
extends|extends
name|ServiceEvent
extends|,
name|FailureEvent
block|{
DECL|method|getType ()
specifier|default
name|Type
name|getType
parameter_list|()
block|{
return|return
name|Type
operator|.
name|ServiceStopFailure
return|;
block|}
block|}
block|}
end_interface

end_unit

