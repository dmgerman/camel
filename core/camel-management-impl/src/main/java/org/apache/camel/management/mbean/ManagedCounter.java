begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.management.mbean
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|management
operator|.
name|mbean
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|api
operator|.
name|management
operator|.
name|ManagedResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|api
operator|.
name|management
operator|.
name|mbean
operator|.
name|ManagedCounterMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|ManagementStrategy
import|;
end_import

begin_class
annotation|@
name|ManagedResource
argument_list|(
name|description
operator|=
literal|"Managed Counter"
argument_list|)
DECL|class|ManagedCounter
specifier|public
specifier|abstract
class|class
name|ManagedCounter
implements|implements
name|ManagedCounterMBean
block|{
DECL|field|exchangesTotal
specifier|protected
name|Statistic
name|exchangesTotal
decl_stmt|;
DECL|field|startTimestamp
specifier|protected
name|Date
name|startTimestamp
decl_stmt|;
DECL|field|resetTimestamp
specifier|protected
name|Date
name|resetTimestamp
decl_stmt|;
DECL|method|init (ManagementStrategy strategy)
specifier|public
name|void
name|init
parameter_list|(
name|ManagementStrategy
name|strategy
parameter_list|)
block|{
name|this
operator|.
name|exchangesTotal
operator|=
operator|new
name|StatisticCounter
argument_list|()
expr_stmt|;
name|Date
name|now
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|startTimestamp
operator|=
name|now
expr_stmt|;
name|resetTimestamp
operator|=
name|now
expr_stmt|;
block|}
DECL|method|reset ()
specifier|public
name|void
name|reset
parameter_list|()
block|{
name|exchangesTotal
operator|.
name|reset
argument_list|()
expr_stmt|;
name|resetTimestamp
operator|=
operator|new
name|Date
argument_list|()
expr_stmt|;
block|}
DECL|method|getStartTimestamp ()
specifier|public
name|Date
name|getStartTimestamp
parameter_list|()
block|{
return|return
name|startTimestamp
return|;
block|}
DECL|method|getResetTimestamp ()
specifier|public
name|Date
name|getResetTimestamp
parameter_list|()
block|{
return|return
name|resetTimestamp
return|;
block|}
DECL|method|getExchangesTotal ()
specifier|public
name|long
name|getExchangesTotal
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|exchangesTotal
operator|.
name|getValue
argument_list|()
return|;
block|}
DECL|method|increment ()
specifier|public
name|void
name|increment
parameter_list|()
block|{
name|exchangesTotal
operator|.
name|increment
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

