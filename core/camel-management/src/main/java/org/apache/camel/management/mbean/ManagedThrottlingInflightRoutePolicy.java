begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.management.mbean
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|management
operator|.
name|mbean
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|LoggingLevel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|api
operator|.
name|management
operator|.
name|ManagedResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|api
operator|.
name|management
operator|.
name|mbean
operator|.
name|ManagedThrottlingInflightRoutePolicyMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|throttling
operator|.
name|ThrottlingInflightRoutePolicy
import|;
end_import

begin_class
annotation|@
name|ManagedResource
argument_list|(
name|description
operator|=
literal|"Managed ThrottlingInflightRoutePolicy"
argument_list|)
DECL|class|ManagedThrottlingInflightRoutePolicy
specifier|public
class|class
name|ManagedThrottlingInflightRoutePolicy
extends|extends
name|ManagedService
implements|implements
name|ManagedThrottlingInflightRoutePolicyMBean
block|{
DECL|field|policy
specifier|private
specifier|final
name|ThrottlingInflightRoutePolicy
name|policy
decl_stmt|;
DECL|method|ManagedThrottlingInflightRoutePolicy (CamelContext context, ThrottlingInflightRoutePolicy policy)
specifier|public
name|ManagedThrottlingInflightRoutePolicy
parameter_list|(
name|CamelContext
name|context
parameter_list|,
name|ThrottlingInflightRoutePolicy
name|policy
parameter_list|)
block|{
name|super
argument_list|(
name|context
argument_list|,
name|policy
argument_list|)
expr_stmt|;
name|this
operator|.
name|policy
operator|=
name|policy
expr_stmt|;
block|}
DECL|method|getPolicy ()
specifier|public
name|ThrottlingInflightRoutePolicy
name|getPolicy
parameter_list|()
block|{
return|return
name|policy
return|;
block|}
annotation|@
name|Override
DECL|method|getMaxInflightExchanges ()
specifier|public
name|int
name|getMaxInflightExchanges
parameter_list|()
block|{
return|return
name|getPolicy
argument_list|()
operator|.
name|getMaxInflightExchanges
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|setMaxInflightExchanges (int maxInflightExchanges)
specifier|public
name|void
name|setMaxInflightExchanges
parameter_list|(
name|int
name|maxInflightExchanges
parameter_list|)
block|{
name|getPolicy
argument_list|()
operator|.
name|setMaxInflightExchanges
argument_list|(
name|maxInflightExchanges
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getResumePercentOfMax ()
specifier|public
name|int
name|getResumePercentOfMax
parameter_list|()
block|{
return|return
name|getPolicy
argument_list|()
operator|.
name|getResumePercentOfMax
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|setResumePercentOfMax (int resumePercentOfMax)
specifier|public
name|void
name|setResumePercentOfMax
parameter_list|(
name|int
name|resumePercentOfMax
parameter_list|)
block|{
name|getPolicy
argument_list|()
operator|.
name|setResumePercentOfMax
argument_list|(
name|resumePercentOfMax
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getScope ()
specifier|public
name|String
name|getScope
parameter_list|()
block|{
return|return
name|getPolicy
argument_list|()
operator|.
name|getScope
argument_list|()
operator|.
name|name
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|setScope (String scope)
specifier|public
name|void
name|setScope
parameter_list|(
name|String
name|scope
parameter_list|)
block|{
name|getPolicy
argument_list|()
operator|.
name|setScope
argument_list|(
name|ThrottlingInflightRoutePolicy
operator|.
name|ThrottlingScope
operator|.
name|valueOf
argument_list|(
name|scope
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getLoggingLevel ()
specifier|public
name|String
name|getLoggingLevel
parameter_list|()
block|{
return|return
name|getPolicy
argument_list|()
operator|.
name|getLoggingLevel
argument_list|()
operator|.
name|name
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|setLoggingLevel (String loggingLevel)
specifier|public
name|void
name|setLoggingLevel
parameter_list|(
name|String
name|loggingLevel
parameter_list|)
block|{
name|LoggingLevel
name|level
init|=
name|LoggingLevel
operator|.
name|valueOf
argument_list|(
name|loggingLevel
argument_list|)
decl_stmt|;
name|getPolicy
argument_list|()
operator|.
name|setLoggingLevel
argument_list|(
name|level
argument_list|)
expr_stmt|;
name|getPolicy
argument_list|()
operator|.
name|getLogger
argument_list|()
operator|.
name|setLevel
argument_list|(
name|level
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

