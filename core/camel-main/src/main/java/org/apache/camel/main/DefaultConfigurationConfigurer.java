begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.main
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|main
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|ExtendedCamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|model
operator|.
name|Model
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|StreamCachingStrategy
import|;
end_import

begin_comment
comment|/**  * To configure the {@link DefaultConfigurationProperties} on {@link org.apache.camel.CamelContext}  * used by Camel Main, Camel Spring Boot and other runtimes.  */
end_comment

begin_class
DECL|class|DefaultConfigurationConfigurer
specifier|public
specifier|final
class|class
name|DefaultConfigurationConfigurer
block|{
DECL|method|DefaultConfigurationConfigurer ()
specifier|private
name|DefaultConfigurationConfigurer
parameter_list|()
block|{     }
comment|/**      * Configures the {@link CamelContext} with the configuration.      *      * @param camelContext the camel context      * @param config       the configuration      */
DECL|method|configure (CamelContext camelContext, DefaultConfigurationProperties config)
specifier|public
specifier|static
name|void
name|configure
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|,
name|DefaultConfigurationProperties
name|config
parameter_list|)
block|{
if|if
condition|(
operator|!
name|config
operator|.
name|isJmxEnabled
argument_list|()
condition|)
block|{
name|camelContext
operator|.
name|disableJMX
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|config
operator|.
name|getName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|camelContext
operator|.
name|adapt
argument_list|(
name|ExtendedCamelContext
operator|.
name|class
argument_list|)
operator|.
name|setName
argument_list|(
name|config
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|config
operator|.
name|getShutdownTimeout
argument_list|()
operator|>
literal|0
condition|)
block|{
name|camelContext
operator|.
name|getShutdownStrategy
argument_list|()
operator|.
name|setTimeout
argument_list|(
name|config
operator|.
name|getShutdownTimeout
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|camelContext
operator|.
name|getShutdownStrategy
argument_list|()
operator|.
name|setSuppressLoggingOnTimeout
argument_list|(
name|config
operator|.
name|isShutdownSuppressLoggingOnTimeout
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|getShutdownStrategy
argument_list|()
operator|.
name|setShutdownNowOnTimeout
argument_list|(
name|config
operator|.
name|isShutdownNowOnTimeout
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|getShutdownStrategy
argument_list|()
operator|.
name|setShutdownRoutesInReverseOrder
argument_list|(
name|config
operator|.
name|isShutdownRoutesInReverseOrder
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|getShutdownStrategy
argument_list|()
operator|.
name|setLogInflightExchangesOnTimeout
argument_list|(
name|config
operator|.
name|isShutdownLogInflightExchangesOnTimeout
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|config
operator|.
name|getLogDebugMaxChars
argument_list|()
operator|!=
literal|0
condition|)
block|{
name|camelContext
operator|.
name|getGlobalOptions
argument_list|()
operator|.
name|put
argument_list|(
name|Exchange
operator|.
name|LOG_DEBUG_BODY_MAX_CHARS
argument_list|,
literal|""
operator|+
name|config
operator|.
name|getLogDebugMaxChars
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// stream caching
name|camelContext
operator|.
name|setStreamCaching
argument_list|(
name|config
operator|.
name|isStreamCachingEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|getStreamCachingStrategy
argument_list|()
operator|.
name|setAnySpoolRules
argument_list|(
name|config
operator|.
name|isStreamCachingAnySpoolRules
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|getStreamCachingStrategy
argument_list|()
operator|.
name|setBufferSize
argument_list|(
name|config
operator|.
name|getStreamCachingBufferSize
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|getStreamCachingStrategy
argument_list|()
operator|.
name|setRemoveSpoolDirectoryWhenStopping
argument_list|(
name|config
operator|.
name|isStreamCachingRemoveSpoolDirectoryWhenStopping
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|getStreamCachingStrategy
argument_list|()
operator|.
name|setSpoolCipher
argument_list|(
name|config
operator|.
name|getStreamCachingSpoolCipher
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|config
operator|.
name|getStreamCachingSpoolDirectory
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|camelContext
operator|.
name|getStreamCachingStrategy
argument_list|()
operator|.
name|setSpoolDirectory
argument_list|(
name|config
operator|.
name|getStreamCachingSpoolDirectory
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|config
operator|.
name|getStreamCachingSpoolThreshold
argument_list|()
operator|!=
literal|0
condition|)
block|{
name|camelContext
operator|.
name|getStreamCachingStrategy
argument_list|()
operator|.
name|setSpoolThreshold
argument_list|(
name|config
operator|.
name|getStreamCachingSpoolThreshold
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|config
operator|.
name|getStreamCachingSpoolUsedHeapMemoryLimit
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|StreamCachingStrategy
operator|.
name|SpoolUsedHeapMemoryLimit
name|limit
decl_stmt|;
if|if
condition|(
literal|"Committed"
operator|.
name|equalsIgnoreCase
argument_list|(
name|config
operator|.
name|getStreamCachingSpoolUsedHeapMemoryLimit
argument_list|()
argument_list|)
condition|)
block|{
name|limit
operator|=
name|StreamCachingStrategy
operator|.
name|SpoolUsedHeapMemoryLimit
operator|.
name|Committed
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"Max"
operator|.
name|equalsIgnoreCase
argument_list|(
name|config
operator|.
name|getStreamCachingSpoolUsedHeapMemoryLimit
argument_list|()
argument_list|)
condition|)
block|{
name|limit
operator|=
name|StreamCachingStrategy
operator|.
name|SpoolUsedHeapMemoryLimit
operator|.
name|Max
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Invalid option "
operator|+
name|config
operator|.
name|getStreamCachingSpoolUsedHeapMemoryLimit
argument_list|()
operator|+
literal|" must either be Committed or Max"
argument_list|)
throw|;
block|}
name|camelContext
operator|.
name|getStreamCachingStrategy
argument_list|()
operator|.
name|setSpoolUsedHeapMemoryLimit
argument_list|(
name|limit
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|config
operator|.
name|getStreamCachingSpoolUsedHeapMemoryThreshold
argument_list|()
operator|!=
literal|0
condition|)
block|{
name|camelContext
operator|.
name|getStreamCachingStrategy
argument_list|()
operator|.
name|setSpoolUsedHeapMemoryThreshold
argument_list|(
name|config
operator|.
name|getStreamCachingSpoolUsedHeapMemoryThreshold
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|camelContext
operator|.
name|setMessageHistory
argument_list|(
name|config
operator|.
name|isMessageHistory
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|setLogMask
argument_list|(
name|config
operator|.
name|isLogMask
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|setLogExhaustedMessageBody
argument_list|(
name|config
operator|.
name|isLogExhaustedMessageBody
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|setHandleFault
argument_list|(
name|config
operator|.
name|isHandleFault
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|setAutoStartup
argument_list|(
name|config
operator|.
name|isAutoStartup
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|setAllowUseOriginalMessage
argument_list|(
name|config
operator|.
name|isAllowUseOriginalMessage
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|setUseBreadcrumb
argument_list|(
name|config
operator|.
name|isUseBreadcrumb
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|setUseDataType
argument_list|(
name|config
operator|.
name|isUseDataType
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|setUseMDCLogging
argument_list|(
name|config
operator|.
name|isUseMdcLogging
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|setLoadTypeConverters
argument_list|(
name|config
operator|.
name|isLoadTypeConverters
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|camelContext
operator|.
name|getManagementStrategy
argument_list|()
operator|.
name|getManagementAgent
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|camelContext
operator|.
name|getManagementStrategy
argument_list|()
operator|.
name|getManagementAgent
argument_list|()
operator|.
name|setEndpointRuntimeStatisticsEnabled
argument_list|(
name|config
operator|.
name|isEndpointRuntimeStatisticsEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|getManagementStrategy
argument_list|()
operator|.
name|getManagementAgent
argument_list|()
operator|.
name|setStatisticsLevel
argument_list|(
name|config
operator|.
name|getJmxManagementStatisticsLevel
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|getManagementStrategy
argument_list|()
operator|.
name|getManagementAgent
argument_list|()
operator|.
name|setManagementNamePattern
argument_list|(
name|config
operator|.
name|getJmxManagementNamePattern
argument_list|()
argument_list|)
expr_stmt|;
name|camelContext
operator|.
name|getManagementStrategy
argument_list|()
operator|.
name|getManagementAgent
argument_list|()
operator|.
name|setCreateConnector
argument_list|(
name|config
operator|.
name|isJmxCreateConnector
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|camelContext
operator|.
name|setTracing
argument_list|(
name|config
operator|.
name|isTracing
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|config
operator|.
name|getThreadNamePattern
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|camelContext
operator|.
name|getExecutorServiceManager
argument_list|()
operator|.
name|setThreadNamePattern
argument_list|(
name|config
operator|.
name|getThreadNamePattern
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|config
operator|.
name|getRouteFilterIncludePattern
argument_list|()
operator|!=
literal|null
operator|||
name|config
operator|.
name|getRouteFilterExcludePattern
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|camelContext
operator|.
name|getExtension
argument_list|(
name|Model
operator|.
name|class
argument_list|)
operator|.
name|setRouteFilterPattern
argument_list|(
name|config
operator|.
name|getRouteFilterIncludePattern
argument_list|()
argument_list|,
name|config
operator|.
name|getRouteFilterExcludePattern
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

