begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.main.support
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|main
operator|.
name|support
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Endpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|PropertyConfigurer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|annotations
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|support
operator|.
name|DefaultComponent
import|;
end_import

begin_class
annotation|@
name|Component
argument_list|(
literal|"dummy"
argument_list|)
DECL|class|MyDummyComponent
specifier|public
class|class
name|MyDummyComponent
extends|extends
name|DefaultComponent
block|{
DECL|field|configuration
specifier|private
name|MyDummyConfiguration
name|configuration
decl_stmt|;
DECL|field|configurer
specifier|private
name|boolean
name|configurer
decl_stmt|;
DECL|field|componentValue
specifier|private
name|String
name|componentValue
decl_stmt|;
DECL|method|MyDummyComponent (boolean configurer)
specifier|public
name|MyDummyComponent
parameter_list|(
name|boolean
name|configurer
parameter_list|)
block|{
name|this
operator|.
name|configurer
operator|=
name|configurer
expr_stmt|;
block|}
DECL|method|getConfiguration ()
specifier|public
name|MyDummyConfiguration
name|getConfiguration
parameter_list|()
block|{
return|return
name|configuration
return|;
block|}
DECL|method|setConfiguration (MyDummyConfiguration configuration)
specifier|public
name|void
name|setConfiguration
parameter_list|(
name|MyDummyConfiguration
name|configuration
parameter_list|)
block|{
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
block|}
comment|// this method makes camel no able to find a suitable setter
DECL|method|setConfiguration (Object configuration)
specifier|public
name|void
name|setConfiguration
parameter_list|(
name|Object
name|configuration
parameter_list|)
block|{
name|this
operator|.
name|configuration
operator|=
operator|(
name|MyDummyConfiguration
operator|)
name|configuration
expr_stmt|;
block|}
DECL|method|getComponentValue ()
specifier|public
name|String
name|getComponentValue
parameter_list|()
block|{
return|return
name|componentValue
return|;
block|}
DECL|method|setComponentValue (String componentValue)
specifier|public
name|MyDummyComponent
name|setComponentValue
parameter_list|(
name|String
name|componentValue
parameter_list|)
block|{
name|this
operator|.
name|componentValue
operator|=
name|componentValue
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|createEndpoint (String uri, String remaining, Map<String, Object> parameters)
specifier|protected
name|Endpoint
name|createEndpoint
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|remaining
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|parameters
parameter_list|)
throws|throws
name|Exception
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
DECL|method|getComponentPropertyConfigurer ()
specifier|public
name|PropertyConfigurer
name|getComponentPropertyConfigurer
parameter_list|()
block|{
return|return
name|configurer
condition|?
operator|new
name|MyDummyComponentConfigurer
argument_list|()
else|:
literal|null
return|;
block|}
block|}
end_class

end_unit

