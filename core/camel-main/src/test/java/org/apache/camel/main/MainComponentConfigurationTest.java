begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.main
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|main
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|main
operator|.
name|support
operator|.
name|MyDummyComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|MainComponentConfigurationTest
specifier|public
class|class
name|MainComponentConfigurationTest
extends|extends
name|Assert
block|{
annotation|@
name|Test
DECL|method|testComponentConfiguration ()
specifier|public
name|void
name|testComponentConfiguration
parameter_list|()
block|{
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"camel.component.dummy.configuration.log"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"camel.component.dummy.component-value"
argument_list|,
literal|"component-value"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"camel.component.dummy.configuration.nested.value"
argument_list|,
literal|"nested-value"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"camel.component.dummy.configuration"
argument_list|,
literal|"#class:org.apache.camel.main.support.MyDummyConfiguration"
argument_list|)
expr_stmt|;
name|Main
name|main
init|=
operator|new
name|Main
argument_list|()
decl_stmt|;
try|try
block|{
name|MyDummyComponent
name|dummy
init|=
operator|new
name|MyDummyComponent
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|main
operator|.
name|bind
argument_list|(
literal|"dummy"
argument_list|,
name|dummy
argument_list|)
expr_stmt|;
name|main
operator|.
name|setOverrideProperties
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|main
operator|.
name|setDefaultPropertyPlaceholderLocation
argument_list|(
literal|"false"
argument_list|)
expr_stmt|;
name|main
operator|.
name|start
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"component-value"
argument_list|,
name|dummy
operator|.
name|getComponentValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|dummy
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|dummy
operator|.
name|getConfiguration
argument_list|()
operator|.
name|isLog
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|dummy
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getNested
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"nested-value"
argument_list|,
name|dummy
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getNested
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|main
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

