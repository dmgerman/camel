begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.core.osgi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|core
operator|.
name|osgi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|spi
operator|.
name|CamelContextNameStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|core
operator|.
name|osgi
operator|.
name|OsgiCamelContextPublisher
operator|.
name|CONTEXT_NAME_PROPERTY
import|;
end_import

begin_comment
comment|/**  * In OSGi we want to use a {@link CamelContextNameStrategy} that finds a free name in the  * OSGi Service Registry to be used for auto assigned names.  *<p/>  * If there is a name clash in the OSGi registry, then a new candidate name is used by appending  * a unique counter.  */
end_comment

begin_class
DECL|class|OsgiCamelContextNameStrategy
specifier|public
class|class
name|OsgiCamelContextNameStrategy
implements|implements
name|CamelContextNameStrategy
block|{
DECL|field|CONTEXT_COUNTER
specifier|private
specifier|static
specifier|final
name|AtomicInteger
name|CONTEXT_COUNTER
init|=
operator|new
name|AtomicInteger
argument_list|(
literal|0
argument_list|)
decl_stmt|;
DECL|field|context
specifier|private
specifier|final
name|BundleContext
name|context
decl_stmt|;
DECL|field|prefix
specifier|private
specifier|final
name|String
name|prefix
init|=
literal|"camel"
decl_stmt|;
DECL|field|name
specifier|private
specifier|volatile
name|String
name|name
decl_stmt|;
DECL|method|OsgiCamelContextNameStrategy (BundleContext context)
specifier|public
name|OsgiCamelContextNameStrategy
parameter_list|(
name|BundleContext
name|context
parameter_list|)
block|{
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
if|if
condition|(
name|name
operator|==
literal|null
condition|)
block|{
name|name
operator|=
name|getNextName
argument_list|()
expr_stmt|;
block|}
return|return
name|name
return|;
block|}
annotation|@
name|Override
DECL|method|getNextName ()
specifier|public
specifier|synchronized
name|String
name|getNextName
parameter_list|()
block|{
comment|// false = do no check fist, but add the counter asap, so we have camel-1
return|return
name|OsgiNamingHelper
operator|.
name|findFreeCamelContextName
argument_list|(
name|context
argument_list|,
name|prefix
argument_list|,
name|CONTEXT_NAME_PROPERTY
argument_list|,
name|CONTEXT_COUNTER
argument_list|,
literal|false
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|isFixedName ()
specifier|public
name|boolean
name|isFixedName
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

