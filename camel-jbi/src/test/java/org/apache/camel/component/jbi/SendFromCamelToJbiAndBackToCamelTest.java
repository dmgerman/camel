begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jbi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jbi
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|servicemix
operator|.
name|tck
operator|.
name|ReceiverComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|servicemix
operator|.
name|tck
operator|.
name|MessageList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|servicemix
operator|.
name|tck
operator|.
name|SenderComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|servicemix
operator|.
name|jbi
operator|.
name|container
operator|.
name|ActivationSpec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|servicemix
operator|.
name|jbi
operator|.
name|resolver
operator|.
name|ServiceNameEndpointResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|servicemix
operator|.
name|jbi
operator|.
name|resolver
operator|.
name|URIResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|builder
operator|.
name|RouteBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|queue
operator|.
name|QueueEndpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|Exchange
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|messaging
operator|.
name|NormalizedMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Queue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|BlockingQueue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_comment
comment|/**  * @version $Revision$  */
end_comment

begin_class
DECL|class|SendFromCamelToJbiAndBackToCamelTest
specifier|public
class|class
name|SendFromCamelToJbiAndBackToCamelTest
extends|extends
name|JbiTestSupport
block|{
DECL|field|senderComponent
specifier|protected
name|SenderComponent
name|senderComponent
init|=
operator|new
name|SenderComponent
argument_list|()
decl_stmt|;
DECL|method|testCamelInvokingJbi ()
specifier|public
name|void
name|testCamelInvokingJbi
parameter_list|()
throws|throws
name|Exception
block|{
name|senderComponent
operator|.
name|sendMessages
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QueueEndpoint
name|receiverEndpoint
init|=
operator|(
name|QueueEndpoint
operator|)
name|camelContext
operator|.
name|resolveEndpoint
argument_list|(
literal|"queue:receiver"
argument_list|)
decl_stmt|;
name|BlockingQueue
argument_list|<
name|Exchange
argument_list|>
name|queue
init|=
name|receiverEndpoint
operator|.
name|getQueue
argument_list|()
decl_stmt|;
name|Exchange
name|exchange
init|=
name|queue
operator|.
name|poll
argument_list|(
literal|5
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Camel Receiver queue should have received an exchange by now"
argument_list|,
name|exchange
argument_list|)
expr_stmt|;
name|log
operator|.
name|debug
argument_list|(
literal|"Receiver got exchange: "
operator|+
name|exchange
operator|+
literal|" with body: "
operator|+
name|exchange
operator|.
name|getIn
argument_list|()
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createRoutes ()
specifier|protected
name|RouteBuilder
name|createRoutes
parameter_list|()
block|{
return|return
operator|new
name|RouteBuilder
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|()
block|{
comment|// no routes required
block|}
block|}
return|;
block|}
DECL|method|appendJbiActivationSpecs (List<ActivationSpec> activationSpecList)
specifier|protected
name|void
name|appendJbiActivationSpecs
parameter_list|(
name|List
argument_list|<
name|ActivationSpec
argument_list|>
name|activationSpecList
parameter_list|)
block|{
name|this
operator|.
name|startEndpointUri
operator|=
literal|"queue:receiver"
expr_stmt|;
name|ActivationSpec
name|activationSpec
init|=
operator|new
name|ActivationSpec
argument_list|()
decl_stmt|;
name|activationSpec
operator|.
name|setId
argument_list|(
literal|"jbiSender"
argument_list|)
expr_stmt|;
name|activationSpec
operator|.
name|setService
argument_list|(
operator|new
name|QName
argument_list|(
literal|"serviceNamespace"
argument_list|,
literal|"serviceA"
argument_list|)
argument_list|)
expr_stmt|;
name|activationSpec
operator|.
name|setEndpoint
argument_list|(
literal|"endpointA"
argument_list|)
expr_stmt|;
comment|// lets setup the sender to talk directly to camel
name|senderComponent
operator|.
name|setResolver
argument_list|(
operator|new
name|URIResolver
argument_list|(
literal|"camel:queue:receiver"
argument_list|)
argument_list|)
expr_stmt|;
name|activationSpec
operator|.
name|setComponent
argument_list|(
name|senderComponent
argument_list|)
expr_stmt|;
name|activationSpecList
operator|.
name|add
argument_list|(
name|activationSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|tearDown ()
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|camelContext
operator|.
name|deactivateEndpoints
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

