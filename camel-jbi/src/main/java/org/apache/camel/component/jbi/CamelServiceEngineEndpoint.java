begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jbi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jbi
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|component
operator|.
name|ComponentContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|messaging
operator|.
name|MessageExchange
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|messaging
operator|.
name|MessagingException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|messaging
operator|.
name|MessageExchange
operator|.
name|Role
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|CamelContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|servicemix
operator|.
name|MessageExchangeListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|servicemix
operator|.
name|common
operator|.
name|ExchangeProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|servicemix
operator|.
name|jbi
operator|.
name|container
operator|.
name|JBIContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|servicemix
operator|.
name|jbi
operator|.
name|framework
operator|.
name|ComponentContextImpl
import|;
end_import

begin_comment
comment|/**  * The endpoint in the service engine  * @version $Revision: 426415 $  */
end_comment

begin_class
DECL|class|CamelServiceEngineEndpoint
specifier|public
class|class
name|CamelServiceEngineEndpoint
extends|extends
name|org
operator|.
name|apache
operator|.
name|servicemix
operator|.
name|common
operator|.
name|Endpoint
block|{
DECL|field|SERVICE_NAME
specifier|private
specifier|static
specifier|final
name|QName
name|SERVICE_NAME
init|=
operator|new
name|QName
argument_list|(
literal|"http://camel.servicemix.org"
argument_list|,
literal|"CamelEndpointComponent"
argument_list|)
decl_stmt|;
DECL|field|camelContext
specifier|private
name|CamelContext
name|camelContext
decl_stmt|;
DECL|field|camelEndpointComponent
specifier|private
name|CamelEndpointComponent
name|camelEndpointComponent
decl_stmt|;
DECL|method|CamelServiceEngineEndpoint (CamelContext camelContext,JbiEndpoint jbiEndpoint)
specifier|public
name|CamelServiceEngineEndpoint
parameter_list|(
name|CamelContext
name|camelContext
parameter_list|,
name|JbiEndpoint
name|jbiEndpoint
parameter_list|)
block|{
name|this
operator|.
name|camelEndpointComponent
operator|=
operator|new
name|CamelEndpointComponent
argument_list|(
name|camelContext
argument_list|,
name|jbiEndpoint
argument_list|)
expr_stmt|;
name|this
operator|.
name|service
operator|=
name|SERVICE_NAME
expr_stmt|;
name|this
operator|.
name|endpoint
operator|=
name|jbiEndpoint
operator|.
name|getEndpointUri
argument_list|()
expr_stmt|;
block|}
DECL|method|getRole ()
specifier|public
name|Role
name|getRole
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
DECL|method|activate ()
specifier|public
name|void
name|activate
parameter_list|()
throws|throws
name|Exception
block|{
name|getContainer
argument_list|()
operator|.
name|activateComponent
argument_list|(
name|camelEndpointComponent
argument_list|,
name|camelEndpointComponent
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|deactivate ()
specifier|public
name|void
name|deactivate
parameter_list|()
throws|throws
name|Exception
block|{
name|getContainer
argument_list|()
operator|.
name|deactivateComponent
argument_list|(
name|camelEndpointComponent
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getProcessor ()
specifier|public
name|ExchangeProcessor
name|getProcessor
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
DECL|method|getContainer ()
specifier|public
name|JBIContainer
name|getContainer
parameter_list|()
block|{
name|ComponentContext
name|context
init|=
name|getServiceUnit
argument_list|()
operator|.
name|getComponent
argument_list|()
operator|.
name|getComponentContext
argument_list|()
decl_stmt|;
if|if
condition|(
name|context
operator|instanceof
name|ComponentContextImpl
condition|)
block|{
return|return
operator|(
operator|(
name|ComponentContextImpl
operator|)
name|context
operator|)
operator|.
name|getContainer
argument_list|()
return|;
block|}
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"LwContainer component can only be deployed in ServiceMix"
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

