begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE  * file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file  * to You under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the  * License. You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on  * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the  * specific language governing permissions and limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.camel.component.jbi
package|package
name|org
operator|.
name|apache
operator|.
name|camel
operator|.
name|component
operator|.
name|jbi
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|messaging
operator|.
name|MessageExchange
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jbi
operator|.
name|messaging
operator|.
name|NormalizedMessage
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|servicemix
operator|.
name|common
operator|.
name|endpoints
operator|.
name|ProviderEndpoint
import|;
end_import

begin_comment
comment|/**  * The endpoint in the service engine  *   * @version $Revision: 426415 $  */
end_comment

begin_class
DECL|class|CamelJbiEndpoint
specifier|public
class|class
name|CamelJbiEndpoint
extends|extends
name|ProviderEndpoint
block|{
DECL|field|SERVICE_NAME
specifier|private
specifier|static
specifier|final
name|QName
name|SERVICE_NAME
init|=
operator|new
name|QName
argument_list|(
literal|"http://camel.servicemix.org"
argument_list|,
literal|"CamelEndpointComponent"
argument_list|)
decl_stmt|;
DECL|field|jbiEndpoint
specifier|private
name|JbiEndpoint
name|jbiEndpoint
decl_stmt|;
DECL|field|binding
specifier|private
name|JbiBinding
name|binding
decl_stmt|;
DECL|method|CamelJbiEndpoint (JbiEndpoint jbiEndpoint, JbiBinding binding)
specifier|public
name|CamelJbiEndpoint
parameter_list|(
name|JbiEndpoint
name|jbiEndpoint
parameter_list|,
name|JbiBinding
name|binding
parameter_list|)
block|{
name|this
operator|.
name|jbiEndpoint
operator|=
name|jbiEndpoint
expr_stmt|;
name|this
operator|.
name|binding
operator|=
name|binding
expr_stmt|;
name|this
operator|.
name|service
operator|=
name|SERVICE_NAME
expr_stmt|;
name|this
operator|.
name|endpoint
operator|=
name|jbiEndpoint
operator|.
name|getEndpointUri
argument_list|()
expr_stmt|;
block|}
DECL|method|processInOnly (MessageExchange exchange,NormalizedMessage in)
specifier|protected
name|void
name|processInOnly
parameter_list|(
name|MessageExchange
name|exchange
parameter_list|,
name|NormalizedMessage
name|in
parameter_list|)
throws|throws
name|Exception
block|{
comment|// lets use the inbound processor to handle the exchange
name|JbiExchange
name|camelExchange
init|=
operator|new
name|JbiExchange
argument_list|(
name|jbiEndpoint
operator|.
name|getContext
argument_list|()
argument_list|,
name|binding
argument_list|,
name|exchange
argument_list|)
decl_stmt|;
name|jbiEndpoint
operator|.
name|getInboundProcessor
argument_list|()
operator|.
name|onExchange
argument_list|(
name|camelExchange
argument_list|)
expr_stmt|;
block|}
DECL|method|processInOut (MessageExchange exchange,NormalizedMessage in,NormalizedMessage out)
specifier|protected
name|void
name|processInOut
parameter_list|(
name|MessageExchange
name|exchange
parameter_list|,
name|NormalizedMessage
name|in
parameter_list|,
name|NormalizedMessage
name|out
parameter_list|)
throws|throws
name|Exception
block|{
comment|/*          * ToDo          */
block|}
block|}
end_class

end_unit

